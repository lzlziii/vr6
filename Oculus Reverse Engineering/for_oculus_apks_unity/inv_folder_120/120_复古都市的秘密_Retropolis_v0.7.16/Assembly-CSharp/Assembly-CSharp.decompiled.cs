using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Oculus.Platform;
using Oculus.Platform.Models;
using PInteractionSystem;
using PInteractionSystem.Retropolis;
using PeanutButton.Localization;
using PeanutButton.Util;
using QuillImporter;
using RootMotion.FinalIK;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VRKeys;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DroneScanner : MonoBehaviour, IPausable
{
	[Token(Token = "0x2000003")]
	public enum OnEnableBehaviour
	{
		[Token(Token = "0x400000D")]
		doNothing,
		[Token(Token = "0x400000E")]
		ScanInteractable,
		[Token(Token = "0x400000F")]
		ScanCamera
	}

	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A78", Offset = "0x642A78")]
	private sealed class <Scan>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneScanner <>4__this;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform scanTarget;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeRemaining>5__2;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000D")]
			[Address(RVA = "0x8CBDBC", Offset = "0x8CBDBC", VA = "0x8CBDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000F")]
			[Address(RVA = "0x8CBE04", Offset = "0x8CBE04", VA = "0x8CBE04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x8CBB18", Offset = "0x8CBB18", VA = "0x8CBB18")]
		[DebuggerHidden]
		public <Scan>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x8CBB44", Offset = "0x8CBB44", VA = "0x8CBB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x8CBB48", Offset = "0x8CBB48", VA = "0x8CBB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000E")]
		[Address(RVA = "0x8CBDC4", Offset = "0x8CBDC4", VA = "0x8CBDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scanHeightAnimation;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scanTime;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scanAmplitude;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scanWidth;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform scanTarget;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float sizeMultiplier;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public OnEnableBehaviour onEnableBehaviour;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotateZ;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool paused;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool lineRendererEnabledOnPaused;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xAA8940", Offset = "0xAA8940", VA = "0xAA8940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xAA899C", Offset = "0xAA899C", VA = "0xAA899C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xAA8A10", Offset = "0xAA8A10", VA = "0xAA8A10")]
	public void ScanInteractable()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xAA89BC", Offset = "0xAA89BC", VA = "0xAA89BC")]
	public void ScanCamera()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xAA8C88", Offset = "0xAA8C88", VA = "0xAA8C88")]
	public void ScanObject(GameObject o)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xAA8BF4", Offset = "0xAA8BF4", VA = "0xAA8BF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64F72C", Offset = "0x64F72C")]
	private IEnumerator Scan(Transform scanTarget)
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xAA8CD8", Offset = "0xAA8CD8", VA = "0xAA8CD8", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xAA8D40", Offset = "0xAA8D40", VA = "0xAA8D40", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xAA8D74", Offset = "0xAA8D74", VA = "0xAA8D74")]
	public DroneScanner()
	{
	}
}
[Token(Token = "0x2000005")]
public class DroneScannerProperties : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerOfMass;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sizeMultiplier;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xAA8D94", Offset = "0xAA8D94", VA = "0xAA8D94")]
	public DroneScannerProperties()
	{
	}
}
[Token(Token = "0x2000006")]
public class CenterPhilip : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] OculusRigControllers;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] openXRRigControllers;

	[Token(Token = "0x17000003")]
	public Transform[] controllers
	{
		[Token(Token = "0x6000011")]
		[Address(RVA = "0x88D610", Offset = "0x88D610", VA = "0x88D610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x88D618", Offset = "0x88D618", VA = "0x88D618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x88D764", Offset = "0x88D764", VA = "0x88D764")]
	public CenterPhilip()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x642A88", Offset = "0x642A88")]
public class FadeController : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float alpha;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x17000004")]
	public bool blocksRaycasts
	{
		[Token(Token = "0x6000014")]
		[Address(RVA = "0xAB33F8", Offset = "0xAB33F8", VA = "0xAB33F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xAB3414", Offset = "0xAB3414", VA = "0xAB3414")]
		set
		{
		}
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAB3434", Offset = "0xAB3434", VA = "0xAB3434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAB3490", Offset = "0xAB3490", VA = "0xAB3490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAB3568", Offset = "0xAB3568", VA = "0xAB3568")]
	public FadeController()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x642AE8", Offset = "0x642AE8")]
public class GameCamera : MonoBehaviour, IPausable
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask pauseLayerMsak;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableOnPause;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool enableOnResume;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera camera;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disablePointLightEffectOnPause;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool enableGreyScaleOnPayse;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool wasPointLightEnabled;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool paused;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xABA4AC", Offset = "0xABA4AC", VA = "0xABA4AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xABA508", Offset = "0xABA508", VA = "0xABA508", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xABA564", Offset = "0xABA564", VA = "0xABA564", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xABA5BC", Offset = "0xABA5BC", VA = "0xABA5BC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xABA660", Offset = "0xABA660", VA = "0xABA660")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xABA6EC", Offset = "0xABA6EC", VA = "0xABA6EC")]
	public GameCamera()
	{
	}
}
[Token(Token = "0x2000009")]
public class HandAudio : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip popIn;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip popOut;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool on;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF718B0", Offset = "0xF718B0", VA = "0xF718B0")]
	public void PlayPopIn()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF718D0", Offset = "0xF718D0", VA = "0xF718D0")]
	public void PlayPopOut()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF718F4", Offset = "0xF718F4", VA = "0xF718F4")]
	public HandAudio()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x642B48", Offset = "0x642B48")]
public class HoverConnection : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] instances;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BezierCurve curve;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected BezierPoint p0;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected BezierPoint p1;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform parent0;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform parent1;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve distanceFactor;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF79F7C", Offset = "0xF79F7C", VA = "0xF79F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF7A028", Offset = "0xF7A028", VA = "0xF7A028", Slot = "4")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF7A3E8", Offset = "0xF7A3E8", VA = "0xF7A3E8")]
	public HoverConnection()
	{
	}
}
[Token(Token = "0x200000B")]
public class HoverConnectionSound : MonoBehaviour
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip audioClip;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BezierCurve curve;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastCurveLengthRounded;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int factor;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float coolTime;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastClickTime;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF7A3F0", Offset = "0xF7A3F0", VA = "0xF7A3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF7A4E4", Offset = "0xF7A4E4", VA = "0xF7A4E4")]
	public HoverConnectionSound()
	{
	}
}
[Token(Token = "0x200000C")]
public class RigSelector : MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject oculusRig;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject openXRRig;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x137A42C", Offset = "0x137A42C", VA = "0x137A42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x137A4AC", Offset = "0x137A4AC", VA = "0x137A4AC")]
	public RigSelector()
	{
	}
}
[Token(Token = "0x200000D")]
public class SerializableDictionaryExample : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectColorDictionary m_objectColorDictionary;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringColorArrayDictionary m_objectColorArrayDictionary;

	[Token(Token = "0x17000005")]
	public IDictionary<string, string> StringStringDictionary
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x1380EA0", Offset = "0x1380EA0", VA = "0x1380EA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x1380EA8", Offset = "0x1380EA8", VA = "0x1380EA8")]
		set
		{
		}
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1380F0C", Offset = "0x1380F0C", VA = "0x1380F0C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x13810E8", Offset = "0x13810E8", VA = "0x13810E8")]
	public SerializableDictionaryExample()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class StringStringDictionary : SerializableDictionary<string, string>
{
	[Token(Token = "0x600002D")]
	[Address(RVA = "0x138C828", Offset = "0x138C828", VA = "0x138C828")]
	public StringStringDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class ObjectColorDictionary : SerializableDictionary<UnityEngine.Object, Color>
{
	[Token(Token = "0x600002E")]
	[Address(RVA = "0x9BA9E0", Offset = "0x9BA9E0", VA = "0x9BA9E0")]
	public ObjectColorDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public class StringGameObjectDict : SerializableDictionary<string, GameObject>
{
	[Token(Token = "0x600002F")]
	[Address(RVA = "0x138C7DC", Offset = "0x138C7DC", VA = "0x138C7DC")]
	public StringGameObjectDict()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class ColorArrayStorage : SerializableDictionary.Storage<Color[]>
{
	[Token(Token = "0x6000030")]
	[Address(RVA = "0x892BDC", Offset = "0x892BDC", VA = "0x892BDC")]
	public ColorArrayStorage()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class StringColorArrayDictionary : SerializableDictionary<string, Color[], ColorArrayStorage>
{
	[Token(Token = "0x6000031")]
	[Address(RVA = "0x138C790", Offset = "0x138C790", VA = "0x138C790")]
	public StringColorArrayDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class MyClass
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int i;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string str;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x13C6C48", Offset = "0x13C6C48", VA = "0x13C6C48")]
	public MyClass()
	{
	}
}
[Serializable]
[Token(Token = "0x2000014")]
public class QuaternionMyClassDictionary : SerializableDictionary<Quaternion, MyClass>
{
	[Token(Token = "0x6000033")]
	[Address(RVA = "0x137413C", Offset = "0x137413C", VA = "0x137413C")]
	public QuaternionMyClassDictionary()
	{
	}
}
[Token(Token = "0x2000015")]
public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey[] m_keys;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValueStorage[] m_values;

	[Token(Token = "0x6000034")]
	public SerializableDictionaryBase()
	{
	}

	[Token(Token = "0x6000035")]
	public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6000036")]
	protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000037")]
	protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

	[Token(Token = "0x6000038")]
	protected abstract TValue GetValue(TValueStorage[] storage, int i);

	[Token(Token = "0x6000039")]
	public void CopyFrom(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600003A")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600003B")]
	public void OnBeforeSerialize()
	{
	}
}
[Token(Token = "0x2000016")]
public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
{
	[Token(Token = "0x600003C")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600003D")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600003E")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600003F")]
	protected override TValue GetValue(TValue[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x6000040")]
	protected override void SetValue(TValue[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x2000017")]
public static class SerializableDictionary
{
	[Token(Token = "0x2000018")]
	public class Storage<T>
	{
		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x6000041")]
		public Storage()
		{
		}
	}
}
[Token(Token = "0x2000019")]
public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
{
	[Token(Token = "0x6000042")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x6000043")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6000044")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000045")]
	protected override TValue GetValue(TValueStorage[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x6000046")]
	protected override void SetValue(TValueStorage[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x200001A")]
public class PlayerHandAnim : MonoBehaviour
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool right;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x13728AC", Offset = "0x13728AC", VA = "0x13728AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1372908", Offset = "0x1372908", VA = "0x1372908")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x13729B8", Offset = "0x13729B8", VA = "0x13729B8")]
	public PlayerHandAnim()
	{
	}
}
[Token(Token = "0x200001B")]
public class DialogueBlockOtherInteraction : PB_MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject otherInteraction;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject inventoryInteractable;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PInteractionSystem.PAction closeInventory;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInNormalInspector]
	public bool changeInteraction;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x897B0C", Offset = "0x897B0C", VA = "0x897B0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x897C04", Offset = "0x897C04", VA = "0x897C04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x897E10", Offset = "0x897E10", VA = "0x897E10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x897E1C", Offset = "0x897E1C", VA = "0x897E1C")]
	public DialogueBlockOtherInteraction()
	{
	}
}
[Token(Token = "0x200001C")]
public class PInteractorSound : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PInteractionSystem.Retropolis.PInteractor p;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audio;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource highlightAudio;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip press;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip release;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip hover;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip block;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool pressed;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PInteractionSystem.Retropolis.PInteractable oldSelected;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x13A80A4", Offset = "0x13A80A4", VA = "0x13A80A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x13A8100", Offset = "0x13A8100", VA = "0x13A8100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x13A8340", Offset = "0x13A8340", VA = "0x13A8340")]
	public PInteractorSound()
	{
	}
}
[Token(Token = "0x200001D")]
public class PInteractorVisualizer : MonoBehaviour, IPausable
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PInteractionSystem.Retropolis.PInteractor p;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool paused;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] hitPointRenderers;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrailRenderer hitPointTrailRender;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator hitPointAnimator;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color PressedColor;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color notPressedColor;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PInteractionSystem.Retropolis.PInteractable oldSelected;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool oldBlocked;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MonoBehaviour highLightObject;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PInteractionSystem.PAction.Verb idle;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public PInteractionSystem.PAction.Verb blocked;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PInteractionSystem.PAction.Verb use;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve pointerSizeOverDistance;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool firstUpdateHitPoint;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x13A8348", Offset = "0x13A8348", VA = "0x13A8348", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x13A8354", Offset = "0x13A8354", VA = "0x13A8354", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x13A835C", Offset = "0x13A835C", VA = "0x13A835C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x13A8400", Offset = "0x13A8400", VA = "0x13A8400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x13A8C74", Offset = "0x13A8C74", VA = "0x13A8C74")]
	public void UpdateHighlightObject()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x13A8FB0", Offset = "0x13A8FB0", VA = "0x13A8FB0")]
	public void UpdateHighlightPress()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x13A9250", Offset = "0x13A9250", VA = "0x13A9250")]
	public void SetHighLightBlocked()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x13A92E4", Offset = "0x13A92E4", VA = "0x13A92E4")]
	public PInteractorVisualizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x642BB8", Offset = "0x642BB8")]
public class BezierCurve : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resolution;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644A40", Offset = "0x644A40")]
	private bool <dirty>k__BackingField;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color drawColor;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _close;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _length;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BezierPoint[] points;

	[Token(Token = "0x17000006")]
	public bool dirty
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0xC278C8", Offset = "0xC278C8", VA = "0xC278C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F7DC", Offset = "0x64F7DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005A")]
		[Address(RVA = "0xC278D0", Offset = "0xC278D0", VA = "0xC278D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F7EC", Offset = "0x64F7EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public bool close
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0xC278DC", Offset = "0xC278DC", VA = "0xC278DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005C")]
		[Address(RVA = "0xC278E4", Offset = "0xC278E4", VA = "0xC278E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public BezierPoint Item
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0xC2790C", Offset = "0xC2790C", VA = "0xC2790C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public int pointCount
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0xC27948", Offset = "0xC27948", VA = "0xC27948")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000A")]
	public float length
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0xC27964", Offset = "0xC27964", VA = "0xC27964")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xC27B58", Offset = "0xC27B58", VA = "0xC27B58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xC27D18", Offset = "0xC27D18", VA = "0xC27D18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xC27D24", Offset = "0xC27D24", VA = "0xC27D24")]
	public void AddPoint(BezierPoint point)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xC27E14", Offset = "0xC27E14", VA = "0xC27E14")]
	public BezierPoint AddPointAt(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xC2802C", Offset = "0xC2802C", VA = "0xC2802C")]
	public void RemovePoint(BezierPoint point)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xC28118", Offset = "0xC28118", VA = "0xC28118")]
	public BezierPoint[] GetAnchorPoints()
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xC28194", Offset = "0xC28194", VA = "0xC28194")]
	public Vector3 GetPointAt(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xC285B4", Offset = "0xC285B4", VA = "0xC285B4")]
	public int GetPointIndex(BezierPoint point)
	{
		return default(int);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xC28684", Offset = "0xC28684", VA = "0xC28684")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xC27C40", Offset = "0xC27C40", VA = "0xC27C40")]
	public static void DrawCurve(BezierPoint p1, BezierPoint p2, int resolution)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xC283C4", Offset = "0xC283C4", VA = "0xC283C4")]
	public static Vector3 GetPoint(BezierPoint p1, BezierPoint p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xC2892C", Offset = "0xC2892C", VA = "0xC2892C")]
	public Vector3 GetTangentAt(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xC28700", Offset = "0xC28700", VA = "0xC28700")]
	public static Vector3 GetCubicCurvePoint(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xC28844", Offset = "0xC28844", VA = "0xC28844")]
	public static Vector3 GetQuadraticCurvePoint(Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xC28904", Offset = "0xC28904", VA = "0xC28904")]
	public static Vector3 GetLinearPoint(Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xC289C4", Offset = "0xC289C4", VA = "0xC289C4")]
	public static Vector3 GetPoint(float t, params Vector3[] points)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC27A5C", Offset = "0xC27A5C", VA = "0xC27A5C")]
	public static float ApproximateLength(BezierPoint p1, BezierPoint p2, int resolution = 10)
	{
		return default(float);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC28B04", Offset = "0xC28B04", VA = "0xC28B04")]
	private static int BinomialCoefficient(int i, int n)
	{
		return default(int);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xC28BA4", Offset = "0xC28BA4", VA = "0xC28BA4")]
	private static int Factoral(int i)
	{
		return default(int);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xC28BD8", Offset = "0xC28BD8", VA = "0xC28BD8")]
	public BezierCurve()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class BezierPoint : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum HandleStyle
	{
		[Token(Token = "0x400006B")]
		Connected,
		[Token(Token = "0x400006C")]
		Broken,
		[Token(Token = "0x400006D")]
		None
	}

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BezierCurve _curve;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandleStyle handleStyle;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 _handle1;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 _handle2;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPosition;

	[Token(Token = "0x1700000B")]
	public BezierCurve curve
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0xC28C58", Offset = "0xC28C58", VA = "0xC28C58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xC27F7C", Offset = "0xC27F7C", VA = "0xC27F7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public Vector3 position
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0xC283A0", Offset = "0xC283A0", VA = "0xC283A0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000077")]
		[Address(RVA = "0xC28C60", Offset = "0xC28C60", VA = "0xC28C60")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Vector3 localPosition
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0xC28CAC", Offset = "0xC28CAC", VA = "0xC28CAC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0xC28CD0", Offset = "0xC28CD0", VA = "0xC28CD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public Vector3 handle1
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0xC28D1C", Offset = "0xC28D1C", VA = "0xC28D1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0xC28D28", Offset = "0xC28D28", VA = "0xC28D28")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector3 globalHandle1
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0xC286C8", Offset = "0xC286C8", VA = "0xC286C8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600007D")]
		[Address(RVA = "0xC28DD0", Offset = "0xC28DD0", VA = "0xC28DD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Vector3 handle2
	{
		[Token(Token = "0x600007E")]
		[Address(RVA = "0xC28E30", Offset = "0xC28E30", VA = "0xC28E30")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600007F")]
		[Address(RVA = "0xC28E3C", Offset = "0xC28E3C", VA = "0xC28E3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public Vector3 globalHandle2
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0xC28690", Offset = "0xC28690", VA = "0xC28690")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000081")]
		[Address(RVA = "0xC28EE4", Offset = "0xC28EE4", VA = "0xC28EE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xC28F44", Offset = "0xC28F44", VA = "0xC28F44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC28FCC", Offset = "0xC28FCC", VA = "0xC28FCC")]
	public BezierPoint()
	{
	}
}
[Token(Token = "0x2000021")]
[ExecuteInEditMode]
public class FollowBezierCurve : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644AA0", Offset = "0x644AA0")]
	public float t;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool rotate;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierCurve curve;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xAB724C", Offset = "0xAB724C", VA = "0xAB724C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xAB7344", Offset = "0xAB7344", VA = "0xAB7344")]
	public FollowBezierCurve()
	{
	}
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
public class FogController : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fogDensity;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldDensity;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fogColor;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xAB71BC", Offset = "0xAB71BC", VA = "0xAB71BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xAB71F0", Offset = "0xAB71F0", VA = "0xAB71F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xAB7218", Offset = "0xAB7218", VA = "0xAB7218")]
	public FogController()
	{
	}
}
[Token(Token = "0x2000023")]
public class ItemsPhysicalCombination : MonoBehaviour, IReplaceableReferences
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PInteractionSystem.Retropolis.PInteractable interactableA;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PInteractionSystem.Retropolis.PInteractable interactableB;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform childA;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform childB;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool releaseItem_A_OnCombine;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool releaseItem_B_OnCombine;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x13B6304", Offset = "0x13B6304", VA = "0x13B6304")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x13B6AB0", Offset = "0x13B6AB0", VA = "0x13B6AB0", Slot = "4")]
	public Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x13B6C0C", Offset = "0x13B6C0C", VA = "0x13B6C0C", Slot = "5")]
	public void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x13B6EA4", Offset = "0x13B6EA4", VA = "0x13B6EA4")]
	public ItemsPhysicalCombination()
	{
	}
}
[Token(Token = "0x2000024")]
public class ObjectProximity : MonoBehaviour, IPausable
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SceneObject;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string playerObjectName;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject condition;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float threshold;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool LessThanThreshold;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool pause;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x9BCDA4", Offset = "0x9BCDA4", VA = "0x9BCDA4", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x9BCDB0", Offset = "0x9BCDB0", VA = "0x9BCDB0", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x9BCDB8", Offset = "0x9BCDB8", VA = "0x9BCDB8", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x9BCEC4", Offset = "0x9BCEC4", VA = "0x9BCEC4")]
	public ObjectProximity()
	{
	}
}
[Token(Token = "0x2000025")]
public class SetTrackingMode : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackingOriginModeFlags desiredTrackingOriginMode;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRInputSubsystem> inputSubsystems;

	[Token(Token = "0x17000012")]
	public TrackingOriginModeFlags trackingOriginMode
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x1381364", Offset = "0x1381364", VA = "0x1381364")]
		get
		{
			return default(TrackingOriginModeFlags);
		}
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x138136C", Offset = "0x138136C", VA = "0x138136C")]
		set
		{
		}
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1381374", Offset = "0x1381374", VA = "0x1381374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x13814C4", Offset = "0x13814C4", VA = "0x13814C4")]
	public SetTrackingMode()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x642C24", Offset = "0x642C24")]
public class ObjectiveUI : LocalizedObject
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ObjectiveUI instance;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string localizationKey;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro textObject;

	[Token(Token = "0x4000086")]
	private const int maxHebrewLineLength = 20;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x9BCF34", Offset = "0x9BCF34", VA = "0x9BCF34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x9BCFD0", Offset = "0x9BCFD0", VA = "0x9BCFD0")]
	public static void SetText(string _localizationKey)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x9BD1F4", Offset = "0x9BD1F4", VA = "0x9BD1F4", Slot = "4")]
	public override void SetLanguage()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x9BD258", Offset = "0x9BD258", VA = "0x9BD258")]
	public ObjectiveUI()
	{
	}
}
[Token(Token = "0x2000027")]
public class PSetObjectiveCommand : PInstantCommand
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string objectiveLocalizationKey;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x13ADA94", Offset = "0x13ADA94", VA = "0x13ADA94", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x13ADAFC", Offset = "0x13ADAFC", VA = "0x13ADAFC", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x13ADB7C", Offset = "0x13ADB7C", VA = "0x13ADB7C", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x13ADBC4", Offset = "0x13ADBC4", VA = "0x13ADBC4", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x13ADBC8", Offset = "0x13ADBC8", VA = "0x13ADBC8")]
	public PSetObjectiveCommand()
	{
	}
}
[Token(Token = "0x2000028")]
public class FitInventoryContainer : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float staticRatio;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inInventory;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 localScale;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 oldLocalScale;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 translation;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rotation;

	[Token(Token = "0x17000013")]
	public bool InInventory
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xAB5790", Offset = "0xAB5790", VA = "0xAB5790")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xAB5798", Offset = "0xAB5798", VA = "0xAB5798")]
	public void CalculateScale()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xAB58F4", Offset = "0xAB58F4", VA = "0xAB58F4")]
	public void Fit(Collider containterCollider)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xAB5A5C", Offset = "0xAB5A5C", VA = "0xAB5A5C")]
	public void CosmeticFit()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xAB5BC8", Offset = "0xAB5BC8", VA = "0xAB5BC8")]
	public void Unfit(Collider containterCollider)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xAB5C88", Offset = "0xAB5C88", VA = "0xAB5C88")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xAB5D58", Offset = "0xAB5D58", VA = "0xAB5D58")]
	public FitInventoryContainer()
	{
	}
}
[Token(Token = "0x2000029")]
public class InventoryMovement : MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x644AD0", Offset = "0x644AD0")]
	[SerializeField]
	private bool isHeightRelativeToPlayer;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float height;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x644B2C", Offset = "0x644B2C")]
	[SerializeField]
	private bool overrideMovementParameters;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644B78", Offset = "0x644B78")]
	public float overrideRadius;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644BB0", Offset = "0x644BB0")]
	public float overrideStickinessLength;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644BE8", Offset = "0x644BE8")]
	public float overrideStickinessAngle;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644C20", Offset = "0x644C20")]
	public float overrideStickinessFactor;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float defaultRadius;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float defaultStickinessLength;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defaultStickinessAngle;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float defualtStickinessFactor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float radius;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float stickinessLength;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float stickinessAngle;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float stickinessFactor;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider[] allowedFloatingAreas;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 targetPosition;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 targetRight;

	[Token(Token = "0x17000014")]
	private Vector3 idealOrientationRight
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x13B5B24", Offset = "0x13B5B24", VA = "0x13B5B24")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x13B5844", Offset = "0x13B5844", VA = "0x13B5844")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x13B58A4", Offset = "0x13B58A4", VA = "0x13B58A4")]
	private void SetMovementParams()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x13B5910", Offset = "0x13B5910", VA = "0x13B5910")]
	private Vector3 idealPosition(out bool outOfBounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x13B5BC4", Offset = "0x13B5BC4", VA = "0x13B5BC4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x13B5EEC", Offset = "0x13B5EEC", VA = "0x13B5EEC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x13B5F78", Offset = "0x13B5F78", VA = "0x13B5F78")]
	public InventoryMovement()
	{
	}
}
[Token(Token = "0x200002A")]
public class PSetInventoryPagesCommand : PInstantCommand
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644C58", Offset = "0x644C58")]
	public GameObject firstPage;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644C90", Offset = "0x644C90")]
	public GameObject secondPage;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextArrow;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x644CC8", Offset = "0x644CC8")]
	public Transform[] secondPageContent;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x13AD1BC", Offset = "0x13AD1BC", VA = "0x13AD1BC", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x13AD318", Offset = "0x13AD318", VA = "0x13AD318", Slot = "4")]
	public override bool isLegal(out List<string> erros)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x13AD4E4", Offset = "0x13AD4E4", VA = "0x13AD4E4", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x13AD52C", Offset = "0x13AD52C", VA = "0x13AD52C", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x13AD530", Offset = "0x13AD530", VA = "0x13AD530")]
	public PSetInventoryPagesCommand()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class GameObjectStateClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectStatePlayable template;

	[Token(Token = "0x17000015")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xABAB24", Offset = "0xABAB24", VA = "0xABAB24", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xABAB2C", Offset = "0xABAB2C", VA = "0xABAB2C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xABABE0", Offset = "0xABABE0", VA = "0xABABE0")]
	public GameObjectStateClip()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class GameObjectStatePlayable : PlayableBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string stateName;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstFrameHappened;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xABAC58", Offset = "0xABAC58", VA = "0xABAC58", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xABAD5C", Offset = "0xABAD5C", VA = "0xABAD5C", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xABAC50", Offset = "0xABAC50", VA = "0xABAC50")]
	public GameObjectStatePlayable()
	{
	}
}
[Token(Token = "0x200002D")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x642C84", Offset = "0x642C84")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x642C84", Offset = "0x642C84")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x642C84", Offset = "0x642C84")]
public class GameObjectStateTrack : TrackAsset
{
	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xABAD94", Offset = "0xABAD94", VA = "0xABAD94")]
	public void Skip(PInteractionSystem.GameObjectState gameObjectState)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xABB008", Offset = "0xABB008", VA = "0xABB008")]
	public GameObjectStateTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class PCallActionClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<PInteractionSystem.PAction> action;

	[Token(Token = "0x17000016")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x13A1AE4", Offset = "0x13A1AE4", VA = "0x13A1AE4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x13A1AEC", Offset = "0x13A1AEC", VA = "0x13A1AEC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x13A1C24", Offset = "0x13A1C24", VA = "0x13A1C24")]
	public PCallActionClip()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class PCallActionPlayable : PlayableBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PInteractionSystem.PAction action;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstFrameHappened;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x13A1C2C", Offset = "0x13A1C2C", VA = "0x13A1C2C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x13A1CE8", Offset = "0x13A1CE8", VA = "0x13A1CE8", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x13A1C1C", Offset = "0x13A1C1C", VA = "0x13A1C1C")]
	public PCallActionPlayable()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x642D34", Offset = "0x642D34")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x642D34", Offset = "0x642D34")]
public class PCallActionTrack : TrackAsset
{
	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x13A1D2C", Offset = "0x13A1D2C", VA = "0x13A1D2C")]
	public void Skip(PlayableDirector playableDirector)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x13A20C8", Offset = "0x13A20C8", VA = "0x13A20C8")]
	private static int compareClipsByStartTime(TimelineClip a, TimelineClip b)
	{
		return default(int);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x13A2108", Offset = "0x13A2108", VA = "0x13A2108")]
	public PCallActionTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class PopHandClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PopHandPlayable template;

	[Token(Token = "0x17000017")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x13729C0", Offset = "0x13729C0", VA = "0x13729C0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x13729C8", Offset = "0x13729C8", VA = "0x13729C8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1372A7C", Offset = "0x1372A7C", VA = "0x1372A7C")]
	public PopHandClip()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class PopHandPlayable : PlayableBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool firstFrameHappened;

	[Token(Token = "0x17000018")]
	private Child hand
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x1372AF4", Offset = "0x1372AF4", VA = "0x1372AF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	private Child otherHand
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x1372C70", Offset = "0x1372C70", VA = "0x1372C70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1372DEC", Offset = "0x1372DEC", VA = "0x1372DEC", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x137319C", Offset = "0x137319C", VA = "0x137319C", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1372AEC", Offset = "0x1372AEC", VA = "0x1372AEC")]
	public PopHandPlayable()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x642DB0", Offset = "0x642DB0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x642DB0", Offset = "0x642DB0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x642DB0", Offset = "0x642DB0")]
public class PopHandTrack : TrackAsset
{
	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1373358", Offset = "0x1373358", VA = "0x1373358")]
	public static void Skip()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x137348C", Offset = "0x137348C", VA = "0x137348C")]
	public PopHandTrack()
	{
	}
}
[Token(Token = "0x2000034")]
public class PlatformSettings : MonoBehaviour
{
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642E60", Offset = "0x642E60")]
	private sealed class <Set>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformSettings <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xAA0078", Offset = "0xAA0078", VA = "0xAA0078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0xAA00C0", Offset = "0xAA00C0", VA = "0xAA00C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xA9FF3C", Offset = "0xA9FF3C", VA = "0xA9FF3C")]
		[DebuggerHidden]
		public <Set>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xA9FF68", Offset = "0xA9FF68", VA = "0xA9FF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xA9FF6C", Offset = "0xA9FF6C", VA = "0xA9FF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xAA0080", Offset = "0xAA0080", VA = "0xAA0080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642E70", Offset = "0x642E70")]
	private sealed class <InitializeVR>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformSettings <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0xA9FEEC", Offset = "0xA9FEEC", VA = "0xA9FEEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0xA9FF34", Offset = "0xA9FF34", VA = "0xA9FF34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xA9FD34", Offset = "0xA9FD34", VA = "0xA9FD34")]
		[DebuggerHidden]
		public <InitializeVR>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xA9FD60", Offset = "0xA9FD60", VA = "0xA9FD60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xA9FD64", Offset = "0xA9FD64", VA = "0xA9FD64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xA9FEF4", Offset = "0xA9FEF4", VA = "0xA9FEF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OculusManager;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SteamManager;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatformSettings instance;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x136FFC4", Offset = "0x136FFC4", VA = "0x136FFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1370018", Offset = "0x1370018", VA = "0x1370018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64F7FC", Offset = "0x64F7FC")]
	public IEnumerator Set()
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1370090", Offset = "0x1370090", VA = "0x1370090")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64F85C", Offset = "0x64F85C")]
	private IEnumerator InitializeVR()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1370108", Offset = "0x1370108", VA = "0x1370108")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x13702CC", Offset = "0x13702CC", VA = "0x13702CC")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1370310", Offset = "0x1370310", VA = "0x1370310")]
	private void HandleMissingSDK()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x137038C", Offset = "0x137038C", VA = "0x137038C")]
	public PlatformSettings()
	{
	}
}
[Token(Token = "0x2000037")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x2000038")]
	public enum Mode
	{
		[Token(Token = "0x40000C2")]
		OutlineAll,
		[Token(Token = "0x40000C3")]
		OutlineVisible,
		[Token(Token = "0x40000C4")]
		OutlineHidden,
		[Token(Token = "0x40000C5")]
		OutlineAndSilhouette,
		[Token(Token = "0x40000C6")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000039")]
	private class ListVector3
	{
		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xA9AA24", Offset = "0xA9AA24", VA = "0xA9AA24")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200003A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642E90", Offset = "0x642E90")]
	private sealed class <>c
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xA9A92C", Offset = "0xA9A92C", VA = "0xA9A92C")]
		public <>c()
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xA9A934", Offset = "0xA9A934", VA = "0xA9A934")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xA9A9C0", Offset = "0xA9A9C0", VA = "0xA9A9C0")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644D40", Offset = "0x644D40")]
	[SerializeField]
	private float outlineWidth;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x644D80", Offset = "0x644D80")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x644D80", Offset = "0x644D80")]
	private bool precomputeOutline;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700001E")]
	public Mode OutlineMode
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x9BDF24", Offset = "0x9BDF24", VA = "0x9BDF24")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x9BDF2C", Offset = "0x9BDF2C", VA = "0x9BDF2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public Color OutlineColor
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x9BDF3C", Offset = "0x9BDF3C", VA = "0x9BDF3C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x9BDF48", Offset = "0x9BDF48", VA = "0x9BDF48")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public float OutlineWidth
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x9BDF5C", Offset = "0x9BDF5C", VA = "0x9BDF5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x9BDF64", Offset = "0x9BDF64", VA = "0x9BDF64")]
		set
		{
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x9BDF74", Offset = "0x9BDF74", VA = "0x9BDF74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x9BE418", Offset = "0x9BE418", VA = "0x9BE418")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x9BE53C", Offset = "0x9BE53C", VA = "0x9BE53C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x9BE81C", Offset = "0x9BE81C", VA = "0x9BE81C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x9BE9FC", Offset = "0x9BE9FC", VA = "0x9BE9FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x9BEB20", Offset = "0x9BEB20", VA = "0x9BEB20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x9BE634", Offset = "0x9BE634", VA = "0x9BE634")]
	private void Bake()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x9BE120", Offset = "0x9BE120", VA = "0x9BE120")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x9BEB94", Offset = "0x9BEB94", VA = "0x9BEB94")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x9BE830", Offset = "0x9BE830", VA = "0x9BE830")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x9BF668", Offset = "0x9BF668", VA = "0x9BF668")]
	public Outline()
	{
	}
}
[Token(Token = "0x200003B")]
public class SimplexNoiseGenerator
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] A;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float s;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float u;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float v;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float w;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int i;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int j;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int k;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float onethird;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float onesixth;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] T;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x138486C", Offset = "0x138486C", VA = "0x138486C")]
	public SimplexNoiseGenerator()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1384988", Offset = "0x1384988", VA = "0x1384988")]
	public SimplexNoiseGenerator(string seed)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1384BC4", Offset = "0x1384BC4", VA = "0x1384BC4")]
	public SimplexNoiseGenerator(int[] seed)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1384C54", Offset = "0x1384C54", VA = "0x1384C54")]
	public string GetSeed()
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1384D30", Offset = "0x1384D30", VA = "0x1384D30")]
	public float coherentNoise(float x, float y, float z, int octaves = 1, int multiplier = 25, float amplitude = 0.5f, float lacunarity = 2f, float persistence = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1384FCC", Offset = "0x1384FCC", VA = "0x1384FCC")]
	public int getDensity(Vector3 loc)
	{
		return default(int);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1384DD8", Offset = "0x1384DD8", VA = "0x1384DD8")]
	public float noise(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x138505C", Offset = "0x138505C", VA = "0x138505C")]
	private float kay(int a)
	{
		return default(float);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1385230", Offset = "0x1385230", VA = "0x1385230")]
	private int shuffle(int i, int j, int k)
	{
		return default(int);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x138536C", Offset = "0x138536C", VA = "0x138536C")]
	private int b(int i, int j, int k, int B)
	{
		return default(int);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x13853C4", Offset = "0x13853C4", VA = "0x13853C4")]
	private int b(int N, int B)
	{
		return default(int);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1385030", Offset = "0x1385030", VA = "0x1385030")]
	private int fastfloor(float n)
	{
		return default(int);
	}
}
[Token(Token = "0x200003C")]
public class Texture3DNoiseGenerator : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x644E60", Offset = "0x644E60")]
	private int _textureSize;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private TextureFormat _format;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644EBC", Offset = "0x644EBC")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x644EBC", Offset = "0x644EBC")]
	private int _octaves;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644F20", Offset = "0x644F20")]
	[SerializeField]
	private int _multiplier;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644F60", Offset = "0x644F60")]
	[SerializeField]
	private float _amplitude;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644FA0", Offset = "0x644FA0")]
	[SerializeField]
	private float _lacunarity;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x644FE4", Offset = "0x644FE4")]
	[SerializeField]
	private float _persistence;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x138FFC8", Offset = "0x138FFC8", VA = "0x138FFC8")]
	public Texture3D GenerateNoise()
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x13901B4", Offset = "0x13901B4", VA = "0x13901B4")]
	public Texture3DNoiseGenerator()
	{
	}
}
[Token(Token = "0x200003D")]
[ExecuteInEditMode]
public class AudioTransferColorEffect : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color fromColor;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color toColor;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color keyColor;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useFromColorAsKeyColor;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer[] renderers;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audio;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float updateStep;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int sampleDataLength;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float voiceFactor;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float currentUpdateTime;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float clipLoudness;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] clipSampleData;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int fromColorID;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int toColorID;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int keyColorID;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xC22FD8", Offset = "0xC22FD8", VA = "0xC22FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC230F8", Offset = "0xC230F8", VA = "0xC230F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC2332C", Offset = "0xC2332C", VA = "0xC2332C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC23238", Offset = "0xC23238", VA = "0xC23238")]
	private void setRenderer()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC23334", Offset = "0xC23334", VA = "0xC23334")]
	public AudioTransferColorEffect()
	{
	}
}
[Token(Token = "0x200003E")]
[ExecuteInEditMode]
public class QuillColorize : PB_MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool updateColorize;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color color;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color lastColor;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool checkForRenderersOnStart;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int colorID;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] disableOnStart;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1374188", Offset = "0x1374188", VA = "0x1374188")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x137442C", Offset = "0x137442C", VA = "0x137442C")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x13742F8", Offset = "0x13742F8", VA = "0x13742F8")]
	private void SetRenderers(Color c)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x137447C", Offset = "0x137447C", VA = "0x137447C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x13744D8", Offset = "0x13744D8", VA = "0x13744D8")]
	public QuillColorize()
	{
	}
}
[Token(Token = "0x200003F")]
[ExecuteInEditMode]
public class QuillDisplacementEffect : MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture3D displacementMap;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scale;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amplitude;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int mapID;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int scaleID;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int amplitudeID;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int speedID;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x13744E8", Offset = "0x13744E8", VA = "0x13744E8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1374624", Offset = "0x1374624", VA = "0x1374624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x13746CC", Offset = "0x13746CC", VA = "0x13746CC")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x13747A4", Offset = "0x13747A4", VA = "0x13747A4")]
	public QuillDisplacementEffect()
	{
	}
}
[Token(Token = "0x2000040")]
public class QuillHighLightEffect : MonoBehaviour
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Color color;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer[] spriteRenderers;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Color[] spriteRenderersInitColors;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float defaultFactor;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool fadeOut;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float factor;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int highLightColorID;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x13747AC", Offset = "0x13747AC", VA = "0x13747AC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1374974", Offset = "0x1374974", VA = "0x1374974")]
	public void SetMaterialColors(Color c)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1374BC8", Offset = "0x1374BC8", VA = "0x1374BC8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1374A24", Offset = "0x1374A24", VA = "0x1374A24")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1374C3C", Offset = "0x1374C3C", VA = "0x1374C3C")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1374A64", Offset = "0x1374A64", VA = "0x1374A64")]
	protected void SetRenderers(Color c)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1374C70", Offset = "0x1374C70", VA = "0x1374C70")]
	public QuillHighLightEffect()
	{
	}
}
[Token(Token = "0x2000041")]
[ExecuteInEditMode]
public class QuillHologramEffect : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 origin;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector4 originColor;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4 _origin;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 _originColor;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int originID;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int originColorID;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float projectionStripeDensity;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float projectionStripeSpeed;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float projectionOpacity;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1374CB4", Offset = "0x1374CB4", VA = "0x1374CB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1374EF4", Offset = "0x1374EF4", VA = "0x1374EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1374E04", Offset = "0x1374E04", VA = "0x1374E04")]
	private void SetValues()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1374F64", Offset = "0x1374F64", VA = "0x1374F64")]
	public QuillHologramEffect()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x642EE0", Offset = "0x642EE0")]
[ExecuteInEditMode]
public class QuillLightMaskEffect : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light l;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _PointLightMaskPositionID;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _PointLightMaskRangeID;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _ENABLEPOINTLIGHTMASK_ON_ID;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1374F80", Offset = "0x1374F80", VA = "0x1374F80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1375024", Offset = "0x1375024", VA = "0x1375024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x13750F8", Offset = "0x13750F8", VA = "0x13750F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1375140", Offset = "0x1375140", VA = "0x1375140")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1375188", Offset = "0x1375188", VA = "0x1375188")]
	public QuillLightMaskEffect()
	{
	}
}
[Token(Token = "0x2000043")]
[ExecuteInEditMode]
public class QuillUIMaskEffect : MonoBehaviour
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer[] renderers;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool update;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform t1;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform t2;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int minID;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxID;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float minY;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float maxY;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1375190", Offset = "0x1375190", VA = "0x1375190")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x137542C", Offset = "0x137542C", VA = "0x137542C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x13752FC", Offset = "0x13752FC", VA = "0x13752FC")]
	private void SetRenderers(Transform t1, Transform t2)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x137551C", Offset = "0x137551C", VA = "0x137551C")]
	public void UpdateText(float deltaY, TextMeshPro[] textObjects)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1375618", Offset = "0x1375618", VA = "0x1375618")]
	public void UpdateSprite(float deltaY, SpriteRenderer[] spriteRenderers)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1375704", Offset = "0x1375704", VA = "0x1375704")]
	public QuillUIMaskEffect()
	{
	}
}
[Token(Token = "0x2000044")]
public class ObjectPersistBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _persist;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x9BC9FC", Offset = "0x9BC9FC", VA = "0x9BC9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x9BCB40", Offset = "0x9BCB40", VA = "0x9BCB40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x9BCC84", Offset = "0x9BCC84", VA = "0x9BCC84")]
	public void Persist()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x9BCC90", Offset = "0x9BCC90", VA = "0x9BCC90")]
	private void OnSceneEnd()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x9BCD9C", Offset = "0x9BCD9C", VA = "0x9BCD9C")]
	public ObjectPersistBehaviour()
	{
	}
}
[Token(Token = "0x2000045")]
[ExecuteInEditMode]
public class PlayerConfiguration : MonoBehaviour, IPausable
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645028", Offset = "0x645028")]
	public RuntimeAnimatorController handsAnimationController;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x645060", Offset = "0x645060")]
	public AudioMixerSnapshot OpeningAudioMixerSnapshot;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioMixerSnapshot currentlyUsedSnapShot;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waitToFade;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeInTime;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource playerAudioSource;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ActivePlayerObjects;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool setActiveOnLoad;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool recenter;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool automaticFadeIn;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool showPlayer;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PlayerConfiguration instance;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float boundsRadius;

	[Token(Token = "0x17000021")]
	private static Transform headAnchor
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x137040C", Offset = "0x137040C", VA = "0x137040C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public Transform playerParent
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1370544", Offset = "0x1370544", VA = "0x1370544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public static bool outOfBounds
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x137054C", Offset = "0x137054C", VA = "0x137054C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public static float distanceFromBounds
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x13706E4", Offset = "0x13706E4", VA = "0x13706E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1370888", Offset = "0x1370888", VA = "0x1370888")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1370BA8", Offset = "0x1370BA8", VA = "0x1370BA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1370CA4", Offset = "0x1370CA4", VA = "0x1370CA4")]
	public void BeforeStartScene()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1370F24", Offset = "0x1370F24", VA = "0x1370F24")]
	public void AfterStartScene(float playerAngle)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1371268", Offset = "0x1371268", VA = "0x1371268")]
	public void SetPlayer()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1371270", Offset = "0x1371270", VA = "0x1371270")]
	public void SetPlayer(float playerAngle)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1371460", Offset = "0x1371460", VA = "0x1371460")]
	public void SetPlayerAndFadeIn()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x137119C", Offset = "0x137119C", VA = "0x137119C")]
	public void SetPlayerAndFadeIn(float playerAngle)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x13715C8", Offset = "0x13715C8", VA = "0x13715C8")]
	public void EndScne()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1370EC4", Offset = "0x1370EC4", VA = "0x1370EC4")]
	public void HidePlayer()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1370D84", Offset = "0x1370D84", VA = "0x1370D84")]
	public void ShowPlayer()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1371B2C", Offset = "0x1371B2C", VA = "0x1371B2C", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1371B80", Offset = "0x1371B80", VA = "0x1371B80", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1371BF4", Offset = "0x1371BF4", VA = "0x1371BF4")]
	public PlayerConfiguration()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x642F70", Offset = "0x642F70")]
public class PlayerData : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x645098", Offset = "0x645098")]
	private StringGameObjectDict objects;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StringGameObjectDict oculusRigObjects;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private StringGameObjectDict openXRRigObjects;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerData instance;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera uiCamera;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hidden;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<GameObject> physicalAppearenceObjects;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<GameObject> PhysicalObejectsOnHidden;

	[Token(Token = "0x17000025")]
	public GameObject Item
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x13704E0", Offset = "0x13704E0", VA = "0x13704E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public bool isHidden
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x13725C8", Offset = "0x13725C8", VA = "0x13725C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1371FD8", Offset = "0x1371FD8", VA = "0x1371FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x13725D0", Offset = "0x13725D0", VA = "0x13725D0")]
	public List<GameObject> GetPhysicalAppearenceObjects()
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x13716E0", Offset = "0x13716E0", VA = "0x13716E0")]
	public void HidePlayer()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1371908", Offset = "0x1371908", VA = "0x1371908")]
	public void ShowPlayer()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x137266C", Offset = "0x137266C", VA = "0x137266C")]
	public void HidePlayerCompletely()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1372788", Offset = "0x1372788", VA = "0x1372788")]
	public void UnhidePlayerCompletely()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x13728A4", Offset = "0x13728A4", VA = "0x13728A4")]
	public PlayerData()
	{
	}
}
[Token(Token = "0x2000047")]
public class SceneController : MonoBehaviour, IPausable
{
	[Token(Token = "0x2000048")]
	public enum SceneType
	{
		[Token(Token = "0x4000147")]
		GameScene,
		[Token(Token = "0x4000148")]
		MenuScene,
		[Token(Token = "0x4000149")]
		AnyScene
	}

	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642FA8", Offset = "0x642FA8")]
	private sealed class <Start>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0xAA2054", Offset = "0xAA2054", VA = "0xAA2054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0xAA209C", Offset = "0xAA209C", VA = "0xAA209C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xAA1BDC", Offset = "0xAA1BDC", VA = "0xAA1BDC")]
		[DebuggerHidden]
		public <Start>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xAA1C08", Offset = "0xAA1C08", VA = "0xAA1C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xAA1C0C", Offset = "0xAA1C0C", VA = "0xAA1C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xAA205C", Offset = "0xAA205C", VA = "0xAA205C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642FB8", Offset = "0x642FB8")]
	private sealed class <FadeAndSwitchScenes>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeOutDuration;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneController <>4__this;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool audiofadeOut;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int buildIndex;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0xAA19DC", Offset = "0xAA19DC", VA = "0xAA19DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xAA1A24", Offset = "0xAA1A24", VA = "0xAA1A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xAA16E8", Offset = "0xAA16E8", VA = "0xAA16E8")]
		[DebuggerHidden]
		public <FadeAndSwitchScenes>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xAA1714", Offset = "0xAA1714", VA = "0xAA1714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xAA1718", Offset = "0xAA1718", VA = "0xAA1718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xAA19E4", Offset = "0xAA19E4", VA = "0xAA19E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642FC8", Offset = "0x642FC8")]
	private sealed class <LoadSceneAndSetActive>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int buildIndex;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000174")]
			[Address(RVA = "0xAA1B8C", Offset = "0xAA1B8C", VA = "0xAA1B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000176")]
			[Address(RVA = "0xAA1BD4", Offset = "0xAA1BD4", VA = "0xAA1BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xAA1A2C", Offset = "0xAA1A2C", VA = "0xAA1A2C")]
		[DebuggerHidden]
		public <LoadSceneAndSetActive>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xAA1A58", Offset = "0xAA1A58", VA = "0xAA1A58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xAA1A5C", Offset = "0xAA1A5C", VA = "0xAA1A5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xAA1B94", Offset = "0xAA1B94", VA = "0xAA1B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642FD8", Offset = "0x642FD8")]
	private sealed class <Fade>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float finalAlpha;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeDuration;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isSilentSnapshot;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <fadeSpeed>5__2;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <alpha>5__4;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0xAA1698", Offset = "0xAA1698", VA = "0xAA1698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017C")]
			[Address(RVA = "0xAA16E0", Offset = "0xAA16E0", VA = "0xAA16E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xAA13C4", Offset = "0xAA13C4", VA = "0xAA13C4")]
		[DebuggerHidden]
		public <Fade>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xAA13F0", Offset = "0xAA13F0", VA = "0xAA13F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xAA13F4", Offset = "0xAA13F4", VA = "0xAA13F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xAA16A0", Offset = "0xAA16A0", VA = "0xAA16A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642FE8", Offset = "0x642FE8")]
	private sealed class <waitAndFade>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float wait;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float alpha;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fade;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isSilent;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0xAA2204", Offset = "0xAA2204", VA = "0xAA2204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000182")]
			[Address(RVA = "0xAA224C", Offset = "0xAA224C", VA = "0xAA224C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xAA20A4", Offset = "0xAA20A4", VA = "0xAA20A4")]
		[DebuggerHidden]
		public <waitAndFade>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0xAA20D0", Offset = "0xAA20D0", VA = "0xAA20D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xAA20D4", Offset = "0xAA20D4", VA = "0xAA20D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xAA220C", Offset = "0xAA220C", VA = "0xAA220C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot silentAudioSnapShot;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject PlayerPrefab;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform PersistentPlayer;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityEvent BeforeSceneUnload;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityEvent AfterSceneLoad;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static FadeController fctrl_;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool isFading;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<UnityEngine.Object> loadingObjects;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static SceneController instance;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645134", Offset = "0x645134")]
	public bool preloadAllScenes;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64516C", Offset = "0x64516C")]
	public bool unloadUnusedAssetsOnSceneSwitch;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool preloadAllScenesOverride;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int firstSceneToLoad;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] menuSceneIndeces;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] maxGameScenePerMenuScene;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool paused;

	[Token(Token = "0x17000027")]
	public static string SavePath
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x137E608", Offset = "0x137E608", VA = "0x137E608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static string LoadPath
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x137E6D8", Offset = "0x137E6D8", VA = "0x137E6D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public static string ErrorPath
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x137E7D4", Offset = "0x137E7D4", VA = "0x137E7D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public static int loadedSceneIndex
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x1370B34", Offset = "0x1370B34", VA = "0x1370B34")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002B")]
	public static FadeController faderCtrl
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x137ED74", Offset = "0x137ED74", VA = "0x137ED74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public static bool isLoading
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x1371468", Offset = "0x1371468", VA = "0x1371468")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x137A18C", Offset = "0x137A18C", VA = "0x137A18C")]
	public static int getLastPlayedScene(SceneType type = SceneType.AnyScene)
	{
		return default(int);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x137EB2C", Offset = "0x137EB2C", VA = "0x137EB2C")]
	public static void setLastPlayedScene(SceneType type = SceneType.AnyScene)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x137ECA0", Offset = "0x137ECA0", VA = "0x137ECA0")]
	public static void DeleteSavedGame(bool logCorruptFile)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x137EED8", Offset = "0x137EED8", VA = "0x137EED8")]
	public static void startLoad(UnityEngine.Object loader)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x137EFFC", Offset = "0x137EFFC", VA = "0x137EFFC")]
	public static void endLoading(UnityEngine.Object loader)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x137F120", Offset = "0x137F120", VA = "0x137F120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64F95C", Offset = "0x64F95C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x137F198", Offset = "0x137F198", VA = "0x137F198")]
	public void FadeAndLoadScene(int buildIndex, float fadeOutDuration, bool audioFadeOut)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x137F290", Offset = "0x137F290", VA = "0x137F290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64F9BC", Offset = "0x64F9BC")]
	private IEnumerator FadeAndSwitchScenes(int buildIndex, float fadeOutDuration, bool audiofadeOut)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x137F334", Offset = "0x137F334", VA = "0x137F334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FA1C", Offset = "0x64FA1C")]
	private IEnumerator LoadSceneAndSetActive(int buildIndex)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x137F3BC", Offset = "0x137F3BC", VA = "0x137F3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FA7C", Offset = "0x64FA7C")]
	public static IEnumerator Fade(float finalAlpha, float fadeDuration, AudioMixerSnapshot snapshot, bool isSilentSnapshot)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1371518", Offset = "0x1371518", VA = "0x1371518")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FADC", Offset = "0x64FADC")]
	public static IEnumerator waitAndFade(float wait, float fade, float alpha, AudioMixerSnapshot snapshot, bool isSilent)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x137F45C", Offset = "0x137F45C", VA = "0x137F45C")]
	public void nextScene(bool audioFadeOut, float fadeOutDuration = 1f)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x137F554", Offset = "0x137F554", VA = "0x137F554")]
	public void prevScene(bool audioFadeOut, float fadeOutDuration = 1f)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x137F638", Offset = "0x137F638", VA = "0x137F638")]
	public void restartScene(bool audioFadeOut, float fadeOutDuration = 1f)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x137F6C0", Offset = "0x137F6C0", VA = "0x137F6C0")]
	public int getLastMenu()
	{
		return default(int);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x137F7D0", Offset = "0x137F7D0", VA = "0x137F7D0", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x137F7DC", Offset = "0x137F7DC", VA = "0x137F7DC", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x137F7E4", Offset = "0x137F7E4", VA = "0x137F7E4")]
	public SceneController()
	{
	}
}
[Token(Token = "0x200004E")]
public static class SceneControllerHelpers
{
	[Token(Token = "0x6000183")]
	[Address(RVA = "0x137F850", Offset = "0x137F850", VA = "0x137F850")]
	public static void PlayOneShot(this AudioSource audio, AudioClip clip, bool skipOnLoad)
	{
	}
}
[Token(Token = "0x200004F")]
public class SimpleNextTimeline : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector dir;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector nextTimeline;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OpenInteractionTime;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool selfDisableOnNext;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x138367C", Offset = "0x138367C", VA = "0x138367C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x13836D8", Offset = "0x13836D8", VA = "0x13836D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1383864", Offset = "0x1383864", VA = "0x1383864")]
	public SimpleNextTimeline()
	{
	}
}
[Token(Token = "0x2000050")]
public class FrameStatistics : MonoBehaviour
{
	[Token(Token = "0x2000051")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643008", Offset = "0x643008")]
	private sealed class <UpdateUI>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrameStatistics <>4__this;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitForNextUpdate>5__2;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000192")]
			[Address(RVA = "0x8CCE40", Offset = "0x8CCE40", VA = "0x8CCE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000194")]
			[Address(RVA = "0x8CCE88", Offset = "0x8CCE88", VA = "0x8CCE88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x8CCC9C", Offset = "0x8CCC9C", VA = "0x8CCC9C")]
		[DebuggerHidden]
		public <UpdateUI>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x8CCCC8", Offset = "0x8CCCC8", VA = "0x8CCCC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x8CCCCC", Offset = "0x8CCCCC", VA = "0x8CCCCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x8CCE48", Offset = "0x8CCE48", VA = "0x8CCE48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_desiredFPS;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6451A4", Offset = "0x6451A4")]
	[SerializeField]
	private int m_controlPointCount;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_maxGraphedFPS;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_distanceBetweenPoints;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshFilter m_graphLinePrefab;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_graphParent;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x645230", Offset = "0x645230")]
	[SerializeField]
	private float m_distanceFromCamera;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Canvas m_canvas;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text m_framesPerSecondsUIText;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text m_lastFrameDurationMillisecondsUIText;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text m_averageFramesPerSecondUIText;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_uiUpdatesPerSecond;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_lastFrameDurationSeconds;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_framesPerSecond;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_averageFrameRate;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 m_activeControlPointPosition;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] m_currentControlPointPositions;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] m_lastFrameControlPointPositions;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] m_lastFramesPerSecondPerControlPoint;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] m_framesPerSecondPerControlPoint;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[] m_controlPointColors;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh m_lineStrip;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xAB734C", Offset = "0xAB734C", VA = "0xAB734C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xAB7660", Offset = "0xAB7660", VA = "0xAB7660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xAB7704", Offset = "0xAB7704", VA = "0xAB7704")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xAB770C", Offset = "0xAB770C", VA = "0xAB770C")]
	private void Update()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xAB7924", Offset = "0xAB7924", VA = "0xAB7924")]
	private float GetAverageFrameRate()
	{
		return default(float);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xAB7448", Offset = "0xAB7448", VA = "0xAB7448")]
	private void SetupGraph()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xAB768C", Offset = "0xAB768C", VA = "0xAB768C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FCDC", Offset = "0x64FCDC")]
	private IEnumerator UpdateUI()
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xAB79A4", Offset = "0xAB79A4", VA = "0xAB79A4")]
	public FrameStatistics()
	{
	}
}
[Token(Token = "0x2000052")]
public class CheckContinueButton : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject continueButton;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] buttonsBelowContinue;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float buttonsSpacing;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint minimumSceneToContinueFrom;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x8927C0", Offset = "0x8927C0", VA = "0x8927C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x892958", Offset = "0x892958", VA = "0x892958")]
	public CheckContinueButton()
	{
	}
}
[Token(Token = "0x2000053")]
public class CheckVersion : MonoBehaviour
{
	[Token(Token = "0x6000197")]
	[Address(RVA = "0x892960", Offset = "0x892960", VA = "0x892960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x892A28", Offset = "0x892A28", VA = "0x892A28")]
	public CheckVersion()
	{
	}
}
[Token(Token = "0x2000054")]
public class DisableInScene : MonoBehaviour
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sceneBuildIndex;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x897EAC", Offset = "0x897EAC", VA = "0x897EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x897F40", Offset = "0x897F40", VA = "0x897F40")]
	public DisableInScene()
	{
	}
}
[Token(Token = "0x2000055")]
public class LockedButton : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643018", Offset = "0x643018")]
	private sealed class <unlock>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LockedButton <>4__this;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <initRot>5__2;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <finalRot>5__3;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <initPos>5__4;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 <finalPos>5__5;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color <initColor>5__6;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color <finalColor>5__7;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float <t>5__8;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A2")]
			[Address(RVA = "0x13D52E8", Offset = "0x13D52E8", VA = "0x13D52E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A4")]
			[Address(RVA = "0x13D5330", Offset = "0x13D5330", VA = "0x13D5330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x13D4F50", Offset = "0x13D4F50", VA = "0x13D4F50")]
		[DebuggerHidden]
		public <unlock>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x13D4F7C", Offset = "0x13D4F7C", VA = "0x13D4F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x13D4F80", Offset = "0x13D4F80", VA = "0x13D4F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x13D52F0", Offset = "0x13D52F0", VA = "0x13D52F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool unlockOnStart;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject setActiveAfterUnlock;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lockObject;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip audioClip;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6452CC", Offset = "0x6452CC")]
	public QuillColorize colorizeEffect;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve colorizeCurve;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve lockRotCurve;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve lockPosCurve;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float time;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x13BBB64", Offset = "0x13BBB64", VA = "0x13BBB64")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x13BBCF0", Offset = "0x13BBCF0", VA = "0x13BBCF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FD8C", Offset = "0x64FD8C")]
	private IEnumerator unlock()
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x13BBC30", Offset = "0x13BBC30", VA = "0x13BBC30")]
	private void UnlockImmediately()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x13BBD68", Offset = "0x13BBD68", VA = "0x13BBD68")]
	public LockedButton()
	{
	}
}
[Token(Token = "0x2000057")]
public class MenuState : PInteractionSystem.GameObjectState
{
	[Token(Token = "0x2000058")]
	public enum TimeMode
	{
		[Token(Token = "0x40001A3")]
		Scaled,
		[Token(Token = "0x40001A4")]
		Unscaled
	}

	[Serializable]
	[Token(Token = "0x2000059")]
	public struct PanelAnimProperties
	{
		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upHeight;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float downHeight;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float animationTime;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve upCurve;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve downCurve;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip upSound;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip downSound;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource audioSource;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TimeMode timeMode;
	}

	[Serializable]
	[Token(Token = "0x200005A")]
	public new class State : PInteractionSystem.GameObjectState.State
	{
		[Token(Token = "0x200005B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643028", Offset = "0x643028")]
		private sealed class <EnableOverTime>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40001B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public State <>4__this;

			[Token(Token = "0x40001B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Animator anim;

			[Token(Token = "0x40001B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x1700003C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60001B9")]
				[Address(RVA = "0xAA73E0", Offset = "0xAA73E0", VA = "0xAA73E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700003D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60001BB")]
				[Address(RVA = "0xAA7428", Offset = "0xAA7428", VA = "0xAA7428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60001B6")]
			[Address(RVA = "0xAA7160", Offset = "0xAA7160", VA = "0xAA7160")]
			[DebuggerHidden]
			public <EnableOverTime>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60001B7")]
			[Address(RVA = "0xAA718C", Offset = "0xAA718C", VA = "0xAA718C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60001B8")]
			[Address(RVA = "0xAA7190", Offset = "0xAA7190", VA = "0xAA7190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60001BA")]
			[Address(RVA = "0xAA73E8", Offset = "0xAA73E8", VA = "0xAA73E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200005C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643038", Offset = "0x643038")]
		private sealed class <DisableOverTime>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40001BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public State <>4__this;

			[Token(Token = "0x40001BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700003E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60001BF")]
				[Address(RVA = "0xAA7110", Offset = "0xAA7110", VA = "0xAA7110", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700003F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60001C1")]
				[Address(RVA = "0xAA7158", Offset = "0xAA7158", VA = "0xAA7158", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60001BC")]
			[Address(RVA = "0xAA6ED8", Offset = "0xAA6ED8", VA = "0xAA6ED8")]
			[DebuggerHidden]
			public <DisableOverTime>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60001BD")]
			[Address(RVA = "0xAA6F04", Offset = "0xAA6F04", VA = "0xAA6F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60001BE")]
			[Address(RVA = "0xAA6F08", Offset = "0xAA6F08", VA = "0xAA6F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60001C0")]
			[Address(RVA = "0xAA7118", Offset = "0xAA7118", VA = "0xAA7118", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject interactionProperty;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HideOnDisabled;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PanelAnimProperties animProperties;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshPro[] textObjects;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SpriteRenderer[] spriteRenderers;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MenuState menu;

		[Token(Token = "0x1700003B")]
		public float dTime
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0x13D6960", Offset = "0x13D6960", VA = "0x13D6960")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x13D69C8", Offset = "0x13D69C8", VA = "0x13D69C8")]
		public void Init(MenuState menuState)
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x13D6AA8", Offset = "0x13D6AA8", VA = "0x13D6AA8")]
		private void RefreshColliderPositions()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x13D6B9C", Offset = "0x13D6B9C", VA = "0x13D6B9C", Slot = "4")]
		public override void Enable([Optional] Animator anim, bool immediately = false)
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x13D6CF4", Offset = "0x13D6CF4", VA = "0x13D6CF4", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x13D6C60", Offset = "0x13D6C60", VA = "0x13D6C60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FE9C", Offset = "0x64FE9C")]
		private IEnumerator EnableOverTime(Animator anim)
		{
			return null;
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x13D6D98", Offset = "0x13D6D98", VA = "0x13D6D98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FEFC", Offset = "0x64FEFC")]
		private IEnumerator DisableOverTime()
		{
			return null;
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x13D6E10", Offset = "0x13D6E10", VA = "0x13D6E10")]
		public State()
		{
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x13D6E18", Offset = "0x13D6E18", VA = "0x13D6E18")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FF5C", Offset = "0x64FF5C")]
		private void <>n__0(Animator anim, bool resetAnimator)
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x13D6E24", Offset = "0x13D6E24", VA = "0x13D6E24")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64FF94", Offset = "0x64FF94")]
		private void <>n__1()
		{
		}
	}

	[Token(Token = "0x200005D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643048", Offset = "0x643048")]
	private sealed class <lowerSelf>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuState <>4__this;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private State <main>5__2;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State <curr>5__3;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <up>5__4;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <down>5__5;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__6;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C5")]
			[Address(RVA = "0x13D6978", Offset = "0x13D6978", VA = "0x13D6978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C7")]
			[Address(RVA = "0x13D69C0", Offset = "0x13D69C0", VA = "0x13D69C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x13D6690", Offset = "0x13D6690", VA = "0x13D6690")]
		[DebuggerHidden]
		public <lowerSelf>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x13D66BC", Offset = "0x13D66BC", VA = "0x13D66BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x13D66C0", Offset = "0x13D66C0", VA = "0x13D66C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x13D6980", Offset = "0x13D6980", VA = "0x13D6980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PanelAnimProperties animProperties;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private QuillUIMaskEffect maskEffect;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public State[] menuStates;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x13C3204", Offset = "0x13C3204", VA = "0x13C3204", Slot = "7")]
	public override PInteractionSystem.GameObjectState.State[] GetStates()
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x13C320C", Offset = "0x13C320C", VA = "0x13C320C", Slot = "9")]
	protected override bool isSelfTransitionAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x13C3214", Offset = "0x13C3214", VA = "0x13C3214")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x13C330C", Offset = "0x13C330C", VA = "0x13C330C")]
	public void CosmeticDisable()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x13C3338", Offset = "0x13C3338", VA = "0x13C3338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64FE3C", Offset = "0x64FE3C")]
	private IEnumerator lowerSelf()
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x13C33B0", Offset = "0x13C33B0", VA = "0x13C33B0")]
	public void PlayMenuClick()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x13C33D4", Offset = "0x13C33D4", VA = "0x13C33D4")]
	public MenuState()
	{
	}
}
[Token(Token = "0x200005E")]
public class OnFirstOpenScene : MonoBehaviour
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PInteractionSystem.PAction OnFirstOpen;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x9BDDEC", Offset = "0x9BDDEC", VA = "0x9BDDEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x9BDF1C", Offset = "0x9BDF1C", VA = "0x9BDF1C")]
	public OnFirstOpenScene()
	{
	}
}
[Token(Token = "0x200005F")]
public class PLaunchAppStorePageCommand : PInstantCommand
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong QuestAppID;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string OtherPlatformsURL;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DisableOnURL;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EnableOnURL;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x13A92F4", Offset = "0x13A92F4", VA = "0x13A92F4", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x13A9310", Offset = "0x13A9310", VA = "0x13A9310")]
	private static void OpenOculusStorePDPAndroid(string targetAppID)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x13A98D4", Offset = "0x13A98D4", VA = "0x13A98D4", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x13A9954", Offset = "0x13A9954", VA = "0x13A9954", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x13A999C", Offset = "0x13A999C", VA = "0x13A999C", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x13A99A0", Offset = "0x13A99A0", VA = "0x13A99A0")]
	public PLaunchAppStorePageCommand()
	{
	}
}
[Token(Token = "0x2000060")]
public class PLeaveToMainMenuCommand : PInstantCommand
{
	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x13A99A8", Offset = "0x13A99A8", VA = "0x13A99A8", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x13AA38C", Offset = "0x13AA38C", VA = "0x13AA38C", Slot = "9")]
	public override bool CanSaveActionWithCommand()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x13AA394", Offset = "0x13AA394", VA = "0x13AA394", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x13AA434", Offset = "0x13AA434", VA = "0x13AA434", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x13AA47C", Offset = "0x13AA47C", VA = "0x13AA47C", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x13AA480", Offset = "0x13AA480", VA = "0x13AA480")]
	public PLeaveToMainMenuCommand()
	{
	}
}
[Token(Token = "0x2000061")]
public class PLoadSceneByIndexCommand : PInstantCommand, IPausable
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint index;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool blocking;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x13AA754", Offset = "0x13AA754", VA = "0x13AA754", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x13AA7EC", Offset = "0x13AA7EC", VA = "0x13AA7EC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x13AA814", Offset = "0x13AA814", VA = "0x13AA814", Slot = "13")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x13AA828", Offset = "0x13AA828", VA = "0x13AA828", Slot = "14")]
	public void Resume()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x13AA83C", Offset = "0x13AA83C", VA = "0x13AA83C", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x13AA8BC", Offset = "0x13AA8BC", VA = "0x13AA8BC", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x13AA904", Offset = "0x13AA904", VA = "0x13AA904", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x13AA908", Offset = "0x13AA908", VA = "0x13AA908")]
	public PLoadSceneByIndexCommand()
	{
	}
}
[Token(Token = "0x2000062")]
public class PLoadSelectedSceneCommand : PInstantCommand, IPausable
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool blocking;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x13AA910", Offset = "0x13AA910", VA = "0x13AA910", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x13AA9D0", Offset = "0x13AA9D0", VA = "0x13AA9D0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x13AA9F8", Offset = "0x13AA9F8", VA = "0x13AA9F8", Slot = "13")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x13AAA0C", Offset = "0x13AAA0C", VA = "0x13AAA0C", Slot = "14")]
	public void Resume()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x13AAA20", Offset = "0x13AAA20", VA = "0x13AAA20", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x13AAAA0", Offset = "0x13AAAA0", VA = "0x13AAAA0", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x13AAAE8", Offset = "0x13AAAE8", VA = "0x13AAAE8", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x13AAAEC", Offset = "0x13AAAEC", VA = "0x13AAAEC")]
	public PLoadSelectedSceneCommand()
	{
	}
}
[Token(Token = "0x2000063")]
public class POpenURL : PInstantCommand
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string url;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x13AAEF0", Offset = "0x13AAEF0", VA = "0x13AAEF0", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x13AAEFC", Offset = "0x13AAEFC", VA = "0x13AAEFC", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x13AAF7C", Offset = "0x13AAF7C", VA = "0x13AAF7C", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x13AAFC4", Offset = "0x13AAFC4", VA = "0x13AAFC4", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x13AAFC8", Offset = "0x13AAFC8", VA = "0x13AAFC8")]
	public POpenURL()
	{
	}
}
[Token(Token = "0x2000064")]
public class PRecenterButton : PInstantCommand
{
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x13ABC78", Offset = "0x13ABC78", VA = "0x13ABC78", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x13ABD84", Offset = "0x13ABD84", VA = "0x13ABD84", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x13ABE04", Offset = "0x13ABE04", VA = "0x13ABE04", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x13ABE4C", Offset = "0x13ABE4C", VA = "0x13ABE4C", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x13ABE50", Offset = "0x13ABE50", VA = "0x13ABE50")]
	public PRecenterButton()
	{
	}
}
[Token(Token = "0x2000065")]
public class PResumeGameCommand : PInstantCommand
{
	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x13AC47C", Offset = "0x13AC47C", VA = "0x13AC47C", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x13AC4D0", Offset = "0x13AC4D0", VA = "0x13AC4D0", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x13AC550", Offset = "0x13AC550", VA = "0x13AC550", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x13AC598", Offset = "0x13AC598", VA = "0x13AC598", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x13AC59C", Offset = "0x13AC59C", VA = "0x13AC59C")]
	public PResumeGameCommand()
	{
	}
}
[Token(Token = "0x2000066")]
public class PSelectLastGameSceneCommand : PInstantCommand
{
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x13AC75C", Offset = "0x13AC75C", VA = "0x13AC75C", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x13AC7E0", Offset = "0x13AC7E0", VA = "0x13AC7E0", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x13AC860", Offset = "0x13AC860", VA = "0x13AC860", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x13AC8A8", Offset = "0x13AC8A8", VA = "0x13AC8A8", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x13AC8AC", Offset = "0x13AC8AC", VA = "0x13AC8AC")]
	public PSelectLastGameSceneCommand()
	{
	}
}
[Token(Token = "0x2000067")]
public class PSelectSceneIndexCommand : PInstantCommand
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint index;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static uint selectedScene;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x13AC8B4", Offset = "0x13AC8B4", VA = "0x13AC8B4", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x13AC908", Offset = "0x13AC908", VA = "0x13AC908", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x13AC9F8", Offset = "0x13AC9F8", VA = "0x13AC9F8", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x13ACA40", Offset = "0x13ACA40", VA = "0x13ACA40", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x13ACA44", Offset = "0x13ACA44", VA = "0x13ACA44")]
	public PSelectSceneIndexCommand()
	{
	}
}
[Token(Token = "0x2000068")]
public class PSetLanguageButton : PInstantCommand
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string languageCode;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x13AD6DC", Offset = "0x13AD6DC", VA = "0x13AD6DC", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x13AD784", Offset = "0x13AD784", VA = "0x13AD784", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x13AD898", Offset = "0x13AD898", VA = "0x13AD898", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x13AD8E0", Offset = "0x13AD8E0", VA = "0x13AD8E0", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x13AD8E4", Offset = "0x13AD8E4", VA = "0x13AD8E4")]
	public PSetLanguageButton()
	{
	}
}
[Token(Token = "0x2000069")]
public class PauseMenuManager : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseMenuManager instance;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PauseMenuPrefab;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject PauseMenuInstance;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot pauseAudioSnapshot;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTimeStartPressed;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Animator> pausedAnimators;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PlayableDirector> pausedDirectors;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<VideoPlayer> pausedVideoPlayers;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<IPausable> pausedPausables;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Collider> pausedColliders;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool rightHandedBeforePause;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool paused;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool outOfBounds;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool appHasFocus;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x13B1990", Offset = "0x13B1990", VA = "0x13B1990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x13B19E4", Offset = "0x13B19E4", VA = "0x13B19E4")]
	private void OnApplicationFocus(bool focusStatus)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x13B2610", Offset = "0x13B2610", VA = "0x13B2610")]
	private bool getMenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x13B26B0", Offset = "0x13B26B0", VA = "0x13B26B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x13B1AB8", Offset = "0x13B1AB8", VA = "0x13B1AB8")]
	public void PauseGame(bool menu = true)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x13A9A68", Offset = "0x13A9A68", VA = "0x13A9A68")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x13B254C", Offset = "0x13B254C", VA = "0x13B254C")]
	public void UnfocusGame()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x13B1A3C", Offset = "0x13B1A3C", VA = "0x13B1A3C")]
	public void FocusGame()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x13B299C", Offset = "0x13B299C", VA = "0x13B299C")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x13B2CEC", Offset = "0x13B2CEC", VA = "0x13B2CEC")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x13B2C7C", Offset = "0x13B2C7C", VA = "0x13B2C7C")]
	private void DestroyMenu()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x13B2CF0", Offset = "0x13B2CF0", VA = "0x13B2CF0")]
	public PauseMenuManager()
	{
	}
}
[Token(Token = "0x200006A")]
public class PlayMenuCommandOnAwake : MonoBehaviour
{
	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1370394", Offset = "0x1370394", VA = "0x1370394")]
	private void Start()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1370404", Offset = "0x1370404", VA = "0x1370404")]
	public PlayMenuCommandOnAwake()
	{
	}
}
[Token(Token = "0x200006B")]
public class ReplayEndButtonText : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro ContinueText;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro ReplayEndText;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int endSceneBuildIndex;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x137A0CC", Offset = "0x137A0CC", VA = "0x137A0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x137A27C", Offset = "0x137A27C", VA = "0x137A27C")]
	public ReplayEndButtonText()
	{
	}
}
[Token(Token = "0x200006C")]
public static class Achievements
{
	[Token(Token = "0x6000214")]
	[Address(RVA = "0xC1D470", Offset = "0xC1D470", VA = "0xC1D470")]
	public static void Unlock(string AchievementName)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC1D478", Offset = "0xC1D478", VA = "0xC1D478")]
	public static void Increment(string AchievementName, int unlockValue)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xC1D484", Offset = "0xC1D484", VA = "0xC1D484")]
	public static void AddFields(string AchievementName, string bitField)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xC1D48C", Offset = "0xC1D48C", VA = "0xC1D48C")]
	private static bool LocalBitField(string AchievementName, string bitField)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006D")]
public class Grabber : MonoBehaviour, IPausable
{
	[Token(Token = "0x200006E")]
	public enum Mode
	{
		[Token(Token = "0x40001EE")]
		tomatoEffectOn,
		[Token(Token = "0x40001EF")]
		tomatoEffectOff,
		[Token(Token = "0x40001F0")]
		autoTomato
	}

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject disableOnGrab;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform grabbedParent;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform grabbedGrandParent;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645304", Offset = "0x645304")]
	private GameObject <grabbed>k__BackingField;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string currentHandPose;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RuntimeAnimatorController defaultAnimationController;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameObject, int> grabbedOldLayer;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator animator;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool paused;

	[Token(Token = "0x17000042")]
	public GameObject grabbed
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xF68E94", Offset = "0xF68E94", VA = "0xF68E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6500BC", Offset = "0x6500BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xF68E9C", Offset = "0xF68E9C", VA = "0xF68E9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6500CC", Offset = "0x6500CC")]
		private set
		{
		}
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xF68EA4", Offset = "0xF68EA4", VA = "0xF68EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xF68F00", Offset = "0xF68F00", VA = "0xF68F00")]
	public RuntimeAnimatorController GetRuntimeAnimatorController()
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF68F1C", Offset = "0xF68F1C", VA = "0xF68F1C")]
	public void SetHandPose(string handPose, bool resetAnimator)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF68F58", Offset = "0xF68F58", VA = "0xF68F58")]
	public void SetAnimationController(RuntimeAnimatorController c)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF69004", Offset = "0xF69004", VA = "0xF69004")]
	public void Grab(GameObject g, [Optional] string handPose, bool resetAnimator = false)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF69374", Offset = "0xF69374", VA = "0xF69374")]
	public void ChangeGrabbedLayer()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF69510", Offset = "0xF69510", VA = "0xF69510")]
	public GameObject Release(bool resetAnimator = false, bool destroy = false)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF69824", Offset = "0xF69824", VA = "0xF69824", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF699AC", Offset = "0xF699AC", VA = "0xF699AC", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF696AC", Offset = "0xF696AC", VA = "0xF696AC")]
	public void ReturnGrabbedLayer()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xF69B20", Offset = "0xF69B20", VA = "0xF69B20")]
	public Grabber()
	{
	}
}
[Serializable]
[Token(Token = "0x200006F")]
public class HapticImpulseData
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x645314", Offset = "0x645314")]
	public float amplitude;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64532C", Offset = "0x64532C")]
	public float duration;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF77C50", Offset = "0xF77C50", VA = "0xF77C50")]
	public HapticImpulseData(float _amplitude, float _duration)
	{
	}
}
[Token(Token = "0x2000070")]
public class JoystickRotate : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643058", Offset = "0x643058")]
	private sealed class <RotateAroundTime>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoystickRotate <>4__this;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform t;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 position;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 axis;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float amount;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float time;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <elapsedAngle>5__3;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022D")]
			[Address(RVA = "0x13D2ED4", Offset = "0x13D2ED4", VA = "0x13D2ED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022F")]
			[Address(RVA = "0x13D2F1C", Offset = "0x13D2F1C", VA = "0x13D2F1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x13D2C74", Offset = "0x13D2C74", VA = "0x13D2C74")]
		[DebuggerHidden]
		public <RotateAroundTime>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x13D2CA0", Offset = "0x13D2CA0", VA = "0x13D2CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x13D2CA4", Offset = "0x13D2CA4", VA = "0x13D2CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x13D2EDC", Offset = "0x13D2EDC", VA = "0x13D2EDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rotateTime;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool lockRotation;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] rotClips;

	[Token(Token = "0x17000043")]
	private AudioClip rotClip
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x13B6EB8", Offset = "0x13B6EB8", VA = "0x13B6EB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x13B6F14", Offset = "0x13B6F14", VA = "0x13B6F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x13B7278", Offset = "0x13B7278", VA = "0x13B7278")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6500DC", Offset = "0x6500DC")]
	public IEnumerator RotateAroundTime(Transform t, Vector3 position, Vector3 axis, float amount, float time)
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x13B735C", Offset = "0x13B735C", VA = "0x13B735C")]
	public JoystickRotate()
	{
	}
}
[Token(Token = "0x2000072")]
public class TrackXRNode : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode node;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool init;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1392178", Offset = "0x1392178", VA = "0x1392178")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1392240", Offset = "0x1392240", VA = "0x1392240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1392358", Offset = "0x1392358", VA = "0x1392358")]
	public TrackXRNode()
	{
	}
}
[Token(Token = "0x2000073")]
public class XRIO : MonoBehaviour
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool devModeUnlocked;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool showDevInfo;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float timeToStopLeftHaptic;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float timeToStopRightHaptic;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool rightHaptic;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool leftHaptic;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FrameStatistics frameStatisticsPrefab;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FrameStatistics frameStatisticsInstance;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x645364", Offset = "0x645364")]
	public float pressMinimum;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64537C", Offset = "0x64537C")]
	public float releaseMaximum;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float newRightTrigger;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float newLeftTrigger;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float newRightJoystickX;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float newLeftJoystickX;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645394", Offset = "0x645394")]
	private static bool <RightTriggerPressed>k__BackingField;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6453A4", Offset = "0x6453A4")]
	private static bool <LeftTriggerPressed>k__BackingField;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static bool rightThumbStickRightPressed;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private static bool rightThumbStickLeftPressed;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	private static bool leftThumbStickRightPressed;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	private static bool leftThumbStickLeftPressed;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool LeftTriggerDown;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool RightTriggerDown;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool rightThumbStickRightDown;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool rightThumbStickLeftDown;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool leftThumbStickRightDown;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool leftThumbStickLeftDown;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static XRIO instance;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material mainMaterial;

	[Token(Token = "0x17000046")]
	public bool devMode
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x8C4AC4", Offset = "0x8C4AC4", VA = "0x8C4AC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000047")]
	private static InputDevice left
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x8C4B40", Offset = "0x8C4B40", VA = "0x8C4B40")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x17000048")]
	private static InputDevice right
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x8C4B4C", Offset = "0x8C4B4C", VA = "0x8C4B4C")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x17000049")]
	public static bool RightTriggerPressed
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x8C4F8C", Offset = "0x8C4F8C", VA = "0x8C4F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65018C", Offset = "0x65018C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x8C4FF0", Offset = "0x8C4FF0", VA = "0x8C4FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65019C", Offset = "0x65019C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public static bool LeftTriggerPressed
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x8C505C", Offset = "0x8C505C", VA = "0x8C505C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501AC", Offset = "0x6501AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x8C50C0", Offset = "0x8C50C0", VA = "0x8C50C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6501BC", Offset = "0x6501BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	private bool shiftPressed
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x8C6B30", Offset = "0x8C6B30", VA = "0x8C6B30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x8C4B58", Offset = "0x8C4B58", VA = "0x8C4B58")]
	public static bool isNodeTracked(XRNode node)
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x8C4D60", Offset = "0x8C4D60", VA = "0x8C4D60")]
	public static void SendHapticImpulse(HapticImpulseData data, bool rightHand)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x8C4E84", Offset = "0x8C4E84", VA = "0x8C4E84")]
	public static void StopHaptics(bool rightHand)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x8C512C", Offset = "0x8C512C", VA = "0x8C512C")]
	public static bool GetRightTriggerDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x8C5190", Offset = "0x8C5190", VA = "0x8C5190")]
	public static bool GetLeftTriggerDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x8C51F4", Offset = "0x8C51F4", VA = "0x8C51F4")]
	public static bool GetRightThumbstickRightDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x8C5258", Offset = "0x8C5258", VA = "0x8C5258")]
	public static bool GetRightThumbstickLeftDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x8C52BC", Offset = "0x8C52BC", VA = "0x8C52BC")]
	public static bool GetLeftThumbstickRightDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x8C5320", Offset = "0x8C5320", VA = "0x8C5320")]
	public static bool GetLeftThumbstickLeftDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x8C5384", Offset = "0x8C5384", VA = "0x8C5384")]
	public static bool GetThumbstickPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x8C53E8", Offset = "0x8C53E8", VA = "0x8C53E8")]
	public static float GetRightHandTrigger()
	{
		return default(float);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x8C5430", Offset = "0x8C5430", VA = "0x8C5430")]
	public static float GetLeftHandTrigger()
	{
		return default(float);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x8C5478", Offset = "0x8C5478", VA = "0x8C5478")]
	public static bool GetStartPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x8C54DC", Offset = "0x8C54DC", VA = "0x8C54DC")]
	public static bool GetSkipPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x8C5560", Offset = "0x8C5560", VA = "0x8C5560")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x8C55CC", Offset = "0x8C55CC", VA = "0x8C55CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x8C55F0", Offset = "0x8C55F0", VA = "0x8C55F0")]
	private void UpdateHaptics()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x8C617C", Offset = "0x8C617C", VA = "0x8C617C")]
	private void Quit()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x8C5764", Offset = "0x8C5764", VA = "0x8C5764")]
	private void UpdateInput()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x8C632C", Offset = "0x8C632C", VA = "0x8C632C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x8C6184", Offset = "0x8C6184", VA = "0x8C6184")]
	private void UpdateSceneController()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x8C6B64", Offset = "0x8C6B64", VA = "0x8C6B64")]
	public XRIO()
	{
	}
}
[Token(Token = "0x2000074")]
public class GoToFace : MonoBehaviour
{
	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643068", Offset = "0x643068")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoToFace <>4__this;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <_transform>5__2;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <initPos>5__3;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <initRot>5__4;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <camTransform>5__5;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <t>5__6;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000258")]
			[Address(RVA = "0x8CD434", Offset = "0x8CD434", VA = "0x8CD434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025A")]
			[Address(RVA = "0x8CD47C", Offset = "0x8CD47C", VA = "0x8CD47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x8CD0B4", Offset = "0x8CD0B4", VA = "0x8CD0B4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x8CD0E0", Offset = "0x8CD0E0", VA = "0x8CD0E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x8CD0E4", Offset = "0x8CD0E4", VA = "0x8CD0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x8CD43C", Offset = "0x8CD43C", VA = "0x8CD43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xABC2E8", Offset = "0xABC2E8", VA = "0xABC2E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6501CC", Offset = "0x6501CC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xABC360", Offset = "0xABC360", VA = "0xABC360")]
	public GoToFace()
	{
	}
}
[Token(Token = "0x2000076")]
[ExecuteInEditMode]
public class RotateHat : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform staticHat;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerHeadBezierPoint;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera previewCamera;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rotRelativeToCamera;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6453B4", Offset = "0x6453B4")]
	public float t;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x137B684", Offset = "0x137B684", VA = "0x137B684")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x137B8B0", Offset = "0x137B8B0", VA = "0x137B8B0")]
	public RotateHat()
	{
	}
}
[Token(Token = "0x2000077")]
public class CeilingFan : MonoBehaviour
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float acceleration;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deceleration;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float friction;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectCondition right;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObjectCondition left;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] rightHandPositions;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] leftHandPositions;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PInteractionSystem.Retropolis.PAction rotateFanAction;

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x88D180", Offset = "0x88D180", VA = "0x88D180")]
	private void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x88D5E8", Offset = "0x88D5E8", VA = "0x88D5E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x88D5F0", Offset = "0x88D5F0", VA = "0x88D5F0")]
	public CeilingFan()
	{
	}
}
[Token(Token = "0x2000078")]
public class DisableOnPause : MonoBehaviour, IPausable
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool disabledBypaused;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x897F48", Offset = "0x897F48", VA = "0x897F48", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x898010", Offset = "0x898010", VA = "0x898010", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x898080", Offset = "0x898080", VA = "0x898080")]
	public DisableOnPause()
	{
	}
}
[Token(Token = "0x2000079")]
public class FlaskParticlesController : MonoBehaviour
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource drippingSound;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xAB70A0", Offset = "0xAB70A0", VA = "0xAB70A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xAB712C", Offset = "0xAB712C", VA = "0xAB712C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xAB71B4", Offset = "0xAB71B4", VA = "0xAB71B4")]
	public FlaskParticlesController()
	{
	}
}
[Token(Token = "0x200007A")]
public class Hat : MonoBehaviour
{
	[Token(Token = "0x6000266")]
	[Address(RVA = "0xF77C90", Offset = "0xF77C90", VA = "0xF77C90")]
	public void initHat()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xF77D68", Offset = "0xF77D68", VA = "0xF77D68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xF77E40", Offset = "0xF77E40", VA = "0xF77E40")]
	public Hat()
	{
	}
}
[Token(Token = "0x200007B")]
public class MirrorGrabber : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInNormalInspector]
	public Grabber grabber;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInNormalInspector]
	public Animator animator;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string currentHandPose;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x13C33DC", Offset = "0x13C33DC", VA = "0x13C33DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x13C3438", Offset = "0x13C3438", VA = "0x13C3438")]
	private void Update()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x13C3594", Offset = "0x13C3594", VA = "0x13C3594")]
	public MirrorGrabber()
	{
	}
}
[Token(Token = "0x200007C")]
public class PausableHandsMirror : MonoBehaviour, IPausable
{
	[Token(Token = "0x200007D")]
	private class MirroredHand
	{
		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _parent;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _mirrorRoot;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _root;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkinnedMeshRenderer mirroredSkinnedMeshRenderer;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SkinnedMeshRenderer originalSkinnedMeshRenderer;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xA9EDEC", Offset = "0xA9EDEC", VA = "0xA9EDEC")]
		public MirroredHand(Transform root, Transform parent)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xA9F084", Offset = "0xA9F084", VA = "0xA9F084")]
		public void Reflect(Transform axis, float scaleFactor)
		{
		}
	}

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mirrorAxis;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleFactor;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<MirroredHand> mirroredHands;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool paused;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x13B1120", Offset = "0x13B1120", VA = "0x13B1120")]
	private void Update()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x13B1464", Offset = "0x13B1464", VA = "0x13B1464", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x13B145C", Offset = "0x13B145C", VA = "0x13B145C", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x13B1470", Offset = "0x13B1470", VA = "0x13B1470")]
	public PausableHandsMirror()
	{
	}
}
[Token(Token = "0x200007E")]
public class PausableMirror : MonoBehaviour, IPausable
{
	[Token(Token = "0x200007F")]
	private class MirroredObject
	{
		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshRenderer _rend;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer reflection;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter reflectedMeshFilter;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _parent;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xA9F1CC", Offset = "0xA9F1CC", VA = "0xA9F1CC")]
		public MirroredObject(MeshRenderer rend, Transform parent)
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xA9F4E0", Offset = "0xA9F4E0", VA = "0xA9F4E0")]
		public void Reflect(Transform axis, float scaleFactor)
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xA9F2FC", Offset = "0xA9F2FC", VA = "0xA9F2FC")]
		private void UpdateReflection()
		{
		}
	}

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer[] dynamicMirroredObjects;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reflectPlayer;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform mirrorAxis;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleFactor;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MirroredObject> mirroredObjects;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool paused;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x13B1480", Offset = "0x13B1480", VA = "0x13B1480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x13B17CC", Offset = "0x13B17CC", VA = "0x13B17CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x13B196C", Offset = "0x13B196C", VA = "0x13B196C", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x13B1964", Offset = "0x13B1964", VA = "0x13B1964", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x13B1978", Offset = "0x13B1978", VA = "0x13B1978")]
	public PausableMirror()
	{
	}
}
[Token(Token = "0x2000080")]
public class PDeletePersistentObjects : PInstantCommand
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string comment;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x13A216C", Offset = "0x13A216C", VA = "0x13A216C", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x13A2268", Offset = "0x13A2268", VA = "0x13A2268", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x13A22E8", Offset = "0x13A22E8", VA = "0x13A22E8", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x13A2330", Offset = "0x13A2330", VA = "0x13A2330", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x13A2334", Offset = "0x13A2334", VA = "0x13A2334")]
	public PDeletePersistentObjects()
	{
	}
}
[Token(Token = "0x2000081")]
public class ScrewGaretteSmokingInteraction : MonoBehaviour, IPausable
{
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643088", Offset = "0x643088")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScrewGaretteSmokingInteraction <>4__this;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <initPos>5__2;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <initRot>5__3;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <t>5__4;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] <>7__wrap4;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <>7__wrap5;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0xAA28AC", Offset = "0xAA28AC", VA = "0xAA28AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028F")]
			[Address(RVA = "0xAA28F4", Offset = "0xAA28F4", VA = "0xAA28F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xAA2254", Offset = "0xAA2254", VA = "0xAA2254")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xAA2280", Offset = "0xAA2280", VA = "0xAA2280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xAA2284", Offset = "0xAA2284", VA = "0xAA2284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xAA28B4", Offset = "0xAA28B4", VA = "0xAA28B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PaintLayerBehaviour screwgarette;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int litFrame;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int unlitFrame;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] smokeObjects;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform grabbedParentRight;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform grabbedParentLeft;

	[Token(Token = "0x1700004E")]
	private Vector3 grabbedParentPosition
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x137FC90", Offset = "0x137FC90", VA = "0x137FC90")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004F")]
	private Quaternion grabbedParentRotation
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x137FD54", Offset = "0x137FD54", VA = "0x137FD54")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000050")]
	private Transform grabbedParent
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x137FE18", Offset = "0x137FE18", VA = "0x137FE18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	private Transform grabbedGrandParent
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x137FF40", Offset = "0x137FF40", VA = "0x137FF40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1380068", Offset = "0x1380068", VA = "0x1380068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65027C", Offset = "0x65027C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x13800E0", Offset = "0x13800E0", VA = "0x13800E0", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1380110", Offset = "0x1380110", VA = "0x1380110", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1380140", Offset = "0x1380140", VA = "0x1380140")]
	private bool isInMouth()
	{
		return default(bool);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x138027C", Offset = "0x138027C", VA = "0x138027C")]
	private bool isOutOfMouth()
	{
		return default(bool);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x13801D0", Offset = "0x13801D0", VA = "0x13801D0")]
	private Vector3 mouthPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x138030C", Offset = "0x138030C", VA = "0x138030C")]
	public ScrewGaretteSmokingInteraction()
	{
	}
}
[Token(Token = "0x2000083")]
public class SetUpEvilPhilip : MonoBehaviour
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int goodFrame;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int badFrame;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color badColor;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color normalColor;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer[] changedRenderers;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PaintLayerBehaviour[] changedQuillLayersBehaviour;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1381558", Offset = "0x1381558", VA = "0x1381558")]
	public void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1381838", Offset = "0x1381838", VA = "0x1381838")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1381694", Offset = "0x1381694", VA = "0x1381694")]
	private void SetFrameInChildren(PaintLayerBehaviour[] layers, int frame)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1381710", Offset = "0x1381710", VA = "0x1381710")]
	private void SetColorizeInChildern(Renderer[] renderers, Color c)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x13818EC", Offset = "0x13818EC", VA = "0x13818EC")]
	public SetUpEvilPhilip()
	{
	}
}
[Token(Token = "0x2000084")]
public class CloseMechanic : MonoBehaviour, IPausable
{
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643098", Offset = "0x643098")]
	private sealed class <closeMechanicLoop>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CloseMechanic <>4__this;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioClip <clip>5__2;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029F")]
			[Address(RVA = "0x8CAABC", Offset = "0x8CAABC", VA = "0x8CAABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0x8CAB04", Offset = "0x8CAB04", VA = "0x8CAB04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x8CA7B8", Offset = "0x8CA7B8", VA = "0x8CA7B8")]
		[DebuggerHidden]
		public <closeMechanicLoop>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x8CA7E4", Offset = "0x8CA7E4", VA = "0x8CA7E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x8CA7E8", Offset = "0x8CA7E8", VA = "0x8CA7E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x8CAAC4", Offset = "0x8CAAC4", VA = "0x8CAAC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource mechanicAudioSource;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioClips;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool oneoff;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool blocking;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int i;

	[Token(Token = "0x17000054")]
	private bool loop
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x892AC0", Offset = "0x892AC0", VA = "0x892AC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x892AD0", Offset = "0x892AD0", VA = "0x892AD0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x892AFC", Offset = "0x892AFC", VA = "0x892AFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65032C", Offset = "0x65032C")]
	private IEnumerator closeMechanicLoop()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x892B74", Offset = "0x892B74", VA = "0x892B74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x892BA4", Offset = "0x892BA4", VA = "0x892BA4", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x892BB8", Offset = "0x892BB8", VA = "0x892BB8", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x892BCC", Offset = "0x892BCC", VA = "0x892BCC")]
	public CloseMechanic()
	{
	}
}
[Token(Token = "0x2000086")]
public class SetElectricityOffsets : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator[] animators;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x13810F0", Offset = "0x13810F0", VA = "0x13810F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x13811A0", Offset = "0x13811A0", VA = "0x13811A0")]
	public SetElectricityOffsets()
	{
	}
}
[Token(Token = "0x2000087")]
public class SmokingInAlleyway : ObjectProximity, IPausable
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool oldActive;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x13857B8", Offset = "0x13857B8", VA = "0x13857B8", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1385874", Offset = "0x1385874", VA = "0x1385874")]
	public SmokingInAlleyway()
	{
	}
}
[Token(Token = "0x2000088")]
public class SpawnElectricShock : MonoBehaviour
{
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6430A8", Offset = "0x6430A8")]
	private sealed class <Spawn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnElectricShock <>4__this;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <hoverConnection>5__2;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0xAA2F90", Offset = "0xAA2F90", VA = "0xAA2F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0xAA2FD8", Offset = "0xAA2FD8", VA = "0xAA2FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xAA2C78", Offset = "0xAA2C78", VA = "0xAA2C78")]
		[DebuggerHidden]
		public <Spawn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xAA2CA4", Offset = "0xAA2CA4", VA = "0xAA2CA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xAA2CA8", Offset = "0xAA2CA8", VA = "0xAA2CA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xAA2F98", Offset = "0xAA2F98", VA = "0xAA2F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] shocks;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shockTime;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x138C3BC", Offset = "0x138C3BC", VA = "0x138C3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6503DC", Offset = "0x6503DC")]
	public IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x138C434", Offset = "0x138C434", VA = "0x138C434")]
	public SpawnElectricShock()
	{
	}
}
[Token(Token = "0x200008A")]
public class DialogueSetTimer : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6430B8", Offset = "0x6430B8")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueSetTimer <>4__this;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0x8CBAC8", Offset = "0x8CBAC8", VA = "0x8CBAC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B5")]
			[Address(RVA = "0x8CBB10", Offset = "0x8CBB10", VA = "0x8CBB10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x8CB960", Offset = "0x8CB960", VA = "0x8CB960")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x8CB98C", Offset = "0x8CB98C", VA = "0x8CB98C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x8CB990", Offset = "0x8CB990", VA = "0x8CB990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x8CBAD0", Offset = "0x8CBAD0", VA = "0x8CBAD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject physicalDialogueSet;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform visualTimerScaleObject;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PInteractionSystem.PAction OnTimerEnd;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeLeft;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x897E2C", Offset = "0x897E2C", VA = "0x897E2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65048C", Offset = "0x65048C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x897EA4", Offset = "0x897EA4", VA = "0x897EA4")]
	public DialogueSetTimer()
	{
	}
}
[Token(Token = "0x200008C")]
public class GoonPunch : MonoBehaviour
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6453F4", Offset = "0x6453F4")]
	public float followFactor;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform CameraReference;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 delta;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 initPosition;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xABC368", Offset = "0xABC368", VA = "0xABC368")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xABC3FC", Offset = "0xABC3FC", VA = "0xABC3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xABC4CC", Offset = "0xABC4CC", VA = "0xABC4CC")]
	public GoonPunch()
	{
	}
}
[Token(Token = "0x200008D")]
public class PSavePart2Command : PInstantCommand
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int part2SceneIndex;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x13AC5A4", Offset = "0x13AC5A4", VA = "0x13AC5A4", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x13AC680", Offset = "0x13AC680", VA = "0x13AC680", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x13AC700", Offset = "0x13AC700", VA = "0x13AC700", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x13AC748", Offset = "0x13AC748", VA = "0x13AC748", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x13AC74C", Offset = "0x13AC74C", VA = "0x13AC74C")]
	public PSavePart2Command()
	{
	}
}
[Token(Token = "0x200008E")]
public class PhoneNumberVisibility : MonoBehaviour, IPausable
{
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6430C8", Offset = "0x6430C8")]
	private sealed class <WaitAndPlay>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhoneNumberVisibility <>4__this;

		[Token(Token = "0x1700005B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0xA9FB48", Offset = "0xA9FB48", VA = "0xA9FB48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0xA9FB90", Offset = "0xA9FB90", VA = "0xA9FB90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xA9FA70", Offset = "0xA9FA70", VA = "0xA9FA70")]
		[DebuggerHidden]
		public <WaitAndPlay>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xA9FA9C", Offset = "0xA9FA9C", VA = "0xA9FA9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xA9FAA0", Offset = "0xA9FAA0", VA = "0xA9FAA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xA9FB50", Offset = "0xA9FB50", VA = "0xA9FB50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didView;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool didCarryOutAction;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PInteractionSystem.PInteractable OnView;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider phoneNumberCollider;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool paused;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x136E5E4", Offset = "0x136E5E4", VA = "0x136E5E4", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x136E5F0", Offset = "0x136E5F0", VA = "0x136E5F0", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x136E5F8", Offset = "0x136E5F8", VA = "0x136E5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x136E760", Offset = "0x136E760", VA = "0x136E760")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65053C", Offset = "0x65053C")]
	private IEnumerator WaitAndPlay()
	{
		return null;
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x136E7D8", Offset = "0x136E7D8", VA = "0x136E7D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x136E814", Offset = "0x136E814", VA = "0x136E814")]
	public PhoneNumberVisibility()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6430D8", Offset = "0x6430D8")]
public class AdditionalPhysicalObject : MonoBehaviour
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject additionalPhysicalObject;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC1D640", Offset = "0xC1D640", VA = "0xC1D640")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC1D6A0", Offset = "0xC1D6A0", VA = "0xC1D6A0")]
	public AdditionalPhysicalObject()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x643138", Offset = "0x643138")]
public class GamblerLayer : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PaintLayerBehaviour paint;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SlotMachine slot;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int insertCoinFrame;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int pullMachineMin;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int pullMachineMax;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastFrame;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSouce;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip bangMacihne;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject idleCondition;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xABA2C0", Offset = "0xABA2C0", VA = "0xABA2C0")]
	public void BangMacihne()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xABA30C", Offset = "0xABA30C", VA = "0xABA30C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xABA368", Offset = "0xABA368", VA = "0xABA368")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xABA4A4", Offset = "0xABA4A4", VA = "0xABA4A4")]
	public GamblerLayer()
	{
	}
}
[Token(Token = "0x2000092")]
public class InvoluntaryHandPosition : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x13B5F9C", Offset = "0x13B5F9C", VA = "0x13B5F9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x13B6174", Offset = "0x13B6174", VA = "0x13B6174")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x13B62FC", Offset = "0x13B62FC", VA = "0x13B62FC")]
	public InvoluntaryHandPosition()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x643198", Offset = "0x643198")]
public class MakeSoundOnCollision : MonoBehaviour, IPausable
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip audioClip;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x13BFF4C", Offset = "0x13BFF4C", VA = "0x13BFF4C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x13C0048", Offset = "0x13C0048", VA = "0x13C0048", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x13C00D8", Offset = "0x13C00D8", VA = "0x13C00D8", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x13C00DC", Offset = "0x13C00DC", VA = "0x13C00DC")]
	public MakeSoundOnCollision()
	{
	}
}
[Token(Token = "0x2000094")]
public class MoveToGameObjectState : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float enableTime;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initPos;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion initRot;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x13C3C34", Offset = "0x13C3C34", VA = "0x13C3C34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x13C3CB8", Offset = "0x13C3CB8", VA = "0x13C3CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x13C3E24", Offset = "0x13C3E24", VA = "0x13C3E24")]
	public MoveToGameObjectState()
	{
	}
}
[Token(Token = "0x2000095")]
public class PLoadAudioClipsCommand : PInstantCommand
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] clips;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x13AA488", Offset = "0x13AA488", VA = "0x13AA488", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x13AA510", Offset = "0x13AA510", VA = "0x13AA510", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x13AA700", Offset = "0x13AA700", VA = "0x13AA700", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x13AA748", Offset = "0x13AA748", VA = "0x13AA748", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x13AA74C", Offset = "0x13AA74C", VA = "0x13AA74C")]
	public PLoadAudioClipsCommand()
	{
	}
}
[Token(Token = "0x2000096")]
public class PLoopCommand : PInstantCommand
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pause;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator[] anims;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector dir;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x13AAAF4", Offset = "0x13AAAF4", VA = "0x13AAAF4", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x13AABA0", Offset = "0x13AABA0", VA = "0x13AABA0", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x13AACCC", Offset = "0x13AACCC", VA = "0x13AACCC", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x13AAD14", Offset = "0x13AAD14", VA = "0x13AAD14", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x13AAD18", Offset = "0x13AAD18", VA = "0x13AAD18")]
	public PLoopCommand()
	{
	}
}
[Token(Token = "0x2000097")]
public class PSetConditionalBindingCommand : PInstantCommand
{
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6431F8", Offset = "0x6431F8")]
	private sealed class <waitToPlay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PSetConditionalBindingCommand <>4__this;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayableGraph <graph>5__2;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0xA9DAB0", Offset = "0xA9DAB0", VA = "0xA9DAB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0xA9DAF8", Offset = "0xA9DAF8", VA = "0xA9DAF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xA9D908", Offset = "0xA9D908", VA = "0xA9D908")]
		[DebuggerHidden]
		public <waitToPlay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xA9D934", Offset = "0xA9D934", VA = "0xA9D934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xA9D938", Offset = "0xA9D938", VA = "0xA9D938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xA9DAB8", Offset = "0xA9DAB8", VA = "0xA9DAB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector dir;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectCondition condition;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int bindingIndex1;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int bindingIndex2;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x13ACE94", Offset = "0x13ACE94", VA = "0x13ACE94", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x13ACEC0", Offset = "0x13ACEC0", VA = "0x13ACEC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6505EC", Offset = "0x6505EC")]
	private IEnumerator waitToPlay()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x13ACF38", Offset = "0x13ACF38", VA = "0x13ACF38", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x13AD168", Offset = "0x13AD168", VA = "0x13AD168", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x13AD1B0", Offset = "0x13AD1B0", VA = "0x13AD1B0", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x13AD1B4", Offset = "0x13AD1B4", VA = "0x13AD1B4")]
	public PSetConditionalBindingCommand()
	{
	}
}
[Token(Token = "0x2000099")]
public class PSetKinematicCommand : PInstantCommand
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rigBody;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isKinematicValue;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x13AD538", Offset = "0x13AD538", VA = "0x13AD538", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x13AD55C", Offset = "0x13AD55C", VA = "0x13AD55C", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x13AD688", Offset = "0x13AD688", VA = "0x13AD688", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x13AD6D0", Offset = "0x13AD6D0", VA = "0x13AD6D0", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x13AD6D4", Offset = "0x13AD6D4", VA = "0x13AD6D4")]
	public PSetKinematicCommand()
	{
	}
}
[Token(Token = "0x200009A")]
public class PSetLoopTimeCommand : PInstantCommand
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector dir;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x13AD8EC", Offset = "0x13AD8EC", VA = "0x13AD8EC", Slot = "12")]
	public override void InnerPlay()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x13AD914", Offset = "0x13AD914", VA = "0x13AD914", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x13ADA40", Offset = "0x13ADA40", VA = "0x13ADA40", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x13ADA88", Offset = "0x13ADA88", VA = "0x13ADA88", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x13ADA8C", Offset = "0x13ADA8C", VA = "0x13ADA8C")]
	public PSetLoopTimeCommand()
	{
	}
}
[Token(Token = "0x200009B")]
public class PWaitForSightCommand : PBlockingCommand
{
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643208", Offset = "0x643208")]
	private sealed class <InnerPlay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PWaitForSightCommand <>4__this;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera <cam>5__2;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000304")]
			[Address(RVA = "0xA9E6B8", Offset = "0xA9E6B8", VA = "0xA9E6B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000306")]
			[Address(RVA = "0xA9E700", Offset = "0xA9E700", VA = "0xA9E700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xA9E5A4", Offset = "0xA9E5A4", VA = "0xA9E5A4")]
		[DebuggerHidden]
		public <InnerPlay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xA9E5D0", Offset = "0xA9E5D0", VA = "0xA9E5D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xA9E5D4", Offset = "0xA9E5D4", VA = "0xA9E5D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0xA9E6C0", Offset = "0xA9E6C0", VA = "0xA9E6C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider lookAtTrigger;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PInteractionSystem.PAction onWaitEnd;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x13AF188", Offset = "0x13AF188", VA = "0x13AF188", Slot = "20")]
	protected override void WrapUp(bool commandStarted, bool commandEnded)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x13AF18C", Offset = "0x13AF18C", VA = "0x13AF18C", Slot = "19")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65069C", Offset = "0x65069C")]
	protected override IEnumerator InnerPlay()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x13AF204", Offset = "0x13AF204", VA = "0x13AF204", Slot = "18")]
	public override float GetBlockTime()
	{
		return default(float);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x13AF210", Offset = "0x13AF210", VA = "0x13AF210", Slot = "4")]
	public override bool isLegal(out List<string> errors)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x13AF39C", Offset = "0x13AF39C", VA = "0x13AF39C", Slot = "10")]
	public override Component[] GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x13AF3E4", Offset = "0x13AF3E4", VA = "0x13AF3E4", Slot = "11")]
	public override void ReplaceReferences(ReplaceTuple[] tuples)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x13AF3E8", Offset = "0x13AF3E8", VA = "0x13AF3E8")]
	public PWaitForSightCommand()
	{
	}
}
[Token(Token = "0x200009D")]
public class SetSpotColor : MonoBehaviour, IPausable
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string colorName;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color oldColor;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x13811A8", Offset = "0x13811A8", VA = "0x13811A8", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1381264", Offset = "0x1381264", VA = "0x1381264", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1381308", Offset = "0x1381308", VA = "0x1381308")]
	public SetSpotColor()
	{
	}
}
[Token(Token = "0x200009E")]
public class SlotMachine : MonoBehaviour
{
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource slotAudio;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip insetCoin;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip pullLevel;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip releaseLever;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x13853D0", Offset = "0x13853D0", VA = "0x13853D0")]
	public void InsertCoin()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x13854C8", Offset = "0x13854C8", VA = "0x13854C8")]
	public void PullLever()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x13855C0", Offset = "0x13855C0", VA = "0x13855C0")]
	public void ReleaseLever()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x13856B8", Offset = "0x13856B8", VA = "0x13856B8")]
	public SlotMachine()
	{
	}
}
[Token(Token = "0x200009F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x643218", Offset = "0x643218")]
[ExecuteInEditMode]
public class WireConnection : HoverConnection
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x8C4798", Offset = "0x8C4798", VA = "0x8C4798", Slot = "4")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x8C48F8", Offset = "0x8C48F8", VA = "0x8C48F8")]
	public WireConnection()
	{
	}
}
[Token(Token = "0x20000A0")]
[ExecuteInEditMode]
public class SaphireNucleusSpin : MonoBehaviour
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PaintLayerBehaviour paintLayer;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float factor;

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x137E4F0", Offset = "0x137E4F0", VA = "0x137E4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x137E54C", Offset = "0x137E54C", VA = "0x137E54C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x137E5F4", Offset = "0x137E5F4", VA = "0x137E5F4")]
	public SaphireNucleusSpin()
	{
	}
}
[Token(Token = "0x20000A1")]
public class Shadow : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform origin;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 delta;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1381900", Offset = "0x1381900", VA = "0x1381900")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1381974", Offset = "0x1381974", VA = "0x1381974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1381A14", Offset = "0x1381A14", VA = "0x1381A14")]
	public Shadow()
	{
	}
}
[Token(Token = "0x20000A2")]
public class ExtrasAchievement : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArtViewer viewer;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundtrackPlayer soundtrack;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string achievementAPIName;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xAAB85C", Offset = "0xAAB85C", VA = "0xAAB85C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xAAB91C", Offset = "0xAAB91C", VA = "0xAAB91C")]
	public ExtrasAchievement()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ArtViewer : LocalizedObject
{
	[Serializable]
	[Token(Token = "0x20000A4")]
	public class ArtPiece
	{
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInNormalInspector]
		public bool watched;

		[Token(Token = "0x17000061")]
		public GameObject gameObject
		{
			[Token(Token = "0x600031F")]
			[Address(RVA = "0x8C9D74", Offset = "0x8C9D74", VA = "0x8C9D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x8C9DE0", Offset = "0x8C9DE0", VA = "0x8C9DE0")]
		public ArtPiece()
		{
		}
	}

	[Token(Token = "0x20000A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643298", Offset = "0x643298")]
	private sealed class <showArt>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArtViewer <>4__this;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000324")]
			[Address(RVA = "0x8C9D90", Offset = "0x8C9D90", VA = "0x8C9D90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000326")]
			[Address(RVA = "0x8C9DD8", Offset = "0x8C9DD8", VA = "0x8C9DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x8C9A14", Offset = "0x8C9A14", VA = "0x8C9A14")]
		[DebuggerHidden]
		public <showArt>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x8C9A40", Offset = "0x8C9A40", VA = "0x8C9A40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x8C9A44", Offset = "0x8C9A44", VA = "0x8C9A44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x8C9D98", Offset = "0x8C9D98", VA = "0x8C9D98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleTextObject;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro counterTextObject;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blockInteractionCondition;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ArtPiece[] art;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentArtIndex;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC22C64", Offset = "0xC22C64", VA = "0xC22C64", Slot = "4")]
	public override void SetLanguage()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC22CD4", Offset = "0xC22CD4", VA = "0xC22CD4")]
	private string getTranslatedTitle(string englishTitle)
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC22E04", Offset = "0xC22E04", VA = "0xC22E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC22EA4", Offset = "0xC22EA4", VA = "0xC22EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65074C", Offset = "0x65074C")]
	private IEnumerator showArt(int index)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC22F2C", Offset = "0xC22F2C", VA = "0xC22F2C")]
	public void Next()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC22F78", Offset = "0xC22F78", VA = "0xC22F78")]
	public void Prev()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC22FC8", Offset = "0xC22FC8", VA = "0xC22FC8")]
	public ArtViewer()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MailingList : MonoBehaviour
{
	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6432A8", Offset = "0x6432A8")]
	private sealed class <SubmitEmail>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MailingList <>4__this;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string email;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000335")]
			[Address(RVA = "0x13D62F4", Offset = "0x13D62F4", VA = "0x13D62F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0x13D633C", Offset = "0x13D633C", VA = "0x13D633C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x13D61C8", Offset = "0x13D61C8", VA = "0x13D61C8")]
		[DebuggerHidden]
		public <SubmitEmail>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x13D61F4", Offset = "0x13D61F4", VA = "0x13D61F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x13D61F8", Offset = "0x13D61F8", VA = "0x13D61F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x13D62FC", Offset = "0x13D62FC", VA = "0x13D62FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string EnterAddressStringKey;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ValidAddressStringKey;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string LoadingStringKey;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string SuccessStringKey;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ErrorStringKey;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ErrNoNetworkKey;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Keyboard keyboard;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Regex emailValidator;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x13BF598", Offset = "0x13BF598", VA = "0x13BF598")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x13BF7EC", Offset = "0x13BF7EC", VA = "0x13BF7EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x13BF978", Offset = "0x13BF978", VA = "0x13BF978")]
	public void HandleUpdate(string text)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x13BF990", Offset = "0x13BF990", VA = "0x13BF990")]
	public void HandleSubmit(string text)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x13BFB9C", Offset = "0x13BFB9C", VA = "0x13BFB9C")]
	public void HandleCancel()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x13BFB08", Offset = "0x13BFB08", VA = "0x13BFB08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6507FC", Offset = "0x6507FC")]
	private IEnumerator SubmitEmail(string email)
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x13BFC10", Offset = "0x13BFC10", VA = "0x13BFC10")]
	public void Success(string msg)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x13BFD04", Offset = "0x13BFD04", VA = "0x13BFD04")]
	public void Error(string err)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x13BFAEC", Offset = "0x13BFAEC", VA = "0x13BFAEC")]
	private bool ValidateEmail(string text)
	{
		return default(bool);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x13BF744", Offset = "0x13BF744", VA = "0x13BF744")]
	private string GetTranslation(string key)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x13BFDE8", Offset = "0x13BFDE8", VA = "0x13BFDE8")]
	public MailingList()
	{
	}
}
[Token(Token = "0x20000A8")]
public class SoundtrackPlayer : MonoBehaviour, IPausable
{
	[Serializable]
	[Token(Token = "0x20000A9")]
	public class TrackData
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip left;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip right;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip _2D;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color backgroundTint;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro textObject;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInNormalInspector]
		public bool finished;

		[Token(Token = "0x17000066")]
		public Transform timerParent
		{
			[Token(Token = "0x6000341")]
			[Address(RVA = "0xAA2C18", Offset = "0xAA2C18", VA = "0xAA2C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xAA2C44", Offset = "0xAA2C44", VA = "0xAA2C44")]
		public TrackData()
		{
		}
	}

	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6432B8", Offset = "0x6432B8")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundtrackPlayer <>4__this;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0xAA2BC8", Offset = "0xAA2BC8", VA = "0xAA2BC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0xAA2C10", Offset = "0xAA2C10", VA = "0xAA2C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xAA2ABC", Offset = "0xAA2ABC", VA = "0xAA2ABC")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xAA2AE8", Offset = "0xAA2AE8", VA = "0xAA2AE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xAA2AEC", Offset = "0xAA2AEC", VA = "0xAA2AEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xAA2BD0", Offset = "0xAA2BD0", VA = "0xAA2BD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource left;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource right;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource _2D;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackData[] trackList;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool playing;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public int currentTrack;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool gamePlaying;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool autoPlay;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x13892C4", Offset = "0x13892C4", VA = "0x13892C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6508AC", Offset = "0x6508AC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x138933C", Offset = "0x138933C", VA = "0x138933C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1389344", Offset = "0x1389344", VA = "0x1389344")]
	public void SoundTrackInstruction(int index)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1389524", Offset = "0x1389524", VA = "0x1389524")]
	public void SoundTrackInstruction(GameObject argument)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x13893F4", Offset = "0x13893F4", VA = "0x13893F4")]
	private void PlayTrack()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1389608", Offset = "0x1389608", VA = "0x1389608")]
	public void Update()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1389730", Offset = "0x1389730", VA = "0x1389730", Slot = "4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x138973C", Offset = "0x138973C", VA = "0x138973C", Slot = "5")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1389748", Offset = "0x1389748", VA = "0x1389748")]
	public SoundtrackPlayer()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6432C8", Offset = "0x6432C8")]
public class SoundtrackVisualizer : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform visualTimerPositionObject;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform visualTimerScaleObject;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject playIcon;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pauseIcon;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 visualTimerInitPosition;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SoundtrackPlayer player;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int oldTrackIndex;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1389760", Offset = "0x1389760", VA = "0x1389760")]
	private void Start()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1389880", Offset = "0x1389880", VA = "0x1389880")]
	private void Update()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1389C48", Offset = "0x1389C48", VA = "0x1389C48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1389D28", Offset = "0x1389D28", VA = "0x1389D28")]
	public SoundtrackVisualizer()
	{
	}
}
[Token(Token = "0x20000AC")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x139EE58", Offset = "0x139EE58", VA = "0x139EE58")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x139EFBC", Offset = "0x139EFBC", VA = "0x139EFBC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x139F358", Offset = "0x139F358", VA = "0x139F358")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x139F4FC", Offset = "0x139F4FC", VA = "0x139F4FC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x139F52C", Offset = "0x139F52C", VA = "0x139F52C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20000AD")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x13735A4", Offset = "0x13735A4", VA = "0x13735A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x137362C", Offset = "0x137362C", VA = "0x137362C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x13737A0", Offset = "0x13737A0", VA = "0x13737A0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20000AE")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000069")]
	public bool IsVisible
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xABB3B0", Offset = "0xABB3B0", VA = "0xABB3B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xABB3B8", Offset = "0xABB3B8", VA = "0xABB3B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xABB4F4", Offset = "0xABB4F4", VA = "0xABB4F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xABB6BC", Offset = "0xABB6BC", VA = "0xABB6BC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xABB6C4", Offset = "0xABB6C4", VA = "0xABB6C4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20000AF")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20000B0")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xAA0BCC", Offset = "0xAA0BCC", VA = "0xAA0BCC")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B1")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64545C", Offset = "0x64545C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x645474", Offset = "0x645474")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64548C", Offset = "0x64548C")]
		public float LatencyWeight;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6454A4", Offset = "0x6454A4")]
		public int MaxSamples;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xAA0BD4", Offset = "0xAA0BD4", VA = "0xAA0BD4")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xAA0D0C", Offset = "0xAA0D0C", VA = "0xAA0D0C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x13794B4", Offset = "0x13794B4", VA = "0x13794B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x137960C", Offset = "0x137960C", VA = "0x137960C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x13799F0", Offset = "0x13799F0", VA = "0x13799F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x137993C", Offset = "0x137993C", VA = "0x137993C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1379D20", Offset = "0x1379D20", VA = "0x1379D20")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x137A008", Offset = "0x137A008", VA = "0x137A008")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x20000B2")]
public class P2PManager
{
	[Token(Token = "0x20000B3")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400030C")]
		Update = 1
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x13A04F8", Offset = "0x13A04F8", VA = "0x13A04F8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x13A05D8", Offset = "0x13A05D8", VA = "0x13A05D8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x13A06BC", Offset = "0x13A06BC", VA = "0x13A06BC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x13A073C", Offset = "0x13A073C", VA = "0x13A073C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x13A08AC", Offset = "0x13A08AC", VA = "0x13A08AC")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x13A0AEC", Offset = "0x13A0AEC", VA = "0x13A0AEC")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x13A0EDC", Offset = "0x13A0EDC", VA = "0x13A0EDC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x13A1198", Offset = "0x13A1198", VA = "0x13A1198")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x13A0CB8", Offset = "0x13A0CB8", VA = "0x13A0CB8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x13A10CC", Offset = "0x13A10CC", VA = "0x13A10CC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x13A0D9C", Offset = "0x13A0D9C", VA = "0x13A0D9C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x13A13D0", Offset = "0x13A13D0", VA = "0x13A13D0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x13A0D00", Offset = "0x13A0D00", VA = "0x13A0D00")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x13A1110", Offset = "0x13A1110", VA = "0x13A1110")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x13A0E40", Offset = "0x13A0E40", VA = "0x13A0E40")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x13A1458", Offset = "0x13A1458", VA = "0x13A1458")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20000B4")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1371C58", Offset = "0x1371C58", VA = "0x1371C58", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1371C9C", Offset = "0x1371C9C", VA = "0x1371C9C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1371CD4", Offset = "0x1371CD4", VA = "0x1371CD4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1371CFC", Offset = "0x1371CFC", VA = "0x1371CFC")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1371E98", Offset = "0x1371E98", VA = "0x1371E98")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1371F18", Offset = "0x1371F18", VA = "0x1371F18")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1371F6C", Offset = "0x1371F6C", VA = "0x1371F6C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20000B5")]
public class RemotePlayer
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x137A0C4", Offset = "0x137A0C4", VA = "0x137A0C4")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20000B6")]
public class RoomManager
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x137A4B4", Offset = "0x137A4B4", VA = "0x137A4B4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x137A5B8", Offset = "0x137A5B8", VA = "0x137A5B8")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x137A738", Offset = "0x137A738", VA = "0x137A738")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x137A874", Offset = "0x137A874", VA = "0x137A874")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x137A948", Offset = "0x137A948", VA = "0x137A948")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x137AA84", Offset = "0x137AA84", VA = "0x137AA84")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x137A768", Offset = "0x137A768", VA = "0x137A768")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x137AB0C", Offset = "0x137AB0C", VA = "0x137AB0C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x137B2B8", Offset = "0x137B2B8", VA = "0x137B2B8")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x137B60C", Offset = "0x137B60C", VA = "0x137B60C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x137AE40", Offset = "0x137AE40", VA = "0x137AE40")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x20000B7")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20000B8")]
	public enum State
	{
		[Token(Token = "0x4000344")]
		INITIALIZING,
		[Token(Token = "0x4000345")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000346")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000347")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000348")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000349")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x400034A")]
		LEAVING_A_ROOM,
		[Token(Token = "0x400034B")]
		SHUTDOWN
	}

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700006A")]
	public static State CurrentState
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x13878DC", Offset = "0x13878DC", VA = "0x13878DC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700006B")]
	public static ulong MyID
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x138794C", Offset = "0x138794C", VA = "0x138794C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700006C")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1387A2C", Offset = "0x1387A2C", VA = "0x1387A2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1385A38", Offset = "0x1385A38", VA = "0x1385A38", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1385DDC", Offset = "0x1385DDC", VA = "0x1385DDC", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x138654C", Offset = "0x138654C", VA = "0x138654C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x138686C", Offset = "0x138686C", VA = "0x138686C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1386870", Offset = "0x1386870", VA = "0x1386870")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1386990", Offset = "0x1386990", VA = "0x1386990")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x13870E4", Offset = "0x13870E4", VA = "0x13870E4")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x13874D8", Offset = "0x13874D8", VA = "0x13874D8")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x13876E8", Offset = "0x13876E8", VA = "0x13876E8")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1387870", Offset = "0x1387870", VA = "0x1387870")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x13861D8", Offset = "0x13861D8", VA = "0x13861D8")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x13866F4", Offset = "0x13866F4", VA = "0x13866F4")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x138628C", Offset = "0x138628C", VA = "0x138628C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1387B54", Offset = "0x1387B54", VA = "0x1387B54")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1387CD0", Offset = "0x1387CD0", VA = "0x1387CD0")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1387DB4", Offset = "0x1387DB4", VA = "0x1387DB4")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1387F10", Offset = "0x1387F10", VA = "0x1387F10")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1387FF4", Offset = "0x1387FF4", VA = "0x1387FF4")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x13867AC", Offset = "0x13867AC", VA = "0x13867AC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x138853C", Offset = "0x138853C", VA = "0x138853C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x13885D0", Offset = "0x13885D0", VA = "0x13885D0")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1388328", Offset = "0x1388328", VA = "0x1388328")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x13887DC", Offset = "0x13887DC", VA = "0x13887DC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x13859B4", Offset = "0x13859B4", VA = "0x13859B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x65095C", Offset = "0x65095C")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1388920", Offset = "0x1388920", VA = "0x1388920")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x13889FC", Offset = "0x13889FC", VA = "0x13889FC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20000B9")]
public class VoipManager
{
	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x8C38F4", Offset = "0x8C38F4", VA = "0x8C38F4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x8C39D4", Offset = "0x8C39D4", VA = "0x8C39D4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x8C3AB8", Offset = "0x8C3AB8", VA = "0x8C3AB8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x8C3B38", Offset = "0x8C3B38", VA = "0x8C3B38")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x8C3CA8", Offset = "0x8C3CA8", VA = "0x8C3CA8")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20000BA")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xABB06C", Offset = "0xABB06C", VA = "0xABB06C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xABB0F4", Offset = "0xABB0F4", VA = "0xABB0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xABB268", Offset = "0xABB268", VA = "0xABB268")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xABB2CC", Offset = "0xABB2CC", VA = "0xABB2CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xABB130", Offset = "0xABB130", VA = "0xABB130")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xABB390", Offset = "0xABB390", VA = "0xABB390")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xABB3A8", Offset = "0xABB3A8", VA = "0xABB3A8")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BB")]
public class AvatarLayer
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC236E4", Offset = "0xC236E4", VA = "0xC236E4")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class PacketRecordSettings
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x13AF3F0", Offset = "0x13AF3F0", VA = "0x13AF3F0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000BD")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20000BE")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xA9AC58", Offset = "0xA9AC58", VA = "0xA9AC58")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20000BF")]
	public enum HandType
	{
		[Token(Token = "0x40003AD")]
		Right,
		[Token(Token = "0x40003AE")]
		Left,
		[Token(Token = "0x40003AF")]
		Max
	}

	[Token(Token = "0x20000C0")]
	public enum HandJoint
	{
		[Token(Token = "0x40003B1")]
		HandBase,
		[Token(Token = "0x40003B2")]
		IndexBase,
		[Token(Token = "0x40003B3")]
		IndexTip,
		[Token(Token = "0x40003B4")]
		ThumbBase,
		[Token(Token = "0x40003B5")]
		ThumbTip,
		[Token(Token = "0x40003B6")]
		Max
	}

	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643328", Offset = "0x643328")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0xA9AC08", Offset = "0xA9AC08", VA = "0xA9AC08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0xA9AC50", Offset = "0xA9AC50", VA = "0xA9AC50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xA9AA2C", Offset = "0xA9AA2C", VA = "0xA9AA2C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xA9AA58", Offset = "0xA9AA58", VA = "0xA9AA58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xA9AA5C", Offset = "0xA9AA5C", VA = "0xA9AA5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xA9AC10", Offset = "0xA9AC10", VA = "0xA9AC10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6454BC", Offset = "0x6454BC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6454F4", Offset = "0x6454F4")]
	public bool EnableBody;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64552C", Offset = "0x64552C")]
	public bool RecordPackets;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x645564", Offset = "0x645564")]
	public bool StartWithControllers;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64559C", Offset = "0x64559C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64559C", Offset = "0x64559C")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64560C", Offset = "0x64560C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645644", Offset = "0x645644")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64567C", Offset = "0x64567C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6456B4", Offset = "0x6456B4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6456EC", Offset = "0x6456EC")]
	public bool EnableLaughter;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400038D")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400038F")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000390")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000391")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000392")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000393")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x9BFA44", Offset = "0x9BFA44", VA = "0x9BFA44")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x9BFEE4", Offset = "0x9BFEE4", VA = "0x9BFEE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x9BFF78", Offset = "0x9BFF78", VA = "0x9BFF78")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x9BFFE0", Offset = "0x9BFFE0", VA = "0x9BFFE0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x9C0110", Offset = "0x9C0110", VA = "0x9C0110")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x9C01F0", Offset = "0x9C01F0", VA = "0x9C01F0")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x9C02CC", Offset = "0x9C02CC", VA = "0x9C02CC")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x9C04B0", Offset = "0x9C04B0", VA = "0x9C04B0")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x9C058C", Offset = "0x9C058C", VA = "0x9C058C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x9C0604", Offset = "0x9C0604", VA = "0x9C0604")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x9C06EC", Offset = "0x9C06EC", VA = "0x9C06EC")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x9C0778", Offset = "0x9C0778", VA = "0x9C0778")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x9C0800", Offset = "0x9C0800", VA = "0x9C0800")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x9C0818", Offset = "0x9C0818", VA = "0x9C0818")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60003C0")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x9C0CC8", Offset = "0x9C0CC8", VA = "0x9C0CC8")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x9C1048", Offset = "0x9C1048", VA = "0x9C1048")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x9C1234", Offset = "0x9C1234", VA = "0x9C1234")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x9C1480", Offset = "0x9C1480", VA = "0x9C1480")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x9C1574", Offset = "0x9C1574", VA = "0x9C1574")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x9C1BE0", Offset = "0x9C1BE0", VA = "0x9C1BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x9C1F18", Offset = "0x9C1F18", VA = "0x9C1F18")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x9C2950", Offset = "0x9C2950", VA = "0x9C2950")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x9C29A4", Offset = "0x9C29A4", VA = "0x9C29A4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x9C1830", Offset = "0x9C1830", VA = "0x9C1830")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x9C18D4", Offset = "0x9C18D4", VA = "0x9C18D4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x9C29D4", Offset = "0x9C29D4", VA = "0x9C29D4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x9C22F0", Offset = "0x9C22F0", VA = "0x9C22F0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x9C2C48", Offset = "0x9C2C48", VA = "0x9C2C48")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x9C2A38", Offset = "0x9C2A38", VA = "0x9C2A38")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x9C2F1C", Offset = "0x9C2F1C", VA = "0x9C2F1C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x9C3398", Offset = "0x9C3398", VA = "0x9C3398")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x9C379C", Offset = "0x9C379C", VA = "0x9C379C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x9C38F0", Offset = "0x9C38F0", VA = "0x9C38F0")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x9C3AD4", Offset = "0x9C3AD4", VA = "0x9C3AD4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x9C24D0", Offset = "0x9C24D0", VA = "0x9C24D0")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x9C3BA8", Offset = "0x9C3BA8", VA = "0x9C3BA8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x9C2300", Offset = "0x9C2300", VA = "0x9C2300")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x9C3C98", Offset = "0x9C3C98", VA = "0x9C3C98")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x9C434C", Offset = "0x9C434C", VA = "0x9C434C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x9C4830", Offset = "0x9C4830", VA = "0x9C4830")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x9C4858", Offset = "0x9C4858", VA = "0x9C4858")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x9C4880", Offset = "0x9C4880", VA = "0x9C4880")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x9C27DC", Offset = "0x9C27DC", VA = "0x9C27DC")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x9C3D68", Offset = "0x9C3D68", VA = "0x9C3D68")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x9C4CB0", Offset = "0x9C4CB0", VA = "0x9C4CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6509BC", Offset = "0x6509BC")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x9C4D28", Offset = "0x9C4D28", VA = "0x9C4D28")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x9C4B70", Offset = "0x9C4B70", VA = "0x9C4B70")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x9C4DEC", Offset = "0x9C4DEC", VA = "0x9C4DEC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x9C4ED4", Offset = "0x9C4ED4", VA = "0x9C4ED4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x9C48BC", Offset = "0x9C48BC", VA = "0x9C48BC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x9C4FBC", Offset = "0x9C4FBC", VA = "0x9C4FBC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000C2")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x9C51B8", Offset = "0x9C51B8", VA = "0x9C51B8")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000C3")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x9C5288", Offset = "0x9C5288", VA = "0x9C5288")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x9C6540", Offset = "0x9C6540", VA = "0x9C6540")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x9C6114", Offset = "0x9C6114", VA = "0x9C6114")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x9C5E98", Offset = "0x9C5E98", VA = "0x9C5E98")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x9C5F80", Offset = "0x9C5F80", VA = "0x9C5F80")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x9C67D0", Offset = "0x9C67D0", VA = "0x9C67D0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000C4")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40003BF")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x9C6D98", Offset = "0x9C6D98", VA = "0x9C6D98")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000C5")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x9C7014", Offset = "0x9C7014", VA = "0x9C7014")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x9C7474", Offset = "0x9C7474", VA = "0x9C7474")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000C6")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x9C362C", Offset = "0x9C362C", VA = "0x9C362C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x9C75A4", Offset = "0x9C75A4", VA = "0x9C75A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x9C76D4", Offset = "0x9C76D4", VA = "0x9C76D4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000C7")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x9C7734", Offset = "0x9C7734", VA = "0x9C7734")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x9C7144", Offset = "0x9C7144", VA = "0x9C7144")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x9C773C", Offset = "0x9C773C", VA = "0x9C773C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x9C779C", Offset = "0x9C779C", VA = "0x9C779C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x9C7F50", Offset = "0x9C7F50", VA = "0x9C7F50")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x9C74D4", Offset = "0x9C74D4", VA = "0x9C74D4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000C8")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20000C9")]
	public enum PacketMode
	{
		[Token(Token = "0x40003D3")]
		SDK,
		[Token(Token = "0x40003D4")]
		Unity
	}

	[Token(Token = "0x20000CA")]
	public struct ControllerPose
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xA9ACD8", Offset = "0xA9ACD8", VA = "0xA9ACD8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20000CB")]
	public struct PoseFrame
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xA9ADB4", Offset = "0xA9ADB4", VA = "0xA9ADB4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x9C9888", Offset = "0x9C9888", VA = "0x9C9888")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000402")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x9C9898", Offset = "0x9C9898", VA = "0x9C9898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x9C1978", Offset = "0x9C1978", VA = "0x9C1978")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x9C9920", Offset = "0x9C9920", VA = "0x9C9920")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x9C9928", Offset = "0x9C9928", VA = "0x9C9928")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000CC")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x9C9938", Offset = "0x9C9938", VA = "0x9C9938")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x9C9AA8", Offset = "0x9C9AA8", VA = "0x9C9AA8")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x9C9B10", Offset = "0x9C9B10", VA = "0x9C9B10")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x9C9C74", Offset = "0x9C9C74", VA = "0x9C9C74")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x9CA010", Offset = "0x9CA010", VA = "0x9CA010")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x9CA234", Offset = "0x9CA234", VA = "0x9CA234", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x9CA260", Offset = "0x9CA260", VA = "0x9CA260")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000CE")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public enum TextureType
	{
		[Token(Token = "0x400040A")]
		DiffuseTextures,
		[Token(Token = "0x400040B")]
		NormalMaps,
		[Token(Token = "0x400040C")]
		RoughnessMaps,
		[Token(Token = "0x400040D")]
		Count
	}

	[Token(Token = "0x20000D0")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20000D1")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20000D2")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20000D3")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xA9B7F8", Offset = "0xA9B7F8", VA = "0xA9B7F8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643338", Offset = "0x643338")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0xA9B7A8", Offset = "0xA9B7A8", VA = "0xA9B7A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0xA9B7F0", Offset = "0xA9B7F0", VA = "0xA9B7F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xA9B0B8", Offset = "0xA9B0B8", VA = "0xA9B0B8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xA9B0E4", Offset = "0xA9B0E4", VA = "0xA9B0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xA9B0E8", Offset = "0xA9B0E8", VA = "0xA9B0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xA9B7B0", Offset = "0xA9B7B0", VA = "0xA9B7B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000405")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000406")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000407")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000408")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x9CA2AC", Offset = "0x9CA2AC", VA = "0x9CA2AC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x9CA48C", Offset = "0x9CA48C", VA = "0x9CA48C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x9CA4CC", Offset = "0x9CA4CC", VA = "0x9CA4CC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x9CAC60", Offset = "0x9CAC60", VA = "0x9CAC60")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x9CACCC", Offset = "0x9CACCC", VA = "0x9CACCC")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x9CA568", Offset = "0x9CA568", VA = "0x9CA568")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x9CAD20", Offset = "0x9CAD20", VA = "0x9CAD20")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x9CA9BC", Offset = "0x9CA9BC", VA = "0x9CA9BC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x9CAE10", Offset = "0x9CAE10", VA = "0x9CAE10")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x9CB0B4", Offset = "0x9CB0B4", VA = "0x9CB0B4")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x9CB1DC", Offset = "0x9CB1DC", VA = "0x9CB1DC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x9CB214", Offset = "0x9CB214", VA = "0x9CB214")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x9CABCC", Offset = "0x9CABCC", VA = "0x9CABCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650A6C", Offset = "0x650A6C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x9CC17C", Offset = "0x9CC17C", VA = "0x9CC17C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000071")]
	public float Duration
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x139982C", Offset = "0x139982C", VA = "0x139982C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000072")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x13998A0", Offset = "0x13998A0", VA = "0x13998A0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1399930", Offset = "0x1399930", VA = "0x1399930")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1399A5C", Offset = "0x1399A5C", VA = "0x1399A5C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1399C28", Offset = "0x1399C28", VA = "0x1399C28")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1399D94", Offset = "0x1399D94", VA = "0x1399D94")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1399E6C", Offset = "0x1399E6C", VA = "0x1399E6C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x139A09C", Offset = "0x139A09C", VA = "0x139A09C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x139A378", Offset = "0x139A378", VA = "0x139A378")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000D6")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600042F")]
	[Address(RVA = "0xC293D4", Offset = "0xC293D4", VA = "0xC293D4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xC294E8", Offset = "0xC294E8", VA = "0xC294E8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC29694", Offset = "0xC29694", VA = "0xC29694")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xC29558", Offset = "0xC29558", VA = "0xC29558")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xC295EC", Offset = "0xC295EC", VA = "0xC295EC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000D7")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000434")]
	[Address(RVA = "0xC28FD4", Offset = "0xC28FD4", VA = "0xC28FD4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xC29378", Offset = "0xC29378", VA = "0xC29378")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xC29174", Offset = "0xC29174", VA = "0xC29174")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xC291EC", Offset = "0xC291EC", VA = "0xC291EC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xC29288", Offset = "0xC29288", VA = "0xC29288")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000D8")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400042F")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000430")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x139A5A0", Offset = "0x139A5A0", VA = "0x139A5A0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x139A628", Offset = "0x139A628", VA = "0x139A628", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x139A644", Offset = "0x139A644", VA = "0x139A644")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x139A7E8", Offset = "0x139A7E8", VA = "0x139A7E8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x139A9D8", Offset = "0x139A9D8", VA = "0x139A9D8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000D9")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x139AA74", Offset = "0x139AA74", VA = "0x139AA74")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x139AB58", Offset = "0x139AB58", VA = "0x139AB58")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x139AFC4", Offset = "0x139AFC4", VA = "0x139AFC4")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x139B384", Offset = "0x139B384", VA = "0x139B384")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x139B490", Offset = "0x139B490", VA = "0x139B490")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000DA")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000439")]
	Body = 1,
	[Token(Token = "0x400043A")]
	Hands = 2,
	[Token(Token = "0x400043B")]
	Base = 4,
	[Token(Token = "0x400043C")]
	BodyTilt = 0x10,
	[Token(Token = "0x400043D")]
	Expressive = 0x20,
	[Token(Token = "0x400043E")]
	All = -1
}
[Token(Token = "0x20000DB")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000440")]
	AvatarSpecification,
	[Token(Token = "0x4000441")]
	AssetLoaded,
	[Token(Token = "0x4000442")]
	Count
}
[Token(Token = "0x20000DC")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000DD")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000DE")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000448")]
	Mesh,
	[Token(Token = "0x4000449")]
	Texture,
	[Token(Token = "0x400044A")]
	Pose,
	[Token(Token = "0x400044B")]
	Material,
	[Token(Token = "0x400044C")]
	CombinedMesh,
	[Token(Token = "0x400044D")]
	PBSMaterial,
	[Token(Token = "0x400044E")]
	FailedLoad,
	[Token(Token = "0x400044F")]
	Count
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000E0")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000E1")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000E2")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000E3")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000E4")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000484")]
	RGB24,
	[Token(Token = "0x4000485")]
	DXT1,
	[Token(Token = "0x4000486")]
	DXT5,
	[Token(Token = "0x4000487")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000488")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000489")]
	Count
}
[Token(Token = "0x20000E5")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000E6")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000491")]
	SkinnedMeshRender,
	[Token(Token = "0x4000492")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000493")]
	ProjectorRender,
	[Token(Token = "0x4000494")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000495")]
	Count
}
[Token(Token = "0x20000E7")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000497")]
	Unknown,
	[Token(Token = "0x4000498")]
	Default,
	[Token(Token = "0x4000499")]
	Verbose,
	[Token(Token = "0x400049A")]
	Debug,
	[Token(Token = "0x400049B")]
	Info,
	[Token(Token = "0x400049C")]
	Warn,
	[Token(Token = "0x400049D")]
	Error,
	[Token(Token = "0x400049E")]
	Fatal,
	[Token(Token = "0x400049F")]
	Silent
}
[Token(Token = "0x20000E8")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000E9")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40004A4")]
	One = 1,
	[Token(Token = "0x40004A5")]
	Two = 2,
	[Token(Token = "0x40004A6")]
	Three = 4,
	[Token(Token = "0x40004A7")]
	Joystick = 8
}
[Token(Token = "0x20000EA")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40004A9")]
	One = 1,
	[Token(Token = "0x40004AA")]
	Two = 2,
	[Token(Token = "0x40004AB")]
	Joystick = 4,
	[Token(Token = "0x40004AC")]
	ThumbRest = 8,
	[Token(Token = "0x40004AD")]
	Index = 0x10,
	[Token(Token = "0x40004AE")]
	Pointing = 0x40,
	[Token(Token = "0x40004AF")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000EB")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000EC")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000ED")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000EE")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000F0")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000F1")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000F2")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000F3")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40004CF")]
	Add,
	[Token(Token = "0x40004D0")]
	Multiply,
	[Token(Token = "0x40004D1")]
	Count
}
[Token(Token = "0x20000F4")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40004D3")]
	Color,
	[Token(Token = "0x40004D4")]
	Texture,
	[Token(Token = "0x40004D5")]
	TextureSingleChannel,
	[Token(Token = "0x40004D6")]
	Parallax,
	[Token(Token = "0x40004D7")]
	Count
}
[Token(Token = "0x20000F5")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40004D9")]
	None,
	[Token(Token = "0x40004DA")]
	Positional,
	[Token(Token = "0x40004DB")]
	ViewReflection,
	[Token(Token = "0x40004DC")]
	Fresnel,
	[Token(Token = "0x40004DD")]
	Pulse,
	[Token(Token = "0x40004DE")]
	Count
}
[Token(Token = "0x20000F6")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40004E0")]
	Touch,
	[Token(Token = "0x40004E1")]
	Malibu,
	[Token(Token = "0x40004E2")]
	Go,
	[Token(Token = "0x40004E3")]
	Quest,
	[Token(Token = "0x40004E4")]
	Count
}
[Token(Token = "0x20000F7")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40004E6")]
	Lowest = 1,
	[Token(Token = "0x40004E7")]
	Medium = 3,
	[Token(Token = "0x40004E8")]
	Highest = 5
}
[Token(Token = "0x20000F8")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40004EA")]
	Unknown = -1,
	[Token(Token = "0x40004EB")]
	One,
	[Token(Token = "0x40004EC")]
	Two
}
[Token(Token = "0x20000F9")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x8C8190", Offset = "0x8C8190", VA = "0x8C8190")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x8C81C0", Offset = "0x8C81C0", VA = "0x8C81C0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x8C83DC", Offset = "0x8C83DC", VA = "0x8C83DC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000FA")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x8C84C0", Offset = "0x8C84C0", VA = "0x8C84C0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x8C84F0", Offset = "0x8C84F0", VA = "0x8C84F0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x8C888C", Offset = "0x8C888C", VA = "0x8C888C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000FB")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x8C7720", Offset = "0x8C7720", VA = "0x8C7720")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x8C7750", Offset = "0x8C7750", VA = "0x8C7750", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x8C79E0", Offset = "0x8C79E0", VA = "0x8C79E0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000FC")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8C89F4", Offset = "0x8C89F4", VA = "0x8C89F4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x8C8A24", Offset = "0x8C8A24", VA = "0x8C8A24", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8C8C14", Offset = "0x8C8C14", VA = "0x8C8C14", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000FD")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x9C51C0", Offset = "0x9C51C0", VA = "0x9C51C0")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000FE")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000FF")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000521")]
	FirstPerson = 1,
	[Token(Token = "0x4000522")]
	ThirdPerson = 2,
	[Token(Token = "0x4000523")]
	SelfOccluding = 4
}
[Token(Token = "0x2000100")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000101")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000102")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000103")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000104")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000539")]
	Default,
	[Token(Token = "0x400053A")]
	GripSphere,
	[Token(Token = "0x400053B")]
	GripCube,
	[Token(Token = "0x400053C")]
	Count
}
[Token(Token = "0x2000105")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400053E")]
	Body,
	[Token(Token = "0x400053F")]
	Clothing,
	[Token(Token = "0x4000540")]
	Eyewear,
	[Token(Token = "0x4000541")]
	Hair,
	[Token(Token = "0x4000542")]
	Beard,
	[Token(Token = "0x4000543")]
	Count
}
[Token(Token = "0x2000106")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000107")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000108")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000109")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200010A")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400054D")]
	AvatarHead,
	[Token(Token = "0x400054E")]
	AvatarHand,
	[Token(Token = "0x400054F")]
	Object,
	[Token(Token = "0x4000550")]
	ObjectStatic,
	[Token(Token = "0x4000551")]
	Count
}
[Token(Token = "0x200010B")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200010C")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200010D")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200010E")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200010F")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400055D")]
	Point,
	[Token(Token = "0x400055E")]
	Direction,
	[Token(Token = "0x400055F")]
	Spot,
	[Token(Token = "0x4000560")]
	Count
}
[Token(Token = "0x2000110")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000111")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000112")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000113")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000114")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000576")]
	None = 0u,
	[Token(Token = "0x4000577")]
	GazeTarget = 1u,
	[Token(Token = "0x4000578")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000115")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000116")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000117")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000118")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000119")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200011A")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xA9B800", Offset = "0xA9B800", VA = "0xA9B800")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400058D")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000073")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x139AD50", Offset = "0x139AD50", VA = "0x139AD50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x139B4A0", Offset = "0x139B4A0", VA = "0x139B4A0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x139B7F0", Offset = "0x139B7F0", VA = "0x139B7F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x139B860", Offset = "0x139B860", VA = "0x139B860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x139C240", Offset = "0x139C240", VA = "0x139C240")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x139C294", Offset = "0x139C294", VA = "0x139C294")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x139C2E8", Offset = "0x139C2E8", VA = "0x139C2E8")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x139C34C", Offset = "0x139C34C", VA = "0x139C34C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x139C3B0", Offset = "0x139C3B0", VA = "0x139C3B0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x139C040", Offset = "0x139C040", VA = "0x139C040")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x139C48C", Offset = "0x139C48C", VA = "0x139C48C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x139C5E0", Offset = "0x139C5E0", VA = "0x139C5E0")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x139AF48", Offset = "0x139AF48", VA = "0x139AF48")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x139C6D4", Offset = "0x139C6D4", VA = "0x139C6D4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x139B7A4", Offset = "0x139B7A4", VA = "0x139B7A4")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x139C7B4", Offset = "0x139C7B4", VA = "0x139C7B4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x139C834", Offset = "0x139C834", VA = "0x139C834")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200011C")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000074")]
	public static string AppID
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x139C774", Offset = "0x139C774", VA = "0x139C774")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x139C9A4", Offset = "0x139C9A4", VA = "0x139C9A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x139C794", Offset = "0x139C794", VA = "0x139C794")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x139C9D4", Offset = "0x139C9D4", VA = "0x139C9D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x139C84C", Offset = "0x139C84C", VA = "0x139C84C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x139CA04", Offset = "0x139CA04", VA = "0x139CA04")]
		set
		{
		}
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x139CA58", Offset = "0x139CA58", VA = "0x139CA58")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200011D")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x139E5D0", Offset = "0x139E5D0", VA = "0x139E5D0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x139E8C4", Offset = "0x139E8C4", VA = "0x139E8C4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x139E75C", Offset = "0x139E75C", VA = "0x139E75C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x139EB04", Offset = "0x139EB04", VA = "0x139EB04")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200011E")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x139EB14", Offset = "0x139EB14", VA = "0x139EB14")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x139EC70", Offset = "0x139EC70", VA = "0x139EC70")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x139EE48", Offset = "0x139EE48", VA = "0x139EE48")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200011F")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40005A4")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40005A5")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40005A6")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x139CAC4", Offset = "0x139CAC4", VA = "0x139CAC4")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x139DAFC", Offset = "0x139DAFC", VA = "0x139DAFC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x139DD38", Offset = "0x139DD38", VA = "0x139DD38")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x139D1FC", Offset = "0x139D1FC", VA = "0x139D1FC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x139CF20", Offset = "0x139CF20", VA = "0x139CF20")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x139D084", Offset = "0x139D084", VA = "0x139D084")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x139E5C0", Offset = "0x139E5C0", VA = "0x139E5C0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000120")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000121")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000122")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xA9BEFC", Offset = "0xA9BEFC", VA = "0xA9BEFC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000123")]
	public struct TextureSet
	{
		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xA9BF58", Offset = "0xA9BF58", VA = "0xA9BF58")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6433B8", Offset = "0x6433B8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049A")]
			[Address(RVA = "0xA9BEAC", Offset = "0xA9BEAC", VA = "0xA9BEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0xA9BEF4", Offset = "0xA9BEF4", VA = "0xA9BEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xA9B87C", Offset = "0xA9B87C", VA = "0xA9B87C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xA9B8A8", Offset = "0xA9B8A8", VA = "0xA9B8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xA9B8AC", Offset = "0xA9B8AC", VA = "0xA9B8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xA9BEB4", Offset = "0xA9BEB4", VA = "0xA9BEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40005AA")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40005AB")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40005AE")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40005AF")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40005B0")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40005B1")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40005B2")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40005B3")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40005B4")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x139F570", Offset = "0x139F570", VA = "0x139F570")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x139FA50", Offset = "0x139FA50", VA = "0x139FA50")]
	public void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x139FC50", Offset = "0x139FC50", VA = "0x139FC50")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x139FC9C", Offset = "0x139FC9C", VA = "0x139FC9C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x139FBC4", Offset = "0x139FBC4", VA = "0x139FBC4")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x139FE48", Offset = "0x139FE48", VA = "0x139FE48")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x13A0050", Offset = "0x13A0050", VA = "0x13A0050")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x13A00F4", Offset = "0x13A00F4", VA = "0x13A00F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650BBC", Offset = "0x650BBC")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x139C440", Offset = "0x139C440", VA = "0x139C440")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x13A01A0", Offset = "0x13A01A0", VA = "0x13A01A0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000125")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x13A0318", Offset = "0x13A0318", VA = "0x13A0318")]
	private void Update()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x13A048C", Offset = "0x13A048C", VA = "0x13A048C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000126")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000127")]
	public delegate void OnClick();

	[Token(Token = "0x2000128")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000129")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200012A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6433C8", Offset = "0x6433C8")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x8CAB0C", Offset = "0x8CAB0C", VA = "0x8CAB0C")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x8CAB14", Offset = "0x8CAB14", VA = "0x8CAB14")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6433D8", Offset = "0x6433D8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x8CAD38", Offset = "0x8CAD38", VA = "0x8CAD38")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x8CAD40", Offset = "0x8CAD40", VA = "0x8CAD40")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6433E8", Offset = "0x6433E8")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x8CAF8C", Offset = "0x8CAF8C", VA = "0x8CAF8C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x8CAF94", Offset = "0x8CAF94", VA = "0x8CAF94")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6433F8", Offset = "0x6433F8")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x8CB328", Offset = "0x8CB328", VA = "0x8CB328")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x8CB330", Offset = "0x8CB330", VA = "0x8CB330")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643408", Offset = "0x643408")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x8CB350", Offset = "0x8CB350", VA = "0x8CB350")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x8CB358", Offset = "0x8CB358", VA = "0x8CB358")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40005C6")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40005C7")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40005C8")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40005D7")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40005D8")]
	public const float marginH = 16f;

	[Token(Token = "0x40005D9")]
	public const float marginV = 16f;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 menuOffset;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LaserPointer lp;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer lr;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool isHorizontal;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x894560", Offset = "0x894560", VA = "0x894560")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x894A90", Offset = "0x894A90", VA = "0x894A90")]
	public void Show()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x89508C", Offset = "0x89508C", VA = "0x89508C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x894E48", Offset = "0x894E48", VA = "0x894E48")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x895248", Offset = "0x895248", VA = "0x895248")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x895568", Offset = "0x895568", VA = "0x895568")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x895930", Offset = "0x895930", VA = "0x895930")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x895A34", Offset = "0x895A34", VA = "0x895A34")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x895C18", Offset = "0x895C18", VA = "0x895C18")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x895CBC", Offset = "0x895CBC", VA = "0x895CBC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x895EAC", Offset = "0x895EAC", VA = "0x895EAC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8960B4", Offset = "0x8960B4", VA = "0x8960B4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8963B8", Offset = "0x8963B8", VA = "0x8963B8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8964B4", Offset = "0x8964B4", VA = "0x8964B4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x896560", Offset = "0x896560", VA = "0x896560")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000130")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xF76488", Offset = "0xF76488", VA = "0xF76488")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xF76538", Offset = "0xF76538", VA = "0xF76538")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xF765F8", Offset = "0xF765F8", VA = "0xF765F8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xF76634", Offset = "0xF76634", VA = "0xF76634")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000131")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000132")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40005F7")]
		On,
		[Token(Token = "0x40005F8")]
		Off,
		[Token(Token = "0x40005F9")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000079")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x13B88EC", Offset = "0x13B88EC", VA = "0x13B88EC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x13B88A8", Offset = "0x13B88A8", VA = "0x13B88A8")]
		set
		{
		}
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x13B88F4", Offset = "0x13B88F4", VA = "0x13B88F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x13B8950", Offset = "0x13B8950", VA = "0x13B8950")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x13B8A94", Offset = "0x13B8A94", VA = "0x13B8A94", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x13B8AB0", Offset = "0x13B8AB0", VA = "0x13B8AB0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x13B8B04", Offset = "0x13B8B04", VA = "0x13B8B04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x13B8CC0", Offset = "0x13B8CC0", VA = "0x13B8CC0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x13B8DD4", Offset = "0x13B8DD4", VA = "0x13B8DD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x13B8E64", Offset = "0x13B8E64", VA = "0x13B8E64")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x13B8F30", Offset = "0x13B8F30", VA = "0x13B8F30")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x13B8FE4", Offset = "0x13B8FE4", VA = "0x13B8FE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x13B90D0", Offset = "0x13B90D0", VA = "0x13B90D0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000133")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40005FB")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40005FC")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645804", Offset = "0x645804")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64583C", Offset = "0x64583C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645874", Offset = "0x645874")]
	public float HeightOffset;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6458AC", Offset = "0x6458AC")]
	public float MinimumHeight;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6458E4", Offset = "0x6458E4")]
	public float MaximumHeight;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x88F094", Offset = "0x88F094", VA = "0x88F094")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x88F09C", Offset = "0x88F09C", VA = "0x88F09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x88F128", Offset = "0x88F128", VA = "0x88F128")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x88F1BC", Offset = "0x88F1BC", VA = "0x88F1BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x88F250", Offset = "0x88F250", VA = "0x88F250")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x88F57C", Offset = "0x88F57C", VA = "0x88F57C")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x88F7AC", Offset = "0x88F7AC", VA = "0x88F7AC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000134")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x13BBD70", Offset = "0x13BBD70", VA = "0x13BBD70")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x13BBE3C", Offset = "0x13BBE3C", VA = "0x13BBE3C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000135")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000136")]
	public enum States
	{
		[Token(Token = "0x400062A")]
		Ready,
		[Token(Token = "0x400062B")]
		Aim,
		[Token(Token = "0x400062C")]
		CancelAim,
		[Token(Token = "0x400062D")]
		PreTeleport,
		[Token(Token = "0x400062E")]
		CancelTeleport,
		[Token(Token = "0x400062F")]
		Teleporting,
		[Token(Token = "0x4000630")]
		PostTeleport
	}

	[Token(Token = "0x2000137")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000632")]
		None,
		[Token(Token = "0x4000633")]
		Aim,
		[Token(Token = "0x4000634")]
		PreTeleport,
		[Token(Token = "0x4000635")]
		Teleport
	}

	[Token(Token = "0x2000138")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000637")]
		Point,
		[Token(Token = "0x4000638")]
		Sphere,
		[Token(Token = "0x4000639")]
		Capsule
	}

	[Token(Token = "0x2000139")]
	public class AimData
	{
		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645CFC", Offset = "0x645CFC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700007D")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x13D5DC8", Offset = "0x13D5DC8", VA = "0x13D5DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6510E4", Offset = "0x6510E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000518")]
			[Address(RVA = "0x13D5DD0", Offset = "0x13D5DD0", VA = "0x13D5DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6510F4", Offset = "0x6510F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x13D5D44", Offset = "0x13D5D44", VA = "0x13D5D44")]
		public AimData()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x13D5DD8", Offset = "0x13D5DD8", VA = "0x13D5DD8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643418", Offset = "0x643418")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0x13D5B90", Offset = "0x13D5B90", VA = "0x13D5B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x13D5BD8", Offset = "0x13D5BD8", VA = "0x13D5BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x13D5A54", Offset = "0x13D5A54", VA = "0x13D5A54")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x13D5A80", Offset = "0x13D5A80", VA = "0x13D5A80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x13D5A84", Offset = "0x13D5A84", VA = "0x13D5A84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x13D5B98", Offset = "0x13D5B98", VA = "0x13D5B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643428", Offset = "0x643428")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x13D54C0", Offset = "0x13D54C0", VA = "0x13D54C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0x13D5508", Offset = "0x13D5508", VA = "0x13D5508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x13D5338", Offset = "0x13D5338", VA = "0x13D5338")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x13D5364", Offset = "0x13D5364", VA = "0x13D5364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x13D5368", Offset = "0x13D5368", VA = "0x13D5368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x13D54C8", Offset = "0x13D54C8", VA = "0x13D54C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643438", Offset = "0x643438")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x13D55EC", Offset = "0x13D55EC", VA = "0x13D55EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0x13D5634", Offset = "0x13D5634", VA = "0x13D5634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x13D5510", Offset = "0x13D5510", VA = "0x13D5510")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x13D553C", Offset = "0x13D553C", VA = "0x13D553C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x13D5540", Offset = "0x13D5540", VA = "0x13D5540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x13D55F4", Offset = "0x13D55F4", VA = "0x13D55F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643448", Offset = "0x643448")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x13D5A04", Offset = "0x13D5A04", VA = "0x13D5A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0x13D5A4C", Offset = "0x13D5A4C", VA = "0x13D5A4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x13D58E8", Offset = "0x13D58E8", VA = "0x13D58E8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x13D5914", Offset = "0x13D5914", VA = "0x13D5914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x13D5918", Offset = "0x13D5918", VA = "0x13D5918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x13D5A0C", Offset = "0x13D5A0C", VA = "0x13D5A0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643458", Offset = "0x643458")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x13D5718", Offset = "0x13D5718", VA = "0x13D5718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000537")]
			[Address(RVA = "0x13D5760", Offset = "0x13D5760", VA = "0x13D5760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x13D563C", Offset = "0x13D563C", VA = "0x13D563C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x13D5668", Offset = "0x13D5668", VA = "0x13D5668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x13D566C", Offset = "0x13D566C", VA = "0x13D566C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x13D5720", Offset = "0x13D5720", VA = "0x13D5720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643468", Offset = "0x643468")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x13D5CF4", Offset = "0x13D5CF4", VA = "0x13D5CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x13D5D3C", Offset = "0x13D5D3C", VA = "0x13D5D3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x13D5BE0", Offset = "0x13D5BE0", VA = "0x13D5BE0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x13D5C0C", Offset = "0x13D5C0C", VA = "0x13D5C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x13D5C10", Offset = "0x13D5C10", VA = "0x13D5C10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x13D5CFC", Offset = "0x13D5CFC", VA = "0x13D5CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643478", Offset = "0x643478")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x13D5898", Offset = "0x13D5898", VA = "0x13D5898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x13D58E0", Offset = "0x13D58E0", VA = "0x13D58E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x13D5768", Offset = "0x13D5768", VA = "0x13D5768")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x13D5794", Offset = "0x13D5794", VA = "0x13D5794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x13D5798", Offset = "0x13D5798", VA = "0x13D5798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x13D58A0", Offset = "0x13D58A0", VA = "0x13D58A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64591C", Offset = "0x64591C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645954", Offset = "0x645954")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64598C", Offset = "0x64598C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6459C4", Offset = "0x6459C4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6459FC", Offset = "0x6459FC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645A34", Offset = "0x645A34")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645A6C", Offset = "0x645A6C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645AA4", Offset = "0x645AA4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645ADC", Offset = "0x645ADC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645AEC", Offset = "0x645AEC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645B24", Offset = "0x645B24")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645B6C", Offset = "0x645B6C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645B7C", Offset = "0x645B7C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645BB4", Offset = "0x645BB4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645BEC", Offset = "0x645BEC")]
	public float AimCollisionRadius;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645C24", Offset = "0x645C24")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700007A")]
	public States CurrentState
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x13BC938", Offset = "0x13BC938", VA = "0x13BC938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650C6C", Offset = "0x650C6C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x13BC940", Offset = "0x13BC940", VA = "0x13BC940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650C7C", Offset = "0x650C7C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x13BCB64", Offset = "0x13BCB64", VA = "0x13BCB64")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700007C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x13BCB8C", Offset = "0x13BCB8C", VA = "0x13BCB8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650CAC", Offset = "0x650CAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x13BCB94", Offset = "0x13BCB94", VA = "0x13BCB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650CBC", Offset = "0x650CBC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x13BC948", Offset = "0x13BC948", VA = "0x13BC948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650C8C", Offset = "0x650C8C")]
		add
		{
		}
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x13BC9E8", Offset = "0x13BC9E8", VA = "0x13BC9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650C9C", Offset = "0x650C9C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x13BD1D4", Offset = "0x13BD1D4", VA = "0x13BD1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650D04", Offset = "0x650D04")]
		add
		{
		}
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x13BD274", Offset = "0x13BD274", VA = "0x13BD274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650D14", Offset = "0x650D14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x13BD314", Offset = "0x13BD314", VA = "0x13BD314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650D84", Offset = "0x650D84")]
		add
		{
		}
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x13BD3B4", Offset = "0x13BD3B4", VA = "0x13BD3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650D94", Offset = "0x650D94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x13BD454", Offset = "0x13BD454", VA = "0x13BD454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650DA4", Offset = "0x650DA4")]
		add
		{
		}
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x13BD4F4", Offset = "0x13BD4F4", VA = "0x13BD4F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650DB4", Offset = "0x650DB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x13BD604", Offset = "0x13BD604", VA = "0x13BD604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650DC4", Offset = "0x650DC4")]
		add
		{
		}
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x13BD6A4", Offset = "0x13BD6A4", VA = "0x13BD6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650DD4", Offset = "0x650DD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x13BD7BC", Offset = "0x13BD7BC", VA = "0x13BD7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650E44", Offset = "0x650E44")]
		add
		{
		}
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x13BD85C", Offset = "0x13BD85C", VA = "0x13BD85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650E54", Offset = "0x650E54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x13BD974", Offset = "0x13BD974", VA = "0x13BD974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650EC4", Offset = "0x650EC4")]
		add
		{
		}
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x13BDA14", Offset = "0x13BDA14", VA = "0x13BDA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650ED4", Offset = "0x650ED4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x13BDB2C", Offset = "0x13BDB2C", VA = "0x13BDB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650F44", Offset = "0x650F44")]
		add
		{
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x13BDBCC", Offset = "0x13BDBCC", VA = "0x13BDBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650F54", Offset = "0x650F54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x13BDCE4", Offset = "0x13BDCE4", VA = "0x13BDCE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650FC4", Offset = "0x650FC4")]
		add
		{
		}
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x13BDD84", Offset = "0x13BDD84", VA = "0x13BDD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x650FD4", Offset = "0x650FD4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x13BDE9C", Offset = "0x13BDE9C", VA = "0x13BDE9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651044", Offset = "0x651044")]
		add
		{
		}
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x13BDF3C", Offset = "0x13BDF3C", VA = "0x13BDF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651054", Offset = "0x651054")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x13BE054", Offset = "0x13BE054", VA = "0x13BE054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6510C4", Offset = "0x6510C4")]
		add
		{
		}
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x13BE0F4", Offset = "0x13BE0F4", VA = "0x13BE0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6510D4", Offset = "0x6510D4")]
		remove
		{
		}
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x13BC5E4", Offset = "0x13BC5E4", VA = "0x13BC5E4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x13BC608", Offset = "0x13BC608", VA = "0x13BC608")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x13BCA88", Offset = "0x13BCA88", VA = "0x13BCA88")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x13BCB9C", Offset = "0x13BCB9C", VA = "0x13BCB9C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x13BCDE8", Offset = "0x13BCDE8", VA = "0x13BCDE8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x650CCC", Offset = "0x650CCC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x13BCE9C", Offset = "0x13BCE9C", VA = "0x13BCE9C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x13BCF9C", Offset = "0x13BCF9C", VA = "0x13BCF9C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x13BCFB8", Offset = "0x13BCFB8", VA = "0x13BCFB8")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x13BD07C", Offset = "0x13BD07C", VA = "0x13BD07C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x13BD0C0", Offset = "0x13BD0C0", VA = "0x13BD0C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x13BD124", Offset = "0x13BD124", VA = "0x13BD124", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x13BD1CC", Offset = "0x13BD1CC", VA = "0x13BD1CC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x13BD154", Offset = "0x13BD154", VA = "0x13BD154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650D24", Offset = "0x650D24")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x13BD594", Offset = "0x13BD594", VA = "0x13BD594")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x13BD744", Offset = "0x13BD744", VA = "0x13BD744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650DE4", Offset = "0x650DE4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x13BD8FC", Offset = "0x13BD8FC", VA = "0x13BD8FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650E64", Offset = "0x650E64")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x13BDAB4", Offset = "0x13BDAB4", VA = "0x13BDAB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650EE4", Offset = "0x650EE4")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x13BDC6C", Offset = "0x13BDC6C", VA = "0x13BDC6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650F64", Offset = "0x650F64")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x13BDE24", Offset = "0x13BDE24", VA = "0x13BDE24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x650FE4", Offset = "0x650FE4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x13BDFDC", Offset = "0x13BDFDC", VA = "0x13BDFDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651064", Offset = "0x651064")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x13BE194", Offset = "0x13BE194", VA = "0x13BE194")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x13BE2D4", Offset = "0x13BE2D4", VA = "0x13BE2D4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x13BE308", Offset = "0x13BE308", VA = "0x13BE308")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x13BE3D0", Offset = "0x13BE3D0", VA = "0x13BE3D0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x13BE4C8", Offset = "0x13BE4C8", VA = "0x13BE4C8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000141")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1382668", Offset = "0x1382668", VA = "0x1382668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651334", Offset = "0x651334")]
		add
		{
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1382708", Offset = "0x1382708", VA = "0x1382708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651344", Offset = "0x651344")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x13827A8", Offset = "0x13827A8", VA = "0x13827A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651354", Offset = "0x651354")]
		add
		{
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1382848", Offset = "0x1382848", VA = "0x1382848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651364", Offset = "0x651364")]
		remove
		{
		}
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x13828E8", Offset = "0x13828E8", VA = "0x13828E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x13829D4", Offset = "0x13829D4", VA = "0x13829D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x13829D8", Offset = "0x13829D8", VA = "0x13829D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1382A4C", Offset = "0x1382A4C", VA = "0x1382A4C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1382B70", Offset = "0x1382B70", VA = "0x1382B70")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1382D58", Offset = "0x1382D58", VA = "0x1382D58")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1382F60", Offset = "0x1382F60", VA = "0x1382F60")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000142")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600054F")]
	[Address(RVA = "0x138C8E4", Offset = "0x138C8E4", VA = "0x138C8E4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x138C984", Offset = "0x138C984", VA = "0x138C984", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000551")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x138CA74", Offset = "0x138CA74", VA = "0x138CA74")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000143")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645D2C", Offset = "0x645D2C")]
	public float Range;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x138CA84", Offset = "0x138CA84", VA = "0x138CA84", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x138CB80", Offset = "0x138CB80", VA = "0x138CB80")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000144")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645D64", Offset = "0x645D64")]
	public float Range;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645D9C", Offset = "0x645D9C")]
	public float MinimumElevation;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645DD4", Offset = "0x645DD4")]
	public float Gravity;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x645E0C", Offset = "0x645E0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645E0C", Offset = "0x645E0C")]
	public float AimVelocity;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x645E68", Offset = "0x645E68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645E68", Offset = "0x645E68")]
	public float AimStep;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x138CB90", Offset = "0x138CB90", VA = "0x138CB90", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x138CD20", Offset = "0x138CD20", VA = "0x138CD20")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000145")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645EC0", Offset = "0x645EC0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x138CD34", Offset = "0x138CD34", VA = "0x138CD34")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x138CE70", Offset = "0x138CE70", VA = "0x138CE70")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x138CEA0", Offset = "0x138CEA0", VA = "0x138CEA0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x138CED0", Offset = "0x138CED0", VA = "0x138CED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x138CF80", Offset = "0x138CF80", VA = "0x138CF80", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x138CFEC", Offset = "0x138CFEC", VA = "0x138CFEC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x138D054", Offset = "0x138D054", VA = "0x138D054")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000146")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645EF8", Offset = "0x645EF8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645F08", Offset = "0x645F08")]
	public Transform PositionIndicator;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645F40", Offset = "0x645F40")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645F78", Offset = "0x645F78")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700008C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x138D178", Offset = "0x138D178", VA = "0x138D178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651374", Offset = "0x651374")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x138D180", Offset = "0x138D180", VA = "0x138D180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651384", Offset = "0x651384")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x138D33C", Offset = "0x138D33C", VA = "0x138D33C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651394", Offset = "0x651394")]
		add
		{
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x138D3DC", Offset = "0x138D3DC", VA = "0x138D3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6513A4", Offset = "0x6513A4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x138D18C", Offset = "0x138D18C", VA = "0x138D18C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x138D224", Offset = "0x138D224", VA = "0x138D224")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x138D2F8", Offset = "0x138D2F8", VA = "0x138D2F8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x138D338", Offset = "0x138D338", VA = "0x138D338")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x138D47C", Offset = "0x138D47C", VA = "0x138D47C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x138D4E0", Offset = "0x138D4E0", VA = "0x138D4E0")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x138D500", Offset = "0x138D500", VA = "0x138D500", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000147")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643488", Offset = "0x643488")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0xAA31F0", Offset = "0xAA31F0", VA = "0xAA31F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000577")]
			[Address(RVA = "0xAA3238", Offset = "0xAA3238", VA = "0xAA3238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xAA3128", Offset = "0xAA3128", VA = "0xAA3128")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xAA3154", Offset = "0xAA3154", VA = "0xAA3154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xAA3158", Offset = "0xAA3158", VA = "0xAA3158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xAA31F8", Offset = "0xAA31F8", VA = "0xAA31F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643498", Offset = "0x643498")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0xAA30D8", Offset = "0xAA30D8", VA = "0xAA30D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0xAA3120", Offset = "0xAA3120", VA = "0xAA3120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xAA300C", Offset = "0xAA300C", VA = "0xAA300C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xAA3038", Offset = "0xAA3038", VA = "0xAA3038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xAA303C", Offset = "0xAA303C", VA = "0xAA303C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xAA30E0", Offset = "0xAA30E0", VA = "0xAA30E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x138D70C", Offset = "0x138D70C", VA = "0x138D70C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x138D7E0", Offset = "0x138D7E0", VA = "0x138D7E0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x138D840", Offset = "0x138D840", VA = "0x138D840", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x138D900", Offset = "0x138D900", VA = "0x138D900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6513B4", Offset = "0x6513B4")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x138D978", Offset = "0x138D978", VA = "0x138D978")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651414", Offset = "0x651414")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600056F")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x138D9F0", Offset = "0x138D9F0", VA = "0x138D9F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651474", Offset = "0x651474")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x138DA1C", Offset = "0x138DA1C", VA = "0x138DA1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651484", Offset = "0x651484")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200014A")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x645FC0", Offset = "0x645FC0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x645FD0", Offset = "0x645FD0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646008", Offset = "0x646008")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646040", Offset = "0x646040")]
	public bool FastTeleport;

	[Token(Token = "0x17000091")]
	public Transform Pointer
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x138DA48", Offset = "0x138DA48", VA = "0x138DA48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651534", Offset = "0x651534")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x138DA50", Offset = "0x138DA50", VA = "0x138DA50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651544", Offset = "0x651544")]
		private set
		{
		}
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x138DA58", Offset = "0x138DA58", VA = "0x138DA58", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x138DBB0", Offset = "0x138DBB0", VA = "0x138DBB0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x138DC68", Offset = "0x138DC68", VA = "0x138DC68")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200014B")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200014C")]
	public enum InputModes
	{
		[Token(Token = "0x400068A")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400068B")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400068C")]
		ThumbstickTeleport,
		[Token(Token = "0x400068D")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200014D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400068F")]
		A,
		[Token(Token = "0x4000690")]
		B,
		[Token(Token = "0x4000691")]
		LeftTrigger,
		[Token(Token = "0x4000692")]
		LeftThumbstick,
		[Token(Token = "0x4000693")]
		RightTrigger,
		[Token(Token = "0x4000694")]
		RightThumbstick,
		[Token(Token = "0x4000695")]
		X,
		[Token(Token = "0x4000696")]
		Y
	}

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646078", Offset = "0x646078")]
	public InputModes InputMode;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6460B0", Offset = "0x6460B0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6460E8", Offset = "0x6460E8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646120", Offset = "0x646120")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x138DC6C", Offset = "0x138DC6C", VA = "0x138DC6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x138DC70", Offset = "0x138DC70", VA = "0x138DC70", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x138E058", Offset = "0x138E058", VA = "0x138E058", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x138E118", Offset = "0x138E118", VA = "0x138E118")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200014E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200014F")]
	public enum OrientationModes
	{
		[Token(Token = "0x400069B")]
		HeadRelative,
		[Token(Token = "0x400069C")]
		ForwardFacing
	}

	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6434A8", Offset = "0x6434A8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xAA3320", Offset = "0xAA3320", VA = "0xAA3320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0xAA3368", Offset = "0xAA3368", VA = "0xAA3368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xAA3240", Offset = "0xAA3240", VA = "0xAA3240")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xAA326C", Offset = "0xAA326C", VA = "0xAA326C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xAA3270", Offset = "0xAA3270", VA = "0xAA3270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xAA3328", Offset = "0xAA3328", VA = "0xAA3328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x138E1FC", Offset = "0x138E1FC", VA = "0x138E1FC")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x138E2F0", Offset = "0x138E2F0", VA = "0x138E2F0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x138E2F8", Offset = "0x138E2F8", VA = "0x138E2F8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x138E344", Offset = "0x138E344", VA = "0x138E344", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x138E38C", Offset = "0x138E38C", VA = "0x138E38C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651554", Offset = "0x651554")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600058D")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x138E404", Offset = "0x138E404", VA = "0x138E404")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x138E4C0", Offset = "0x138E4C0", VA = "0x138E4C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6515B4", Offset = "0x6515B4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000151")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000596")]
	[Address(RVA = "0x138E4EC", Offset = "0x138E4EC", VA = "0x138E4EC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x138E4F0", Offset = "0x138E4F0", VA = "0x138E4F0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x138E56C", Offset = "0x138E56C", VA = "0x138E56C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000152")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646158", Offset = "0x646158")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646190", Offset = "0x646190")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6461C8", Offset = "0x6461C8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646200", Offset = "0x646200")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x138E570", Offset = "0x138E570", VA = "0x138E570", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x138E59C", Offset = "0x138E59C", VA = "0x138E59C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x138E94C", Offset = "0x138E94C", VA = "0x138E94C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000153")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646238", Offset = "0x646238")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646270", Offset = "0x646270")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6462A8", Offset = "0x6462A8")]
	public float RotateStickThreshold;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x138E950", Offset = "0x138E950", VA = "0x138E950", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x138E994", Offset = "0x138E994", VA = "0x138E994", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x138ED3C", Offset = "0x138ED3C", VA = "0x138ED3C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000154")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x138ED4C", Offset = "0x138ED4C", VA = "0x138ED4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x138ED50", Offset = "0x138ED50", VA = "0x138ED50")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x138ED58", Offset = "0x138ED58", VA = "0x138ED58")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x138EE14", Offset = "0x138EE14", VA = "0x138EE14")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x138EE3C", Offset = "0x138EE3C", VA = "0x138EE3C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000155")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6462E0", Offset = "0x6462E0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000094")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x138EE54", Offset = "0x138EE54", VA = "0x138EE54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651614", Offset = "0x651614")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x138EE5C", Offset = "0x138EE5C", VA = "0x138EE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651624", Offset = "0x651624")]
		private set
		{
		}
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x138C918", Offset = "0x138C918", VA = "0x138C918", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x138CA40", Offset = "0x138CA40", VA = "0x138CA40", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x138EE64", Offset = "0x138EE64", VA = "0x138EE64")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x651634", Offset = "0x651634")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x138CFE0", Offset = "0x138CFE0", VA = "0x138CFE0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x138D04C", Offset = "0x138D04C", VA = "0x138D04C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x138CA7C", Offset = "0x138CA7C", VA = "0x138CA7C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000156")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6434B8", Offset = "0x6434B8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xAA3640", Offset = "0xAA3640", VA = "0xAA3640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xAA3688", Offset = "0xAA3688", VA = "0xAA3688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xAA3370", Offset = "0xAA3370", VA = "0xAA3370")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xAA339C", Offset = "0xAA339C", VA = "0xAA339C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xAA33A0", Offset = "0xAA33A0", VA = "0xAA33A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xAA3648", Offset = "0xAA3648", VA = "0xAA3648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6462F0", Offset = "0x6462F0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40006B6")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x138EF40", Offset = "0x138EF40", VA = "0x138EF40")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x138F050", Offset = "0x138F050", VA = "0x138F050", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x138F07C", Offset = "0x138F07C", VA = "0x138F07C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x138F0A4", Offset = "0x138F0A4", VA = "0x138F0A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65166C", Offset = "0x65166C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x138F11C", Offset = "0x138F11C", VA = "0x138F11C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60005B1")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x138F138", Offset = "0x138F138", VA = "0x138F138", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x138F258", Offset = "0x138F258", VA = "0x138F258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6516CC", Offset = "0x6516CC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000158")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x138F284", Offset = "0x138F284", VA = "0x138F284")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x138F2E8", Offset = "0x138F2E8", VA = "0x138F2E8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x138F3E0", Offset = "0x138F3E0", VA = "0x138F3E0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x138F4D8", Offset = "0x138F4D8", VA = "0x138F4D8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x65172C", Offset = "0x65172C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x138F4DC", Offset = "0x138F4DC", VA = "0x138F4DC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000159")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646328", Offset = "0x646328")]
	public float LOSOffset;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646360", Offset = "0x646360")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x138F4E8", Offset = "0x138F4E8", VA = "0x138F4E8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x138F6F4", Offset = "0x138F6F4", VA = "0x138F6F4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200015A")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x138F700", Offset = "0x138F700", VA = "0x138F700", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x138F7F8", Offset = "0x138F7F8", VA = "0x138F7F8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200015B")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x138F7FC", Offset = "0x138F7FC", VA = "0x138F7FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x138F890", Offset = "0x138F890", VA = "0x138F890", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005C5")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x138F920", Offset = "0x138F920", VA = "0x138F920")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200015C")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6434C8", Offset = "0x6434C8")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0xAA37C8", Offset = "0xAA37C8", VA = "0xAA37C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0xAA3810", Offset = "0xAA3810", VA = "0xAA3810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xAA3690", Offset = "0xAA3690", VA = "0xAA3690")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xAA36BC", Offset = "0xAA36BC", VA = "0xAA36BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xAA36C0", Offset = "0xAA36C0", VA = "0xAA36C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xAA37D0", Offset = "0xAA37D0", VA = "0xAA37D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646398", Offset = "0x646398")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646398", Offset = "0x646398")]
	public float TransitionDuration;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6463F0", Offset = "0x6463F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6463F0", Offset = "0x6463F0")]
	public float TeleportDelay;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646444", Offset = "0x646444")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x138F928", Offset = "0x138F928", VA = "0x138F928", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x138F954", Offset = "0x138F954", VA = "0x138F954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651764", Offset = "0x651764")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x138F9CC", Offset = "0x138F9CC", VA = "0x138F9CC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200015E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x138FB78", Offset = "0x138FB78", VA = "0x138FB78", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x138FB94", Offset = "0x138FB94", VA = "0x138FB94")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200015F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6434D8", Offset = "0x6434D8")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0xAA3984", Offset = "0xAA3984", VA = "0xAA3984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0xAA39CC", Offset = "0xAA39CC", VA = "0xAA39CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xAA3818", Offset = "0xAA3818", VA = "0xAA3818")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xAA3844", Offset = "0xAA3844", VA = "0xAA3844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xAA3848", Offset = "0xAA3848", VA = "0xAA3848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xAA398C", Offset = "0xAA398C", VA = "0xAA398C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64647C", Offset = "0x64647C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64647C", Offset = "0x64647C")]
	public float TransitionDuration;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x138FB9C", Offset = "0x138FB9C", VA = "0x138FB9C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x138FBC8", Offset = "0x138FBC8", VA = "0x138FBC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651814", Offset = "0x651814")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x138FC40", Offset = "0x138FC40", VA = "0x138FC40")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000161")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000162")]
	public enum PlabackState
	{
		[Token(Token = "0x40006E6")]
		Idle = 1,
		[Token(Token = "0x40006E7")]
		Preparing,
		[Token(Token = "0x40006E8")]
		Buffering,
		[Token(Token = "0x40006E9")]
		Ready,
		[Token(Token = "0x40006EA")]
		Ended
	}

	[Token(Token = "0x2000163")]
	public enum StereoMode
	{
		[Token(Token = "0x40006EC")]
		Unknown = -1,
		[Token(Token = "0x40006ED")]
		Mono,
		[Token(Token = "0x40006EE")]
		TopBottom,
		[Token(Token = "0x40006EF")]
		LeftRight,
		[Token(Token = "0x40006F0")]
		Mesh
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700009B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x13C6C50", Offset = "0x13C6C50", VA = "0x13C6C50")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700009C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x13C6F80", Offset = "0x13C6F80", VA = "0x13C6F80")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700009D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x13C4108", Offset = "0x13C4108", VA = "0x13C4108")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x13C5904", Offset = "0x13C5904", VA = "0x13C5904")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x13C7250", Offset = "0x13C7250", VA = "0x13C7250")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170000A0")]
	public static long Duration
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x13C5B28", Offset = "0x13C5B28", VA = "0x13C5B28")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000A1")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x13C4730", Offset = "0x13C4730", VA = "0x13C4730")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170000A2")]
	public static int VideoWidth
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x13C4508", Offset = "0x13C4508", VA = "0x13C4508")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A3")]
	public static int VideoHeight
	{
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x13C461C", Offset = "0x13C461C", VA = "0x13C461C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A4")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x13C5A14", Offset = "0x13C5A14", VA = "0x13C5A14")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x13C4FE8", Offset = "0x13C4FE8", VA = "0x13C4FE8")]
		set
		{
		}
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x13C7364", Offset = "0x13C7364", VA = "0x13C7364")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x13C5EF8", Offset = "0x13C5EF8", VA = "0x13C5EF8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x13C4C34", Offset = "0x13C4C34", VA = "0x13C4C34")]
	public static void Play()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x13C4DD4", Offset = "0x13C4DD4", VA = "0x13C4DD4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x13C5CF0", Offset = "0x13C5CF0", VA = "0x13C5CF0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x13C7590", Offset = "0x13C7590", VA = "0x13C7590")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x13C5714", Offset = "0x13C5714", VA = "0x13C5714")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000164")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x884278", Offset = "0x884278", VA = "0x884278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6518C4", Offset = "0x6518C4")]
		add
		{
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x884318", Offset = "0x884318", VA = "0x884318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6518D4", Offset = "0x6518D4")]
		remove
		{
		}
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x8843B8", Offset = "0x8843B8", VA = "0x8843B8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x8843CC", Offset = "0x8843CC", VA = "0x8843CC")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000165")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000166")]
	public enum ButtonType
	{
		[Token(Token = "0x40006F4")]
		Play,
		[Token(Token = "0x40006F5")]
		Pause,
		[Token(Token = "0x40006F6")]
		FastForward,
		[Token(Token = "0x40006F7")]
		Rewind,
		[Token(Token = "0x40006F8")]
		SkipForward,
		[Token(Token = "0x40006F9")]
		SkipBack,
		[Token(Token = "0x40006FA")]
		Stop
	}

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170000A5")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x13C1CDC", Offset = "0x13C1CDC", VA = "0x13C1CDC")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x13C1CE4", Offset = "0x13C1CE4", VA = "0x13C1CE4")]
		set
		{
		}
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x13C1D08", Offset = "0x13C1D08", VA = "0x13C1D08", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x13C31A0", Offset = "0x13C31A0", VA = "0x13C31A0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000167")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	public enum VideoShape
	{
		[Token(Token = "0x400070F")]
		_360,
		[Token(Token = "0x4000710")]
		_180,
		[Token(Token = "0x4000711")]
		Quad
	}

	[Token(Token = "0x2000169")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000713")]
		Mono,
		[Token(Token = "0x4000714")]
		TopBottom,
		[Token(Token = "0x4000715")]
		LeftRight,
		[Token(Token = "0x4000716")]
		BottomTop
	}

	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6434E8", Offset = "0x6434E8")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0x13D7384", Offset = "0x13D7384", VA = "0x13D7384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0x13D73CC", Offset = "0x13D73CC", VA = "0x13D73CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x13D7190", Offset = "0x13D7190", VA = "0x13D7190")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x13D71BC", Offset = "0x13D71BC", VA = "0x13D71BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x13D71C0", Offset = "0x13D71C0", VA = "0x13D71C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x13D738C", Offset = "0x13D738C", VA = "0x13D738C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6434F8", Offset = "0x6434F8")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x13D7098", Offset = "0x13D7098", VA = "0x13D7098")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x13D70A0", Offset = "0x13D70A0", VA = "0x13D70A0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646504", Offset = "0x646504")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646514", Offset = "0x646514")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646524", Offset = "0x646524")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170000A6")]
	public bool IsPlaying
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x13C3E2C", Offset = "0x13C3E2C", VA = "0x13C3E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6518E4", Offset = "0x6518E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x13C3E34", Offset = "0x13C3E34", VA = "0x13C3E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6518F4", Offset = "0x6518F4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public long Duration
	{
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x13C3E40", Offset = "0x13C3E40", VA = "0x13C3E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651904", Offset = "0x651904")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x13C3E48", Offset = "0x13C3E48", VA = "0x13C3E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651914", Offset = "0x651914")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x13C3E50", Offset = "0x13C3E50", VA = "0x13C3E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651924", Offset = "0x651924")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x13C3E58", Offset = "0x13C3E58", VA = "0x13C3E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651934", Offset = "0x651934")]
		private set
		{
		}
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x13C3E60", Offset = "0x13C3E60", VA = "0x13C3E60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x13C4178", Offset = "0x13C4178", VA = "0x13C4178")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x13C41DC", Offset = "0x13C41DC", VA = "0x13C41DC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x13C4844", Offset = "0x13C4844", VA = "0x13C4844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651944", Offset = "0x651944")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x13C48BC", Offset = "0x13C48BC", VA = "0x13C48BC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x13C4BA4", Offset = "0x13C4BA4", VA = "0x13C4BA4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x13C4D48", Offset = "0x13C4D48", VA = "0x13C4D48")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x13C4EE8", Offset = "0x13C4EE8", VA = "0x13C4EE8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x13C515C", Offset = "0x13C515C", VA = "0x13C515C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x13C5C3C", Offset = "0x13C5C3C", VA = "0x13C5C3C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x13C5E6C", Offset = "0x13C5E6C", VA = "0x13C5E6C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x13C600C", Offset = "0x13C600C", VA = "0x13C600C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x13C60F8", Offset = "0x13C60F8", VA = "0x13C60F8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200016C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000733")]
		Playing,
		[Token(Token = "0x4000734")]
		Paused,
		[Token(Token = "0x4000735")]
		Rewinding,
		[Token(Token = "0x4000736")]
		FastForwarding
	}

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x13C6108", Offset = "0x13C6108", VA = "0x13C6108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x13C645C", Offset = "0x13C645C", VA = "0x13C645C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x13C6638", Offset = "0x13C6638", VA = "0x13C6638")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x13C676C", Offset = "0x13C676C", VA = "0x13C676C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x13C6874", Offset = "0x13C6874", VA = "0x13C6874")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x13C6740", Offset = "0x13C6740", VA = "0x13C6740")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x13C68D4", Offset = "0x13C68D4", VA = "0x13C68D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x13C6348", Offset = "0x13C6348", VA = "0x13C6348")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x13C6C38", Offset = "0x13C6C38", VA = "0x13C6C38")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200016E")]
public static class VectorUtil
{
	[Token(Token = "0x600061A")]
	[Address(RVA = "0x8C3860", Offset = "0x8C3860", VA = "0x8C3860")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200016F")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000738")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC21F74", Offset = "0xC21F74", VA = "0xC21F74")]
	private void Start()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xC22388", Offset = "0xC22388", VA = "0xC22388")]
	private void Update()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xC22614", Offset = "0xC22614", VA = "0xC22614")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xC2277C", Offset = "0xC2277C", VA = "0xC2277C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xC228E8", Offset = "0xC228E8", VA = "0xC228E8")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC22A78", Offset = "0xC22A78", VA = "0xC22A78")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000170")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000741")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x894058", Offset = "0x894058", VA = "0x894058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x8940AC", Offset = "0x8940AC", VA = "0x8940AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x8940B0", Offset = "0x8940B0", VA = "0x8940B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x8940B4", Offset = "0x8940B4", VA = "0x8940B4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x894328", Offset = "0x894328", VA = "0x894328")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x894558", Offset = "0x894558", VA = "0x894558")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000171")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x8965E4", Offset = "0x8965E4", VA = "0x8965E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x896B00", Offset = "0x896B00", VA = "0x896B00")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x896BC0", Offset = "0x896BC0", VA = "0x896BC0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x896E40", Offset = "0x896E40", VA = "0x896E40")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x896F20", Offset = "0x896F20", VA = "0x896F20")]
	private void Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x897004", Offset = "0x897004", VA = "0x897004")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x897078", Offset = "0x897078", VA = "0x897078")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x897080", Offset = "0x897080", VA = "0x897080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651A04", Offset = "0x651A04")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x8970E4", Offset = "0x8970E4", VA = "0x8970E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651A14", Offset = "0x651A14")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x897148", Offset = "0x897148", VA = "0x897148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651A24", Offset = "0x651A24")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x8971AC", Offset = "0x8971AC", VA = "0x8971AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651A34", Offset = "0x651A34")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000172")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000632")]
	[Address(RVA = "0xC1E79C", Offset = "0xC1E79C", VA = "0xC1E79C")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000173")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x137E2F8", Offset = "0x137E2F8", VA = "0x137E2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x137E39C", Offset = "0x137E39C", VA = "0x137E39C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x137E488", Offset = "0x137E488", VA = "0x137E488")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x137E4E8", Offset = "0x137E4E8", VA = "0x137E4E8")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000174")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000637")]
	[Address(RVA = "0x138C444", Offset = "0x138C444", VA = "0x138C444")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000175")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643518", Offset = "0x643518")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0x8CF8CC", Offset = "0x8CF8CC", VA = "0x8CF8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000641")]
			[Address(RVA = "0x8CF914", Offset = "0x8CF914", VA = "0x8CF914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x8CF750", Offset = "0x8CF750", VA = "0x8CF750")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x8CF77C", Offset = "0x8CF77C", VA = "0x8CF77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x8CF780", Offset = "0x8CF780", VA = "0x8CF780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x8CF8D4", Offset = "0x8CF8D4", VA = "0x8CF8D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xF7663C", Offset = "0xF7663C", VA = "0xF7663C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xF76758", Offset = "0xF76758", VA = "0xF76758")]
	private void Update()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xF766E0", Offset = "0xF766E0", VA = "0xF766E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651A44", Offset = "0x651A44")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xF76904", Offset = "0xF76904", VA = "0xF76904")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000177")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646554", Offset = "0x646554")]
	public int SubdivisionsU;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646570", Offset = "0x646570")]
	public int SubdivisionsV;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x88FC78", Offset = "0x88FC78", VA = "0x88FC78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x8906C0", Offset = "0x8906C0", VA = "0x8906C0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000178")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170000AD")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x13BBE44", Offset = "0x13BBE44", VA = "0x13BBE44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x13BBE98", Offset = "0x13BBE98", VA = "0x13BBE98")]
	public void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x13BC2C0", Offset = "0x13BC2C0", VA = "0x13BC2C0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x13BC3AC", Offset = "0x13BC3AC", VA = "0x13BC3AC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x651AF4", Offset = "0x651AF4")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000648")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600064A")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600064B")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600064C")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600064D")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600064E")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600064F")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x13BC410", Offset = "0x13BC410", VA = "0x13BC410")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x13BC44C", Offset = "0x13BC44C", VA = "0x13BC44C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x13BC4BC", Offset = "0x13BC4BC", VA = "0x13BC4BC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x13BC62C", Offset = "0x13BC62C", VA = "0x13BC62C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x13BC708", Offset = "0x13BC708", VA = "0x13BC708")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x13BC1B8", Offset = "0x13BC1B8", VA = "0x13BC1B8")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x13BC7D0", Offset = "0x13BC7D0", VA = "0x13BC7D0")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x13BC838", Offset = "0x13BC838", VA = "0x13BC838")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x13BC930", Offset = "0x13BC930", VA = "0x13BC930")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000179")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x643538", Offset = "0x643538")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	public enum DrawMode
	{
		[Token(Token = "0x4000770")]
		Opaque,
		[Token(Token = "0x4000771")]
		OpaqueWithClip,
		[Token(Token = "0x4000772")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000773")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170000AE")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x9B9354", Offset = "0x9B9354", VA = "0x9B9354")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x9B93E4", Offset = "0x9B93E4", VA = "0x9B93E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x9B7DD0", Offset = "0x9B7DD0", VA = "0x9B7DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9B89C0", Offset = "0x9B89C0", VA = "0x9B89C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9B8A40", Offset = "0x9B8A40", VA = "0x9B8A40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x9B8B30", Offset = "0x9B8B30", VA = "0x9B8B30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x9B8C20", Offset = "0x9B8C20", VA = "0x9B8C20", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9B8E2C", Offset = "0x9B8E2C", VA = "0x9B8E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x9B94B0", Offset = "0x9B94B0", VA = "0x9B94B0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200017B")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xC2335C", Offset = "0xC2335C", VA = "0xC2335C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xC23544", Offset = "0xC23544", VA = "0xC23544")]
	private void Update()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xC236CC", Offset = "0xC236CC", VA = "0xC236CC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xC236D4", Offset = "0xC236D4", VA = "0xC236D4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xC236BC", Offset = "0xC236BC", VA = "0xC236BC")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xC236DC", Offset = "0xC236DC", VA = "0xC236DC")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200017C")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643598", Offset = "0x643598")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000673")]
			[Address(RVA = "0x8C9FAC", Offset = "0x8C9FAC", VA = "0x8C9FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0x8C9FF4", Offset = "0x8C9FF4", VA = "0x8C9FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x8C9E7C", Offset = "0x8C9E7C", VA = "0x8C9E7C")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x8C9EA8", Offset = "0x8C9EA8", VA = "0x8C9EA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x8C9EAC", Offset = "0x8C9EAC", VA = "0x8C9EAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x8C9FB4", Offset = "0x8C9FB4", VA = "0x8C9FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6435A8", Offset = "0x6435A8")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0x8CA1B4", Offset = "0x8CA1B4", VA = "0x8CA1B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x8CA1FC", Offset = "0x8CA1FC", VA = "0x8CA1FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x8C9FFC", Offset = "0x8C9FFC", VA = "0x8C9FFC")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x8CA028", Offset = "0x8CA028", VA = "0x8CA028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x8CA02C", Offset = "0x8CA02C", VA = "0x8CA02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x8CA1BC", Offset = "0x8CA1BC", VA = "0x8CA1BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x882F98", Offset = "0x882F98", VA = "0x882F98")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x88326C", Offset = "0x88326C", VA = "0x88326C")]
	private void Update()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x8832C8", Offset = "0x8832C8", VA = "0x8832C8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x883448", Offset = "0x883448", VA = "0x883448")]
	public void Release()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x88351C", Offset = "0x88351C", VA = "0x88351C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651B2C", Offset = "0x651B2C")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x883384", Offset = "0x883384", VA = "0x883384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651B8C", Offset = "0x651B8C")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x8835B8", Offset = "0x8835B8", VA = "0x8835B8")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200017F")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x600067C")]
	[Address(RVA = "0xAAB270", Offset = "0xAAB270", VA = "0xAAB270")]
	private void Start()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xAAB2D0", Offset = "0xAAB2D0", VA = "0xAAB2D0")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000180")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xAB5DE0", Offset = "0xAB5DE0", VA = "0xAB5DE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xAB5F14", Offset = "0xAB5F14", VA = "0xAB5F14")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xAB5FA8", Offset = "0xAB5FA8", VA = "0xAB5FA8")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xAB6010", Offset = "0xAB6010", VA = "0xAB6010")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000181")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6435B8", Offset = "0x6435B8")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0x8CCC4C", Offset = "0x8CCC4C", VA = "0x8CCC4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x8CCC94", Offset = "0x8CCC94", VA = "0x8CCC94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x8CCA40", Offset = "0x8CCA40", VA = "0x8CCA40")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x8CCA6C", Offset = "0x8CCA6C", VA = "0x8CCA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x8CCA70", Offset = "0x8CCA70", VA = "0x8CCA70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x8CCC54", Offset = "0x8CCC54", VA = "0x8CCC54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xAB6018", Offset = "0xAB6018", VA = "0xAB6018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xAB62FC", Offset = "0xAB62FC", VA = "0xAB62FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xAB664C", Offset = "0xAB664C", VA = "0xAB664C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xAB69A8", Offset = "0xAB69A8", VA = "0xAB69A8")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xAB6CAC", Offset = "0xAB6CAC", VA = "0xAB6CAC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xAB6DA0", Offset = "0xAB6DA0", VA = "0xAB6DA0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xAB6F6C", Offset = "0xAB6F6C", VA = "0xAB6F6C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xAB6EB8", Offset = "0xAB6EB8", VA = "0xAB6EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651C8C", Offset = "0x651C8C")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xAB7054", Offset = "0xAB7054", VA = "0xAB7054")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000183")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum ManipulationType
	{
		[Token(Token = "0x40007A8")]
		Default,
		[Token(Token = "0x40007A9")]
		ForcedHand,
		[Token(Token = "0x40007AA")]
		DollyHand,
		[Token(Token = "0x40007AB")]
		DollyAttached,
		[Token(Token = "0x40007AC")]
		HorizontalScaled,
		[Token(Token = "0x40007AD")]
		VerticalScaled,
		[Token(Token = "0x40007AE")]
		Menu
	}

	[Token(Token = "0x2000185")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000186")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000187")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6465FC", Offset = "0x6465FC")]
	public string ObjectName;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x64660C", Offset = "0x64660C")]
	public string ObjectInstructions;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xABC64C", Offset = "0xABC64C", VA = "0xABC64C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xABC6A8", Offset = "0xABC6A8", VA = "0xABC6A8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xABC6BC", Offset = "0xABC6BC", VA = "0xABC6BC")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xABC6D0", Offset = "0xABC6D0", VA = "0xABC6D0")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000188")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64662C", Offset = "0x64662C")]
	public int radialDivisions;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x646664", Offset = "0x646664")]
	public float borderSize;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64669C", Offset = "0x64669C")]
	public float fingerTaper;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6466D4", Offset = "0x6466D4")]
	public float fingerTipLength;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64670C", Offset = "0x64670C")]
	public float webOffset;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xF718FC", Offset = "0xF718FC", VA = "0xF718FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xF71AFC", Offset = "0xF71AFC", VA = "0xF71AFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xF71D08", Offset = "0xF71D08", VA = "0xF71D08")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xF7238C", Offset = "0xF7238C", VA = "0xF7238C")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xF729BC", Offset = "0xF729BC", VA = "0xF729BC")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xF75038", Offset = "0xF75038", VA = "0xF75038")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xF750F4", Offset = "0xF750F4", VA = "0xF750F4")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000189")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xF75118", Offset = "0xF75118", VA = "0xF75118")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xF75450", Offset = "0xF75450", VA = "0xF75450")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xF751C0", Offset = "0xF751C0", VA = "0xF751C0")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xF75840", Offset = "0xF75840", VA = "0xF75840")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xF75D30", Offset = "0xF75D30", VA = "0xF75D30")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x200018A")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6435C8", Offset = "0x6435C8")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x13D7924", Offset = "0x13D7924", VA = "0x13D7924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x13D796C", Offset = "0x13D796C", VA = "0x13D796C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x13D7654", Offset = "0x13D7654", VA = "0x13D7654")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x13D7680", Offset = "0x13D7680", VA = "0x13D7680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x13D7684", Offset = "0x13D7684", VA = "0x13D7684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x13D792C", Offset = "0x13D792C", VA = "0x13D792C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x9BAA2C", Offset = "0x9BAA2C", VA = "0x9BAA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9BAC64", Offset = "0x9BAC64", VA = "0x9BAC64")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x9BB8B4", Offset = "0x9BB8B4", VA = "0x9BB8B4")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x9BC4BC", Offset = "0x9BC4BC", VA = "0x9BC4BC")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x9BABEC", Offset = "0x9BABEC", VA = "0x9BABEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651D3C", Offset = "0x651D3C")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x9BAED0", Offset = "0x9BAED0", VA = "0x9BAED0")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x9BBB78", Offset = "0x9BBB78", VA = "0x9BBB78")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x9BC780", Offset = "0x9BC780", VA = "0x9BC780")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x9BC80C", Offset = "0x9BC80C", VA = "0x9BC80C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x9BC83C", Offset = "0x9BC83C", VA = "0x9BC83C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x9BC648", Offset = "0x9BC648", VA = "0x9BC648")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x9BC960", Offset = "0x9BC960", VA = "0x9BC960")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200018C")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x9BF7DC", Offset = "0x9BF7DC", VA = "0x9BF7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x9BF974", Offset = "0x9BF974", VA = "0x9BF974")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x9BFA3C", Offset = "0x9BFA3C", VA = "0x9BFA3C")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200018D")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200018E")]
	public enum BrushState
	{
		[Token(Token = "0x40007EB")]
		Idle,
		[Token(Token = "0x40007EC")]
		Inking
	}

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x13AF7B8", Offset = "0x13AF7B8", VA = "0x13AF7B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x13AF7C0", Offset = "0x13AF7C0", VA = "0x13AF7C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x13AFAA8", Offset = "0x13AFAA8", VA = "0x13AFAA8")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x13AFCA0", Offset = "0x13AFCA0", VA = "0x13AFCA0")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x13AFE48", Offset = "0x13AFE48", VA = "0x13AFE48")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x13AF9B4", Offset = "0x13AF9B4", VA = "0x13AF9B4")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x13AFF24", Offset = "0x13AFF24", VA = "0x13AFF24")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200018F")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x13AFFBC", Offset = "0x13AFFBC", VA = "0x13AFFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x13B0154", Offset = "0x13B0154", VA = "0x13B0154")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x13B02B8", Offset = "0x13B02B8", VA = "0x13B02B8")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000190")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x13B02C0", Offset = "0x13B02C0", VA = "0x13B02C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x13B04D4", Offset = "0x13B04D4", VA = "0x13B04D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x13B06A4", Offset = "0x13B06A4", VA = "0x13B06A4")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000191")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6435D8", Offset = "0x6435D8")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0xA9EB28", Offset = "0xA9EB28", VA = "0xA9EB28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E3")]
			[Address(RVA = "0xA9EB70", Offset = "0xA9EB70", VA = "0xA9EB70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xA9E944", Offset = "0xA9E944", VA = "0xA9E944")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xA9E970", Offset = "0xA9E970", VA = "0xA9E970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xA9E974", Offset = "0xA9E974", VA = "0xA9E974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xA9EB30", Offset = "0xA9EB30", VA = "0xA9EB30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6435E8", Offset = "0x6435E8")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xA9ED9C", Offset = "0xA9ED9C", VA = "0xA9ED9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0xA9EDE4", Offset = "0xA9EDE4", VA = "0xA9EDE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xA9EB78", Offset = "0xA9EB78", VA = "0xA9EB78")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xA9EBA4", Offset = "0xA9EBA4", VA = "0xA9EBA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xA9EBA8", Offset = "0xA9EBA8", VA = "0xA9EBA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xA9EDA4", Offset = "0xA9EDA4", VA = "0xA9EDA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x13B06AC", Offset = "0x13B06AC", VA = "0x13B06AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x13B09E4", Offset = "0x13B09E4", VA = "0x13B09E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x13B0C3C", Offset = "0x13B0C3C", VA = "0x13B0C3C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x13B0DC0", Offset = "0x13B0DC0", VA = "0x13B0DC0")]
	public void Release()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x13B0D38", Offset = "0x13B0D38", VA = "0x13B0D38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651DEC", Offset = "0x651DEC")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x13B0EB0", Offset = "0x13B0EB0", VA = "0x13B0EB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651E4C", Offset = "0x651E4C")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x13B0F38", Offset = "0x13B0F38", VA = "0x13B0F38")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x13B0F58", Offset = "0x13B0F58", VA = "0x13B0F58")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x13B0F78", Offset = "0x13B0F78", VA = "0x13B0F78")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x13B0F98", Offset = "0x13B0F98", VA = "0x13B0F98")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x13B0968", Offset = "0x13B0968", VA = "0x13B0968")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x13B0FFC", Offset = "0x13B0FFC", VA = "0x13B0FFC")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x13B1008", Offset = "0x13B1008", VA = "0x13B1008")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x13B09FC", Offset = "0x13B09FC", VA = "0x13B09FC")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x13B1014", Offset = "0x13B1014", VA = "0x13B1014")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000194")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x13B1058", Offset = "0x13B1058", VA = "0x13B1058")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x13B1118", Offset = "0x13B1118", VA = "0x13B1118")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000195")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x137E008", Offset = "0x137E008", VA = "0x137E008")]
	private void Start()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x137E24C", Offset = "0x137E24C", VA = "0x137E24C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x137E2A4", Offset = "0x137E2A4", VA = "0x137E2A4")]
	public void Release()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x137E2F0", Offset = "0x137E2F0", VA = "0x137E2F0")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000196")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x137F8EC", Offset = "0x137F8EC", VA = "0x137F8EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x137F964", Offset = "0x137F964", VA = "0x137F964")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x137FC88", Offset = "0x137FC88", VA = "0x137FC88")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000197")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1380A10", Offset = "0x1380A10", VA = "0x1380A10")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1380E98", Offset = "0x1380E98", VA = "0x1380E98")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000198")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x170000BB")]
	public ulong anchorHandle
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xC1E7A4", Offset = "0xC1E7A4", VA = "0xC1E7A4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xC1E7AC", Offset = "0xC1E7AC", VA = "0xC1E7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xC1E894", Offset = "0xC1E894", VA = "0xC1E894")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xC1EAFC", Offset = "0xC1EAFC", VA = "0xC1EAFC")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC1EB64", Offset = "0xC1EB64", VA = "0xC1EB64")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC1EBC8", Offset = "0xC1EBC8", VA = "0xC1EBC8")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xC1EC2C", Offset = "0xC1EC2C", VA = "0xC1EC2C")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xC1ED34", Offset = "0xC1ED34", VA = "0xC1ED34")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xC1EE54", Offset = "0xC1EE54", VA = "0xC1EE54")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xC1EF88", Offset = "0xC1EF88", VA = "0xC1EF88")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xC1F01C", Offset = "0xC1F01C", VA = "0xC1F01C")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xC1E8D8", Offset = "0xC1E8D8", VA = "0xC1E8D8")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xC1E9EC", Offset = "0xC1E9EC", VA = "0xC1E9EC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xC1F03C", Offset = "0xC1F03C", VA = "0xC1F03C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xC1F154", Offset = "0xC1F154", VA = "0xC1F154")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000199")]
public class AnchorHelpers
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x170000BC")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xC1F15C", Offset = "0xC1F15C", VA = "0xC1F15C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xC1F214", Offset = "0xC1F214", VA = "0xC1F214")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xC1F290", Offset = "0xC1F290", VA = "0xC1F290")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xC1F304", Offset = "0xC1F304", VA = "0xC1F304")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000708")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xC1F35C", Offset = "0xC1F35C", VA = "0xC1F35C")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xC1F600", Offset = "0xC1F600", VA = "0xC1F600")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xC1F778", Offset = "0xC1F778", VA = "0xC1F778")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xC1F83C", Offset = "0xC1F83C", VA = "0xC1F83C")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x200019A")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	public enum StorageLocation
	{
		[Token(Token = "0x4000834")]
		LOCAL
	}

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x400082E")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000830")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000831")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xC1F844", Offset = "0xC1F844", VA = "0xC1F844", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xC1F570", Offset = "0xC1F570", VA = "0xC1F570")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xC1F94C", Offset = "0xC1F94C", VA = "0xC1F94C")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x6000711")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000712")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000713")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000714")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xC1F958", Offset = "0xC1F958", VA = "0xC1F958")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x200019C")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x170000BD")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0xC1F9DC", Offset = "0xC1F9DC", VA = "0xC1F9DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xC1F9E4", Offset = "0xC1F9E4", VA = "0xC1F9E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC1FAE4", Offset = "0xC1FAE4", VA = "0xC1FAE4")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC1FD18", Offset = "0xC1FD18", VA = "0xC1FD18")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x200019D")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200019E")]
	public enum AnchorMode
	{
		[Token(Token = "0x400084A")]
		Create,
		[Token(Token = "0x400084B")]
		Select
	}

	[Token(Token = "0x200019F")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC1FD20", Offset = "0xC1FD20", VA = "0xC1FD20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC1FDF8", Offset = "0xC1FDF8", VA = "0xC1FDF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC1FF64", Offset = "0xC1FF64", VA = "0xC1FF64")]
	private void Update()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC203B8", Offset = "0xC203B8", VA = "0xC203B8")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC20428", Offset = "0xC20428", VA = "0xC20428")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC1FEEC", Offset = "0xC1FEEC", VA = "0xC1FEEC")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC204B0", Offset = "0xC204B0", VA = "0xC204B0")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC20538", Offset = "0xC20538", VA = "0xC20538")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xC20564", Offset = "0xC20564", VA = "0xC20564")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xC20484", Offset = "0xC20484", VA = "0xC20484")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xC202A8", Offset = "0xC202A8", VA = "0xC202A8")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xC206A0", Offset = "0xC206A0", VA = "0xC206A0")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xC205EC", Offset = "0xC205EC", VA = "0xC205EC")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xC2060C", Offset = "0xC2060C", VA = "0xC2060C")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xC207B8", Offset = "0xC207B8", VA = "0xC207B8")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xC2062C", Offset = "0xC2062C", VA = "0xC2062C")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xC20668", Offset = "0xC20668", VA = "0xC20668")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC20070", Offset = "0xC20070", VA = "0xC20070")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC20814", Offset = "0xC20814", VA = "0xC20814")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC20848", Offset = "0xC20848", VA = "0xC20848")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC208E4", Offset = "0xC208E4", VA = "0xC208E4")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC20A60", Offset = "0xC20A60", VA = "0xC20A60")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x20001A0")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x400084D")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1389DC8", Offset = "0x1389DC8", VA = "0x1389DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x138A014", Offset = "0x138A014", VA = "0x138A014")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x138A260", Offset = "0x138A260", VA = "0x138A260")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x138A470", Offset = "0x138A470", VA = "0x138A470")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x138A960", Offset = "0x138A960", VA = "0x138A960")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x138AC90", Offset = "0x138AC90", VA = "0x138AC90")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x138B3B4", Offset = "0x138B3B4", VA = "0x138B3B4")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x138A884", Offset = "0x138A884", VA = "0x138A884")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x138AF78", Offset = "0x138AF78", VA = "0x138AF78")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x138A350", Offset = "0x138A350", VA = "0x138A350")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x138B608", Offset = "0x138B608", VA = "0x138B608")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x138B8B8", Offset = "0x138B8B8", VA = "0x138B8B8", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x138BA58", Offset = "0x138BA58", VA = "0x138BA58", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x138BC14", Offset = "0x138BC14", VA = "0x138BC14", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x138BDE0", Offset = "0x138BDE0", VA = "0x138BDE0")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x138C0D8", Offset = "0x138C0D8", VA = "0x138C0D8", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x138C1C8", Offset = "0x138C1C8", VA = "0x138C1C8", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x138C338", Offset = "0x138C338", VA = "0x138C338")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x20001A1")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6435F8", Offset = "0x6435F8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xAA2FE0", Offset = "0xAA2FE0", VA = "0xAA2FE0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xAA2FE8", Offset = "0xAA2FE8", VA = "0xAA2FE8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x138C44C", Offset = "0x138C44C", VA = "0x138C44C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x138C668", Offset = "0x138C668", VA = "0x138C668")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x138C778", Offset = "0x138C778", VA = "0x138C778")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001A3")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170000BE")]
	public static bool Initialized
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x138C780", Offset = "0x138C780", VA = "0x138C780")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x138C788", Offset = "0x138C788", VA = "0x138C788")]
	public SteamManager()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001A4")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000BF")]
		public bool Highlight
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0x892F2C", Offset = "0x892F2C", VA = "0x892F2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074E")]
			[Address(RVA = "0x892F34", Offset = "0x892F34", VA = "0x892F34")]
			set
			{
			}
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x892F40", Offset = "0x892F40", VA = "0x892F40")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x893108", Offset = "0x893108", VA = "0x893108", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x893130", Offset = "0x893130", VA = "0x893130", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x893158", Offset = "0x893158", VA = "0x893158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x893008", Offset = "0x893008", VA = "0x893008")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x89342C", Offset = "0x89342C", VA = "0x89342C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000C0")]
		public bool InRange
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x898088", Offset = "0x898088", VA = "0x898088")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x898090", Offset = "0x898090", VA = "0x898090")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public bool Targeted
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x89820C", Offset = "0x89820C", VA = "0x89820C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x898214", Offset = "0x898214", VA = "0x898214")]
			set
			{
			}
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x898220", Offset = "0x898220", VA = "0x898220", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x89809C", Offset = "0x89809C", VA = "0x89809C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x89838C", Offset = "0x89838C", VA = "0x89838C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x643618", Offset = "0x643618")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000C2")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x898394", Offset = "0x898394", VA = "0x898394")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x89839C", Offset = "0x89839C", VA = "0x89839C")]
			set
			{
			}
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x8983B8", Offset = "0x8983B8", VA = "0x8983B8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x8985F8", Offset = "0x8985F8", VA = "0x8985F8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x898F10", Offset = "0x898F10", VA = "0x898F10", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x8993A4", Offset = "0x8993A4", VA = "0x8993A4", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x899664", Offset = "0x899664", VA = "0x899664")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x89886C", Offset = "0x89886C", VA = "0x89886C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x899754", Offset = "0x899754", VA = "0x899754")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x899BB0", Offset = "0x899BB0", VA = "0x899BB0", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x899BC8", Offset = "0x899BC8", VA = "0x899BC8", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x899BD0", Offset = "0x899BD0", VA = "0x899BD0")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xABC4D4", Offset = "0xABC4D4", VA = "0xABC4D4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xABC58C", Offset = "0xABC58C", VA = "0xABC58C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xABC644", Offset = "0xABC644", VA = "0xABC644")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20001A9")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000875")]
			Disabled,
			[Token(Token = "0x4000876")]
			Enabled,
			[Token(Token = "0x4000877")]
			Targeted
		}

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xABC704", Offset = "0xABC704", VA = "0xABC704")]
		private void Start()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xABC770", Offset = "0xABC770", VA = "0xABC770")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xABC80C", Offset = "0xABC80C", VA = "0xABC80C")]
		private void Update()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xABC854", Offset = "0xABC854", VA = "0xABC854")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x13B2D00", Offset = "0x13B2D00", VA = "0x13B2D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x13B2DEC", Offset = "0x13B2DEC", VA = "0x13B2DEC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x13B2DF8", Offset = "0x13B2DF8", VA = "0x13B2DF8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x13B2E04", Offset = "0x13B2E04", VA = "0x13B2E04")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x882900", Offset = "0x882900", VA = "0x882900")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x882954", Offset = "0x882954", VA = "0x882954")]
		private void Update()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x882CC0", Offset = "0x882CC0", VA = "0x882CC0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x882DC4", Offset = "0x882DC4", VA = "0x882DC4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x882958", Offset = "0x882958", VA = "0x882958")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x882EC8", Offset = "0x882EC8", VA = "0x882EC8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20001AD")]
		public enum ContactTest
		{
			[Token(Token = "0x400088A")]
			PerpenTest,
			[Token(Token = "0x400088B")]
			BackwardsPress
		}

		[Token(Token = "0x400087B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400087C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6469C4", Offset = "0x6469C4")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000C3")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x8835C0", Offset = "0x8835C0", VA = "0x8835C0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C4")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x8835C8", Offset = "0x8835C8", VA = "0x8835C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000C5")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x8835D4", Offset = "0x8835D4", VA = "0x8835D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651F4C", Offset = "0x651F4C")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x8835DC", Offset = "0x8835DC", VA = "0x8835DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651F5C", Offset = "0x651F5C")]
			private set
			{
			}
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x8835E4", Offset = "0x8835E4", VA = "0x8835E4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x8836F8", Offset = "0x8836F8", VA = "0x8836F8")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x883910", Offset = "0x883910", VA = "0x883910", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x883EC4", Offset = "0x883EC4", VA = "0x883EC4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x883F70", Offset = "0x883F70", VA = "0x883F70")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x883DDC", Offset = "0x883DDC", VA = "0x883DDC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x884078", Offset = "0x884078", VA = "0x884078")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x8840FC", Offset = "0x8840FC", VA = "0x8840FC")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x884188", Offset = "0x884188", VA = "0x884188")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6469E4", Offset = "0x6469E4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6469F4", Offset = "0x6469F4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000C6")]
		public Collider Collider
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x8843D4", Offset = "0x8843D4", VA = "0x8843D4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651F6C", Offset = "0x651F6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x8843DC", Offset = "0x8843DC", VA = "0x8843DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651F7C", Offset = "0x651F7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x8843E4", Offset = "0x8843E4", VA = "0x8843E4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651F8C", Offset = "0x651F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x8843EC", Offset = "0x8843EC", VA = "0x8843EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651F9C", Offset = "0x651F9C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x8843F4", Offset = "0x8843F4", VA = "0x8843F4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x884444", Offset = "0x884444", VA = "0x884444")]
		private void Awake()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x8844D8", Offset = "0x8844D8", VA = "0x8844D8")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000C9")]
		Collider Collider
		{
			[Token(Token = "0x600078E")]
			get;
		}

		[Token(Token = "0x170000CA")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600078F")]
			get;
		}

		[Token(Token = "0x170000CB")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000790")]
			get;
		}
	}
	[Token(Token = "0x20001B0")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x883858", Offset = "0x883858", VA = "0x883858")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public enum InteractionType
	{
		[Token(Token = "0x4000894")]
		Enter,
		[Token(Token = "0x4000895")]
		Stay,
		[Token(Token = "0x4000896")]
		Exit
	}
	[Token(Token = "0x20001B2")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20001B3")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40008A8")]
			Mesh,
			[Token(Token = "0x40008A9")]
			Skeleton,
			[Token(Token = "0x40008AA")]
			Both
		}

		[Token(Token = "0x20001B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643678", Offset = "0x643678")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007B3")]
				[Address(RVA = "0x8CFBB0", Offset = "0x8CFBB0", VA = "0x8CFBB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007B5")]
				[Address(RVA = "0x8CFBF8", Offset = "0x8CFBF8", VA = "0x8CFBF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x8CF91C", Offset = "0x8CF91C", VA = "0x8CF91C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x8CF948", Offset = "0x8CF948", VA = "0x8CF948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x8CF94C", Offset = "0x8CF94C", VA = "0x8CF94C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x8CFBB8", Offset = "0x8CFBB8", VA = "0x8CFBB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000897")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646A24", Offset = "0x646A24")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000CC")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xF7690C", Offset = "0xF7690C", VA = "0xF7690C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xF76944", Offset = "0xF76944", VA = "0xF76944")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xF769B4", Offset = "0xF769B4", VA = "0xF769B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xF769EC", Offset = "0xF769EC", VA = "0xF769EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0xF76A5C", Offset = "0xF76A5C", VA = "0xF76A5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xF76A94", Offset = "0xF76A94", VA = "0xF76A94")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0xF76B04", Offset = "0xF76B04", VA = "0xF76B04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000799")]
			[Address(RVA = "0xF76B3C", Offset = "0xF76B3C", VA = "0xF76B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xF76BAC", Offset = "0xF76BAC", VA = "0xF76BAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xF76BE4", Offset = "0xF76BE4", VA = "0xF76BE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xF76C54", Offset = "0xF76C54", VA = "0xF76C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xF76C88", Offset = "0xF76C88", VA = "0xF76C88")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0xF76CF4", Offset = "0xF76CF4", VA = "0xF76CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xF76D28", Offset = "0xF76D28", VA = "0xF76D28")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0xF76D94", Offset = "0xF76D94", VA = "0xF76D94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xF76DC8", Offset = "0xF76DC8", VA = "0xF76DC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0xF76E34", Offset = "0xF76E34", VA = "0xF76E34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0xF76E68", Offset = "0xF76E68", VA = "0xF76E68")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0xF76ED4", Offset = "0xF76ED4", VA = "0xF76ED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0xF76F08", Offset = "0xF76F08", VA = "0xF76F08")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0xF76F74", Offset = "0xF76F74", VA = "0xF76F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651FAC", Offset = "0x651FAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0xF76FC0", Offset = "0xF76FC0", VA = "0xF76FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x651FBC", Offset = "0x651FBC")]
			private set
			{
			}
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xF77014", Offset = "0xF77014", VA = "0xF77014")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xF773E8", Offset = "0xF773E8", VA = "0xF773E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xF77370", Offset = "0xF77370", VA = "0xF77370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x651FCC", Offset = "0x651FCC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xF77470", Offset = "0xF77470", VA = "0xF77470")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xF77554", Offset = "0xF77554", VA = "0xF77554")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xF77734", Offset = "0xF77734", VA = "0xF77734")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xF77970", Offset = "0xF77970", VA = "0xF77970")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xF77AFC", Offset = "0xF77AFC", VA = "0xF77AFC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B6")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x13D124C", Offset = "0x13D124C", VA = "0x13D124C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000D9")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0xF17198", Offset = "0xF17198", VA = "0xF17198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0xF171A0", Offset = "0xF171A0", VA = "0xF171A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0xF171A8", Offset = "0xF171A8", VA = "0xF171A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0xF171B0", Offset = "0xF171B0", VA = "0xF171B0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0xF171B8", Offset = "0xF171B8", VA = "0xF171B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65307C", Offset = "0x65307C")]
			add
			{
			}
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0xF17258", Offset = "0xF17258", VA = "0xF17258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65308C", Offset = "0x65308C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0xF17368", Offset = "0xF17368", VA = "0xF17368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65309C", Offset = "0x65309C")]
			add
			{
			}
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0xF17408", Offset = "0xF17408", VA = "0xF17408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6530AC", Offset = "0x6530AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0xF17518", Offset = "0xF17518", VA = "0xF17518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6530BC", Offset = "0x6530BC")]
			add
			{
			}
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0xF175B8", Offset = "0xF175B8", VA = "0xF175B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6530CC", Offset = "0x6530CC")]
			remove
			{
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xF172F8", Offset = "0xF172F8", VA = "0xF172F8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xF174A8", Offset = "0xF174A8", VA = "0xF174A8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xF17658", Offset = "0xF17658", VA = "0xF17658", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007C3")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xF176C8", Offset = "0xF176C8", VA = "0xF176C8", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xF177F4", Offset = "0xF177F4", VA = "0xF177F4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xF17920", Offset = "0xF17920", VA = "0xF17920")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40008B6")]
		None,
		[Token(Token = "0x40008B7")]
		Proximity,
		[Token(Token = "0x40008B8")]
		Contact,
		[Token(Token = "0x40008B9")]
		Action
	}
	[Token(Token = "0x20001B8")]
	public enum InteractableState
	{
		[Token(Token = "0x40008BB")]
		Default,
		[Token(Token = "0x40008BC")]
		ProximityState,
		[Token(Token = "0x40008BD")]
		ContactState,
		[Token(Token = "0x40008BE")]
		ActionState
	}
	[Token(Token = "0x20001B9")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xF17A78", Offset = "0xF17A78", VA = "0xF17A78")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000DD")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0xF17980", Offset = "0xF17980", VA = "0xF17980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xF17728", Offset = "0xF17728", VA = "0xF17728")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xF17854", Offset = "0xF17854", VA = "0xF17854")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xF179E4", Offset = "0xF179E4", VA = "0xF179E4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20001BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643688", Offset = "0x643688")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007D6")]
				[Address(RVA = "0x13D17B0", Offset = "0x13D17B0", VA = "0x13D17B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007D8")]
				[Address(RVA = "0x13D17F8", Offset = "0x13D17F8", VA = "0x13D17F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x13D1298", Offset = "0x13D1298", VA = "0x13D1298")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x13D12C4", Offset = "0x13D12C4", VA = "0x13D12C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x13D1334", Offset = "0x13D1334", VA = "0x13D1334", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x13D12E0", Offset = "0x13D12E0", VA = "0x13D12E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x13D17B8", Offset = "0x13D17B8", VA = "0x13D17B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xF187FC", Offset = "0xF187FC", VA = "0xF187FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xF18878", Offset = "0xF18878", VA = "0xF18878")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6530DC", Offset = "0x6530DC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xF18918", Offset = "0xF18918", VA = "0xF18918")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xF18A00", Offset = "0xF18A00", VA = "0xF18A00")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000E0")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xF18A08", Offset = "0xF18A08", VA = "0xF18A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xF18B88", Offset = "0xF18B88", VA = "0xF18B88")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xF18C30", Offset = "0xF18C30", VA = "0xF18C30")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xF18CD8", Offset = "0xF18CD8", VA = "0xF18CD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xF18FA0", Offset = "0xF18FA0", VA = "0xF18FA0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xF18FE8", Offset = "0xF18FE8", VA = "0xF18FE8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xF19298", Offset = "0xF19298", VA = "0xF19298")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xF193E4", Offset = "0xF193E4", VA = "0xF193E4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20001BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643698", Offset = "0x643698")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007F2")]
				[Address(RVA = "0x8CC9F0", Offset = "0x8CC9F0", VA = "0x8CC9F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007F4")]
				[Address(RVA = "0x8CCA38", Offset = "0x8CCA38", VA = "0x8CCA38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x8CC5BC", Offset = "0x8CC5BC", VA = "0x8CC5BC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60007F0")]
			[Address(RVA = "0x8CC5E8", Offset = "0x8CC5E8", VA = "0x8CC5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x8CC5EC", Offset = "0x8CC5EC", VA = "0x8CC5EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x8CC9F8", Offset = "0x8CC9F8", VA = "0x8CC9F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008D7")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000E1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0xAB4CE0", Offset = "0xAB4CE0", VA = "0xAB4CE0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000E2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0xAB4CE8", Offset = "0xAB4CE8", VA = "0xAB4CE8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000E3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0xAB4CF0", Offset = "0xAB4CF0", VA = "0xAB4CF0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		public override bool EnableState
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xAB4CF8", Offset = "0xAB4CF8", VA = "0xAB4CF8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xAB4D24", Offset = "0xAB4D24", VA = "0xAB4D24", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xAB4D60", Offset = "0xAB4D60", VA = "0xAB4D60", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xAB4E18", Offset = "0xAB4E18", VA = "0xAB4E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65318C", Offset = "0x65318C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xAB4E90", Offset = "0xAB4E90", VA = "0xAB4E90")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xAB5130", Offset = "0xAB5130", VA = "0xAB5130")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xAB52BC", Offset = "0xAB52BC", VA = "0xAB52BC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xAB53B4", Offset = "0xAB53B4", VA = "0xAB53B4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xAB56AC", Offset = "0xAB56AC", VA = "0xAB56AC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xAB56B0", Offset = "0xAB56B0", VA = "0xAB56B0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xAB56B4", Offset = "0xAB56B4", VA = "0xAB56B4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646AB4", Offset = "0x646AB4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646AC4", Offset = "0x646AC4")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646AD4", Offset = "0x646AD4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000E7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xAB56CC", Offset = "0xAB56CC", VA = "0xAB56CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65323C", Offset = "0x65323C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xAB56D4", Offset = "0xAB56D4", VA = "0xAB56D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65324C", Offset = "0x65324C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public bool EnableState
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0xAB56DC", Offset = "0xAB56DC", VA = "0xAB56DC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xAB56F8", Offset = "0xAB56F8", VA = "0xAB56F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0xAB5718", Offset = "0xAB5718", VA = "0xAB5718", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65325C", Offset = "0x65325C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0xAB5720", Offset = "0xAB5720", VA = "0xAB5720", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65326C", Offset = "0x65326C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public float SphereRadius
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xAB572C", Offset = "0xAB572C", VA = "0xAB572C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65327C", Offset = "0x65327C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0xAB5734", Offset = "0xAB5734", VA = "0xAB5734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65328C", Offset = "0x65328C")]
			private set
			{
			}
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xAB573C", Offset = "0xAB573C", VA = "0xAB573C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xAB5784", Offset = "0xAB5784", VA = "0xAB5784", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xAB5788", Offset = "0xAB5788", VA = "0xAB5788")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40008EA")]
		None = 0,
		[Token(Token = "0x40008EB")]
		Ray = 1,
		[Token(Token = "0x40008EC")]
		Poke = 4,
		[Token(Token = "0x40008ED")]
		All = -1
	}
	[Token(Token = "0x20001C2")]
	public enum ToolInputState
	{
		[Token(Token = "0x40008EF")]
		Inactive,
		[Token(Token = "0x40008F0")]
		PrimaryInputDown,
		[Token(Token = "0x40008F1")]
		PrimaryInputDownStay,
		[Token(Token = "0x40008F2")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001C3")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xF17928", Offset = "0xF17928", VA = "0xF17928")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646AE4", Offset = "0x646AE4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646AF4", Offset = "0x646AF4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646B04", Offset = "0x646B04")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000EB")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0xF17B3C", Offset = "0xF17B3C", VA = "0xF17B3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xF17B44", Offset = "0xF17B44", VA = "0xF17B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65329C", Offset = "0x65329C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xF17B4C", Offset = "0xF17B4C", VA = "0xF17B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6532AC", Offset = "0x6532AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000804")]
			get;
		}

		[Token(Token = "0x170000EE")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000805")]
			get;
		}

		[Token(Token = "0x170000EF")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000806")]
			get;
		}

		[Token(Token = "0x170000F0")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xF17B58", Offset = "0xF17B58", VA = "0xF17B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6532BC", Offset = "0x6532BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xF17B64", Offset = "0xF17B64", VA = "0xF17B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6532CC", Offset = "0x6532CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xF17B70", Offset = "0xF17B70", VA = "0xF17B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6532DC", Offset = "0x6532DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xF17B7C", Offset = "0xF17B7C", VA = "0xF17B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6532EC", Offset = "0x6532EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600080F")]
			get;
			[Token(Token = "0x6000810")]
			set;
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xF17B88", Offset = "0xF17B88", VA = "0xF17B88")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600080C")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600080D")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600080E")]
		public abstract void DeFocus();

		[Token(Token = "0x6000811")]
		public abstract void Initialize();

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xF17B90", Offset = "0xF17B90", VA = "0xF17B90")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xF17BDC", Offset = "0xF17BDC", VA = "0xF17BDC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xF17C30", Offset = "0xF17C30", VA = "0xF17C30", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xF17EE0", Offset = "0xF17EE0", VA = "0xF17EE0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xF1866C", Offset = "0xF1866C", VA = "0xF1866C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000F3")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000817")]
			get;
		}

		[Token(Token = "0x170000F4")]
		bool EnableState
		{
			[Token(Token = "0x6000819")]
			get;
			[Token(Token = "0x600081A")]
			set;
		}

		[Token(Token = "0x170000F5")]
		bool ToolActivateState
		{
			[Token(Token = "0x600081B")]
			get;
			[Token(Token = "0x600081C")]
			set;
		}

		[Token(Token = "0x6000818")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001C6")]
	public class PinchStateModule
	{
		[Token(Token = "0x20001C7")]
		private enum PinchState
		{
			[Token(Token = "0x4000903")]
			None,
			[Token(Token = "0x4000904")]
			PinchDown,
			[Token(Token = "0x4000905")]
			PinchStay,
			[Token(Token = "0x4000906")]
			PinchUp
		}

		[Token(Token = "0x40008FF")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000F6")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x136F7A4", Offset = "0x136F7A4", VA = "0x136F7A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F7")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x136F82C", Offset = "0x136F82C", VA = "0x136F82C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F8")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x136F8B4", Offset = "0x136F8B4", VA = "0x136F8B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x136F93C", Offset = "0x136F93C", VA = "0x136F93C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x136F970", Offset = "0x136F970", VA = "0x136F970")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000907")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000908")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000909")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400090A")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400090B")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646B24", Offset = "0x646B24")]
		private float _coneAngleDegrees;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000F9")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x1376A24", Offset = "0x1376A24", VA = "0x1376A24", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000FA")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x1376A2C", Offset = "0x1376A2C", VA = "0x1376A2C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000FB")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x1376A94", Offset = "0x1376A94", VA = "0x1376A94", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public override bool EnableState
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x1376A9C", Offset = "0x1376A9C", VA = "0x1376A9C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x1376AE0", Offset = "0x1376AE0", VA = "0x1376AE0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1376B54", Offset = "0x1376B54", VA = "0x1376B54", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1376BBC", Offset = "0x1376BBC", VA = "0x1376BBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1376C60", Offset = "0x1376C60", VA = "0x1376C60")]
		private void Update()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1376F18", Offset = "0x1376F18", VA = "0x1376F18")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1376FA0", Offset = "0x1376FA0", VA = "0x1376FA0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1377370", Offset = "0x1377370", VA = "0x1377370")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1377480", Offset = "0x1377480", VA = "0x1377480")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x13775A4", Offset = "0x13775A4", VA = "0x13775A4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x13778A8", Offset = "0x13778A8", VA = "0x13778A8")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1377C3C", Offset = "0x1377C3C", VA = "0x1377C3C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1377D24", Offset = "0x1377D24", VA = "0x1377D24", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1377D60", Offset = "0x1377D60", VA = "0x1377D60")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000917")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000918")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646B98", Offset = "0x646B98")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000FD")]
		public bool EnableState
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x1376AC4", Offset = "0x1376AC4", VA = "0x1376AC4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x1376AFC", Offset = "0x1376AFC", VA = "0x1376AFC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x1377E6C", Offset = "0x1377E6C", VA = "0x1377E6C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x1376EDC", Offset = "0x1376EDC", VA = "0x1376EDC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x13780CC", Offset = "0x13780CC", VA = "0x13780CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6532FC", Offset = "0x6532FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x13780D4", Offset = "0x13780D4", VA = "0x13780D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65330C", Offset = "0x65330C")]
			set
			{
			}
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1377E74", Offset = "0x1377E74", VA = "0x1377E74")]
		private void Awake()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1377C78", Offset = "0x1377C78", VA = "0x1377C78", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x13780DC", Offset = "0x13780DC", VA = "0x13780DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1378350", Offset = "0x1378350", VA = "0x1378350")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1378440", Offset = "0x1378440", VA = "0x1378440")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000100")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0xAA8560", Offset = "0xAA8560", VA = "0xAA8560")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600083F")]
			[Address(RVA = "0xAA8568", Offset = "0xAA8568", VA = "0xAA8568")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0xAA85E0", Offset = "0xAA85E0", VA = "0xAA85E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000841")]
			[Address(RVA = "0xAA85E8", Offset = "0xAA85E8", VA = "0xAA85E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xAA8654", Offset = "0xAA8654", VA = "0xAA8654")]
		private void Start()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xAA8918", Offset = "0xAA8918", VA = "0xAA8918")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xAA8928", Offset = "0xAA8928", VA = "0xAA8928")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xAA8938", Offset = "0xAA8938", VA = "0xAA8938")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x893DCC", Offset = "0x893DCC", VA = "0x893DCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x893DD0", Offset = "0x893DD0", VA = "0x893DD0")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x893E08", Offset = "0x893E08", VA = "0x893E08")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x893E40", Offset = "0x893E40", VA = "0x893E40")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x893E78", Offset = "0x893E78", VA = "0x893E78")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x893EB0", Offset = "0x893EB0", VA = "0x893EB0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x893EE8", Offset = "0x893EE8", VA = "0x893EE8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x893F20", Offset = "0x893F20", VA = "0x893F20")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x893F94", Offset = "0x893F94", VA = "0x893F94")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x894004", Offset = "0x894004", VA = "0x894004")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x89400C", Offset = "0x89400C", VA = "0x89400C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x894010", Offset = "0x894010", VA = "0x894010")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x893FC8", Offset = "0x893FC8", VA = "0x893FC8")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x894050", Offset = "0x894050", VA = "0x894050")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20001CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6436B8", Offset = "0x6436B8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000102")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600085C")]
				[Address(RVA = "0xA9E8F4", Offset = "0xA9E8F4", VA = "0xA9E8F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000103")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600085E")]
				[Address(RVA = "0xA9E93C", Offset = "0xA9E93C", VA = "0xA9E93C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000859")]
			[Address(RVA = "0xA9E708", Offset = "0xA9E708", VA = "0xA9E708")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600085A")]
			[Address(RVA = "0xA9E734", Offset = "0xA9E734", VA = "0xA9E734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600085B")]
			[Address(RVA = "0xA9E738", Offset = "0xA9E738", VA = "0xA9E738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600085D")]
			[Address(RVA = "0xA9E8FC", Offset = "0xA9E8FC", VA = "0xA9E8FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000928")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000929")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x13AF404", Offset = "0x13AF404", VA = "0x13AF404")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x13AF4B0", Offset = "0x13AF4B0", VA = "0x13AF4B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x13AF700", Offset = "0x13AF700", VA = "0x13AF700")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x13AF688", Offset = "0x13AF688", VA = "0x13AF688")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65331C", Offset = "0x65331C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x13AF74C", Offset = "0x13AF74C", VA = "0x13AF74C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20001D0")]
		public enum SelectionState
		{
			[Token(Token = "0x400093F")]
			Off,
			[Token(Token = "0x4000940")]
			Selected,
			[Token(Token = "0x4000941")]
			Highlighted
		}

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000104")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x1380520", Offset = "0x1380520", VA = "0x1380520")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x1380528", Offset = "0x1380528", VA = "0x1380528")]
			set
			{
			}
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x13806AC", Offset = "0x13806AC", VA = "0x13806AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x13808B0", Offset = "0x13808B0", VA = "0x13808B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x13805B0", Offset = "0x13805B0", VA = "0x13805B0")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x138099C", Offset = "0x138099C", VA = "0x138099C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20001D2")]
		public enum SegmentType
		{
			[Token(Token = "0x4000950")]
			Straight,
			[Token(Token = "0x4000951")]
			LeftTurn,
			[Token(Token = "0x4000952")]
			RightTurn,
			[Token(Token = "0x4000953")]
			Switch
		}

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000948")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000949")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646C78", Offset = "0x646C78")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000105")]
		public float StartDistance
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x1391108", Offset = "0x1391108", VA = "0x1391108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6533CC", Offset = "0x6533CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x1391110", Offset = "0x1391110", VA = "0x1391110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6533DC", Offset = "0x6533DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float GridSize
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x1391118", Offset = "0x1391118", VA = "0x1391118")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x1391120", Offset = "0x1391120", VA = "0x1391120")]
			private set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public int SubDivCount
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0x1391128", Offset = "0x1391128", VA = "0x1391128")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600086B")]
			[Address(RVA = "0x1391130", Offset = "0x1391130", VA = "0x1391130")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public SegmentType Type
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x1391138", Offset = "0x1391138", VA = "0x1391138")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000109")]
		public Pose EndPose
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0x1391140", Offset = "0x1391140", VA = "0x1391140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public float Radius
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0x139149C", Offset = "0x139149C", VA = "0x139149C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010B")]
		public float SegmentLength
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0x13911A8", Offset = "0x13911A8", VA = "0x13911A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x13914AC", Offset = "0x13914AC", VA = "0x13914AC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x13914C4", Offset = "0x13914C4", VA = "0x13914C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x13911E8", Offset = "0x13911E8", VA = "0x13911E8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x13914C8", Offset = "0x13914C8", VA = "0x13914C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x13914CC", Offset = "0x13914CC", VA = "0x13914CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1391534", Offset = "0x1391534", VA = "0x1391534")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1391DFC", Offset = "0x1391DFC", VA = "0x1391DFC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x13920A8", Offset = "0x13920A8", VA = "0x13920A8")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20001D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6436C8", Offset = "0x6436C8")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000886")]
				[Address(RVA = "0xAA4890", Offset = "0xAA4890", VA = "0xAA4890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000888")]
				[Address(RVA = "0xAA48D8", Offset = "0xAA48D8", VA = "0xAA48D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000883")]
			[Address(RVA = "0xAA46EC", Offset = "0xAA46EC", VA = "0xAA46EC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000884")]
			[Address(RVA = "0xAA4718", Offset = "0xAA4718", VA = "0xAA4718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000885")]
			[Address(RVA = "0xAA471C", Offset = "0xAA471C", VA = "0xAA471C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000887")]
			[Address(RVA = "0xAA4898", Offset = "0xAA4898", VA = "0xAA4898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000954")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000955")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1392364", Offset = "0x1392364", VA = "0x1392364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1392420", Offset = "0x1392420", VA = "0x1392420")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x13924D0", Offset = "0x13924D0", VA = "0x13924D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1392648", Offset = "0x1392648", VA = "0x1392648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1392810", Offset = "0x1392810", VA = "0x1392810")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x13928F8", Offset = "0x13928F8", VA = "0x13928F8")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1392B0C", Offset = "0x1392B0C", VA = "0x1392B0C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1392A0C", Offset = "0x1392A0C", VA = "0x1392A0C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1392A20", Offset = "0x1392A20", VA = "0x1392A20")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1392B64", Offset = "0x1392B64", VA = "0x1392B64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6533EC", Offset = "0x6533EC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1392BDC", Offset = "0x1392BDC", VA = "0x1392BDC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700010E")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x1392C8C", Offset = "0x1392C8C", VA = "0x1392C8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1392C9C", Offset = "0x1392C9C", VA = "0x1392C9C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1392CA4", Offset = "0x1392CA4", VA = "0x1392CA4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1392FE8", Offset = "0x1392FE8", VA = "0x1392FE8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400096D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400096E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646D78", Offset = "0x646D78")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700010F")]
		public float Distance
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x13930F8", Offset = "0x13930F8", VA = "0x13930F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65349C", Offset = "0x65349C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x1393100", Offset = "0x1393100", VA = "0x1393100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6534AC", Offset = "0x6534AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public float Scale
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x1393108", Offset = "0x1393108", VA = "0x1393108")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x1393110", Offset = "0x1393110", VA = "0x1393110")]
			set
			{
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1392CA0", Offset = "0x1392CA0", VA = "0x1392CA0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1393118", Offset = "0x1393118", VA = "0x1393118")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1392CEC", Offset = "0x1392CEC", VA = "0x1392CEC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1392F10", Offset = "0x1392F10", VA = "0x1392F10")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000895")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1393054", Offset = "0x1393054", VA = "0x1393054")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20001D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6436D8", Offset = "0x6436D8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000111")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008A4")]
				[Address(RVA = "0xAA4B78", Offset = "0xAA4B78", VA = "0xAA4B78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000112")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008A6")]
				[Address(RVA = "0xAA4BC0", Offset = "0xAA4BC0", VA = "0xAA4BC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008A1")]
			[Address(RVA = "0xAA48E0", Offset = "0xAA48E0", VA = "0xAA48E0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xAA490C", Offset = "0xAA490C", VA = "0xAA490C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xAA4910", Offset = "0xAA4910", VA = "0xAA4910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008A5")]
			[Address(RVA = "0xAA4B80", Offset = "0xAA4B80", VA = "0xAA4B80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x13932B8", Offset = "0x13932B8", VA = "0x13932B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1393318", Offset = "0x1393318", VA = "0x1393318")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1393420", Offset = "0x1393420", VA = "0x1393420")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1393590", Offset = "0x1393590", VA = "0x1393590")]
		private void Update()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1393480", Offset = "0x1393480", VA = "0x1393480")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x139366C", Offset = "0x139366C", VA = "0x139366C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6534BC", Offset = "0x6534BC")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x13936F4", Offset = "0x13936F4", VA = "0x13936F4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x13937A0", Offset = "0x13937A0", VA = "0x13937A0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1393800", Offset = "0x1393800", VA = "0x1393800")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20001DA")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40009AB")]
			Start,
			[Token(Token = "0x40009AC")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40009AD")]
			Stop
		}

		[Token(Token = "0x20001DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6436E8", Offset = "0x6436E8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40009B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000113")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008B9")]
				[Address(RVA = "0xAA4E3C", Offset = "0xAA4E3C", VA = "0xAA4E3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000114")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008BB")]
				[Address(RVA = "0xAA4E84", Offset = "0xAA4E84", VA = "0xAA4E84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xAA4BC8", Offset = "0xAA4BC8", VA = "0xAA4BC8")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xAA4BF4", Offset = "0xAA4BF4", VA = "0xAA4BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xAA4BF8", Offset = "0xAA4BF8", VA = "0xAA4BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xAA4E44", Offset = "0xAA4E44", VA = "0xAA4E44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400098D")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400098E")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400098F")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000990")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x646DD8", Offset = "0x646DD8")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x139385C", Offset = "0x139385C", VA = "0x139385C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x13939C8", Offset = "0x13939C8", VA = "0x13939C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x13939D4", Offset = "0x13939D4", VA = "0x13939D4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1393B24", Offset = "0x1393B24", VA = "0x1393B24")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x139393C", Offset = "0x139393C", VA = "0x139393C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65356C", Offset = "0x65356C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1393B84", Offset = "0x1393B84", VA = "0x1393B84")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1393AC0", Offset = "0x1393AC0", VA = "0x1393AC0")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1393DA0", Offset = "0x1393DA0", VA = "0x1393DA0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1393EDC", Offset = "0x1393EDC", VA = "0x1393EDC")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1393E0C", Offset = "0x1393E0C", VA = "0x1393E0C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1393F48", Offset = "0x1393F48", VA = "0x1393F48")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1393F68", Offset = "0x1393F68", VA = "0x1393F68")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1393FF4", Offset = "0x1393FF4", VA = "0x1393FF4")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x13940AC", Offset = "0x13940AC", VA = "0x13940AC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x13940BC", Offset = "0x13940BC", VA = "0x13940BC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000115")]
		public float TrackLength
		{
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x1394124", Offset = "0x1394124", VA = "0x1394124")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x139412C", Offset = "0x139412C", VA = "0x139412C")]
			private set
			{
			}
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1394134", Offset = "0x1394134", VA = "0x1394134")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1393198", Offset = "0x1393198", VA = "0x1393198")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1394138", Offset = "0x1394138", VA = "0x1394138")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x139434C", Offset = "0x139434C", VA = "0x139434C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1394448", Offset = "0x1394448", VA = "0x1394448")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class Pose
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x13734F0", Offset = "0x13734F0", VA = "0x13734F0")]
		public Pose()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1373534", Offset = "0x1373534", VA = "0x1373534")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20001DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6436F8", Offset = "0x6436F8")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008D1")]
				[Address(RVA = "0xAA690C", Offset = "0xAA690C", VA = "0xAA690C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008D3")]
				[Address(RVA = "0xAA6954", Offset = "0xAA6954", VA = "0xAA6954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008CE")]
			[Address(RVA = "0xAA673C", Offset = "0xAA673C", VA = "0xAA673C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xAA6768", Offset = "0xAA6768", VA = "0xAA6768", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008D0")]
			[Address(RVA = "0xAA676C", Offset = "0xAA676C", VA = "0xAA676C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xAA6914", Offset = "0xAA6914", VA = "0xAA6914", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643708", Offset = "0x643708")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000119")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008D7")]
				[Address(RVA = "0xAA6A64", Offset = "0xAA6A64", VA = "0xAA6A64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008D9")]
				[Address(RVA = "0xAA6AAC", Offset = "0xAA6AAC", VA = "0xAA6AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008D4")]
			[Address(RVA = "0xAA695C", Offset = "0xAA695C", VA = "0xAA695C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60008D5")]
			[Address(RVA = "0xAA6988", Offset = "0xAA6988", VA = "0xAA6988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xAA698C", Offset = "0xAA698C", VA = "0xAA698C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008D8")]
			[Address(RVA = "0xAA6A6C", Offset = "0xAA6A6C", VA = "0xAA6A6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C0")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x646FC0", Offset = "0x646FC0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000116")]
		public bool IsMoving
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x8C4040", Offset = "0x8C4040", VA = "0x8C4040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65361C", Offset = "0x65361C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x8C4048", Offset = "0x8C4048", VA = "0x8C4048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65362C", Offset = "0x65362C")]
			private set
			{
			}
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x8C4054", Offset = "0x8C4054", VA = "0x8C4054")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x8C4090", Offset = "0x8C4090", VA = "0x8C4090")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x8C4174", Offset = "0x8C4174", VA = "0x8C4174")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x8C41E8", Offset = "0x8C41E8", VA = "0x8C41E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65363C", Offset = "0x65363C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x8C4270", Offset = "0x8C4270", VA = "0x8C4270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65369C", Offset = "0x65369C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x8C4328", Offset = "0x8C4328", VA = "0x8C4328")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x8C4394", Offset = "0x8C4394", VA = "0x8C4394")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x8C439C", Offset = "0x8C439C", VA = "0x8C439C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x8C4410", Offset = "0x8C4410", VA = "0x8C4410")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x8C44F4", Offset = "0x8C44F4", VA = "0x8C44F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x8C462C", Offset = "0x8C462C", VA = "0x8C462C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x8C46AC", Offset = "0x8C46AC", VA = "0x8C46AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x8C4788", Offset = "0x8C4788", VA = "0x8C4788")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40009DD")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40009DE")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40009DF")]
		EUDT_None,
		[Token(Token = "0x40009E0")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001E3")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20001E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643718", Offset = "0x643718")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700011B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008F3")]
				[Address(RVA = "0x13D7604", Offset = "0x13D7604", VA = "0x13D7604", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008F5")]
				[Address(RVA = "0x13D764C", Offset = "0x13D764C", VA = "0x13D764C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x13D73D4", Offset = "0x13D73D4", VA = "0x13D73D4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x13D7400", Offset = "0x13D7400", VA = "0x13D7400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x13D7404", Offset = "0x13D7404", VA = "0x13D7404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x13D760C", Offset = "0x13D760C", VA = "0x13D760C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40009E2")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40009E3")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40009E4")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647000", Offset = "0x647000")]
		public GameObject mainCamera;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647038", Offset = "0x647038")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x9B9578", Offset = "0x9B9578", VA = "0x9B9578")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x9B9DD4", Offset = "0x9B9DD4", VA = "0x9B9DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x9B9F1C", Offset = "0x9B9F1C", VA = "0x9B9F1C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x9BA058", Offset = "0x9BA058", VA = "0x9BA058")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x9BA194", Offset = "0x9BA194", VA = "0x9BA194")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x9B9EF0", Offset = "0x9B9EF0", VA = "0x9B9EF0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x9BA274", Offset = "0x9BA274", VA = "0x9BA274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65379C", Offset = "0x65379C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x9BA2EC", Offset = "0x9BA2EC", VA = "0x9BA2EC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x9B99E0", Offset = "0x9B99E0", VA = "0x9B99E0")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x9BA440", Offset = "0x9BA440", VA = "0x9BA440")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x9BA320", Offset = "0x9BA320", VA = "0x9BA320")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x9BA758", Offset = "0x9BA758", VA = "0x9BA758")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x9BA848", Offset = "0x9BA848", VA = "0x9BA848")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x9BA8D8", Offset = "0x9BA8D8", VA = "0x9BA8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6537FC", Offset = "0x6537FC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x9BA930", Offset = "0x9BA930", VA = "0x9BA930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65380C", Offset = "0x65380C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x9BA988", Offset = "0x9BA988", VA = "0x9BA988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65381C", Offset = "0x65381C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x643728", Offset = "0x643728")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643788", Offset = "0x643788")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000903")]
			[Address(RVA = "0x8CF71C", Offset = "0x8CF71C", VA = "0x8CF71C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000904")]
			[Address(RVA = "0x8CF724", Offset = "0x8CF724", VA = "0x8CF724")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009FC")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40009FD")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40009FE")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40009FF")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000A00")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000A01")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000A02")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000A03")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000A04")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000A05")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000A06")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xF70ABC", Offset = "0xF70ABC", VA = "0xF70ABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xF70B18", Offset = "0xF70B18", VA = "0xF70B18")]
		private void Start()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xF70FAC", Offset = "0xF70FAC", VA = "0xF70FAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xF71098", Offset = "0xF71098", VA = "0xF71098")]
		private void Update()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xF711FC", Offset = "0xF711FC", VA = "0xF711FC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xF71504", Offset = "0xF71504", VA = "0xF71504")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xF715FC", Offset = "0xF715FC", VA = "0xF715FC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xF7175C", Offset = "0xF7175C", VA = "0xF7175C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xF71294", Offset = "0xF71294", VA = "0xF71294")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xF712E8", Offset = "0xF712E8", VA = "0xF712E8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xF70E50", Offset = "0xF70E50", VA = "0xF70E50")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xF71898", Offset = "0xF71898", VA = "0xF71898")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000A1B")]
		Default,
		[Token(Token = "0x4000A1C")]
		Generic,
		[Token(Token = "0x4000A1D")]
		PingPongBall,
		[Token(Token = "0x4000A1E")]
		Controller
	}
	[Token(Token = "0x20001E8")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700011D")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0xF75D40", Offset = "0xF75D40", VA = "0xF75D40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011E")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0xF75D48", Offset = "0xF75D48", VA = "0xF75D48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0xF75D50", Offset = "0xF75D50", VA = "0xF75D50")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xF75D58", Offset = "0xF75D58", VA = "0xF75D58")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1390BBC", Offset = "0x1390BBC", VA = "0x1390BBC")]
		private void Update()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1390EA4", Offset = "0x1390EA4", VA = "0x1390EA4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1390F00", Offset = "0x1390F00", VA = "0x1390F00")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1390F44", Offset = "0x1390F44", VA = "0x1390F44")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x20001EA")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6470F0", Offset = "0x6470F0")]
		[Multiline]
		private string freshStateText;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64714C", Offset = "0x64714C")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6471A8", Offset = "0x6471A8")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xF1C44C", Offset = "0xF1C44C", VA = "0xF1C44C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xF1C518", Offset = "0xF1C518", VA = "0xF1C518")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xF1C5E4", Offset = "0xF1C5E4", VA = "0xF1C5E4")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xF1C6A4", Offset = "0xF1C6A4", VA = "0xF1C6A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xF1C6FC", Offset = "0xF1C6FC", VA = "0xF1C6FC")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xF1C7EC", Offset = "0xF1C7EC", VA = "0xF1C7EC")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xF1C9F4", Offset = "0xF1C9F4", VA = "0xF1C9F4")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xF1CA54", Offset = "0xF1CA54", VA = "0xF1CA54")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xF1CAB0", Offset = "0xF1CAB0", VA = "0xF1CAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65387C", Offset = "0x65387C")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x892C28", Offset = "0x892C28", VA = "0x892C28")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x892CC4", Offset = "0x892CC4", VA = "0x892CC4")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x892EE8", Offset = "0x892EE8", VA = "0x892EE8")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x892D58", Offset = "0x892D58", VA = "0x892D58")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x892F24", Offset = "0x892F24", VA = "0x892F24")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x20001ED")]
		internal enum Step
		{
			[Token(Token = "0x4000A2E")]
			SetupWit,
			[Token(Token = "0x4000A2F")]
			MissingServerToken,
			[Token(Token = "0x4000A30")]
			MissingClientToken,
			[Token(Token = "0x4000A31")]
			AddConfig,
			[Token(Token = "0x4000A32")]
			AddVoiceExperiences,
			[Token(Token = "0x4000A33")]
			SetConfig,
			[Token(Token = "0x4000A34")]
			Ready
		}

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x17000120")]
		internal Step CurrentStep
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0xF16E1C", Offset = "0xF16E1C", VA = "0xF16E1C")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x17000121")]
		internal string CurrentStepText
		{
			[Token(Token = "0x600091C")]
			[Address(RVA = "0xF16E24", Offset = "0xF16E24", VA = "0xF16E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xF16EB8", Offset = "0xF16EB8", VA = "0xF16EB8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xF16EC0", Offset = "0xF16EC0", VA = "0xF16EC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xF16EC4", Offset = "0xF16EC4", VA = "0xF16EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xF16EBC", Offset = "0xF16EBC", VA = "0xF16EBC")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xF16EC8", Offset = "0xF16EC8", VA = "0xF16EC8")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x20001EE")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647204", Offset = "0x647204")]
		public Text logText;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64723C", Offset = "0x64723C")]
		public AudioClip buzzSound;

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x13901E0", Offset = "0x13901E0", VA = "0x13901E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x13902B0", Offset = "0x13902B0", VA = "0x13902B0")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1390244", Offset = "0x1390244", VA = "0x1390244")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1390340", Offset = "0x1390340", VA = "0x1390340")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x13903B4", Offset = "0x13903B4", VA = "0x13903B4")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1390788", Offset = "0x1390788", VA = "0x1390788")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1390838", Offset = "0x1390838", VA = "0x1390838")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1390888", Offset = "0x1390888", VA = "0x1390888")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x13908DC", Offset = "0x13908DC", VA = "0x13908DC")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x13909F4", Offset = "0x13909F4", VA = "0x13909F4")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1390B00", Offset = "0x1390B00", VA = "0x1390B00")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x13907B0", Offset = "0x13907B0", VA = "0x13907B0")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1390614", Offset = "0x1390614", VA = "0x1390614")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1390B08", Offset = "0x1390B08", VA = "0x1390B08")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1390B10", Offset = "0x1390B10", VA = "0x1390B10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1390B6C", Offset = "0x1390B6C", VA = "0x1390B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1390BB4", Offset = "0x1390BB4", VA = "0x1390BB4")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x8C4900", Offset = "0x8C4900", VA = "0x8C4900")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x8C49B8", Offset = "0x8C49B8", VA = "0x8C49B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x8C4A14", Offset = "0x8C4A14", VA = "0x8C4A14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x8C4A98", Offset = "0x8C4A98", VA = "0x8C4A98")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x8C4ABC", Offset = "0x8C4ABC", VA = "0x8C4ABC")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001F1")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000A3D")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000A3E")]
		public const string Tab = "    ";

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xC236EC", Offset = "0xC236EC", VA = "0xC236EC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x65388C", Offset = "0x65388C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x65388C", Offset = "0x65388C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xC2377C", Offset = "0xC2377C", VA = "0xC2377C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6538EC", Offset = "0x6538EC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6538EC", Offset = "0x6538EC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xC2381C", Offset = "0xC2381C", VA = "0xC2381C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x65394C", Offset = "0x65394C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x65394C", Offset = "0x65394C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xC238AC", Offset = "0xC238AC", VA = "0xC238AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6539AC", Offset = "0x6539AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6539AC", Offset = "0x6539AC")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xC2393C", Offset = "0xC2393C", VA = "0xC2393C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x653A0C", Offset = "0x653A0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x653A0C", Offset = "0x653A0C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class CAPI
	{
		[Token(Token = "0x20001F3")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20001F4")]
		public enum Result
		{
			[Token(Token = "0x4000A4A")]
			Success = 0,
			[Token(Token = "0x4000A4B")]
			Failure = -1000,
			[Token(Token = "0x4000A4C")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000A4D")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000A4E")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000A4F")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000A50")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000A51")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000A52")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20001F5")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x8CA4D8", Offset = "0x8CA4D8", VA = "0x8CA4D8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000A3F")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000A47")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x884544", Offset = "0x884544", VA = "0x884544")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x8845D4", Offset = "0x8845D4", VA = "0x8845D4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x8847F8", Offset = "0x8847F8", VA = "0x8847F8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x8848E4", Offset = "0x8848E4", VA = "0x8848E4")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x884954", Offset = "0x884954", VA = "0x884954")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x8849C8", Offset = "0x8849C8", VA = "0x8849C8")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x884A48", Offset = "0x884A48", VA = "0x884A48")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x884B8C", Offset = "0x884B8C", VA = "0x884B8C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x884C0C", Offset = "0x884C0C", VA = "0x884C0C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x884D50", Offset = "0x884D50", VA = "0x884D50")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x884DD0", Offset = "0x884DD0", VA = "0x884DD0")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x884E50", Offset = "0x884E50", VA = "0x884E50")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x884ED0", Offset = "0x884ED0", VA = "0x884ED0")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x884F50", Offset = "0x884F50", VA = "0x884F50")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x884FE0", Offset = "0x884FE0", VA = "0x884FE0")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x885070", Offset = "0x885070", VA = "0x885070")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x885100", Offset = "0x885100", VA = "0x885100")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x885180", Offset = "0x885180", VA = "0x885180")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x885200", Offset = "0x885200", VA = "0x885200")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x885290", Offset = "0x885290", VA = "0x885290")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x885320", Offset = "0x885320", VA = "0x885320")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x8853B0", Offset = "0x8853B0", VA = "0x8853B0")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x885430", Offset = "0x885430", VA = "0x885430")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x8854D0", Offset = "0x8854D0", VA = "0x8854D0")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x88554C", Offset = "0x88554C", VA = "0x88554C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x8855EC", Offset = "0x8855EC", VA = "0x8855EC")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x8856AC", Offset = "0x8856AC", VA = "0x8856AC")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x88577C", Offset = "0x88577C", VA = "0x88577C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x88580C", Offset = "0x88580C", VA = "0x88580C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x88589C", Offset = "0x88589C", VA = "0x88589C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x88592C", Offset = "0x88592C", VA = "0x88592C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x8859BC", Offset = "0x8859BC", VA = "0x8859BC")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x885A4C", Offset = "0x885A4C", VA = "0x885A4C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x885ACC", Offset = "0x885ACC", VA = "0x885ACC")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x885BE8", Offset = "0x885BE8", VA = "0x885BE8")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x885B58", Offset = "0x885B58", VA = "0x885B58")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x885E08", Offset = "0x885E08", VA = "0x885E08")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x885F78", Offset = "0x885F78", VA = "0x885F78")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000964")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x885FF8", Offset = "0x885FF8", VA = "0x885FF8")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x8862A0", Offset = "0x8862A0", VA = "0x8862A0")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x886320", Offset = "0x886320", VA = "0x886320")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x886490", Offset = "0x886490", VA = "0x886490")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x886510", Offset = "0x886510", VA = "0x886510")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x886680", Offset = "0x886680", VA = "0x886680")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x886700", Offset = "0x886700", VA = "0x886700")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x886870", Offset = "0x886870", VA = "0x886870")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x8868F0", Offset = "0x8868F0", VA = "0x8868F0")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x886A60", Offset = "0x886A60", VA = "0x886A60")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600096F")]
		[Address(RVA = "0x886AE0", Offset = "0x886AE0", VA = "0x886AE0")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x886B60", Offset = "0x886B60", VA = "0x886B60")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000971")]
		[Address(RVA = "0x886BF8", Offset = "0x886BF8", VA = "0x886BF8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x886C78", Offset = "0x886C78", VA = "0x886C78")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x886E50", Offset = "0x886E50", VA = "0x886E50")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x886FA8", Offset = "0x886FA8", VA = "0x886FA8")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x886DD0", Offset = "0x886DD0", VA = "0x886DD0")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x887028", Offset = "0x887028", VA = "0x887028")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x8870A8", Offset = "0x8870A8", VA = "0x8870A8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x887138", Offset = "0x887138", VA = "0x887138")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x8871B8", Offset = "0x8871B8", VA = "0x8871B8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x887248", Offset = "0x887248", VA = "0x887248")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x8872C8", Offset = "0x8872C8", VA = "0x8872C8")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x887348", Offset = "0x887348", VA = "0x887348")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600097D")]
		[Address(RVA = "0x8875D4", Offset = "0x8875D4", VA = "0x8875D4")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x887664", Offset = "0x887664", VA = "0x887664")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600097F")]
		[Address(RVA = "0x887894", Offset = "0x887894", VA = "0x887894")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x88792C", Offset = "0x88792C", VA = "0x88792C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x887A7C", Offset = "0x887A7C", VA = "0x887A7C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000982")]
		[Address(RVA = "0x887AFC", Offset = "0x887AFC", VA = "0x887AFC")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x887B7C", Offset = "0x887B7C", VA = "0x887B7C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000984")]
		[Address(RVA = "0x887CD0", Offset = "0x887CD0", VA = "0x887CD0")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x887D50", Offset = "0x887D50", VA = "0x887D50")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x887EA4", Offset = "0x887EA4", VA = "0x887EA4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x887F24", Offset = "0x887F24", VA = "0x887F24")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x887FB4", Offset = "0x887FB4", VA = "0x887FB4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x888044", Offset = "0x888044", VA = "0x888044")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x8880D4", Offset = "0x8880D4", VA = "0x8880D4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x888154", Offset = "0x888154", VA = "0x888154")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x8881DC", Offset = "0x8881DC", VA = "0x8881DC")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098D")]
		[Address(RVA = "0x888264", Offset = "0x888264", VA = "0x888264")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x8882E4", Offset = "0x8882E4", VA = "0x8882E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x888364", Offset = "0x888364", VA = "0x888364")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x888418", Offset = "0x888418", VA = "0x888418")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x8884A8", Offset = "0x8884A8", VA = "0x8884A8")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x888538", Offset = "0x888538", VA = "0x888538")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x8885B8", Offset = "0x8885B8", VA = "0x8885B8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000994")]
		[Address(RVA = "0x888638", Offset = "0x888638", VA = "0x888638")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x8886B8", Offset = "0x8886B8", VA = "0x8886B8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x888750", Offset = "0x888750", VA = "0x888750")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x8887E0", Offset = "0x8887E0", VA = "0x8887E0")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x888870", Offset = "0x888870", VA = "0x888870")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x888900", Offset = "0x888900", VA = "0x888900")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x888998", Offset = "0x888998", VA = "0x888998")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x888A30", Offset = "0x888A30", VA = "0x888A30")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600099C")]
		[Address(RVA = "0x888AB0", Offset = "0x888AB0", VA = "0x888AB0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x888B30", Offset = "0x888B30", VA = "0x888B30")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x888C84", Offset = "0x888C84", VA = "0x888C84")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x888D04", Offset = "0x888D04", VA = "0x888D04")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x888E58", Offset = "0x888E58", VA = "0x888E58")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x888ED8", Offset = "0x888ED8", VA = "0x888ED8")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x889014", Offset = "0x889014", VA = "0x889014")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x889094", Offset = "0x889094", VA = "0x889094")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x889268", Offset = "0x889268", VA = "0x889268")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x889548", Offset = "0x889548", VA = "0x889548")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x8891E8", Offset = "0x8891E8", VA = "0x8891E8")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x8895D8", Offset = "0x8895D8", VA = "0x8895D8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x889658", Offset = "0x889658", VA = "0x889658")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x8896E8", Offset = "0x8896E8", VA = "0x8896E8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x889778", Offset = "0x889778", VA = "0x889778")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x889808", Offset = "0x889808", VA = "0x889808")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x8898A8", Offset = "0x8898A8", VA = "0x8898A8")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x889948", Offset = "0x889948", VA = "0x889948")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x8899E8", Offset = "0x8899E8", VA = "0x8899E8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x889A68", Offset = "0x889A68", VA = "0x889A68")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x889AE8", Offset = "0x889AE8", VA = "0x889AE8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x889B68", Offset = "0x889B68", VA = "0x889B68")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x889BE8", Offset = "0x889BE8", VA = "0x889BE8")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x889C68", Offset = "0x889C68", VA = "0x889C68")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x889D90", Offset = "0x889D90", VA = "0x889D90")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x889E28", Offset = "0x889E28", VA = "0x889E28")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x889EA8", Offset = "0x889EA8", VA = "0x889EA8")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x889F08", Offset = "0x889F08", VA = "0x889F08")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x88A050", Offset = "0x88A050", VA = "0x88A050")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x88A0E0", Offset = "0x88A0E0", VA = "0x88A0E0")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x88A238", Offset = "0x88A238", VA = "0x88A238")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x88A2C8", Offset = "0x88A2C8", VA = "0x88A2C8")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x88A368", Offset = "0x88A368", VA = "0x88A368")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x88A738", Offset = "0x88A738", VA = "0x88A738")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x88A7B8", Offset = "0x88A7B8", VA = "0x88A7B8")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x88A850", Offset = "0x88A850", VA = "0x88A850")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x88B0B0", Offset = "0x88B0B0", VA = "0x88B0B0")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x88B130", Offset = "0x88B130", VA = "0x88B130")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8844E0", Offset = "0x8844E0", VA = "0x8844E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x653A6C", Offset = "0x653A6C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x88B1C8", Offset = "0x88B1C8", VA = "0x88B1C8")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x88B24C", Offset = "0x88B24C", VA = "0x88B24C")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x88B2CC", Offset = "0x88B2CC", VA = "0x88B2CC")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x88B34C", Offset = "0x88B34C", VA = "0x88B34C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x88B3CC", Offset = "0x88B3CC", VA = "0x88B3CC")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x88BD90", Offset = "0x88BD90", VA = "0x88BD90")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x88BE10", Offset = "0x88BE10", VA = "0x88BE10")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x88C24C", Offset = "0x88C24C", VA = "0x88C24C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x88C1B4", Offset = "0x88C1B4", VA = "0x88C1B4")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x88C2C0", Offset = "0x88C2C0", VA = "0x88C2C0")]
		public CAPI()
		{
		}
	}
}
namespace VRKeys
{
	[Token(Token = "0x20001F6")]
	public class BackspaceKey : Key
	{
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xC24608", Offset = "0xC24608", VA = "0xC24608", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xC24624", Offset = "0xC24624", VA = "0xC24624", Slot = "8")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xC24654", Offset = "0xC24654", VA = "0xC24654")]
		public BackspaceKey()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class CancelKey : Key
	{
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x88D12C", Offset = "0x88D12C", VA = "0x88D12C", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x88D148", Offset = "0x88D148", VA = "0x88D148", Slot = "8")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x88D178", Offset = "0x88D178", VA = "0x88D178")]
		public CancelKey()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class ClearKey : Key
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x892A30", Offset = "0x892A30", VA = "0x892A30", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x892A88", Offset = "0x892A88", VA = "0x892A88", Slot = "8")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x892AB8", Offset = "0x892AB8", VA = "0x892AB8")]
		public ClearKey()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class Controller : MonoBehaviour
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x893DC4", Offset = "0x893DC4", VA = "0x893DC4")]
		public Controller()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class EnterKey : Key
	{
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xAAB2D8", Offset = "0xAAB2D8", VA = "0xAAB2D8", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xAAB2F4", Offset = "0xAAB2F4", VA = "0xAAB2F4", Slot = "8")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xAAB324", Offset = "0xAAB324", VA = "0xAAB324")]
		public EnterKey()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class DemoScene : MonoBehaviour
	{
		[Token(Token = "0x20001FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6437A8", Offset = "0x6437A8")]
		private sealed class <SubmitEmail>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoScene <>4__this;

			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string email;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009ED")]
				[Address(RVA = "0x8CB910", Offset = "0x8CB910", VA = "0x8CB910", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009EF")]
				[Address(RVA = "0x8CB958", Offset = "0x8CB958", VA = "0x8CB958", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x8CB734", Offset = "0x8CB734", VA = "0x8CB734")]
			[DebuggerHidden]
			public <SubmitEmail>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x8CB760", Offset = "0x8CB760", VA = "0x8CB760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x8CB764", Offset = "0x8CB764", VA = "0x8CB764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x8CB918", Offset = "0x8CB918", VA = "0x8CB918", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Keyboard keyboard;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Regex emailValidator;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x89738C", Offset = "0x89738C", VA = "0x89738C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x89761C", Offset = "0x89761C", VA = "0x89761C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x8977AC", Offset = "0x8977AC", VA = "0x8977AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x89787C", Offset = "0x89787C", VA = "0x89787C")]
		public void HandleUpdate(string text)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x897898", Offset = "0x897898", VA = "0x897898")]
		public void HandleSubmit(string text)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x897A0C", Offset = "0x897A0C", VA = "0x897A0C")]
		public void HandleCancel()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x897978", Offset = "0x897978", VA = "0x897978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653ACC", Offset = "0x653ACC")]
		private IEnumerator SubmitEmail(string email)
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x89795C", Offset = "0x89795C", VA = "0x89795C")]
		private bool ValidateEmail(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x897A80", Offset = "0x897A80", VA = "0x897A80")]
		public DemoScene()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class Key : MonoBehaviour
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Keyboard keyboard;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro label;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 defaultPosition;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pressedPosition;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 pressDirection;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float pressMagnitude;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool autoInit;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isPressing;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool disabled;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator _ActivateFor;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEnumerator _Press;

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x13B7370", Offset = "0x13B7370", VA = "0x13B7370")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x13B7404", Offset = "0x13B7404", VA = "0x13B7404")]
		public void Init(Vector3 defaultPos)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x13B7474", Offset = "0x13B7474", VA = "0x13B7474")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x13B74C0", Offset = "0x13B74C0", VA = "0x13B74C0", Slot = "4")]
		protected virtual void OnEnableExtras()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x13B74C4", Offset = "0x13B74C4", VA = "0x13B74C4", Slot = "5")]
		public virtual void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x13B74C8", Offset = "0x13B74C8", VA = "0x13B74C8", Slot = "6")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x13B74D4", Offset = "0x13B74D4", VA = "0x13B74D4", Slot = "7")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x13B74DC", Offset = "0x13B74DC", VA = "0x13B74DC", Slot = "8")]
		public virtual void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x13B74E0", Offset = "0x13B74E0", VA = "0x13B74E0")]
		public Key()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class Keyboard : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001FF")]
		public class KeyboardUpdateEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x13D474C", Offset = "0x13D474C", VA = "0x13D474C")]
			public KeyboardUpdateEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000200")]
		public class KeyboardSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x13D4700", Offset = "0x13D4700", VA = "0x13D4700")]
			public KeyboardSubmitEvent()
			{
			}
		}

		[Token(Token = "0x2000201")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6437B8", Offset = "0x6437B8")]
		private sealed class <Start>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A1E")]
				[Address(RVA = "0x13D46B0", Offset = "0x13D46B0", VA = "0x13D46B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A20")]
				[Address(RVA = "0x13D46F8", Offset = "0x13D46F8", VA = "0x13D46F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x13D4590", Offset = "0x13D4590", VA = "0x13D4590")]
			[DebuggerHidden]
			public <Start>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x13D45BC", Offset = "0x13D45BC", VA = "0x13D45BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x13D45C0", Offset = "0x13D45C0", VA = "0x13D45C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x13D46B8", Offset = "0x13D46B8", VA = "0x13D46B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000202")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6437C8", Offset = "0x6437C8")]
		private sealed class <EnableWhenInitialized>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x17000126")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A24")]
				[Address(RVA = "0x13D3510", Offset = "0x13D3510", VA = "0x13D3510", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000127")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A26")]
				[Address(RVA = "0x13D3558", Offset = "0x13D3558", VA = "0x13D3558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x13D33CC", Offset = "0x13D33CC", VA = "0x13D33CC")]
			[DebuggerHidden]
			public <EnableWhenInitialized>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x13D33F8", Offset = "0x13D33F8", VA = "0x13D33F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x13D33FC", Offset = "0x13D33FC", VA = "0x13D33FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x13D3518", Offset = "0x13D3518", VA = "0x13D3518", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000203")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6437D8", Offset = "0x6437D8")]
		private sealed class <DelayToggleShift>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A2A")]
				[Address(RVA = "0x13D3008", Offset = "0x13D3008", VA = "0x13D3008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A2C")]
				[Address(RVA = "0x13D3050", Offset = "0x13D3050", VA = "0x13D3050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x13D2F24", Offset = "0x13D2F24", VA = "0x13D2F24")]
			[DebuggerHidden]
			public <DelayToggleShift>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x13D2F50", Offset = "0x13D2F50", VA = "0x13D2F50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x13D2F54", Offset = "0x13D2F54", VA = "0x13D2F54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x13D3010", Offset = "0x13D3010", VA = "0x13D3010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6437E8", Offset = "0x6437E8")]
		private sealed class <DoSetLanguage>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyboardLayout lang;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A30")]
				[Address(RVA = "0x13D31B4", Offset = "0x13D31B4", VA = "0x13D31B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A32")]
				[Address(RVA = "0x13D31FC", Offset = "0x13D31FC", VA = "0x13D31FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x13D3058", Offset = "0x13D3058", VA = "0x13D3058")]
			[DebuggerHidden]
			public <DoSetLanguage>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x13D3084", Offset = "0x13D3084", VA = "0x13D3084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x13D3088", Offset = "0x13D3088", VA = "0x13D3088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x13D31BC", Offset = "0x13D31BC", VA = "0x13D31BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000205")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6437F8", Offset = "0x6437F8")]
		private sealed class <DoSetPlaceholderMessage>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string msg;

			[Token(Token = "0x1700012C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A36")]
				[Address(RVA = "0x13D337C", Offset = "0x13D337C", VA = "0x13D337C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A38")]
				[Address(RVA = "0x13D33C4", Offset = "0x13D33C4", VA = "0x13D33C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x13D3204", Offset = "0x13D3204", VA = "0x13D3204")]
			[DebuggerHidden]
			public <DoSetPlaceholderMessage>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x13D3230", Offset = "0x13D3230", VA = "0x13D3230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x13D3234", Offset = "0x13D3234", VA = "0x13D3234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x13D3384", Offset = "0x13D3384", VA = "0x13D3384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000206")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643808", Offset = "0x643808")]
		private sealed class <SetupKeys>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <activeState>5__2;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <keyCount>5__3;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__4;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A3C")]
				[Address(RVA = "0x13D4540", Offset = "0x13D4540", VA = "0x13D4540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A3E")]
				[Address(RVA = "0x13D4588", Offset = "0x13D4588", VA = "0x13D4588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x13D37DC", Offset = "0x13D37DC", VA = "0x13D37DC")]
			[DebuggerHidden]
			public <SetupKeys>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x13D3808", Offset = "0x13D3808", VA = "0x13D3808", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x13D380C", Offset = "0x13D380C", VA = "0x13D380C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x13D4548", Offset = "0x13D4548", VA = "0x13D4548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000207")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643818", Offset = "0x643818")]
		private sealed class <SetUpKeyInteraction>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Key k;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PInteractionSystem.PAction <action>5__2;

			[Token(Token = "0x17000130")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A42")]
				[Address(RVA = "0x13D378C", Offset = "0x13D378C", VA = "0x13D378C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000131")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A44")]
				[Address(RVA = "0x13D37D4", Offset = "0x13D37D4", VA = "0x13D37D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x13D3560", Offset = "0x13D3560", VA = "0x13D3560")]
			[DebuggerHidden]
			public <SetUpKeyInteraction>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x13D358C", Offset = "0x13D358C", VA = "0x13D358C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x13D3590", Offset = "0x13D3590", VA = "0x13D3590", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x13D3794", Offset = "0x13D3794", VA = "0x13D3794", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 positionRelativeToUser;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyboardLayout keyboardLayout;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x647284", Offset = "0x647284")]
		public TextMeshProUGUI placeholder;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string placeholderMessage;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI displayText;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject validationNotice;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI validationMessage;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject infoNotice;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI infoMessage;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject successNotice;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI successMessage;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x647298", Offset = "0x647298")]
		public Color displayTextColor;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color caretColor;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6472AC", Offset = "0x6472AC")]
		public GameObject keyPrefab;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform keysParent;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float keyWidth;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float keyHeight;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6472C0", Offset = "0x6472C0")]
		public string text;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6472D4", Offset = "0x6472D4")]
		public GameObject canvas;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject keyboardWrapper;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ShiftKey shiftKey;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Key[] extraKeys;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6472E8", Offset = "0x6472E8")]
		public bool leftPressing;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool rightPressing;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool initialized;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		public bool disabled;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6472FC", Offset = "0x6472FC")]
		public KeyboardUpdateEvent OnUpdate;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public KeyboardSubmitEvent OnSubmit;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityEvent OnCancel;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LetterKey[] keys;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool shifted;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Layout layout;

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x13B7520", Offset = "0x13B7520", VA = "0x13B7520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653B7C", Offset = "0x653B7C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x13B7598", Offset = "0x13B7598", VA = "0x13B7598")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x13B7694", Offset = "0x13B7694", VA = "0x13B7694")]
		public void Enable()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x13B77AC", Offset = "0x13B77AC", VA = "0x13B77AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653BDC", Offset = "0x653BDC")]
		private IEnumerator EnableWhenInitialized()
		{
			return null;
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x13B759C", Offset = "0x13B759C", VA = "0x13B759C")]
		public void Disable()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x13B7950", Offset = "0x13B7950", VA = "0x13B7950")]
		public void SetText(string txt)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x13B7B60", Offset = "0x13B7B60", VA = "0x13B7B60")]
		public void AddCharacter(string character)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x13B7CF0", Offset = "0x13B7CF0", VA = "0x13B7CF0")]
		public bool ToggleShift()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x13B7C78", Offset = "0x13B7C78", VA = "0x13B7C78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653C3C", Offset = "0x653C3C")]
		private IEnumerator DelayToggleShift()
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x13B7E18", Offset = "0x13B7E18", VA = "0x13B7E18")]
		public void DisableInput()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x13B7824", Offset = "0x13B7824", VA = "0x13B7824")]
		public void EnableInput()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x13B7F44", Offset = "0x13B7F44", VA = "0x13B7F44")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x13B7FE0", Offset = "0x13B7FE0", VA = "0x13B7FE0")]
		public void Submit()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x13B8038", Offset = "0x13B8038", VA = "0x13B8038")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x13B806C", Offset = "0x13B806C", VA = "0x13B806C")]
		public void SetLayout(KeyboardLayout layout)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x13B8098", Offset = "0x13B8098", VA = "0x13B8098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653C9C", Offset = "0x653C9C")]
		private IEnumerator DoSetLanguage(KeyboardLayout lang)
		{
			return null;
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x13B8120", Offset = "0x13B8120", VA = "0x13B8120")]
		public void SetPlaceholderMessage(string msg)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x13B814C", Offset = "0x13B814C", VA = "0x13B814C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653CFC", Offset = "0x653CFC")]
		private IEnumerator DoSetPlaceholderMessage(string msg)
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x13B81E0", Offset = "0x13B81E0", VA = "0x13B81E0")]
		public void ShowValidationMessage(string message)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x13B8250", Offset = "0x13B8250", VA = "0x13B8250")]
		public void ShowInfoMessage(string message)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x13B82C0", Offset = "0x13B82C0", VA = "0x13B82C0")]
		public void ShowSuccessMessage(string message)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x13B8330", Offset = "0x13B8330", VA = "0x13B8330")]
		public void HideValidationMessage()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x13B8350", Offset = "0x13B8350", VA = "0x13B8350")]
		public void HideInfoMessage()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x13B8370", Offset = "0x13B8370", VA = "0x13B8370")]
		public void HideSuccessMessage()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x13B8390", Offset = "0x13B8390", VA = "0x13B8390")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653D5C", Offset = "0x653D5C")]
		private IEnumerator SetupKeys()
		{
			return null;
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x13B8408", Offset = "0x13B8408", VA = "0x13B8408")]
		private void SetUpKeysInteraction()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x13B84DC", Offset = "0x13B84DC", VA = "0x13B84DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x653DBC", Offset = "0x653DBC")]
		private IEnumerator SetUpKeyInteraction(Key k)
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x13B79D8", Offset = "0x13B79D8", VA = "0x13B79D8")]
		private void UpdateDisplayText()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x13B7AAC", Offset = "0x13B7AAC", VA = "0x13B7AAC")]
		private void PlaceholderVisibility()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x13B8554", Offset = "0x13B8554", VA = "0x13B8554")]
		public Keyboard()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x13B86C8", Offset = "0x13B86C8", VA = "0x13B86C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x653E1C", Offset = "0x653E1C")]
		private bool <EnableWhenInitialized>b__37_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x13B86D0", Offset = "0x13B86D0", VA = "0x13B86D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x653E2C", Offset = "0x653E2C")]
		private bool <DoSetPlaceholderMessage>b__51_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000208")]
	public class Layout
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string placeholderMessage;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string spaceButtonLabel;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string enterButtonLabel;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string cancelButtonLabel;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shiftButtonLabel;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string backspaceButtonLabel;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string clearButtonLabel;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] row1Keys;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] row1Shift;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string[] row2Keys;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string[] row2Shift;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] row3Keys;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string[] row3Shift;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] row4Keys;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string[] row4Shift;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float row1Offset;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float row2Offset;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float row3Offset;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float row4Offset;

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x13B9640", Offset = "0x13B9640", VA = "0x13B9640")]
		public int TotalKeys()
		{
			return default(int);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x13B9690", Offset = "0x13B9690", VA = "0x13B9690")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public enum KeyboardLayout
	{
		[Token(Token = "0x4000AB5")]
		Qwerty,
		[Token(Token = "0x4000AB6")]
		French,
		[Token(Token = "0x4000AB7")]
		Dvorak
	}
	[Token(Token = "0x200020A")]
	public static class LayoutList
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x13BB694", Offset = "0x13BB694", VA = "0x13BB694")]
		public static Layout GetLayout(KeyboardLayout layout)
		{
			return null;
		}
	}
	[Token(Token = "0x200020B")]
	public class LetterKey : Key
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshPro shiftedLabel;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string character;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string shiftedChar;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _shifted;

		[Token(Token = "0x17000132")]
		public bool shifted
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x13BB8EC", Offset = "0x13BB8EC", VA = "0x13BB8EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x13B7D98", Offset = "0x13B7D98", VA = "0x13B7D98")]
			set
			{
			}
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x13BB8F4", Offset = "0x13BB8F4", VA = "0x13BB8F4")]
		public string GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x13BB910", Offset = "0x13BB910", VA = "0x13BB910", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x13BB944", Offset = "0x13BB944", VA = "0x13BB944")]
		public LetterKey()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class Placement : MonoBehaviour
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x136FB04", Offset = "0x136FB04", VA = "0x136FB04")]
		public Placement()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class ShiftKey : Key
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool shifted;

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1381A1C", Offset = "0x1381A1C", VA = "0x1381A1C", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x1381A38", Offset = "0x1381A38", VA = "0x1381A38", Slot = "7")]
		public override void Enable()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1381A40", Offset = "0x1381A40", VA = "0x1381A40")]
		public void Toggle(bool shift)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1381A4C", Offset = "0x1381A4C", VA = "0x1381A4C", Slot = "8")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1381A7C", Offset = "0x1381A7C", VA = "0x1381A7C")]
		public ShiftKey()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class SpaceKey : Key
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1389D38", Offset = "0x1389D38", VA = "0x1389D38", Slot = "5")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1389D90", Offset = "0x1389D90", VA = "0x1389D90", Slot = "8")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1389DC0", Offset = "0x1389DC0", VA = "0x1389DC0")]
		public SpaceKey()
		{
		}
	}
}
namespace VRKeys.Layouts
{
	[Token(Token = "0x200020F")]
	public class Dvorak : Layout
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xAA8DA4", Offset = "0xAA8DA4", VA = "0xAA8DA4")]
		public Dvorak()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class French : Layout
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xAB79F8", Offset = "0xAB79F8", VA = "0xAB79F8")]
		public French()
		{
		}
	}
}
namespace Fiftytwo
{
	[Token(Token = "0x2000211")]
	[PublicAPI]
	public class MailChimpSubscriber : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000212")]
		public class MailChimpEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x13D617C", Offset = "0x13D617C", VA = "0x13D617C")]
			public MailChimpEvent()
			{
			}
		}

		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x643838", Offset = "0x643838")]
		private sealed class <SendToMailChimp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MailChimpSubscriber <>4__this;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string email;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000133")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A62")]
				[Address(RVA = "0x13D612C", Offset = "0x13D612C", VA = "0x13D612C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000134")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A64")]
				[Address(RVA = "0x13D6174", Offset = "0x13D6174", VA = "0x13D6174", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x13D5E38", Offset = "0x13D5E38", VA = "0x13D5E38")]
			[DebuggerHidden]
			public <SendToMailChimp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x13D5E64", Offset = "0x13D5E64", VA = "0x13D5E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x13D5E68", Offset = "0x13D5E68", VA = "0x13D5E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x13D6134", Offset = "0x13D6134", VA = "0x13D6134", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ABD")]
		private const string UrlFormat = "https://{0}.api.mailchimp.com/3.0/lists/{1}/members";

		[Token(Token = "0x4000ABE")]
		private const string JsonFormat = "{{\"email_address\":\"{0}\", \"status\":\"subscribed\"}}";

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MailChimpEvent SubscribeSuccess;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MailChimpEvent SubscribeError;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _apiKey;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _listId;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x13BEFFC", Offset = "0x13BEFFC", VA = "0x13BEFFC")]
		public void Subscribe()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x13BF0E8", Offset = "0x13BF0E8", VA = "0x13BF0E8")]
		public void Subscribe(string email)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x13BF278", Offset = "0x13BF278", VA = "0x13BF278")]
		private string BuildUrl()
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x13BF320", Offset = "0x13BF320", VA = "0x13BF320")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65406C", Offset = "0x65406C")]
		private IEnumerator SendToMailChimp(string url, string email)
		{
			return null;
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x13BF3C8", Offset = "0x13BF3C8", VA = "0x13BF3C8")]
		public bool IsValidEmail(string email)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x13BF4B8", Offset = "0x13BF4B8", VA = "0x13BF4B8")]
		public MailChimpSubscriber()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643848", Offset = "0x643848")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643848", Offset = "0x643848")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000215")]
		public enum Mode
		{
			[Token(Token = "0x4000AD8")]
			AnimationClips,
			[Token(Token = "0x4000AD9")]
			AnimationStates,
			[Token(Token = "0x4000ADA")]
			PlayableDirector,
			[Token(Token = "0x4000ADB")]
			Realtime
		}

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647330", Offset = "0x647330")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647330", Offset = "0x647330")]
		public int frameRate;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647388", Offset = "0x647388")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647388", Offset = "0x647388")]
		public float keyReductionError;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6473E0", Offset = "0x6473E0")]
		public Mode mode;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647418", Offset = "0x647418")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647450", Offset = "0x647450")]
		public string[] animationStates;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647488", Offset = "0x647488")]
		public bool loop;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6474C0", Offset = "0x6474C0")]
		public string saveToFolder;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6474F8", Offset = "0x6474F8")]
		public string appendName;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647530", Offset = "0x647530")]
		public string saveName;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x647568", Offset = "0x647568")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x647578", Offset = "0x647578")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		public Animator animator;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6475F8", Offset = "0x6475F8")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000135")]
		public bool isBaking
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xC2477C", Offset = "0xC2477C", VA = "0xC2477C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6541FC", Offset = "0x6541FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xC24784", Offset = "0xC24784", VA = "0xC24784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65420C", Offset = "0x65420C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float bakingProgress
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xC24790", Offset = "0xC24790", VA = "0xC24790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65421C", Offset = "0x65421C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xC24798", Offset = "0xC24798", VA = "0xC24798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65422C", Offset = "0x65422C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000137")]
		protected float clipLength
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xC247A0", Offset = "0xC247A0", VA = "0xC247A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65423C", Offset = "0x65423C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xC247A8", Offset = "0xC247A8", VA = "0xC247A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65424C", Offset = "0x65424C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xC2465C", Offset = "0xC2465C", VA = "0xC2465C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65411C", Offset = "0x65411C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xC246A4", Offset = "0xC246A4", VA = "0xC246A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654154", Offset = "0x654154")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xC246EC", Offset = "0xC246EC", VA = "0xC246EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65418C", Offset = "0x65418C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xC24734", Offset = "0xC24734", VA = "0xC24734")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6541C4", Offset = "0x6541C4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A6D")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x6000A6E")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x6000A6F")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x6000A70")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x6000A71")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xC247B0", Offset = "0xC247B0", VA = "0xC247B0")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xC247B4", Offset = "0xC247B4", VA = "0xC247B4")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xC247B8", Offset = "0xC247B8", VA = "0xC247B8")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xC247BC", Offset = "0xC247BC", VA = "0xC247BC")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647608", Offset = "0x647608")]
		public bool markAsLegacy;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647640", Offset = "0x647640")]
		public Transform root;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647678", Offset = "0x647678")]
		public Transform rootNode;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6476B0", Offset = "0x6476B0")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6476E8", Offset = "0x6476E8")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xABB6D8", Offset = "0xABB6D8", VA = "0xABB6D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xABBADC", Offset = "0xABBADC", VA = "0xABBADC", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xABBAE4", Offset = "0xABBAE4", VA = "0xABBAE4", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xABBBF4", Offset = "0xABBBF4", VA = "0xABBBF4", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xABBC70", Offset = "0xABBC70", VA = "0xABBC70", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xABBCEC", Offset = "0xABBCEC", VA = "0xABBCEC", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xABB934", Offset = "0xABB934", VA = "0xABB934")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xABBA08", Offset = "0xABBA08", VA = "0xABBA08")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xABBD68", Offset = "0xABBD68", VA = "0xABBD68")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class TQ
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x138C874", Offset = "0x138C874", VA = "0x138C874")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class AvatarUtility
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xC239DC", Offset = "0xC239DC", VA = "0xC239DC")]
		public static Quaternion GetPostRotation(UnityEngine.Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xC23C44", Offset = "0xC23C44", VA = "0xC23C44")]
		public static TQ GetIKGoalTQ(UnityEngine.Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xC23C24", Offset = "0xC23C24", VA = "0xC23C24")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xC24208", Offset = "0xC24208", VA = "0xC24208")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public static class BakerUtilities
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xC25A8C", Offset = "0xC25A8C", VA = "0xC25A8C")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xC273BC", Offset = "0xC273BC", VA = "0xC273BC")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xC254E0", Offset = "0xC254E0", VA = "0xC254E0")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xC25AD4", Offset = "0xC25AD4", VA = "0xC25AD4")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xC25010", Offset = "0xC25010", VA = "0xC25010")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xC248D8", Offset = "0xC248D8", VA = "0xC248D8")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xC24BEC", Offset = "0xC24BEC", VA = "0xC24BEC")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC24A90", Offset = "0xC24A90", VA = "0xC24A90")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC24DC8", Offset = "0xC24DC8", VA = "0xC24DC8")]
		public void SetIKKeyframes(float time, UnityEngine.Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xC25274", Offset = "0xC25274", VA = "0xC25274")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xC25370", Offset = "0xC25370", VA = "0xC25370")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xC2546C", Offset = "0xC2546C", VA = "0xC2546C")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xC253E4", Offset = "0xC253E4", VA = "0xC253E4")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xC256D8", Offset = "0xC256D8", VA = "0xC256D8")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC2578C", Offset = "0xC2578C", VA = "0xC2578C")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class BakerMuscle
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC25AD8", Offset = "0xC25AD8", VA = "0xC25AD8")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC25B54", Offset = "0xC25B54", VA = "0xC25B54")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xC265F0", Offset = "0xC265F0", VA = "0xC265F0")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xC266A4", Offset = "0xC266A4", VA = "0xC266A4")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xC2658C", Offset = "0xC2658C", VA = "0xC2658C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xC2679C", Offset = "0xC2679C", VA = "0xC2679C")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xC267E4", Offset = "0xC267E4", VA = "0xC267E4")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class BakerTransform
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xC267EC", Offset = "0xC267EC", VA = "0xC267EC")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xC269DC", Offset = "0xC269DC", VA = "0xC269DC")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xC269F0", Offset = "0xC269F0", VA = "0xC269F0")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xC26CDC", Offset = "0xC26CDC", VA = "0xC26CDC")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xC26898", Offset = "0xC26898", VA = "0xC26898")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xC26F90", Offset = "0xC26F90", VA = "0xC26F90")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xC27004", Offset = "0xC27004", VA = "0xC27004")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xC271B8", Offset = "0xC271B8", VA = "0xC271B8")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647720", Offset = "0x647720")]
		public bool bakeHandIK;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647758", Offset = "0x647758")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647758", Offset = "0x647758")]
		public float IKKeyReductionError;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6477B0", Offset = "0x6477B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6477B0", Offset = "0x6477B0")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xF7A504", Offset = "0xF7A504", VA = "0xF7A504")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xF7AA98", Offset = "0xF7AA98", VA = "0xF7AA98", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xF7AAB4", Offset = "0xF7AAB4", VA = "0xF7AAB4", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xF7AB90", Offset = "0xF7AB90", VA = "0xF7AB90", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xF7AC6C", Offset = "0xF7AC6C", VA = "0xF7AC6C", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xF7AE3C", Offset = "0xF7AE3C", VA = "0xF7AE3C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xF7B104", Offset = "0xF7B104", VA = "0xF7B104")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xF7B1E0", Offset = "0xF7B1E0", VA = "0xF7B1E0")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200021F")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000B3E")]
			Update,
			[Token(Token = "0x4000B3F")]
			FixedUpdate,
			[Token(Token = "0x4000B40")]
			LateUpdate,
			[Token(Token = "0x4000B41")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647804", Offset = "0x647804")]
		public bool smoothFollow;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64783C", Offset = "0x64783C")]
		public float rotationSensitivity;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x647874", Offset = "0x647874")]
		public float distance;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6478AC", Offset = "0x6478AC")]
		public LayerMask blockingLayers;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6478E4", Offset = "0x6478E4")]
		public float blockedOffset;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6478FC", Offset = "0x6478FC")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64790C", Offset = "0x64790C")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64791C", Offset = "0x64791C")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000138")]
		public float x
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x88C530", Offset = "0x88C530", VA = "0x88C530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65425C", Offset = "0x65425C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x88C538", Offset = "0x88C538", VA = "0x88C538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65426C", Offset = "0x65426C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float y
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x88C540", Offset = "0x88C540", VA = "0x88C540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65427C", Offset = "0x65427C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x88C548", Offset = "0x88C548", VA = "0x88C548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65428C", Offset = "0x65428C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float distanceTarget
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x88C550", Offset = "0x88C550", VA = "0x88C550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65429C", Offset = "0x65429C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x88C558", Offset = "0x88C558", VA = "0x88C558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6542AC", Offset = "0x6542AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		private float zoomAdd
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x88CDEC", Offset = "0x88CDEC", VA = "0x88CDEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x88C560", Offset = "0x88C560", VA = "0x88C560")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x88C59C", Offset = "0x88C59C", VA = "0x88C59C")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x88C5A4", Offset = "0x88C5A4", VA = "0x88C5A4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x88C6B4", Offset = "0x88C6B4", VA = "0x88C6B4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x88C710", Offset = "0x88C710", VA = "0x88C710", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x88C778", Offset = "0x88C778", VA = "0x88C778", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x88C7DC", Offset = "0x88C7DC", VA = "0x88C7DC")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x88C6E8", Offset = "0x88C6E8", VA = "0x88C6E8")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x88C95C", Offset = "0x88C95C", VA = "0x88C95C")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x88CDBC", Offset = "0x88CDBC", VA = "0x88CDBC")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x88CE5C", Offset = "0x88CE5C", VA = "0x88CE5C")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x88CF00", Offset = "0x88CF00", VA = "0x88CF00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x88CF38", Offset = "0x88CF38", VA = "0x88CF38")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x88D0E0", Offset = "0x88D0E0", VA = "0x88D0E0")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x88D110", Offset = "0x88D110", VA = "0x88D110")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public enum Axis
	{
		[Token(Token = "0x4000B48")]
		X,
		[Token(Token = "0x4000B49")]
		Y,
		[Token(Token = "0x4000B4A")]
		Z
	}
	[Token(Token = "0x2000222")]
	public class AxisTools
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xC24210", Offset = "0xC24210", VA = "0xC24210")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xC24234", Offset = "0xC24234", VA = "0xC24234")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xC2426C", Offset = "0xC2426C", VA = "0xC2426C")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xC2435C", Offset = "0xC2435C", VA = "0xC2435C")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xC24304", Offset = "0xC24304", VA = "0xC24304")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xC243F4", Offset = "0xC243F4", VA = "0xC243F4")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xC2443C", Offset = "0xC2443C", VA = "0xC2443C")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xC24600", Offset = "0xC24600", VA = "0xC24600")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000224")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x8C9DE8", Offset = "0x8C9DE8", VA = "0x8C9DE8")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x1700013C")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xC2ADF4", Offset = "0xC2ADF4", VA = "0xC2ADF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xC2B064", Offset = "0xC2B064", VA = "0xC2B064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xC2AD74", Offset = "0xC2AD74", VA = "0xC2AD74")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000226")]
		public enum BoneType
		{
			[Token(Token = "0x4000B65")]
			Unassigned,
			[Token(Token = "0x4000B66")]
			Spine,
			[Token(Token = "0x4000B67")]
			Head,
			[Token(Token = "0x4000B68")]
			Arm,
			[Token(Token = "0x4000B69")]
			Leg,
			[Token(Token = "0x4000B6A")]
			Tail,
			[Token(Token = "0x4000B6B")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x2000227")]
		public enum BoneSide
		{
			[Token(Token = "0x4000B6D")]
			Center,
			[Token(Token = "0x4000B6E")]
			Left,
			[Token(Token = "0x4000B6F")]
			Right
		}

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xC2B2D4", Offset = "0xC2B2D4", VA = "0xC2B2D4")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xC2B5F8", Offset = "0xC2B5F8", VA = "0xC2B5F8")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xC2B86C", Offset = "0xC2B86C", VA = "0xC2B86C")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xC2B8EC", Offset = "0xC2B8EC", VA = "0xC2B8EC")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xC2B994", Offset = "0xC2B994", VA = "0xC2B994")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xC2B4AC", Offset = "0xC2B4AC", VA = "0xC2B4AC")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xC2B7D0", Offset = "0xC2B7D0", VA = "0xC2B7D0")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xC2C1C4", Offset = "0xC2C1C4", VA = "0xC2C1C4")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xC2BFCC", Offset = "0xC2BFCC", VA = "0xC2BFCC")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xC2C0C8", Offset = "0xC2C0C8", VA = "0xC2C0C8")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xC2BBAC", Offset = "0xC2BBAC", VA = "0xC2BBAC")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xC2BC5C", Offset = "0xC2BC5C", VA = "0xC2BC5C")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xC2BD0C", Offset = "0xC2BD0C", VA = "0xC2BD0C")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xC2BDBC", Offset = "0xC2BDBC", VA = "0xC2BDBC")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xC2BE6C", Offset = "0xC2BE6C", VA = "0xC2BE6C")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xC2BF1C", Offset = "0xC2BF1C", VA = "0xC2BF1C")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xC2C3CC", Offset = "0xC2C3CC", VA = "0xC2C3CC")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xC2BAC4", Offset = "0xC2BAC4", VA = "0xC2BAC4")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xC2C33C", Offset = "0xC2C33C", VA = "0xC2C33C")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xC2C438", Offset = "0xC2C438", VA = "0xC2C438")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xC2C50C", Offset = "0xC2C50C", VA = "0xC2C50C")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xC2C2C4", Offset = "0xC2C2C4", VA = "0xC2C2C4")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xC2C250", Offset = "0xC2C250", VA = "0xC2C250")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000228")]
	public class BipedReferences
	{
		[Token(Token = "0x2000229")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x17000140")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000AFF")]
				[Address(RVA = "0x8C9E74", Offset = "0x8C9E74", VA = "0x8C9E74")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x8C9E60", Offset = "0x8C9E60", VA = "0x8C9E60")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x1700013E")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xC2ED74", Offset = "0xC2ED74", VA = "0xC2ED74", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		public bool isEmpty
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xC2F15C", Offset = "0xC2F15C", VA = "0xC2F15C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xC2F16C", Offset = "0xC2F16C", VA = "0xC2F16C", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xC2F594", Offset = "0xC2F594", VA = "0xC2F594", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xC2F9C8", Offset = "0xC2F9C8", VA = "0xC2F9C8")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xC30098", Offset = "0xC30098", VA = "0xC30098")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xC2FBF4", Offset = "0xC2FBF4", VA = "0xC2FBF4")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xC2A048", Offset = "0xC2A048", VA = "0xC2A048")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xC3091C", Offset = "0xC3091C", VA = "0xC3091C")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xC30ED8", Offset = "0xC30ED8", VA = "0xC30ED8")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xC30CB8", Offset = "0xC30CB8", VA = "0xC30CB8")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xC30B34", Offset = "0xC30B34", VA = "0xC30B34")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xC309BC", Offset = "0xC309BC", VA = "0xC309BC")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xC30DC4", Offset = "0xC30DC4", VA = "0xC30DC4")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xC30FD0", Offset = "0xC30FD0", VA = "0xC30FD0")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xC31BB8", Offset = "0xC31BB8", VA = "0xC31BB8")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xC31628", Offset = "0xC31628", VA = "0xC31628")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xC31EB4", Offset = "0xC31EB4", VA = "0xC31EB4")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xC319A0", Offset = "0xC319A0", VA = "0xC319A0")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xC31EBC", Offset = "0xC31EBC", VA = "0xC31EBC")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xC31EC4", Offset = "0xC31EC4", VA = "0xC31EC4")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xC32098", Offset = "0xC32098", VA = "0xC32098")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xC32260", Offset = "0xC32260", VA = "0xC32260")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xC2A4C8", Offset = "0xC2A4C8", VA = "0xC2A4C8")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x893514", Offset = "0x893514", VA = "0x893514")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x897210", Offset = "0x897210", VA = "0x897210")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x897358", Offset = "0x897358", VA = "0x897358")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class Hierarchy
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xF77E48", Offset = "0xF77E48", VA = "0xF77E48")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xF78034", Offset = "0xF78034", VA = "0xF78034")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xF77EE0", Offset = "0xF77EE0", VA = "0xF77EE0")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xF78154", Offset = "0xF78154", VA = "0xF78154")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xF78280", Offset = "0xF78280", VA = "0xF78280")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xF784D4", Offset = "0xF784D4", VA = "0xF784D4")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xF785DC", Offset = "0xF785DC", VA = "0xF785DC")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xF78750", Offset = "0xF78750", VA = "0xF78750")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xF78B2C", Offset = "0xF78B2C", VA = "0xF78B2C")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xF788F0", Offset = "0xF788F0", VA = "0xF788F0")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xF78CE0", Offset = "0xF78CE0", VA = "0xF78CE0")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xF16D00", Offset = "0xF16D00", VA = "0xF16D00")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xF16D8C", Offset = "0xF16D8C", VA = "0xF16D8C")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022E")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4000B89")]
		None,
		[Token(Token = "0x4000B8A")]
		InOutCubic,
		[Token(Token = "0x4000B8B")]
		InOutQuintic,
		[Token(Token = "0x4000B8C")]
		InOutSine,
		[Token(Token = "0x4000B8D")]
		InQuintic,
		[Token(Token = "0x4000B8E")]
		InQuartic,
		[Token(Token = "0x4000B8F")]
		InCubic,
		[Token(Token = "0x4000B90")]
		InQuadratic,
		[Token(Token = "0x4000B91")]
		InElastic,
		[Token(Token = "0x4000B92")]
		InElasticSmall,
		[Token(Token = "0x4000B93")]
		InElasticBig,
		[Token(Token = "0x4000B94")]
		InSine,
		[Token(Token = "0x4000B95")]
		InBack,
		[Token(Token = "0x4000B96")]
		OutQuintic,
		[Token(Token = "0x4000B97")]
		OutQuartic,
		[Token(Token = "0x4000B98")]
		OutCubic,
		[Token(Token = "0x4000B99")]
		OutInCubic,
		[Token(Token = "0x4000B9A")]
		OutInQuartic,
		[Token(Token = "0x4000B9B")]
		OutElastic,
		[Token(Token = "0x4000B9C")]
		OutElasticSmall,
		[Token(Token = "0x4000B9D")]
		OutElasticBig,
		[Token(Token = "0x4000B9E")]
		OutSine,
		[Token(Token = "0x4000B9F")]
		OutBack,
		[Token(Token = "0x4000BA0")]
		OutBackCubic,
		[Token(Token = "0x4000BA1")]
		OutBackQuartic,
		[Token(Token = "0x4000BA2")]
		BackInCubic,
		[Token(Token = "0x4000BA3")]
		BackInQuartic
	}
	[Token(Token = "0x200022F")]
	public class Interp
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x13B4CC8", Offset = "0x13B4CC8", VA = "0x13B4CC8")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x13B5674", Offset = "0x13B5674", VA = "0x13B5674")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x13B56E8", Offset = "0x13B56E8", VA = "0x13B56E8")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x13B50DC", Offset = "0x13B50DC", VA = "0x13B50DC")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x13B50E8", Offset = "0x13B50E8", VA = "0x13B50E8")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x13B510C", Offset = "0x13B510C", VA = "0x13B510C")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x13B5148", Offset = "0x13B5148", VA = "0x13B5148")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x13B5160", Offset = "0x13B5160", VA = "0x13B5160")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x13B5174", Offset = "0x13B5174", VA = "0x13B5174")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x13B5188", Offset = "0x13B5188", VA = "0x13B5188")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x13B5198", Offset = "0x13B5198", VA = "0x13B5198")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x13B51E0", Offset = "0x13B51E0", VA = "0x13B51E0")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x13B5218", Offset = "0x13B5218", VA = "0x13B5218")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x13B5240", Offset = "0x13B5240", VA = "0x13B5240")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x13B5774", Offset = "0x13B5774", VA = "0x13B5774")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x13B5274", Offset = "0x13B5274", VA = "0x13B5274")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x13B529C", Offset = "0x13B529C", VA = "0x13B529C")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x13B52CC", Offset = "0x13B52CC", VA = "0x13B52CC")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x13B5300", Offset = "0x13B5300", VA = "0x13B5300")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x13B5344", Offset = "0x13B5344", VA = "0x13B5344")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x13B53A8", Offset = "0x13B53A8", VA = "0x13B53A8")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x13B540C", Offset = "0x13B540C", VA = "0x13B540C")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x13B5460", Offset = "0x13B5460", VA = "0x13B5460")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x13B54B4", Offset = "0x13B54B4", VA = "0x13B54B4")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x13B54F0", Offset = "0x13B54F0", VA = "0x13B54F0")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x13B5528", Offset = "0x13B5528", VA = "0x13B5528")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x13B57A8", Offset = "0x13B57A8", VA = "0x13B57A8")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x13B5570", Offset = "0x13B5570", VA = "0x13B5570")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x13B5604", Offset = "0x13B5604", VA = "0x13B5604")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x13B5634", Offset = "0x13B5634", VA = "0x13B5634")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x13B583C", Offset = "0x13B583C", VA = "0x13B583C")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x13B878C", Offset = "0x13B878C", VA = "0x13B878C")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x13B8818", Offset = "0x13B8818", VA = "0x13B8818")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000231")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x13B90E0", Offset = "0x13B90E0", VA = "0x13B90E0")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x13B9138", Offset = "0x13B9138", VA = "0x13B9138")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x13B9204", Offset = "0x13B9204", VA = "0x13B9204")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x13B9150", Offset = "0x13B9150", VA = "0x13B9150")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x13B921C", Offset = "0x13B921C", VA = "0x13B921C")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x13B92C0", Offset = "0x13B92C0", VA = "0x13B92C0")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x13B92EC", Offset = "0x13B92EC", VA = "0x13B92EC")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x13B933C", Offset = "0x13B933C", VA = "0x13B933C")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x13B93A8", Offset = "0x13B93A8", VA = "0x13B93A8")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x13B94BC", Offset = "0x13B94BC", VA = "0x13B94BC")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x13B95B4", Offset = "0x13B95B4", VA = "0x13B95B4")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x13B9610", Offset = "0x13B9610", VA = "0x13B9610")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000232")]
	public static class QuaTools
	{
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x137386C", Offset = "0x137386C", VA = "0x137386C")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x13738BC", Offset = "0x13738BC", VA = "0x13738BC")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x137390C", Offset = "0x137390C", VA = "0x137390C")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x13739B4", Offset = "0x13739B4", VA = "0x13739B4")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1373A5C", Offset = "0x1373A5C", VA = "0x1373A5C")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1373B3C", Offset = "0x1373B3C", VA = "0x1373B3C")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1373B90", Offset = "0x1373B90", VA = "0x1373B90")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x136F538", Offset = "0x136F538", VA = "0x136F538")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1373C64", Offset = "0x1373C64", VA = "0x1373C64")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1373DF4", Offset = "0x1373DF4", VA = "0x1373DF4")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1373EE8", Offset = "0x1373EE8", VA = "0x1373EE8")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1373FF4", Offset = "0x1373FF4", VA = "0x1373FF4")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x13740E0", Offset = "0x13740E0", VA = "0x13740E0")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000233")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x17000141")]
		public static T instance
		{
			[Token(Token = "0x6000B4A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4B")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B4C")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64793C", Offset = "0x64793C")]
		public bool fixTransforms;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x17000142")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x1388DB0", Offset = "0x1388DB0", VA = "0x1388DB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		private bool isAnimated
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x13890FC", Offset = "0x13890FC", VA = "0x13890FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1388C70", Offset = "0x1388C70", VA = "0x1388C70")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1388D10", Offset = "0x1388D10", VA = "0x1388D10", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1388D14", Offset = "0x1388D14", VA = "0x1388D14", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1388D18", Offset = "0x1388D18", VA = "0x1388D18", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1388D1C", Offset = "0x1388D1C", VA = "0x1388D1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1388DAC", Offset = "0x1388DAC", VA = "0x1388DAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1388D54", Offset = "0x1388D54", VA = "0x1388D54")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x13890B0", Offset = "0x13890B0", VA = "0x13890B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1388E9C", Offset = "0x1388E9C", VA = "0x1388E9C")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x13891B4", Offset = "0x13891B4", VA = "0x13891B4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1389210", Offset = "0x1389210", VA = "0x1389210")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x138926C", Offset = "0x138926C", VA = "0x138926C")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x13892B4", Offset = "0x13892B4", VA = "0x13892B4")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1394568", Offset = "0x1394568", VA = "0x1394568")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1394628", Offset = "0x1394628", VA = "0x1394628")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x13946E8", Offset = "0x13946E8", VA = "0x13946E8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x13947A8", Offset = "0x13947A8", VA = "0x13947A8")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public static class V3Tools
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1396254", Offset = "0x1396254", VA = "0x1396254")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x13962F4", Offset = "0x13962F4", VA = "0x13962F4")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1396330", Offset = "0x1396330", VA = "0x1396330")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1396374", Offset = "0x1396374", VA = "0x1396374")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1396410", Offset = "0x1396410", VA = "0x1396410")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x139656C", Offset = "0x139656C", VA = "0x139656C")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x13966E8", Offset = "0x13966E8", VA = "0x13966E8")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x139686C", Offset = "0x139686C", VA = "0x139686C")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1396928", Offset = "0x1396928", VA = "0x1396928")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1396A28", Offset = "0x1396A28", VA = "0x1396A28")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1396AB0", Offset = "0x1396AB0", VA = "0x1396AB0")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000237")]
	public static class Warning
	{
		[Token(Token = "0x2000238")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x8C3EE8", Offset = "0x8C3EE8", VA = "0x8C3EE8")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x8C3F80", Offset = "0x8C3F80", VA = "0x8C3F80")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6438B8", Offset = "0x6438B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6438B8", Offset = "0x6438B8")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xC296E8", Offset = "0xC296E8", VA = "0xC296E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65432C", Offset = "0x65432C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xC29730", Offset = "0xC29730", VA = "0xC29730")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654364", Offset = "0x654364")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC29778", Offset = "0xC29778", VA = "0xC29778")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65439C", Offset = "0x65439C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC297C0", Offset = "0xC297C0", VA = "0xC297C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6543D4", Offset = "0x6543D4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC29808", Offset = "0xC29808", VA = "0xC29808")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xC298A4", Offset = "0xC298A4", VA = "0xC298A4")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC298C4", Offset = "0xC298C4", VA = "0xC298C4")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xC298F4", Offset = "0xC298F4", VA = "0xC298F4")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xC29924", Offset = "0xC29924", VA = "0xC29924")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xC29964", Offset = "0xC29964", VA = "0xC29964")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC299A8", Offset = "0xC299A8", VA = "0xC299A8")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xC299CC", Offset = "0xC299CC", VA = "0xC299CC")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xC299F0", Offset = "0xC299F0", VA = "0xC299F0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xC29A18", Offset = "0xC29A18", VA = "0xC29A18")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xC29A44", Offset = "0xC29A44", VA = "0xC29A44")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xC29A70", Offset = "0xC29A70", VA = "0xC29A70")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xC29828", Offset = "0xC29828", VA = "0xC29828")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xC29A98", Offset = "0xC29A98", VA = "0xC29A98")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC29AA4", Offset = "0xC29AA4", VA = "0xC29AA4")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC29AB0", Offset = "0xC29AB0", VA = "0xC29AB0")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC29DD4", Offset = "0xC29DD4", VA = "0xC29DD4", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC29E7C", Offset = "0xC29E7C", VA = "0xC29E7C", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC2A268", Offset = "0xC2A268", VA = "0xC2A268", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xC2A3F4", Offset = "0xC2A3F4", VA = "0xC2A3F4")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xC2A428", Offset = "0xC2A428", VA = "0xC2A428")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023A")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x17000144")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xC29C50", Offset = "0xC29C50", VA = "0xC29C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xC2A720", Offset = "0xC2A720", VA = "0xC2A720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xC2A144", Offset = "0xC2A144", VA = "0xC2A144")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xC2A54C", Offset = "0xC2A54C", VA = "0xC2A54C")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023B")]
	public abstract class Constraint
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x17000146")]
		public bool isValid
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x89351C", Offset = "0x89351C", VA = "0x89351C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B90")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x893588", Offset = "0x893588", VA = "0x893588")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023C")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x893590", Offset = "0x893590", VA = "0x893590", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x893650", Offset = "0x893650", VA = "0x893650")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x893658", Offset = "0x893658", VA = "0x893658")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023D")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x17000147")]
		private bool positionChanged
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x893794", Offset = "0x893794", VA = "0x893794")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x89368C", Offset = "0x89368C", VA = "0x89368C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8937D0", Offset = "0x8937D0", VA = "0x8937D0")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8937D8", Offset = "0x8937D8", VA = "0x8937D8")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023E")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x89380C", Offset = "0x89380C", VA = "0x89380C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x89388C", Offset = "0x89388C", VA = "0x89388C")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x893894", Offset = "0x893894", VA = "0x893894")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023F")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x17000148")]
		private bool rotationChanged
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x8939D0", Offset = "0x8939D0", VA = "0x8939D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x8938C8", Offset = "0x8938C8", VA = "0x8938C8", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x893A0C", Offset = "0x893A0C", VA = "0x893A0C")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x893A14", Offset = "0x893A14", VA = "0x893A14")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000240")]
	public class Constraints
	{
		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647974", Offset = "0x647974")]
		public float positionWeight;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64798C", Offset = "0x64798C")]
		public float rotationWeight;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x893A48", Offset = "0x893A48", VA = "0x893A48")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x893AB4", Offset = "0x893AB4", VA = "0x893AB4")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x893B0C", Offset = "0x893B0C", VA = "0x893B0C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x893DBC", Offset = "0x893DBC", VA = "0x893DBC")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000241")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x2000242")]
		public enum DOF
		{
			[Token(Token = "0x4000BE3")]
			One,
			[Token(Token = "0x4000BE4")]
			Three
		}

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6479A4", Offset = "0x6479A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6479A4", Offset = "0x6479A4")]
		public float weight;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6479F8", Offset = "0x6479F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6479F8", Offset = "0x6479F8")]
		public float rotationWeight;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647A4C", Offset = "0x647A4C")]
		public DOF rotationDOF;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647A84", Offset = "0x647A84")]
		public bool fixBone1Twist;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647ABC", Offset = "0x647ABC")]
		public Transform bone1;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647AF4", Offset = "0x647AF4")]
		public Transform bone2;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647B2C", Offset = "0x647B2C")]
		public Transform bone3;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647B64", Offset = "0x647B64")]
		public Transform tip;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647B9C", Offset = "0x647B9C")]
		public Transform target;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x647BD4", Offset = "0x647BD4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x17000149")]
		public bool initiated
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xAB3570", Offset = "0xAB3570", VA = "0xAB3570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65440C", Offset = "0x65440C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xAB3578", Offset = "0xAB3578", VA = "0xAB3578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65441C", Offset = "0x65441C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xAB3584", Offset = "0xAB3584", VA = "0xAB3584")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xAB35A4", Offset = "0xAB35A4", VA = "0xAB35A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xAB35C4", Offset = "0xAB35C4", VA = "0xAB35C4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xAB35E4", Offset = "0xAB35E4", VA = "0xAB35E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xAB3604", Offset = "0xAB3604", VA = "0xAB3604")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xAB3718", Offset = "0xAB3718", VA = "0xAB3718")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xAB3BD4", Offset = "0xAB3BD4", VA = "0xAB3BD4")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xAB3CAC", Offset = "0xAB3CAC", VA = "0xAB3CAC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xAB3D70", Offset = "0xAB3D70", VA = "0xAB3D70")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xAB42BC", Offset = "0xAB42BC", VA = "0xAB42BC")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647BE4", Offset = "0x647BE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647BE4", Offset = "0x647BE4")]
		public float weight;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x647C38", Offset = "0x647C38")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x1700014C")]
		public bool initiated
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xAB42CC", Offset = "0xAB42CC", VA = "0xAB42CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65442C", Offset = "0x65442C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xAB42D4", Offset = "0xAB42D4", VA = "0xAB42D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65443C", Offset = "0x65443C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xAB42E0", Offset = "0xAB42E0", VA = "0xAB42E0")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xAB4368", Offset = "0xAB4368", VA = "0xAB4368")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65444C", Offset = "0x65444C")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xAB46F4", Offset = "0xAB46F4", VA = "0xAB46F4")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xAB48B8", Offset = "0xAB48B8", VA = "0xAB48B8")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xAB45F0", Offset = "0xAB45F0", VA = "0xAB45F0")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xAB4A44", Offset = "0xAB4A44", VA = "0xAB4A44", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xAB4B04", Offset = "0xAB4B04", VA = "0xAB4B04")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xAB4B7C", Offset = "0xAB4B7C", VA = "0xAB4B7C")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xAB4BF0", Offset = "0xAB4BF0", VA = "0xAB4BF0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xAB4C58", Offset = "0xAB4C58", VA = "0xAB4C58", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xAB4C5C", Offset = "0xAB4C5C", VA = "0xAB4C5C", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xAB4C70", Offset = "0xAB4C70", VA = "0xAB4C70")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x2000245")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647C48", Offset = "0x647C48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647C48", Offset = "0x647C48")]
		public float weight;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647C9C", Offset = "0x647C9C")]
		public Grounding solver;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x647CD4", Offset = "0x647CD4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x1700014D")]
		public bool initiated
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xF69B30", Offset = "0xF69B30", VA = "0xF69B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654484", Offset = "0x654484")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xF69B38", Offset = "0xF69B38", VA = "0xF69B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654494", Offset = "0x654494")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000BBE")]
		public abstract void ResetPosition();

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF69B44", Offset = "0xF69B44", VA = "0xF69B44")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF69CF0", Offset = "0xF69CF0", VA = "0xF69CF0")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF69BF0", Offset = "0xF69BF0", VA = "0xF69BF0")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF69D24", Offset = "0xF69D24", VA = "0xF69D24")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC5")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000BC6")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xF69E60", Offset = "0xF69E60", VA = "0xF69E60")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643918", Offset = "0x643918")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643918", Offset = "0x643918")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647CE4", Offset = "0x647CE4")]
		public BipedIK ik;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647D1C", Offset = "0x647D1C")]
		public float spineBend;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647D54", Offset = "0x647D54")]
		public float spineSpeed;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xF69F7C", Offset = "0xF69F7C", VA = "0xF69F7C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6544A4", Offset = "0x6544A4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xF69FC4", Offset = "0xF69FC4", VA = "0xF69FC4", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6544DC", Offset = "0x6544DC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xF6A00C", Offset = "0xF6A00C", VA = "0xF6A00C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xF6A0D4", Offset = "0xF6A0D4", VA = "0xF6A0D4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xF6A180", Offset = "0xF6A180", VA = "0xF6A180")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xF6A1E0", Offset = "0xF6A1E0", VA = "0xF6A1E0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xF6A7CC", Offset = "0xF6A7CC", VA = "0xF6A7CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xF6A820", Offset = "0xF6A820", VA = "0xF6A820")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xF6AE5C", Offset = "0xF6AE5C", VA = "0xF6AE5C")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xF6AF74", Offset = "0xF6AF74", VA = "0xF6AF74")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF6B0B4", Offset = "0xF6B0B4", VA = "0xF6B0B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF6B278", Offset = "0xF6B278", VA = "0xF6B278")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643978", Offset = "0x643978")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643978", Offset = "0x643978")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x2000248")]
		public class SpineEffector
		{
			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647E34", Offset = "0x647E34")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647E6C", Offset = "0x647E6C")]
			public float horizontalWeight;

			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647EA4", Offset = "0x647EA4")]
			public float verticalWeight;

			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x8CDF58", Offset = "0x8CDF58", VA = "0x8CDF58")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x8CDF68", Offset = "0x8CDF68", VA = "0x8CDF68")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647D8C", Offset = "0x647D8C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647DC4", Offset = "0x647DC4")]
		public float spineBend;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647DFC", Offset = "0x647DFC")]
		public float spineSpeed;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xF6B6C8", Offset = "0xF6B6C8", VA = "0xF6B6C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654514", Offset = "0x654514")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF6B710", Offset = "0xF6B710", VA = "0xF6B710", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65454C", Offset = "0x65454C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF6B758", Offset = "0xF6B758", VA = "0xF6B758", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654584", Offset = "0x654584")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF6B7A0", Offset = "0xF6B7A0", VA = "0xF6B7A0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF6B7DC", Offset = "0xF6B7DC", VA = "0xF6B7DC")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xF6B870", Offset = "0xF6B870", VA = "0xF6B870")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF6BB28", Offset = "0xF6BB28", VA = "0xF6BB28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xF6BB34", Offset = "0xF6BB34", VA = "0xF6BB34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xF6B8D8", Offset = "0xF6B8D8", VA = "0xF6B8D8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xF6BB40", Offset = "0xF6BB40", VA = "0xF6BB40")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xF6BE5C", Offset = "0xF6BE5C", VA = "0xF6BE5C")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xF6BF6C", Offset = "0xF6BF6C", VA = "0xF6BF6C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xF6C0E8", Offset = "0xF6C0E8", VA = "0xF6C0E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xF6C220", Offset = "0xF6C220", VA = "0xF6C220")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6439D8", Offset = "0x6439D8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6439D8", Offset = "0x6439D8")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647EDC", Offset = "0x647EDC")]
		public Transform pelvis;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647F14", Offset = "0x647F14")]
		public Transform characterRoot;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647F4C", Offset = "0x647F4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x647F4C", Offset = "0x647F4C")]
		public float rootRotationWeight;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647FA0", Offset = "0x647FA0")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x647FD8", Offset = "0x647FD8")]
		public float maxRootRotationAngle;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xF6C2C0", Offset = "0xF6C2C0", VA = "0xF6C2C0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6545BC", Offset = "0x6545BC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xF6C308", Offset = "0xF6C308", VA = "0xF6C308", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6545F4", Offset = "0x6545F4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xF6C350", Offset = "0xF6C350", VA = "0xF6C350", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xF6C368", Offset = "0xF6C368", VA = "0xF6C368")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xF6C59C", Offset = "0xF6C59C", VA = "0xF6C59C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xF6C698", Offset = "0xF6C698", VA = "0xF6C698")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xF6CC40", Offset = "0xF6CC40", VA = "0xF6CC40")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF6D0A4", Offset = "0xF6D0A4", VA = "0xF6D0A4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xF6D230", Offset = "0xF6D230", VA = "0xF6D230")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xF6D534", Offset = "0xF6D534", VA = "0xF6D534")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xF6D680", Offset = "0xF6D680", VA = "0xF6D680")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xF6D88C", Offset = "0xF6D88C", VA = "0xF6D88C")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643A38", Offset = "0x643A38")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643A38", Offset = "0x643A38")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x200024B")]
		public struct Foot
		{
			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x8CDFB0", Offset = "0x8CDFB0", VA = "0x8CDFB0")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648010", Offset = "0x648010")]
		public Grounding forelegSolver;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648048", Offset = "0x648048")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648048", Offset = "0x648048")]
		public float rootRotationWeight;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64809C", Offset = "0x64809C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64809C", Offset = "0x64809C")]
		public float minRootRotation;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6480F4", Offset = "0x6480F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6480F4", Offset = "0x6480F4")]
		public float maxRootRotation;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64814C", Offset = "0x64814C")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648184", Offset = "0x648184")]
		public float maxLegOffset;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6481BC", Offset = "0x6481BC")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6481F4", Offset = "0x6481F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6481F4", Offset = "0x6481F4")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648248", Offset = "0x648248")]
		public Transform characterRoot;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648280", Offset = "0x648280")]
		public Transform pelvis;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6482B8", Offset = "0x6482B8")]
		public Transform lastSpineBone;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6482F0", Offset = "0x6482F0")]
		public Transform head;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xF6D92C", Offset = "0xF6D92C", VA = "0xF6D92C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65462C", Offset = "0x65462C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xF6D974", Offset = "0xF6D974", VA = "0xF6D974", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654664", Offset = "0x654664")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xF6D9BC", Offset = "0xF6D9BC", VA = "0xF6D9BC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xF6D9F0", Offset = "0xF6D9F0", VA = "0xF6D9F0")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xF6DB1C", Offset = "0xF6DB1C", VA = "0xF6DB1C")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xF6DD20", Offset = "0xF6DD20", VA = "0xF6DD20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xF6DD88", Offset = "0xF6DD88", VA = "0xF6DD88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xF6DDEC", Offset = "0xF6DDEC", VA = "0xF6DDEC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xF6E14C", Offset = "0xF6E14C", VA = "0xF6E14C")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xF6E4E4", Offset = "0xF6E4E4", VA = "0xF6E4E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF6E5DC", Offset = "0xF6E5DC", VA = "0xF6E5DC")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xF6E9A8", Offset = "0xF6E9A8", VA = "0xF6E9A8")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xF6EFC4", Offset = "0xF6EFC4", VA = "0xF6EFC4")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xF6F194", Offset = "0xF6F194", VA = "0xF6F194")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF6F270", Offset = "0xF6F270", VA = "0xF6F270")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF6F4B8", Offset = "0xF6F4B8", VA = "0xF6F4B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF6F4F0", Offset = "0xF6F4F0", VA = "0xF6F4F0")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF6F6F4", Offset = "0xF6F6F4", VA = "0xF6F6F4")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643A98", Offset = "0x643A98")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643A98", Offset = "0x643A98")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648338", Offset = "0x648338")]
		public VRIK ik;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xF6F80C", Offset = "0xF6F80C", VA = "0xF6F80C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65469C", Offset = "0x65469C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xF6F854", Offset = "0xF6F854", VA = "0xF6F854", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6546D4", Offset = "0x6546D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xF6F89C", Offset = "0xF6F89C", VA = "0xF6F89C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65470C", Offset = "0x65470C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xF6F8E4", Offset = "0xF6F8E4", VA = "0xF6F8E4", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xF6F8FC", Offset = "0xF6F8FC", VA = "0xF6F8FC")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xF6F990", Offset = "0xF6F990", VA = "0xF6F990")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xF6F9F0", Offset = "0xF6F9F0", VA = "0xF6F9F0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xF6FC5C", Offset = "0xF6FC5C", VA = "0xF6FC5C")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xF6FE4C", Offset = "0xF6FE4C", VA = "0xF6FE4C")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xF6FEDC", Offset = "0xF6FEDC", VA = "0xF6FEDC")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xF70098", Offset = "0xF70098", VA = "0xF70098")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xF70214", Offset = "0xF70214", VA = "0xF70214")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xF703C8", Offset = "0xF703C8", VA = "0xF703C8")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024D")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x200024E")]
		public enum Quality
		{
			[Token(Token = "0x4000C4A")]
			Fastest,
			[Token(Token = "0x4000C4B")]
			Simple,
			[Token(Token = "0x4000C4C")]
			Best
		}

		[Token(Token = "0x200024F")]
		public class Leg
		{
			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64881C", Offset = "0x64881C")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64882C", Offset = "0x64882C")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64883C", Offset = "0x64883C")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64884C", Offset = "0x64884C")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64885C", Offset = "0x64885C")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64886C", Offset = "0x64886C")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64887C", Offset = "0x64887C")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64888C", Offset = "0x64888C")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64889C", Offset = "0x64889C")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x17000156")]
			public bool isGrounded
			{
				[Token(Token = "0x6000C2C")]
				[Address(RVA = "0x8CE014", Offset = "0x8CE014", VA = "0x8CE014")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6547E4", Offset = "0x6547E4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000C2D")]
				[Address(RVA = "0x8CE01C", Offset = "0x8CE01C", VA = "0x8CE01C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6547F4", Offset = "0x6547F4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000157")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6000C2E")]
				[Address(RVA = "0x8CE028", Offset = "0x8CE028", VA = "0x8CE028")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654804", Offset = "0x654804")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000C2F")]
				[Address(RVA = "0x8CE034", Offset = "0x8CE034", VA = "0x8CE034")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654814", Offset = "0x654814")]
				private set
				{
				}
			}

			[Token(Token = "0x17000158")]
			public bool initiated
			{
				[Token(Token = "0x6000C30")]
				[Address(RVA = "0x8CE040", Offset = "0x8CE040", VA = "0x8CE040")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654824", Offset = "0x654824")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000C31")]
				[Address(RVA = "0x8CE048", Offset = "0x8CE048", VA = "0x8CE048")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654834", Offset = "0x654834")]
				private set
				{
				}
			}

			[Token(Token = "0x17000159")]
			public float heightFromGround
			{
				[Token(Token = "0x6000C32")]
				[Address(RVA = "0x8CE054", Offset = "0x8CE054", VA = "0x8CE054")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654844", Offset = "0x654844")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000C33")]
				[Address(RVA = "0x8CE05C", Offset = "0x8CE05C", VA = "0x8CE05C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654854", Offset = "0x654854")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015A")]
			public Vector3 velocity
			{
				[Token(Token = "0x6000C34")]
				[Address(RVA = "0x8CE064", Offset = "0x8CE064", VA = "0x8CE064")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654864", Offset = "0x654864")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000C35")]
				[Address(RVA = "0x8CE070", Offset = "0x8CE070", VA = "0x8CE070")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654874", Offset = "0x654874")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015B")]
			public Transform transform
			{
				[Token(Token = "0x6000C36")]
				[Address(RVA = "0x8CE07C", Offset = "0x8CE07C", VA = "0x8CE07C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654884", Offset = "0x654884")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000C37")]
				[Address(RVA = "0x8CE084", Offset = "0x8CE084", VA = "0x8CE084")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654894", Offset = "0x654894")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015C")]
			public float IKOffset
			{
				[Token(Token = "0x6000C38")]
				[Address(RVA = "0x8CE08C", Offset = "0x8CE08C", VA = "0x8CE08C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6548A4", Offset = "0x6548A4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000C39")]
				[Address(RVA = "0x8CE094", Offset = "0x8CE094", VA = "0x8CE094")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6548B4", Offset = "0x6548B4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015D")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x6000C3A")]
				[Address(RVA = "0x8CE09C", Offset = "0x8CE09C", VA = "0x8CE09C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6548C4", Offset = "0x6548C4")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6000C3B")]
				[Address(RVA = "0x8CE0B4", Offset = "0x8CE0B4", VA = "0x8CE0B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6548D4", Offset = "0x6548D4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015E")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x6000C3C")]
				[Address(RVA = "0x8CE0D4", Offset = "0x8CE0D4", VA = "0x8CE0D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6548E4", Offset = "0x6548E4")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6000C3D")]
				[Address(RVA = "0x8CE0EC", Offset = "0x8CE0EC", VA = "0x8CE0EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6548F4", Offset = "0x6548F4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015F")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x6000C3E")]
				[Address(RVA = "0x8CE10C", Offset = "0x8CE10C", VA = "0x8CE10C")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x17000160")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6000C44")]
				[Address(RVA = "0x8CF124", Offset = "0x8CF124", VA = "0x8CF124")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000161")]
			private float rootYOffset
			{
				[Token(Token = "0x6000C4D")]
				[Address(RVA = "0x8CF288", Offset = "0x8CF288", VA = "0x8CF288")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x8CE154", Offset = "0x8CE154", VA = "0x8CE154")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x8CE168", Offset = "0x8CE168", VA = "0x8CE168")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x8CE1F8", Offset = "0x8CE1F8", VA = "0x8CE1F8")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x8CE244", Offset = "0x8CE244", VA = "0x8CE244")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x8CE2B4", Offset = "0x8CE2B4", VA = "0x8CE2B4")]
			public void Process()
			{
			}

			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x8CED9C", Offset = "0x8CED9C", VA = "0x8CED9C")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x8CE93C", Offset = "0x8CE93C", VA = "0x8CE93C")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x8CF1B8", Offset = "0x8CF1B8", VA = "0x8CF1B8")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x8CEBD8", Offset = "0x8CEBD8", VA = "0x8CEBD8")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x8CEC64", Offset = "0x8CEC64", VA = "0x8CEC64")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x8CF228", Offset = "0x8CF228", VA = "0x8CF228")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x8CF14C", Offset = "0x8CF14C", VA = "0x8CF14C")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x8CF31C", Offset = "0x8CF31C", VA = "0x8CF31C")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x8CF3A8", Offset = "0x8CF3A8", VA = "0x8CF3A8")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x2000250")]
		public class Pelvis
		{
			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6488AC", Offset = "0x6488AC")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6488BC", Offset = "0x6488BC")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4000C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4000C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x4000C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x17000162")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x6000C4F")]
				[Address(RVA = "0x8CF3EC", Offset = "0x8CF3EC", VA = "0x8CF3EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654904", Offset = "0x654904")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000C50")]
				[Address(RVA = "0x8CF3F8", Offset = "0x8CF3F8", VA = "0x8CF3F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654914", Offset = "0x654914")]
				private set
				{
				}
			}

			[Token(Token = "0x17000163")]
			public float heightOffset
			{
				[Token(Token = "0x6000C51")]
				[Address(RVA = "0x8CF404", Offset = "0x8CF404", VA = "0x8CF404")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654924", Offset = "0x654924")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000C52")]
				[Address(RVA = "0x8CF40C", Offset = "0x8CF40C", VA = "0x8CF40C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654934", Offset = "0x654934")]
				private set
				{
				}
			}

			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x8CF414", Offset = "0x8CF414", VA = "0x8CF414")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x8CF4A4", Offset = "0x8CF4A4", VA = "0x8CF4A4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x8CF444", Offset = "0x8CF444", VA = "0x8CF444")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x8CF510", Offset = "0x8CF510", VA = "0x8CF510")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x8CF6B0", Offset = "0x8CF6B0", VA = "0x8CF6B0")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648370", Offset = "0x648370")]
		public LayerMask layers;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6483A8", Offset = "0x6483A8")]
		public float maxStep;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6483E0", Offset = "0x6483E0")]
		public float heightOffset;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648418", Offset = "0x648418")]
		public float footSpeed;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648450", Offset = "0x648450")]
		public float footRadius;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648488", Offset = "0x648488")]
		public float footCenterOffset;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6484D4", Offset = "0x6484D4")]
		public float prediction;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64850C", Offset = "0x64850C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64850C", Offset = "0x64850C")]
		public float footRotationWeight;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648560", Offset = "0x648560")]
		public float footRotationSpeed;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648598", Offset = "0x648598")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648598", Offset = "0x648598")]
		public float maxFootRotationAngle;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6485F0", Offset = "0x6485F0")]
		public bool rotateSolver;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648628", Offset = "0x648628")]
		public float pelvisSpeed;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648660", Offset = "0x648660")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648660", Offset = "0x648660")]
		public float pelvisDamper;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6486B4", Offset = "0x6486B4")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6486EC", Offset = "0x6486EC")]
		public float liftPelvisWeight;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648724", Offset = "0x648724")]
		public float rootSphereCastRadius;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64875C", Offset = "0x64875C")]
		public bool overstepFallsDown;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648794", Offset = "0x648794")]
		public Quality quality;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6487CC", Offset = "0x6487CC")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6487DC", Offset = "0x6487DC")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6487EC", Offset = "0x6487EC")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6487FC", Offset = "0x6487FC")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64880C", Offset = "0x64880C")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x1700014E")]
		public Leg[] legs
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xF7042C", Offset = "0xF7042C", VA = "0xF7042C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654744", Offset = "0x654744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xF70434", Offset = "0xF70434", VA = "0xF70434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654754", Offset = "0x654754")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xF7043C", Offset = "0xF7043C", VA = "0xF7043C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654764", Offset = "0x654764")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xF70444", Offset = "0xF70444", VA = "0xF70444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654774", Offset = "0x654774")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool isGrounded
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xF7044C", Offset = "0xF7044C", VA = "0xF7044C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654784", Offset = "0x654784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xF70454", Offset = "0xF70454", VA = "0xF70454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x654794", Offset = "0x654794")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public Transform root
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xF70460", Offset = "0xF70460", VA = "0xF70460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6547A4", Offset = "0x6547A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xF70468", Offset = "0xF70468", VA = "0xF70468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6547B4", Offset = "0x6547B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0xF70470", Offset = "0xF70470", VA = "0xF70470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6547C4", Offset = "0x6547C4")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xF70488", Offset = "0xF70488", VA = "0xF70488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6547D4", Offset = "0x6547D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xF704A8", Offset = "0xF704A8", VA = "0xF704A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000154")]
		public Vector3 up
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xF6AF30", Offset = "0xF6AF30", VA = "0xF6AF30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000155")]
		private bool useRootRotation
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xF70874", Offset = "0xF70874", VA = "0xF70874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF704FC", Offset = "0xF704FC", VA = "0xF704FC")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xF70748", Offset = "0xF70748", VA = "0xF70748")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF6A4FC", Offset = "0xF6A4FC", VA = "0xF6A4FC")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xF6AC14", Offset = "0xF6AC14", VA = "0xF6AC14")]
		public void Update()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xF6CAE0", Offset = "0xF6CAE0", VA = "0xF6CAE0")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xF6A048", Offset = "0xF6A048", VA = "0xF6A048")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xF7085C", Offset = "0xF7085C", VA = "0xF7085C")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xF708F4", Offset = "0xF708F4", VA = "0xF708F4")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xF70984", Offset = "0xF70984", VA = "0xF70984")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xF70A40", Offset = "0xF70A40", VA = "0xF70A40")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xF69F28", Offset = "0xF69F28", VA = "0xF69F28")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643AF8", Offset = "0x643AF8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643AF8", Offset = "0x643AF8")]
	public class AimIK : IK
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xC1E200", Offset = "0xC1E200", VA = "0xC1E200", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654944", Offset = "0x654944")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xC1E248", Offset = "0xC1E248", VA = "0xC1E248", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65497C", Offset = "0x65497C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xC1E290", Offset = "0xC1E290", VA = "0xC1E290")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6549B4", Offset = "0x6549B4")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xC1E2D8", Offset = "0xC1E2D8", VA = "0xC1E2D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6549EC", Offset = "0x6549EC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xC1E320", Offset = "0xC1E320", VA = "0xC1E320")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654A24", Offset = "0x654A24")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xC1E368", Offset = "0xC1E368", VA = "0xC1E368", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xC1E370", Offset = "0xC1E370", VA = "0xC1E370")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643B58", Offset = "0x643B58")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643B58", Offset = "0x643B58")]
	public class ArmIK : IK
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xC22ACC", Offset = "0xC22ACC", VA = "0xC22ACC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654A5C", Offset = "0x654A5C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xC22B14", Offset = "0xC22B14", VA = "0xC22B14", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654A94", Offset = "0x654A94")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xC22B5C", Offset = "0xC22B5C", VA = "0xC22B5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654ACC", Offset = "0x654ACC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xC22BA4", Offset = "0xC22BA4", VA = "0xC22BA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654B04", Offset = "0x654B04")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xC22BEC", Offset = "0xC22BEC", VA = "0xC22BEC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xC22BF4", Offset = "0xC22BF4", VA = "0xC22BF4")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643BB8", Offset = "0x643BB8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643BB8", Offset = "0x643BB8")]
	public class CCDIK : IK
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x88C398", Offset = "0x88C398", VA = "0x88C398", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654B3C", Offset = "0x654B3C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x88C3E0", Offset = "0x88C3E0", VA = "0x88C3E0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654B74", Offset = "0x654B74")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x88C428", Offset = "0x88C428", VA = "0x88C428")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654BAC", Offset = "0x654BAC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x88C470", Offset = "0x88C470", VA = "0x88C470")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654BE4", Offset = "0x654BE4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x88C4B8", Offset = "0x88C4B8", VA = "0x88C4B8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x88C4C0", Offset = "0x88C4C0", VA = "0x88C4C0")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643C18", Offset = "0x643C18")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643C18", Offset = "0x643C18")]
	public class FABRIK : IK
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xAAB978", Offset = "0xAAB978", VA = "0xAAB978", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654C1C", Offset = "0x654C1C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xAAB9C0", Offset = "0xAAB9C0", VA = "0xAAB9C0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654C54", Offset = "0x654C54")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xAABA08", Offset = "0xAABA08", VA = "0xAABA08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654C8C", Offset = "0x654C8C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xAABA50", Offset = "0xAABA50", VA = "0xAABA50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654CC4", Offset = "0x654CC4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xAABA98", Offset = "0xAABA98", VA = "0xAABA98", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xAABAA0", Offset = "0xAABAA0", VA = "0xAABAA0")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643C78", Offset = "0x643C78")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643C78", Offset = "0x643C78")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xAABFE8", Offset = "0xAABFE8", VA = "0xAABFE8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654CFC", Offset = "0x654CFC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xAAC030", Offset = "0xAAC030", VA = "0xAAC030", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654D34", Offset = "0x654D34")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xAAC078", Offset = "0xAAC078", VA = "0xAAC078")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654D6C", Offset = "0x654D6C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xAAC0C0", Offset = "0xAAC0C0", VA = "0xAAC0C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654DA4", Offset = "0x654DA4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xAAC108", Offset = "0xAAC108", VA = "0xAAC108", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xAAC110", Offset = "0xAAC110", VA = "0xAAC110")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643CD8", Offset = "0x643CD8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643CD8", Offset = "0x643CD8")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xAB9A84", Offset = "0xAB9A84", VA = "0xAB9A84", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654DDC", Offset = "0x654DDC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xAB9ACC", Offset = "0xAB9ACC", VA = "0xAB9ACC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654E14", Offset = "0x654E14")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xAB9B14", Offset = "0xAB9B14", VA = "0xAB9B14")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654E4C", Offset = "0x654E4C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xAB9B5C", Offset = "0xAB9B5C", VA = "0xAB9B5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654E84", Offset = "0x654E84")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xAB9BA4", Offset = "0xAB9BA4", VA = "0xAB9BA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654EBC", Offset = "0x654EBC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xAB9BEC", Offset = "0xAB9BEC", VA = "0xAB9BEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654EF4", Offset = "0x654EF4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xAB9C34", Offset = "0xAB9C34", VA = "0xAB9C34")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xAB9C78", Offset = "0xAB9C78", VA = "0xAB9C78", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xAB9C80", Offset = "0xAB9C80", VA = "0xAB9C80")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xAB9E68", Offset = "0xAB9E68", VA = "0xAB9E68")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xABA108", Offset = "0xABA108", VA = "0xABA108")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654F2C", Offset = "0x654F2C")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xABA128", Offset = "0xABA128", VA = "0xABA128")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654F64", Offset = "0x654F64")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xABA218", Offset = "0xABA218", VA = "0xABA218")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x6000C84")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF7B27C", Offset = "0xF7B27C", VA = "0xF7B27C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xF7B304", Offset = "0xF7B304", VA = "0xF7B304", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xF7B378", Offset = "0xF7B378", VA = "0xF7B378", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000C88")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000C89")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xF7B3D8", Offset = "0xF7B3D8", VA = "0xF7B3D8")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6488CC", Offset = "0x6488CC")]
		public IK[] IKComponents;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648904", Offset = "0x648904")]
		public Animator animator;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000164")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x11E9E30", Offset = "0x11E9E30", VA = "0x11E9E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x11E9EC8", Offset = "0x11E9EC8", VA = "0x11E9EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x11E9F38", Offset = "0x11E9F38", VA = "0x11E9F38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x11E9FF4", Offset = "0x11E9FF4", VA = "0x11E9FF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x11EA030", Offset = "0x11EA030", VA = "0x11EA030")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x11E9F6C", Offset = "0x11E9F6C", VA = "0x11E9F6C")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x11EA12C", Offset = "0x11EA12C", VA = "0x11EA12C")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643D38", Offset = "0x643D38")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643D38", Offset = "0x643D38")]
	public class LegIK : IK
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x13BB754", Offset = "0x13BB754", VA = "0x13BB754", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654F9C", Offset = "0x654F9C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x13BB79C", Offset = "0x13BB79C", VA = "0x13BB79C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x654FD4", Offset = "0x654FD4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x13BB7E4", Offset = "0x13BB7E4", VA = "0x13BB7E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65500C", Offset = "0x65500C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x13BB82C", Offset = "0x13BB82C", VA = "0x13BB82C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655044", Offset = "0x655044")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x13BB874", Offset = "0x13BB874", VA = "0x13BB874", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x13BB87C", Offset = "0x13BB87C", VA = "0x13BB87C")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643D98", Offset = "0x643D98")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643D98", Offset = "0x643D98")]
	public class LimbIK : IK
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x13BB9CC", Offset = "0x13BB9CC", VA = "0x13BB9CC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65507C", Offset = "0x65507C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x13BBA14", Offset = "0x13BBA14", VA = "0x13BBA14", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6550B4", Offset = "0x6550B4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x13BBA5C", Offset = "0x13BBA5C", VA = "0x13BBA5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6550EC", Offset = "0x6550EC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x13BBAA4", Offset = "0x13BBAA4", VA = "0x13BBAA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655124", Offset = "0x655124")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x13BBAEC", Offset = "0x13BBAEC", VA = "0x13BBAEC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x13BBAF4", Offset = "0x13BBAF4", VA = "0x13BBAF4")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643DF8", Offset = "0x643DF8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643DF8", Offset = "0x643DF8")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x13BEE64", Offset = "0x13BEE64", VA = "0x13BEE64", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65515C", Offset = "0x65515C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x13BEEAC", Offset = "0x13BEEAC", VA = "0x13BEEAC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655194", Offset = "0x655194")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x13BEEF4", Offset = "0x13BEEF4", VA = "0x13BEEF4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6551CC", Offset = "0x6551CC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x13BEF3C", Offset = "0x13BEF3C", VA = "0x13BEF3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655204", Offset = "0x655204")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x13BEF84", Offset = "0x13BEF84", VA = "0x13BEF84", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x13BEF8C", Offset = "0x13BEF8C", VA = "0x13BEF8C")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643E58", Offset = "0x643E58")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643E58", Offset = "0x643E58")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x13947B0", Offset = "0x13947B0", VA = "0x13947B0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65523C", Offset = "0x65523C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x13947F8", Offset = "0x13947F8", VA = "0x13947F8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655274", Offset = "0x655274")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1394840", Offset = "0x1394840", VA = "0x1394840")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6552AC", Offset = "0x6552AC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1394888", Offset = "0x1394888", VA = "0x1394888")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6552E4", Offset = "0x6552E4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x13948D0", Offset = "0x13948D0", VA = "0x13948D0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x13948D8", Offset = "0x13948D8", VA = "0x13948D8")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643EB8", Offset = "0x643EB8")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x200025E")]
		public class References
		{
			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6489F0", Offset = "0x6489F0")]
			public Transform chest;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648A28", Offset = "0x648A28")]
			public Transform neck;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648A60", Offset = "0x648A60")]
			public Transform leftShoulder;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648A98", Offset = "0x648A98")]
			public Transform rightShoulder;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648AD0", Offset = "0x648AD0")]
			public Transform leftThigh;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648B08", Offset = "0x648B08")]
			public Transform leftCalf;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648B40", Offset = "0x648B40")]
			public Transform leftFoot;

			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648B78", Offset = "0x648B78")]
			public Transform leftToes;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648BB0", Offset = "0x648BB0")]
			public Transform rightThigh;

			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648BE8", Offset = "0x648BE8")]
			public Transform rightCalf;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648C20", Offset = "0x648C20")]
			public Transform rightFoot;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648C58", Offset = "0x648C58")]
			public Transform rightToes;

			[Token(Token = "0x17000165")]
			public bool isFilled
			{
				[Token(Token = "0x6000CB4")]
				[Address(RVA = "0xAA5524", Offset = "0xAA5524", VA = "0xAA5524")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000166")]
			public bool isEmpty
			{
				[Token(Token = "0x6000CB5")]
				[Address(RVA = "0xAA599C", Offset = "0xAA599C", VA = "0xAA599C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xAA4FD4", Offset = "0xAA4FD4", VA = "0xAA4FD4")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xAA5E14", Offset = "0xAA5E14", VA = "0xAA5E14")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0xAA62C0", Offset = "0xAA62C0", VA = "0xAA62C0")]
			public References()
			{
			}
		}

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x64893C", Offset = "0x64893C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64893C", Offset = "0x64893C")]
		public References references;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6489B8", Offset = "0x6489B8")]
		public IKSolverVR solver;

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1396B4C", Offset = "0x1396B4C", VA = "0x1396B4C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65531C", Offset = "0x65531C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1396B94", Offset = "0x1396B94", VA = "0x1396B94", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655354", Offset = "0x655354")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1396BDC", Offset = "0x1396BDC", VA = "0x1396BDC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65538C", Offset = "0x65538C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1396C24", Offset = "0x1396C24", VA = "0x1396C24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6553C4", Offset = "0x6553C4")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1396C50", Offset = "0x1396C50", VA = "0x1396C50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6553FC", Offset = "0x6553FC")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1396C78", Offset = "0x1396C78", VA = "0x1396C78", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1396C80", Offset = "0x1396C80", VA = "0x1396C80", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1396D00", Offset = "0x1396D00", VA = "0x1396D00", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1396E6C", Offset = "0x1396E6C", VA = "0x1396E6C")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025F")]
	public class FABRIKChain
	{
		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648C90", Offset = "0x648C90")]
		public float pull;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648CA8", Offset = "0x648CA8")]
		public float pin;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xAABB10", Offset = "0xAABB10", VA = "0xAABB10")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xAABBEC", Offset = "0xAABBEC", VA = "0xAABBEC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xAABC0C", Offset = "0xAABC0C", VA = "0xAABC0C")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xAABE80", Offset = "0xAABE80", VA = "0xAABE80")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xAABCE0", Offset = "0xAABCE0", VA = "0xAABCE0")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xAABF78", Offset = "0xAABF78", VA = "0xAABF78")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xAAC180", Offset = "0xAAC180", VA = "0xAAC180")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xAAC5F8", Offset = "0xAAC5F8", VA = "0xAAC5F8")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xAAC7B4", Offset = "0xAAC7B4", VA = "0xAAC7B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xAAC8E4", Offset = "0xAAC8E4", VA = "0xAAC8E4")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000262")]
		public class BendBone
		{
			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649300", Offset = "0x649300")]
			public Transform transform;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649338", Offset = "0x649338")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649338", Offset = "0x649338")]
			public float weight;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x8CBE0C", Offset = "0x8CBE0C", VA = "0x8CBE0C")]
			public BendBone()
			{
			}

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x8CBE48", Offset = "0x8CBE48", VA = "0x8CBE48")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x8CBEAC", Offset = "0x8CBEAC", VA = "0x8CBEAC")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x8CBEE4", Offset = "0x8CBEE4", VA = "0x8CBEE4")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648CC0", Offset = "0x648CC0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x648CF8", Offset = "0x648CF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648CF8", Offset = "0x648CF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648CF8", Offset = "0x648CF8")]
		public float positionWeight;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648D70", Offset = "0x648D70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648D70", Offset = "0x648D70")]
		public float bodyWeight;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648DC4", Offset = "0x648DC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648DC4", Offset = "0x648DC4")]
		public float thighWeight;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648E18", Offset = "0x648E18")]
		public bool handsPullBody;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648E50", Offset = "0x648E50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x648E50", Offset = "0x648E50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648E50", Offset = "0x648E50")]
		public float rotationWeight;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648EC8", Offset = "0x648EC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648EC8", Offset = "0x648EC8")]
		public float bodyClampWeight;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648F1C", Offset = "0x648F1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648F1C", Offset = "0x648F1C")]
		public float headClampWeight;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648F70", Offset = "0x648F70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648F70", Offset = "0x648F70")]
		public float bendWeight;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648FC4", Offset = "0x648FC4")]
		public BendBone[] bendBones;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x648FFC", Offset = "0x648FFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x648FFC", Offset = "0x648FFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x648FFC", Offset = "0x648FFC")]
		public float CCDWeight;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649074", Offset = "0x649074")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649074", Offset = "0x649074")]
		public float roll;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6490C8", Offset = "0x6490C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6490C8", Offset = "0x6490C8")]
		public float damper;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649120", Offset = "0x649120")]
		public Transform[] CCDBones;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x649158", Offset = "0x649158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649158", Offset = "0x649158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649158", Offset = "0x649158")]
		public float postStretchWeight;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6491D0", Offset = "0x6491D0")]
		public float maxStretch;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649208", Offset = "0x649208")]
		public float stretchDamper;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649240", Offset = "0x649240")]
		public bool fixHead;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649278", Offset = "0x649278")]
		public Transform[] stretchBones;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x6492B0", Offset = "0x6492B0")]
		public Vector3 chestDirection;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6492E8", Offset = "0x6492E8")]
		public float chestDirectionWeight;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xAAC8EC", Offset = "0xAAC8EC", VA = "0xAAC8EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xAACC74", Offset = "0xAACC74", VA = "0xAACC74")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xAAD150", Offset = "0xAAD150", VA = "0xAAD150")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xAAD51C", Offset = "0xAAD51C", VA = "0xAAD51C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xAADCA8", Offset = "0xAADCA8", VA = "0xAADCA8")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xAADF88", Offset = "0xAADF88", VA = "0xAADF88")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xAAE28C", Offset = "0xAAE28C", VA = "0xAAE28C")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xAAEA60", Offset = "0xAAEA60", VA = "0xAAEA60")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xAADA8C", Offset = "0xAADA8C", VA = "0xAADA8C")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xAAEC28", Offset = "0xAAEC28", VA = "0xAAEC28")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xAAE978", Offset = "0xAAE978", VA = "0xAAE978")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xAAE8AC", Offset = "0xAAE8AC", VA = "0xAAE8AC")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xAAEEAC", Offset = "0xAAEEAC", VA = "0xAAEEAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xAAF1E0", Offset = "0xAAF1E0", VA = "0xAAF1E0")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000263")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000264")]
		public class ChildConstraint
		{
			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649424", Offset = "0x649424")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649434", Offset = "0x649434")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x17000167")]
			public float nominalDistance
			{
				[Token(Token = "0x6000CE8")]
				[Address(RVA = "0x8CBFA0", Offset = "0x8CBFA0", VA = "0x8CBFA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655434", Offset = "0x655434")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000CE9")]
				[Address(RVA = "0x8CBFA8", Offset = "0x8CBFA8", VA = "0x8CBFA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655444", Offset = "0x655444")]
				private set
				{
				}
			}

			[Token(Token = "0x17000168")]
			public bool isRigid
			{
				[Token(Token = "0x6000CEA")]
				[Address(RVA = "0x8CBFB0", Offset = "0x8CBFB0", VA = "0x8CBFB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655454", Offset = "0x655454")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000CEB")]
				[Address(RVA = "0x8CBFB8", Offset = "0x8CBFB8", VA = "0x8CBFB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655464", Offset = "0x655464")]
				private set
				{
				}
			}

			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x8CBFC4", Offset = "0x8CBFC4", VA = "0x8CBFC4")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x8CC02C", Offset = "0x8CC02C", VA = "0x8CC02C")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x8CC084", Offset = "0x8CC084", VA = "0x8CC084")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x8CC228", Offset = "0x8CC228", VA = "0x8CC228")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000265")]
		public enum Smoothing
		{
			[Token(Token = "0x4000CEE")]
			None,
			[Token(Token = "0x4000CEF")]
			Exponential,
			[Token(Token = "0x4000CF0")]
			Cubic
		}

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64938C", Offset = "0x64938C")]
		public float pin;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6493A4", Offset = "0x6493A4")]
		public float pull;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6493BC", Offset = "0x6493BC")]
		public float push;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6493D4", Offset = "0x6493D4")]
		public float pushParent;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6493EC", Offset = "0x6493EC")]
		public float reach;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x4000CE2")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xAAF93C", Offset = "0xAAF93C", VA = "0xAAF93C")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xAAFA58", Offset = "0xAAFA58", VA = "0xAAFA58")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xAAFBC8", Offset = "0xAAFBC8", VA = "0xAAFBC8")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xAAFD04", Offset = "0xAAFD04", VA = "0xAAFD04")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xAAFDDC", Offset = "0xAAFDDC", VA = "0xAAFDDC")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xAAFF00", Offset = "0xAAFF00", VA = "0xAAFF00")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xAB05D0", Offset = "0xAB05D0", VA = "0xAB05D0")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xAB009C", Offset = "0xAB009C", VA = "0xAB009C")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xAB09C0", Offset = "0xAB09C0", VA = "0xAB09C0")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xAB0C20", Offset = "0xAB0C20", VA = "0xAB0C20")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xAB0E8C", Offset = "0xAB0E8C", VA = "0xAB0E8C")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xAB1230", Offset = "0xAB1230", VA = "0xAB1230")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xAB16C4", Offset = "0xAB16C4", VA = "0xAB16C4")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xAB18E8", Offset = "0xAB18E8", VA = "0xAB18E8")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xAB1654", Offset = "0xAB1654", VA = "0xAB1654")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xAB10BC", Offset = "0xAB10BC", VA = "0xAB10BC")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xAB15D8", Offset = "0xAB15D8", VA = "0xAB15D8")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xAB19D0", Offset = "0xAB19D0", VA = "0xAB19D0")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xAB14F8", Offset = "0xAB14F8", VA = "0xAB14F8")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xAB17D0", Offset = "0xAB17D0", VA = "0xAB17D0")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	public class IKConstraintBend
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649444", Offset = "0x649444")]
		public float weight;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64945C", Offset = "0x64945C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x17000169")]
		public bool initiated
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xF7B5C8", Offset = "0xF7B5C8", VA = "0xF7B5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655474", Offset = "0x655474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xF7B5D0", Offset = "0xF7B5D0", VA = "0xF7B5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655484", Offset = "0x655484")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xF7B3E0", Offset = "0xF7B3E0", VA = "0xF7B3E0")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xF7B5DC", Offset = "0xF7B5DC", VA = "0xF7B5DC")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xF7B61C", Offset = "0xF7B61C", VA = "0xF7B61C")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xF7B684", Offset = "0xF7B684", VA = "0xF7B684")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xF7B6D4", Offset = "0xF7B6D4", VA = "0xF7B6D4")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xF7B9E8", Offset = "0xF7B9E8", VA = "0xF7B9E8")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xF7BBD8", Offset = "0xF7BBD8", VA = "0xF7BBD8")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xF7BF24", Offset = "0xF7BF24", VA = "0xF7BF24")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xF7B898", Offset = "0xF7B898", VA = "0xF7B898")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xF7B940", Offset = "0xF7B940", VA = "0xF7B940")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	public class IKEffector
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64946C", Offset = "0x64946C")]
		public float positionWeight;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649484", Offset = "0x649484")]
		public float rotationWeight;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64949C", Offset = "0x64949C")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6494AC", Offset = "0x6494AC")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x1700016A")]
		public bool isEndEffector
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x11E8764", Offset = "0x11E8764", VA = "0x11E8764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655494", Offset = "0x655494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x11E876C", Offset = "0x11E876C", VA = "0x11E876C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6554A4", Offset = "0x6554A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x11E86FC", Offset = "0x11E86FC", VA = "0x11E86FC")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x11E8778", Offset = "0x11E8778", VA = "0x11E8778")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x11E8808", Offset = "0x11E8808", VA = "0x11E8808")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x11E894C", Offset = "0x11E894C", VA = "0x11E894C")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x11E8ACC", Offset = "0x11E8ACC", VA = "0x11E8ACC")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x11E8DF4", Offset = "0x11E8DF4", VA = "0x11E8DF4")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x11E912C", Offset = "0x11E912C", VA = "0x11E912C")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x11E9254", Offset = "0x11E9254", VA = "0x11E9254")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x11E92FC", Offset = "0x11E92FC", VA = "0x11E92FC")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x11E9824", Offset = "0x11E9824", VA = "0x11E9824")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x11E9850", Offset = "0x11E9850", VA = "0x11E9850")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x11E99A4", Offset = "0x11E99A4", VA = "0x11E99A4")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x11E9C1C", Offset = "0x11E9C1C", VA = "0x11E9C1C")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000268")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000269")]
		public class BoneMap
		{
			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x1700016B")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6000D11")]
				[Address(RVA = "0x8D0F9C", Offset = "0x8D0F9C", VA = "0x8D0F9C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700016C")]
			public bool isNodeBone
			{
				[Token(Token = "0x6000D14")]
				[Address(RVA = "0x8D1078", Offset = "0x8D1078", VA = "0x8D1078")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700016D")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6000D28")]
				[Address(RVA = "0x8D1448", Offset = "0x8D1448", VA = "0x8D1448")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x8D0F4C", Offset = "0x8D0F4C", VA = "0x8D0F4C")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x8D0FD8", Offset = "0x8D0FD8", VA = "0x8D0FD8")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x8D1028", Offset = "0x8D1028", VA = "0x8D1028")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x8D1088", Offset = "0x8D1088", VA = "0x8D1088")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x8D1110", Offset = "0x8D1110", VA = "0x8D1110")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x8D1118", Offset = "0x8D1118", VA = "0x8D1118")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x8D11F0", Offset = "0x8D11F0", VA = "0x8D11F0")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x8D1268", Offset = "0x8D1268", VA = "0x8D1268")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x8D132C", Offset = "0x8D132C", VA = "0x8D132C")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x8D1588", Offset = "0x8D1588", VA = "0x8D1588")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x8D15C0", Offset = "0x8D15C0", VA = "0x8D15C0")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x8D15F8", Offset = "0x8D15F8", VA = "0x8D15F8")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x8D1620", Offset = "0x8D1620", VA = "0x8D1620")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x8D170C", Offset = "0x8D170C", VA = "0x8D170C")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x8D1898", Offset = "0x8D1898", VA = "0x8D1898")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x8D18C8", Offset = "0x8D18C8", VA = "0x8D18C8")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x8D1990", Offset = "0x8D1990", VA = "0x8D1990")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x8D1A00", Offset = "0x8D1A00", VA = "0x8D1A00")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x8D1B50", Offset = "0x8D1B50", VA = "0x8D1B50")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x8D1CA0", Offset = "0x8D1CA0", VA = "0x8D1CA0")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x8D1D20", Offset = "0x8D1D20", VA = "0x8D1D20")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x8D1788", Offset = "0x8D1788", VA = "0x8D1788")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x8D1E58", Offset = "0x8D1E58", VA = "0x8D1E58")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x11EA134", Offset = "0x11EA134", VA = "0x11EA134", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x11EA13C", Offset = "0x11EA13C", VA = "0x11EA13C", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x11EA140", Offset = "0x11EA140", VA = "0x11EA140")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x11EA290", Offset = "0x11EA290", VA = "0x11EA290")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x11EA300", Offset = "0x11EA300", VA = "0x11EA300")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6494C4", Offset = "0x6494C4")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x11EA308", Offset = "0x11EA308", VA = "0x11EA308", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x11EA3BC", Offset = "0x11EA3BC", VA = "0x11EA3BC")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x11EA434", Offset = "0x11EA434", VA = "0x11EA434")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x11EA4C8", Offset = "0x11EA4C8", VA = "0x11EA4C8")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x11EA4E4", Offset = "0x11EA4E4", VA = "0x11EA4E4")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x11EA504", Offset = "0x11EA504", VA = "0x11EA504", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x11EA59C", Offset = "0x11EA59C", VA = "0x11EA59C")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x11EA5B8", Offset = "0x11EA5B8", VA = "0x11EA5B8")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x200026C")]
		public enum BoneMapType
		{
			[Token(Token = "0x4000D48")]
			Parent,
			[Token(Token = "0x4000D49")]
			Bone1,
			[Token(Token = "0x4000D4A")]
			Bone2,
			[Token(Token = "0x4000D4B")]
			Bone3
		}

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6494DC", Offset = "0x6494DC")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6494F4", Offset = "0x6494F4")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x11EA5E0", Offset = "0x11EA5E0", VA = "0x11EA5E0", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x11EA664", Offset = "0x11EA664", VA = "0x11EA664")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x11EA740", Offset = "0x11EA740", VA = "0x11EA740")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x11EA964", Offset = "0x11EA964", VA = "0x11EA964")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x11EAA58", Offset = "0x11EAA58", VA = "0x11EAA58")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x11EAB84", Offset = "0x11EAB84", VA = "0x11EAB84")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x11EABE8", Offset = "0x11EABE8", VA = "0x11EABE8")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x11EAC9C", Offset = "0x11EAC9C", VA = "0x11EAC9C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x11EAD60", Offset = "0x11EAD60", VA = "0x11EAD60", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x11EAFF8", Offset = "0x11EAFF8", VA = "0x11EAFF8")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x11EB06C", Offset = "0x11EB06C", VA = "0x11EB06C")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64950C", Offset = "0x64950C")]
		public int iterations;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649524", Offset = "0x649524")]
		public float twistWeight;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x11EB1E8", Offset = "0x11EB1E8", VA = "0x11EB1E8", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x11EB554", Offset = "0x11EB554", VA = "0x11EB554")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x11EB674", Offset = "0x11EB674", VA = "0x11EB674")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x11EB7D4", Offset = "0x11EB7D4", VA = "0x11EB7D4")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x11EB854", Offset = "0x11EB854", VA = "0x11EB854")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x11EB8C0", Offset = "0x11EB8C0", VA = "0x11EB8C0")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x11EB944", Offset = "0x11EB944", VA = "0x11EB944", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x11EBF88", Offset = "0x11EBF88", VA = "0x11EBF88")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x11EBFC0", Offset = "0x11EBFC0", VA = "0x11EBFC0")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x11EC244", Offset = "0x11EC244", VA = "0x11EC244")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x11EC544", Offset = "0x11EC544", VA = "0x11EC544")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x11EC630", Offset = "0x11EC630", VA = "0x11EC630")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x11EC6F8", Offset = "0x11EC6F8", VA = "0x11EC6F8")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x200026F")]
		public class Point
		{
			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6495E8", Offset = "0x6495E8")]
			public float weight;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x8D29A4", Offset = "0x8D29A4", VA = "0x8D29A4")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x8D29F4", Offset = "0x8D29F4", VA = "0x8D29F4")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x8D2A94", Offset = "0x8D2A94", VA = "0x8D2A94")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x8D2ACC", Offset = "0x8D2ACC", VA = "0x8D2ACC")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x8D2B04", Offset = "0x8D2B04", VA = "0x8D2B04")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x8D2B54", Offset = "0x8D2B54", VA = "0x8D2B54")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x8D2558", Offset = "0x8D2558", VA = "0x8D2558")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000270")]
		public class Bone : Point
		{
			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x1700016F")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6000D67")]
				[Address(RVA = "0x8D1E74", Offset = "0x8D1E74", VA = "0x8D1E74")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D68")]
				[Address(RVA = "0x8D1F78", Offset = "0x8D1F78", VA = "0x8D1F78")]
				set
				{
				}
			}

			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x8D2008", Offset = "0x8D2008", VA = "0x8D2008")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x8D21B8", Offset = "0x8D21B8", VA = "0x8D21B8")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x8D238C", Offset = "0x8D238C", VA = "0x8D238C")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x8D24EC", Offset = "0x8D24EC", VA = "0x8D24EC")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x8D2514", Offset = "0x8D2514", VA = "0x8D2514")]
			public Bone()
			{
			}

			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x8D2594", Offset = "0x8D2594", VA = "0x8D2594")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x8D25EC", Offset = "0x8D25EC", VA = "0x8D25EC")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000271")]
		public class Node : Point
		{
			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x8D292C", Offset = "0x8D292C", VA = "0x8D292C")]
			public Node()
			{
			}

			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x8D2930", Offset = "0x8D2930", VA = "0x8D2930")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x8D2960", Offset = "0x8D2960", VA = "0x8D2960")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x2000272")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000273")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64954C", Offset = "0x64954C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64954C", Offset = "0x64954C")]
		public float IKPositionWeight;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6495A0", Offset = "0x6495A0")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		protected Transform root;

		[Token(Token = "0x1700016E")]
		public bool initiated
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x11ECBA8", Offset = "0x11ECBA8", VA = "0x11ECBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6554B4", Offset = "0x6554B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x11ECBB0", Offset = "0x11ECBB0", VA = "0x11ECBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6554C4", Offset = "0x6554C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x11EC958", Offset = "0x11EC958", VA = "0x11EC958")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x11EC9D0", Offset = "0x11EC9D0", VA = "0x11EC9D0")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x11EA0BC", Offset = "0x11EA0BC", VA = "0x11EA0BC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x11ECB50", Offset = "0x11ECB50", VA = "0x11ECB50", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x11ECB5C", Offset = "0x11ECB5C", VA = "0x11ECB5C")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x11ECB68", Offset = "0x11ECB68", VA = "0x11ECB68")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x11ECB70", Offset = "0x11ECB70", VA = "0x11ECB70")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x11ECBA0", Offset = "0x11ECBA0", VA = "0x11ECBA0")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000D55")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000D56")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000D57")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000D58")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000D59")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6000D5A")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x11ECBBC", Offset = "0x11ECBBC", VA = "0x11ECBBC")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x11ECBD4", Offset = "0x11ECBD4", VA = "0x11ECBD4")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x11ECD0C", Offset = "0x11ECD0C", VA = "0x11ECD0C")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x11ECDB8", Offset = "0x11ECDB8", VA = "0x11ECDB8")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x11ED040", Offset = "0x11ED040", VA = "0x11ED040")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000274")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649600", Offset = "0x649600")]
		public float poleWeight;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649618", Offset = "0x649618")]
		public float clampWeight;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649630", Offset = "0x649630")]
		public int clampSmoothing;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000170")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x11ED0D4", Offset = "0x11ED0D4", VA = "0x11ED0D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000171")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x11ED110", Offset = "0x11ED110", VA = "0x11ED110")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000172")]
		protected override int minBones
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x11EDBC0", Offset = "0x11EDBC0", VA = "0x11EDBC0", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000173")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x11EDFA4", Offset = "0x11EDFA4", VA = "0x11EDFA4", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x11ED058", Offset = "0x11ED058", VA = "0x11ED058")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x11ED14C", Offset = "0x11ED14C", VA = "0x11ED14C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x11ED36C", Offset = "0x11ED36C", VA = "0x11ED36C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x11EDB0C", Offset = "0x11EDB0C", VA = "0x11EDB0C")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x11ED89C", Offset = "0x11ED89C", VA = "0x11ED89C")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x11EDBC8", Offset = "0x11EDBC8", VA = "0x11EDBC8")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x11EE018", Offset = "0x11EE018", VA = "0x11EE018")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000275")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649648", Offset = "0x649648")]
		public float IKRotationWeight;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x11EE0EC", Offset = "0x11EE0EC", VA = "0x11EE0EC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x11EE4D4", Offset = "0x11EE4D4", VA = "0x11EE4D4")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x11EE588", Offset = "0x11EE588", VA = "0x11EE588", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x11EE71C", Offset = "0x11EE71C", VA = "0x11EE71C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x11EE8B0", Offset = "0x11EE8B0", VA = "0x11EE8B0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x11EE90C", Offset = "0x11EE90C", VA = "0x11EE90C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x11EE97C", Offset = "0x11EE97C", VA = "0x11EE97C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x11EECEC", Offset = "0x11EECEC", VA = "0x11EECEC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x11EED18", Offset = "0x11EED18", VA = "0x11EED18")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x11EE9E0", Offset = "0x11EE9E0", VA = "0x11EE9E0")]
		private void Read()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x11EED84", Offset = "0x11EED84", VA = "0x11EED84")]
		private void Write()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x11EEF10", Offset = "0x11EEF10", VA = "0x11EEF10")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000276")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x11EF0D4", Offset = "0x11EF0D4", VA = "0x11EF0D4")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x11EF184", Offset = "0x11EF184", VA = "0x11EF184", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x11EF67C", Offset = "0x11EF67C", VA = "0x11EF67C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x11EFC74", Offset = "0x11EFC74", VA = "0x11EFC74")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x11F0250", Offset = "0x11F0250", VA = "0x11F0250")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000277")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x17000174")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x11F11A0", Offset = "0x11F11A0", VA = "0x11F11A0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x11F0254", Offset = "0x11F0254", VA = "0x11F0254")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x11F0818", Offset = "0x11F0818", VA = "0x11F0818")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x11F0958", Offset = "0x11F0958", VA = "0x11F0958", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x11F09EC", Offset = "0x11F09EC", VA = "0x11F09EC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x11F0EE0", Offset = "0x11F0EE0", VA = "0x11F0EE0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x11F11A8", Offset = "0x11F11A8", VA = "0x11F11A8")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x11F0330", Offset = "0x11F0330", VA = "0x11F0330")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x11F0904", Offset = "0x11F0904", VA = "0x11F0904")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x11F1144", Offset = "0x11F1144", VA = "0x11F1144")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x11F068C", Offset = "0x11F068C", VA = "0x11F068C")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x11F17F8", Offset = "0x11F17F8", VA = "0x11F17F8")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x11F186C", Offset = "0x11F186C", VA = "0x11F186C")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x11F1934", Offset = "0x11F1934", VA = "0x11F1934")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x11F19E4", Offset = "0x11F19E4", VA = "0x11F19E4")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x11F0C90", Offset = "0x11F0C90", VA = "0x11F0C90")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x11F0DB8", Offset = "0x11F0DB8", VA = "0x11F0DB8")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x11F1AE8", Offset = "0x11F1AE8", VA = "0x11F1AE8")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x11F13C8", Offset = "0x11F13C8", VA = "0x11F13C8")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x11F08F4", Offset = "0x11F08F4", VA = "0x11F08F4")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x11F2078", Offset = "0x11F2078", VA = "0x11F2078")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x11F1C2C", Offset = "0x11F1C2C", VA = "0x11F1C2C")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x11F1224", Offset = "0x11F1224", VA = "0x11F1224")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x11F1304", Offset = "0x11F1304", VA = "0x11F1304")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x11F2144", Offset = "0x11F2144", VA = "0x11F2144")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649660", Offset = "0x649660")]
		public float rootPin;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x11F21D8", Offset = "0x11F21D8", VA = "0x11F21D8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x11F2864", Offset = "0x11F2864", VA = "0x11F2864", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x11F28FC", Offset = "0x11F28FC", VA = "0x11F28FC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x11F299C", Offset = "0x11F299C", VA = "0x11F299C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x11F2AA8", Offset = "0x11F2AA8", VA = "0x11F2AA8")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x11F2B44", Offset = "0x11F2B44", VA = "0x11F2B44", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x11F2F74", Offset = "0x11F2F74", VA = "0x11F2F74", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x11F3184", Offset = "0x11F3184", VA = "0x11F3184", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x11F3020", Offset = "0x11F3020", VA = "0x11F3020")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x11F2D30", Offset = "0x11F2D30", VA = "0x11F2D30")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x11F321C", Offset = "0x11F321C", VA = "0x11F321C")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649678", Offset = "0x649678")]
		public int iterations;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x11F329C", Offset = "0x11F329C", VA = "0x11F329C")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x11F338C", Offset = "0x11F338C", VA = "0x11F338C")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x11F33E8", Offset = "0x11F33E8", VA = "0x11F33E8")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x11E91F8", Offset = "0x11E91F8", VA = "0x11E91F8")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x11E90AC", Offset = "0x11E90AC", VA = "0x11E90AC")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x11F3518", Offset = "0x11F3518", VA = "0x11F3518", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x11F36C4", Offset = "0x11F36C4", VA = "0x11F36C4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x11F3834", Offset = "0x11F3834", VA = "0x11F3834", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x11F3A40", Offset = "0x11F3A40", VA = "0x11F3A40", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x11F3B18", Offset = "0x11F3B18", VA = "0x11F3B18", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x11F3BF8", Offset = "0x11F3BF8", VA = "0x11F3BF8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x11F3D68", Offset = "0x11F3D68", VA = "0x11F3D68", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x11F3EC8", Offset = "0x11F3EC8", VA = "0x11F3EC8", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x11F410C", Offset = "0x11F410C", VA = "0x11F410C", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x11F43D8", Offset = "0x11F43D8", VA = "0x11F43D8", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x11F441C", Offset = "0x11F441C", VA = "0x11F441C", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x11F4500", Offset = "0x11F4500", VA = "0x11F4500")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x4000DA4")]
		Body,
		[Token(Token = "0x4000DA5")]
		LeftShoulder,
		[Token(Token = "0x4000DA6")]
		RightShoulder,
		[Token(Token = "0x4000DA7")]
		LeftThigh,
		[Token(Token = "0x4000DA8")]
		RightThigh,
		[Token(Token = "0x4000DA9")]
		LeftHand,
		[Token(Token = "0x4000DAA")]
		RightHand,
		[Token(Token = "0x4000DAB")]
		LeftFoot,
		[Token(Token = "0x4000DAC")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000DAE")]
		LeftArm,
		[Token(Token = "0x4000DAF")]
		RightArm,
		[Token(Token = "0x4000DB0")]
		LeftLeg,
		[Token(Token = "0x4000DB1")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x200027C")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649690", Offset = "0x649690")]
		public float spineStiffness;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6496A8", Offset = "0x6496A8")]
		public float pullBodyVertical;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6496C0", Offset = "0x6496C0")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6496D8", Offset = "0x6496D8")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x17000175")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x11F4648", Offset = "0x11F4648", VA = "0x11F4648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x11F4790", Offset = "0x11F4790", VA = "0x11F4790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x11F4798", Offset = "0x11F4798", VA = "0x11F4798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x11F47A0", Offset = "0x11F47A0", VA = "0x11F47A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x11F47A8", Offset = "0x11F47A8", VA = "0x11F47A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x11F47B0", Offset = "0x11F47B0", VA = "0x11F47B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x11F47B8", Offset = "0x11F47B8", VA = "0x11F47B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x11F47C0", Offset = "0x11F47C0", VA = "0x11F47C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x11F47C8", Offset = "0x11F47C8", VA = "0x11F47C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x11F47D0", Offset = "0x11F47D0", VA = "0x11F47D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x11F4808", Offset = "0x11F4808", VA = "0x11F4808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x11F4840", Offset = "0x11F4840", VA = "0x11F4840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x11F4878", Offset = "0x11F4878", VA = "0x11F4878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x11F48B0", Offset = "0x11F48B0", VA = "0x11F48B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x11F48E4", Offset = "0x11F48E4", VA = "0x11F48E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x11F491C", Offset = "0x11F491C", VA = "0x11F491C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x11F4954", Offset = "0x11F4954", VA = "0x11F4954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x11F498C", Offset = "0x11F498C", VA = "0x11F498C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x11F6AC4", Offset = "0x11F6AC4", VA = "0x11F6AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6554D4", Offset = "0x6554D4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x11F6AD0", Offset = "0x11F6AD0", VA = "0x11F6AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6554E4", Offset = "0x6554E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x11F49C0", Offset = "0x11F49C0", VA = "0x11F49C0")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x11F4ACC", Offset = "0x11F4ACC", VA = "0x11F4ACC")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x11F4A14", Offset = "0x11F4A14", VA = "0x11F4A14")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x11F4B58", Offset = "0x11F4B58", VA = "0x11F4B58")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x11F4650", Offset = "0x11F4650", VA = "0x11F4650")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x11F4C28", Offset = "0x11F4C28", VA = "0x11F4C28")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x11F4CE0", Offset = "0x11F4CE0", VA = "0x11F4CE0")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x11F4D94", Offset = "0x11F4D94", VA = "0x11F4D94")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x11F4E48", Offset = "0x11F4E48", VA = "0x11F4E48")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x11F4E50", Offset = "0x11F4E50", VA = "0x11F4E50")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x11F4E84", Offset = "0x11F4E84", VA = "0x11F4E84")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x11F4F4C", Offset = "0x11F4F4C", VA = "0x11F4F4C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x11F50F4", Offset = "0x11F50F4", VA = "0x11F50F4")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x11F6544", Offset = "0x11F6544", VA = "0x11F6544")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x11F6958", Offset = "0x11F6958", VA = "0x11F6958")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x11F69B8", Offset = "0x11F69B8", VA = "0x11F69B8")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x11F67E0", Offset = "0x11F67E0", VA = "0x11F67E0")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x11F689C", Offset = "0x11F689C", VA = "0x11F689C")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x11F6ADC", Offset = "0x11F6ADC", VA = "0x11F6ADC")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x11F6BB4", Offset = "0x11F6BB4", VA = "0x11F6BB4", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x11F6CAC", Offset = "0x11F6CAC", VA = "0x11F6CAC")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x11F6DD4", Offset = "0x11F6DD4", VA = "0x11F6DD4")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x11F6F18", Offset = "0x11F6F18", VA = "0x11F6F18")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x11F7048", Offset = "0x11F7048", VA = "0x11F7048", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x11F7284", Offset = "0x11F7284", VA = "0x11F7284", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x11F7308", Offset = "0x11F7308", VA = "0x11F7308")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027D")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x17000188")]
		protected virtual int minBones
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x11F7BBC", Offset = "0x11F7BBC", VA = "0x11F7BBC", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000189")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x11F7BC4", Offset = "0x11F7BC4", VA = "0x11F7BC4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018A")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x11F7BCC", Offset = "0x11F7BCC", VA = "0x11F7BCC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018B")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x11F7BDC", Offset = "0x11F7BDC", VA = "0x11F7BDC", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700018C")]
		protected float positionOffset
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x11EFC20", Offset = "0x11EFC20", VA = "0x11EFC20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x11F7314", Offset = "0x11F7314", VA = "0x11F7314")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x11F74CC", Offset = "0x11F74CC", VA = "0x11F74CC")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x11F762C", Offset = "0x11F762C", VA = "0x11F762C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x11F7698", Offset = "0x11F7698", VA = "0x11F7698", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x11F7718", Offset = "0x11F7718", VA = "0x11F7718", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x11F7AC4", Offset = "0x11F7AC4", VA = "0x11F7AC4", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x11F7ACC", Offset = "0x11F7ACC", VA = "0x11F7ACC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x11F7BD4", Offset = "0x11F7BD4", VA = "0x11F7BD4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x11F7BD8", Offset = "0x11F7BD8", VA = "0x11F7BD8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x11EF204", Offset = "0x11EF204", VA = "0x11EF204")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x11EF908", Offset = "0x11EF908", VA = "0x11EF908")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x11F7CA4", Offset = "0x11F7CA4", VA = "0x11F7CA4")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x11EE068", Offset = "0x11EE068", VA = "0x11EE068")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027E")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6496E8", Offset = "0x6496E8")]
		public float IKRotationWeight;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x11F7E98", Offset = "0x11F7E98", VA = "0x11F7E98", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x11F8280", Offset = "0x11F8280", VA = "0x11F8280")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x11F8334", Offset = "0x11F8334", VA = "0x11F8334", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x11F84C8", Offset = "0x11F84C8", VA = "0x11F84C8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x11F865C", Offset = "0x11F865C", VA = "0x11F865C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x11F86B8", Offset = "0x11F86B8", VA = "0x11F86B8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x11F8728", Offset = "0x11F8728", VA = "0x11F8728", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x11F8A98", Offset = "0x11F8A98", VA = "0x11F8A98", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x11F8AC4", Offset = "0x11F8AC4", VA = "0x11F8AC4")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x11F878C", Offset = "0x11F878C", VA = "0x11F878C")]
		private void Read()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x11F8B58", Offset = "0x11F8B58", VA = "0x11F8B58")]
		private void Write()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x11F8CE4", Offset = "0x11F8CE4", VA = "0x11F8CE4")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027F")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x2000280")]
		public enum BendModifier
		{
			[Token(Token = "0x4000DDC")]
			Animation,
			[Token(Token = "0x4000DDD")]
			Target,
			[Token(Token = "0x4000DDE")]
			Parent,
			[Token(Token = "0x4000DDF")]
			Arm,
			[Token(Token = "0x4000DE0")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x2000281")]
		public struct AxisDirection
		{
			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x8D2DE8", Offset = "0x8D2DE8", VA = "0x8D2DE8")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649700", Offset = "0x649700")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649718", Offset = "0x649718")]
		public float bendModifierWeight;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x1700018D")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x11F9F3C", Offset = "0x11F9F3C", VA = "0x11F9F3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x11F8EA8", Offset = "0x11F8EA8", VA = "0x11F8EA8")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x11F8EF8", Offset = "0x11F8EF8", VA = "0x11F8EF8")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x11F8F44", Offset = "0x11F8F44", VA = "0x11F8F44", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x11F9418", Offset = "0x11F9418", VA = "0x11F9418", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x11F9D64", Offset = "0x11F9D64", VA = "0x11F9D64", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x11F9E10", Offset = "0x11F9E10", VA = "0x11F9E10")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x11F9E9C", Offset = "0x11F9E9C", VA = "0x11F9E9C")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x11F9240", Offset = "0x11F9240", VA = "0x11F9240")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x11F94FC", Offset = "0x11F94FC", VA = "0x11F94FC")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000282")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000283")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x17000194")]
			public Vector3 forward
			{
				[Token(Token = "0x6000E41")]
				[Address(RVA = "0x8D307C", Offset = "0x8D307C", VA = "0x8D307C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x8D2E48", Offset = "0x8D2E48", VA = "0x8D2E48")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x8D2E4C", Offset = "0x8D2E4C", VA = "0x8D2E4C")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x8D2E7C", Offset = "0x8D2E7C", VA = "0x8D2E7C")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x8D2F74", Offset = "0x8D2F74", VA = "0x8D2F74")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649730", Offset = "0x649730")]
		public float bodyWeight;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649748", Offset = "0x649748")]
		public float headWeight;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649760", Offset = "0x649760")]
		public float eyesWeight;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649778", Offset = "0x649778")]
		public float clampWeight;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649790", Offset = "0x649790")]
		public float clampWeightHead;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6497A8", Offset = "0x6497A8")]
		public float clampWeightEyes;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6497C0", Offset = "0x6497C0")]
		public int clampSmoothing;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x1700018E")]
		protected bool spineIsValid
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xF0F8D8", Offset = "0xF0F8D8", VA = "0xF0F8D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018F")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0xF0FAA8", Offset = "0xF0FAA8", VA = "0xF0FAA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		protected bool headIsValid
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xF0F9B8", Offset = "0xF0F9B8", VA = "0xF0F9B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000191")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xF0FACC", Offset = "0xF0FACC", VA = "0xF0FACC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xF0F9C8", Offset = "0xF0F9C8", VA = "0xF0F9C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xF0FB44", Offset = "0xF0FB44", VA = "0xF0FB44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xF0F148", Offset = "0xF0F148", VA = "0xF0F148")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xF0F178", Offset = "0xF0F178", VA = "0xF0F178")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xF0F1D0", Offset = "0xF0F1D0", VA = "0xF0F1D0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xF0F24C", Offset = "0xF0F24C", VA = "0xF0F24C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xF0F2E4", Offset = "0xF0F2E4", VA = "0xF0F2E4")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xF0F3A4", Offset = "0xF0F3A4", VA = "0xF0F3A4")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xF0F4A0", Offset = "0xF0F4A0", VA = "0xF0F4A0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xF0F5CC", Offset = "0xF0F5CC", VA = "0xF0F5CC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xF0F70C", Offset = "0xF0F70C", VA = "0xF0F70C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xF0FB68", Offset = "0xF0FB68", VA = "0xF0FB68", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xF0FDD8", Offset = "0xF0FDD8", VA = "0xF0FDD8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xF0FF74", Offset = "0xF0FF74", VA = "0xF0FF74")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xF101D8", Offset = "0xF101D8", VA = "0xF101D8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xF104EC", Offset = "0xF104EC", VA = "0xF104EC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xF105BC", Offset = "0xF105BC", VA = "0xF105BC")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xF1075C", Offset = "0xF1075C", VA = "0xF1075C")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xF10980", Offset = "0xF10980", VA = "0xF10980")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xF10D34", Offset = "0xF10D34", VA = "0xF10D34")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xF1002C", Offset = "0xF1002C", VA = "0xF1002C")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xF10FA4", Offset = "0xF10FA4", VA = "0xF10FA4")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000284")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000285")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x8D30B8", Offset = "0x8D30B8", VA = "0x8D30B8")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x8D31B4", Offset = "0x8D31B4", VA = "0x8D31B4")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x8D31E4", Offset = "0x8D31E4", VA = "0x8D31E4")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x8D3220", Offset = "0x8D3220", VA = "0x8D3220")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6497D8", Offset = "0x6497D8")]
		public float IKRotationWeight;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xF11208", Offset = "0xF11208", VA = "0xF11208")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xF11364", Offset = "0xF11364", VA = "0xF11364")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xF114A8", Offset = "0xF114A8", VA = "0xF114A8")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xF114B4", Offset = "0xF114B4", VA = "0xF114B4")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xF114E4", Offset = "0xF114E4", VA = "0xF114E4")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xF114F0", Offset = "0xF114F0", VA = "0xF114F0")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xF114F8", Offset = "0xF114F8", VA = "0xF114F8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xF1161C", Offset = "0xF1161C", VA = "0xF1161C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xF11738", Offset = "0xF11738", VA = "0xF11738", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xF11784", Offset = "0xF11784", VA = "0xF11784", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xF117E4", Offset = "0xF117E4", VA = "0xF117E4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xF11BDC", Offset = "0xF11BDC", VA = "0xF11BDC")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xF11C5C", Offset = "0xF11C5C", VA = "0xF11C5C")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xF12018", Offset = "0xF12018", VA = "0xF12018")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xF12180", Offset = "0xF12180", VA = "0xF12180", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xF122E8", Offset = "0xF122E8", VA = "0xF122E8")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xF1225C", Offset = "0xF1225C", VA = "0xF1225C")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xF123EC", Offset = "0xF123EC", VA = "0xF123EC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xF12BC0", Offset = "0xF12BC0", VA = "0xF12BC0", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xF12BC4", Offset = "0xF12BC4", VA = "0xF12BC4", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xF12BC8", Offset = "0xF12BC8", VA = "0xF12BC8", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xF129D8", Offset = "0xF129D8", VA = "0xF129D8")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xF12BCC", Offset = "0xF12BCC", VA = "0xF12BCC")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000286")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000287")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x2000288")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4000E42")]
				YawPitch,
				[Token(Token = "0x4000E43")]
				FromTo
			}

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6499DC", Offset = "0x6499DC")]
			public Transform target;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649A14", Offset = "0x649A14")]
			public Transform bendGoal;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649A4C", Offset = "0x649A4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649A4C", Offset = "0x649A4C")]
			public float positionWeight;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649AA0", Offset = "0x649AA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649AA0", Offset = "0x649AA0")]
			public float rotationWeight;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649AF4", Offset = "0x649AF4")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649B2C", Offset = "0x649B2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649B2C", Offset = "0x649B2C")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649B80", Offset = "0x649B80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649B80", Offset = "0x649B80")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649BD4", Offset = "0x649BD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649BD4", Offset = "0x649BD4")]
			public float bendGoalWeight;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649C28", Offset = "0x649C28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649C28", Offset = "0x649C28")]
			public float swivelOffset;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649C84", Offset = "0x649C84")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649CBC", Offset = "0x649CBC")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649CF4", Offset = "0x649CF4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649CF4", Offset = "0x649CF4")]
			public float armLengthMlp;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649D4C", Offset = "0x649D4C")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649DC4", Offset = "0x649DC4")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649DD4", Offset = "0x649DD4")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4000E3F")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4000E40")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x17000196")]
			public Vector3 position
			{
				[Token(Token = "0x6000E7B")]
				[Address(RVA = "0x8D3224", Offset = "0x8D3224", VA = "0x8D3224")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655514", Offset = "0x655514")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000E7C")]
				[Address(RVA = "0x8D3230", Offset = "0x8D3230", VA = "0x8D3230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655524", Offset = "0x655524")]
				private set
				{
				}
			}

			[Token(Token = "0x17000197")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000E7D")]
				[Address(RVA = "0x8D323C", Offset = "0x8D323C", VA = "0x8D323C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655534", Offset = "0x655534")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000E7E")]
				[Address(RVA = "0x8D3248", Offset = "0x8D3248", VA = "0x8D3248")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655544", Offset = "0x655544")]
				private set
				{
				}
			}

			[Token(Token = "0x17000198")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6000E7F")]
				[Address(RVA = "0x8D3254", Offset = "0x8D3254", VA = "0x8D3254")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000199")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6000E80")]
				[Address(RVA = "0x8D3288", Offset = "0x8D3288", VA = "0x8D3288")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6000E81")]
				[Address(RVA = "0x8D32C8", Offset = "0x8D32C8", VA = "0x8D32C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019B")]
			private VirtualBone hand
			{
				[Token(Token = "0x6000E82")]
				[Address(RVA = "0x8D3314", Offset = "0x8D3314", VA = "0x8D3314")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x8D3360", Offset = "0x8D3360", VA = "0x8D3360", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x8D3BD8", Offset = "0x8D3BD8", VA = "0x8D3BD8", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x8D3D94", Offset = "0x8D3D94", VA = "0x8D3D94", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x8D3DB8", Offset = "0x8D3DB8", VA = "0x8D3DB8")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x8D4058", Offset = "0x8D4058", VA = "0x8D4058")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x8D5474", Offset = "0x8D5474", VA = "0x8D5474", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x8D54A0", Offset = "0x8D54A0", VA = "0x8D54A0", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x8D4FF4", Offset = "0x8D4FF4", VA = "0x8D4FF4")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x8D5070", Offset = "0x8D5070", VA = "0x8D5070")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x8D56C0", Offset = "0x8D56C0", VA = "0x8D56C0")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x8D57E4", Offset = "0x8D57E4", VA = "0x8D57E4")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000289")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649DE4", Offset = "0x649DE4")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649DF4", Offset = "0x649DF4")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x1700019C")]
			public float sqrMag
			{
				[Token(Token = "0x6000E93")]
				[Address(RVA = "0x13C877C", Offset = "0x13C877C", VA = "0x13C877C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655554", Offset = "0x655554")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E94")]
				[Address(RVA = "0x13C8784", Offset = "0x13C8784", VA = "0x13C8784")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655564", Offset = "0x655564")]
				private set
				{
				}
			}

			[Token(Token = "0x1700019D")]
			public float mag
			{
				[Token(Token = "0x6000E95")]
				[Address(RVA = "0x13C878C", Offset = "0x13C878C", VA = "0x13C878C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655574", Offset = "0x655574")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E96")]
				[Address(RVA = "0x13C8794", Offset = "0x13C8794", VA = "0x13C8794")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655584", Offset = "0x655584")]
				private set
				{
				}
			}

			[Token(Token = "0x6000E8E")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6000E8F")]
			public abstract void PreSolve();

			[Token(Token = "0x6000E90")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6000E91")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x6000E92")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x13C879C", Offset = "0x13C879C", VA = "0x13C879C")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x13C87A4", Offset = "0x13C87A4", VA = "0x13C87A4")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x13C8A64", Offset = "0x13C8A64", VA = "0x13C8A64")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x13C8AF8", Offset = "0x13C8AF8", VA = "0x13C8AF8")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x13C8CC8", Offset = "0x13C8CC8", VA = "0x13C8CC8")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x13C8D1C", Offset = "0x13C8D1C", VA = "0x13C8D1C")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x13C8E54", Offset = "0x13C8E54", VA = "0x13C8E54")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x13C8F94", Offset = "0x13C8F94", VA = "0x13C8F94")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x13C90D4", Offset = "0x13C90D4", VA = "0x13C90D4")]
			public void Visualize()
			{
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x13C90FC", Offset = "0x13C90FC", VA = "0x13C90FC")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028A")]
		public class Footstep
		{
			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x649E14", Offset = "0x649E14")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x1700019E")]
			public bool isStepping
			{
				[Token(Token = "0x6000EA1")]
				[Address(RVA = "0x13C917C", Offset = "0x13C917C", VA = "0x13C917C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019F")]
			public float stepProgress
			{
				[Token(Token = "0x6000EA2")]
				[Address(RVA = "0x13C9190", Offset = "0x13C9190", VA = "0x13C9190")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655594", Offset = "0x655594")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000EA3")]
				[Address(RVA = "0x13C9198", Offset = "0x13C9198", VA = "0x13C9198")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6555A4", Offset = "0x6555A4")]
				private set
				{
				}
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x13C91A0", Offset = "0x13C91A0", VA = "0x13C91A0")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x13C92D8", Offset = "0x13C92D8", VA = "0x13C92D8")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x13C9320", Offset = "0x13C9320", VA = "0x13C9320")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x13C94E4", Offset = "0x13C94E4", VA = "0x13C94E4")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x13C9658", Offset = "0x13C9658", VA = "0x13C9658")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x13C97B0", Offset = "0x13C97B0", VA = "0x13C97B0")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028B")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649E24", Offset = "0x649E24")]
			public Transform target;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649E5C", Offset = "0x649E5C")]
			public Transform bendGoal;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649E94", Offset = "0x649E94")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649E94", Offset = "0x649E94")]
			public float positionWeight;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649EE8", Offset = "0x649EE8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649EE8", Offset = "0x649EE8")]
			public float rotationWeight;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649F3C", Offset = "0x649F3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649F3C", Offset = "0x649F3C")]
			public float bendGoalWeight;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649F90", Offset = "0x649F90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649F90", Offset = "0x649F90")]
			public float swivelOffset;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x649FEC", Offset = "0x649FEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649FEC", Offset = "0x649FEC")]
			public float bendToTargetWeight;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A040", Offset = "0x64A040")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A040", Offset = "0x64A040")]
			public float legLengthMlp;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A098", Offset = "0x64A098")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64A140", Offset = "0x64A140")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64A150", Offset = "0x64A150")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64A160", Offset = "0x64A160")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64A170", Offset = "0x64A170")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x170001A0")]
			public Vector3 position
			{
				[Token(Token = "0x6000EAA")]
				[Address(RVA = "0x13C98EC", Offset = "0x13C98EC", VA = "0x13C98EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6555B4", Offset = "0x6555B4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EAB")]
				[Address(RVA = "0x13C98F8", Offset = "0x13C98F8", VA = "0x13C98F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6555C4", Offset = "0x6555C4")]
				private set
				{
				}
			}

			[Token(Token = "0x170001A1")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000EAC")]
				[Address(RVA = "0x13C9904", Offset = "0x13C9904", VA = "0x13C9904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6555D4", Offset = "0x6555D4")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000EAD")]
				[Address(RVA = "0x13C9910", Offset = "0x13C9910", VA = "0x13C9910")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6555E4", Offset = "0x6555E4")]
				private set
				{
				}
			}

			[Token(Token = "0x170001A2")]
			public bool hasToes
			{
				[Token(Token = "0x6000EAE")]
				[Address(RVA = "0x13C991C", Offset = "0x13C991C", VA = "0x13C991C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6555F4", Offset = "0x6555F4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000EAF")]
				[Address(RVA = "0x13C9924", Offset = "0x13C9924", VA = "0x13C9924")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655604", Offset = "0x655604")]
				private set
				{
				}
			}

			[Token(Token = "0x170001A3")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6000EB0")]
				[Address(RVA = "0x13C9930", Offset = "0x13C9930", VA = "0x13C9930")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private VirtualBone calf
			{
				[Token(Token = "0x6000EB1")]
				[Address(RVA = "0x13C9964", Offset = "0x13C9964", VA = "0x13C9964")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			private VirtualBone foot
			{
				[Token(Token = "0x6000EB2")]
				[Address(RVA = "0x13C999C", Offset = "0x13C999C", VA = "0x13C999C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A6")]
			private VirtualBone toes
			{
				[Token(Token = "0x6000EB3")]
				[Address(RVA = "0x13C99D4", Offset = "0x13C99D4", VA = "0x13C99D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6000EB4")]
				[Address(RVA = "0x13C9A0C", Offset = "0x13C9A0C", VA = "0x13C9A0C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A8")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6000EB5")]
				[Address(RVA = "0x13C9A4C", Offset = "0x13C9A4C", VA = "0x13C9A4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655614", Offset = "0x655614")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EB6")]
				[Address(RVA = "0x13C9A58", Offset = "0x13C9A58", VA = "0x13C9A58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655624", Offset = "0x655624")]
				private set
				{
				}
			}

			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x13C9A64", Offset = "0x13C9A64", VA = "0x13C9A64", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x13CA120", Offset = "0x13CA120", VA = "0x13CA120", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x13CA6DC", Offset = "0x13CA6DC", VA = "0x13CA6DC", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x13CA68C", Offset = "0x13CA68C", VA = "0x13CA68C")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x13CA51C", Offset = "0x13CA51C", VA = "0x13CA51C")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x13CAAC4", Offset = "0x13CAAC4", VA = "0x13CAAC4")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x13CB370", Offset = "0x13CB370", VA = "0x13CB370")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x13CAC4C", Offset = "0x13CAC4C", VA = "0x13CAC4C")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x13CB668", Offset = "0x13CB668", VA = "0x13CB668", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x13CB884", Offset = "0x13CB884", VA = "0x13CB884", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x13CB8D0", Offset = "0x13CB8D0", VA = "0x13CB8D0")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028C")]
		public class Locomotion
		{
			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A180", Offset = "0x64A180")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A180", Offset = "0x64A180")]
			public float weight;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A1D4", Offset = "0x64A1D4")]
			public float footDistance;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A20C", Offset = "0x64A20C")]
			public float stepThreshold;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A244", Offset = "0x64A244")]
			public float angleThreshold;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A27C", Offset = "0x64A27C")]
			public float comAngleMlp;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A2B4", Offset = "0x64A2B4")]
			public float maxVelocity;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A2EC", Offset = "0x64A2EC")]
			public float velocityFactor;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A324", Offset = "0x64A324")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A324", Offset = "0x64A324")]
			public float maxLegStretch;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A37C", Offset = "0x64A37C")]
			public float rootSpeed;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A3B4", Offset = "0x64A3B4")]
			public float stepSpeed;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A3EC", Offset = "0x64A3EC")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A424", Offset = "0x64A424")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A45C", Offset = "0x64A45C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A45C", Offset = "0x64A45C")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A4B4", Offset = "0x64A4B4")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A4EC", Offset = "0x64A4EC")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A524", Offset = "0x64A524")]
			public Vector3 offset;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A59C", Offset = "0x64A59C")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A5D4", Offset = "0x64A5D4")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64A60C", Offset = "0x64A60C")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x170001A9")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6000EC2")]
				[Address(RVA = "0x13CB9AC", Offset = "0x13CB9AC", VA = "0x13CB9AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655634", Offset = "0x655634")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EC3")]
				[Address(RVA = "0x13CB9B8", Offset = "0x13CB9B8", VA = "0x13CB9B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655644", Offset = "0x655644")]
				private set
				{
				}
			}

			[Token(Token = "0x170001AA")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6000EC9")]
				[Address(RVA = "0x13CD4C4", Offset = "0x13CD4C4", VA = "0x13CD4C4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001AB")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x6000ECA")]
				[Address(RVA = "0x13CD504", Offset = "0x13CD504", VA = "0x13CD504")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001AC")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x6000ECB")]
				[Address(RVA = "0x13CD548", Offset = "0x13CD548", VA = "0x13CD548")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x170001AD")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x6000ECC")]
				[Address(RVA = "0x13CD588", Offset = "0x13CD588", VA = "0x13CD588")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x13CB9C4", Offset = "0x13CB9C4", VA = "0x13CB9C4")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x13CBC84", Offset = "0x13CBC84", VA = "0x13CBC84")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x13CBE54", Offset = "0x13CBE54", VA = "0x13CBE54")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x13CC09C", Offset = "0x13CC09C", VA = "0x13CC09C")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x13CC160", Offset = "0x13CC160", VA = "0x13CC160")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x13CD23C", Offset = "0x13CD23C", VA = "0x13CD23C")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x13CD374", Offset = "0x13CD374", VA = "0x13CD374")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x13CD3F8", Offset = "0x13CD3F8", VA = "0x13CD3F8")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x13CD5CC", Offset = "0x13CD5CC", VA = "0x13CD5CC")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028D")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A61C", Offset = "0x64A61C")]
			public Transform headTarget;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A654", Offset = "0x64A654")]
			public Transform pelvisTarget;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A68C", Offset = "0x64A68C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A68C", Offset = "0x64A68C")]
			public float positionWeight;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A6E0", Offset = "0x64A6E0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A6E0", Offset = "0x64A6E0")]
			public float rotationWeight;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A734", Offset = "0x64A734")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A734", Offset = "0x64A734")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A788", Offset = "0x64A788")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A788", Offset = "0x64A788")]
			public float pelvisRotationWeight;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A7DC", Offset = "0x64A7DC")]
			public Transform chestGoal;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A814", Offset = "0x64A814")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A814", Offset = "0x64A814")]
			public float chestGoalWeight;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A868", Offset = "0x64A868")]
			public float minHeadHeight;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A8A0", Offset = "0x64A8A0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A8A0", Offset = "0x64A8A0")]
			public float bodyPosStiffness;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A8F4", Offset = "0x64A8F4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A8F4", Offset = "0x64A8F4")]
			public float bodyRotStiffness;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64A948", Offset = "0x64A948")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A948", Offset = "0x64A948")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A948", Offset = "0x64A948")]
			public float neckStiffness;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64A9C0", Offset = "0x64A9C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64A9C0", Offset = "0x64A9C0")]
			public float rotateChestByHands;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AA14", Offset = "0x64AA14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64AA14", Offset = "0x64AA14")]
			public float chestClampWeight;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AA68", Offset = "0x64AA68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64AA68", Offset = "0x64AA68")]
			public float headClampWeight;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AABC", Offset = "0x64AABC")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AAF4", Offset = "0x64AAF4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64AAF4", Offset = "0x64AAF4")]
			public float maintainPelvisPosition;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AB48", Offset = "0x64AB48")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64AB48", Offset = "0x64AB48")]
			public float maxRootAngle;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ABA0", Offset = "0x64ABA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64ABA0", Offset = "0x64ABA0")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64ACDC", Offset = "0x64ACDC")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64ACEC", Offset = "0x64ACEC")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4000EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x170001AE")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x6000ED1")]
				[Address(RVA = "0x13CD1BC", Offset = "0x13CD1BC", VA = "0x13CD1BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x6000ED2")]
				[Address(RVA = "0x13CD6DC", Offset = "0x13CD6DC", VA = "0x13CD6DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B0")]
			public VirtualBone chest
			{
				[Token(Token = "0x6000ED3")]
				[Address(RVA = "0x13CD71C", Offset = "0x13CD71C", VA = "0x13CD71C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private VirtualBone neck
			{
				[Token(Token = "0x6000ED4")]
				[Address(RVA = "0x13CD770", Offset = "0x13CD770", VA = "0x13CD770")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B2")]
			public VirtualBone head
			{
				[Token(Token = "0x6000ED5")]
				[Address(RVA = "0x13CD1FC", Offset = "0x13CD1FC", VA = "0x13CD1FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6000ED6")]
				[Address(RVA = "0x13CD7B0", Offset = "0x13CD7B0", VA = "0x13CD7B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655654", Offset = "0x655654")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000ED7")]
				[Address(RVA = "0x13CD7C4", Offset = "0x13CD7C4", VA = "0x13CD7C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655664", Offset = "0x655664")]
				private set
				{
				}
			}

			[Token(Token = "0x170001B4")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x6000ED8")]
				[Address(RVA = "0x13CD7D8", Offset = "0x13CD7D8", VA = "0x13CD7D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655674", Offset = "0x655674")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000ED9")]
				[Address(RVA = "0x13CD7EC", Offset = "0x13CD7EC", VA = "0x13CD7EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655684", Offset = "0x655684")]
				private set
				{
				}
			}

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x13CD800", Offset = "0x13CD800", VA = "0x13CD800", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x13CE24C", Offset = "0x13CE24C", VA = "0x13CE24C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x13CE458", Offset = "0x13CE458", VA = "0x13CE458", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x13CE89C", Offset = "0x13CE89C", VA = "0x13CE89C")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x13CECD8", Offset = "0x13CECD8", VA = "0x13CECD8")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x13CF42C", Offset = "0x13CF42C", VA = "0x13CF42C")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x13CFAAC", Offset = "0x13CFAAC", VA = "0x13CFAAC")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x13D00AC", Offset = "0x13D00AC", VA = "0x13D00AC", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x13D0288", Offset = "0x13D0288", VA = "0x13D0288", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x13CEA34", Offset = "0x13CEA34", VA = "0x13CEA34")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x13CF7FC", Offset = "0x13CF7FC", VA = "0x13CF7FC")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x13CF0E8", Offset = "0x13CF0E8", VA = "0x13CF0E8")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x13D0320", Offset = "0x13D0320", VA = "0x13D0320")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x13CF8D8", Offset = "0x13CF8D8", VA = "0x13CF8D8")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x13CF5A8", Offset = "0x13CF5A8", VA = "0x13CF5A8")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x13D0514", Offset = "0x13D0514", VA = "0x13D0514")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028E")]
		public enum PositionOffset
		{
			[Token(Token = "0x4000EC9")]
			Pelvis,
			[Token(Token = "0x4000ECA")]
			Chest,
			[Token(Token = "0x4000ECB")]
			Head,
			[Token(Token = "0x4000ECC")]
			LeftHand,
			[Token(Token = "0x4000ECD")]
			RightHand,
			[Token(Token = "0x4000ECE")]
			LeftFoot,
			[Token(Token = "0x4000ECF")]
			RightFoot,
			[Token(Token = "0x4000ED0")]
			LeftHeel,
			[Token(Token = "0x4000ED1")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x200028F")]
		public enum RotationOffset
		{
			[Token(Token = "0x4000ED3")]
			Pelvis,
			[Token(Token = "0x4000ED4")]
			Chest,
			[Token(Token = "0x4000ED5")]
			Head
		}

		[Serializable]
		[Token(Token = "0x2000290")]
		public class VirtualBone
		{
			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x13CA084", Offset = "0x13CA084", VA = "0x13CA084")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x13CA100", Offset = "0x13CA100", VA = "0x13CA100")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x13D0684", Offset = "0x13D0684", VA = "0x13D0684")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x13C8874", Offset = "0x13C8874", VA = "0x13C8874")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x13C8BA0", Offset = "0x13C8BA0", VA = "0x13C8BA0")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x13D0808", Offset = "0x13D0808", VA = "0x13D0808")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x13D0968", Offset = "0x13D0968", VA = "0x13D0968")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x13D0AA4", Offset = "0x13D0AA4", VA = "0x13D0AA4")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x13CAF6C", Offset = "0x13CAF6C", VA = "0x13CAF6C")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x13D0B5C", Offset = "0x13D0B5C", VA = "0x13D0B5C")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x13CFD1C", Offset = "0x13CFD1C", VA = "0x13CFD1C")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x13D0CC4", Offset = "0x13D0CC4", VA = "0x13D0CC4")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x13D0D34", Offset = "0x13D0D34", VA = "0x13D0D34")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6497F0", Offset = "0x6497F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6497F0", Offset = "0x6497F0")]
		public int LOD;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649844", Offset = "0x649844")]
		public bool plantFeet;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64987C", Offset = "0x64987C")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64988C", Offset = "0x64988C")]
		public Spine spine;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6498C4", Offset = "0x6498C4")]
		public Arm leftArm;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6498FC", Offset = "0x6498FC")]
		public Arm rightArm;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x649934", Offset = "0x649934")]
		public Leg leftLeg;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64996C", Offset = "0x64996C")]
		public Leg rightLeg;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6499A4", Offset = "0x6499A4")]
		public Locomotion locomotion;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x17000195")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xF168DC", Offset = "0xF168DC", VA = "0xF168DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6554F4", Offset = "0x6554F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0xF168E4", Offset = "0xF168E4", VA = "0xF168E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655504", Offset = "0x655504")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xF12CBC", Offset = "0xF12CBC", VA = "0xF12CBC")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xF13178", Offset = "0xF13178", VA = "0xF13178")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xF13004", Offset = "0xF13004", VA = "0xF13004")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xF138D8", Offset = "0xF138D8", VA = "0xF138D8")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xF13A1C", Offset = "0xF13A1C", VA = "0xF13A1C")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xF13A4C", Offset = "0xF13A4C", VA = "0xF13A4C")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xF13AFC", Offset = "0xF13AFC", VA = "0xF13AFC")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xF13BE4", Offset = "0xF13BE4", VA = "0xF13BE4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xF1439C", Offset = "0xF1439C", VA = "0xF1439C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xF1450C", Offset = "0xF1450C", VA = "0xF1450C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xF14710", Offset = "0xF14710", VA = "0xF14710", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xF1478C", Offset = "0xF1478C", VA = "0xF1478C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xF14808", Offset = "0xF14808", VA = "0xF14808", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xF149EC", Offset = "0xF149EC", VA = "0xF149EC")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xF133AC", Offset = "0xF133AC", VA = "0xF133AC")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xF1349C", Offset = "0xF1349C", VA = "0xF1349C")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xF137B8", Offset = "0xF137B8", VA = "0xF137B8")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xF13CD8", Offset = "0xF13CD8", VA = "0xF13CD8")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xF14BAC", Offset = "0xF14BAC", VA = "0xF14BAC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xF14BF4", Offset = "0xF14BF4", VA = "0xF14BF4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xF1600C", Offset = "0xF1600C", VA = "0xF1600C")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xF13E3C", Offset = "0xF13E3C", VA = "0xF13E3C")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xF14F68", Offset = "0xF14F68", VA = "0xF14F68")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xF163BC", Offset = "0xF163BC", VA = "0xF163BC")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xF16404", Offset = "0xF16404", VA = "0xF16404")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xF15EBC", Offset = "0xF15EBC", VA = "0xF15EBC")]
		private void Write()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xF16448", Offset = "0xF16448", VA = "0xF16448")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xF168EC", Offset = "0xF168EC", VA = "0xF168EC")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ACFC", Offset = "0x64ACFC")]
		public Transform parent;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AD34", Offset = "0x64AD34")]
		public Transform child;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64AD6C", Offset = "0x64AD6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AD6C", Offset = "0x64AD6C")]
		public float weight;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ADC0", Offset = "0x64ADC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64ADC0", Offset = "0x64ADC0")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AE14", Offset = "0x64AE14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64AE14", Offset = "0x64AE14")]
		public float twistAngleOffset;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x13949CC", Offset = "0x13949CC", VA = "0x13949CC")]
		public void Relax()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1394CE8", Offset = "0x1394CE8", VA = "0x1394CE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x13950FC", Offset = "0x13950FC", VA = "0x13950FC")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1395180", Offset = "0x1395180", VA = "0x1395180")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1395204", Offset = "0x1395204", VA = "0x1395204")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1395340", Offset = "0x1395340", VA = "0x1395340")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000292")]
	public class InteractionEffector
	{
		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64AE70", Offset = "0x64AE70")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64AE80", Offset = "0x64AE80")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64AE90", Offset = "0x64AE90")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x170001B5")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0xF1A058", Offset = "0xF1A058", VA = "0xF1A058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655694", Offset = "0x655694")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xF1A060", Offset = "0xF1A060", VA = "0xF1A060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6556A4", Offset = "0x6556A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public bool isPaused
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xF1A068", Offset = "0xF1A068", VA = "0xF1A068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6556B4", Offset = "0x6556B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xF1A070", Offset = "0xF1A070", VA = "0xF1A070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6556C4", Offset = "0x6556C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0xF1A07C", Offset = "0xF1A07C", VA = "0xF1A07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6556D4", Offset = "0x6556D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xF1A084", Offset = "0xF1A084", VA = "0xF1A084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6556E4", Offset = "0x6556E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public bool inInteraction
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0xF1A08C", Offset = "0xF1A08C", VA = "0xF1A08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public float progress
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xF1C194", Offset = "0xF1C194", VA = "0xF1C194")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xF1A0F8", Offset = "0xF1A0F8", VA = "0xF1A0F8")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xF1A190", Offset = "0xF1A190", VA = "0xF1A190")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xF1A25C", Offset = "0xF1A25C", VA = "0xF1A25C")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xF1A3D4", Offset = "0xF1A3D4", VA = "0xF1A3D4")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xF1A738", Offset = "0xF1A738", VA = "0xF1A738")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xF1A7F4", Offset = "0xF1A7F4", VA = "0xF1A7F4")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xF1A84C", Offset = "0xF1A84C", VA = "0xF1A84C")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xF1AEC0", Offset = "0xF1AEC0", VA = "0xF1AEC0")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xF1B97C", Offset = "0xF1B97C", VA = "0xF1B97C")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xF1BBC0", Offset = "0xF1BBC0", VA = "0xF1BBC0")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xF1C020", Offset = "0xF1C020", VA = "0xF1C020")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xF1C25C", Offset = "0xF1C25C", VA = "0xF1C25C")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000293")]
	public class InteractionLookAt
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AEA0", Offset = "0x64AEA0")]
		public LookAtIK ik;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AED8", Offset = "0x64AED8")]
		public float lerpSpeed;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AF10", Offset = "0x64AF10")]
		public float weightSpeed;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xF1CAB8", Offset = "0xF1CAB8", VA = "0xF1CAB8")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xF1CBE0", Offset = "0xF1CBE0", VA = "0xF1CBE0")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xF1CC84", Offset = "0xF1CC84", VA = "0xF1CC84")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xF1CE8C", Offset = "0xF1CE8C", VA = "0xF1CE8C")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xF1CF80", Offset = "0xF1CF80", VA = "0xF1CF80")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xF1D048", Offset = "0xF1D048", VA = "0xF1D048")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643EF0", Offset = "0x643EF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643EF0", Offset = "0x643EF0")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000295")]
		public class InteractionEvent
		{
			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B020", Offset = "0x64B020")]
			public float time;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B058", Offset = "0x64B058")]
			public bool pause;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B090", Offset = "0x64B090")]
			public bool pickUp;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B0C8", Offset = "0x64B0C8")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B100", Offset = "0x64B100")]
			public Message[] messages;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B138", Offset = "0x64B138")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x13D1A94", Offset = "0x13D1A94", VA = "0x13D1A94")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x13D1C68", Offset = "0x13D1C68", VA = "0x13D1C68")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000296")]
		public class Message
		{
			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B170", Offset = "0x64B170")]
			public string function;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B1A8", Offset = "0x64B1A8")]
			public GameObject recipient;

			[Token(Token = "0x4000F24")]
			private const string empty = "";

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x13D1B64", Offset = "0x13D1B64", VA = "0x13D1B64")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x13D1C70", Offset = "0x13D1C70", VA = "0x13D1C70")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000297")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B1E0", Offset = "0x64B1E0")]
			public Animator animator;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B218", Offset = "0x64B218")]
			public Animation animation;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B250", Offset = "0x64B250")]
			public string animationState;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B288", Offset = "0x64B288")]
			public float crossfadeTime;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B2C0", Offset = "0x64B2C0")]
			public int layer;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B2F8", Offset = "0x64B2F8")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4000F2B")]
			private const string empty = "";

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x13D1800", Offset = "0x13D1800", VA = "0x13D1800")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x13D18F0", Offset = "0x13D18F0", VA = "0x13D18F0")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x13D19A4", Offset = "0x13D19A4", VA = "0x13D19A4")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x13D1A80", Offset = "0x13D1A80", VA = "0x13D1A80")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000298")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x2000299")]
			public enum Type
			{
				[Token(Token = "0x4000F2F")]
				PositionWeight,
				[Token(Token = "0x4000F30")]
				RotationWeight,
				[Token(Token = "0x4000F31")]
				PositionOffsetX,
				[Token(Token = "0x4000F32")]
				PositionOffsetY,
				[Token(Token = "0x4000F33")]
				PositionOffsetZ,
				[Token(Token = "0x4000F34")]
				Pull,
				[Token(Token = "0x4000F35")]
				Reach,
				[Token(Token = "0x4000F36")]
				RotateBoneWeight,
				[Token(Token = "0x4000F37")]
				Push,
				[Token(Token = "0x4000F38")]
				PushParent,
				[Token(Token = "0x4000F39")]
				PoserWeight,
				[Token(Token = "0x4000F3A")]
				BendGoalWeight
			}

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B330", Offset = "0x64B330")]
			public Type type;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B368", Offset = "0x64B368")]
			public AnimationCurve curve;

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x13D1CB4", Offset = "0x13D1CB4", VA = "0x13D1CB4")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x13D1CE0", Offset = "0x13D1CE0", VA = "0x13D1CE0")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200029A")]
		public class Multiplier
		{
			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B3A0", Offset = "0x64B3A0")]
			public WeightCurve.Type curve;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B3D8", Offset = "0x64B3D8")]
			public float multiplier;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B410", Offset = "0x64B410")]
			public WeightCurve.Type result;

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x13D1C78", Offset = "0x13D1C78", VA = "0x13D1C78")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x13D1CD0", Offset = "0x13D1CD0", VA = "0x13D1CD0")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AF58", Offset = "0x64AF58")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AF90", Offset = "0x64AF90")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64AFC8", Offset = "0x64AFC8")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64B000", Offset = "0x64B000")]
		private float <length>k__BackingField;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64B010", Offset = "0x64B010")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x170001BA")]
		public float length
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xF1D29C", Offset = "0xF1D29C", VA = "0xF1D29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6558B4", Offset = "0x6558B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xF1D2A4", Offset = "0xF1D2A4", VA = "0xF1D2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6558C4", Offset = "0x6558C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xF1D2AC", Offset = "0xF1D2AC", VA = "0xF1D2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6558D4", Offset = "0x6558D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xF1D2B4", Offset = "0xF1D2B4", VA = "0xF1D2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6558E4", Offset = "0x6558E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0xF1D484", Offset = "0xF1D484", VA = "0xF1D484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xF1C1D0", Offset = "0xF1C1D0", VA = "0xF1C1D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xF1D05C", Offset = "0xF1D05C", VA = "0xF1D05C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6556F4", Offset = "0x6556F4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xF1D0A4", Offset = "0xF1D0A4", VA = "0xF1D0A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65572C", Offset = "0x65572C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xF1D0EC", Offset = "0xF1D0EC", VA = "0xF1D0EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655764", Offset = "0x655764")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xF1D134", Offset = "0xF1D134", VA = "0xF1D134")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65579C", Offset = "0x65579C")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xF1D17C", Offset = "0xF1D17C", VA = "0xF1D17C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6557D4", Offset = "0x6557D4")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xF1D1C4", Offset = "0xF1D1C4", VA = "0xF1D1C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65580C", Offset = "0x65580C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xF1D20C", Offset = "0xF1D20C", VA = "0xF1D20C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655844", Offset = "0x655844")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xF1D254", Offset = "0xF1D254", VA = "0xF1D254")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65587C", Offset = "0x65587C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xF1D2BC", Offset = "0xF1D2BC", VA = "0xF1D2BC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xF1D510", Offset = "0xF1D510", VA = "0xF1D510")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xF1AE0C", Offset = "0xF1AE0C", VA = "0xF1AE0C")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xF1D69C", Offset = "0xF1D69C", VA = "0xF1D69C")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xF1ACB8", Offset = "0xF1ACB8", VA = "0xF1ACB8")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xF1AE04", Offset = "0xF1AE04", VA = "0xF1AE04")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xF1B518", Offset = "0xF1B518", VA = "0xF1B518")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xF1BDF8", Offset = "0xF1BDF8", VA = "0xF1BDF8")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xF1DC10", Offset = "0xF1DC10", VA = "0xF1DC10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xF1D714", Offset = "0xF1D714", VA = "0xF1D714")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xF1D6A4", Offset = "0xF1D6A4", VA = "0xF1D6A4")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xF1DBA8", Offset = "0xF1DBA8", VA = "0xF1DBA8")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xF1DC14", Offset = "0xF1DC14", VA = "0xF1DC14")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xF1DC7C", Offset = "0xF1DC7C", VA = "0xF1DC7C")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643F50", Offset = "0x643F50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643F50", Offset = "0x643F50")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x200029C")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x200029D")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B448", Offset = "0x64B448")]
		public string targetTag;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B480", Offset = "0x64B480")]
		public float fadeInTime;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B4B8", Offset = "0x64B4B8")]
		public float speed;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B4F0", Offset = "0x64B4F0")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64B528", Offset = "0x64B528")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B528", Offset = "0x64B528")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64B528", Offset = "0x64B528")]
		public Collider characterCollider;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B5AC", Offset = "0x64B5AC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64B5AC", Offset = "0x64B5AC")]
		public Transform FPSCamera;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B60C", Offset = "0x64B60C")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B644", Offset = "0x64B644")]
		public float camRaycastDistance;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64B67C", Offset = "0x64B67C")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B68C", Offset = "0x64B68C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64B68C", Offset = "0x64B68C")]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B6EC", Offset = "0x64B6EC")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x170001BE")]
		public bool inInteraction
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xF19F30", Offset = "0xF19F30", VA = "0xF19F30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0xF1F9D8", Offset = "0xF1F9D8", VA = "0xF1F9D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0xF1F9E0", Offset = "0xF1F9E0", VA = "0xF1F9E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0xF1F9E8", Offset = "0xF1F9E8", VA = "0xF1F9E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655AB4", Offset = "0x655AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xF1F9F0", Offset = "0xF1F9F0", VA = "0xF1F9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655AC4", Offset = "0x655AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xF1DCE4", Offset = "0xF1DCE4", VA = "0xF1DCE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6558F4", Offset = "0x6558F4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xF1DD2C", Offset = "0xF1DD2C", VA = "0xF1DD2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65592C", Offset = "0x65592C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xF1DD74", Offset = "0xF1DD74", VA = "0xF1DD74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655964", Offset = "0x655964")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xF1DDBC", Offset = "0xF1DDBC", VA = "0xF1DDBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65599C", Offset = "0x65599C")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xF1DE04", Offset = "0xF1DE04", VA = "0xF1DE04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6559D4", Offset = "0x6559D4")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xF1DE4C", Offset = "0xF1DE4C", VA = "0xF1DE4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655A0C", Offset = "0x655A0C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xF1DE94", Offset = "0xF1DE94", VA = "0xF1DE94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655A44", Offset = "0x655A44")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xF1DEDC", Offset = "0xF1DEDC", VA = "0xF1DEDC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655A7C", Offset = "0x655A7C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xF1E01C", Offset = "0xF1E01C", VA = "0xF1E01C")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xF1E0E8", Offset = "0xF1E0E8", VA = "0xF1E0E8")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xF1E1B4", Offset = "0xF1E1B4", VA = "0xF1E1B4")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xF1E260", Offset = "0xF1E260", VA = "0xF1E260")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xF19610", Offset = "0xF19610", VA = "0xF19610")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xF1E358", Offset = "0xF1E358", VA = "0xF1E358")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xF1E3E8", Offset = "0xF1E3E8", VA = "0xF1E3E8")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xF1E478", Offset = "0xF1E478", VA = "0xF1E478")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xF1E508", Offset = "0xF1E508", VA = "0xF1E508")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xF19FDC", Offset = "0xF19FDC", VA = "0xF19FDC")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xF1E57C", Offset = "0xF1E57C", VA = "0xF1E57C")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xF1E5E4", Offset = "0xF1E5E4", VA = "0xF1E5E4")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xF1E670", Offset = "0xF1E670", VA = "0xF1E670")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xF1E724", Offset = "0xF1E724", VA = "0xF1E724")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xF1E808", Offset = "0xF1E808", VA = "0xF1E808")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xF1EAE0", Offset = "0xF1EAE0", VA = "0xF1EAE0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xF1ECD8", Offset = "0xF1ECD8", VA = "0xF1ECD8")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xF1EF7C", Offset = "0xF1EF7C", VA = "0xF1EF7C")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xF1F254", Offset = "0xF1F254", VA = "0xF1F254")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xF1F298", Offset = "0xF1F298", VA = "0xF1F298")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xF1F310", Offset = "0xF1F310", VA = "0xF1F310")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xF1F444", Offset = "0xF1F444", VA = "0xF1F444")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xF1F5E8", Offset = "0xF1F5E8", VA = "0xF1F5E8")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xF1F88C", Offset = "0xF1F88C", VA = "0xF1F88C")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xF1F090", Offset = "0xF1F090", VA = "0xF1F090")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xF1F9F8", Offset = "0xF1F9F8", VA = "0xF1F9F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xF20220", Offset = "0xF20220", VA = "0xF20220")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xF20240", Offset = "0xF20240", VA = "0xF20240")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xF2025C", Offset = "0xF2025C", VA = "0xF2025C")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xF20278", Offset = "0xF20278", VA = "0xF20278")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xF202D8", Offset = "0xF202D8", VA = "0xF202D8")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xF20414", Offset = "0xF20414", VA = "0xF20414")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xF20524", Offset = "0xF20524", VA = "0xF20524")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xF206F8", Offset = "0xF206F8", VA = "0xF206F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xF20824", Offset = "0xF20824", VA = "0xF20824")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xF20AB4", Offset = "0xF20AB4", VA = "0xF20AB4")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xF1FF6C", Offset = "0xF1FF6C", VA = "0xF1FF6C")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xF20BF0", Offset = "0xF20BF0", VA = "0xF20BF0")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xF20D18", Offset = "0xF20D18", VA = "0xF20D18")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xF20DAC", Offset = "0xF20DAC", VA = "0xF20DAC")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xF20E80", Offset = "0xF20E80", VA = "0xF20E80")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xF20E98", Offset = "0xF20E98", VA = "0xF20E98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xF1DF24", Offset = "0xF1DF24", VA = "0xF1DF24")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xF1E9B0", Offset = "0xF1E9B0", VA = "0xF1E9B0")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xF21294", Offset = "0xF21294", VA = "0xF21294")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x643FB0", Offset = "0x643FB0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x643FB0", Offset = "0x643FB0")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200029F")]
		public class Multiplier
		{
			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B8E4", Offset = "0x64B8E4")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B91C", Offset = "0x64B91C")]
			public float multiplier;

			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x13D2354", Offset = "0x13D2354", VA = "0x13D2354")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B724", Offset = "0x64B724")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B75C", Offset = "0x64B75C")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B794", Offset = "0x64B794")]
		public float interactionSpeedMlp;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B7CC", Offset = "0x64B7CC")]
		public Transform pivot;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B804", Offset = "0x64B804")]
		public Vector3 twistAxis;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B83C", Offset = "0x64B83C")]
		public float twistWeight;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B874", Offset = "0x64B874")]
		public float swingWeight;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B8AC", Offset = "0x64B8AC")]
		public bool rotateOnce;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x13B41B4", Offset = "0x13B41B4", VA = "0x13B41B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655AD4", Offset = "0x655AD4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x13B41FC", Offset = "0x13B41FC", VA = "0x13B41FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655B0C", Offset = "0x655B0C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x13B4244", Offset = "0x13B4244", VA = "0x13B4244")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655B44", Offset = "0x655B44")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x13B428C", Offset = "0x13B428C", VA = "0x13B428C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655B7C", Offset = "0x655B7C")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x13B42D4", Offset = "0x13B42D4", VA = "0x13B42D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655BB4", Offset = "0x655BB4")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x13B431C", Offset = "0x13B431C", VA = "0x13B431C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655BEC", Offset = "0x655BEC")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x13B4364", Offset = "0x13B4364", VA = "0x13B4364")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655C24", Offset = "0x655C24")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x13B43AC", Offset = "0x13B43AC", VA = "0x13B43AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655C5C", Offset = "0x655C5C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x13B43F4", Offset = "0x13B43F4", VA = "0x13B43F4")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x13B4464", Offset = "0x13B4464", VA = "0x13B4464")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x13B44FC", Offset = "0x13B44FC", VA = "0x13B44FC")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x13B48D8", Offset = "0x13B48D8", VA = "0x13B48D8")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x644010", Offset = "0x644010")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x644010", Offset = "0x644010")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A1")]
		public class CharacterPosition
		{
			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B98C", Offset = "0x64B98C")]
			public bool use;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B9C4", Offset = "0x64B9C4")]
			public Vector2 offset;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B9FC", Offset = "0x64B9FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64B9FC", Offset = "0x64B9FC")]
			public float angleOffset;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BA58", Offset = "0x64BA58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BA58", Offset = "0x64BA58")]
			public float maxAngle;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BAB0", Offset = "0x64BAB0")]
			public float radius;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BAE8", Offset = "0x64BAE8")]
			public bool orbit;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BB20", Offset = "0x64BB20")]
			public bool fixYAxis;

			[Token(Token = "0x170001C1")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6000F96")]
				[Address(RVA = "0x13D26C4", Offset = "0x13D26C4", VA = "0x13D26C4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001C2")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6000F97")]
				[Address(RVA = "0x13D26D0", Offset = "0x13D26D0", VA = "0x13D26D0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x13D2758", Offset = "0x13D2758", VA = "0x13D2758")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x13D2B9C", Offset = "0x13D2B9C", VA = "0x13D2B9C")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002A2")]
		public class CameraPosition
		{
			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BB58", Offset = "0x64BB58")]
			public Collider lookAtTarget;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BB90", Offset = "0x64BB90")]
			public Vector3 direction;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BBC8", Offset = "0x64BBC8")]
			public float maxDistance;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BC00", Offset = "0x64BC00")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BC00", Offset = "0x64BC00")]
			public float maxAngle;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BC58", Offset = "0x64BC58")]
			public bool fixYAxis;

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x13D235C", Offset = "0x13D235C", VA = "0x13D235C")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x13D2450", Offset = "0x13D2450", VA = "0x13D2450")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x13D2678", Offset = "0x13D2678", VA = "0x13D2678")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002A3")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x20002A4")]
			public class Interaction
			{
				[Token(Token = "0x4000F74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BDA8", Offset = "0x64BDA8")]
				public InteractionObject interactionObject;

				[Token(Token = "0x4000F75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BDE0", Offset = "0x64BDE0")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6000F9F")]
				[Address(RVA = "0xAA6ED0", Offset = "0xAA6ED0", VA = "0xAA6ED0")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BD00", Offset = "0x64BD00")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BD38", Offset = "0x64BD38")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BD70", Offset = "0x64BD70")]
			public Interaction[] interactions;

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x13D2BB0", Offset = "0x13D2BB0", VA = "0x13D2BB0")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x13D2C64", Offset = "0x13D2C64", VA = "0x13D2C64")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64B954", Offset = "0x64B954")]
		public Range[] ranges;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x13B4920", Offset = "0x13B4920", VA = "0x13B4920")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655C94", Offset = "0x655C94")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x13B4968", Offset = "0x13B4968", VA = "0x13B4968")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655CCC", Offset = "0x655CCC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x13B49B0", Offset = "0x13B49B0", VA = "0x13B49B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655D04", Offset = "0x655D04")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x13B49F8", Offset = "0x13B49F8", VA = "0x13B49F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655D3C", Offset = "0x655D3C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x13B4A40", Offset = "0x13B4A40", VA = "0x13B4A40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655D74", Offset = "0x655D74")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x13B4A88", Offset = "0x13B4A88", VA = "0x13B4A88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x13B4A8C", Offset = "0x13B4A8C", VA = "0x13B4A8C")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x13B4C60", Offset = "0x13B4C60", VA = "0x13B4C60")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x20002A6")]
		public class Map
		{
			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x8CCE90", Offset = "0x8CCE90", VA = "0x8CCE90")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x8CCEE8", Offset = "0x8CCEE8", VA = "0x8CCEE8")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x8CCF38", Offset = "0x8CCF38", VA = "0x8CCF38")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x8CCF84", Offset = "0x8CCF84", VA = "0x8CCF84")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xABBDD8", Offset = "0xABBDD8", VA = "0xABBDD8", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655DAC", Offset = "0x655DAC")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xABC168", Offset = "0xABC168", VA = "0xABC168", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xABC16C", Offset = "0xABC16C", VA = "0xABC16C", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xABC274", Offset = "0xABC274", VA = "0xABC274", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xABC0FC", Offset = "0xABC0FC", VA = "0xABC0FC")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xABC05C", Offset = "0xABC05C", VA = "0xABC05C")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xABC2E0", Offset = "0xABC2E0", VA = "0xABC2E0")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xF75D60", Offset = "0xF75D60", VA = "0xF75D60", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xF75E3C", Offset = "0xF75E3C", VA = "0xF75E3C", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xF76024", Offset = "0xF76024", VA = "0xF76024", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xF76120", Offset = "0xF76120", VA = "0xF76120", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xF75EA0", Offset = "0xF75EA0", VA = "0xF75EA0")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xF76480", Offset = "0xF76480", VA = "0xF76480")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BE18", Offset = "0x64BE18")]
		public float weight;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BE30", Offset = "0x64BE30")]
		public float localRotationWeight;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BE48", Offset = "0x64BE48")]
		public float localPositionWeight;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6000FB1")]
		public abstract void AutoMapping();

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x13737A8", Offset = "0x13737A8", VA = "0x13737A8")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6000FB3")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6000FB4")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6000FB5")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x13737B4", Offset = "0x13737B4", VA = "0x13737B4", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1373808", Offset = "0x1373808", VA = "0x1373808", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1373844", Offset = "0x1373844", VA = "0x1373844", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x137385C", Offset = "0x137385C", VA = "0x137385C")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644070", Offset = "0x644070")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x20002AA")]
		public class Rigidbone
		{
			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xAA055C", Offset = "0xAA055C", VA = "0xAA055C")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xAA0720", Offset = "0xAA0720", VA = "0xAA0720")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xAA0800", Offset = "0xAA0800", VA = "0xAA0800")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x20002AB")]
		public class Child
		{
			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xAA0354", Offset = "0xAA0354", VA = "0xAA0354")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xAA03CC", Offset = "0xAA03CC", VA = "0xAA03CC")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xAA050C", Offset = "0xAA050C", VA = "0xAA050C")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6440D0", Offset = "0x6440D0")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x170001C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD5")]
				[Address(RVA = "0xAA0304", Offset = "0xAA0304", VA = "0xAA0304", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD7")]
				[Address(RVA = "0xAA034C", Offset = "0xAA034C", VA = "0xAA034C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xAA00C8", Offset = "0xAA00C8", VA = "0xAA00C8")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xAA00F4", Offset = "0xAA00F4", VA = "0xAA00F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xAA00F8", Offset = "0xAA00F8", VA = "0xAA00F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xAA030C", Offset = "0xAA030C", VA = "0xAA030C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BE60", Offset = "0x64BE60")]
		public IK ik;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BE98", Offset = "0x64BE98")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BED0", Offset = "0x64BED0")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BF08", Offset = "0x64BF08")]
		public float applyVelocity;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64BF40", Offset = "0x64BF40")]
		public float applyAngularVelocity;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x170001C3")]
		private bool isRagdoll
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x1375744", Offset = "0x1375744", VA = "0x1375744")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C4")]
		private bool ikUsed
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x1376178", Offset = "0x1376178", VA = "0x1376178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x137570C", Offset = "0x137570C", VA = "0x137570C")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x13757BC", Offset = "0x13757BC", VA = "0x13757BC")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x13758F8", Offset = "0x13758F8", VA = "0x13758F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1375880", Offset = "0x1375880", VA = "0x1375880")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x655DE4", Offset = "0x655DE4")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1375DB4", Offset = "0x1375DB4", VA = "0x1375DB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1376000", Offset = "0x1376000", VA = "0x1376000")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x13760BC", Offset = "0x13760BC", VA = "0x13760BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x13762F8", Offset = "0x13762F8", VA = "0x13762F8")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x137613C", Offset = "0x137613C", VA = "0x137613C")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x13762B4", Offset = "0x13762B4", VA = "0x13762B4")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1376398", Offset = "0x1376398", VA = "0x1376398")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x137632C", Offset = "0x137632C", VA = "0x137632C")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1375814", Offset = "0x1375814", VA = "0x1375814")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1376040", Offset = "0x1376040", VA = "0x1376040")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x13765C4", Offset = "0x13765C4", VA = "0x13765C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1376700", Offset = "0x1376700", VA = "0x1376700")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64BF88", Offset = "0x64BF88")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x170001C7")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x137BBB8", Offset = "0x137BBB8", VA = "0x137BBB8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C8")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x137BBC4", Offset = "0x137BBC4", VA = "0x137BBC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C9")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x137BBE0", Offset = "0x137BBE0", VA = "0x137BBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655E94", Offset = "0x655E94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x137BBE8", Offset = "0x137BBE8", VA = "0x137BBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x655EA4", Offset = "0x655EA4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x137B8B8", Offset = "0x137B8B8", VA = "0x137B8B8")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x137B900", Offset = "0x137B900", VA = "0x137B900")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x137B918", Offset = "0x137B918", VA = "0x137B918")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x137BB10", Offset = "0x137BB10", VA = "0x137BB10")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x137BB80", Offset = "0x137BB80", VA = "0x137BB80")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000FE1")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x137BA38", Offset = "0x137BA38", VA = "0x137BA38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x137BBF4", Offset = "0x137BBF4", VA = "0x137BBF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x137BBF8", Offset = "0x137BBF8", VA = "0x137BBF8")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x137BC2C", Offset = "0x137BC2C", VA = "0x137BC2C")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x137BCA8", Offset = "0x137BCA8", VA = "0x137BCA8")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x137BE3C", Offset = "0x137BE3C", VA = "0x137BE3C")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x137BEAC", Offset = "0x137BEAC", VA = "0x137BEAC")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6440E0", Offset = "0x6440E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6440E0", Offset = "0x6440E0")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BF98", Offset = "0x64BF98")]
		public float limit;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BFB4", Offset = "0x64BFB4")]
		public float twistLimit;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x137BEE0", Offset = "0x137BEE0", VA = "0x137BEE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655EB4", Offset = "0x655EB4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x137BF28", Offset = "0x137BF28", VA = "0x137BF28")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655EEC", Offset = "0x655EEC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x137BF70", Offset = "0x137BF70", VA = "0x137BF70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655F24", Offset = "0x655F24")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x137BFB8", Offset = "0x137BFB8", VA = "0x137BFB8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655F5C", Offset = "0x655F5C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x137C000", Offset = "0x137C000", VA = "0x137C000", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x137C044", Offset = "0x137C044", VA = "0x137C044")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x137C204", Offset = "0x137C204", VA = "0x137C204")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x644140", Offset = "0x644140")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x644140", Offset = "0x644140")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastAngle;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x137C244", Offset = "0x137C244", VA = "0x137C244")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655F94", Offset = "0x655F94")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x137C28C", Offset = "0x137C28C", VA = "0x137C28C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x655FCC", Offset = "0x655FCC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x137C2D4", Offset = "0x137C2D4", VA = "0x137C2D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x656004", Offset = "0x656004")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x137C31C", Offset = "0x137C31C", VA = "0x137C31C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65603C", Offset = "0x65603C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x137C364", Offset = "0x137C364", VA = "0x137C364", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x137C38C", Offset = "0x137C38C", VA = "0x137C38C")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x137C588", Offset = "0x137C588", VA = "0x137C588")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6441A0", Offset = "0x6441A0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6441A0", Offset = "0x6441A0")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x20002B1")]
		public class ReachCone
		{
			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x170001CA")]
			public Vector3 o
			{
				[Token(Token = "0x6001007")]
				[Address(RVA = "0xAA1028", Offset = "0xAA1028", VA = "0xAA1028")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001CB")]
			public Vector3 a
			{
				[Token(Token = "0x6001008")]
				[Address(RVA = "0xAA1060", Offset = "0xAA1060", VA = "0xAA1060")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001CC")]
			public Vector3 b
			{
				[Token(Token = "0x6001009")]
				[Address(RVA = "0xAA109C", Offset = "0xAA109C", VA = "0xAA109C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001CD")]
			public Vector3 c
			{
				[Token(Token = "0x600100A")]
				[Address(RVA = "0xAA10D8", Offset = "0xAA10D8", VA = "0xAA10D8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170001CE")]
			public bool isValid
			{
				[Token(Token = "0x600100C")]
				[Address(RVA = "0xAA1264", Offset = "0xAA1264", VA = "0xAA1264")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600100B")]
			[Address(RVA = "0xAA1114", Offset = "0xAA1114", VA = "0xAA1114")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x600100D")]
			[Address(RVA = "0xAA1274", Offset = "0xAA1274", VA = "0xAA1274")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B2")]
		public class LimitPoint
		{
			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x600100E")]
			[Address(RVA = "0xAA0FEC", Offset = "0xAA0FEC", VA = "0xAA0FEC")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BFE0", Offset = "0x64BFE0")]
		public float twistLimit;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64BFFC", Offset = "0x64BFFC")]
		public int smoothIterations;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		public Vector3[] P;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x137C5E0", Offset = "0x137C5E0", VA = "0x137C5E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x656074", Offset = "0x656074")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x137C628", Offset = "0x137C628", VA = "0x137C628")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6560AC", Offset = "0x6560AC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x137C670", Offset = "0x137C670", VA = "0x137C670")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6560E4", Offset = "0x6560E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x137C6B8", Offset = "0x137C6B8", VA = "0x137C6B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65611C", Offset = "0x65611C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x137C700", Offset = "0x137C700", VA = "0x137C700")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x137CBFC", Offset = "0x137CBFC", VA = "0x137CBFC", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x137CC90", Offset = "0x137CC90", VA = "0x137CC90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x137D204", Offset = "0x137D204", VA = "0x137D204")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x137C7A8", Offset = "0x137C7A8", VA = "0x137C7A8")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x137D5B0", Offset = "0x137D5B0", VA = "0x137D5B0")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x137D9BC", Offset = "0x137D9BC", VA = "0x137D9BC")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x137DA00", Offset = "0x137DA00", VA = "0x137DA00")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x137DA60", Offset = "0x137DA60", VA = "0x137DA60")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x137CF94", Offset = "0x137CF94", VA = "0x137CF94")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x137DACC", Offset = "0x137DACC", VA = "0x137DACC")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x137DBA8", Offset = "0x137DBA8", VA = "0x137DBA8")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x644200", Offset = "0x644200")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x644200", Offset = "0x644200")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64C0BC", Offset = "0x64C0BC")]
		public float twistLimit;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public AnimationCurve spline;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x137DC28", Offset = "0x137DC28", VA = "0x137DC28")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x656154", Offset = "0x656154")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x137DC70", Offset = "0x137DC70", VA = "0x137DC70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x65618C", Offset = "0x65618C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x137DCB8", Offset = "0x137DCB8", VA = "0x137DCB8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6561C4", Offset = "0x6561C4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x137DD00", Offset = "0x137DD00", VA = "0x137DD00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6561FC", Offset = "0x6561FC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x137DD48", Offset = "0x137DD48", VA = "0x137DD48")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x137DD64", Offset = "0x137DD64", VA = "0x137DD64", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x137DDA8", Offset = "0x137DDA8", VA = "0x137DDA8")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x137DFCC", Offset = "0x137DFCC", VA = "0x137DFCC")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644260", Offset = "0x644260")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x170001D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001021")]
				[Address(RVA = "0x8C9268", Offset = "0x8C9268", VA = "0x8C9268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001023")]
				[Address(RVA = "0x8C92B0", Offset = "0x8C92B0", VA = "0x8C92B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x8C916C", Offset = "0x8C916C", VA = "0x8C916C")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x8C9198", Offset = "0x8C9198", VA = "0x8C9198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x8C919C", Offset = "0x8C919C", VA = "0x8C919C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001022")]
			[Address(RVA = "0x8C9270", Offset = "0x8C9270", VA = "0x8C9270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C110", Offset = "0x64C110")]
		public AimIK ik;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64C148", Offset = "0x64C148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C148", Offset = "0x64C148")]
		public float weight;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C19C", Offset = "0x64C19C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C19C", Offset = "0x64C19C")]
		public Transform target;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C1FC", Offset = "0x64C1FC")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C234", Offset = "0x64C234")]
		public float weightSmoothTime;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C26C", Offset = "0x64C26C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C26C", Offset = "0x64C26C")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C2CC", Offset = "0x64C2CC")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C304", Offset = "0x64C304")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C33C", Offset = "0x64C33C")]
		public float slerpSpeed;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C374", Offset = "0x64C374")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C3AC", Offset = "0x64C3AC")]
		public float minDistance;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C3E4", Offset = "0x64C3E4")]
		public Vector3 offset;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64C41C", Offset = "0x64C41C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C41C", Offset = "0x64C41C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C41C", Offset = "0x64C41C")]
		public float maxRootAngle;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C498", Offset = "0x64C498")]
		public bool turnToTarget;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C4D0", Offset = "0x64C4D0")]
		public float turnToTargetTime;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64C508", Offset = "0x64C508")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C508", Offset = "0x64C508")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C568", Offset = "0x64C568")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x170001CF")]
		private Vector3 pivot
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xC1D7C0", Offset = "0xC1D7C0", VA = "0xC1D7C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xC1D734", Offset = "0xC1D734", VA = "0xC1D734")]
		private void Start()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xC1D850", Offset = "0xC1D850", VA = "0xC1D850")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xC1DDBC", Offset = "0xC1DDBC", VA = "0xC1DDBC")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xC1DEA8", Offset = "0xC1DEA8", VA = "0xC1DEA8")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC1E0F8", Offset = "0xC1E0F8", VA = "0xC1E0F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656234", Offset = "0x656234")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC1E170", Offset = "0xC1E170", VA = "0xC1E170")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B7")]
		public class Pose
		{
			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x8C92B8", Offset = "0x8C92B8", VA = "0x8C92B8")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x8C9444", Offset = "0x8C9444", VA = "0x8C9444")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x8C944C", Offset = "0x8C944C", VA = "0x8C944C")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xC1E3E0", Offset = "0xC1E3E0", VA = "0xC1E3E0")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xC1E4C0", Offset = "0xC1E4C0", VA = "0xC1E4C0")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xC1E52C", Offset = "0xC1E52C", VA = "0xC1E52C")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20002B9")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20002BA")]
			public class EffectorLink
			{
				[Token(Token = "0x4000FF1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C728", Offset = "0x64C728")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000FF2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C760", Offset = "0x64C760")]
				public float weight;

				[Token(Token = "0x600102F")]
				[Address(RVA = "0xAA6AB4", Offset = "0xAA6AB4", VA = "0xAA6AB4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C5D8", Offset = "0x64C5D8")]
			public Transform transform;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C610", Offset = "0x64C610")]
			public Transform relativeTo;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C648", Offset = "0x64C648")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C680", Offset = "0x64C680")]
			public float verticalWeight;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C6B8", Offset = "0x64C6B8")]
			public float horizontalWeight;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C6F0", Offset = "0x64C6F0")]
			public float speed;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x8C9468", Offset = "0x8C9468", VA = "0x8C9468")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0x8C9794", Offset = "0x8C9794", VA = "0x8C9794")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x8C97A4", Offset = "0x8C97A4", VA = "0x8C97A4")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C5A0", Offset = "0x64C5A0")]
		public Body[] bodies;

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xC1E648", Offset = "0xC1E648", VA = "0xC1E648", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xC1E794", Offset = "0xC1E794", VA = "0xC1E794")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C798", Offset = "0x64C798")]
		public float tiltSpeed;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C7D0", Offset = "0x64C7D0")]
		public float tiltSensitivity;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C808", Offset = "0x64C808")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C840", Offset = "0x64C840")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xC322CC", Offset = "0xC322CC", VA = "0xC322CC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xC32314", Offset = "0xC32314", VA = "0xC32314", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xC324CC", Offset = "0xC324CC", VA = "0xC324CC")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IK ik;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xAAAC90", Offset = "0xAAAC90", VA = "0xAAAC90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xAAAD34", Offset = "0xAAAD34", VA = "0xAAAD34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xAAAE00", Offset = "0xAAAE00", VA = "0xAAAE00")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20002BE")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C8E8", Offset = "0x64C8E8")]
			public string name;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C920", Offset = "0x64C920")]
			public Collider collider;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C958", Offset = "0x64C958")]
			private float crossFadeTime;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9A4", Offset = "0x64C9A4")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9B4", Offset = "0x64C9B4")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9C4", Offset = "0x64C9C4")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64C9D4", Offset = "0x64C9D4")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x170001D3")]
			public bool inProgress
			{
				[Token(Token = "0x600103A")]
				[Address(RVA = "0x8CFC00", Offset = "0x8CFC00", VA = "0x8CFC00")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001D4")]
			protected float crossFader
			{
				[Token(Token = "0x600103B")]
				[Address(RVA = "0x8CFC14", Offset = "0x8CFC14", VA = "0x8CFC14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6562E4", Offset = "0x6562E4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600103C")]
				[Address(RVA = "0x8CFC1C", Offset = "0x8CFC1C", VA = "0x8CFC1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6562F4", Offset = "0x6562F4")]
				private set
				{
				}
			}

			[Token(Token = "0x170001D5")]
			protected float timer
			{
				[Token(Token = "0x600103D")]
				[Address(RVA = "0x8CFC24", Offset = "0x8CFC24", VA = "0x8CFC24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656304", Offset = "0x656304")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600103E")]
				[Address(RVA = "0x8CFC2C", Offset = "0x8CFC2C", VA = "0x8CFC2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656314", Offset = "0x656314")]
				private set
				{
				}
			}

			[Token(Token = "0x170001D6")]
			protected Vector3 force
			{
				[Token(Token = "0x600103F")]
				[Address(RVA = "0x8CFC34", Offset = "0x8CFC34", VA = "0x8CFC34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656324", Offset = "0x656324")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001040")]
				[Address(RVA = "0x8CFC40", Offset = "0x8CFC40", VA = "0x8CFC40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656334", Offset = "0x656334")]
				private set
				{
				}
			}

			[Token(Token = "0x170001D7")]
			protected Vector3 point
			{
				[Token(Token = "0x6001041")]
				[Address(RVA = "0x8CFC4C", Offset = "0x8CFC4C", VA = "0x8CFC4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656344", Offset = "0x656344")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001042")]
				[Address(RVA = "0x8CFC58", Offset = "0x8CFC58", VA = "0x8CFC58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656354", Offset = "0x656354")]
				private set
				{
				}
			}

			[Token(Token = "0x6001043")]
			[Address(RVA = "0x8CFC64", Offset = "0x8CFC64", VA = "0x8CFC64")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6001044")]
			[Address(RVA = "0x8CFD98", Offset = "0x8CFD98", VA = "0x8CFD98")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001045")]
			protected abstract float GetLength();

			[Token(Token = "0x6001046")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001047")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6001048")]
			[Address(RVA = "0x8CFE6C", Offset = "0x8CFE6C", VA = "0x8CFE6C")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BF")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20002C0")]
			public class EffectorLink
			{
				[Token(Token = "0x4001009")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CA8C", Offset = "0x64CA8C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400100A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CAC4", Offset = "0x64CAC4")]
				public float weight;

				[Token(Token = "0x400100B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x400100C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x600104D")]
				[Address(RVA = "0xAA6C24", Offset = "0xAA6C24", VA = "0xAA6C24")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x600104E")]
				[Address(RVA = "0xAA6CD4", Offset = "0xAA6CD4", VA = "0xAA6CD4")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600104F")]
				[Address(RVA = "0xAA6CE8", Offset = "0xAA6CE8", VA = "0xAA6CE8")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C9E4", Offset = "0x64C9E4")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CA1C", Offset = "0x64CA1C")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CA54", Offset = "0x64CA54")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6001049")]
			[Address(RVA = "0x8D01A8", Offset = "0x8D01A8", VA = "0x8D01A8", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x8D02D8", Offset = "0x8D02D8", VA = "0x8D02D8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x8D0344", Offset = "0x8D0344", VA = "0x8D0344", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x8D04AC", Offset = "0x8D04AC", VA = "0x8D04AC")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C1")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20002C2")]
			public class BoneLink
			{
				[Token(Token = "0x4001010")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CB6C", Offset = "0x64CB6C")]
				public Transform bone;

				[Token(Token = "0x4001011")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64CBA4", Offset = "0x64CBA4")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CBA4", Offset = "0x64CBA4")]
				public float weight;

				[Token(Token = "0x4001012")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4001013")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6001054")]
				[Address(RVA = "0xAA6ABC", Offset = "0xAA6ABC", VA = "0xAA6ABC")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6001055")]
				[Address(RVA = "0xAA6BD4", Offset = "0xAA6BD4", VA = "0xAA6BD4")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6001056")]
				[Address(RVA = "0xAA6BE0", Offset = "0xAA6BE0", VA = "0xAA6BE0")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CAFC", Offset = "0x64CAFC")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CB34", Offset = "0x64CB34")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x8CFE80", Offset = "0x8CFE80", VA = "0x8CFE80", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x8CFF24", Offset = "0x8CFF24", VA = "0x8CFF24", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x8CFF90", Offset = "0x8CFF90", VA = "0x8CFF90", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x8D0194", Offset = "0x8D0194", VA = "0x8D0194")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C878", Offset = "0x64C878")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64C8B0", Offset = "0x64C8B0")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x170001D2")]
		public bool inProgress
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xF78CE8", Offset = "0xF78CE8", VA = "0xF78CE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xF78DB8", Offset = "0xF78DB8", VA = "0xF78DB8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xF78E94", Offset = "0xF78E94", VA = "0xF78E94")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xF790F0", Offset = "0xF790F0", VA = "0xF790F0")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x20002C4")]
		public abstract class Offset
		{
			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CC68", Offset = "0x64CC68")]
			public string name;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CCA0", Offset = "0x64CCA0")]
			public Collider collider;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CCD8", Offset = "0x64CCD8")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD24", Offset = "0x64CD24")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD34", Offset = "0x64CD34")]
			private float <timer>k__BackingField;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD44", Offset = "0x64CD44")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64CD54", Offset = "0x64CD54")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x170001D8")]
			protected float crossFader
			{
				[Token(Token = "0x600105A")]
				[Address(RVA = "0x8D04C0", Offset = "0x8D04C0", VA = "0x8D04C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656364", Offset = "0x656364")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600105B")]
				[Address(RVA = "0x8D04C8", Offset = "0x8D04C8", VA = "0x8D04C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656374", Offset = "0x656374")]
				private set
				{
				}
			}

			[Token(Token = "0x170001D9")]
			protected float timer
			{
				[Token(Token = "0x600105C")]
				[Address(RVA = "0x8D04D0", Offset = "0x8D04D0", VA = "0x8D04D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656384", Offset = "0x656384")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600105D")]
				[Address(RVA = "0x8D04D8", Offset = "0x8D04D8", VA = "0x8D04D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656394", Offset = "0x656394")]
				private set
				{
				}
			}

			[Token(Token = "0x170001DA")]
			protected Vector3 force
			{
				[Token(Token = "0x600105E")]
				[Address(RVA = "0x8D04E0", Offset = "0x8D04E0", VA = "0x8D04E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6563A4", Offset = "0x6563A4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600105F")]
				[Address(RVA = "0x8D04EC", Offset = "0x8D04EC", VA = "0x8D04EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6563B4", Offset = "0x6563B4")]
				private set
				{
				}
			}

			[Token(Token = "0x170001DB")]
			protected Vector3 point
			{
				[Token(Token = "0x6001060")]
				[Address(RVA = "0x8D04F8", Offset = "0x8D04F8", VA = "0x8D04F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6563C4", Offset = "0x6563C4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001061")]
				[Address(RVA = "0x8D0504", Offset = "0x8D0504", VA = "0x8D0504")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6563D4", Offset = "0x6563D4")]
				private set
				{
				}
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x8D0510", Offset = "0x8D0510", VA = "0x8D0510")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6001063")]
			[Address(RVA = "0x8D0658", Offset = "0x8D0658", VA = "0x8D0658")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001064")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6001065")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001066")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6001067")]
			[Address(RVA = "0x8D0740", Offset = "0x8D0740", VA = "0x8D0740")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C5")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20002C6")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4001024")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CE0C", Offset = "0x64CE0C")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4001025")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CE44", Offset = "0x64CE44")]
				public float weight;

				[Token(Token = "0x4001026")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4001027")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x600106C")]
				[Address(RVA = "0xAA6CF0", Offset = "0xAA6CF0", VA = "0xAA6CF0")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x600106D")]
				[Address(RVA = "0xAA6D80", Offset = "0xAA6D80", VA = "0xAA6D80")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600106E")]
				[Address(RVA = "0xAA6D94", Offset = "0xAA6D94", VA = "0xAA6D94")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CD64", Offset = "0x64CD64")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CD9C", Offset = "0x64CD9C")]
			public int upDirCurveIndex;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CDD4", Offset = "0x64CDD4")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6001068")]
			[Address(RVA = "0x8D0754", Offset = "0x8D0754", VA = "0x8D0754", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0x8D0904", Offset = "0x8D0904", VA = "0x8D0904", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0x8D0970", Offset = "0x8D0970", VA = "0x8D0970", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0x8D0B10", Offset = "0x8D0B10", VA = "0x8D0B10")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C7")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20002C8")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x400102B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CEEC", Offset = "0x64CEEC")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x400102C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64CF24", Offset = "0x64CF24")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CF24", Offset = "0x64CF24")]
				public float weight;

				[Token(Token = "0x400102D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x400102E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6001073")]
				[Address(RVA = "0xAA6D9C", Offset = "0xAA6D9C", VA = "0xAA6D9C")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6001074")]
				[Address(RVA = "0xAA6E78", Offset = "0xAA6E78", VA = "0xAA6E78")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6001075")]
				[Address(RVA = "0xAA6E84", Offset = "0xAA6E84", VA = "0xAA6E84")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CE7C", Offset = "0x64CE7C")]
			public int curveIndex;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CEB4", Offset = "0x64CEB4")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x600106F")]
			[Address(RVA = "0x8D0B2C", Offset = "0x8D0B2C", VA = "0x8D0B2C", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001070")]
			[Address(RVA = "0x8D0C10", Offset = "0x8D0C10", VA = "0x8D0C10", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001071")]
			[Address(RVA = "0x8D0C7C", Offset = "0x8D0C7C", VA = "0x8D0C7C", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x8D0F38", Offset = "0x8D0F38", VA = "0x8D0F38")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CBF8", Offset = "0x64CBF8")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CC30", Offset = "0x64CC30")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xF79450", Offset = "0xF79450", VA = "0xF79450", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xF79524", Offset = "0xF79524", VA = "0xF79524")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xF79788", Offset = "0xF79788", VA = "0xF79788")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20002CA")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20002CB")]
			public class EffectorLink
			{
				[Token(Token = "0x400103C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D154", Offset = "0x64D154")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400103D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D18C", Offset = "0x64D18C")]
				public float weight;

				[Token(Token = "0x600107C")]
				[Address(RVA = "0xAA6EC8", Offset = "0xAA6EC8", VA = "0xAA6EC8")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CFE8", Offset = "0x64CFE8")]
			public Transform transform;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D020", Offset = "0x64D020")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D058", Offset = "0x64D058")]
			public float speed;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D090", Offset = "0x64D090")]
			public float acceleration;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D0C8", Offset = "0x64D0C8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64D0C8", Offset = "0x64D0C8")]
			public float matchVelocity;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D11C", Offset = "0x64D11C")]
			public float gravity;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x13D0EBC", Offset = "0x13D0EBC", VA = "0x13D0EBC")]
			public void Reset()
			{
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x13D0F74", Offset = "0x13D0F74", VA = "0x13D0F74")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x13D1230", Offset = "0x13D1230", VA = "0x13D1230")]
			public Body()
			{
			}
		}

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CF78", Offset = "0x64CF78")]
		public Body[] bodies;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64CFB0", Offset = "0x64CFB0")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xF16BBC", Offset = "0xF16BBC", VA = "0xF16BBC")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xF16C38", Offset = "0xF16C38", VA = "0xF16C38", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xF16CF8", Offset = "0xF16CF8", VA = "0xF16CF8")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D1C4", Offset = "0x64D1C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64D1C4", Offset = "0x64D1C4")]
		public Transform target;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64D224", Offset = "0x64D224")]
		public float weight;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D23C", Offset = "0x64D23C")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D274", Offset = "0x64D274")]
		public float weightSmoothTime;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D2AC", Offset = "0x64D2AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64D2AC", Offset = "0x64D2AC")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D30C", Offset = "0x64D30C")]
		public float maxRadiansDelta;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D344", Offset = "0x64D344")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D37C", Offset = "0x64D37C")]
		public float slerpSpeed;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D3B4", Offset = "0x64D3B4")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D3EC", Offset = "0x64D3EC")]
		public float minDistance;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64D424", Offset = "0x64D424")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D424", Offset = "0x64D424")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64D424", Offset = "0x64D424")]
		public float maxRootAngle;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x170001DC")]
		private Vector3 pivot
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x13BE54C", Offset = "0x13BE54C", VA = "0x13BE54C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x13BE4D8", Offset = "0x13BE4D8", VA = "0x13BE4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x13BE5DC", Offset = "0x13BE5DC", VA = "0x13BE5DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x13BEB10", Offset = "0x13BEB10", VA = "0x13BEB10")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x13BEBFC", Offset = "0x13BEBFC", VA = "0x13BEBFC")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x13BEDF4", Offset = "0x13BEDF4", VA = "0x13BEDF4")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002CE")]
		public class OffsetLimits
		{
			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D510", Offset = "0x64D510")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D548", Offset = "0x64D548")]
			public float spring;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D580", Offset = "0x64D580")]
			public bool x;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D5B8", Offset = "0x64D5B8")]
			public bool y;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D5F0", Offset = "0x64D5F0")]
			public bool z;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D628", Offset = "0x64D628")]
			public float minX;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D660", Offset = "0x64D660")]
			public float maxX;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D698", Offset = "0x64D698")]
			public float minY;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D6D0", Offset = "0x64D6D0")]
			public float maxY;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D708", Offset = "0x64D708")]
			public float minZ;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D740", Offset = "0x64D740")]
			public float maxZ;

			[Token(Token = "0x600108B")]
			[Address(RVA = "0x13D7B74", Offset = "0x13D7B74", VA = "0x13D7B74")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x600108C")]
			[Address(RVA = "0x13D7CCC", Offset = "0x13D7CCC", VA = "0x13D7CCC")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x600108D")]
			[Address(RVA = "0x13D7D44", Offset = "0x13D7D44", VA = "0x13D7D44")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0x13D7D9C", Offset = "0x13D7D9C", VA = "0x13D7D9C")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644280", Offset = "0x644280")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x170001DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001092")]
				[Address(RVA = "0x13D7B24", Offset = "0x13D7B24", VA = "0x13D7B24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001094")]
				[Address(RVA = "0x13D7B6C", Offset = "0x13D7B6C", VA = "0x13D7B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600108F")]
			[Address(RVA = "0x13D7984", Offset = "0x13D7984", VA = "0x13D7984")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0x13D79B0", Offset = "0x13D79B0", VA = "0x13D79B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0x13D79B4", Offset = "0x13D79B4", VA = "0x13D79B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001093")]
			[Address(RVA = "0x13D7B2C", Offset = "0x13D7B2C", VA = "0x13D7B2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D4A0", Offset = "0x64D4A0")]
		public float weight;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D4D8", Offset = "0x64D4D8")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x170001DD")]
		protected float deltaTime
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x9BD5A8", Offset = "0x9BD5A8", VA = "0x9BD5A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001084")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x9BD3D0", Offset = "0x9BD3D0", VA = "0x9BD3D0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x9BD5D4", Offset = "0x9BD5D4", VA = "0x9BD5D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6563E4", Offset = "0x6563E4")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x9BD64C", Offset = "0x9BD64C", VA = "0x9BD64C")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x9BD728", Offset = "0x9BD728", VA = "0x9BD728")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x9BD7E8", Offset = "0x9BD7E8", VA = "0x9BD7E8", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x9BD598", Offset = "0x9BD598", VA = "0x9BD598")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644290", Offset = "0x644290")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x170001E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109F")]
				[Address(RVA = "0x13D7F44", Offset = "0x13D7F44", VA = "0x13D7F44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A1")]
				[Address(RVA = "0x13D7F8C", Offset = "0x13D7F8C", VA = "0x13D7F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x13D7DA4", Offset = "0x13D7DA4", VA = "0x13D7DA4")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x13D7DD0", Offset = "0x13D7DD0", VA = "0x13D7DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0x13D7DD4", Offset = "0x13D7DD4", VA = "0x13D7DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x13D7F4C", Offset = "0x13D7F4C", VA = "0x13D7F4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D778", Offset = "0x64D778")]
		public float weight;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D7B0", Offset = "0x64D7B0")]
		public VRIK ik;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x170001E0")]
		protected float deltaTime
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x9BD918", Offset = "0x9BD918", VA = "0x9BD918")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001096")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x9BD944", Offset = "0x9BD944", VA = "0x9BD944", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x9BD970", Offset = "0x9BD970", VA = "0x9BD970")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656494", Offset = "0x656494")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x9BD9E8", Offset = "0x9BD9E8", VA = "0x9BD9E8")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x9BDAC4", Offset = "0x9BDAC4", VA = "0x9BDAC4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x9BDBF4", Offset = "0x9BDBF4", VA = "0x9BDBF4")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D3")]
		public class EffectorLink
		{
			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xA9A6A4", Offset = "0xA9A6A4", VA = "0xA9A6A4")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xA9A8C0", Offset = "0xA9A8C0", VA = "0xA9A8C0")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x9BDC04", Offset = "0x9BDC04", VA = "0x9BDC04")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x9BDCC8", Offset = "0x9BDCC8", VA = "0x9BDCC8")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x9BDD84", Offset = "0x9BDD84", VA = "0x9BDD84")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20002D5")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x20002D6")]
			public class EffectorLink
			{
				[Token(Token = "0x4001079")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D9C4", Offset = "0x64D9C4")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400107A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D9FC", Offset = "0x64D9FC")]
				public float weight;

				[Token(Token = "0x60010AD")]
				[Address(RVA = "0xAA7430", Offset = "0xAA7430", VA = "0xAA7430")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D820", Offset = "0x64D820")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D858", Offset = "0x64D858")]
			public Transform raycastTo;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D890", Offset = "0x64D890")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64D890", Offset = "0x64D890")]
			public float raycastRadius;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D8E4", Offset = "0x64D8E4")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D91C", Offset = "0x64D91C")]
			public float smoothTimeIn;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D954", Offset = "0x64D954")]
			public float smoothTimeOut;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D98C", Offset = "0x64D98C")]
			public LayerMask layers;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xA9F650", Offset = "0xA9F650", VA = "0xA9F650")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xA9F794", Offset = "0xA9F794", VA = "0xA9F794")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xA9F88C", Offset = "0xA9F88C", VA = "0xA9F88C")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xA9FA5C", Offset = "0xA9FA5C", VA = "0xA9FA5C")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64D7E8", Offset = "0x64D7E8")]
		public Avoider[] avoiders;

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x136E554", Offset = "0x136E554", VA = "0x136E554", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x136E5DC", Offset = "0x136E5DC", VA = "0x136E5DC")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20002D8")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x20002D9")]
			public class EffectorLink
			{
				[Token(Token = "0x4001098")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DD88", Offset = "0x64DD88")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4001099")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DDC0", Offset = "0x64DDC0")]
				public float weight;

				[Token(Token = "0x60010BD")]
				[Address(RVA = "0xAA7438", Offset = "0xAA7438", VA = "0xAA7438")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DC8C", Offset = "0x64DC8C")]
			public Vector3 offset;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64DCC4", Offset = "0x64DCC4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DCC4", Offset = "0x64DCC4")]
			public float additivity;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DD18", Offset = "0x64DD18")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DD50", Offset = "0x64DD50")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xAA09A4", Offset = "0xAA09A4", VA = "0xAA09A4")]
			public void Start()
			{
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xAA09F4", Offset = "0xAA09F4", VA = "0xAA09F4")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xAA0BB8", Offset = "0xAA0BB8", VA = "0xAA0BB8")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002DA")]
		public enum Handedness
		{
			[Token(Token = "0x400109B")]
			Right,
			[Token(Token = "0x400109C")]
			Left
		}

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DA34", Offset = "0x64DA34")]
		public AimIK aimIK;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DA6C", Offset = "0x64DA6C")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DAA4", Offset = "0x64DAA4")]
		public Handedness handedness;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DADC", Offset = "0x64DADC")]
		public bool twoHanded;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DB14", Offset = "0x64DB14")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DB4C", Offset = "0x64DB4C")]
		public float magnitudeRandom;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DB84", Offset = "0x64DB84")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DBBC", Offset = "0x64DBBC")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DBF4", Offset = "0x64DBF4")]
		public float blendTime;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DC2C", Offset = "0x64DC2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64DC2C", Offset = "0x64DC2C")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x170001E3")]
		public bool isFinished
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x13784A8", Offset = "0x13784A8", VA = "0x13784A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x1378F44", Offset = "0x1378F44", VA = "0x1378F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x1378F84", Offset = "0x1378F84", VA = "0x1378F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private Transform primaryHand
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x1378F04", Offset = "0x1378F04", VA = "0x1378F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private Transform secondaryHand
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x1378F24", Offset = "0x1378F24", VA = "0x1378F24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x13784D8", Offset = "0x13784D8", VA = "0x13784D8")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1378504", Offset = "0x1378504", VA = "0x1378504")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x137864C", Offset = "0x137864C", VA = "0x137864C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1378FC4", Offset = "0x1378FC4", VA = "0x1378FC4")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1379078", Offset = "0x1379078", VA = "0x1379078")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x13790B4", Offset = "0x13790B4", VA = "0x13790B4", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x13792A4", Offset = "0x13792A4", VA = "0x13792A4")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DDF8", Offset = "0x64DDF8")]
		public float weight;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DE30", Offset = "0x64DE30")]
		public float offset;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1381A84", Offset = "0x1381A84", VA = "0x1381A84")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1381B8C", Offset = "0x1381B8C", VA = "0x1381B8C")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1381C74", Offset = "0x1381C74", VA = "0x1381C74")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1381FC8", Offset = "0x1381FC8", VA = "0x1381FC8")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1382000", Offset = "0x1382000", VA = "0x1382000")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1382130", Offset = "0x1382130", VA = "0x1382130")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x20002DD")]
		public class Settings
		{
			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DE68", Offset = "0x64DE68")]
			public float scaleMlp;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DEA0", Offset = "0x64DEA0")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DED8", Offset = "0x64DED8")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DF10", Offset = "0x64DF10")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DF48", Offset = "0x64DF48")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DF80", Offset = "0x64DF80")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DFB8", Offset = "0x64DFB8")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64DFF0", Offset = "0x64DFF0")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E028", Offset = "0x64E028")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64E060", Offset = "0x64E060")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E060", Offset = "0x64E060")]
			public Vector3 headOffset;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E0B0", Offset = "0x64E0B0")]
			public Vector3 handOffset;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E0E8", Offset = "0x64E0E8")]
			public float footForwardOffset;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E120", Offset = "0x64E120")]
			public float footInwardOffset;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E158", Offset = "0x64E158")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E158", Offset = "0x64E158")]
			public float footHeadingOffset;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E1B4", Offset = "0x64E1B4")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E1CC", Offset = "0x64E1CC")]
			public float pelvisRotationWeight;

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xAA62D0", Offset = "0xAA62D0", VA = "0xAA62D0")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002DE")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x20002DF")]
			public class Target
			{
				[Token(Token = "0x40010BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x40010BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x40010BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x60010CB")]
				[Address(RVA = "0xAA7440", Offset = "0xAA7440", VA = "0xAA7440")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x60010CC")]
				[Address(RVA = "0xAA7500", Offset = "0xAA7500", VA = "0xAA7500")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xAA62C8", Offset = "0xAA62C8", VA = "0xAA62C8")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1398E18", Offset = "0x1398E18", VA = "0x1398E18")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1397084", Offset = "0x1397084", VA = "0x1397084")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1398F80", Offset = "0x1398F80", VA = "0x1398F80")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1398314", Offset = "0x1398314", VA = "0x1398314")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1399594", Offset = "0x1399594", VA = "0x1399594")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x8C24F8", Offset = "0x8C24F8", VA = "0x8C24F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x8C2554", Offset = "0x8C2554", VA = "0x8C2554")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x8C2588", Offset = "0x8C2588", VA = "0x8C2588")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x8C26C4", Offset = "0x8C26C4", VA = "0x8C26C4")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64E1E4", Offset = "0x64E1E4")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x170001E8")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x8C2DCC", Offset = "0x8C2DCC", VA = "0x8C2DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656544", Offset = "0x656544")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x8C2DD8", Offset = "0x8C2DD8", VA = "0x8C2DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656554", Offset = "0x656554")]
			private set
			{
			}
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x8C2DE4", Offset = "0x8C2DE4", VA = "0x8C2DE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x8C2F14", Offset = "0x8C2F14", VA = "0x8C2F14")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x8C3144", Offset = "0x8C3144", VA = "0x8C3144")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x8C3300", Offset = "0x8C3300", VA = "0x8C3300")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x8C371C", Offset = "0x8C371C", VA = "0x8C371C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x8C3858", Offset = "0x8C3858", VA = "0x8C3858")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20002E2")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002E3")]
		public class Offset
		{
			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x8CC440", Offset = "0x8CC440", VA = "0x8CC440")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x8CC5B4", Offset = "0x8CC5B4", VA = "0x8CC5B4")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xAB2134", Offset = "0xAB2134", VA = "0xAB2134")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xAB2190", Offset = "0xAB2190", VA = "0xAB2190")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xAB220C", Offset = "0xAB220C", VA = "0xAB220C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xAB22F0", Offset = "0xAB22F0", VA = "0xAB22F0")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC1D6A8", Offset = "0xC1D6A8", VA = "0xC1D6A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC1D72C", Offset = "0xC1D72C", VA = "0xC1D72C")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E22C", Offset = "0x64E22C")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC1E59C", Offset = "0xC1E59C", VA = "0xC1E59C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC1E614", Offset = "0xC1E614", VA = "0xC1E614")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftHandPositionOffset;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftHandRotationOffset;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 leftHandPosRelToRight;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1380320", Offset = "0x1380320", VA = "0x1380320")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1380364", Offset = "0x1380364", VA = "0x1380364")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1380518", Offset = "0x1380518", VA = "0x1380518")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E264", Offset = "0x64E264")]
		public AimPoser aimPoser;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E29C", Offset = "0x64E29C")]
		public AimIK aim;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E2D4", Offset = "0x64E2D4")]
		public LookAtIK lookAt;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E30C", Offset = "0x64E30C")]
		public Animator animator;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E344", Offset = "0x64E344")]
		public float crossfadeTime;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E37C", Offset = "0x64E37C")]
		public float minAimDistance;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1382144", Offset = "0x1382144", VA = "0x1382144")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1382188", Offset = "0x1382188", VA = "0x1382188")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x13822F0", Offset = "0x13822F0", VA = "0x13822F0")]
		private void Pose()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x138249C", Offset = "0x138249C", VA = "0x138249C")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x13825D8", Offset = "0x13825D8", VA = "0x13825D8")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1382654", Offset = "0x1382654", VA = "0x1382654")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x138FC94", Offset = "0x138FC94", VA = "0x138FC94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x138FE04", Offset = "0x138FE04", VA = "0x138FE04")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x138FF98", Offset = "0x138FF98", VA = "0x138FF98")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x64E3B4", Offset = "0x64E3B4")]
		public Animator animator;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x64E3EC", Offset = "0x64E3EC")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E424", Offset = "0x64E424")]
		public float lookAtWeight;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E43C", Offset = "0x64E43C")]
		public float lookAtBodyWeight;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E454", Offset = "0x64E454")]
		public float lookAtHeadWeight;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E46C", Offset = "0x64E46C")]
		public float lookAtEyesWeight;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E484", Offset = "0x64E484")]
		public float lookAtClampWeight;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E49C", Offset = "0x64E49C")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E4B4", Offset = "0x64E4B4")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x64E4CC", Offset = "0x64E4CC")]
		public Transform footTargetBiped;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E504", Offset = "0x64E504")]
		public float footPositionWeight;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E51C", Offset = "0x64E51C")]
		public float footRotationWeight;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x64E534", Offset = "0x64E534")]
		public Transform handTargetBiped;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E56C", Offset = "0x64E56C")]
		public float handPositionWeight;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E584", Offset = "0x64E584")]
		public float handRotationWeight;

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC2A94C", Offset = "0xC2A94C", VA = "0xC2A94C")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC2AD54", Offset = "0xC2AD54", VA = "0xC2AD54")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float sine;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit rootHit;

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x13C00E4", Offset = "0x13C00E4", VA = "0x13C00E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x13C08F0", Offset = "0x13C08F0", VA = "0x13C08F0")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x13C06A0", Offset = "0x13C06A0", VA = "0x13C06A0")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x13C09EC", Offset = "0x13C09EC", VA = "0x13C09EC")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x170001E9")]
		public Vector3 inputVector
		{
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x13C0A18", Offset = "0x13C0A18", VA = "0x13C0A18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x13C0A9C", Offset = "0x13C0A9C", VA = "0x13C0A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x13C0CC0", Offset = "0x13C0CC0", VA = "0x13C0CC0")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6442A0", Offset = "0x6442A0")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400112A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400112B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x170001EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001106")]
				[Address(RVA = "0x13D6640", Offset = "0x13D6640", VA = "0x13D6640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001108")]
				[Address(RVA = "0x13D6688", Offset = "0x13D6688", VA = "0x13D6688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0x13D6344", Offset = "0x13D6344", VA = "0x13D6344")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001104")]
			[Address(RVA = "0x13D6370", Offset = "0x13D6370", VA = "0x13D6370", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x13D6374", Offset = "0x13D6374", VA = "0x13D6374", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001107")]
			[Address(RVA = "0x13D6648", Offset = "0x13D6648", VA = "0x13D6648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 footUpAxis;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 smoothHitNormal;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 lastStepPosition;

		[Token(Token = "0x170001EA")]
		public bool isStepping
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x13C0CD4", Offset = "0x13C0CD4", VA = "0x13C0CD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EB")]
		public Vector3 position
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x13C09B8", Offset = "0x13C09B8", VA = "0x13C09B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x13C0CE8", Offset = "0x13C0CE8", VA = "0x13C0CE8")]
			set
			{
			}
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x13C0D38", Offset = "0x13C0D38", VA = "0x13C0D38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x13C0F64", Offset = "0x13C0F64", VA = "0x13C0F64")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x13C1100", Offset = "0x13C1100", VA = "0x13C1100")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x13C1334", Offset = "0x13C1334", VA = "0x13C1334")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x13C15D8", Offset = "0x13C15D8", VA = "0x13C15D8")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x13C1750", Offset = "0x13C1750", VA = "0x13C1750")]
		private void Update()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x13C1280", Offset = "0x13C1280", VA = "0x13C1280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656564", Offset = "0x656564")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x13C194C", Offset = "0x13C194C", VA = "0x13C194C")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x13C19B0", Offset = "0x13C19B0", VA = "0x13C19B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x13C1A80", Offset = "0x13C1A80", VA = "0x13C1A80")]
		private void Update()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x13C1CD4", Offset = "0x13C1CD4", VA = "0x13C1CD4")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20002F0")]
		public struct Warp
		{
			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E65C", Offset = "0x64E65C")]
			public int animationLayer;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E694", Offset = "0x64E694")]
			public string animationState;

			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E6CC", Offset = "0x64E6CC")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E704", Offset = "0x64E704")]
			public Transform warpFrom;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E73C", Offset = "0x64E73C")]
			public Transform warpTo;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E774", Offset = "0x64E774")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x20002F1")]
		public enum EffectorMode
		{
			[Token(Token = "0x400113B")]
			PositionOffset,
			[Token(Token = "0x400113C")]
			Position
		}

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E59C", Offset = "0x64E59C")]
		public Animator animator;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E5D4", Offset = "0x64E5D4")]
		public EffectorMode effectorMode;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E60C", Offset = "0x64E60C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x64E60C", Offset = "0x64E60C")]
		public Warp[] warps;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xC20A70", Offset = "0xC20A70", VA = "0xC20A70", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xC20A9C", Offset = "0xC20A9C", VA = "0xC20A9C")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xC20CDC", Offset = "0xC20CDC", VA = "0xC20CDC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xC20FA0", Offset = "0xC20FA0", VA = "0xC20FA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xC21040", Offset = "0xC21040", VA = "0xC21040")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6442B0", Offset = "0x6442B0")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xC21048", Offset = "0xC21048", VA = "0xC21048", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xC210A4", Offset = "0xC210A4", VA = "0xC210A4")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xC21240", Offset = "0xC21240", VA = "0xC21240", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xC21448", Offset = "0xC21448", VA = "0xC21448")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644310", Offset = "0x644310")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644310", Offset = "0x644310")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E7AC", Offset = "0x64E7AC")]
		public float headLookWeight;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xC2145C", Offset = "0xC2145C", VA = "0xC2145C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xC21628", Offset = "0xC21628", VA = "0xC21628", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xC216A4", Offset = "0xC216A4", VA = "0xC216A4")]
		private void Read()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xC21798", Offset = "0xC21798", VA = "0xC21798")]
		private void AimIK()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xC217E0", Offset = "0xC217E0", VA = "0xC217E0")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xC21BCC", Offset = "0xC21BCC", VA = "0xC21BCC")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xC21A54", Offset = "0xC21A54", VA = "0xC21A54")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xC21E28", Offset = "0xC21E28", VA = "0xC21E28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xC21F58", Offset = "0xC21F58", VA = "0xC21F58")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6443A4", Offset = "0x6443A4")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x88E4A4", Offset = "0x88E4A4", VA = "0x88E4A4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x88E508", Offset = "0x88E508", VA = "0x88E508", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x88E744", Offset = "0x88E744", VA = "0x88E744")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x88E838", Offset = "0x88E838", VA = "0x88E838")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644404", Offset = "0x644404")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x170001EE")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x8908C8", Offset = "0x8908C8", VA = "0x8908C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EF")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x89094C", Offset = "0x89094C", VA = "0x89094C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x8906C8", Offset = "0x8906C8", VA = "0x8906C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x89073C", Offset = "0x89073C", VA = "0x89073C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x8909D0", Offset = "0x8909D0", VA = "0x8909D0")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E7C4", Offset = "0x64E7C4")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xAAAE08", Offset = "0xAAAE08", VA = "0xAAAE08", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xAAB268", Offset = "0xAAB268", VA = "0xAAB268")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xAAB32C", Offset = "0xAAB32C", VA = "0xAAB32C")]
		private void Start()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xAAB3E8", Offset = "0xAAB3E8", VA = "0xAAB3E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xAAB76C", Offset = "0xAAB76C", VA = "0xAAB76C")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xAAB818", Offset = "0xAAB818", VA = "0xAAB818")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F9")]
		public class Limb
		{
			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x6001131")]
			[Address(RVA = "0x8CBF0C", Offset = "0x8CBF0C", VA = "0x8CBF0C")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x6001132")]
			[Address(RVA = "0x8CBF90", Offset = "0x8CBF90", VA = "0x8CBF90")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xAAF3C8", Offset = "0xAAF3C8", VA = "0xAAF3C8")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xAAF520", Offset = "0xAAF520", VA = "0xAAF520")]
		private void Start()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xAAF5C4", Offset = "0xAAF5C4", VA = "0xAAF5C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xAAF5C8", Offset = "0xAAF5C8", VA = "0xAAF5C8")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xAAF5D8", Offset = "0xAAF5D8", VA = "0xAAF5D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xAAF64C", Offset = "0xAAF64C", VA = "0xAAF64C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xAAF72C", Offset = "0xAAF72C", VA = "0xAAF72C")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E7DC", Offset = "0x64E7DC")]
		public Transform target;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E814", Offset = "0x64E814")]
		public Transform pin;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E84C", Offset = "0x64E84C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E884", Offset = "0x64E884")]
		public AimIK aim;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E8BC", Offset = "0x64E8BC")]
		public float weight;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E8F4", Offset = "0x64E8F4")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E92C", Offset = "0x64E92C")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xAAF734", Offset = "0xAAF734", VA = "0xAAF734")]
		private void Start()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xAAF790", Offset = "0xAAF790", VA = "0xAAF790")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xAAF934", Offset = "0xAAF934", VA = "0xAAF934")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xAB1ABC", Offset = "0xAB1ABC", VA = "0xAB1ABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xAB1B94", Offset = "0xAB1B94", VA = "0xAB1B94")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xAB1C24", Offset = "0xAB1C24", VA = "0xAB1C24")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xAB1FFC", Offset = "0xAB1FFC", VA = "0xAB1FFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xAB212C", Offset = "0xAB212C", VA = "0xAB212C")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E964", Offset = "0x64E964")]
		public float aimWeight;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E97C", Offset = "0x64E97C")]
		public float sightWeight;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E994", Offset = "0x64E994")]
		public float maxAngle;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CameraControllerFPS cam;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Recoil recoil;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E9B0", Offset = "0x64E9B0")]
		public float cameraRecoilWeight;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool updateFrame;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xAB22F8", Offset = "0xAB22F8", VA = "0xAB22F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xAB246C", Offset = "0xAB246C", VA = "0xAB246C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xAB2478", Offset = "0xAB2478", VA = "0xAB2478")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xAB26F8", Offset = "0xAB26F8", VA = "0xAB26F8")]
		private void Aiming()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xAB28A4", Offset = "0xAB28A4", VA = "0xAB28A4")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xAB2540", Offset = "0xAB2540", VA = "0xAB2540")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xAB3198", Offset = "0xAB3198", VA = "0xAB3198")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644464", Offset = "0x644464")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644464", Offset = "0x644464")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64E9C8", Offset = "0x64E9C8")]
		public float walkSpeed;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xAB31B8", Offset = "0xAB31B8", VA = "0xAB31B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xAB3244", Offset = "0xAB3244", VA = "0xAB3244")]
		private void Update()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xAB3330", Offset = "0xAB3330", VA = "0xAB3330")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xAB33E8", Offset = "0xAB33E8", VA = "0xAB33E8")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xF790F8", Offset = "0xF790F8", VA = "0xF790F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xF7925C", Offset = "0xF7925C", VA = "0xF7925C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xF79440", Offset = "0xF79440", VA = "0xF79440")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xF79AE8", Offset = "0xF79AE8", VA = "0xF79AE8")]
		private void Start()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xF79C30", Offset = "0xF79C30", VA = "0xF79C30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xF79F6C", Offset = "0xF79F6C", VA = "0xF79F6C")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xF194DC", Offset = "0xF194DC", VA = "0xF194DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xF19728", Offset = "0xF19728", VA = "0xF19728")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xF19834", Offset = "0xF19834", VA = "0xF19834")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xF1983C", Offset = "0xF1983C", VA = "0xF1983C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xF1A050", Offset = "0xF1A050", VA = "0xF1A050")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6444F8", Offset = "0x6444F8")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64E9E0", Offset = "0x64E9E0")]
		public InteractionObject interactionObject;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EA18", Offset = "0x64EA18")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x13B3E0C", Offset = "0x13B3E0C", VA = "0x13B3E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x13B3E68", Offset = "0x13B3E68", VA = "0x13B3E68")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x13B41AC", Offset = "0x13B41AC", VA = "0x13B41AC")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000305")]
		public class Partner
		{
			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x170001F0")]
			private Transform neck
			{
				[Token(Token = "0x600115C")]
				[Address(RVA = "0x13D4EE4", Offset = "0x13D4EE4", VA = "0x13D4EE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x13D4798", Offset = "0x13D4798", VA = "0x13D4798")]
			public void Initiate()
			{
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0x13D47B8", Offset = "0x13D47B8", VA = "0x13D47B8")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0x13D4D50", Offset = "0x13D4D50", VA = "0x13D4D50")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x600115E")]
			[Address(RVA = "0x13D4F3C", Offset = "0x13D4F3C", VA = "0x13D4F3C")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x13B86D8", Offset = "0x13B86D8", VA = "0x13B86D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x13B8714", Offset = "0x13B8714", VA = "0x13B8714")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x13B877C", Offset = "0x13B877C", VA = "0x13B877C")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000307")]
		public enum Mode
		{
			[Token(Token = "0x40011C7")]
			Position,
			[Token(Token = "0x40011C8")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x2000308")]
		public class Absorber
		{
			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EB30", Offset = "0x64EB30")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EB68", Offset = "0x64EB68")]
			public float weight;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x13D6E2C", Offset = "0x13D6E2C", VA = "0x13D6E2C")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x13D6F14", Offset = "0x13D6F14", VA = "0x13D6F14")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x13D6F50", Offset = "0x13D6F50", VA = "0x13D6F50")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x13D6FE8", Offset = "0x13D6FE8", VA = "0x13D6FE8")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x13D705C", Offset = "0x13D705C", VA = "0x13D705C")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EA50", Offset = "0x64EA50")]
		public Mode mode;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EA88", Offset = "0x64EA88")]
		public Absorber[] absorbers;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EAC0", Offset = "0x64EAC0")]
		public AnimationCurve falloff;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EAF8", Offset = "0x64EAF8")]
		public float falloffSpeed;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x13C359C", Offset = "0x13C359C", VA = "0x13C359C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x13C368C", Offset = "0x13C368C", VA = "0x13C368C")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x13C371C", Offset = "0x13C371C", VA = "0x13C371C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x13C3830", Offset = "0x13C3830", VA = "0x13C3830")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x13C38BC", Offset = "0x13C38BC", VA = "0x13C38BC", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x13C39F8", Offset = "0x13C39F8", VA = "0x13C39F8")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x13C3A08", Offset = "0x13C3A08", VA = "0x13C3A08")]
		private void Start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x13C3A84", Offset = "0x13C3A84", VA = "0x13C3A84")]
		private void Update()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x13C3B60", Offset = "0x13C3B60", VA = "0x13C3B60")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x13C3C20", Offset = "0x13C3C20", VA = "0x13C3C20")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200030B")]
		public class EffectorLink
		{
			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6001171")]
			[Address(RVA = "0x13D7974", Offset = "0x13D7974", VA = "0x13D7974")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x9BD2C4", Offset = "0x9BD2C4", VA = "0x9BD2C4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x9BD3FC", Offset = "0x9BD3FC", VA = "0x9BD3FC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x9BD588", Offset = "0x9BD588", VA = "0x9BD588")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644558", Offset = "0x644558")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64EBB0", Offset = "0x64EBB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EBB0", Offset = "0x64EBB0")]
		public float weight;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EC04", Offset = "0x64EC04")]
		public float hangingDistanceMlp;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EC3C", Offset = "0x64EC3C")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EC88", Offset = "0x64EC88")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 pelvisDownAxis;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x136DBFC", Offset = "0x136DBFC", VA = "0x136DBFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x136DECC", Offset = "0x136DECC", VA = "0x136DECC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x136E514", Offset = "0x136E514", VA = "0x136E514")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x170001F1")]
		private bool holding
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x136EAF0", Offset = "0x136EAF0", VA = "0x136EAF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x136E81C", Offset = "0x136E81C", VA = "0x136E81C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001176")]
		protected abstract void RotatePivot();

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x136EB10", Offset = "0x136EB10", VA = "0x136EB10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x136ECC8", Offset = "0x136ECC8", VA = "0x136ECC8")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x136EE4C", Offset = "0x136EE4C", VA = "0x136EE4C")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x136EF28", Offset = "0x136EF28", VA = "0x136EF28")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x136F05C", Offset = "0x136F05C", VA = "0x136F05C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x136F1C0", Offset = "0x136F1C0", VA = "0x136F1C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x136F3D0", Offset = "0x136F3D0", VA = "0x136F3D0")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x136F3E4", Offset = "0x136F3E4", VA = "0x136F3E4", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x136F648", Offset = "0x136F648", VA = "0x136F648")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x136F65C", Offset = "0x136F65C", VA = "0x136F65C", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x136F790", Offset = "0x136F790", VA = "0x136F790")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1376828", Offset = "0x1376828", VA = "0x1376828")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1376908", Offset = "0x1376908", VA = "0x1376908")]
		private void Update()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1376A1C", Offset = "0x1376A1C", VA = "0x1376A1C")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6445B8", Offset = "0x6445B8")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1379310", Offset = "0x1379310", VA = "0x1379310")]
		private void Start()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x137936C", Offset = "0x137936C", VA = "0x137936C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x13793C4", Offset = "0x13793C4", VA = "0x13793C4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x13794A4", Offset = "0x13794A4", VA = "0x13794A4")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644618", Offset = "0x644618")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x170001F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001191")]
				[Address(RVA = "0xAA0F9C", Offset = "0xAA0F9C", VA = "0xAA0F9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001193")]
				[Address(RVA = "0xAA0FE4", Offset = "0xAA0FE4", VA = "0xAA0FE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0xAA0DA8", Offset = "0xAA0DA8", VA = "0xAA0DA8")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0xAA0DD4", Offset = "0xAA0DD4", VA = "0xAA0DD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001190")]
			[Address(RVA = "0xAA0DD8", Offset = "0xAA0DD8", VA = "0xAA0DD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001192")]
			[Address(RVA = "0xAA0FA4", Offset = "0xAA0FA4", VA = "0xAA0FA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x137A284", Offset = "0x137A284", VA = "0x137A284")]
		private void Start()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x137A34C", Offset = "0x137A34C", VA = "0x137A34C")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x137A394", Offset = "0x137A394", VA = "0x137A394")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656614", Offset = "0x656614")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x137A41C", Offset = "0x137A41C", VA = "0x137A41C")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644628", Offset = "0x644628")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644688", Offset = "0x644688")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x170001F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600119A")]
				[Address(RVA = "0xAA2A6C", Offset = "0xAA2A6C", VA = "0xAA2A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600119C")]
				[Address(RVA = "0xAA2AB4", Offset = "0xAA2AB4", VA = "0xAA2AB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0xAA28FC", Offset = "0xAA28FC", VA = "0xAA28FC")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0xAA2928", Offset = "0xAA2928", VA = "0xAA2928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0xAA292C", Offset = "0xAA292C", VA = "0xAA292C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0xAA2A74", Offset = "0xAA2A74", VA = "0xAA2A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x138587C", Offset = "0x138587C", VA = "0x138587C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1385934", Offset = "0x1385934", VA = "0x1385934")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6566C4", Offset = "0x6566C4")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x13859AC", Offset = "0x13859AC", VA = "0x13859AC")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000317")]
		public class EffectorLink
		{
			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LayerMask touchLayers;

			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lerpSpeed;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float minSwitchTime;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float releaseDistance;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool sliding;

			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float raycastDistance;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool inTouch;

			[Token(Token = "0x4001219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private RaycastHit hit;

			[Token(Token = "0x400121A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 targetPosition;

			[Token(Token = "0x400121B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Quaternion targetRotation;

			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private bool initiated;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float nextSwitchTime;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float speedF;

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xAA39D4", Offset = "0xAA39D4", VA = "0xAA39D4")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xAA3CBC", Offset = "0xAA3CBC", VA = "0xAA3CBC")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xAA3DA4", Offset = "0xAA3DA4", VA = "0xAA3DA4")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60011A4")]
			[Address(RVA = "0xAA4238", Offset = "0xAA4238", VA = "0xAA4238")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xAA432C", Offset = "0xAA432C", VA = "0xAA432C")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xAA43C4", Offset = "0xAA43C4", VA = "0xAA43C4")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xAA4458", Offset = "0xAA4458", VA = "0xAA4458")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xAA44EC", Offset = "0xAA44EC", VA = "0xAA44EC")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xAA46B8", Offset = "0xAA46B8", VA = "0xAA46B8")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1390F4C", Offset = "0x1390F4C", VA = "0x1390F4C")]
		private void Start()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1390FC8", Offset = "0x1390FC8", VA = "0x1390FC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1391038", Offset = "0x1391038", VA = "0x1391038")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x1391100", Offset = "0x1391100", VA = "0x1391100")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ECD4", Offset = "0x64ECD4")]
		public Transform to;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64ED0C", Offset = "0x64ED0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ED0C", Offset = "0x64ED0C")]
		public float transferMotion;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1394464", Offset = "0x1394464", VA = "0x1394464")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x13944A0", Offset = "0x13944A0", VA = "0x13944A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1394554", Offset = "0x1394554", VA = "0x1394554")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64ED60", Offset = "0x64ED60")]
		public Transform leftHandTarget;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1395390", Offset = "0x1395390", VA = "0x1395390")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x13955A8", Offset = "0x13955A8", VA = "0x13955A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1395798", Offset = "0x1395798", VA = "0x1395798")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1395864", Offset = "0x1395864", VA = "0x1395864")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1395994", Offset = "0x1395994", VA = "0x1395994")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1395C38", Offset = "0x1395C38", VA = "0x1395C38", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1395FC4", Offset = "0x1395FC4", VA = "0x1395FC4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1396230", Offset = "0x1396230", VA = "0x1396230")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xF6B318", Offset = "0xF6B318", VA = "0xF6B318")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xF6B640", Offset = "0xF6B640", VA = "0xF6B640")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xF6B6C0", Offset = "0xF6B6C0", VA = "0xF6B6C0")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644698", Offset = "0x644698")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x170001F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C1")]
				[Address(RVA = "0xA9FCE4", Offset = "0xA9FCE4", VA = "0xA9FCE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C3")]
				[Address(RVA = "0xA9FD2C", Offset = "0xA9FD2C", VA = "0xA9FD2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xA9FB98", Offset = "0xA9FB98", VA = "0xA9FB98")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xA9FBC4", Offset = "0xA9FBC4", VA = "0xA9FBC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xA9FBC8", Offset = "0xA9FBC8", VA = "0xA9FBC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xA9FCEC", Offset = "0xA9FCEC", VA = "0xA9FCEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x136FB0C", Offset = "0x136FB0C", VA = "0x136FB0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x136FC50", Offset = "0x136FC50", VA = "0x136FC50")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x136FBD8", Offset = "0x136FBD8", VA = "0x136FBD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656774", Offset = "0x656774")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x136FDD4", Offset = "0x136FDD4", VA = "0x136FDD4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x136FEC0", Offset = "0x136FEC0", VA = "0x136FEC0")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x136FFA8", Offset = "0x136FFA8", VA = "0x136FFA8")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64ED98", Offset = "0x64ED98")]
		public float weight;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xC2778C", Offset = "0xC2778C", VA = "0xC2778C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xC27800", Offset = "0xC27800", VA = "0xC27800")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xC278B8", Offset = "0xC278B8", VA = "0xC278B8")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000320")]
		public class Part
		{
			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xAA4E8C", Offset = "0xAA4E8C", VA = "0xAA4E8C")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xAA4FCC", Offset = "0xAA4FCC", VA = "0xAA4FCC")]
			public Part()
			{
			}
		}

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1394948", Offset = "0x1394948", VA = "0x1394948")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x13949C4", Offset = "0x13949C4", VA = "0x13949C4")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF79790", Offset = "0xF79790", VA = "0xF79790")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF798F4", Offset = "0xF798F4", VA = "0xF798F4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF79AD8", Offset = "0xF79AD8", VA = "0xF79AD8")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EDB0", Offset = "0x64EDB0")]
		public VRIK ik;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EDE8", Offset = "0x64EDE8")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EE20", Offset = "0x64EE20")]
		public Transform headTracker;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EE58", Offset = "0x64EE58")]
		public Transform bodyTracker;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EE90", Offset = "0x64EE90")]
		public Transform leftHandTracker;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EEC8", Offset = "0x64EEC8")]
		public Transform rightHandTracker;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EF00", Offset = "0x64EF00")]
		public Transform leftFootTracker;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64EF38", Offset = "0x64EF38")]
		public Transform rightFootTracker;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64EF70", Offset = "0x64EF70")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1396F14", Offset = "0x1396F14", VA = "0x1396F14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x1398F10", Offset = "0x1398F10", VA = "0x1398F10")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x8C26DC", Offset = "0x8C26DC", VA = "0x8C26DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x8C2738", Offset = "0x8C2738", VA = "0x8C2738")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x8C28C0", Offset = "0x8C28C0", VA = "0x8C28C0")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x8C28F4", Offset = "0x8C28F4", VA = "0x8C28F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x8C2D90", Offset = "0x8C2D90", VA = "0x8C2D90")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170001F8")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x88D790", Offset = "0x88D790", VA = "0x88D790", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x88D76C", Offset = "0x88D76C", VA = "0x88D76C", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x88D798", Offset = "0x88D798", VA = "0x88D798")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x88D7FC", Offset = "0x88D7FC", VA = "0x88D7FC", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x88D994", Offset = "0x88D994", VA = "0x88D994", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x88DBB8", Offset = "0x88DBB8", VA = "0x88DBB8", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x88D9A4", Offset = "0x88D9A4", VA = "0x88D9A4")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x88DBC8", Offset = "0x88DBC8", VA = "0x88DBC8")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6446A8", Offset = "0x6446A8")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x88DBE0", Offset = "0x88DBE0", VA = "0x88DBE0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x88DC44", Offset = "0x88DC44", VA = "0x88DC44", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x88DCE0", Offset = "0x88DCE0", VA = "0x88DCE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x88DDF8", Offset = "0x88DDF8", VA = "0x88DDF8")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644708", Offset = "0x644708")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x64EFD8", Offset = "0x64EFD8")]
		private float animSpeedMultiplier;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x4001268")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4001269")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x170001F9")]
		public override bool animationGrounded
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x88DEB8", Offset = "0x88DEB8", VA = "0x88DEB8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x88DE10", Offset = "0x88DE10", VA = "0x88DE10", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x88DE9C", Offset = "0x88DE9C", VA = "0x88DE9C", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x88DFB0", Offset = "0x88DFB0", VA = "0x88DFB0", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x88E378", Offset = "0x88E378", VA = "0x88E378")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x88E480", Offset = "0x88E480", VA = "0x88E480")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644768", Offset = "0x644768")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x644768", Offset = "0x644768")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F01C", Offset = "0x64F01C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F01C", Offset = "0x64F01C")]
		public Transform gravityTarget;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F07C", Offset = "0x64F07C")]
		public float gravityMultiplier;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x4001275")]
		protected const float half = 0.5f;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x60011E7")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x88E85C", Offset = "0x88E85C", VA = "0x88E85C")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x88E98C", Offset = "0x88E98C", VA = "0x88E98C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x88EB74", Offset = "0x88EB74", VA = "0x88EB74", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x88ED24", Offset = "0x88ED24", VA = "0x88ED24")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x88ED88", Offset = "0x88ED88", VA = "0x88ED88")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x88EEA8", Offset = "0x88EEA8", VA = "0x88EEA8")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x88EFCC", Offset = "0x88EFCC", VA = "0x88EFCC")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x88EFF0", Offset = "0x88EFF0", VA = "0x88EFF0")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x88F014", Offset = "0x88F014", VA = "0x88F014")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x88F074", Offset = "0x88F074", VA = "0x88F074")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x200032A")]
		public enum MoveMode
		{
			[Token(Token = "0x40012B2")]
			Directional,
			[Token(Token = "0x40012B3")]
			Strafe
		}

		[Token(Token = "0x200032B")]
		public struct AnimState
		{
			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6447FC", Offset = "0x6447FC")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001207")]
				[Address(RVA = "0x8CA768", Offset = "0x8CA768", VA = "0x8CA768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001209")]
				[Address(RVA = "0x8CA7B0", Offset = "0x8CA7B0", VA = "0x8CA7B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0x8CA638", Offset = "0x8CA638", VA = "0x8CA638")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6001205")]
			[Address(RVA = "0x8CA664", Offset = "0x8CA664", VA = "0x8CA664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001206")]
			[Address(RVA = "0x8CA668", Offset = "0x8CA668", VA = "0x8CA668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001208")]
			[Address(RVA = "0x8CA770", Offset = "0x8CA770", VA = "0x8CA770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F0B4", Offset = "0x64F0B4")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F0EC", Offset = "0x64F0EC")]
		public MoveMode moveMode;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F124", Offset = "0x64F124")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F15C", Offset = "0x64F15C")]
		public bool smoothJump;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F194", Offset = "0x64F194")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x64F1CC", Offset = "0x64F1CC")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F204", Offset = "0x64F204")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x170001FA")]
		public bool onGround
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x8909D8", Offset = "0x8909D8", VA = "0x8909D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656824", Offset = "0x656824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x8909E0", Offset = "0x8909E0", VA = "0x8909E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656834", Offset = "0x656834")]
			private set
			{
			}
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x8909EC", Offset = "0x8909EC", VA = "0x8909EC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x890B54", Offset = "0x890B54", VA = "0x890B54")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x890BE4", Offset = "0x890BE4", VA = "0x890BE4", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x890C60", Offset = "0x890C60", VA = "0x890C60")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x89184C", Offset = "0x89184C", VA = "0x89184C", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x891AA4", Offset = "0x891AA4", VA = "0x891AA4", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x891154", Offset = "0x891154", VA = "0x891154")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x891B80", Offset = "0x891B80", VA = "0x891B80")]
		private void WallRun()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x892028", Offset = "0x892028", VA = "0x892028")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x8918D4", Offset = "0x8918D4", VA = "0x8918D4")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x8920C8", Offset = "0x8920C8", VA = "0x8920C8", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x892404", Offset = "0x892404", VA = "0x892404")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x8924F4", Offset = "0x8924F4", VA = "0x8924F4", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x892654", Offset = "0x892654", VA = "0x892654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656844", Offset = "0x656844")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x8914A4", Offset = "0x8914A4", VA = "0x8914A4")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x8926F0", Offset = "0x8926F0", VA = "0x8926F0")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x64480C", Offset = "0x64480C")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200032E")]
		public enum RotationMode
		{
			[Token(Token = "0x40012CF")]
			Smooth,
			[Token(Token = "0x40012D0")]
			Linear
		}

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F214", Offset = "0x64F214")]
		public CameraController cameraController;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F24C", Offset = "0x64F24C")]
		public float accelerationTime;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F284", Offset = "0x64F284")]
		public float turnTime;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F2BC", Offset = "0x64F2BC")]
		public bool walkByDefault;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F2F4", Offset = "0x64F2F4")]
		public RotationMode rotationMode;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F32C", Offset = "0x64F32C")]
		public float moveSpeed;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F364", Offset = "0x64F364")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170001FD")]
		public bool isGrounded
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x1382F80", Offset = "0x1382F80", VA = "0x1382F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6568F4", Offset = "0x6568F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0x1382F88", Offset = "0x1382F88", VA = "0x1382F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656904", Offset = "0x656904")]
			private set
			{
			}
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1382F94", Offset = "0x1382F94", VA = "0x1382F94")]
		private void Start()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1383038", Offset = "0x1383038", VA = "0x1383038")]
		private void Update()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x13834F8", Offset = "0x13834F8", VA = "0x13834F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x138308C", Offset = "0x138308C", VA = "0x138308C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x138330C", Offset = "0x138330C", VA = "0x138330C")]
		private void Move()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1383534", Offset = "0x1383534", VA = "0x1383534")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x13835D0", Offset = "0x13835D0", VA = "0x13835D0")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1383654", Offset = "0x1383654", VA = "0x1383654")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x139599C", Offset = "0x139599C", VA = "0x139599C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1395A20", Offset = "0x1395A20", VA = "0x1395A20", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1395BE4", Offset = "0x1395BE4", VA = "0x1395BE4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1395C0C", Offset = "0x1395C0C", VA = "0x1395C0C")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x2000331")]
		public struct State
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x13959E0", Offset = "0x13959E0", VA = "0x13959E0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1395D28", Offset = "0x1395D28", VA = "0x1395D28", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1395C28", Offset = "0x1395C28", VA = "0x1395C28")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0xC22A88", Offset = "0xC22A88", VA = "0xC22A88")]
		private void Update()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xC22AC4", Offset = "0xC22AC4", VA = "0xC22AC4")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x13856C0", Offset = "0x13856C0", VA = "0x13856C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x13856F4", Offset = "0x13856F4", VA = "0x13856F4")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x13857A4", Offset = "0x13857A4", VA = "0x13857A4")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class Navigator
	{
		[Token(Token = "0x2000335")]
		public enum State
		{
			[Token(Token = "0x40012F2")]
			Idle,
			[Token(Token = "0x40012F3")]
			Seeking,
			[Token(Token = "0x40012F4")]
			OnPath
		}

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F374", Offset = "0x64F374")]
		public bool activeTargetSeeking;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F3AC", Offset = "0x64F3AC")]
		public float cornerRadius;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F3E4", Offset = "0x64F3E4")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F41C", Offset = "0x64F41C")]
		public float maxSampleDistance;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F454", Offset = "0x64F454")]
		public float nextPathInterval;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F48C", Offset = "0x64F48C")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F49C", Offset = "0x64F49C")]
		private State <state>k__BackingField;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170001FE")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x9B74E8", Offset = "0x9B74E8", VA = "0x9B74E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656914", Offset = "0x656914")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x9B74F4", Offset = "0x9B74F4", VA = "0x9B74F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656924", Offset = "0x656924")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public State state
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x9B7500", Offset = "0x9B7500", VA = "0x9B7500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656934", Offset = "0x656934")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x9B7508", Offset = "0x9B7508", VA = "0x9B7508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x656944", Offset = "0x656944")]
			private set
			{
			}
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x9B7510", Offset = "0x9B7510", VA = "0x9B7510")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x9B75E4", Offset = "0x9B75E4", VA = "0x9B75E4")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x9B79E4", Offset = "0x9B79E4", VA = "0x9B79E4")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x9B7A60", Offset = "0x9B7A60", VA = "0x9B7A60")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x9B79A0", Offset = "0x9B79A0", VA = "0x9B79A0")]
		private void Stop()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x9B79D0", Offset = "0x9B79D0", VA = "0x9B79D0")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x9B7BAC", Offset = "0x9B7BAC", VA = "0x9B7BAC")]
		public void Visualize()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x9B7D5C", Offset = "0x9B7D5C", VA = "0x9B7D5C")]
		public Navigator()
		{
		}
	}
}
namespace PInteractionSystem.Retropolis
{
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x64486C", Offset = "0x64486C")]
	public class GameObjectState : PInteractionSystem.GameObjectState
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PaintLayerBehaviour paintLayerBehaviour;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xABA730", Offset = "0xABA730", VA = "0xABA730", Slot = "8")]
		public override void firstSetState(string stateName)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xABA7EC", Offset = "0xABA7EC", VA = "0xABA7EC", Slot = "10")]
		public override void SetState(string stateName, bool resetAnimator)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xABA8B0", Offset = "0xABA8B0", VA = "0xABA8B0", Slot = "11")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xABA984", Offset = "0xABA984", VA = "0xABA984", Slot = "12")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xABAB1C", Offset = "0xABAB1C", VA = "0xABAB1C")]
		public GameObjectState()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[DisallowMultipleComponent]
	public class PAction : PInteractionSystem.PAction
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform remoteHandTarget;

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x13A167C", Offset = "0x13A167C", VA = "0x13A167C", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x13A18D0", Offset = "0x13A18D0", VA = "0x13A18D0", Slot = "8")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x13A19A4", Offset = "0x13A19A4", VA = "0x13A19A4", Slot = "9")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x13A1ADC", Offset = "0x13A1ADC", VA = "0x13A1ADC")]
		public PAction()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class PRandomSoundCommand : PSoundCommand
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip[] clips;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x13ABB80", Offset = "0x13ABB80", VA = "0x13ABB80", Slot = "21")]
		public override AudioClip getAudioClip()
		{
			return null;
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x13ABC60", Offset = "0x13ABC60", VA = "0x13ABC60", Slot = "18")]
		public override float GetBlockTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x13ABC68", Offset = "0x13ABC68", VA = "0x13ABC68")]
		public PRandomSoundCommand()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class PSetSnapshotCommand : PInteractionSystem.PSetSnapshotCommand
	{
		[Token(Token = "0x6001238")]
		[Address(RVA = "0x13ADD8C", Offset = "0x13ADD8C", VA = "0x13ADD8C", Slot = "20")]
		protected override void WrapUp(bool commandStarted, bool commandEnded)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x13ADE20", Offset = "0x13ADE20", VA = "0x13ADE20")]
		public PSetSnapshotCommand()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class PSoundCommand : PInteractionSystem.PSoundCommand
	{
		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6448B4", Offset = "0x6448B4")]
		private sealed class <InnerPlay>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PSoundCommand <>4__this;

			[Token(Token = "0x17000200")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001240")]
				[Address(RVA = "0xA9DCB8", Offset = "0xA9DCB8", VA = "0xA9DCB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000201")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001242")]
				[Address(RVA = "0xA9DD00", Offset = "0xA9DD00", VA = "0xA9DD00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600123D")]
			[Address(RVA = "0xA9DB00", Offset = "0xA9DB00", VA = "0xA9DB00")]
			[DebuggerHidden]
			public <InnerPlay>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600123E")]
			[Address(RVA = "0xA9DB2C", Offset = "0xA9DB2C", VA = "0xA9DB2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600123F")]
			[Address(RVA = "0xA9DB30", Offset = "0xA9DB30", VA = "0xA9DB30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001241")]
			[Address(RVA = "0xA9DCC0", Offset = "0xA9DCC0", VA = "0xA9DCC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x13ADE28", Offset = "0x13ADE28", VA = "0x13ADE28", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656954", Offset = "0x656954")]
		protected override IEnumerator InnerPlay()
		{
			return null;
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x13ABC70", Offset = "0x13ABC70", VA = "0x13ABC70")]
		public PSoundCommand()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x13ADEA0", Offset = "0x13ADEA0", VA = "0x13ADEA0")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6569B4", Offset = "0x6569B4")]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x200033C")]
	public class PTimelineCommand : PBlockingCommand
	{
		[Token(Token = "0x200033D")]
		public enum TimelineAction
		{
			[Token(Token = "0x40012FE")]
			Play,
			[Token(Token = "0x40012FF")]
			Pause,
			[Token(Token = "0x4001300")]
			Stop
		}

		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6448C4", Offset = "0x6448C4")]
		private sealed class <InnerPlay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PTimelineCommand <>4__this;

			[Token(Token = "0x17000202")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001251")]
				[Address(RVA = "0xA9DDD0", Offset = "0xA9DDD0", VA = "0xA9DDD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000203")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001253")]
				[Address(RVA = "0xA9DE18", Offset = "0xA9DE18", VA = "0xA9DE18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600124E")]
			[Address(RVA = "0xA9DD08", Offset = "0xA9DD08", VA = "0xA9DD08")]
			[DebuggerHidden]
			public <InnerPlay>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600124F")]
			[Address(RVA = "0xA9DD34", Offset = "0xA9DD34", VA = "0xA9DD34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001250")]
			[Address(RVA = "0xA9DD38", Offset = "0xA9DD38", VA = "0xA9DD38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001252")]
			[Address(RVA = "0xA9DDD8", Offset = "0xA9DDD8", VA = "0xA9DDD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6448D4", Offset = "0x6448D4")]
		private sealed class <PlaySubtitleSingleAudioTrack>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioTrack track;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PTimelineCommand <>4__this;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<TimelineClip> <>7__wrap1;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TimelineClip <t>5__3;

			[Token(Token = "0x17000204")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001258")]
				[Address(RVA = "0xA9E364", Offset = "0xA9E364", VA = "0xA9E364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000205")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600125A")]
				[Address(RVA = "0xA9E3AC", Offset = "0xA9E3AC", VA = "0xA9E3AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001254")]
			[Address(RVA = "0xA9DE20", Offset = "0xA9DE20", VA = "0xA9DE20")]
			[DebuggerHidden]
			public <PlaySubtitleSingleAudioTrack>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001255")]
			[Address(RVA = "0xA9DE4C", Offset = "0xA9DE4C", VA = "0xA9DE4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001256")]
			[Address(RVA = "0xA9DF24", Offset = "0xA9DF24", VA = "0xA9DF24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001257")]
			[Address(RVA = "0xA9DE68", Offset = "0xA9DE68", VA = "0xA9DE68")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001259")]
			[Address(RVA = "0xA9E36C", Offset = "0xA9E36C", VA = "0xA9E36C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayableDirector dir;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TimelineAction timelineAction;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x13AE020", Offset = "0x13AE020", VA = "0x13AE020", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656A3C", Offset = "0x656A3C")]
		protected override IEnumerator InnerPlay()
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x13AE098", Offset = "0x13AE098", VA = "0x13AE098", Slot = "20")]
		protected override void WrapUp(bool commandStarted, bool commandEnded)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x13AE1F8", Offset = "0x13AE1F8", VA = "0x13AE1F8")]
		private void SkipCustomTracks(PlayableDirector playableDirector)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x13AE774", Offset = "0x13AE774", VA = "0x13AE774")]
		private void PlaySubtitles(PlayableDirector playableDirector)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x13AEB28", Offset = "0x13AEB28", VA = "0x13AEB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656A9C", Offset = "0x656A9C")]
		private IEnumerator PlaySubtitleSingleAudioTrack(AudioTrack track)
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x13AE164", Offset = "0x13AE164", VA = "0x13AE164")]
		private void CommandStart(bool skipping)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x13AEBBC", Offset = "0x13AEBBC", VA = "0x13AEBBC", Slot = "18")]
		public override float GetBlockTime()
		{
			return default(float);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x13AEC78", Offset = "0x13AEC78", VA = "0x13AEC78", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x13AEDA4", Offset = "0x13AEDA4", VA = "0x13AEDA4", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x13AEE50", Offset = "0x13AEE50", VA = "0x13AEE50", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x13AEFA0", Offset = "0x13AEFA0", VA = "0x13AEFA0")]
		public PTimelineCommand()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class PVisualFadeCommand : PBlockingCommand
	{
		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6448E4", Offset = "0x6448E4")]
		private sealed class <InnerPlay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PVisualFadeCommand <>4__this;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private FadeController <faderCtrl>5__2;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <finalAlpha>5__3;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fadeSpeed>5__4;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000206")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001265")]
				[Address(RVA = "0xA9E554", Offset = "0xA9E554", VA = "0xA9E554", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000207")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001267")]
				[Address(RVA = "0xA9E59C", Offset = "0xA9E59C", VA = "0xA9E59C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001262")]
			[Address(RVA = "0xA9E3B4", Offset = "0xA9E3B4", VA = "0xA9E3B4")]
			[DebuggerHidden]
			public <InnerPlay>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001263")]
			[Address(RVA = "0xA9E3E0", Offset = "0xA9E3E0", VA = "0xA9E3E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001264")]
			[Address(RVA = "0xA9E3E4", Offset = "0xA9E3E4", VA = "0xA9E3E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001266")]
			[Address(RVA = "0xA9E55C", Offset = "0xA9E55C", VA = "0xA9E55C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fadeDuration;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fadeOut;

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x13AEFA8", Offset = "0x13AEFA8", VA = "0x13AEFA8", Slot = "20")]
		protected override void WrapUp(bool commandStarted, bool commandEnded)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x13AF02C", Offset = "0x13AF02C", VA = "0x13AF02C", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656B9C", Offset = "0x656B9C")]
		protected override IEnumerator InnerPlay()
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x13AF0A4", Offset = "0x13AF0A4", VA = "0x13AF0A4", Slot = "18")]
		public override float GetBlockTime()
		{
			return default(float);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x13AF0AC", Offset = "0x13AF0AC", VA = "0x13AF0AC", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x13AF12C", Offset = "0x13AF12C", VA = "0x13AF12C", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x13AF174", Offset = "0x13AF174", VA = "0x13AF174", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x13AF178", Offset = "0x13AF178", VA = "0x13AF178")]
		public PVisualFadeCommand()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class PAchievementCommand : PInstantCommand
	{
		[Token(Token = "0x2000343")]
		public enum achievementType
		{
			[Token(Token = "0x4001318")]
			unlock,
			[Token(Token = "0x4001319")]
			increment,
			[Token(Token = "0x400131A")]
			addBitField
		}

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public achievementType type;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F4AC", Offset = "0x64F4AC")]
		public string acheivementName;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F4E4", Offset = "0x64F4E4")]
		public string bitField;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F51C", Offset = "0x64F51C")]
		public int unlockValue;

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x13A14E0", Offset = "0x13A14E0", VA = "0x13A14E0", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x13A152C", Offset = "0x13A152C", VA = "0x13A152C", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x13A15CC", Offset = "0x13A15CC", VA = "0x13A15CC", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x13A1614", Offset = "0x13A1614", VA = "0x13A1614", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x13A1618", Offset = "0x13A1618", VA = "0x13A1618")]
		public PAchievementCommand()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class PNextSceneCommand : PInstantCommand, IPausable
	{
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeOutAudio;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeOutTime;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool blocking;

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x13AAD20", Offset = "0x13AAD20", VA = "0x13AAD20", Slot = "9")]
		public override bool CanSaveActionWithCommand()
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x13AAD28", Offset = "0x13AAD28", VA = "0x13AAD28", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x13AADBC", Offset = "0x13AADBC", VA = "0x13AADBC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x13AADE4", Offset = "0x13AADE4", VA = "0x13AADE4", Slot = "13")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x13AADF8", Offset = "0x13AADF8", VA = "0x13AADF8", Slot = "14")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x13AAE0C", Offset = "0x13AAE0C", VA = "0x13AAE0C", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x13AAE8C", Offset = "0x13AAE8C", VA = "0x13AAE8C", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x13AAED4", Offset = "0x13AAED4", VA = "0x13AAED4", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x13AAED8", Offset = "0x13AAED8", VA = "0x13AAED8")]
		public PNextSceneCommand()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class PSetActiveCommand : PInteractionSystem.PSetActiveCommand
	{
		[Token(Token = "0x6001276")]
		[Address(RVA = "0x13ACB44", Offset = "0x13ACB44", VA = "0x13ACB44", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x13ACE8C", Offset = "0x13ACE8C", VA = "0x13ACE8C")]
		public PSetActiveCommand()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class PSetPlayerObjectCommand : PInstantCommand
	{
		[Token(Token = "0x2000347")]
		public enum ActiveState
		{
			[Token(Token = "0x4001321")]
			active,
			[Token(Token = "0x4001322")]
			inactive,
			[Token(Token = "0x4001323")]
			toggle
		}

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActiveState state;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string playerTarget;

		[Token(Token = "0x17000208")]
		private GameObject target
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x13ADBD0", Offset = "0x13ADBD0", VA = "0x13ADBD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x13ADC30", Offset = "0x13ADC30", VA = "0x13ADC30", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x13ADCB8", Offset = "0x13ADCB8", VA = "0x13ADCB8", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x13ADD38", Offset = "0x13ADD38", VA = "0x13ADD38", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x13ADD80", Offset = "0x13ADD80", VA = "0x13ADD80", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x13ADD84", Offset = "0x13ADD84", VA = "0x13ADD84")]
		public PSetPlayerObjectCommand()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class PGrabCommand : PInstantCommand
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject target;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string handPose;

		[Token(Token = "0x17000209")]
		public GameObject _target
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x13A38D0", Offset = "0x13A38D0", VA = "0x13A38D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x13A39BC", Offset = "0x13A39BC", VA = "0x13A39BC", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x13A3E7C", Offset = "0x13A3E7C", VA = "0x13A3E7C", Slot = "8")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x13A39C4", Offset = "0x13A39C4", VA = "0x13A39C4")]
		private void ExexutePGrabCommand(bool skip)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x13A3E84", Offset = "0x13A3E84", VA = "0x13A3E84", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x13A3FBC", Offset = "0x13A3FBC", VA = "0x13A3FBC", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x13A407C", Offset = "0x13A407C", VA = "0x13A407C", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x13A4194", Offset = "0x13A4194", VA = "0x13A4194")]
		public PGrabCommand()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class PHandPoseCommand : PInstantCommand
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string handPose;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x13A419C", Offset = "0x13A419C", VA = "0x13A419C", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x13A4324", Offset = "0x13A4324", VA = "0x13A4324", Slot = "8")]
		public override void Skip()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x13A41A4", Offset = "0x13A41A4", VA = "0x13A41A4")]
		private void ExecutePHandPoseCommand(bool skip)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x13A432C", Offset = "0x13A432C", VA = "0x13A432C", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x13A4440", Offset = "0x13A4440", VA = "0x13A4440", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x13A4488", Offset = "0x13A4488", VA = "0x13A4488", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x13A448C", Offset = "0x13A448C", VA = "0x13A448C")]
		public PHandPoseCommand()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class PHapticCommand : PBlockingCommand
	{
		[Token(Token = "0x200034B")]
		public enum Mode
		{
			[Token(Token = "0x400132A")]
			activeHand,
			[Token(Token = "0x400132B")]
			bothHands,
			[Token(Token = "0x400132C")]
			leftHand,
			[Token(Token = "0x400132D")]
			rightHand
		}

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6448F4", Offset = "0x6448F4")]
		private sealed class <InnerPlay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PHapticCommand <>4__this;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001297")]
				[Address(RVA = "0xA9C3C0", Offset = "0xA9C3C0", VA = "0xA9C3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001299")]
				[Address(RVA = "0xA9C408", Offset = "0xA9C408", VA = "0xA9C408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0xA9C174", Offset = "0xA9C174", VA = "0xA9C174")]
			[DebuggerHidden]
			public <InnerPlay>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001295")]
			[Address(RVA = "0xA9C1A0", Offset = "0xA9C1A0", VA = "0xA9C1A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001296")]
			[Address(RVA = "0xA9C1A4", Offset = "0xA9C1A4", VA = "0xA9C1A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001298")]
			[Address(RVA = "0xA9C3C8", Offset = "0xA9C3C8", VA = "0xA9C3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Mode mode;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HapticImpulseData properties;

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x13A4494", Offset = "0x13A4494", VA = "0x13A4494", Slot = "20")]
		protected override void WrapUp(bool commandStarted, bool commandEnded)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x13A4498", Offset = "0x13A4498", VA = "0x13A4498", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656C4C", Offset = "0x656C4C")]
		protected override IEnumerator InnerPlay()
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x13A4510", Offset = "0x13A4510", VA = "0x13A4510", Slot = "18")]
		public override float GetBlockTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x13A452C", Offset = "0x13A452C", VA = "0x13A452C", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x13A45AC", Offset = "0x13A45AC", VA = "0x13A45AC", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x13A45F4", Offset = "0x13A45F4", VA = "0x13A45F4", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x13A45F8", Offset = "0x13A45F8", VA = "0x13A45F8")]
		public PHapticCommand()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class PPopHandCommand : PBlockingCommand, IPausable
	{
		[Token(Token = "0x200034E")]
		public enum Direction
		{
			[Token(Token = "0x4001337")]
			popOut,
			[Token(Token = "0x4001338")]
			popIn
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644904", Offset = "0x644904")]
		private sealed class <InnerPlay>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PPopHandCommand <>4__this;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012AC")]
				[Address(RVA = "0xA9CD28", Offset = "0xA9CD28", VA = "0xA9CD28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012AE")]
				[Address(RVA = "0xA9CD70", Offset = "0xA9CD70", VA = "0xA9CD70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xA9CC50", Offset = "0xA9CC50", VA = "0xA9CC50")]
			[DebuggerHidden]
			public <InnerPlay>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xA9CC7C", Offset = "0xA9CC7C", VA = "0xA9CC7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xA9CC80", Offset = "0xA9CC80", VA = "0xA9CC80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xA9CD30", Offset = "0xA9CD30", VA = "0xA9CD30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644914", Offset = "0x644914")]
		private sealed class <popOut>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PPopHandCommand <>4__this;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <remaining>5__3;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <fromPos>5__4;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <fromRot>5__5;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B2")]
				[Address(RVA = "0xA9D35C", Offset = "0xA9D35C", VA = "0xA9D35C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012B4")]
				[Address(RVA = "0xA9D3A4", Offset = "0xA9D3A4", VA = "0xA9D3A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0xA9D05C", Offset = "0xA9D05C", VA = "0xA9D05C")]
			[DebuggerHidden]
			public <popOut>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0xA9D088", Offset = "0xA9D088", VA = "0xA9D088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xA9D08C", Offset = "0xA9D08C", VA = "0xA9D08C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xA9D364", Offset = "0xA9D364", VA = "0xA9D364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644924", Offset = "0x644924")]
		private sealed class <popIn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PPopHandCommand <>4__this;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <remaining>5__3;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <fromPos>5__4;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <fromRot>5__5;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B8")]
				[Address(RVA = "0xA9D00C", Offset = "0xA9D00C", VA = "0xA9D00C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012BA")]
				[Address(RVA = "0xA9D054", Offset = "0xA9D054", VA = "0xA9D054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xA9CD78", Offset = "0xA9CD78", VA = "0xA9CD78")]
			[DebuggerHidden]
			public <popIn>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xA9CDA4", Offset = "0xA9CDA4", VA = "0xA9CDA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xA9CDA8", Offset = "0xA9CDA8", VA = "0xA9CDA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xA9D014", Offset = "0xA9D014", VA = "0xA9D014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Transform target;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Direction direction;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocity;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool resetOtherHand;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool LerpRotationOnPopOut;

		[Token(Token = "0x1700020C")]
		public Transform _target
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x13AB120", Offset = "0x13AB120", VA = "0x13AB120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private Child hand
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x13AB1DC", Offset = "0x13AB1DC", VA = "0x13AB1DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private Child otherHand
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x13AB358", Offset = "0x13AB358", VA = "0x13AB358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x13AB4D4", Offset = "0x13AB4D4", VA = "0x13AB4D4", Slot = "20")]
		protected override void WrapUp(bool commandStarted, bool commandEnded)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x13AB648", Offset = "0x13AB648", VA = "0x13AB648", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656CFC", Offset = "0x656CFC")]
		protected override IEnumerator InnerPlay()
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x13A170C", Offset = "0x13A170C", VA = "0x13A170C")]
		public static void SetUpPopCommands(PAction action)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x13AB6C0", Offset = "0x13AB6C0", VA = "0x13AB6C0", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x13AB8CC", Offset = "0x13AB8CC", VA = "0x13AB8CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656D5C", Offset = "0x656D5C")]
		private IEnumerator popOut()
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x13AB944", Offset = "0x13AB944", VA = "0x13AB944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656DBC", Offset = "0x656DBC")]
		private IEnumerator popIn()
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x13AB5BC", Offset = "0x13AB5BC", VA = "0x13AB5BC")]
		private void WrapUpPopOut()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x13AB53C", Offset = "0x13AB53C", VA = "0x13AB53C")]
		private void WrapUpPopIn()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x13AB9BC", Offset = "0x13AB9BC", VA = "0x13AB9BC", Slot = "18")]
		public override float GetBlockTime()
		{
			return default(float);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x13ABB1C", Offset = "0x13ABB1C", VA = "0x13ABB1C", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x13ABB64", Offset = "0x13ABB64", VA = "0x13ABB64", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x13ABB68", Offset = "0x13ABB68", VA = "0x13ABB68")]
		public PPopHandCommand()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class PReleaseItemCommand : PInstantCommand
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x64F574", Offset = "0x64F574")]
		public Transform PutItemTarget;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInNormalInspector]
		public bool fitToInVentory;

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x13ABE58", Offset = "0x13ABE58", VA = "0x13ABE58", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x13AC1A0", Offset = "0x13AC1A0", VA = "0x13AC1A0", Slot = "8")]
		public override void Skip()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x13ABE60", Offset = "0x13ABE60", VA = "0x13ABE60")]
		private void ExecutePReleaseItemCommand(bool skip)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x13AC1A8", Offset = "0x13AC1A8", VA = "0x13AC1A8", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x13AC228", Offset = "0x13AC228", VA = "0x13AC228", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x13AC2D4", Offset = "0x13AC2D4", VA = "0x13AC2D4", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x13AC474", Offset = "0x13AC474", VA = "0x13AC474")]
		public PReleaseItemCommand()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class PSwitchActiveHandCommand : PInstantCommand
	{
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x13ADEA8", Offset = "0x13ADEA8", VA = "0x13ADEA8", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x13ADF4C", Offset = "0x13ADF4C", VA = "0x13ADF4C", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x13ADFCC", Offset = "0x13ADFCC", VA = "0x13ADFCC", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x13AE014", Offset = "0x13AE014", VA = "0x13AE014", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x13AE018", Offset = "0x13AE018", VA = "0x13AE018")]
		public PSwitchActiveHandCommand()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class PopHandTarget : MonoBehaviour
	{
		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rightHandTarget;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftHandTarget;

		[Token(Token = "0x17000215")]
		public Transform targetTransform
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x13730D8", Offset = "0x13730D8", VA = "0x13730D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public Transform rightHandTransform
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x13732C4", Offset = "0x13732C4", VA = "0x13732C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public Transform leftHandTransform
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x1373238", Offset = "0x1373238", VA = "0x1373238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1373350", Offset = "0x1373350", VA = "0x1373350")]
		public PopHandTarget()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class PParentCommand : PInteractionSystem.PParentCommand
	{
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x13AB024", Offset = "0x13AB024", VA = "0x13AB024", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x13AB118", Offset = "0x13AB118", VA = "0x13AB118")]
		public PParentCommand()
		{
		}
	}
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x644934", Offset = "0x644934")]
	[DisallowMultipleComponent]
	public class PInteractable : PInteractionSystem.PInteractable
	{
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x13A4600", Offset = "0x13A4600", VA = "0x13A4600", Slot = "6")]
		protected override void StartRecordUserInteraction(GameObject item, PInteraction interaction)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x13A4B9C", Offset = "0x13A4B9C", VA = "0x13A4B9C", Slot = "7")]
		protected override void EndRecordUserInteraction(GameObject item, PInteraction interaction)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x13A5094", Offset = "0x13A5094", VA = "0x13A5094")]
		public PInteractable()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class PInteractionManager : PInteractionSystem.PInteractionManager
	{
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x13A509C", Offset = "0x13A509C", VA = "0x13A509C", Slot = "12")]
		protected override void onAddInteractable(GameObject g, PInteractionSystem.PInteractable inter)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x13A5124", Offset = "0x13A5124", VA = "0x13A5124", Slot = "14")]
		protected override void ResetSceneInteraction()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x13A5260", Offset = "0x13A5260", VA = "0x13A5260", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x13A545C", Offset = "0x13A545C", VA = "0x13A545C")]
		public PInteractionManager()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class PInteractionState : PInteractionSystem.PInteractionState
	{
		[Token(Token = "0x2000359")]
		public enum HighLightStyle
		{
			[Token(Token = "0x4001353")]
			outline,
			[Token(Token = "0x4001354")]
			quillEffect
		}

		[Token(Token = "0x200035A")]
		public enum SaveMode
		{
			[Token(Token = "0x4001356")]
			dontSave,
			[Token(Token = "0x4001357")]
			checkPoint,
			[Token(Token = "0x4001358")]
			autoSave
		}

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644980", Offset = "0x644980")]
		private sealed class <ReplaySceneInteraction>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PInteractionState <>4__this;

			[Token(Token = "0x17000218")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E0")]
				[Address(RVA = "0xA9CC00", Offset = "0xA9CC00", VA = "0xA9CC00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000219")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E2")]
				[Address(RVA = "0xA9CC48", Offset = "0xA9CC48", VA = "0xA9CC48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xA9CAB4", Offset = "0xA9CAB4", VA = "0xA9CAB4")]
			[DebuggerHidden]
			public <ReplaySceneInteraction>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xA9CAE0", Offset = "0xA9CAE0", VA = "0xA9CAE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xA9CAE4", Offset = "0xA9CAE4", VA = "0xA9CAE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xA9CC08", Offset = "0xA9CC08", VA = "0xA9CC08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x644990", Offset = "0x644990")]
		private sealed class <CautiousSkipSceneInteraction>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PInteractionState <>4__this;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AudioListener <listener>5__2;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<Camera, bool> <camState>5__3;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CoroutineWithData <cd>5__4;

			[Token(Token = "0x1700021A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E6")]
				[Address(RVA = "0xA9CA64", Offset = "0xA9CA64", VA = "0xA9CA64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E8")]
				[Address(RVA = "0xA9CAAC", Offset = "0xA9CAAC", VA = "0xA9CAAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xA9C410", Offset = "0xA9C410", VA = "0xA9C410")]
			[DebuggerHidden]
			public <CautiousSkipSceneInteraction>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xA9C43C", Offset = "0xA9C43C", VA = "0xA9C43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xA9C440", Offset = "0xA9C440", VA = "0xA9C440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xA9CA6C", Offset = "0xA9CA6C", VA = "0xA9CA6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PSequence sequence;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HighLightStyle highLightStyle;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public SceneController.SceneType sceneType;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SaveMode saveMode;

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x13A5464", Offset = "0x13A5464", VA = "0x13A5464", Slot = "7")]
		public override void StartScene()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x13A4B14", Offset = "0x13A4B14", VA = "0x13A4B14")]
		public bool isAutoSave()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x13A5C18", Offset = "0x13A5C18", VA = "0x13A5C18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656F0C", Offset = "0x656F0C")]
		private IEnumerator ReplaySceneInteraction()
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x13A5BA0", Offset = "0x13A5BA0", VA = "0x13A5BA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x656F6C", Offset = "0x656F6C")]
		private IEnumerator CautiousSkipSceneInteraction()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x13A5C90", Offset = "0x13A5C90", VA = "0x13A5C90")]
		private void SkipSceneInteraction()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x13A5EBC", Offset = "0x13A5EBC", VA = "0x13A5EBC")]
		private void handleLoadError()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x13A6014", Offset = "0x13A6014", VA = "0x13A6014")]
		public void Undo()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x13A6468", Offset = "0x13A6468", VA = "0x13A6468", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x13A6698", Offset = "0x13A6698", VA = "0x13A6698")]
		public PInteractionState()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class PInteractor : PInteractionSystem.PInteractor, IPausable
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _isRightHand;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool paused;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Collider> disabledCollidersOnPaused;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask layerMask;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material replacementShaderMaterial;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture rt;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F5CC", Offset = "0x64F5CC")]
		private static Grabber <rightHand>k__BackingField;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F5DC", Offset = "0x64F5DC")]
		private static Grabber <leftHand>k__BackingField;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F5EC", Offset = "0x64F5EC")]
		private bool <canInteract>k__BackingField;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F5FC", Offset = "0x64F5FC")]
		private PInteractable <selected>k__BackingField;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F60C", Offset = "0x64F60C")]
		private PInteraction <peek>k__BackingField;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F61C", Offset = "0x64F61C")]
		private bool <selectionFromHover>k__BackingField;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F62C", Offset = "0x64F62C")]
		private bool <isHit>k__BackingField;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F63C", Offset = "0x64F63C")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F64C", Offset = "0x64F64C")]
		private Vector3 <hitPoint>k__BackingField;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float hitDistance;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F65C", Offset = "0x64F65C")]
		private float <hitMistake>k__BackingField;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F66C", Offset = "0x64F66C")]
		private Vector3 <hitNormal>k__BackingField;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F67C", Offset = "0x64F67C")]
		private bool <buttonPressed>k__BackingField;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F68C", Offset = "0x64F68C")]
		private bool <buttonDown>k__BackingField;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F69C", Offset = "0x64F69C")]
		private bool <buttonUp>k__BackingField;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float maxDist;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float minDist;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool init;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool waitForButtonUp;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float selectedUpdateInterval;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float selectedUpdateTimeRemaining;

		[Token(Token = "0x1700021C")]
		public static bool isRightHand
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x13A66A0", Offset = "0x13A66A0", VA = "0x13A66A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x13A2F7C", Offset = "0x13A2F7C", VA = "0x13A2F7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public Shader replacementShader
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x13A6FE4", Offset = "0x13A6FE4", VA = "0x13A6FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public static Grabber rightHand
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x13A7000", Offset = "0x13A7000", VA = "0x13A7000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65706C", Offset = "0x65706C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x13A7064", Offset = "0x13A7064", VA = "0x13A7064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65707C", Offset = "0x65707C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public static Grabber leftHand
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x13A70D0", Offset = "0x13A70D0", VA = "0x13A70D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65708C", Offset = "0x65708C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x13A7134", Offset = "0x13A7134", VA = "0x13A7134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65709C", Offset = "0x65709C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public bool canInteract
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x13A71A0", Offset = "0x13A71A0", VA = "0x13A71A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6570AC", Offset = "0x6570AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x13A71A8", Offset = "0x13A71A8", VA = "0x13A71A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6570BC", Offset = "0x6570BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public PInteractable selected
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x13A71B4", Offset = "0x13A71B4", VA = "0x13A71B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6570CC", Offset = "0x6570CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x13A71BC", Offset = "0x13A71BC", VA = "0x13A71BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6570DC", Offset = "0x6570DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public PInteraction peek
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x13A71C4", Offset = "0x13A71C4", VA = "0x13A71C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6570EC", Offset = "0x6570EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x13A71CC", Offset = "0x13A71CC", VA = "0x13A71CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6570FC", Offset = "0x6570FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public bool selectionFromHover
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x13A71D4", Offset = "0x13A71D4", VA = "0x13A71D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65710C", Offset = "0x65710C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x13A71DC", Offset = "0x13A71DC", VA = "0x13A71DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65711C", Offset = "0x65711C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public bool isHit
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x13A71E8", Offset = "0x13A71E8", VA = "0x13A71E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65712C", Offset = "0x65712C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x13A71F0", Offset = "0x13A71F0", VA = "0x13A71F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65713C", Offset = "0x65713C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public Vector3 direction
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x13A71FC", Offset = "0x13A71FC", VA = "0x13A71FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65714C", Offset = "0x65714C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x13A7208", Offset = "0x13A7208", VA = "0x13A7208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65715C", Offset = "0x65715C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public Vector3 hitPoint
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x13A7214", Offset = "0x13A7214", VA = "0x13A7214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65716C", Offset = "0x65716C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x13A7220", Offset = "0x13A7220", VA = "0x13A7220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65717C", Offset = "0x65717C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float hitMistake
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x13A722C", Offset = "0x13A722C", VA = "0x13A722C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65718C", Offset = "0x65718C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x13A7234", Offset = "0x13A7234", VA = "0x13A7234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65719C", Offset = "0x65719C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public Vector3 hitNormal
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x13A723C", Offset = "0x13A723C", VA = "0x13A723C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6571AC", Offset = "0x6571AC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x13A7248", Offset = "0x13A7248", VA = "0x13A7248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6571BC", Offset = "0x6571BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public bool buttonPressed
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x13A7254", Offset = "0x13A7254", VA = "0x13A7254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6571CC", Offset = "0x6571CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x13A725C", Offset = "0x13A725C", VA = "0x13A725C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6571DC", Offset = "0x6571DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public bool buttonDown
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x13A7268", Offset = "0x13A7268", VA = "0x13A7268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6571EC", Offset = "0x6571EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x13A7270", Offset = "0x13A7270", VA = "0x13A7270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6571FC", Offset = "0x6571FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public bool buttonUp
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x13A727C", Offset = "0x13A727C", VA = "0x13A727C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65720C", Offset = "0x65720C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x13A7284", Offset = "0x13A7284", VA = "0x13A7284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65721C", Offset = "0x65721C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public static PInteractor instance
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x13A6704", Offset = "0x13A6704", VA = "0x13A6704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public static GameObject item
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x13A2ADC", Offset = "0x13A2ADC", VA = "0x13A2ADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x13A6D6C", Offset = "0x13A6D6C", VA = "0x13A6D6C", Slot = "8")]
		public void Pause()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x13A6EB8", Offset = "0x13A6EB8", VA = "0x13A6EB8", Slot = "9")]
		public void Resume()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x13A7290", Offset = "0x13A7290", VA = "0x13A7290", Slot = "4")]
		public override GameObject GetCurrentItem()
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x13A72E8", Offset = "0x13A72E8", VA = "0x13A72E8", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x13A6780", Offset = "0x13A6780", VA = "0x13A6780")]
		private void SetParent()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x13A753C", Offset = "0x13A753C", VA = "0x13A753C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x13A8008", Offset = "0x13A8008", VA = "0x13A8008")]
		public PInteractor()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class PGetEmptyContainerCommand : PInstantCommand
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64F6AC", Offset = "0x64F6AC")]
		public GameObject firstPage;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x64F6E4", Offset = "0x64F6E4")]
		public GameObject secondPage;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject nextArrow;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] containers;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PAction releaseAction;

		[Token(Token = "0x1700022E")]
		private PReleaseItemCommand releaseItemCommand
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x13A3248", Offset = "0x13A3248", VA = "0x13A3248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x13A329C", Offset = "0x13A329C", VA = "0x13A329C", Slot = "12")]
		public override void InnerPlay()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x13A3698", Offset = "0x13A3698", VA = "0x13A3698", Slot = "4")]
		public override bool isLegal(out List<string> errors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x13A387C", Offset = "0x13A387C", VA = "0x13A387C", Slot = "10")]
		public override Component[] GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x13A38C4", Offset = "0x13A38C4", VA = "0x13A38C4", Slot = "11")]
		public override void ReplaceReferences(ReplaceTuple[] tuples)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x13A38C8", Offset = "0x13A38C8", VA = "0x13A38C8")]
		public PGetEmptyContainerCommand()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class PSequence : UnityEngine.Object
	{
		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6449A0", Offset = "0x6449A0")]
		private sealed class <Play>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PSequence <>4__this;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<PEvent>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001325")]
				[Address(RVA = "0xA9D8B8", Offset = "0xA9D8B8", VA = "0xA9D8B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001327")]
				[Address(RVA = "0xA9D900", Offset = "0xA9D900", VA = "0xA9D900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0xA9D678", Offset = "0xA9D678", VA = "0xA9D678")]
			[DebuggerHidden]
			public <Play>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0xA9D6A4", Offset = "0xA9D6A4", VA = "0xA9D6A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001323")]
			[Address(RVA = "0xA9D714", Offset = "0xA9D714", VA = "0xA9D714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001324")]
			[Address(RVA = "0xA9D6C0", Offset = "0xA9D6C0", VA = "0xA9D6C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0xA9D8C0", Offset = "0xA9D8C0", VA = "0xA9D8C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6449B0", Offset = "0x6449B0")]
		private sealed class <CautiousSkip>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PSequence <>4__this;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<PEvent>.Enumerator <>7__wrap1;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <skippped>5__3;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600132C")]
				[Address(RVA = "0xA9D628", Offset = "0xA9D628", VA = "0xA9D628", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600132E")]
				[Address(RVA = "0xA9D670", Offset = "0xA9D670", VA = "0xA9D670", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0xA9D3AC", Offset = "0xA9D3AC", VA = "0xA9D3AC")]
			[DebuggerHidden]
			public <CautiousSkip>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001329")]
			[Address(RVA = "0xA9D3D8", Offset = "0xA9D3D8", VA = "0xA9D3D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600132A")]
			[Address(RVA = "0xA9D448", Offset = "0xA9D448", VA = "0xA9D448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600132B")]
			[Address(RVA = "0xA9D3F4", Offset = "0xA9D3F4", VA = "0xA9D3F4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600132D")]
			[Address(RVA = "0xA9D630", Offset = "0xA9D630", VA = "0xA9D630", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string filePath;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PEvent> savedEvents;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<PEvent> unsavedEvents;

		[Token(Token = "0x1700022F")]
		public int eventCount
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x13A5B54", Offset = "0x13A5B54", VA = "0x13A5B54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000230")]
		public float lastPlayerAngle
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x13A5F98", Offset = "0x13A5F98", VA = "0x13A5F98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x13A56CC", Offset = "0x13A56CC", VA = "0x13A56CC")]
		public PSequence(string savePath, string loadPath)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x13A4B38", Offset = "0x13A4B38", VA = "0x13A4B38")]
		public void AddEvent(PEvent e)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x13A4CE0", Offset = "0x13A4CE0", VA = "0x13A4CE0")]
		public void SaveEvents()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x13A60B8", Offset = "0x13A60B8", VA = "0x13A60B8")]
		public PEvent RemoveEventAndSave()
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x13ACA54", Offset = "0x13ACA54", VA = "0x13ACA54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65722C", Offset = "0x65722C")]
		public IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x13ACACC", Offset = "0x13ACACC", VA = "0x13ACACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x65728C", Offset = "0x65728C")]
		public IEnumerator CautiousSkip()
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x13A5D88", Offset = "0x13A5D88", VA = "0x13A5D88")]
		public bool Skip()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000362")]
	public class PEvent
	{
		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6449C0", Offset = "0x6449C0")]
		private sealed class <Play>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PEvent <>4__this;

			[Token(Token = "0x17000236")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600133B")]
				[Address(RVA = "0xA9C124", Offset = "0xA9C124", VA = "0xA9C124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000237")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600133D")]
				[Address(RVA = "0xA9C16C", Offset = "0xA9C16C", VA = "0xA9C16C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001338")]
			[Address(RVA = "0xA9BF88", Offset = "0xA9BF88", VA = "0xA9BF88")]
			[DebuggerHidden]
			public <Play>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001339")]
			[Address(RVA = "0xA9BFB4", Offset = "0xA9BFB4", VA = "0xA9BFB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600133A")]
			[Address(RVA = "0xA9BFB8", Offset = "0xA9BFB8", VA = "0xA9BFB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600133C")]
			[Address(RVA = "0xA9C12C", Offset = "0xA9C12C", VA = "0xA9C12C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64F71C", Offset = "0x64F71C")]
		private float <playerAngle>k__BackingField;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PInteractable interacatble;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool rightHanded;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string expectedItemName;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PInteraction expectedInteraction;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PAction expectedAction;

		[Token(Token = "0x17000235")]
		public float playerAngle
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x13A233C", Offset = "0x13A233C", VA = "0x13A233C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65738C", Offset = "0x65738C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x13A2344", Offset = "0x13A2344", VA = "0x13A2344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x65739C", Offset = "0x65739C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x13A234C", Offset = "0x13A234C", VA = "0x13A234C")]
		public PEvent(float _playerAngle, PInteractable _interactable, bool _isRightHand, GameObject _item, PInteraction _interaction, PAction _action)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x13A247C", Offset = "0x13A247C", VA = "0x13A247C")]
		public PEvent(BinaryReader reader)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x13A267C", Offset = "0x13A267C", VA = "0x13A267C")]
		public void Write(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x13A2880", Offset = "0x13A2880", VA = "0x13A2880")]
		private bool isValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x13A2DF4", Offset = "0x13A2DF4", VA = "0x13A2DF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6573AC", Offset = "0x6573AC")]
		public IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x13A2E6C", Offset = "0x13A2E6C", VA = "0x13A2E6C")]
		public bool Skip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x13A3094", Offset = "0x13A3094", VA = "0x13A3094", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
