using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Xml;
using BPG.Platform;
using Common.Fsm;
using Common.Query;
using DG.Tweening;
using Google.ProtocolBuffers;
using Google.ProtocolBuffers.Collections;
using GoogleVR.Demos;
using Gvr.Internal;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using OvrTouch.Controllers;
using OvrTouch.Hands;
using RecordedMovement;
using SWS;
using TouchExtended.Base;
using TouchExtended.Hands;
using TrackedInput;
using Ultrawings.Domain;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using proto;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Ultrawings.Domain
{
	[Token(Token = "0x2000002")]
	public enum AudioQualityPresetType
	{
		[Token(Token = "0x4000002")]
		None,
		[Token(Token = "0x4000003")]
		Minimum,
		[Token(Token = "0x4000004")]
		Medium,
		[Token(Token = "0x4000005")]
		Best,
		[Token(Token = "0x4000006")]
		Custom
	}
	[Token(Token = "0x2000003")]
	public enum SpatializationFormatType
	{
		[Token(Token = "0x4000008")]
		None,
		[Token(Token = "0x4000009")]
		Oculus,
		[Token(Token = "0x400000A")]
		Phonon
	}
	[Token(Token = "0x2000004")]
	public enum RacerType
	{
		[Token(Token = "0x400000C")]
		Player,
		[Token(Token = "0x400000D")]
		Enemy
	}
	[Token(Token = "0x2000005")]
	public enum RaceStateType
	{
		[Token(Token = "0x400000F")]
		Waiting,
		[Token(Token = "0x4000010")]
		Started,
		[Token(Token = "0x4000011")]
		Ended
	}
	[Token(Token = "0x2000006")]
	public enum RecorderActionType
	{
		[Token(Token = "0x4000013")]
		Save,
		[Token(Token = "0x4000014")]
		Load
	}
	[Token(Token = "0x2000007")]
	public enum BaseDataPathType
	{
		[Token(Token = "0x4000016")]
		Persistent,
		[Token(Token = "0x4000017")]
		DataPath,
		[Token(Token = "0x4000018")]
		Streaming
	}
}
[Token(Token = "0x2000008")]
public sealed class BasePathType : NameValue
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BasePathType PersistentDataPath;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static BasePathType DataPath;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BasePathType StreamingAssets;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x43D3E8", Offset = "0x43D3E8", VA = "0x43D3E8")]
	public BasePathType(int value, string str)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x43D3FC", Offset = "0x43D3FC", VA = "0x43D3FC")]
	public static BasePathType GetBasePathFromEnum(BaseDataPathType basePath)
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x43D51C", Offset = "0x43D51C", VA = "0x43D51C")]
	public string ToPathValue()
	{
		return null;
	}
}
[Token(Token = "0x2000009")]
public class NameValue
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string _str;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int _value;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x365C48", Offset = "0x365C48", VA = "0x365C48")]
	public NameValue(string str, int value)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x365CF8", Offset = "0x365CF8", VA = "0x365CF8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x365D00", Offset = "0x365D00", VA = "0x365D00")]
	public int ToInt()
	{
		return default(int);
	}
}
namespace FBCapture
{
	[Token(Token = "0x200000A")]
	public class CaptureOption : MonoBehaviour
	{
		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool surroundCapture;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool liveStreaming;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode screenShotKey;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode encodingStartShotKey;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode encodingStopShotKey;

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xBAD4CC", Offset = "0xBAD4CC", VA = "0xBAD4CC")]
		public CaptureOption()
		{
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0xBAD4EC", Offset = "0xBAD4EC", VA = "0xBAD4EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0xBAD678", Offset = "0xBAD678", VA = "0xBAD678")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200000B")]
	public class FPSScript : MonoBehaviour
	{
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float deltaTime;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Text text;

		[Token(Token = "0x600000B")]
		[Address(RVA = "0xBADE1C", Offset = "0xBADE1C", VA = "0xBADE1C")]
		public FPSScript()
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0xBADE24", Offset = "0xBADE24", VA = "0xBADE24")]
		private void Start()
		{
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0xBADE8C", Offset = "0xBADE8C", VA = "0xBADE8C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200000C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1710D4", Offset = "0x1710D4")]
	public class NonSurroundCapture : MonoBehaviour
	{
		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NonSurroundCapture singleton;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RenderTexture renderTexture;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int externalWidth;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int externalHeigth;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool encodingStart;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool encodingStop;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool needToStopEncoding;

		[NonSerialized]
		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool takeScreenShot;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string videoName;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string screenshotName;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string saveFolder;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string videoFullPath;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string screenshotFullPath;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ManualResetEvent threadResume;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ManualResetEvent threadShutdown;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Thread flushThread;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Thread audioThread;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int videoFPS;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fps;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float fpsTimer;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool flushReady;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float flushTimer;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float flushCycle;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool initialized;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool liveStreaming;

		[Token(Token = "0x17000001")]
		public bool isLiveStreaming
		{
			[Token(Token = "0x6000014")]
			[Address(RVA = "0xBAE42C", Offset = "0xBAE42C", VA = "0xBAE42C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000015")]
			[Address(RVA = "0xBAD670", Offset = "0xBAD670", VA = "0xBAD670")]
			set
			{
			}
		}

		[Token(Token = "0x600000E")]
		[Address(RVA = "0xBADFD8", Offset = "0xBADFD8", VA = "0xBADFD8")]
		public NonSurroundCapture()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600000F")]
		[Address(RVA = "0xBAE010", Offset = "0xBAE010", VA = "0xBAE010")]
		private static extern void startEncoding(IntPtr texture, string path, bool isLive, int fps, bool needFlipping);

		[PreserveSig]
		[Token(Token = "0x6000010")]
		[Address(RVA = "0xBAE108", Offset = "0xBAE108", VA = "0xBAE108")]
		private static extern void audioEncoding();

		[PreserveSig]
		[Token(Token = "0x6000011")]
		[Address(RVA = "0xBAE1C8", Offset = "0xBAE1C8", VA = "0xBAE1C8")]
		private static extern void stopEncoding();

		[PreserveSig]
		[Token(Token = "0x6000012")]
		[Address(RVA = "0xBAE288", Offset = "0xBAE288", VA = "0xBAE288")]
		private static extern void muxingData();

		[PreserveSig]
		[Token(Token = "0x6000013")]
		[Address(RVA = "0xBAE348", Offset = "0xBAE348", VA = "0xBAE348")]
		private static extern void saveScreenShot(IntPtr texture, string path, bool needFlipping);

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xBAE434", Offset = "0xBAE434", VA = "0xBAE434")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xBAE4C8", Offset = "0xBAE4C8", VA = "0xBAE4C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0xBAE6EC", Offset = "0xBAE6EC", VA = "0xBAE6EC")]
		private void MuxingThread()
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0xBAE74C", Offset = "0xBAE74C", VA = "0xBAE74C")]
		private void AudioThread()
		{
		}

		[Token(Token = "0x600001A")]
		[Address(RVA = "0xBAE814", Offset = "0xBAE814", VA = "0xBAE814")]
		private void Update()
		{
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0xBADB64", Offset = "0xBADB64", VA = "0xBADB64")]
		public void StartEncodingVideo()
		{
		}

		[Token(Token = "0x600001C")]
		[Address(RVA = "0xBADD84", Offset = "0xBADD84", VA = "0xBADD84")]
		public void StopEncodingVideo()
		{
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0xBAEA70", Offset = "0xBAEA70", VA = "0xBAEA70")]
		private void OnApplicationQuit()
		{
		}
	}
	[Token(Token = "0x200000D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x17114C", Offset = "0x17114C")]
	public class SurroundCapture : MonoBehaviour
	{
		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SurroundCapture singleton;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174424", Offset = "0x174424")]
		public Camera sceneCamera;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool outputCubemap;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17447C", Offset = "0x17447C")]
		public Vector2 sphereOffset;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1744D8", Offset = "0x1744D8")]
		public Vector2 sphereScale;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int cubemapSize;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int imageWidth;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int imageHeight;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int externalWidth;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int externalHeight;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture cubemapTex;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public RenderTexture outputTex;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RenderTexture externalTex;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Shader convertShader;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader outputCubemapShader;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Shader downSampleShader;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool encodingStart;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool encodingStop;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool needToStopEncoding;

		[NonSerialized]
		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool takeScreenShot;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public string videoName;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string screenshotName;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public string saveFolder;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string videoFullPath;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private string screenshotFullPath;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string streamSeverUrl;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public string streamKey;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool includeCameraRotation;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Material convertMaterial;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material downSampleMaterial;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Material outputCubemapMaterial;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int videoFPS;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fps;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float fpsTimer;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ManualResetEvent threadResume;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ManualResetEvent threadShutdown;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Thread flushThread;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Thread audioThread;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool flushReady;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float flushTimer;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float flushCycle;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool initialized;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool liveStreaming;

		[Token(Token = "0x17000002")]
		public bool isLiveStreaming
		{
			[Token(Token = "0x6000024")]
			[Address(RVA = "0xBAF01C", Offset = "0xBAF01C", VA = "0xBAF01C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000025")]
			[Address(RVA = "0xBAD668", Offset = "0xBAD668", VA = "0xBAD668")]
			set
			{
			}
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0xBAEAF8", Offset = "0xBAEAF8", VA = "0xBAEAF8")]
		public SurroundCapture()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xBAEC00", Offset = "0xBAEC00", VA = "0xBAEC00")]
		private static extern void startEncoding(IntPtr texture, string path, bool isLive, int fps, bool needFlipping);

		[PreserveSig]
		[Token(Token = "0x6000020")]
		[Address(RVA = "0xBAECF8", Offset = "0xBAECF8", VA = "0xBAECF8")]
		private static extern void audioEncoding();

		[PreserveSig]
		[Token(Token = "0x6000021")]
		[Address(RVA = "0xBAEDB8", Offset = "0xBAEDB8", VA = "0xBAEDB8")]
		private static extern void stopEncoding();

		[PreserveSig]
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xBAEE78", Offset = "0xBAEE78", VA = "0xBAEE78")]
		private static extern void muxingData();

		[PreserveSig]
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xBAEF38", Offset = "0xBAEF38", VA = "0xBAEF38")]
		private static extern void saveScreenShot(IntPtr texture, string path, bool needFlipping);

		[Token(Token = "0x6000026")]
		[Address(RVA = "0xBAF024", Offset = "0xBAF024", VA = "0xBAF024")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0xBAF0B8", Offset = "0xBAF0B8", VA = "0xBAF0B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xBAF674", Offset = "0xBAF674", VA = "0xBAF674")]
		private void MuxingThread()
		{
		}

		[Token(Token = "0x6000029")]
		[Address(RVA = "0xBAF6D4", Offset = "0xBAF6D4", VA = "0xBAF6D4")]
		private void AudioThread()
		{
		}

		[Token(Token = "0x600002A")]
		[Address(RVA = "0xBAF404", Offset = "0xBAF404", VA = "0xBAF404")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0xBAF79C", Offset = "0xBAF79C", VA = "0xBAF79C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0xBAF848", Offset = "0xBAF848", VA = "0xBAF848")]
		private void Update()
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xBAD8AC", Offset = "0xBAD8AC", VA = "0xBAD8AC")]
		public void StartEncodingVideo()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0xBADACC", Offset = "0xBADACC", VA = "0xBADACC")]
		public void StopEncodingVideo()
		{
		}

		[Token(Token = "0x600002F")]
		[Address(RVA = "0xBAFB78", Offset = "0xBAFB78", VA = "0xBAFB78")]
		private void RenderCubeFace(CubemapFace face, float x, float y, float w, float h)
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0xBB0590", Offset = "0xBB0590", VA = "0xBB0590")]
		private void SetMaterialParameters(Material material)
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xBB0954", Offset = "0xBB0954", VA = "0xBB0954")]
		private void DisplayCubeMap(RenderTexture dest)
		{
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0xBB0B2C", Offset = "0xBB0B2C", VA = "0xBB0B2C")]
		private void DisplayEquirect(RenderTexture dest)
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xBB0BE0", Offset = "0xBB0BE0", VA = "0xBB0BE0")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0xBB0CA8", Offset = "0xBB0CA8", VA = "0xBB0CA8")]
		private void OnApplicationQuit()
		{
		}
	}
}
namespace GoogleVR.Demos
{
	[Token(Token = "0x200000E")]
	public class DemoInputManager : MonoBehaviour
	{
		[Token(Token = "0x4000069")]
		private const string MESSAGE_CANVAS_NAME = "MessageCanvas";

		[Token(Token = "0x400006A")]
		private const string MESSAGE_TEXT_NAME = "MessageText";

		[Token(Token = "0x400006B")]
		private const string LASER_GAMEOBJECT_NAME = "Laser";

		[Token(Token = "0x400006C")]
		private const string CONTROLLER_CONNECTING_MESSAGE = "Controller connecting...";

		[Token(Token = "0x400006D")]
		private const string CONTROLLER_DISCONNECTED_MESSAGE = "Controller disconnected";

		[Token(Token = "0x400006E")]
		private const string CONTROLLER_SCANNING_MESSAGE = "Controller scanning...";

		[Token(Token = "0x400006F")]
		private const string NON_GVR_PLATFORM = "Please select a supported Google VR platform via 'Build Settings > Android | iOS > Switch Platform'\n";

		[Token(Token = "0x4000070")]
		private const string VR_SUPPORT_NOT_CHECKED = "Please make sure 'Player Settings > Virtual Reality Supported' is checked\n";

		[Token(Token = "0x4000071")]
		private const string EMPTY_VR_SDK_WARNING_MESSAGE = "Please add 'Daydream' or 'Cardboard' under 'Player Settings > Virtual Reality SDKs'\n";

		[Token(Token = "0x4000072")]
		private const int ANDROID_MIN_DAYDREAM_API = 24;

		[Token(Token = "0x4000073")]
		private const string FIELD_SDK_INT = "SDK_INT";

		[Token(Token = "0x4000074")]
		private const string PACKAGE_BUILD_VERSION = "android.os.Build$VERSION";

		[Token(Token = "0x4000075")]
		private const string PACKAGE_DAYDREAM_API_CLASS = "com.google.vr.ndk.base.DaydreamApi";

		[Token(Token = "0x4000076")]
		private const string METHOD_IS_DAYDREAM_READY = "isDaydreamReadyPlatform";

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool isDaydream;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17450C", Offset = "0x17450C")]
		public GameObject controllerMain;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string CONTROLLER_MAIN_PROP_NAME;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174558", Offset = "0x174558")]
		public GameObject controllerPointer;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string CONTROLLER_POINTER_PROP_NAME;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1745A8", Offset = "0x1745A8")]
		public GameObject reticlePointer;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string RETICLE_POINTER_PROP_NAME;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameObject messageCanvas;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text messageText;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GvrSettings.ViewerPlatformType viewerPlatform;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1745F4", Offset = "0x1745F4")]
		private static Predicate<string> <>f__am$cache0;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174604", Offset = "0x174604")]
		private static Predicate<string> <>f__am$cache1;

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x329EB8", Offset = "0x329EB8", VA = "0x329EB8")]
		public DemoInputManager()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x329EC0", Offset = "0x329EC0", VA = "0x329EC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x32A990", Offset = "0x32A990", VA = "0x32A990")]
		private void Update()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x32B080", Offset = "0x32B080", VA = "0x32B080")]
		public bool IsCurrentlyDaydream()
		{
			return default(bool);
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0x32B088", Offset = "0x32B088", VA = "0x32B088")]
		public static bool playerSettingsHasDaydream()
		{
			return default(bool);
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0x32A7E8", Offset = "0x32A7E8", VA = "0x32A7E8")]
		public static bool playerSettingsHasCardboard()
		{
			return default(bool);
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0x32A45C", Offset = "0x32A45C", VA = "0x32A45C")]
		private static bool IsDeviceDaydreamReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x32AA7C", Offset = "0x32AA7C", VA = "0x32AA7C")]
		private void UpdateStatusMessage()
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x32A95C", Offset = "0x32A95C", VA = "0x32A95C")]
		private void SetVRInputMechanism()
		{
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x32B3E8", Offset = "0x32B3E8", VA = "0x32B3E8")]
		private void SetGazeInputActive(bool active)
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x32B530", Offset = "0x32B530", VA = "0x32B530")]
		private void SetControllerInputActive(bool active)
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x32B790", Offset = "0x32B790", VA = "0x32B790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FDAC", Offset = "0x17FDAC")]
		private static bool <playerSettingsHasDaydream>m__0(string element)
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x32B808", Offset = "0x32B808", VA = "0x32B808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FDBC", Offset = "0x17FDBC")]
		private static bool <playerSettingsHasCardboard>m__1(string element)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200000F")]
	public class DemoSceneManager : MonoBehaviour
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x32B880", Offset = "0x32B880", VA = "0x32B880")]
		public DemoSceneManager()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x32B888", Offset = "0x32B888", VA = "0x32B888")]
		private void Start()
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x32B894", Offset = "0x32B894", VA = "0x32B894")]
		private void Update()
		{
		}
	}
}
namespace GoogleVR.HelloVR
{
	[Token(Token = "0x2000010")]
	public class HeadsetDemoManager : MonoBehaviour
	{
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173974", Offset = "0x173974")]
		private sealed class <StatusUpdateLoop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal HeadsetDemoManager $this;

			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170004C3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600248C")]
				[Address(RVA = "0x32D184", Offset = "0x32D184", VA = "0x32D184", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600248D")]
				[Address(RVA = "0x32D18C", Offset = "0x32D18C", VA = "0x32D18C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600248A")]
			[Address(RVA = "0x32D080", Offset = "0x32D080", VA = "0x32D080")]
			[DebuggerHidden]
			public <StatusUpdateLoop>c__Iterator0()
			{
			}

			[Token(Token = "0x600248B")]
			[Address(RVA = "0x32D088", Offset = "0x32D088", VA = "0x32D088", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600248E")]
			[Address(RVA = "0x32D194", Offset = "0x32D194", VA = "0x32D194", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600248F")]
			[Address(RVA = "0x32D1A8", Offset = "0x32D1A8", VA = "0x32D1A8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject safetyRing;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableDebugLog;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private WaitForSeconds waitFourSeconds;

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x32B8BC", Offset = "0x32B8BC", VA = "0x32B8BC")]
		public HeadsetDemoManager()
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x32B948", Offset = "0x32B948", VA = "0x32B948")]
		public void OnSafetyRegionEvent(bool enter)
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x32BA3C", Offset = "0x32BA3C", VA = "0x32BA3C")]
		public void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation)
		{
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x32BD30", Offset = "0x32BD30", VA = "0x32BD30")]
		public void FindFloorHeight()
		{
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0x32BFF4", Offset = "0x32BFF4", VA = "0x32BFF4")]
		public void FindRecenterTransform()
		{
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x32C444", Offset = "0x32C444", VA = "0x32C444")]
		public void FindSafetyRegionType()
		{
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x32C708", Offset = "0x32C708", VA = "0x32C708")]
		public void FindSafetyInnerRadius()
		{
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x32CA84", Offset = "0x32CA84", VA = "0x32CA84")]
		public void FindSafetyOuterRadius()
		{
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0x32CD4C", Offset = "0x32CD4C", VA = "0x32CD4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0x32CF00", Offset = "0x32CF00", VA = "0x32CF00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0x32CFE4", Offset = "0x32CFE4", VA = "0x32CFE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0x32CE7C", Offset = "0x32CE7C", VA = "0x32CE7C")]
		[DebuggerHidden]
		private IEnumerator StatusUpdateLoop()
		{
			return null;
		}
	}
	[Token(Token = "0x2000011")]
	public class HelloVRManager : MonoBehaviour
	{
		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject m_launchVrHomeButton;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DemoInputManager m_demoInputManager;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174614", Offset = "0x174614")]
		private static Action<bool> <>f__am$cache0;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174624", Offset = "0x174624")]
		private static Action<bool> <>f__am$cache1;

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x32D230", Offset = "0x32D230", VA = "0x32D230")]
		public HelloVRManager()
		{
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x32D238", Offset = "0x32D238", VA = "0x32D238")]
		private void Start()
		{
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x32D310", Offset = "0x32D310", VA = "0x32D310")]
		private void Update()
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x32D434", Offset = "0x32D434", VA = "0x32D434")]
		public void LaunchVrHome()
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x32D508", Offset = "0x32D508", VA = "0x32D508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FDDC", Offset = "0x17FDDC")]
		private static void <Start>m__0(bool success)
		{
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x32D5A0", Offset = "0x32D5A0", VA = "0x32D5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FDEC", Offset = "0x17FDEC")]
		private static void <LaunchVrHome>m__1(bool success)
		{
		}
	}
	[Token(Token = "0x2000012")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1711C4", Offset = "0x1711C4")]
	public class ObjectController : MonoBehaviour
	{
		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 startingPosition;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer renderer;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Material inactiveMaterial;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material gazedAtMaterial;

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x32D638", Offset = "0x32D638", VA = "0x32D638")]
		public ObjectController()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x32D640", Offset = "0x32D640", VA = "0x32D640")]
		private void Start()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0x32D6F8", Offset = "0x32D6F8", VA = "0x32D6F8")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x32D814", Offset = "0x32D814", VA = "0x32D814")]
		public void Reset()
		{
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x32D9B8", Offset = "0x32D9B8", VA = "0x32D9B8")]
		public void Recenter()
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x32D9C0", Offset = "0x32D9C0", VA = "0x32D9C0")]
		public void TeleportRandomly()
		{
		}
	}
}
namespace GoogleVR.KeyboardDemo
{
	[Token(Token = "0x2000013")]
	public class KeyboardDelegateExample : GvrKeyboardDelegateBase
	{
		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text KeyboardText;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas UpdateCanvas;

		[Token(Token = "0x4000092")]
		private const string DD_KEYBOARD_NOT_INSTALLED_MSG = "Please update the Daydream Keyboard app from the Play Store.";

		[Token(Token = "0x14000001")]
		public override event EventHandler KeyboardHidden
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x32DD4C", Offset = "0x32DD4C", VA = "0x32DD4C", Slot = "9")]
			add
			{
			}
			[Token(Token = "0x6000060")]
			[Address(RVA = "0x32DE58", Offset = "0x32DE58", VA = "0x32DE58", Slot = "10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public override event EventHandler KeyboardShown
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x32DF64", Offset = "0x32DF64", VA = "0x32DF64", Slot = "11")]
			add
			{
			}
			[Token(Token = "0x6000062")]
			[Address(RVA = "0x32E070", Offset = "0x32E070", VA = "0x32E070", Slot = "12")]
			remove
			{
			}
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x32DD44", Offset = "0x32DD44", VA = "0x32DD44")]
		public KeyboardDelegateExample()
		{
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x32E17C", Offset = "0x32E17C", VA = "0x32E17C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x32E254", Offset = "0x32E254", VA = "0x32E254", Slot = "4")]
		public override void OnKeyboardShow()
		{
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x32E300", Offset = "0x32E300", VA = "0x32E300", Slot = "5")]
		public override void OnKeyboardHide()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x32E3AC", Offset = "0x32E3AC", VA = "0x32E3AC", Slot = "6")]
		public override void OnKeyboardUpdate(string text)
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x32E4B8", Offset = "0x32E4B8", VA = "0x32E4B8", Slot = "7")]
		public override void OnKeyboardEnterPressed(string text)
		{
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x32E588", Offset = "0x32E588", VA = "0x32E588", Slot = "8")]
		public override void OnKeyboardError(GvrKeyboardError errCode)
		{
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x32E858", Offset = "0x32E858", VA = "0x32E858")]
		public void LaunchPlayStore()
		{
		}
	}
}
namespace GoogleVR.PermissionsDemo
{
	[Token(Token = "0x2000014")]
	public class PermissionsFlowManager : MonoBehaviour
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] permissionNames;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text statusText;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<GvrPermissionsRequester.PermissionStatus> permissionList;

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x32E958", Offset = "0x32E958", VA = "0x32E958")]
		public PermissionsFlowManager()
		{
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x32E960", Offset = "0x32E960", VA = "0x32E960")]
		public void CheckPermission()
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0x32EBA0", Offset = "0x32EBA0", VA = "0x32EBA0")]
		public void RequestPermissions()
		{
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0x32F0D4", Offset = "0x32F0D4", VA = "0x32F0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FDFC", Offset = "0x17FDFC")]
		private void <RequestPermissions>m__0(GvrPermissionsRequester.PermissionStatus[] permissionResults)
		{
		}
	}
}
namespace GoogleVR.VideoDemo
{
	[Token(Token = "0x2000015")]
	public class AppButtonInput : MonoBehaviour
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ButtonEvent OnAppUp;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ButtonEvent OnAppDown;

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x32F680", Offset = "0x32F680", VA = "0x32F680")]
		public AppButtonInput()
		{
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x32F688", Offset = "0x32F688", VA = "0x32F688")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000016")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x17123C", Offset = "0x17123C")]
	public class AutoPlayVideo : MonoBehaviour
	{
		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool done;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float t;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GvrVideoPlayerTexture player;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool loop;

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x32F6F8", Offset = "0x32F6F8", VA = "0x32F6F8")]
		public AutoPlayVideo()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x32F708", Offset = "0x32F708", VA = "0x32F708")]
		private void Start()
		{
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x32F7E4", Offset = "0x32F7E4", VA = "0x32F7E4")]
		private void Update()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000017")]
	public class Vector3Event : UnityEvent<Vector3>
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x331798", Offset = "0x331798", VA = "0x331798")]
		public Vector3Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000018")]
	public class Vector2Event : UnityEvent<Vector2>
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x331734", Offset = "0x331734", VA = "0x331734")]
		public Vector2Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000019")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x32FA2C", Offset = "0x32FA2C", VA = "0x32FA2C")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001A")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x32F9C0", Offset = "0x32F9C0", VA = "0x32F9C0")]
		public BoolEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001B")]
	public class ButtonEvent : UnityEvent
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x32FA24", Offset = "0x32FA24", VA = "0x32FA24")]
		public ButtonEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001C")]
	public class TouchPadEvent : UnityEvent
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x3316C8", Offset = "0x3316C8", VA = "0x3316C8")]
		public TouchPadEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001D")]
	public class TransformEvent : UnityEvent<Transform>
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x3316D0", Offset = "0x3316D0", VA = "0x3316D0")]
		public TransformEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001E")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x32FA90", Offset = "0x32FA90", VA = "0x32FA90")]
		public GameObjectEvent()
		{
		}
	}
	[Token(Token = "0x200001F")]
	public class MenuHandler : MonoBehaviour
	{
		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173984", Offset = "0x173984")]
		private sealed class <DoAppear>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal CanvasGroup <cg>__0;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal MenuHandler $this;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004C5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002492")]
				[Address(RVA = "0x330084", Offset = "0x330084", VA = "0x330084", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002493")]
				[Address(RVA = "0x33008C", Offset = "0x33008C", VA = "0x33008C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002490")]
			[Address(RVA = "0x32FEEC", Offset = "0x32FEEC", VA = "0x32FEEC")]
			[DebuggerHidden]
			public <DoAppear>c__Iterator0()
			{
			}

			[Token(Token = "0x6002491")]
			[Address(RVA = "0x32FEFC", Offset = "0x32FEFC", VA = "0x32FEFC", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002494")]
			[Address(RVA = "0x330094", Offset = "0x330094", VA = "0x330094", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002495")]
			[Address(RVA = "0x3300A8", Offset = "0x3300A8", VA = "0x3300A8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173994", Offset = "0x173994")]
		private sealed class <DoFade>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal CanvasGroup <cg>__0;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal MenuHandler $this;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004C7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002498")]
				[Address(RVA = "0x3302B0", Offset = "0x3302B0", VA = "0x3302B0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002499")]
				[Address(RVA = "0x3302B8", Offset = "0x3302B8", VA = "0x3302B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002496")]
			[Address(RVA = "0x32FEF4", Offset = "0x32FEF4", VA = "0x32FEF4")]
			[DebuggerHidden]
			public <DoFade>c__Iterator1()
			{
			}

			[Token(Token = "0x6002497")]
			[Address(RVA = "0x330130", Offset = "0x330130", VA = "0x330130", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600249A")]
			[Address(RVA = "0x3302C0", Offset = "0x3302C0", VA = "0x3302C0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600249B")]
			[Address(RVA = "0x3302D4", Offset = "0x3302D4", VA = "0x3302D4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject[] menuObjects;

		[Token(Token = "0x600007C")]
		[Address(RVA = "0x32FAF4", Offset = "0x32FAF4", VA = "0x32FAF4")]
		public MenuHandler()
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0x32FAFC", Offset = "0x32FAFC", VA = "0x32FAFC")]
		public void HideMenu()
		{
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x32FCF4", Offset = "0x32FCF4", VA = "0x32FCF4")]
		public void ShowMenu()
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x32FE68", Offset = "0x32FE68", VA = "0x32FE68")]
		[DebuggerHidden]
		private IEnumerator DoAppear()
		{
			return null;
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0x32FC70", Offset = "0x32FC70", VA = "0x32FC70")]
		[DebuggerHidden]
		private IEnumerator DoFade()
		{
			return null;
		}
	}
	[Token(Token = "0x2000020")]
	public class PositionSwapper : MonoBehaviour
	{
		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int currentIndex;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] Positions;

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x33035C", Offset = "0x33035C", VA = "0x33035C")]
		public PositionSwapper()
		{
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x3303D8", Offset = "0x3303D8", VA = "0x3303D8")]
		public void SetConstraint(int index)
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x3303DC", Offset = "0x3303DC", VA = "0x3303DC")]
		public void SetPosition(int index)
		{
		}
	}
	[Token(Token = "0x2000021")]
	public class ScrubberEvents : MonoBehaviour
	{
		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject newPositionHandle;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] corners;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Slider slider;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VideoControlsManager mgr;

		[Token(Token = "0x17000003")]
		public VideoControlsManager ControlManager
		{
			[Token(Token = "0x6000085")]
			[Address(RVA = "0x330498", Offset = "0x330498", VA = "0x330498")]
			set
			{
			}
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x330490", Offset = "0x330490", VA = "0x330490")]
		public ScrubberEvents()
		{
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0x3304A0", Offset = "0x3304A0", VA = "0x3304A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x3306AC", Offset = "0x3306AC", VA = "0x3306AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x3309CC", Offset = "0x3309CC", VA = "0x3309CC")]
		public void OnPointerEnter(BaseEventData data)
		{
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0x330C64", Offset = "0x330C64", VA = "0x330C64")]
		public void OnPointerExit(BaseEventData data)
		{
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x330C94", Offset = "0x330C94", VA = "0x330C94")]
		public void OnPointerClick(BaseEventData data)
		{
		}
	}
	[Token(Token = "0x2000022")]
	public class SwitchVideos : MonoBehaviour
	{
		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject localVideoSample;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject dashVideoSample;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject panoVideoSample;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] videoSamples;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Text missingLibText;

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x330E74", Offset = "0x330E74", VA = "0x330E74")]
		public SwitchVideos()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0x330E7C", Offset = "0x330E7C", VA = "0x330E7C")]
		public void Awake()
		{
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0x331298", Offset = "0x331298", VA = "0x331298")]
		public void ShowMainMenu()
		{
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x3315D4", Offset = "0x3315D4", VA = "0x3315D4")]
		public void OnFlatLocal()
		{
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0x3315DC", Offset = "0x3315DC", VA = "0x3315DC")]
		public void OnDash()
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x3315E4", Offset = "0x3315E4", VA = "0x3315E4")]
		public void On360Video()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x3312A0", Offset = "0x3312A0", VA = "0x3312A0")]
		private void ShowSample(int index)
		{
		}
	}
	[Token(Token = "0x2000023")]
	public class ToggleAction : MonoBehaviour
	{
		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float lastUsage;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool on;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17469C", Offset = "0x17469C")]
		public UnityEvent OnToggleOn;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1746F0", Offset = "0x1746F0")]
		public UnityEvent OnToggleOff;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174748", Offset = "0x174748")]
		public bool InitialState;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17479C", Offset = "0x17479C")]
		public bool RaiseEventForInitialState;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174804", Offset = "0x174804")]
		public float Cooldown;

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x3315EC", Offset = "0x3315EC", VA = "0x3315EC")]
		public ToggleAction()
		{
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x3315F4", Offset = "0x3315F4", VA = "0x3315F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x331648", Offset = "0x331648", VA = "0x331648")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x3316AC", Offset = "0x3316AC", VA = "0x3316AC")]
		public void Set(bool on)
		{
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x331614", Offset = "0x331614", VA = "0x331614")]
		private void RaiseToggleEvent(bool on)
		{
		}
	}
	[Token(Token = "0x2000024")]
	public class VideoControlsManager : MonoBehaviour
	{
		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1739A4", Offset = "0x1739A4")]
		private sealed class <DoAppear>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal CanvasGroup <cg>__0;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal VideoControlsManager $this;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004C9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600249E")]
				[Address(RVA = "0x33326C", Offset = "0x33326C", VA = "0x33326C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600249F")]
				[Address(RVA = "0x333274", Offset = "0x333274", VA = "0x333274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600249C")]
			[Address(RVA = "0x3330D4", Offset = "0x3330D4", VA = "0x3330D4")]
			[DebuggerHidden]
			public <DoAppear>c__Iterator0()
			{
			}

			[Token(Token = "0x600249D")]
			[Address(RVA = "0x3330E4", Offset = "0x3330E4", VA = "0x3330E4", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x33327C", Offset = "0x33327C", VA = "0x33327C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x333290", Offset = "0x333290", VA = "0x333290", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1739B4", Offset = "0x1739B4")]
		private sealed class <DoFade>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal CanvasGroup <cg>__0;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal VideoControlsManager $this;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004CB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60024A4")]
				[Address(RVA = "0x3334B4", Offset = "0x3334B4", VA = "0x3334B4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024A5")]
				[Address(RVA = "0x3334BC", Offset = "0x3334BC", VA = "0x3334BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x3330DC", Offset = "0x3330DC", VA = "0x3330DC")]
			[DebuggerHidden]
			public <DoFade>c__Iterator1()
			{
			}

			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x333318", Offset = "0x333318", VA = "0x333318", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x3334C4", Offset = "0x3334C4", VA = "0x3334C4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x3334D8", Offset = "0x3334D8", VA = "0x3334D8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject pauseSprite;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject playSprite;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Slider videoScrubber;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider volumeSlider;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject volumeWidget;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject settingsPanel;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject bufferedBackground;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 basePosition;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Text videoPosition;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text videoDuration;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174838", Offset = "0x174838")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174838", Offset = "0x174838")]
		private GvrVideoPlayerTexture <Player>k__BackingField;

		[Token(Token = "0x17000004")]
		public GvrVideoPlayerTexture Player
		{
			[Token(Token = "0x6000099")]
			[Address(RVA = "0x330E6C", Offset = "0x330E6C", VA = "0x330E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FE3C", Offset = "0x17FE3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000098")]
			[Address(RVA = "0x331804", Offset = "0x331804", VA = "0x331804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FE2C", Offset = "0x17FE2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x3317FC", Offset = "0x3317FC", VA = "0x3317FC")]
		public VideoControlsManager()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x33180C", Offset = "0x33180C", VA = "0x33180C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x33210C", Offset = "0x33210C", VA = "0x33210C")]
		private void Start()
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x33223C", Offset = "0x33223C", VA = "0x33223C")]
		private void Update()
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x332AA8", Offset = "0x332AA8", VA = "0x332AA8")]
		public void OnVolumeUp()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x332B54", Offset = "0x332B54", VA = "0x332B54")]
		public void OnVolumeDown()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x332BDC", Offset = "0x332BDC", VA = "0x332BDC")]
		public void OnToggleVolume()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x332C88", Offset = "0x332C88", VA = "0x332C88")]
		public void OnToggleSettings()
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x332D34", Offset = "0x332D34", VA = "0x332D34")]
		public void OnPlayPause()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x332E40", Offset = "0x332E40", VA = "0x332E40")]
		public void OnVolumePositionChanged(float val)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x332DE8", Offset = "0x332DE8", VA = "0x332DE8")]
		public void CloseSubPanels()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x332F98", Offset = "0x332F98", VA = "0x332F98")]
		public void Fade(bool show)
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x332FCC", Offset = "0x332FCC", VA = "0x332FCC")]
		[DebuggerHidden]
		private IEnumerator DoAppear()
		{
			return null;
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x333050", Offset = "0x333050", VA = "0x333050")]
		[DebuggerHidden]
		private IEnumerator DoFade()
		{
			return null;
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x3328D4", Offset = "0x3328D4", VA = "0x3328D4")]
		private string FormatTime(long ms)
		{
			return null;
		}
	}
	[Token(Token = "0x2000025")]
	public class VideoPlayerReference : MonoBehaviour
	{
		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x333560", Offset = "0x333560", VA = "0x333560")]
		public VideoPlayerReference()
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x333568", Offset = "0x333568", VA = "0x333568")]
		private void Awake()
		{
		}
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1712B4", Offset = "0x1712B4")]
public static class GvrAudio
{
	[Token(Token = "0x2000027")]
	public enum Quality
	{
		[Token(Token = "0x40000D6")]
		Stereo,
		[Token(Token = "0x40000D7")]
		Low,
		[Token(Token = "0x40000D8")]
		High
	}

	[Token(Token = "0x2000028")]
	public enum SpatializerData
	{
		[Token(Token = "0x40000DA")]
		Id,
		[Token(Token = "0x40000DB")]
		Type,
		[Token(Token = "0x40000DC")]
		NumChannels,
		[Token(Token = "0x40000DD")]
		ChannelSet,
		[Token(Token = "0x40000DE")]
		Gain,
		[Token(Token = "0x40000DF")]
		DistanceAttenuation,
		[Token(Token = "0x40000E0")]
		MinDistance,
		[Token(Token = "0x40000E1")]
		ZeroOutput
	}

	[Token(Token = "0x2000029")]
	public enum SpatializerType
	{
		[Token(Token = "0x40000E3")]
		Source,
		[Token(Token = "0x40000E4")]
		Soundfield
	}

	[Token(Token = "0x200002A")]
	private struct RoomProperties
	{
		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GvrAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GvrAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GvrAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GvrAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GvrAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GvrAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sampleRate;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numChannels;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int framesPerBuffer;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x40000C1")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x40000C2")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x40000C3")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x40000C4")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x40000C5")]
	public const float minGainDb = -24f;

	[Token(Token = "0x40000C6")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x40000C7")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x40000C8")]
	public const float maxReverbTime = 3f;

	[Token(Token = "0x40000C9")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x40000CA")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x40000CB")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x40000CC")]
	public const int numFoaChannels = 4;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static Bounds bounds;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static List<GvrAudioRoom> enabledRooms;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool initialized;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static Transform listenerTransform;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int occlusionMaskValue;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x40000D4")]
	private const string pluginName = "audioplugingvrunity";

	[Token(Token = "0x17000005")]
	public static int SampleRate
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x34B084", Offset = "0x34B084", VA = "0x34B084")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000006")]
	public static int NumChannels
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x34B110", Offset = "0x34B110", VA = "0x34B110")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000007")]
	public static int FramesPerBuffer
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x34B19C", Offset = "0x34B19C", VA = "0x34B19C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x34B228", Offset = "0x34B228", VA = "0x34B228")]
	public static void Initialize(GvrAudioListener listener, Quality quality)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x34B65C", Offset = "0x34B65C", VA = "0x34B65C")]
	public static void Shutdown(GvrAudioListener listener)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x34B908", Offset = "0x34B908", VA = "0x34B908")]
	public static void UpdateAudioListener(float globalGainDb, LayerMask occlusionMask)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x34BBB4", Offset = "0x34BBB4", VA = "0x34BBB4")]
	public static int CreateAudioSoundfield()
	{
		return default(int);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x34BD78", Offset = "0x34BD78", VA = "0x34BD78")]
	public static void UpdateAudioSoundfield(int id, GvrAudioSoundfield soundfield)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x34BF4C", Offset = "0x34BF4C", VA = "0x34BF4C")]
	public static int CreateAudioSource(bool hrtfEnabled)
	{
		return default(int);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x34C118", Offset = "0x34C118", VA = "0x34C118")]
	public static void DestroyAudioSource(int id)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x34C2D8", Offset = "0x34C2D8", VA = "0x34C2D8")]
	public static void UpdateAudioSource(int id, GvrAudioSource source, float currentOcclusion)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x34C6EC", Offset = "0x34C6EC", VA = "0x34C6EC")]
	public static void UpdateAudioRoom(GvrAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x34CEA0", Offset = "0x34CEA0", VA = "0x34CEA0")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x34BA0C", Offset = "0x34BA0C", VA = "0x34BA0C")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x34D2AC", Offset = "0x34D2AC", VA = "0x34D2AC")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x34D450", Offset = "0x34D450", VA = "0x34D450")]
	public static bool IsListenerInsideRoom(GvrAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x34D784", Offset = "0x34D784", VA = "0x34D784")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x34CB0C", Offset = "0x34CB0C", VA = "0x34CB0C")]
	private static RoomProperties GetRoomProperties(GvrAudioRoom room)
	{
		return default(RoomProperties);
	}

	[PreserveSig]
	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x34BAB0", Offset = "0x34BAB0", VA = "0x34BAB0")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x34BC70", Offset = "0x34BC70", VA = "0x34BC70")]
	private static extern int CreateSoundfield(int numChannels);

	[PreserveSig]
	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x34C010", Offset = "0x34C010", VA = "0x34C010")]
	private static extern int CreateSoundObject(bool enableHrtf);

	[PreserveSig]
	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x34C1D8", Offset = "0x34C1D8", VA = "0x34C1D8")]
	private static extern void DestroySource(int sourceId);

	[PreserveSig]
	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x34BE68", Offset = "0x34BE68", VA = "0x34BE68")]
	private static extern void SetSourceBypassRoomEffects(int sourceId, bool bypassRoomEffects);

	[PreserveSig]
	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x34C3F8", Offset = "0x34C3F8", VA = "0x34C3F8")]
	private static extern void SetSourceDirectivity(int sourceId, float alpha, float order);

	[PreserveSig]
	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x34C518", Offset = "0x34C518", VA = "0x34C518")]
	private static extern void SetSourceListenerDirectivity(int sourceId, float alpha, float order);

	[PreserveSig]
	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x34C608", Offset = "0x34C608", VA = "0x34C608")]
	private static extern void SetSourceOcclusionIntensity(int sourceId, float intensity);

	[PreserveSig]
	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x34CD98", Offset = "0x34CD98", VA = "0x34CD98")]
	private static extern void SetRoomProperties(IntPtr roomProperties);

	[PreserveSig]
	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x34B548", Offset = "0x34B548", VA = "0x34B548")]
	private static extern void Initialize(int quality, int sampleRate, int numChannels, int framesPerBuffer);

	[PreserveSig]
	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x34B820", Offset = "0x34B820", VA = "0x34B820")]
	private static extern void Shutdown();
}
[Token(Token = "0x200002B")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1712E8", Offset = "0x1712E8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1712E8", Offset = "0x1712E8")]
public class GvrAudioListener : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float globalGainDb;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LayerMask occlusionMask;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GvrAudio.Quality quality;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x5B40E0", Offset = "0x5B40E0", VA = "0x5B40E0")]
	public GvrAudioListener()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x5B4114", Offset = "0x5B4114", VA = "0x5B4114")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x5B41A0", Offset = "0x5B41A0", VA = "0x5B41A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x5B4238", Offset = "0x5B4238", VA = "0x5B4238")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x5B42BC", Offset = "0x5B42BC", VA = "0x5B42BC")]
	private void Update()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x171360", Offset = "0x171360")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x171360", Offset = "0x171360")]
public class GvrAudioRoom : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x4000108")]
		Transparent,
		[Token(Token = "0x4000109")]
		AcousticCeilingTiles,
		[Token(Token = "0x400010A")]
		BrickBare,
		[Token(Token = "0x400010B")]
		BrickPainted,
		[Token(Token = "0x400010C")]
		ConcreteBlockCoarse,
		[Token(Token = "0x400010D")]
		ConcreteBlockPainted,
		[Token(Token = "0x400010E")]
		CurtainHeavy,
		[Token(Token = "0x400010F")]
		FiberglassInsulation,
		[Token(Token = "0x4000110")]
		GlassThin,
		[Token(Token = "0x4000111")]
		GlassThick,
		[Token(Token = "0x4000112")]
		Grass,
		[Token(Token = "0x4000113")]
		LinoleumOnConcrete,
		[Token(Token = "0x4000114")]
		Marble,
		[Token(Token = "0x4000115")]
		Metal,
		[Token(Token = "0x4000116")]
		ParquetOnConcrete,
		[Token(Token = "0x4000117")]
		PlasterRough,
		[Token(Token = "0x4000118")]
		PlasterSmooth,
		[Token(Token = "0x4000119")]
		PlywoodPanel,
		[Token(Token = "0x400011A")]
		PolishedConcreteOrTile,
		[Token(Token = "0x400011B")]
		Sheetrock,
		[Token(Token = "0x400011C")]
		WaterOrIceSurface,
		[Token(Token = "0x400011D")]
		WoodCeiling,
		[Token(Token = "0x400011E")]
		WoodPanel
	}

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SurfaceMaterial floor;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reflectivity;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reverbGainDb;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float reverbBrightness;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reverbTime;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 size;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x5B4358", Offset = "0x5B4358", VA = "0x5B4358")]
	public GvrAudioRoom()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x5B4438", Offset = "0x5B4438", VA = "0x5B4438")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x5B443C", Offset = "0x5B443C", VA = "0x5B443C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x5B44D0", Offset = "0x5B44D0", VA = "0x5B44D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x5B4558", Offset = "0x5B4558", VA = "0x5B4558")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x5B45EC", Offset = "0x5B45EC", VA = "0x5B45EC")]
	private void OnDrawGizmosSelected()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1713D4", Offset = "0x1713D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1713D4", Offset = "0x1713D4")]
public class GvrAudioSoundfield : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float gainDb;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool playOnAwake;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip soundfieldClip0102;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AudioClip soundfieldClip0304;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool soundfieldLoop;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool soundfieldMute;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1748BC", Offset = "0x1748BC")]
	private float soundfieldPitch;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1748FC", Offset = "0x1748FC")]
	private int soundfieldPriority;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174938", Offset = "0x174938")]
	private float soundfieldSpatialBlend;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174970", Offset = "0x174970")]
	private float soundfieldDopplerLevel;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1749AC", Offset = "0x1749AC")]
	private float soundfieldVolume;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioRolloffMode soundfieldRolloffMode;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float soundfieldMaxDistance;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float soundfieldMinDistance;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int id;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isPaused;

	[Token(Token = "0x17000008")]
	public AudioClip clip0102
	{
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x5B47AC", Offset = "0x5B47AC", VA = "0x5B47AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x5B47B4", Offset = "0x5B47B4", VA = "0x5B47B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public AudioClip clip0304
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x5B4808", Offset = "0x5B4808", VA = "0x5B4808")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x5B4810", Offset = "0x5B4810", VA = "0x5B4810")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool isPlaying
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x5B4880", Offset = "0x5B4880", VA = "0x5B4880")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000B")]
	public bool loop
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x5B48CC", Offset = "0x5B48CC", VA = "0x5B48CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x5B48D4", Offset = "0x5B48D4", VA = "0x5B48D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool mute
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x5B4984", Offset = "0x5B4984", VA = "0x5B4984")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x5B498C", Offset = "0x5B498C", VA = "0x5B498C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float pitch
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x5B4A3C", Offset = "0x5B4A3C", VA = "0x5B4A3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x5B4A44", Offset = "0x5B4A44", VA = "0x5B4A44")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public int priority
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x5B4AF4", Offset = "0x5B4AF4", VA = "0x5B4AF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x5B4AFC", Offset = "0x5B4AFC", VA = "0x5B4AFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float spatialBlend
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x5B4BA4", Offset = "0x5B4BA4", VA = "0x5B4BA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x5B4BAC", Offset = "0x5B4BAC", VA = "0x5B4BAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float dopplerLevel
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x5B4C5C", Offset = "0x5B4C5C", VA = "0x5B4C5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x5B4C64", Offset = "0x5B4C64", VA = "0x5B4C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float time
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x5B4D14", Offset = "0x5B4D14", VA = "0x5B4D14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x5B4D60", Offset = "0x5B4D60", VA = "0x5B4D60")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public int timeSamples
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x5B4E04", Offset = "0x5B4E04", VA = "0x5B4E04")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x5B4E50", Offset = "0x5B4E50", VA = "0x5B4E50")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float volume
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x5B4EF4", Offset = "0x5B4EF4", VA = "0x5B4EF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x5B4EFC", Offset = "0x5B4EFC", VA = "0x5B4EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public AudioRolloffMode rolloffMode
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x5B4FAC", Offset = "0x5B4FAC", VA = "0x5B4FAC")]
		get
		{
			return default(AudioRolloffMode);
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x5B4FB4", Offset = "0x5B4FB4", VA = "0x5B4FB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public float maxDistance
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x5B50E8", Offset = "0x5B50E8", VA = "0x5B50E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x5B50F0", Offset = "0x5B50F0", VA = "0x5B50F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public float minDistance
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x5B5234", Offset = "0x5B5234", VA = "0x5B5234")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x5B523C", Offset = "0x5B523C", VA = "0x5B523C")]
		set
		{
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x5B476C", Offset = "0x5B476C", VA = "0x5B476C")]
	public GvrAudioSoundfield()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x5B5370", Offset = "0x5B5370", VA = "0x5B5370")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x5B5ABC", Offset = "0x5B5ABC", VA = "0x5B5ABC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x5B5D24", Offset = "0x5B5D24", VA = "0x5B5D24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x5B5D70", Offset = "0x5B5D70", VA = "0x5B5D70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x5B5EB4", Offset = "0x5B5EB4", VA = "0x5B5EB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x5B5FBC", Offset = "0x5B5FBC", VA = "0x5B5FBC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x5B6114", Offset = "0x5B6114", VA = "0x5B6114")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x5B5FCC", Offset = "0x5B5FCC", VA = "0x5B5FCC")]
	public void Pause()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x5B5CF4", Offset = "0x5B5CF4", VA = "0x5B5CF4")]
	public void Play()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x5B644C", Offset = "0x5B644C", VA = "0x5B644C")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x5B62F4", Offset = "0x5B62F4", VA = "0x5B62F4")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x5B6490", Offset = "0x5B6490", VA = "0x5B6490")]
	public void SetScheduledEndTime(double time)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x5B6548", Offset = "0x5B6548", VA = "0x5B6548")]
	public void SetScheduledStartTime(double time)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x5B5E08", Offset = "0x5B5E08", VA = "0x5B5E08")]
	public void Stop()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x5B6070", Offset = "0x5B6070", VA = "0x5B6070")]
	public void UnPause()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x5B5B9C", Offset = "0x5B5B9C", VA = "0x5B5B9C")]
	private bool InitializeSoundfield()
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x5B6600", Offset = "0x5B6600", VA = "0x5B6600")]
	private void ShutdownSoundfield()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x5B6704", Offset = "0x5B6704", VA = "0x5B6704")]
	private void InitializeChannelSet(AudioSource source, int channelSet)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x5B692C", Offset = "0x5B692C", VA = "0x5B692C")]
	private void ShutdownChannelSet(AudioSource source, int channelSet)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x5B69C8", Offset = "0x5B69C8", VA = "0x5B69C8")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x5B5A20", Offset = "0x5B5A20", VA = "0x5B5A20")]
	private void OnValidate()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x171450", Offset = "0x171450")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x171450", Offset = "0x171450")]
public class GvrAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float directivityAlpha;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float directivitySharpness;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gainDb;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool occlusionEnabled;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool playOnAwake;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip sourceClip;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool sourceLoop;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool sourceMute;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174A44", Offset = "0x174A44")]
	private float sourcePitch;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174A84", Offset = "0x174A84")]
	private int sourcePriority;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174AC0", Offset = "0x174AC0")]
	private float sourceSpatialBlend;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174AF8", Offset = "0x174AF8")]
	private float sourceDopplerLevel;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174B34", Offset = "0x174B34")]
	private float sourceSpread;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174B70", Offset = "0x174B70")]
	private float sourceVolume;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioRolloffMode sourceRolloffMode;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float sourceMaxDistance;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float sourceMinDistance;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool hrtfEnabled;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int id;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentOcclusion;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPaused;

	[Token(Token = "0x17000017")]
	public AudioClip clip
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x5B6A1C", Offset = "0x5B6A1C", VA = "0x5B6A1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x5B6A24", Offset = "0x5B6A24", VA = "0x5B6A24")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool isPlaying
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x5B6AE8", Offset = "0x5B6AE8", VA = "0x5B6AE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000019")]
	public bool loop
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x5B6BA0", Offset = "0x5B6BA0", VA = "0x5B6BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x5B6BA8", Offset = "0x5B6BA8", VA = "0x5B6BA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool mute
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x5B6C74", Offset = "0x5B6C74", VA = "0x5B6C74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x5B6C7C", Offset = "0x5B6C7C", VA = "0x5B6C7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float pitch
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x5B6D48", Offset = "0x5B6D48", VA = "0x5B6D48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x5B6D50", Offset = "0x5B6D50", VA = "0x5B6D50")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public int priority
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x5B6E20", Offset = "0x5B6E20", VA = "0x5B6E20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x5B6E28", Offset = "0x5B6E28", VA = "0x5B6E28")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float spatialBlend
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x5B6EEC", Offset = "0x5B6EEC", VA = "0x5B6EEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x5B6EF4", Offset = "0x5B6EF4", VA = "0x5B6EF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public float dopplerLevel
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x5B6FC4", Offset = "0x5B6FC4", VA = "0x5B6FC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x5B6FCC", Offset = "0x5B6FCC", VA = "0x5B6FCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float spread
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x5B709C", Offset = "0x5B709C", VA = "0x5B709C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x5B70A4", Offset = "0x5B70A4", VA = "0x5B70A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public float time
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x5B7174", Offset = "0x5B7174", VA = "0x5B7174")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x5B722C", Offset = "0x5B722C", VA = "0x5B722C")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public int timeSamples
	{
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x5B72E8", Offset = "0x5B72E8", VA = "0x5B72E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x5B73A0", Offset = "0x5B73A0", VA = "0x5B73A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public float volume
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x5B745C", Offset = "0x5B745C", VA = "0x5B745C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x5B7464", Offset = "0x5B7464", VA = "0x5B7464")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public AudioRolloffMode rolloffMode
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x5B7534", Offset = "0x5B7534", VA = "0x5B7534")]
		get
		{
			return default(AudioRolloffMode);
		}
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x5B753C", Offset = "0x5B753C", VA = "0x5B753C")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float maxDistance
	{
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x5B7664", Offset = "0x5B7664", VA = "0x5B7664")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x5B766C", Offset = "0x5B766C", VA = "0x5B766C")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float minDistance
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x5B7790", Offset = "0x5B7790", VA = "0x5B7790")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x5B7798", Offset = "0x5B7798", VA = "0x5B7798")]
		set
		{
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x5B69CC", Offset = "0x5B69CC", VA = "0x5B69CC")]
	public GvrAudioSource()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x5B78AC", Offset = "0x5B78AC", VA = "0x5B78AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x5B7C4C", Offset = "0x5B7C4C", VA = "0x5B7C4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x5B7FE0", Offset = "0x5B7FE0", VA = "0x5B7FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x5B8018", Offset = "0x5B8018", VA = "0x5B8018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x5B8114", Offset = "0x5B8114", VA = "0x5B8114")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x5B819C", Offset = "0x5B819C", VA = "0x5B819C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x5B8324", Offset = "0x5B8324", VA = "0x5B8324")]
	private void Update()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x5B84E8", Offset = "0x5B84E8", VA = "0x5B84E8")]
	public void GetOutputData(float[] samples, int channel)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x5B85AC", Offset = "0x5B85AC", VA = "0x5B85AC")]
	public void GetSpectrumData(float[] samples, int channel, FFTWindow window)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x5B81AC", Offset = "0x5B81AC", VA = "0x5B81AC")]
	public void Pause()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x5B7ECC", Offset = "0x5B7ECC", VA = "0x5B7ECC")]
	public void Play()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x5B8684", Offset = "0x5B8684", VA = "0x5B8684")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x5B87A0", Offset = "0x5B87A0", VA = "0x5B87A0")]
	public void PlayOneShot(AudioClip clip)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x5B87A8", Offset = "0x5B87A8", VA = "0x5B87A8")]
	public void PlayOneShot(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x5B88CC", Offset = "0x5B88CC", VA = "0x5B88CC")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x5B89FC", Offset = "0x5B89FC", VA = "0x5B89FC")]
	public void SetScheduledEndTime(double time)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x5B8ACC", Offset = "0x5B8ACC", VA = "0x5B8ACC")]
	public void SetScheduledStartTime(double time)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x5B8050", Offset = "0x5B8050", VA = "0x5B8050")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x5B8268", Offset = "0x5B8268", VA = "0x5B8268")]
	public void UnPause()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x5B7CB8", Offset = "0x5B7CB8", VA = "0x5B7CB8")]
	private bool InitializeSource()
	{
		return default(bool);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x5B8B9C", Offset = "0x5B8B9C", VA = "0x5B8B9C")]
	private void ShutdownSource()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x5B8CB0", Offset = "0x5B8CB0", VA = "0x5B8CB0")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x5B7BB0", Offset = "0x5B7BB0", VA = "0x5B7BB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x5B8CB4", Offset = "0x5B8CB4", VA = "0x5B8CB4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x5B8E60", Offset = "0x5B8E60", VA = "0x5B8E60")]
	private void DrawDirectivityGizmo(Transform target, float alpha, float sharpness, int resolution)
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1714C8", Offset = "0x1714C8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1714C8", Offset = "0x1714C8")]
public class GvrController : GvrControllerInput
{
	[Token(Token = "0x17000026")]
	public new static GvrConnectionState State
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x5BBA44", Offset = "0x5BBA44", VA = "0x5BBA44")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x17000027")]
	public new static GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x5BBB64", Offset = "0x5BBB64", VA = "0x5BBB64")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x17000028")]
	public new static Quaternion Orientation
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x5BBC84", Offset = "0x5BBC84", VA = "0x5BBC84")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000029")]
	public new static Vector3 Gyro
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x5BBDF0", Offset = "0x5BBDF0", VA = "0x5BBDF0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700002A")]
	public new static Vector3 Accel
	{
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x5BBF60", Offset = "0x5BBF60", VA = "0x5BBF60")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700002B")]
	public new static bool IsTouching
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x5BC0D0", Offset = "0x5BC0D0", VA = "0x5BC0D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002C")]
	public new static bool TouchDown
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x5BC0D4", Offset = "0x5BC0D4", VA = "0x5BC0D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public new static bool TouchUp
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x5BC0D8", Offset = "0x5BC0D8", VA = "0x5BC0D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public new static Vector2 TouchPos
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x5BC0DC", Offset = "0x5BC0DC", VA = "0x5BC0DC")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700002F")]
	public new static bool Recentered
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x5BC0EC", Offset = "0x5BC0EC", VA = "0x5BC0EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000030")]
	public new static bool ClickButton
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x5BC214", Offset = "0x5BC214", VA = "0x5BC214")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000031")]
	public new static bool ClickButtonDown
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x5BC218", Offset = "0x5BC218", VA = "0x5BC218")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000032")]
	public new static bool ClickButtonUp
	{
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x5BC21C", Offset = "0x5BC21C", VA = "0x5BC21C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000033")]
	public new static bool AppButton
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x5BC220", Offset = "0x5BC220", VA = "0x5BC220")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000034")]
	public new static bool AppButtonDown
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x5BC348", Offset = "0x5BC348", VA = "0x5BC348")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000035")]
	public new static bool AppButtonUp
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x5BC470", Offset = "0x5BC470", VA = "0x5BC470")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public new static bool HomeButtonDown
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x5BC598", Offset = "0x5BC598", VA = "0x5BC598")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public new static bool HomeButtonState
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x5BC6C0", Offset = "0x5BC6C0", VA = "0x5BC6C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public new static string ErrorDetails
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x5BC7E8", Offset = "0x5BC7E8", VA = "0x5BC7E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000039")]
	public new static IntPtr StatePtr
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x5BC9A0", Offset = "0x5BC9A0", VA = "0x5BC9A0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003A")]
	public new static bool IsCharging
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x5BCAC0", Offset = "0x5BCAC0", VA = "0x5BCAC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public new static GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x5BCBE8", Offset = "0x5BCBE8", VA = "0x5BCBE8")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x5BB96C", Offset = "0x5BB96C", VA = "0x5BB96C")]
	public GvrController()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x171540", Offset = "0x171540")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x171540", Offset = "0x171540")]
public class GvrControllerVisualManager : GvrTrackedController
{
	[Token(Token = "0x6000154")]
	[Address(RVA = "0x5BFCF0", Offset = "0x5BFCF0", VA = "0x5BFCF0")]
	public GvrControllerVisualManager()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1715BC", Offset = "0x1715BC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1715BC", Offset = "0x1715BC")]
public class GvrPointerManager : MonoBehaviour
{
	[Token(Token = "0x1700003C")]
	public static GvrBasePointer Pointer
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x5D2100", Offset = "0x5D2100", VA = "0x5D2100")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x5D2104", Offset = "0x5D2104", VA = "0x5D2104")]
		set
		{
		}
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x5D20F8", Offset = "0x5D20F8", VA = "0x5D20F8")]
	public GvrPointerManager()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x5D2108", Offset = "0x5D2108", VA = "0x5D2108")]
	public static void OnPointerCreated(GvrBasePointer createdPointer)
	{
	}
}
[Token(Token = "0x2000033")]
public class GvrReticlePointer : GvrBasePointer
{
	[Token(Token = "0x400014B")]
	public const float RETICLE_MIN_INNER_ANGLE = 0f;

	[Token(Token = "0x400014C")]
	public const float RETICLE_MIN_OUTER_ANGLE = 0.5f;

	[Token(Token = "0x400014D")]
	public const float RETICLE_GROWTH_ANGLE = 1.5f;

	[Token(Token = "0x400014E")]
	public const float RETICLE_DISTANCE_MIN = 0.45f;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxReticleDistance;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int reticleSegments;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174BF8", Offset = "0x174BF8")]
	public int reticleSortingOrder;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174C18", Offset = "0x174C18")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174C18", Offset = "0x174C18")]
	private Material <MaterialComp>k__BackingField;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174C4C", Offset = "0x174C4C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174C4C", Offset = "0x174C4C")]
	private float <ReticleInnerAngle>k__BackingField;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174C80", Offset = "0x174C80")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174C80", Offset = "0x174C80")]
	private float <ReticleOuterAngle>k__BackingField;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174CB4", Offset = "0x174CB4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174CB4", Offset = "0x174CB4")]
	private float <ReticleDistanceInMeters>k__BackingField;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174CE8", Offset = "0x174CE8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174CE8", Offset = "0x174CE8")]
	private float <ReticleInnerDiameter>k__BackingField;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174D1C", Offset = "0x174D1C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174D1C", Offset = "0x174D1C")]
	private float <ReticleOuterDiameter>k__BackingField;

	[Token(Token = "0x1700003D")]
	public Material MaterialComp
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x5D47C8", Offset = "0x5D47C8", VA = "0x5D47C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FE6C", Offset = "0x17FE6C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x5D47D0", Offset = "0x5D47D0", VA = "0x5D47D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FE7C", Offset = "0x17FE7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float ReticleInnerAngle
	{
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x5D47D8", Offset = "0x5D47D8", VA = "0x5D47D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FE8C", Offset = "0x17FE8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x5D47E0", Offset = "0x5D47E0", VA = "0x5D47E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FE9C", Offset = "0x17FE9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float ReticleOuterAngle
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x5D47E8", Offset = "0x5D47E8", VA = "0x5D47E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FEAC", Offset = "0x17FEAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x5D47F0", Offset = "0x5D47F0", VA = "0x5D47F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FEBC", Offset = "0x17FEBC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public float ReticleDistanceInMeters
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x5D47F8", Offset = "0x5D47F8", VA = "0x5D47F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FECC", Offset = "0x17FECC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x5D4800", Offset = "0x5D4800", VA = "0x5D4800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FEDC", Offset = "0x17FEDC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public float ReticleInnerDiameter
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x5D4808", Offset = "0x5D4808", VA = "0x5D4808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FEEC", Offset = "0x17FEEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x5D4810", Offset = "0x5D4810", VA = "0x5D4810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FEFC", Offset = "0x17FEFC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public float ReticleOuterDiameter
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x5D4818", Offset = "0x5D4818", VA = "0x5D4818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF0C", Offset = "0x17FF0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x5D4820", Offset = "0x5D4820", VA = "0x5D4820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF1C", Offset = "0x17FF1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x5D4828", Offset = "0x5D4828", VA = "0x5D4828", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x5D4794", Offset = "0x5D4794", VA = "0x5D4794")]
	public GvrReticlePointer()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x5D4830", Offset = "0x5D4830", VA = "0x5D4830", Slot = "16")]
	public override void OnPointerEnter(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x5D4A28", Offset = "0x5D4A28", VA = "0x5D4A28", Slot = "17")]
	public override void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x5D4A50", Offset = "0x5D4A50", VA = "0x5D4A50", Slot = "18")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x5D4A6C", Offset = "0x5D4A6C", VA = "0x5D4A6C", Slot = "19")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x5D4A70", Offset = "0x5D4A70", VA = "0x5D4A70", Slot = "20")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x5D4A74", Offset = "0x5D4A74", VA = "0x5D4A74", Slot = "21")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x5D4B04", Offset = "0x5D4B04", VA = "0x5D4B04")]
	public void UpdateDiameters()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x5D4D64", Offset = "0x5D4D64", VA = "0x5D4D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x5D4D78", Offset = "0x5D4D78", VA = "0x5D4D78", Slot = "22")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x5D526C", Offset = "0x5D526C", VA = "0x5D526C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x5D4858", Offset = "0x5D4858", VA = "0x5D4858")]
	private bool SetPointerTarget(Vector3 target, bool interactive)
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x5D4E40", Offset = "0x5D4E40", VA = "0x5D4E40")]
	private void CreateReticleVertices()
	{
	}
}
[Token(Token = "0x2000034")]
public class GvrArmModel : GvrBaseArmModel
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 elbowRestPosition;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 wristRestPosition;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 controllerRestPosition;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 armExtensionOffset;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174D50", Offset = "0x174D50")]
	public float elbowBendRatio;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174D68", Offset = "0x174D68")]
	public float fadeControllerOffset;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174D84", Offset = "0x174D84")]
	public float fadeDistanceFromHeadForward;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174DA0", Offset = "0x174DA0")]
	public float fadeDistanceFromHeadSide;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174DBC", Offset = "0x174DBC")]
	public float tooltipMinDistanceFromFace;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174DDC", Offset = "0x174DDC")]
	public int tooltipMaxAngleFromCamera;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool isLockedToNeck;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3 neckPosition;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 elbowPosition;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Quaternion elbowRotation;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 wristPosition;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Quaternion wristRotation;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Vector3 controllerPosition;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Quaternion controllerRotation;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float preferredAlpha;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected float tooltipAlphaValue;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3 handedMultiplier;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 torsoDirection;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Quaternion torsoRotation;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 DEFAULT_ELBOW_REST_POSITION;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 DEFAULT_WRIST_REST_POSITION;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 DEFAULT_CONTROLLER_REST_POSITION;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly Vector3 DEFAULT_ARM_EXTENSION_OFFSET;

	[Token(Token = "0x4000174")]
	public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

	[Token(Token = "0x4000175")]
	protected const float EXTENSION_WEIGHT = 0.4f;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static readonly Vector3 SHOULDER_POSITION;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected static readonly Vector3 NECK_OFFSET;

	[Token(Token = "0x4000178")]
	protected const float DELTA_ALPHA = 4f;

	[Token(Token = "0x4000179")]
	protected const float MIN_EXTENSION_ANGLE = 7f;

	[Token(Token = "0x400017A")]
	protected const float MAX_EXTENSION_ANGLE = 60f;

	[Token(Token = "0x17000044")]
	public override Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x349384", Offset = "0x349384", VA = "0x349384", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000045")]
	public override Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x349398", Offset = "0x349398", VA = "0x349398", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000046")]
	public override float PreferredAlpha
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x3493A8", Offset = "0x3493A8", VA = "0x3493A8", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000047")]
	public override float TooltipAlphaValue
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x3493B0", Offset = "0x3493B0", VA = "0x3493B0", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000048")]
	public Vector3 NeckPosition
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x3493B8", Offset = "0x3493B8", VA = "0x3493B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000049")]
	public Vector3 ShoulderPosition
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x3493CC", Offset = "0x3493CC", VA = "0x3493CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004A")]
	public Quaternion ShoulderRotation
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x349588", Offset = "0x349588", VA = "0x349588")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700004B")]
	public Vector3 ElbowPosition
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x349598", Offset = "0x349598", VA = "0x349598")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004C")]
	public Quaternion ElbowRotation
	{
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x3495AC", Offset = "0x3495AC", VA = "0x3495AC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700004D")]
	public Vector3 WristPosition
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x3495BC", Offset = "0x3495BC", VA = "0x3495BC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004E")]
	public Quaternion WristRotation
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x3495D0", Offset = "0x3495D0", VA = "0x3495D0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x349254", Offset = "0x349254", VA = "0x349254")]
	public GvrArmModel()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x3495E0", Offset = "0x3495E0", VA = "0x3495E0", Slot = "8")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x3496A4", Offset = "0x3496A4", VA = "0x3496A4", Slot = "9")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x34973C", Offset = "0x34973C", VA = "0x34973C", Slot = "10")]
	protected virtual void OnControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x3497B4", Offset = "0x3497B4", VA = "0x3497B4", Slot = "11")]
	protected virtual void UpdateHandedness()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x349818", Offset = "0x349818", VA = "0x349818", Slot = "12")]
	protected virtual void UpdateTorsoDirection(bool forceImmediate)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x349AA0", Offset = "0x349AA0", VA = "0x349AA0", Slot = "13")]
	protected virtual void UpdateNeckPosition()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x349B94", Offset = "0x349B94", VA = "0x349B94", Slot = "14")]
	protected virtual void ApplyArmModel()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x349ED0", Offset = "0x349ED0", VA = "0x349ED0", Slot = "15")]
	protected virtual void SetUntransformedJointPositions()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x34A010", Offset = "0x34A010", VA = "0x34A010", Slot = "16")]
	protected virtual float CalculateExtensionRatio(float xAngle)
	{
		return default(float);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x34A0B8", Offset = "0x34A0B8", VA = "0x34A0B8", Slot = "17")]
	protected virtual void ApplyExtensionOffset(float extensionRatio)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x34A1D8", Offset = "0x34A1D8", VA = "0x34A1D8", Slot = "18")]
	protected virtual Quaternion CalculateLerpRotation(Quaternion xyRotation, float extensionRatio)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x34A36C", Offset = "0x34A36C", VA = "0x34A36C", Slot = "19")]
	protected virtual void CalculateFinalJointRotations(Quaternion controllerOrientation, Quaternion xyRotation, Quaternion lerpRotation)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x34A540", Offset = "0x34A540", VA = "0x34A540", Slot = "20")]
	protected virtual void ApplyRotationToJoints()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x34A724", Offset = "0x34A724", VA = "0x34A724", Slot = "21")]
	protected virtual Vector3 ApplyInverseNeckModel(Vector3 headPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x34A90C", Offset = "0x34A90C", VA = "0x34A90C", Slot = "22")]
	protected virtual void UpdateTransparency()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x349CD0", Offset = "0x349CD0", VA = "0x349CD0")]
	protected void GetControllerRotation(out Quaternion rotation, out Quaternion xyRotation, out float xAngle)
	{
	}
}
[Token(Token = "0x2000035")]
public abstract class GvrBaseArmModel : MonoBehaviour
{
	[Token(Token = "0x1700004F")]
	public abstract Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x6000191")]
		get;
	}

	[Token(Token = "0x17000050")]
	public abstract Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x6000192")]
		get;
	}

	[Token(Token = "0x17000051")]
	public abstract float PreferredAlpha
	{
		[Token(Token = "0x6000193")]
		get;
	}

	[Token(Token = "0x17000052")]
	public abstract float TooltipAlphaValue
	{
		[Token(Token = "0x6000194")]
		get;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x5B94AC", Offset = "0x5B94AC", VA = "0x5B94AC")]
	protected GvrBaseArmModel()
	{
	}
}
[Token(Token = "0x2000036")]
public interface IGvrArmModelReceiver
{
	[Token(Token = "0x17000053")]
	GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000195")]
		get;
		[Token(Token = "0x6000196")]
		set;
	}
}
[Token(Token = "0x2000037")]
public enum GvrConnectionState
{
	[Token(Token = "0x400017C")]
	Error = -1,
	[Token(Token = "0x400017D")]
	Disconnected,
	[Token(Token = "0x400017E")]
	Scanning,
	[Token(Token = "0x400017F")]
	Connecting,
	[Token(Token = "0x4000180")]
	Connected
}
[Token(Token = "0x2000038")]
public enum GvrControllerApiStatus
{
	[Token(Token = "0x4000182")]
	Error = -1,
	[Token(Token = "0x4000183")]
	Ok,
	[Token(Token = "0x4000184")]
	Unsupported,
	[Token(Token = "0x4000185")]
	NotAuthorized,
	[Token(Token = "0x4000186")]
	Unavailable,
	[Token(Token = "0x4000187")]
	ApiServiceObsolete,
	[Token(Token = "0x4000188")]
	ApiClientObsolete,
	[Token(Token = "0x4000189")]
	ApiMalfunction
}
[Token(Token = "0x2000039")]
public enum GvrControllerBatteryLevel
{
	[Token(Token = "0x400018B")]
	Error = -1,
	[Token(Token = "0x400018C")]
	Unknown,
	[Token(Token = "0x400018D")]
	CriticalLow,
	[Token(Token = "0x400018E")]
	Low,
	[Token(Token = "0x400018F")]
	Medium,
	[Token(Token = "0x4000190")]
	AlmostFull,
	[Token(Token = "0x4000191")]
	Full
}
[Token(Token = "0x200003A")]
public class GvrControllerInput : MonoBehaviour
{
	[Token(Token = "0x200003B")]
	public delegate void OnStateChangedEvent(GvrConnectionState state, GvrConnectionState oldState);

	[Token(Token = "0x200003C")]
	public enum EmulatorConnectionMode
	{
		[Token(Token = "0x400019C")]
		OFF,
		[Token(Token = "0x400019D")]
		USB,
		[Token(Token = "0x400019E")]
		WIFI
	}

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrControllerInput instance;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static IControllerProvider controllerProvider;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ControllerState controllerState;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector2 touchPosCentered;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int lastUpdatedFrameCount;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "GvrInfo", RVA = "0x174E94", Offset = "0x174E94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174E94", Offset = "0x174E94")]
	public EmulatorConnectionMode emulatorConnectionMode;

	[Token(Token = "0x17000054")]
	public static GvrConnectionState State
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x5BBA48", Offset = "0x5BBA48", VA = "0x5BBA48")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x17000055")]
	public static GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x5BBB68", Offset = "0x5BBB68", VA = "0x5BBB68")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x17000056")]
	public static bool SupportsBatteryStatus
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x5BD61C", Offset = "0x5BD61C", VA = "0x5BD61C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public static Quaternion Orientation
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x5BBC94", Offset = "0x5BBC94", VA = "0x5BBC94")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000058")]
	public static Vector3 Gyro
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x5BBE00", Offset = "0x5BBE00", VA = "0x5BBE00")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000059")]
	public static Vector3 Accel
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x5BBF70", Offset = "0x5BBF70", VA = "0x5BBF70")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700005A")]
	public static bool IsTouching
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x5B9C94", Offset = "0x5B9C94", VA = "0x5B9C94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public static bool TouchDown
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x5B9B6C", Offset = "0x5B9B6C", VA = "0x5B9B6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public static bool TouchUp
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x5B9DBC", Offset = "0x5B9DBC", VA = "0x5B9DBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	public static Vector2 TouchPos
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x5B9EF0", Offset = "0x5B9EF0", VA = "0x5B9EF0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700005E")]
	public static Vector2 TouchPosCentered
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x5BD7A4", Offset = "0x5BD7A4", VA = "0x5BD7A4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700005F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184CF0", Offset = "0x184CF0")]
	public static bool Recentering
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x5BD8EC", Offset = "0x5BD8EC", VA = "0x5BD8EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public static bool Recentered
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x5BC0F0", Offset = "0x5BC0F0", VA = "0x5BC0F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	public static bool ClickButton
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x5B98F8", Offset = "0x5B98F8", VA = "0x5B98F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	public static bool ClickButtonDown
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x5B97AC", Offset = "0x5B97AC", VA = "0x5B97AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000063")]
	public static bool ClickButtonUp
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x5B9A44", Offset = "0x5B9A44", VA = "0x5B9A44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000064")]
	public static bool AppButton
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x5BC224", Offset = "0x5BC224", VA = "0x5BC224")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public static bool AppButtonDown
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x5BC34C", Offset = "0x5BC34C", VA = "0x5BC34C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public static bool AppButtonUp
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x5BC474", Offset = "0x5BC474", VA = "0x5BC474")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public static bool HomeButtonDown
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x5BC59C", Offset = "0x5BC59C", VA = "0x5BC59C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000068")]
	public static bool HomeButtonState
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x5BC6C4", Offset = "0x5BC6C4", VA = "0x5BC6C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000069")]
	public static string ErrorDetails
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x5BC7EC", Offset = "0x5BC7EC", VA = "0x5BC7EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public static IntPtr StatePtr
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x5BC9A4", Offset = "0x5BC9A4", VA = "0x5BC9A4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700006B")]
	public static bool IsCharging
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x5BCAC4", Offset = "0x5BCAC4", VA = "0x5BCAC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006C")]
	public static GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x5BCBEC", Offset = "0x5BCBEC", VA = "0x5BCBEC")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action OnControllerInputUpdated
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x5BCD08", Offset = "0x5BCD08", VA = "0x5BCD08")]
		add
		{
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x5BCE38", Offset = "0x5BCE38", VA = "0x5BCE38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action OnPostControllerInputUpdated
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x5BCF68", Offset = "0x5BCF68", VA = "0x5BCF68")]
		add
		{
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x5BD098", Offset = "0x5BD098", VA = "0x5BD098")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event OnStateChangedEvent OnStateChanged
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x5BD1C8", Offset = "0x5BD1C8", VA = "0x5BD1C8")]
		add
		{
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x5BD2F8", Offset = "0x5BD2F8", VA = "0x5BD2F8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x5BB970", Offset = "0x5BB970", VA = "0x5BB970")]
	public GvrControllerInput()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x5BD8F4", Offset = "0x5BD8F4", VA = "0x5BD8F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x5BD428", Offset = "0x5BD428", VA = "0x5BD428")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x5BDE24", Offset = "0x5BDE24", VA = "0x5BDE24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x5BDE8C", Offset = "0x5BDE8C", VA = "0x5BDE8C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x5BDA50", Offset = "0x5BDA50", VA = "0x5BDA50")]
	private void UpdateTouchPosCentered()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x171638", Offset = "0x171638")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x171638", Offset = "0x171638")]
public class GvrControllerReticleVisual : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003E")]
	public struct FaceCameraData
	{
		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool alongXAxis;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool alongYAxis;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool alongZAxis;

		[Token(Token = "0x1700006F")]
		public bool IsAnyAxisOff
		{
			[Token(Token = "0x60001CE")]
			[Address(RVA = "0x1C84AC", Offset = "0x1C84AC", VA = "0x1C84AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1C849C", Offset = "0x1C849C", VA = "0x1C849C")]
		public FaceCameraData(bool startEnabled)
		{
		}
	}

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174EF8", Offset = "0x174EF8")]
	public bool isSizeBasedOnCameraDistance;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174F2C", Offset = "0x174F2C")]
	public float sizeMeters;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x174F60", Offset = "0x174F60")]
	public FaceCameraData doesReticleFaceCamera;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x174F94", Offset = "0x174F94")]
	public int sortingOrder;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174FB4", Offset = "0x174FB4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174FB4", Offset = "0x174FB4")]
	private float <ReticleMeshSizeMeters>k__BackingField;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174FE8", Offset = "0x174FE8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x174FE8", Offset = "0x174FE8")]
	private float <ReticleMeshSizeRatio>k__BackingField;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 preRenderLocalScale;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion preRenderLocalRotation;

	[Token(Token = "0x1700006D")]
	public float ReticleMeshSizeMeters
	{
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x5BE0D0", Offset = "0x5BE0D0", VA = "0x5BE0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF2C", Offset = "0x17FF2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x5BE0D8", Offset = "0x5BE0D8", VA = "0x5BE0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF3C", Offset = "0x17FF3C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public float ReticleMeshSizeRatio
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x5BE0E0", Offset = "0x5BE0E0", VA = "0x5BE0E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF4C", Offset = "0x17FF4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x5BE0E8", Offset = "0x5BE0E8", VA = "0x5BE0E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF5C", Offset = "0x17FF5C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x5BE098", Offset = "0x5BE098", VA = "0x5BE098")]
	public GvrControllerReticleVisual()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x5BE0F0", Offset = "0x5BE0F0", VA = "0x5BE0F0")]
	public void RefreshMesh()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x5BE318", Offset = "0x5BE318", VA = "0x5BE318", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x5BE39C", Offset = "0x5BE39C", VA = "0x5BE39C", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x5BE3A0", Offset = "0x5BE3A0", VA = "0x5BE3A0", Slot = "6")]
	protected virtual void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x5BE474", Offset = "0x5BE474", VA = "0x5BE474", Slot = "7")]
	protected virtual void OnRenderObject()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x5BE518", Offset = "0x5BE518", VA = "0x5BE518", Slot = "8")]
	protected virtual void UpdateReticleSize(Camera camera)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x5BE720", Offset = "0x5BE720", VA = "0x5BE720", Slot = "9")]
	protected virtual void UpdateReticleOrientation(Camera camera)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x5BEA08", Offset = "0x5BEA08", VA = "0x5BEA08", Slot = "10")]
	protected virtual void OnValidate()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1716DC", Offset = "0x1716DC")]
public class GvrControllerVisual : MonoBehaviour, IGvrArmModelReceiver
{
	[Serializable]
	[Token(Token = "0x2000040")]
	public struct ControllerDisplayState
	{
		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool batteryCharging;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool clickButton;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool appButton;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool homeButton;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool touching;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 touchPos;
	}

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject[] attachmentPrefabs;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Color touchPadColor;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color appButtonColor;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color systemButtonColor;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17505C", Offset = "0x17505C")]
	public bool readControllerState;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ControllerDisplayState displayState;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1750C8", Offset = "0x1750C8")]
	public float maximumAlpha;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1750E0", Offset = "0x1750E0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1750E0", Offset = "0x1750E0")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer controllerRenderer;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int alphaId;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int touchId;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int touchPadId;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int appButtonId;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int systemButtonId;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int batteryColorId;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool wasTouching;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float touchTime;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector4 controllerShaderData;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector4 controllerShaderData2;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color currentBatteryColor;

	[Token(Token = "0x40001C1")]
	public const float APP_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x40001C2")]
	public const float APP_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x40001C3")]
	public const float SYSTEM_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x40001C4")]
	public const float SYSTEM_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x40001C5")]
	public const float TOUCHPAD_CLICK_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x40001C6")]
	public const float TOUCHPAD_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x40001C7")]
	public const float TOUCHPAD_CLICK_SCALE_DURATION_SECONDS = 0.075f;

	[Token(Token = "0x40001C8")]
	public const float TOUCHPAD_POINT_SCALE_DURATION_SECONDS = 0.15f;

	[Token(Token = "0x40001C9")]
	private const float BATTERY_FULL = 0f;

	[Token(Token = "0x40001CA")]
	private const float BATTERY_ALMOST_FULL = 0.125f;

	[Token(Token = "0x40001CB")]
	private const float BATTERY_MEDIUM = 0.225f;

	[Token(Token = "0x40001CC")]
	private const float BATTERY_LOW = 0.325f;

	[Token(Token = "0x40001CD")]
	private const float BATTERY_CRITICAL = 0.425f;

	[Token(Token = "0x40001CE")]
	private const float BATTERY_HIDDEN = 0.525f;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly Color GVR_BATTERY_CRITICAL_COLOR;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly Color GVR_BATTERY_LOW_COLOR;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly Color GVR_BATTERY_MED_COLOR;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly Color GVR_BATTERY_FULL_COLOR;

	[Token(Token = "0x40001D3")]
	private const float IMMEDIATE_UPDATE_TIME = 10f;

	[Token(Token = "0x17000070")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x5BEF9C", Offset = "0x5BEF9C", VA = "0x5BEF9C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF6C", Offset = "0x17FF6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x5BEFA4", Offset = "0x5BEFA4", VA = "0x5BEFA4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF7C", Offset = "0x17FF7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public float PreferredAlpha
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x5BEFAC", Offset = "0x5BEFAC", VA = "0x5BEFAC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000072")]
	public Color TouchPadColor
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x5BF080", Offset = "0x5BF080", VA = "0x5BF080")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x5BF090", Offset = "0x5BF090", VA = "0x5BF090")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Color AppButtonColor
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x5BF0E8", Offset = "0x5BF0E8", VA = "0x5BF0E8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x5BF0F8", Offset = "0x5BF0F8", VA = "0x5BF0F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public Color SystemButtonColor
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x5BF150", Offset = "0x5BF150", VA = "0x5BF150")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x5BF160", Offset = "0x5BF160", VA = "0x5BF160")]
		set
		{
		}
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x5BEE08", Offset = "0x5BEE08", VA = "0x5BEE08")]
	public GvrControllerVisual()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x5BF1B8", Offset = "0x5BF1B8", VA = "0x5BF1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x5BF5BC", Offset = "0x5BF5BC", VA = "0x5BF5BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x5BF648", Offset = "0x5BF648", VA = "0x5BF648")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x5BF6D4", Offset = "0x5BF6D4", VA = "0x5BF6D4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x5BFB90", Offset = "0x5BFB90", VA = "0x5BFB90")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x5BF464", Offset = "0x5BF464", VA = "0x5BF464")]
	private void CreateAttachments()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x5BF1D4", Offset = "0x5BF1D4", VA = "0x5BF1D4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x5BFB98", Offset = "0x5BFB98", VA = "0x5BFB98")]
	private void UpdateControllerState()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x5BF708", Offset = "0x5BF708", VA = "0x5BF708")]
	private void OnVisualUpdate(bool updateImmediately = false)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x5BFBF4", Offset = "0x5BFBF4", VA = "0x5BFBF4")]
	private void UpdateBatteryIndicator()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x171754", Offset = "0x171754")]
public class GvrLaserPointer : GvrBasePointer
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175114", Offset = "0x175114")]
	public float maxPointerDistance;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175180", Offset = "0x175180")]
	public float defaultReticleDistance;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1751B4", Offset = "0x1751B4")]
	public float overrideCameraRayIntersectionDistance;

	[Token(Token = "0x40001DE")]
	private const float RETICLE_VISUAL_RATIO = 0.1f;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1751E8", Offset = "0x1751E8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1751E8", Offset = "0x1751E8")]
	private GvrLaserVisual <LaserVisual>k__BackingField;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isHittingTarget;

	[Token(Token = "0x17000075")]
	public GvrLaserVisual LaserVisual
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x5C8208", Offset = "0x5C8208", VA = "0x5C8208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF8C", Offset = "0x17FF8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x5C8210", Offset = "0x5C8210", VA = "0x5C8210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FF9C", Offset = "0x17FF9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x5C8218", Offset = "0x5C8218", VA = "0x5C8218", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000077")]
	public override float CameraRayIntersectionDistance
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x5C8220", Offset = "0x5C8220", VA = "0x5C8220", Slot = "14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x5C81E8", Offset = "0x5C81E8", VA = "0x5C81E8")]
	public GvrLaserPointer()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x5C82EC", Offset = "0x5C82EC", VA = "0x5C82EC", Slot = "16")]
	public override void OnPointerEnter(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x5C8338", Offset = "0x5C8338", VA = "0x5C8338", Slot = "17")]
	public override void OnPointerHover(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x5C8384", Offset = "0x5C8384", VA = "0x5C8384", Slot = "18")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x5C8390", Offset = "0x5C8390", VA = "0x5C8390", Slot = "19")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x5C8394", Offset = "0x5C8394", VA = "0x5C8394", Slot = "20")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x5C8398", Offset = "0x5C8398", VA = "0x5C8398", Slot = "21")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x5C8540", Offset = "0x5C8540", VA = "0x5C8540")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x5C85A8", Offset = "0x5C85A8", VA = "0x5C85A8", Slot = "22")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x5C86A4", Offset = "0x5C86A4", VA = "0x5C86A4")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1717CC", Offset = "0x1717CC")]
public class GvrLaserVisual : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x2000043")]
	public delegate Vector3 GetPointForDistanceDelegate(float distance);

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17521C", Offset = "0x17521C")]
	public GvrControllerReticleVisual reticle;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175280", Offset = "0x175280")]
	public Transform controller;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1752E8", Offset = "0x1752E8")]
	public Color laserColor;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175354", Offset = "0x175354")]
	public Color laserColorEnd;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1753C0", Offset = "0x1753C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1753C0", Offset = "0x1753C0")]
	public float maxLaserDistance;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175434", Offset = "0x175434")]
	public float lerpSpeed;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175468", Offset = "0x175468")]
	public float lerpThreshold;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17549C", Offset = "0x17549C")]
	public bool shrinkLaser;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1754D0", Offset = "0x1754D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1754D0", Offset = "0x1754D0")]
	public float shrunkScale;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17554C", Offset = "0x17554C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17554C", Offset = "0x17554C")]
	public float beginShrinkAngleDegrees;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1755A0", Offset = "0x1755A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1755A0", Offset = "0x1755A0")]
	public float endShrinkAngleDegrees;

	[Token(Token = "0x40001EC")]
	private const float LERP_CLAMP_THRESHOLD = 0.02f;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1755F4", Offset = "0x1755F4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1755F4", Offset = "0x1755F4")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175628", Offset = "0x175628")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175628", Offset = "0x175628")]
	private LineRenderer <Laser>k__BackingField;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17565C", Offset = "0x17565C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17565C", Offset = "0x17565C")]
	private GetPointForDistanceDelegate <GetPointForDistanceFunction>k__BackingField;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float shrinkRatio;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float targetDistance;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float currentDistance;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3 currentPosition;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected Vector3 currentLocalPosition;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Quaternion currentLocalRotation;

	[Token(Token = "0x17000078")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x5C87C4", Offset = "0x5C87C4", VA = "0x5C87C4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FFAC", Offset = "0x17FFAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x5C87CC", Offset = "0x5C87CC", VA = "0x5C87CC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FFBC", Offset = "0x17FFBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public LineRenderer Laser
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x5C87D4", Offset = "0x5C87D4", VA = "0x5C87D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FFCC", Offset = "0x17FFCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x5C87DC", Offset = "0x5C87DC", VA = "0x5C87DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FFDC", Offset = "0x17FFDC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public GetPointForDistanceDelegate GetPointForDistanceFunction
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x5C87E4", Offset = "0x5C87E4", VA = "0x5C87E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FFEC", Offset = "0x17FFEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x5C869C", Offset = "0x5C869C", VA = "0x5C869C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FFFC", Offset = "0x17FFFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public float CurrentDistance
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x5C8810", Offset = "0x5C8810", VA = "0x5C8810")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x5C86F8", Offset = "0x5C86F8", VA = "0x5C86F8")]
	public GvrLaserVisual()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x5C87EC", Offset = "0x5C87EC", VA = "0x5C87EC", Slot = "6")]
	public virtual void SetDistance(float distance, bool immediate = false)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x5C8818", Offset = "0x5C8818", VA = "0x5C8818", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x5C8880", Offset = "0x5C8880", VA = "0x5C8880", Slot = "8")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x5C88F4", Offset = "0x5C88F4", VA = "0x5C88F4", Slot = "9")]
	protected virtual void UpdateCurrentPosition()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x5C8E64", Offset = "0x5C8E64", VA = "0x5C8E64", Slot = "10")]
	protected virtual void UpdateControllerOrientation()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x5C8F40", Offset = "0x5C8F40", VA = "0x5C8F40", Slot = "11")]
	protected virtual void UpdateReticlePosition()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x5C9038", Offset = "0x5C9038", VA = "0x5C9038", Slot = "12")]
	protected virtual void UpdateLaserEndPoint()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x5C98F4", Offset = "0x5C98F4", VA = "0x5C98F4", Slot = "13")]
	protected virtual void UpdateLaserAlpha()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x5C9B64", Offset = "0x5C9B64", VA = "0x5C9B64", Slot = "14")]
	protected virtual float GetSpeed()
	{
		return default(float);
	}
}
[Token(Token = "0x2000044")]
public class GvrRecenterOnlyController : MonoBehaviour
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Quaternion lastAppliedYawCorrection;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion yawCorrection;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x5D4158", Offset = "0x5D4158", VA = "0x5D4158")]
	public GvrRecenterOnlyController()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x5D4220", Offset = "0x5D4220", VA = "0x5D4220")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x5D4578", Offset = "0x5D4578", VA = "0x5D4578")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x5D4330", Offset = "0x5D4330", VA = "0x5D4330")]
	private void ApplyYawCorrection()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x5D4620", Offset = "0x5D4620", VA = "0x5D4620")]
	private void RemoveLastYawCorrection()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x5D4464", Offset = "0x5D4464", VA = "0x5D4464")]
	private Quaternion GetYawCorrection()
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000045")]
public class GvrTrackedController : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175690", Offset = "0x175690")]
	private GvrBaseArmModel armModel;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1756D8", Offset = "0x1756D8")]
	private bool isDeactivatedWhenDisconnected;

	[Token(Token = "0x1700007C")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x5D6758", Offset = "0x5D6758", VA = "0x5D6758")]
		get
		{
			return null;
		}
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x5D6760", Offset = "0x5D6760", VA = "0x5D6760")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public bool IsDeactivatedWhenDisconnected
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x5D695C", Offset = "0x5D695C", VA = "0x5D695C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x5D6964", Offset = "0x5D6964", VA = "0x5D6964")]
		set
		{
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x5BFD00", Offset = "0x5BFD00", VA = "0x5BFD00")]
	public GvrTrackedController()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x5D6804", Offset = "0x5D6804", VA = "0x5D6804")]
	public void PropagateArmModel()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x5D6A1C", Offset = "0x5D6A1C", VA = "0x5D6A1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x5D6AA0", Offset = "0x5D6AA0", VA = "0x5D6AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x5D6CB4", Offset = "0x5D6CB4", VA = "0x5D6CB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x5D6D40", Offset = "0x5D6D40", VA = "0x5D6D40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x5D6D6C", Offset = "0x5D6D6C", VA = "0x5D6D6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x5D6DF0", Offset = "0x5D6DF0", VA = "0x5D6DF0")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x5D69AC", Offset = "0x5D69AC", VA = "0x5D69AC")]
	private void OnControllerStateChanged(GvrConnectionState state, GvrConnectionState oldState)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x5D6B4C", Offset = "0x5D6B4C", VA = "0x5D6B4C")]
	private void UpdatePose()
	{
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x2000046")]
	internal static class ControllerProviderFactory
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x3450B8", Offset = "0x3450B8", VA = "0x3450B8")]
		internal static IControllerProvider CreateControllerProvider(GvrControllerInput owner)
		{
			return null;
		}
	}
	[Token(Token = "0x2000047")]
	internal class AndroidNativeControllerProvider : IControllerProvider
	{
		[Token(Token = "0x2000048")]
		private struct gvr_quat
		{
			[Token(Token = "0x4000220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float x;

			[Token(Token = "0x4000221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float y;

			[Token(Token = "0x4000222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float z;

			[Token(Token = "0x4000223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float w;
		}

		[Token(Token = "0x2000049")]
		private struct gvr_vec3
		{
			[Token(Token = "0x4000224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float x;

			[Token(Token = "0x4000225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float y;

			[Token(Token = "0x4000226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float z;
		}

		[Token(Token = "0x200004A")]
		private struct gvr_vec2
		{
			[Token(Token = "0x4000227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float x;

			[Token(Token = "0x4000228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float y;
		}

		[Token(Token = "0x40001FA")]
		private const int GVR_CONTROLLER_ENABLE_ORIENTATION = 1;

		[Token(Token = "0x40001FB")]
		private const int GVR_CONTROLLER_ENABLE_TOUCH = 2;

		[Token(Token = "0x40001FC")]
		private const int GVR_CONTROLLER_ENABLE_GYRO = 4;

		[Token(Token = "0x40001FD")]
		private const int GVR_CONTROLLER_ENABLE_ACCEL = 8;

		[Token(Token = "0x40001FE")]
		private const int GVR_CONTROLLER_ENABLE_GESTURES = 16;

		[Token(Token = "0x40001FF")]
		private const int GVR_CONTROLLER_ENABLE_POSE_PREDICTION = 32;

		[Token(Token = "0x4000200")]
		private const int GVR_CONTROLLER_BUTTON_NONE = 0;

		[Token(Token = "0x4000201")]
		private const int GVR_CONTROLLER_BUTTON_CLICK = 1;

		[Token(Token = "0x4000202")]
		private const int GVR_CONTROLLER_BUTTON_HOME = 2;

		[Token(Token = "0x4000203")]
		private const int GVR_CONTROLLER_BUTTON_APP = 3;

		[Token(Token = "0x4000204")]
		private const int GVR_CONTROLLER_BUTTON_VOLUME_UP = 4;

		[Token(Token = "0x4000205")]
		private const int GVR_CONTROLLER_BUTTON_VOLUME_DOWN = 5;

		[Token(Token = "0x4000206")]
		private const int GVR_CONTROLLER_BUTTON_COUNT = 6;

		[Token(Token = "0x4000207")]
		private const int GVR_CONTROLLER_DISCONNECTED = 0;

		[Token(Token = "0x4000208")]
		private const int GVR_CONTROLLER_SCANNING = 1;

		[Token(Token = "0x4000209")]
		private const int GVR_CONTROLLER_CONNECTING = 2;

		[Token(Token = "0x400020A")]
		private const int GVR_CONTROLLER_CONNECTED = 3;

		[Token(Token = "0x400020B")]
		private const int GVR_CONTROLLER_API_OK = 0;

		[Token(Token = "0x400020C")]
		private const int GVR_CONTROLLER_API_UNSUPPORTED = 1;

		[Token(Token = "0x400020D")]
		private const int GVR_CONTROLLER_API_NOT_AUTHORIZED = 2;

		[Token(Token = "0x400020E")]
		private const int GVR_CONTROLLER_API_UNAVAILABLE = 3;

		[Token(Token = "0x400020F")]
		private const int GVR_CONTROLLER_API_SERVICE_OBSOLETE = 4;

		[Token(Token = "0x4000210")]
		private const int GVR_CONTROLLER_API_CLIENT_OBSOLETE = 5;

		[Token(Token = "0x4000211")]
		private const int GVR_CONTROLLER_API_MALFUNCTION = 6;

		[Token(Token = "0x4000212")]
		private const string dllName = "gvr";

		[Token(Token = "0x4000213")]
		private const string VRCORE_UTILS_CLASS = "com.google.vr.vrcore.base.api.VrCoreUtils";

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr api;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool hasBatteryMethods;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AndroidJavaObject androidContext;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private AndroidJavaObject classLoader;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool error;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string errorDetails;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IntPtr statePtr;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private MutablePose3D pose3d;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool lastTouchState;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool lastButtonState;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool lastAppButtonState;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool lastHomeButtonState;

		[Token(Token = "0x1700007E")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x6000239")]
			[Address(RVA = "0x33F4F8", Offset = "0x33F4F8", VA = "0x33F4F8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x33D47C", Offset = "0x33D47C", VA = "0x33D47C")]
		internal AndroidNativeControllerProvider()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x33D7C8", Offset = "0x33D7C8", VA = "0x33D7C8")]
		private static extern int gvr_controller_get_default_options();

		[PreserveSig]
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x33DB88", Offset = "0x33DB88", VA = "0x33DB88")]
		private static extern IntPtr gvr_controller_create_and_init_android(IntPtr jniEnv, IntPtr androidContext, IntPtr classLoader, int options, IntPtr context);

		[PreserveSig]
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x33DF70", Offset = "0x33DF70", VA = "0x33DF70")]
		private static extern void gvr_controller_destroy(ref IntPtr api);

		[PreserveSig]
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x33E080", Offset = "0x33E080", VA = "0x33E080")]
		private static extern void gvr_controller_pause(IntPtr api);

		[PreserveSig]
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x33DE68", Offset = "0x33DE68", VA = "0x33DE68")]
		private static extern void gvr_controller_resume(IntPtr api);

		[PreserveSig]
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x33D8A0", Offset = "0x33D8A0", VA = "0x33D8A0")]
		private static extern IntPtr gvr_controller_state_create();

		[PreserveSig]
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x33E188", Offset = "0x33E188", VA = "0x33E188")]
		private static extern void gvr_controller_state_destroy(ref IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x33E268", Offset = "0x33E268", VA = "0x33E268")]
		private static extern void gvr_controller_state_update(IntPtr api, int flags, IntPtr out_state);

		[PreserveSig]
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x33E358", Offset = "0x33E358", VA = "0x33E358")]
		private static extern int gvr_controller_state_get_api_status(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x33E440", Offset = "0x33E440", VA = "0x33E440")]
		private static extern int gvr_controller_state_get_connection_state(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x33E530", Offset = "0x33E530", VA = "0x33E530")]
		private static extern gvr_quat gvr_controller_state_get_orientation(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x33E620", Offset = "0x33E620", VA = "0x33E620")]
		private static extern gvr_vec3 gvr_controller_state_get_gyro(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x33E708", Offset = "0x33E708", VA = "0x33E708")]
		private static extern gvr_vec3 gvr_controller_state_get_accel(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x33E7F0", Offset = "0x33E7F0", VA = "0x33E7F0")]
		private static extern byte gvr_controller_state_is_touching(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x33E8D8", Offset = "0x33E8D8", VA = "0x33E8D8")]
		private static extern gvr_vec2 gvr_controller_state_get_touch_pos(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x33E9C8", Offset = "0x33E9C8", VA = "0x33E9C8")]
		private static extern byte gvr_controller_state_get_touch_down(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x33EAB0", Offset = "0x33EAB0", VA = "0x33EAB0")]
		private static extern byte gvr_controller_state_get_touch_up(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x33EB98", Offset = "0x33EB98", VA = "0x33EB98")]
		private static extern byte gvr_controller_state_get_recentered(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x33EC80", Offset = "0x33EC80", VA = "0x33EC80")]
		private static extern byte gvr_controller_state_get_button_state(IntPtr state, int button);

		[PreserveSig]
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x33ED70", Offset = "0x33ED70", VA = "0x33ED70")]
		private static extern byte gvr_controller_state_get_button_down(IntPtr state, int button);

		[PreserveSig]
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x33EE60", Offset = "0x33EE60", VA = "0x33EE60")]
		private static extern byte gvr_controller_state_get_button_up(IntPtr state, int button);

		[PreserveSig]
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x33EF50", Offset = "0x33EF50", VA = "0x33EF50")]
		private static extern long gvr_controller_state_get_last_orientation_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x33F048", Offset = "0x33F048", VA = "0x33F048")]
		private static extern long gvr_controller_state_get_last_gyro_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x33F138", Offset = "0x33F138", VA = "0x33F138")]
		private static extern long gvr_controller_state_get_last_accel_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x33F228", Offset = "0x33F228", VA = "0x33F228")]
		private static extern long gvr_controller_state_get_last_touch_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x33F318", Offset = "0x33F318", VA = "0x33F318")]
		private static extern long gvr_controller_state_get_last_button_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x33DC90", Offset = "0x33DC90", VA = "0x33DC90")]
		private static extern byte gvr_controller_state_get_battery_charging(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x33DD80", Offset = "0x33DD80", VA = "0x33DD80")]
		private static extern int gvr_controller_state_get_battery_level(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x33F408", Offset = "0x33F408", VA = "0x33F408")]
		private static extern long gvr_controller_state_get_last_battery_timestamp(IntPtr state);

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x33F500", Offset = "0x33F500", VA = "0x33F500", Slot = "1")]
		~AndroidNativeControllerProvider()
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x33F574", Offset = "0x33F574", VA = "0x33F574", Slot = "7")]
		public void ReadState(ControllerState outState)
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x33FB68", Offset = "0x33FB68", VA = "0x33FB68", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x33FBD4", Offset = "0x33FBD4", VA = "0x33FBD4", Slot = "6")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x33FB04", Offset = "0x33FB04", VA = "0x33FB04")]
		private GvrConnectionState ConvertConnectionState(int connectionState)
		{
			return default(GvrConnectionState);
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x33FB18", Offset = "0x33FB18", VA = "0x33FB18")]
		private GvrControllerApiStatus ConvertControllerApiStatus(int gvrControllerApiStatus)
		{
			return default(GvrControllerApiStatus);
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x33FB28", Offset = "0x33FB28", VA = "0x33FB28")]
		private static void UpdateInputEvents(bool currentState, ref bool previousState, ref bool up, ref bool down)
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x33DA68", Offset = "0x33DA68", VA = "0x33DA68")]
		private static AndroidJavaObject GetClassLoaderFromActivity(AndroidJavaObject activity)
		{
			return null;
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x33FC40", Offset = "0x33FC40", VA = "0x33FC40")]
		private static int GetVrCoreClientApiVersion(AndroidJavaObject activity)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200004B")]
	internal class DummyControllerProvider : IControllerProvider
	{
		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ControllerState dummyState;

		[Token(Token = "0x1700007F")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x6000244")]
			[Address(RVA = "0x345610", Offset = "0x345610", VA = "0x345610", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x345598", Offset = "0x345598", VA = "0x345598")]
		internal DummyControllerProvider()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x345618", Offset = "0x345618", VA = "0x345618", Slot = "7")]
		public void ReadState(ControllerState outState)
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x345648", Offset = "0x345648", VA = "0x345648", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x34564C", Offset = "0x34564C", VA = "0x34564C", Slot = "6")]
		public void OnResume()
		{
		}
	}
	[Token(Token = "0x200004C")]
	internal class MouseControllerProvider : IControllerProvider
	{
		[Token(Token = "0x400022A")]
		private const string AXIS_MOUSE_X = "Mouse X";

		[Token(Token = "0x400022B")]
		private const string AXIS_MOUSE_Y = "Mouse Y";

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ControllerState state;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector2 mouseDelta;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool wasClickButton;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool wasAppButton;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool wasHomeButton;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool wasTouching;

		[Token(Token = "0x4000232")]
		private const float ROTATE_SENSITIVITY = 4.5f;

		[Token(Token = "0x4000233")]
		private const float TOUCH_SENSITIVITY = 0.12f;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 INVERT_Y;

		[Token(Token = "0x17000080")]
		public static bool IsMouseAvailable
		{
			[Token(Token = "0x6000249")]
			[Address(RVA = "0x347BA8", Offset = "0x347BA8", VA = "0x347BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public static bool IsActivateButtonPressed
		{
			[Token(Token = "0x600024A")]
			[Address(RVA = "0x347C34", Offset = "0x347C34", VA = "0x347C34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		public static bool IsClickButtonPressed
		{
			[Token(Token = "0x600024B")]
			[Address(RVA = "0x347C64", Offset = "0x347C64", VA = "0x347C64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public static bool IsAppButtonPressed
		{
			[Token(Token = "0x600024C")]
			[Address(RVA = "0x347C70", Offset = "0x347C70", VA = "0x347C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		public static bool IsHomeButtonPressed
		{
			[Token(Token = "0x600024D")]
			[Address(RVA = "0x347C7C", Offset = "0x347C7C", VA = "0x347C7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public static bool IsTouching
		{
			[Token(Token = "0x600024E")]
			[Address(RVA = "0x347C88", Offset = "0x347C88", VA = "0x347C88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x600024F")]
			[Address(RVA = "0x347CB8", Offset = "0x347CB8", VA = "0x347CB8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x347B24", Offset = "0x347B24", VA = "0x347B24")]
		internal MouseControllerProvider()
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x347CC0", Offset = "0x347CC0", VA = "0x347CC0", Slot = "7")]
		public void ReadState(ControllerState outState)
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x347F14", Offset = "0x347F14", VA = "0x347F14", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x347F18", Offset = "0x347F18", VA = "0x347F18", Slot = "6")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x347D8C", Offset = "0x347D8C", VA = "0x347D8C")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x3483A8", Offset = "0x3483A8", VA = "0x3483A8")]
		private void UpdateTouchPos()
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x348568", Offset = "0x348568", VA = "0x348568")]
		private void UpdateOrientation()
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x347FEC", Offset = "0x347FEC", VA = "0x347FEC")]
		private void UpdateButtonStates()
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x3488A0", Offset = "0x3488A0", VA = "0x3488A0")]
		private void Recenter()
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x34884C", Offset = "0x34884C", VA = "0x34884C")]
		private void ClearTouchPos()
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x347F1C", Offset = "0x347F1C", VA = "0x347F1C")]
		private void ClearState()
		{
		}
	}
	[Token(Token = "0x200004D")]
	internal class ControllerState
	{
		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GvrConnectionState connectionState;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GvrControllerApiStatus apiStatus;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Quaternion orientation;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Vector3 gyro;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal Vector3 accel;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool isTouching;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal Vector2 touchPos;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal bool touchDown;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		internal bool touchUp;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		internal bool recentered;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		internal bool clickButtonState;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal bool clickButtonDown;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		internal bool clickButtonUp;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		internal bool appButtonState;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		internal bool appButtonDown;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal bool appButtonUp;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		internal bool homeButtonDown;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		internal bool homeButtonUp;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		internal bool homeButtonState;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal string errorDetails;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal IntPtr gvrPtr;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal bool isCharging;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x600025B")]
		[Address(RVA = "0x345120", Offset = "0x345120", VA = "0x345120")]
		public ControllerState()
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x3452CC", Offset = "0x3452CC", VA = "0x3452CC")]
		public void CopyFrom(ControllerState other)
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x34557C", Offset = "0x34557C", VA = "0x34557C")]
		public void ClearTransientState()
		{
		}
	}
	[Token(Token = "0x200004E")]
	internal class EmulatorConfig : MonoBehaviour
	{
		[Token(Token = "0x200004F")]
		public enum Mode
		{
			[Token(Token = "0x4000251")]
			OFF,
			[Token(Token = "0x4000252")]
			USB,
			[Token(Token = "0x4000253")]
			WIFI
		}

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EmulatorConfig instance;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Mode PHONE_EVENT_MODE;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly string USB_SERVER_IP;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string WIFI_SERVER_IP;

		[Token(Token = "0x17000087")]
		public static EmulatorConfig Instance
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0x345940", Offset = "0x345940", VA = "0x345940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x345930", Offset = "0x345930", VA = "0x345930")]
		public EmulatorConfig()
		{
		}
	}
	[Token(Token = "0x2000050")]
	internal struct EmulatorGyroEvent
	{
		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x1C4910", Offset = "0x1C4910", VA = "0x1C4910")]
		public EmulatorGyroEvent(PhoneEvent.Types.GyroscopeEvent proto)
		{
		}
	}
	[Token(Token = "0x2000051")]
	internal struct EmulatorAccelEvent
	{
		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x1C48CC", Offset = "0x1C48CC", VA = "0x1C48CC")]
		public EmulatorAccelEvent(PhoneEvent.Types.AccelerometerEvent proto)
		{
		}
	}
	[Token(Token = "0x2000052")]
	internal struct EmulatorTouchEvent
	{
		[Token(Token = "0x2000053")]
		public enum Action
		{
			[Token(Token = "0x400025F")]
			kActionDown = 0,
			[Token(Token = "0x4000260")]
			kActionUp = 1,
			[Token(Token = "0x4000261")]
			kActionMove = 2,
			[Token(Token = "0x4000262")]
			kActionCancel = 3,
			[Token(Token = "0x4000263")]
			kActionPointerDown = 5,
			[Token(Token = "0x4000264")]
			kActionPointerUp = 6,
			[Token(Token = "0x4000265")]
			kActionHoverMove = 7,
			[Token(Token = "0x4000266")]
			kActionHoverEnter = 9,
			[Token(Token = "0x4000267")]
			kActionHoverExit = 10
		}

		[Token(Token = "0x2000054")]
		public struct Pointer
		{
			[Token(Token = "0x4000268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int fingerId;

			[Token(Token = "0x4000269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float normalizedX;

			[Token(Token = "0x400026A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float normalizedY;

			[Token(Token = "0x600026B")]
			[Address(RVA = "0x1C49E0", Offset = "0x1C49E0", VA = "0x1C49E0")]
			public Pointer(int fingerId, float normalizedX, float normalizedY)
			{
			}

			[Token(Token = "0x600026C")]
			[Address(RVA = "0x1C49EC", Offset = "0x1C49EC", VA = "0x1C49EC", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int action;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int relativeTimestamp;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly List<Pointer> pointers;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ACTION_POINTER_INDEX_SHIFT;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ACTION_POINTER_INDEX_MASK;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ACTION_MASK;

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1C497C", Offset = "0x1C497C", VA = "0x1C497C")]
		public EmulatorTouchEvent(PhoneEvent.Types.MotionEvent proto, long lastDownTimeMs)
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1C4998", Offset = "0x1C4998", VA = "0x1C4998")]
		public EmulatorTouchEvent(Action action, int pointerId, int relativeTimestamp, List<Pointer> pointers)
		{
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1C49BC", Offset = "0x1C49BC", VA = "0x1C49BC")]
		public Action getActionMasked()
		{
			return default(Action);
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1C49C4", Offset = "0x1C49C4", VA = "0x1C49C4")]
		public Pointer getActionPointer()
		{
			return default(Pointer);
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x346F3C", Offset = "0x346F3C", VA = "0x346F3C")]
		private static int getActionUnmasked(Action action, int fingerIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x346E60", Offset = "0x346E60", VA = "0x346E60")]
		private static int findPointerIndex(int fingerId, List<Pointer> pointers)
		{
			return default(int);
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1C49D8", Offset = "0x1C49D8", VA = "0x1C49D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000055")]
	internal struct EmulatorOrientationEvent
	{
		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Quaternion orientation;

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x1C4918", Offset = "0x1C4918", VA = "0x1C4918")]
		public EmulatorOrientationEvent(PhoneEvent.Types.OrientationEvent proto)
		{
		}
	}
	[Token(Token = "0x2000056")]
	internal struct EmulatorButtonEvent
	{
		[Token(Token = "0x2000057")]
		public enum ButtonCode
		{
			[Token(Token = "0x4000270")]
			kNone = 0,
			[Token(Token = "0x4000271")]
			kHome = 3,
			[Token(Token = "0x4000272")]
			kVolumeUp = 25,
			[Token(Token = "0x4000273")]
			kVolumeDown = 24,
			[Token(Token = "0x4000274")]
			kClick = 66,
			[Token(Token = "0x4000275")]
			kApp = 82
		}

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ButtonCode code;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly bool down;

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x1C4908", Offset = "0x1C4908", VA = "0x1C4908")]
		public EmulatorButtonEvent(PhoneEvent.Types.KeyEvent proto)
		{
		}
	}
}
namespace proto.Proto
{
	[Token(Token = "0x2000058")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171844", Offset = "0x171844")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171844", Offset = "0x171844")]
	public static class PhoneEvent
	{
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly object Descriptor;

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x755C18", Offset = "0x755C18", VA = "0x755C18")]
		static PhoneEvent()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x755C80", Offset = "0x755C80", VA = "0x755C80")]
		public static void RegisterAllExtensions(ExtensionRegistry registry)
		{
		}
	}
}
namespace proto
{
	[Token(Token = "0x2000059")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1718B4", Offset = "0x1718B4")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x1718B4", Offset = "0x1718B4")]
	public sealed class PhoneEvent : GeneratedMessageLite<PhoneEvent, PhoneEvent.Builder>
	{
		[Token(Token = "0x200005A")]
		[DebuggerNonUserCode]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171924", Offset = "0x171924")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171924", Offset = "0x171924")]
		public static class Types
		{
			[Token(Token = "0x200005B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171994", Offset = "0x171994")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171994", Offset = "0x171994")]
			public enum Type
			{
				[Token(Token = "0x4000291")]
				MOTION = 1,
				[Token(Token = "0x4000292")]
				GYROSCOPE,
				[Token(Token = "0x4000293")]
				ACCELEROMETER,
				[Token(Token = "0x4000294")]
				DEPTH_MAP,
				[Token(Token = "0x4000295")]
				ORIENTATION,
				[Token(Token = "0x4000296")]
				KEY
			}

			[Token(Token = "0x200005C")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1719F4", Offset = "0x1719F4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x1719F4", Offset = "0x1719F4")]
			public sealed class MotionEvent : GeneratedMessageLite<MotionEvent, MotionEvent.Builder>
			{
				[Token(Token = "0x200005D")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171A64", Offset = "0x171A64")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171A64", Offset = "0x171A64")]
				public static class Types
				{
					[Token(Token = "0x200005E")]
					[DebuggerNonUserCode]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171AD4", Offset = "0x171AD4")]
					[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171AD4", Offset = "0x171AD4")]
					public sealed class Pointer : GeneratedMessageLite<Pointer, Pointer.Builder>
					{
						[Token(Token = "0x200005F")]
						[DebuggerNonUserCode]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171B44", Offset = "0x171B44")]
						[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171B44", Offset = "0x171B44")]
						public sealed class Builder : GeneratedBuilderLite<Pointer, Builder>
						{
							[Token(Token = "0x40002B0")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
							private bool resultIsReadOnly;

							[Token(Token = "0x40002B1")]
							[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
							private Pointer result;

							[Token(Token = "0x170000B1")]
							protected override Builder ThisBuilder
							{
								[Token(Token = "0x60002DC")]
								[Address(RVA = "0x7522A4", Offset = "0x7522A4", VA = "0x7522A4", Slot = "7")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x170000B2")]
							public override bool IsInitialized
							{
								[Token(Token = "0x60002DE")]
								[Address(RVA = "0x752348", Offset = "0x752348", VA = "0x752348", Slot = "8")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170000B3")]
							protected override Pointer MessageBeingBuilt
							{
								[Token(Token = "0x60002DF")]
								[Address(RVA = "0x75237C", Offset = "0x75237C", VA = "0x75237C", Slot = "25")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x170000B4")]
							public override Pointer DefaultInstanceForType
							{
								[Token(Token = "0x60002E2")]
								[Address(RVA = "0x7524D8", Offset = "0x7524D8", VA = "0x7524D8", Slot = "9")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x170000B5")]
							public bool HasId
							{
								[Token(Token = "0x60002E8")]
								[Address(RVA = "0x752D3C", Offset = "0x752D3C", VA = "0x752D3C")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170000B6")]
							public int Id
							{
								[Token(Token = "0x60002E9")]
								[Address(RVA = "0x752D60", Offset = "0x752D60", VA = "0x752D60")]
								get
								{
									return default(int);
								}
								[Token(Token = "0x60002EA")]
								[Address(RVA = "0x752728", Offset = "0x752728", VA = "0x752728")]
								set
								{
								}
							}

							[Token(Token = "0x170000B7")]
							public bool HasNormalizedX
							{
								[Token(Token = "0x60002ED")]
								[Address(RVA = "0x752E20", Offset = "0x752E20", VA = "0x752E20")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170000B8")]
							public float NormalizedX
							{
								[Token(Token = "0x60002EE")]
								[Address(RVA = "0x752E44", Offset = "0x752E44", VA = "0x752E44")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x60002EF")]
								[Address(RVA = "0x75272C", Offset = "0x75272C", VA = "0x75272C")]
								set
								{
								}
							}

							[Token(Token = "0x170000B9")]
							public bool HasNormalizedY
							{
								[Token(Token = "0x60002F2")]
								[Address(RVA = "0x752F10", Offset = "0x752F10", VA = "0x752F10")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170000BA")]
							public float NormalizedY
							{
								[Token(Token = "0x60002F3")]
								[Address(RVA = "0x752F34", Offset = "0x752F34", VA = "0x752F34")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x60002F4")]
								[Address(RVA = "0x752730", Offset = "0x752730", VA = "0x752730")]
								set
								{
								}
							}

							[Token(Token = "0x60002DA")]
							[Address(RVA = "0x752038", Offset = "0x752038", VA = "0x752038")]
							public Builder()
							{
							}

							[Token(Token = "0x60002DB")]
							[Address(RVA = "0x752230", Offset = "0x752230", VA = "0x752230")]
							internal Builder(Pointer cloneFrom)
							{
							}

							[Token(Token = "0x60002DD")]
							[Address(RVA = "0x7522A8", Offset = "0x7522A8", VA = "0x7522A8")]
							private Pointer PrepareBuilder()
							{
								return null;
							}

							[Token(Token = "0x60002E0")]
							[Address(RVA = "0x752380", Offset = "0x752380", VA = "0x752380", Slot = "10")]
							public override Builder Clear()
							{
								return null;
							}

							[Token(Token = "0x60002E1")]
							[Address(RVA = "0x75240C", Offset = "0x75240C", VA = "0x75240C", Slot = "11")]
							public override Builder Clone()
							{
								return null;
							}

							[Token(Token = "0x60002E3")]
							[Address(RVA = "0x752550", Offset = "0x752550", VA = "0x752550", Slot = "13")]
							public override Pointer BuildPartial()
							{
								return null;
							}

							[Token(Token = "0x60002E4")]
							[Address(RVA = "0x752594", Offset = "0x752594", VA = "0x752594", Slot = "14")]
							public override Builder MergeFrom(IMessageLite other)
							{
								return null;
							}

							[Token(Token = "0x60002E5")]
							[Address(RVA = "0x752648", Offset = "0x752648", VA = "0x752648", Slot = "26")]
							public override Builder MergeFrom(Pointer other)
							{
								return null;
							}

							[Token(Token = "0x60002E6")]
							[Address(RVA = "0x752734", Offset = "0x752734", VA = "0x752734", Slot = "16")]
							public override Builder MergeFrom(ICodedInputStream input)
							{
								return null;
							}

							[Token(Token = "0x60002E7")]
							[Address(RVA = "0x7527D4", Offset = "0x7527D4", VA = "0x7527D4", Slot = "15")]
							public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
							{
								return null;
							}

							[Token(Token = "0x60002EB")]
							[Address(RVA = "0x752D84", Offset = "0x752D84", VA = "0x752D84")]
							public Builder SetId(int value)
							{
								return null;
							}

							[Token(Token = "0x60002EC")]
							[Address(RVA = "0x752DD4", Offset = "0x752DD4", VA = "0x752DD4")]
							public Builder ClearId()
							{
								return null;
							}

							[Token(Token = "0x60002F0")]
							[Address(RVA = "0x752E68", Offset = "0x752E68", VA = "0x752E68")]
							public Builder SetNormalizedX(float value)
							{
								return null;
							}

							[Token(Token = "0x60002F1")]
							[Address(RVA = "0x752EC4", Offset = "0x752EC4", VA = "0x752EC4")]
							public Builder ClearNormalizedX()
							{
								return null;
							}

							[Token(Token = "0x60002F5")]
							[Address(RVA = "0x752F58", Offset = "0x752F58", VA = "0x752F58")]
							public Builder SetNormalizedY(float value)
							{
								return null;
							}

							[Token(Token = "0x60002F6")]
							[Address(RVA = "0x752FB4", Offset = "0x752FB4", VA = "0x752FB4")]
							public Builder ClearNormalizedY()
							{
								return null;
							}
						}

						[Token(Token = "0x40002A3")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
						private static readonly Pointer defaultInstance;

						[Token(Token = "0x40002A4")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
						private static readonly string[] _pointerFieldNames;

						[Token(Token = "0x40002A5")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
						private static readonly uint[] _pointerFieldTags;

						[Token(Token = "0x40002A6")]
						public const int IdFieldNumber = 1;

						[Token(Token = "0x40002A7")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
						private bool hasId;

						[Token(Token = "0x40002A8")]
						[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
						private int id_;

						[Token(Token = "0x40002A9")]
						public const int NormalizedXFieldNumber = 2;

						[Token(Token = "0x40002AA")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private bool hasNormalizedX;

						[Token(Token = "0x40002AB")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
						private float normalizedX_;

						[Token(Token = "0x40002AC")]
						public const int NormalizedYFieldNumber = 3;

						[Token(Token = "0x40002AD")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
						private bool hasNormalizedY;

						[Token(Token = "0x40002AE")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
						private float normalizedY_;

						[Token(Token = "0x40002AF")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
						private int memoizedSerializedSize;

						[Token(Token = "0x170000A6")]
						public static Pointer DefaultInstance
						{
							[Token(Token = "0x60002BC")]
							[Address(RVA = "0x750440", Offset = "0x750440", VA = "0x750440")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x170000A7")]
						public override Pointer DefaultInstanceForType
						{
							[Token(Token = "0x60002BD")]
							[Address(RVA = "0x750EA0", Offset = "0x750EA0", VA = "0x750EA0", Slot = "9")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x170000A8")]
						protected override Pointer ThisMessage
						{
							[Token(Token = "0x60002BE")]
							[Address(RVA = "0x750F18", Offset = "0x750F18", VA = "0x750F18", Slot = "17")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x170000A9")]
						public bool HasId
						{
							[Token(Token = "0x60002BF")]
							[Address(RVA = "0x750F1C", Offset = "0x750F1C", VA = "0x750F1C")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170000AA")]
						public int Id
						{
							[Token(Token = "0x60002C0")]
							[Address(RVA = "0x750F24", Offset = "0x750F24", VA = "0x750F24")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x170000AB")]
						public bool HasNormalizedX
						{
							[Token(Token = "0x60002C1")]
							[Address(RVA = "0x750F2C", Offset = "0x750F2C", VA = "0x750F2C")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170000AC")]
						public float NormalizedX
						{
							[Token(Token = "0x60002C2")]
							[Address(RVA = "0x750F34", Offset = "0x750F34", VA = "0x750F34")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x170000AD")]
						public bool HasNormalizedY
						{
							[Token(Token = "0x60002C3")]
							[Address(RVA = "0x750F3C", Offset = "0x750F3C", VA = "0x750F3C")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170000AE")]
						public float NormalizedY
						{
							[Token(Token = "0x60002C4")]
							[Address(RVA = "0x750F44", Offset = "0x750F44", VA = "0x750F44")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x170000AF")]
						public override bool IsInitialized
						{
							[Token(Token = "0x60002C5")]
							[Address(RVA = "0x750F4C", Offset = "0x750F4C", VA = "0x750F4C", Slot = "10")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170000B0")]
						public override int SerializedSize
						{
							[Token(Token = "0x60002C7")]
							[Address(RVA = "0x75128C", Offset = "0x75128C", VA = "0x75128C", Slot = "11")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x60002BA")]
						[Address(RVA = "0x750BA8", Offset = "0x750BA8", VA = "0x750BA8")]
						private Pointer()
						{
						}

						[Token(Token = "0x60002BB")]
						[Address(RVA = "0x750C14", Offset = "0x750C14", VA = "0x750C14")]
						static Pointer()
						{
						}

						[Token(Token = "0x60002C6")]
						[Address(RVA = "0x750F54", Offset = "0x750F54", VA = "0x750F54", Slot = "14")]
						public override void WriteTo(ICodedOutputStream output)
						{
						}

						[Token(Token = "0x60002C8")]
						[Address(RVA = "0x7513EC", Offset = "0x7513EC", VA = "0x7513EC", Slot = "2")]
						public override int GetHashCode()
						{
							return default(int);
						}

						[Token(Token = "0x60002C9")]
						[Address(RVA = "0x751488", Offset = "0x751488", VA = "0x751488", Slot = "0")]
						public override bool Equals(object obj)
						{
							return default(bool);
						}

						[Token(Token = "0x60002CA")]
						[Address(RVA = "0x751604", Offset = "0x751604", VA = "0x751604", Slot = "15")]
						public override void PrintTo(TextWriter writer)
						{
						}

						[Token(Token = "0x60002CB")]
						[Address(RVA = "0x751740", Offset = "0x751740", VA = "0x751740")]
						public static Pointer ParseFrom(ByteString data)
						{
							return null;
						}

						[Token(Token = "0x60002CC")]
						[Address(RVA = "0x751880", Offset = "0x751880", VA = "0x751880")]
						public static Pointer ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x60002CD")]
						[Address(RVA = "0x751960", Offset = "0x751960", VA = "0x751960")]
						public static Pointer ParseFrom(byte[] data)
						{
							return null;
						}

						[Token(Token = "0x60002CE")]
						[Address(RVA = "0x751A38", Offset = "0x751A38", VA = "0x751A38")]
						public static Pointer ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x60002CF")]
						[Address(RVA = "0x751B18", Offset = "0x751B18", VA = "0x751B18")]
						public static Pointer ParseFrom(Stream input)
						{
							return null;
						}

						[Token(Token = "0x60002D0")]
						[Address(RVA = "0x751BF0", Offset = "0x751BF0", VA = "0x751BF0")]
						public static Pointer ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x60002D1")]
						[Address(RVA = "0x751CD0", Offset = "0x751CD0", VA = "0x751CD0")]
						public static Pointer ParseDelimitedFrom(Stream input)
						{
							return null;
						}

						[Token(Token = "0x60002D2")]
						[Address(RVA = "0x751DA8", Offset = "0x751DA8", VA = "0x751DA8")]
						public static Pointer ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x60002D3")]
						[Address(RVA = "0x751E88", Offset = "0x751E88", VA = "0x751E88")]
						public static Pointer ParseFrom(ICodedInputStream input)
						{
							return null;
						}

						[Token(Token = "0x60002D4")]
						[Address(RVA = "0x751F5C", Offset = "0x751F5C", VA = "0x751F5C")]
						public static Pointer ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x60002D5")]
						[Address(RVA = "0x750E9C", Offset = "0x750E9C", VA = "0x750E9C")]
						private Pointer MakeReadOnly()
						{
							return null;
						}

						[Token(Token = "0x60002D6")]
						[Address(RVA = "0x751818", Offset = "0x751818", VA = "0x751818")]
						public static Builder CreateBuilder()
						{
							return null;
						}

						[Token(Token = "0x60002D7")]
						[Address(RVA = "0x7520D8", Offset = "0x7520D8", VA = "0x7520D8", Slot = "13")]
						public override Builder ToBuilder()
						{
							return null;
						}

						[Token(Token = "0x60002D8")]
						[Address(RVA = "0x7521C8", Offset = "0x7521C8", VA = "0x7521C8", Slot = "12")]
						public override Builder CreateBuilderForType()
						{
							return null;
						}

						[Token(Token = "0x60002D9")]
						[Address(RVA = "0x752158", Offset = "0x752158", VA = "0x752158")]
						public static Builder CreateBuilder(Pointer prototype)
						{
							return null;
						}
					}
				}

				[Token(Token = "0x2000060")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171BB4", Offset = "0x171BB4")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171BB4", Offset = "0x171BB4")]
				public sealed class Builder : GeneratedBuilderLite<MotionEvent, Builder>
				{
					[Token(Token = "0x40002B2")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					private bool resultIsReadOnly;

					[Token(Token = "0x40002B3")]
					[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
					private MotionEvent result;

					[Token(Token = "0x170000BB")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60002F9")]
						[Address(RVA = "0x74F8CC", Offset = "0x74F8CC", VA = "0x74F8CC", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000BC")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60002FB")]
						[Address(RVA = "0x74F970", Offset = "0x74F970", VA = "0x74F970", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000BD")]
					protected override MotionEvent MessageBeingBuilt
					{
						[Token(Token = "0x60002FC")]
						[Address(RVA = "0x74F9A4", Offset = "0x74F9A4", VA = "0x74F9A4", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000BE")]
					public override MotionEvent DefaultInstanceForType
					{
						[Token(Token = "0x60002FF")]
						[Address(RVA = "0x74FB00", Offset = "0x74FB00", VA = "0x74FB00", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000BF")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6000305")]
						[Address(RVA = "0x7504CC", Offset = "0x7504CC", VA = "0x7504CC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000C0")]
					public long Timestamp
					{
						[Token(Token = "0x6000306")]
						[Address(RVA = "0x7504F0", Offset = "0x7504F0", VA = "0x7504F0")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6000307")]
						[Address(RVA = "0x74FDBC", Offset = "0x74FDBC", VA = "0x74FDBC")]
						set
						{
						}
					}

					[Token(Token = "0x170000C1")]
					public bool HasAction
					{
						[Token(Token = "0x600030A")]
						[Address(RVA = "0x7505BC", Offset = "0x7505BC", VA = "0x7505BC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000C2")]
					public int Action
					{
						[Token(Token = "0x600030B")]
						[Address(RVA = "0x7505E0", Offset = "0x7505E0", VA = "0x7505E0")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x600030C")]
						[Address(RVA = "0x74FDD4", Offset = "0x74FDD4", VA = "0x74FDD4")]
						set
						{
						}
					}

					[Token(Token = "0x170000C3")]
					public IPopsicleList<Types.Pointer> PointersList
					{
						[Token(Token = "0x600030F")]
						[Address(RVA = "0x7506A0", Offset = "0x7506A0", VA = "0x7506A0")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000C4")]
					public int PointersCount
					{
						[Token(Token = "0x6000310")]
						[Address(RVA = "0x7506C8", Offset = "0x7506C8", VA = "0x7506C8")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x60002F7")]
					[Address(RVA = "0x74F6D0", Offset = "0x74F6D0", VA = "0x74F6D0")]
					public Builder()
					{
					}

					[Token(Token = "0x60002F8")]
					[Address(RVA = "0x74F858", Offset = "0x74F858", VA = "0x74F858")]
					internal Builder(MotionEvent cloneFrom)
					{
					}

					[Token(Token = "0x60002FA")]
					[Address(RVA = "0x74F8D0", Offset = "0x74F8D0", VA = "0x74F8D0")]
					private MotionEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60002FD")]
					[Address(RVA = "0x74F9A8", Offset = "0x74F9A8", VA = "0x74F9A8", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60002FE")]
					[Address(RVA = "0x74FA34", Offset = "0x74FA34", VA = "0x74FA34", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6000300")]
					[Address(RVA = "0x74FB78", Offset = "0x74FB78", VA = "0x74FB78", Slot = "13")]
					public override MotionEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6000301")]
					[Address(RVA = "0x74FBB8", Offset = "0x74FBB8", VA = "0x74FBB8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6000302")]
					[Address(RVA = "0x74FC6C", Offset = "0x74FC6C", VA = "0x74FC6C", Slot = "26")]
					public override Builder MergeFrom(MotionEvent other)
					{
						return null;
					}

					[Token(Token = "0x6000303")]
					[Address(RVA = "0x74FDD8", Offset = "0x74FDD8", VA = "0x74FDD8", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6000304")]
					[Address(RVA = "0x74FE78", Offset = "0x74FE78", VA = "0x74FE78", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6000308")]
					[Address(RVA = "0x750514", Offset = "0x750514", VA = "0x750514")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6000309")]
					[Address(RVA = "0x75056C", Offset = "0x75056C", VA = "0x75056C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x600030D")]
					[Address(RVA = "0x750604", Offset = "0x750604", VA = "0x750604")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x600030E")]
					[Address(RVA = "0x750654", Offset = "0x750654", VA = "0x750654")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x6000311")]
					[Address(RVA = "0x7506F0", Offset = "0x7506F0", VA = "0x7506F0")]
					public Types.Pointer GetPointers(int index)
					{
						return null;
					}

					[Token(Token = "0x6000312")]
					[Address(RVA = "0x750720", Offset = "0x750720", VA = "0x750720")]
					public Builder SetPointers(int index, Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x6000313")]
					[Address(RVA = "0x7507E4", Offset = "0x7507E4", VA = "0x7507E4")]
					public Builder SetPointers(int index, Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x6000314")]
					[Address(RVA = "0x7508D0", Offset = "0x7508D0", VA = "0x7508D0")]
					public Builder AddPointers(Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x6000315")]
					[Address(RVA = "0x75098C", Offset = "0x75098C", VA = "0x75098C")]
					public Builder AddPointers(Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x6000316")]
					[Address(RVA = "0x750A70", Offset = "0x750A70", VA = "0x750A70")]
					public Builder AddRangePointers(IEnumerable<Types.Pointer> values)
					{
						return null;
					}

					[Token(Token = "0x6000317")]
					[Address(RVA = "0x750B10", Offset = "0x750B10", VA = "0x750B10")]
					public Builder ClearPointers()
					{
						return null;
					}
				}

				[Token(Token = "0x4000297")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly MotionEvent defaultInstance;

				[Token(Token = "0x4000298")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				private static readonly string[] _motionEventFieldNames;

				[Token(Token = "0x4000299")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly uint[] _motionEventFieldTags;

				[Token(Token = "0x400029A")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x400029B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private bool hasTimestamp;

				[Token(Token = "0x400029C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private long timestamp_;

				[Token(Token = "0x400029D")]
				public const int ActionFieldNumber = 2;

				[Token(Token = "0x400029E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasAction;

				[Token(Token = "0x400029F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int action_;

				[Token(Token = "0x40002A0")]
				public const int PointersFieldNumber = 3;

				[Token(Token = "0x40002A1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private PopsicleList<Types.Pointer> pointers_;

				[Token(Token = "0x40002A2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700009B")]
				public static MotionEvent DefaultInstance
				{
					[Token(Token = "0x600029B")]
					[Address(RVA = "0x73E9BC", Offset = "0x73E9BC", VA = "0x73E9BC")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700009C")]
				public override MotionEvent DefaultInstanceForType
				{
					[Token(Token = "0x600029C")]
					[Address(RVA = "0x74DE84", Offset = "0x74DE84", VA = "0x74DE84", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700009D")]
				protected override MotionEvent ThisMessage
				{
					[Token(Token = "0x600029D")]
					[Address(RVA = "0x74DEFC", Offset = "0x74DEFC", VA = "0x74DEFC", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700009E")]
				public bool HasTimestamp
				{
					[Token(Token = "0x600029E")]
					[Address(RVA = "0x74DF00", Offset = "0x74DF00", VA = "0x74DF00")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700009F")]
				public long Timestamp
				{
					[Token(Token = "0x600029F")]
					[Address(RVA = "0x74DF08", Offset = "0x74DF08", VA = "0x74DF08")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x170000A0")]
				public bool HasAction
				{
					[Token(Token = "0x60002A0")]
					[Address(RVA = "0x74DF10", Offset = "0x74DF10", VA = "0x74DF10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000A1")]
				public int Action
				{
					[Token(Token = "0x60002A1")]
					[Address(RVA = "0x74DF18", Offset = "0x74DF18", VA = "0x74DF18")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170000A2")]
				public IList<Types.Pointer> PointersList
				{
					[Token(Token = "0x60002A2")]
					[Address(RVA = "0x74DF20", Offset = "0x74DF20", VA = "0x74DF20")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000A3")]
				public int PointersCount
				{
					[Token(Token = "0x60002A3")]
					[Address(RVA = "0x74DF28", Offset = "0x74DF28", VA = "0x74DF28")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170000A4")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60002A5")]
					[Address(RVA = "0x74E020", Offset = "0x74E020", VA = "0x74E020", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000A5")]
				public override int SerializedSize
				{
					[Token(Token = "0x60002A7")]
					[Address(RVA = "0x74E39C", Offset = "0x74E39C", VA = "0x74E39C", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000299")]
				[Address(RVA = "0x74DADC", Offset = "0x74DADC", VA = "0x74DADC")]
				private MotionEvent()
				{
				}

				[Token(Token = "0x600029A")]
				[Address(RVA = "0x74DB78", Offset = "0x74DB78", VA = "0x74DB78")]
				static MotionEvent()
				{
				}

				[Token(Token = "0x60002A4")]
				[Address(RVA = "0x74DFA0", Offset = "0x74DFA0", VA = "0x74DFA0")]
				public Types.Pointer GetPointers(int index)
				{
					return null;
				}

				[Token(Token = "0x60002A6")]
				[Address(RVA = "0x74E028", Offset = "0x74E028", VA = "0x74E028", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60002A8")]
				[Address(RVA = "0x74E784", Offset = "0x74E784", VA = "0x74E784", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60002A9")]
				[Address(RVA = "0x74EA94", Offset = "0x74EA94", VA = "0x74EA94", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60002AA")]
				[Address(RVA = "0x74ED14", Offset = "0x74ED14", VA = "0x74ED14", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60002AB")]
				[Address(RVA = "0x74EE40", Offset = "0x74EE40", VA = "0x74EE40")]
				public static MotionEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60002AC")]
				[Address(RVA = "0x74EF18", Offset = "0x74EF18", VA = "0x74EF18")]
				public static MotionEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60002AD")]
				[Address(RVA = "0x74EFF8", Offset = "0x74EFF8", VA = "0x74EFF8")]
				public static MotionEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60002AE")]
				[Address(RVA = "0x74F0D0", Offset = "0x74F0D0", VA = "0x74F0D0")]
				public static MotionEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60002AF")]
				[Address(RVA = "0x74F1B0", Offset = "0x74F1B0", VA = "0x74F1B0")]
				public static MotionEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60002B0")]
				[Address(RVA = "0x74F288", Offset = "0x74F288", VA = "0x74F288")]
				public static MotionEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60002B1")]
				[Address(RVA = "0x74F368", Offset = "0x74F368", VA = "0x74F368")]
				public static MotionEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60002B2")]
				[Address(RVA = "0x74F440", Offset = "0x74F440", VA = "0x74F440")]
				public static MotionEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60002B3")]
				[Address(RVA = "0x74F520", Offset = "0x74F520", VA = "0x74F520")]
				public static MotionEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60002B4")]
				[Address(RVA = "0x74F5F4", Offset = "0x74F5F4", VA = "0x74F5F4")]
				public static MotionEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60002B5")]
				[Address(RVA = "0x74DE08", Offset = "0x74DE08", VA = "0x74DE08")]
				private MotionEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60002B6")]
				[Address(RVA = "0x7428C8", Offset = "0x7428C8", VA = "0x7428C8")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60002B7")]
				[Address(RVA = "0x74F770", Offset = "0x74F770", VA = "0x74F770", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60002B8")]
				[Address(RVA = "0x74F7F0", Offset = "0x74F7F0", VA = "0x74F7F0", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60002B9")]
				[Address(RVA = "0x742ECC", Offset = "0x742ECC", VA = "0x742ECC")]
				public static Builder CreateBuilder(MotionEvent prototype)
				{
					return null;
				}
			}

			[Token(Token = "0x2000061")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171C24", Offset = "0x171C24")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171C24", Offset = "0x171C24")]
			public sealed class GyroscopeEvent : GeneratedMessageLite<GyroscopeEvent, GyroscopeEvent.Builder>
			{
				[Token(Token = "0x2000062")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171C94", Offset = "0x171C94")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171C94", Offset = "0x171C94")]
				public sealed class Builder : GeneratedBuilderLite<GyroscopeEvent, Builder>
				{
					[Token(Token = "0x40002C4")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					private bool resultIsReadOnly;

					[Token(Token = "0x40002C5")]
					[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
					private GyroscopeEvent result;

					[Token(Token = "0x170000D2")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x600033C")]
						[Address(RVA = "0x74AC10", Offset = "0x74AC10", VA = "0x74AC10", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000D3")]
					public override bool IsInitialized
					{
						[Token(Token = "0x600033E")]
						[Address(RVA = "0x74ACB4", Offset = "0x74ACB4", VA = "0x74ACB4", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000D4")]
					protected override GyroscopeEvent MessageBeingBuilt
					{
						[Token(Token = "0x600033F")]
						[Address(RVA = "0x74ACE8", Offset = "0x74ACE8", VA = "0x74ACE8", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000D5")]
					public override GyroscopeEvent DefaultInstanceForType
					{
						[Token(Token = "0x6000342")]
						[Address(RVA = "0x74AE44", Offset = "0x74AE44", VA = "0x74AE44", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000D6")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6000348")]
						[Address(RVA = "0x74B7AC", Offset = "0x74B7AC", VA = "0x74B7AC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000D7")]
					public long Timestamp
					{
						[Token(Token = "0x6000349")]
						[Address(RVA = "0x74B7D0", Offset = "0x74B7D0", VA = "0x74B7D0")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x600034A")]
						[Address(RVA = "0x74B0B0", Offset = "0x74B0B0", VA = "0x74B0B0")]
						set
						{
						}
					}

					[Token(Token = "0x170000D8")]
					public bool HasX
					{
						[Token(Token = "0x600034D")]
						[Address(RVA = "0x74B89C", Offset = "0x74B89C", VA = "0x74B89C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000D9")]
					public float X
					{
						[Token(Token = "0x600034E")]
						[Address(RVA = "0x74B8C0", Offset = "0x74B8C0", VA = "0x74B8C0")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600034F")]
						[Address(RVA = "0x74B0C8", Offset = "0x74B0C8", VA = "0x74B0C8")]
						set
						{
						}
					}

					[Token(Token = "0x170000DA")]
					public bool HasY
					{
						[Token(Token = "0x6000352")]
						[Address(RVA = "0x74B98C", Offset = "0x74B98C", VA = "0x74B98C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000DB")]
					public float Y
					{
						[Token(Token = "0x6000353")]
						[Address(RVA = "0x74B9B0", Offset = "0x74B9B0", VA = "0x74B9B0")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6000354")]
						[Address(RVA = "0x74B0CC", Offset = "0x74B0CC", VA = "0x74B0CC")]
						set
						{
						}
					}

					[Token(Token = "0x170000DC")]
					public bool HasZ
					{
						[Token(Token = "0x6000357")]
						[Address(RVA = "0x74BA7C", Offset = "0x74BA7C", VA = "0x74BA7C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000DD")]
					public float Z
					{
						[Token(Token = "0x6000358")]
						[Address(RVA = "0x74BAA0", Offset = "0x74BAA0", VA = "0x74BAA0")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6000359")]
						[Address(RVA = "0x74B0D0", Offset = "0x74B0D0", VA = "0x74B0D0")]
						set
						{
						}
					}

					[Token(Token = "0x600033A")]
					[Address(RVA = "0x74AA14", Offset = "0x74AA14", VA = "0x74AA14")]
					public Builder()
					{
					}

					[Token(Token = "0x600033B")]
					[Address(RVA = "0x74AB9C", Offset = "0x74AB9C", VA = "0x74AB9C")]
					internal Builder(GyroscopeEvent cloneFrom)
					{
					}

					[Token(Token = "0x600033D")]
					[Address(RVA = "0x74AC14", Offset = "0x74AC14", VA = "0x74AC14")]
					private GyroscopeEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6000340")]
					[Address(RVA = "0x74ACEC", Offset = "0x74ACEC", VA = "0x74ACEC", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6000341")]
					[Address(RVA = "0x74AD78", Offset = "0x74AD78", VA = "0x74AD78", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6000343")]
					[Address(RVA = "0x74AEBC", Offset = "0x74AEBC", VA = "0x74AEBC", Slot = "13")]
					public override GyroscopeEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6000344")]
					[Address(RVA = "0x74AF00", Offset = "0x74AF00", VA = "0x74AF00", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6000345")]
					[Address(RVA = "0x74AFB4", Offset = "0x74AFB4", VA = "0x74AFB4", Slot = "26")]
					public override Builder MergeFrom(GyroscopeEvent other)
					{
						return null;
					}

					[Token(Token = "0x6000346")]
					[Address(RVA = "0x74B0D4", Offset = "0x74B0D4", VA = "0x74B0D4", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6000347")]
					[Address(RVA = "0x74B174", Offset = "0x74B174", VA = "0x74B174", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x600034B")]
					[Address(RVA = "0x74B7F4", Offset = "0x74B7F4", VA = "0x74B7F4")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x600034C")]
					[Address(RVA = "0x74B84C", Offset = "0x74B84C", VA = "0x74B84C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6000350")]
					[Address(RVA = "0x74B8E4", Offset = "0x74B8E4", VA = "0x74B8E4")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6000351")]
					[Address(RVA = "0x74B940", Offset = "0x74B940", VA = "0x74B940")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6000355")]
					[Address(RVA = "0x74B9D4", Offset = "0x74B9D4", VA = "0x74B9D4")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6000356")]
					[Address(RVA = "0x74BA30", Offset = "0x74BA30", VA = "0x74BA30")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x600035A")]
					[Address(RVA = "0x74BAC4", Offset = "0x74BAC4", VA = "0x74BAC4")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x600035B")]
					[Address(RVA = "0x74BB20", Offset = "0x74BB20", VA = "0x74BB20")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x40002B4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly GyroscopeEvent defaultInstance;

				[Token(Token = "0x40002B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				private static readonly string[] _gyroscopeEventFieldNames;

				[Token(Token = "0x40002B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly uint[] _gyroscopeEventFieldTags;

				[Token(Token = "0x40002B7")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40002B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private bool hasTimestamp;

				[Token(Token = "0x40002B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private long timestamp_;

				[Token(Token = "0x40002BA")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x40002BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasX;

				[Token(Token = "0x40002BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private float x_;

				[Token(Token = "0x40002BD")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x40002BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasY;

				[Token(Token = "0x40002BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float y_;

				[Token(Token = "0x40002C0")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x40002C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasZ;

				[Token(Token = "0x40002C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float z_;

				[Token(Token = "0x40002C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170000C5")]
				public static GyroscopeEvent DefaultInstance
				{
					[Token(Token = "0x600031A")]
					[Address(RVA = "0x73EAD8", Offset = "0x73EAD8", VA = "0x73EAD8")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000C6")]
				public override GyroscopeEvent DefaultInstanceForType
				{
					[Token(Token = "0x600031B")]
					[Address(RVA = "0x7496D8", Offset = "0x7496D8", VA = "0x7496D8", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000C7")]
				protected override GyroscopeEvent ThisMessage
				{
					[Token(Token = "0x600031C")]
					[Address(RVA = "0x749750", Offset = "0x749750", VA = "0x749750", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000C8")]
				public bool HasTimestamp
				{
					[Token(Token = "0x600031D")]
					[Address(RVA = "0x749754", Offset = "0x749754", VA = "0x749754")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000C9")]
				public long Timestamp
				{
					[Token(Token = "0x600031E")]
					[Address(RVA = "0x74975C", Offset = "0x74975C", VA = "0x74975C")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x170000CA")]
				public bool HasX
				{
					[Token(Token = "0x600031F")]
					[Address(RVA = "0x749764", Offset = "0x749764", VA = "0x749764")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000CB")]
				public float X
				{
					[Token(Token = "0x6000320")]
					[Address(RVA = "0x74976C", Offset = "0x74976C", VA = "0x74976C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170000CC")]
				public bool HasY
				{
					[Token(Token = "0x6000321")]
					[Address(RVA = "0x749774", Offset = "0x749774", VA = "0x749774")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000CD")]
				public float Y
				{
					[Token(Token = "0x6000322")]
					[Address(RVA = "0x74977C", Offset = "0x74977C", VA = "0x74977C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170000CE")]
				public bool HasZ
				{
					[Token(Token = "0x6000323")]
					[Address(RVA = "0x749784", Offset = "0x749784", VA = "0x749784")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000CF")]
				public float Z
				{
					[Token(Token = "0x6000324")]
					[Address(RVA = "0x74978C", Offset = "0x74978C", VA = "0x74978C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170000D0")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6000325")]
					[Address(RVA = "0x749794", Offset = "0x749794", VA = "0x749794", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000D1")]
				public override int SerializedSize
				{
					[Token(Token = "0x6000327")]
					[Address(RVA = "0x749BBC", Offset = "0x749BBC", VA = "0x749BBC", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000318")]
				[Address(RVA = "0x749374", Offset = "0x749374", VA = "0x749374")]
				private GyroscopeEvent()
				{
				}

				[Token(Token = "0x6000319")]
				[Address(RVA = "0x7493E0", Offset = "0x7493E0", VA = "0x7493E0")]
				static GyroscopeEvent()
				{
				}

				[Token(Token = "0x6000326")]
				[Address(RVA = "0x74979C", Offset = "0x74979C", VA = "0x74979C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6000328")]
				[Address(RVA = "0x749D80", Offset = "0x749D80", VA = "0x749D80", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6000329")]
				[Address(RVA = "0x749E38", Offset = "0x749E38", VA = "0x749E38", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x600032A")]
				[Address(RVA = "0x74A004", Offset = "0x74A004", VA = "0x74A004", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x600032B")]
				[Address(RVA = "0x74A184", Offset = "0x74A184", VA = "0x74A184")]
				public static GyroscopeEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x600032C")]
				[Address(RVA = "0x74A25C", Offset = "0x74A25C", VA = "0x74A25C")]
				public static GyroscopeEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600032D")]
				[Address(RVA = "0x74A33C", Offset = "0x74A33C", VA = "0x74A33C")]
				public static GyroscopeEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x600032E")]
				[Address(RVA = "0x74A414", Offset = "0x74A414", VA = "0x74A414")]
				public static GyroscopeEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600032F")]
				[Address(RVA = "0x74A4F4", Offset = "0x74A4F4", VA = "0x74A4F4")]
				public static GyroscopeEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000330")]
				[Address(RVA = "0x74A5CC", Offset = "0x74A5CC", VA = "0x74A5CC")]
				public static GyroscopeEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000331")]
				[Address(RVA = "0x74A6AC", Offset = "0x74A6AC", VA = "0x74A6AC")]
				public static GyroscopeEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000332")]
				[Address(RVA = "0x74A784", Offset = "0x74A784", VA = "0x74A784")]
				public static GyroscopeEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000333")]
				[Address(RVA = "0x74A864", Offset = "0x74A864", VA = "0x74A864")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6000334")]
				[Address(RVA = "0x74A938", Offset = "0x74A938", VA = "0x74A938")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000335")]
				[Address(RVA = "0x7496D4", Offset = "0x7496D4", VA = "0x7496D4")]
				private GyroscopeEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6000336")]
				[Address(RVA = "0x74295C", Offset = "0x74295C", VA = "0x74295C")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6000337")]
				[Address(RVA = "0x74AAB4", Offset = "0x74AAB4", VA = "0x74AAB4", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6000338")]
				[Address(RVA = "0x74AB34", Offset = "0x74AB34", VA = "0x74AB34", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6000339")]
				[Address(RVA = "0x74312C", Offset = "0x74312C", VA = "0x74312C")]
				public static Builder CreateBuilder(GyroscopeEvent prototype)
				{
					return null;
				}
			}

			[Token(Token = "0x2000063")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171D04", Offset = "0x171D04")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171D04", Offset = "0x171D04")]
			public sealed class AccelerometerEvent : GeneratedMessageLite<AccelerometerEvent, AccelerometerEvent.Builder>
			{
				[Token(Token = "0x2000064")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171D74", Offset = "0x171D74")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171D74", Offset = "0x171D74")]
				public sealed class Builder : GeneratedBuilderLite<AccelerometerEvent, Builder>
				{
					[Token(Token = "0x40002D6")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					private bool resultIsReadOnly;

					[Token(Token = "0x40002D7")]
					[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
					private AccelerometerEvent result;

					[Token(Token = "0x170000EB")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6000380")]
						[Address(RVA = "0x745404", Offset = "0x745404", VA = "0x745404", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000EC")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6000382")]
						[Address(RVA = "0x7454A8", Offset = "0x7454A8", VA = "0x7454A8", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000ED")]
					protected override AccelerometerEvent MessageBeingBuilt
					{
						[Token(Token = "0x6000383")]
						[Address(RVA = "0x7454DC", Offset = "0x7454DC", VA = "0x7454DC", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000EE")]
					public override AccelerometerEvent DefaultInstanceForType
					{
						[Token(Token = "0x6000386")]
						[Address(RVA = "0x745638", Offset = "0x745638", VA = "0x745638", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170000EF")]
					public bool HasTimestamp
					{
						[Token(Token = "0x600038C")]
						[Address(RVA = "0x745FA0", Offset = "0x745FA0", VA = "0x745FA0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000F0")]
					public long Timestamp
					{
						[Token(Token = "0x600038D")]
						[Address(RVA = "0x745FC4", Offset = "0x745FC4", VA = "0x745FC4")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x600038E")]
						[Address(RVA = "0x7458A4", Offset = "0x7458A4", VA = "0x7458A4")]
						set
						{
						}
					}

					[Token(Token = "0x170000F1")]
					public bool HasX
					{
						[Token(Token = "0x6000391")]
						[Address(RVA = "0x746090", Offset = "0x746090", VA = "0x746090")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000F2")]
					public float X
					{
						[Token(Token = "0x6000392")]
						[Address(RVA = "0x7460B4", Offset = "0x7460B4", VA = "0x7460B4")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6000393")]
						[Address(RVA = "0x7458BC", Offset = "0x7458BC", VA = "0x7458BC")]
						set
						{
						}
					}

					[Token(Token = "0x170000F3")]
					public bool HasY
					{
						[Token(Token = "0x6000396")]
						[Address(RVA = "0x746180", Offset = "0x746180", VA = "0x746180")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000F4")]
					public float Y
					{
						[Token(Token = "0x6000397")]
						[Address(RVA = "0x7461A4", Offset = "0x7461A4", VA = "0x7461A4")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6000398")]
						[Address(RVA = "0x7458C0", Offset = "0x7458C0", VA = "0x7458C0")]
						set
						{
						}
					}

					[Token(Token = "0x170000F5")]
					public bool HasZ
					{
						[Token(Token = "0x600039B")]
						[Address(RVA = "0x746270", Offset = "0x746270", VA = "0x746270")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170000F6")]
					public float Z
					{
						[Token(Token = "0x600039C")]
						[Address(RVA = "0x746294", Offset = "0x746294", VA = "0x746294")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600039D")]
						[Address(RVA = "0x7458C4", Offset = "0x7458C4", VA = "0x7458C4")]
						set
						{
						}
					}

					[Token(Token = "0x600037E")]
					[Address(RVA = "0x745208", Offset = "0x745208", VA = "0x745208")]
					public Builder()
					{
					}

					[Token(Token = "0x600037F")]
					[Address(RVA = "0x745390", Offset = "0x745390", VA = "0x745390")]
					internal Builder(AccelerometerEvent cloneFrom)
					{
					}

					[Token(Token = "0x6000381")]
					[Address(RVA = "0x745408", Offset = "0x745408", VA = "0x745408")]
					private AccelerometerEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6000384")]
					[Address(RVA = "0x7454E0", Offset = "0x7454E0", VA = "0x7454E0", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6000385")]
					[Address(RVA = "0x74556C", Offset = "0x74556C", VA = "0x74556C", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6000387")]
					[Address(RVA = "0x7456B0", Offset = "0x7456B0", VA = "0x7456B0", Slot = "13")]
					public override AccelerometerEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6000388")]
					[Address(RVA = "0x7456F4", Offset = "0x7456F4", VA = "0x7456F4", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6000389")]
					[Address(RVA = "0x7457A8", Offset = "0x7457A8", VA = "0x7457A8", Slot = "26")]
					public override Builder MergeFrom(AccelerometerEvent other)
					{
						return null;
					}

					[Token(Token = "0x600038A")]
					[Address(RVA = "0x7458C8", Offset = "0x7458C8", VA = "0x7458C8", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x600038B")]
					[Address(RVA = "0x745968", Offset = "0x745968", VA = "0x745968", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x600038F")]
					[Address(RVA = "0x745FE8", Offset = "0x745FE8", VA = "0x745FE8")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6000390")]
					[Address(RVA = "0x746040", Offset = "0x746040", VA = "0x746040")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6000394")]
					[Address(RVA = "0x7460D8", Offset = "0x7460D8", VA = "0x7460D8")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6000395")]
					[Address(RVA = "0x746134", Offset = "0x746134", VA = "0x746134")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6000399")]
					[Address(RVA = "0x7461C8", Offset = "0x7461C8", VA = "0x7461C8")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x600039A")]
					[Address(RVA = "0x746224", Offset = "0x746224", VA = "0x746224")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x600039E")]
					[Address(RVA = "0x7462B8", Offset = "0x7462B8", VA = "0x7462B8")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x600039F")]
					[Address(RVA = "0x746314", Offset = "0x746314", VA = "0x746314")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x40002C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly AccelerometerEvent defaultInstance;

				[Token(Token = "0x40002C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				private static readonly string[] _accelerometerEventFieldNames;

				[Token(Token = "0x40002C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly uint[] _accelerometerEventFieldTags;

				[Token(Token = "0x40002C9")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40002CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private bool hasTimestamp;

				[Token(Token = "0x40002CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private long timestamp_;

				[Token(Token = "0x40002CC")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x40002CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasX;

				[Token(Token = "0x40002CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private float x_;

				[Token(Token = "0x40002CF")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x40002D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasY;

				[Token(Token = "0x40002D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float y_;

				[Token(Token = "0x40002D2")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x40002D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasZ;

				[Token(Token = "0x40002D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float z_;

				[Token(Token = "0x40002D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170000DE")]
				public static AccelerometerEvent DefaultInstance
				{
					[Token(Token = "0x600035E")]
					[Address(RVA = "0x73EBF4", Offset = "0x73EBF4", VA = "0x73EBF4")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000DF")]
				public override AccelerometerEvent DefaultInstanceForType
				{
					[Token(Token = "0x600035F")]
					[Address(RVA = "0x743ECC", Offset = "0x743ECC", VA = "0x743ECC", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000E0")]
				protected override AccelerometerEvent ThisMessage
				{
					[Token(Token = "0x6000360")]
					[Address(RVA = "0x743F44", Offset = "0x743F44", VA = "0x743F44", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000E1")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6000361")]
					[Address(RVA = "0x743F48", Offset = "0x743F48", VA = "0x743F48")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000E2")]
				public long Timestamp
				{
					[Token(Token = "0x6000362")]
					[Address(RVA = "0x743F50", Offset = "0x743F50", VA = "0x743F50")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x170000E3")]
				public bool HasX
				{
					[Token(Token = "0x6000363")]
					[Address(RVA = "0x743F58", Offset = "0x743F58", VA = "0x743F58")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000E4")]
				public float X
				{
					[Token(Token = "0x6000364")]
					[Address(RVA = "0x743F60", Offset = "0x743F60", VA = "0x743F60")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170000E5")]
				public bool HasY
				{
					[Token(Token = "0x6000365")]
					[Address(RVA = "0x743F68", Offset = "0x743F68", VA = "0x743F68")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000E6")]
				public float Y
				{
					[Token(Token = "0x6000366")]
					[Address(RVA = "0x743F70", Offset = "0x743F70", VA = "0x743F70")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170000E7")]
				public bool HasZ
				{
					[Token(Token = "0x6000367")]
					[Address(RVA = "0x743F78", Offset = "0x743F78", VA = "0x743F78")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000E8")]
				public float Z
				{
					[Token(Token = "0x6000368")]
					[Address(RVA = "0x743F80", Offset = "0x743F80", VA = "0x743F80")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170000E9")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6000369")]
					[Address(RVA = "0x743F88", Offset = "0x743F88", VA = "0x743F88", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000EA")]
				public override int SerializedSize
				{
					[Token(Token = "0x600036B")]
					[Address(RVA = "0x7443B0", Offset = "0x7443B0", VA = "0x7443B0", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x600035C")]
				[Address(RVA = "0x743B68", Offset = "0x743B68", VA = "0x743B68")]
				private AccelerometerEvent()
				{
				}

				[Token(Token = "0x600035D")]
				[Address(RVA = "0x743BD4", Offset = "0x743BD4", VA = "0x743BD4")]
				static AccelerometerEvent()
				{
				}

				[Token(Token = "0x600036A")]
				[Address(RVA = "0x743F90", Offset = "0x743F90", VA = "0x743F90", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x600036C")]
				[Address(RVA = "0x744574", Offset = "0x744574", VA = "0x744574", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x600036D")]
				[Address(RVA = "0x74462C", Offset = "0x74462C", VA = "0x74462C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x600036E")]
				[Address(RVA = "0x7447F8", Offset = "0x7447F8", VA = "0x7447F8", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x600036F")]
				[Address(RVA = "0x744978", Offset = "0x744978", VA = "0x744978")]
				public static AccelerometerEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6000370")]
				[Address(RVA = "0x744A50", Offset = "0x744A50", VA = "0x744A50")]
				public static AccelerometerEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000371")]
				[Address(RVA = "0x744B30", Offset = "0x744B30", VA = "0x744B30")]
				public static AccelerometerEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6000372")]
				[Address(RVA = "0x744C08", Offset = "0x744C08", VA = "0x744C08")]
				public static AccelerometerEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000373")]
				[Address(RVA = "0x744CE8", Offset = "0x744CE8", VA = "0x744CE8")]
				public static AccelerometerEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000374")]
				[Address(RVA = "0x744DC0", Offset = "0x744DC0", VA = "0x744DC0")]
				public static AccelerometerEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000375")]
				[Address(RVA = "0x744EA0", Offset = "0x744EA0", VA = "0x744EA0")]
				public static AccelerometerEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000376")]
				[Address(RVA = "0x744F78", Offset = "0x744F78", VA = "0x744F78")]
				public static AccelerometerEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000377")]
				[Address(RVA = "0x745058", Offset = "0x745058", VA = "0x745058")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6000378")]
				[Address(RVA = "0x74512C", Offset = "0x74512C", VA = "0x74512C")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000379")]
				[Address(RVA = "0x743EC8", Offset = "0x743EC8", VA = "0x743EC8")]
				private AccelerometerEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x600037A")]
				[Address(RVA = "0x7429F0", Offset = "0x7429F0", VA = "0x7429F0")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x600037B")]
				[Address(RVA = "0x7452A8", Offset = "0x7452A8", VA = "0x7452A8", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x600037C")]
				[Address(RVA = "0x745328", Offset = "0x745328", VA = "0x745328", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x600037D")]
				[Address(RVA = "0x74338C", Offset = "0x74338C", VA = "0x74338C")]
				public static Builder CreateBuilder(AccelerometerEvent prototype)
				{
					return null;
				}
			}

			[Token(Token = "0x2000065")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171DE4", Offset = "0x171DE4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171DE4", Offset = "0x171DE4")]
			public sealed class DepthMapEvent : GeneratedMessageLite<DepthMapEvent, DepthMapEvent.Builder>
			{
				[Token(Token = "0x2000066")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171E54", Offset = "0x171E54")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171E54", Offset = "0x171E54")]
				public sealed class Builder : GeneratedBuilderLite<DepthMapEvent, Builder>
				{
					[Token(Token = "0x40002E8")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					private bool resultIsReadOnly;

					[Token(Token = "0x40002E9")]
					[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
					private DepthMapEvent result;

					[Token(Token = "0x17000104")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60003C5")]
						[Address(RVA = "0x7481B0", Offset = "0x7481B0", VA = "0x7481B0", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000105")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60003C7")]
						[Address(RVA = "0x748254", Offset = "0x748254", VA = "0x748254", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000106")]
					protected override DepthMapEvent MessageBeingBuilt
					{
						[Token(Token = "0x60003C8")]
						[Address(RVA = "0x748288", Offset = "0x748288", VA = "0x748288", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000107")]
					public override DepthMapEvent DefaultInstanceForType
					{
						[Token(Token = "0x60003CB")]
						[Address(RVA = "0x7483E4", Offset = "0x7483E4", VA = "0x7483E4", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000108")]
					public bool HasTimestamp
					{
						[Token(Token = "0x60003D1")]
						[Address(RVA = "0x748DBC", Offset = "0x748DBC", VA = "0x748DBC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000109")]
					public long Timestamp
					{
						[Token(Token = "0x60003D2")]
						[Address(RVA = "0x748DE0", Offset = "0x748DE0", VA = "0x748DE0")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x60003D3")]
						[Address(RVA = "0x7486B4", Offset = "0x7486B4", VA = "0x7486B4")]
						set
						{
						}
					}

					[Token(Token = "0x1700010A")]
					public bool HasWidth
					{
						[Token(Token = "0x60003D6")]
						[Address(RVA = "0x748EAC", Offset = "0x748EAC", VA = "0x748EAC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700010B")]
					public int Width
					{
						[Token(Token = "0x60003D7")]
						[Address(RVA = "0x748ED0", Offset = "0x748ED0", VA = "0x748ED0")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x60003D8")]
						[Address(RVA = "0x7486CC", Offset = "0x7486CC", VA = "0x7486CC")]
						set
						{
						}
					}

					[Token(Token = "0x1700010C")]
					public bool HasHeight
					{
						[Token(Token = "0x60003DB")]
						[Address(RVA = "0x748F90", Offset = "0x748F90", VA = "0x748F90")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700010D")]
					public int Height
					{
						[Token(Token = "0x60003DC")]
						[Address(RVA = "0x748FB4", Offset = "0x748FB4", VA = "0x748FB4")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x60003DD")]
						[Address(RVA = "0x7486D0", Offset = "0x7486D0", VA = "0x7486D0")]
						set
						{
						}
					}

					[Token(Token = "0x1700010E")]
					public IPopsicleList<float> ZDistancesList
					{
						[Token(Token = "0x60003E0")]
						[Address(RVA = "0x749074", Offset = "0x749074", VA = "0x749074")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700010F")]
					public int ZDistancesCount
					{
						[Token(Token = "0x60003E1")]
						[Address(RVA = "0x74909C", Offset = "0x74909C", VA = "0x74909C")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x60003C3")]
					[Address(RVA = "0x747FB4", Offset = "0x747FB4", VA = "0x747FB4")]
					public Builder()
					{
					}

					[Token(Token = "0x60003C4")]
					[Address(RVA = "0x74813C", Offset = "0x74813C", VA = "0x74813C")]
					internal Builder(DepthMapEvent cloneFrom)
					{
					}

					[Token(Token = "0x60003C6")]
					[Address(RVA = "0x7481B4", Offset = "0x7481B4", VA = "0x7481B4")]
					private DepthMapEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60003C9")]
					[Address(RVA = "0x74828C", Offset = "0x74828C", VA = "0x74828C", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60003CA")]
					[Address(RVA = "0x748318", Offset = "0x748318", VA = "0x748318", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60003CC")]
					[Address(RVA = "0x74845C", Offset = "0x74845C", VA = "0x74845C", Slot = "13")]
					public override DepthMapEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60003CD")]
					[Address(RVA = "0x74849C", Offset = "0x74849C", VA = "0x74849C", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60003CE")]
					[Address(RVA = "0x748550", Offset = "0x748550", VA = "0x748550", Slot = "26")]
					public override Builder MergeFrom(DepthMapEvent other)
					{
						return null;
					}

					[Token(Token = "0x60003CF")]
					[Address(RVA = "0x7486D4", Offset = "0x7486D4", VA = "0x7486D4", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60003D0")]
					[Address(RVA = "0x748774", Offset = "0x748774", VA = "0x748774", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x60003D4")]
					[Address(RVA = "0x748E04", Offset = "0x748E04", VA = "0x748E04")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x60003D5")]
					[Address(RVA = "0x748E5C", Offset = "0x748E5C", VA = "0x748E5C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x60003D9")]
					[Address(RVA = "0x748EF4", Offset = "0x748EF4", VA = "0x748EF4")]
					public Builder SetWidth(int value)
					{
						return null;
					}

					[Token(Token = "0x60003DA")]
					[Address(RVA = "0x748F44", Offset = "0x748F44", VA = "0x748F44")]
					public Builder ClearWidth()
					{
						return null;
					}

					[Token(Token = "0x60003DE")]
					[Address(RVA = "0x748FD8", Offset = "0x748FD8", VA = "0x748FD8")]
					public Builder SetHeight(int value)
					{
						return null;
					}

					[Token(Token = "0x60003DF")]
					[Address(RVA = "0x749028", Offset = "0x749028", VA = "0x749028")]
					public Builder ClearHeight()
					{
						return null;
					}

					[Token(Token = "0x60003E2")]
					[Address(RVA = "0x7490C4", Offset = "0x7490C4", VA = "0x7490C4")]
					public float GetZDistances(int index)
					{
						return default(float);
					}

					[Token(Token = "0x60003E3")]
					[Address(RVA = "0x7490F4", Offset = "0x7490F4", VA = "0x7490F4")]
					public Builder SetZDistances(int index, float value)
					{
						return null;
					}

					[Token(Token = "0x60003E4")]
					[Address(RVA = "0x74919C", Offset = "0x74919C", VA = "0x74919C")]
					public Builder AddZDistances(float value)
					{
						return null;
					}

					[Token(Token = "0x60003E5")]
					[Address(RVA = "0x74923C", Offset = "0x74923C", VA = "0x74923C")]
					public Builder AddRangeZDistances(IEnumerable<float> values)
					{
						return null;
					}

					[Token(Token = "0x60003E6")]
					[Address(RVA = "0x7492DC", Offset = "0x7492DC", VA = "0x7492DC")]
					public Builder ClearZDistances()
					{
						return null;
					}
				}

				[Token(Token = "0x40002D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly DepthMapEvent defaultInstance;

				[Token(Token = "0x40002D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				private static readonly string[] _depthMapEventFieldNames;

				[Token(Token = "0x40002DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly uint[] _depthMapEventFieldTags;

				[Token(Token = "0x40002DB")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40002DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private bool hasTimestamp;

				[Token(Token = "0x40002DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private long timestamp_;

				[Token(Token = "0x40002DE")]
				public const int WidthFieldNumber = 2;

				[Token(Token = "0x40002DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasWidth;

				[Token(Token = "0x40002E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int width_;

				[Token(Token = "0x40002E1")]
				public const int HeightFieldNumber = 3;

				[Token(Token = "0x40002E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasHeight;

				[Token(Token = "0x40002E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int height_;

				[Token(Token = "0x40002E4")]
				public const int ZDistancesFieldNumber = 4;

				[Token(Token = "0x40002E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private int zDistancesMemoizedSerializedSize;

				[Token(Token = "0x40002E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private PopsicleList<float> zDistances_;

				[Token(Token = "0x40002E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170000F7")]
				public static DepthMapEvent DefaultInstance
				{
					[Token(Token = "0x60003A2")]
					[Address(RVA = "0x73ED10", Offset = "0x73ED10", VA = "0x73ED10")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000F8")]
				public override DepthMapEvent DefaultInstanceForType
				{
					[Token(Token = "0x60003A3")]
					[Address(RVA = "0x746778", Offset = "0x746778", VA = "0x746778", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000F9")]
				protected override DepthMapEvent ThisMessage
				{
					[Token(Token = "0x60003A4")]
					[Address(RVA = "0x7467F0", Offset = "0x7467F0", VA = "0x7467F0", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170000FA")]
				public bool HasTimestamp
				{
					[Token(Token = "0x60003A5")]
					[Address(RVA = "0x7467F4", Offset = "0x7467F4", VA = "0x7467F4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000FB")]
				public long Timestamp
				{
					[Token(Token = "0x60003A6")]
					[Address(RVA = "0x7467FC", Offset = "0x7467FC", VA = "0x7467FC")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x170000FC")]
				public bool HasWidth
				{
					[Token(Token = "0x60003A7")]
					[Address(RVA = "0x746804", Offset = "0x746804", VA = "0x746804")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000FD")]
				public int Width
				{
					[Token(Token = "0x60003A8")]
					[Address(RVA = "0x74680C", Offset = "0x74680C", VA = "0x74680C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170000FE")]
				public bool HasHeight
				{
					[Token(Token = "0x60003A9")]
					[Address(RVA = "0x746814", Offset = "0x746814", VA = "0x746814")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000FF")]
				public int Height
				{
					[Token(Token = "0x60003AA")]
					[Address(RVA = "0x74681C", Offset = "0x74681C", VA = "0x74681C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000100")]
				public IList<float> ZDistancesList
				{
					[Token(Token = "0x60003AB")]
					[Address(RVA = "0x746824", Offset = "0x746824", VA = "0x746824")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000101")]
				public int ZDistancesCount
				{
					[Token(Token = "0x60003AC")]
					[Address(RVA = "0x746888", Offset = "0x746888", VA = "0x746888")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000102")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60003AE")]
					[Address(RVA = "0x746980", Offset = "0x746980", VA = "0x746980", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000103")]
				public override int SerializedSize
				{
					[Token(Token = "0x60003B0")]
					[Address(RVA = "0x746DD0", Offset = "0x746DD0", VA = "0x746DD0", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60003A0")]
				[Address(RVA = "0x746360", Offset = "0x746360", VA = "0x746360")]
				private DepthMapEvent()
				{
				}

				[Token(Token = "0x60003A1")]
				[Address(RVA = "0x746400", Offset = "0x746400", VA = "0x746400")]
				static DepthMapEvent()
				{
				}

				[Token(Token = "0x60003AD")]
				[Address(RVA = "0x746900", Offset = "0x746900", VA = "0x746900")]
				public float GetZDistances(int index)
				{
					return default(float);
				}

				[Token(Token = "0x60003AF")]
				[Address(RVA = "0x746988", Offset = "0x746988", VA = "0x746988", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60003B1")]
				[Address(RVA = "0x746FEC", Offset = "0x746FEC", VA = "0x746FEC", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60003B2")]
				[Address(RVA = "0x74730C", Offset = "0x74730C", VA = "0x74730C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60003B3")]
				[Address(RVA = "0x7475B8", Offset = "0x7475B8", VA = "0x7475B8", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60003B4")]
				[Address(RVA = "0x747724", Offset = "0x747724", VA = "0x747724")]
				public static DepthMapEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60003B5")]
				[Address(RVA = "0x7477FC", Offset = "0x7477FC", VA = "0x7477FC")]
				public static DepthMapEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60003B6")]
				[Address(RVA = "0x7478DC", Offset = "0x7478DC", VA = "0x7478DC")]
				public static DepthMapEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60003B7")]
				[Address(RVA = "0x7479B4", Offset = "0x7479B4", VA = "0x7479B4")]
				public static DepthMapEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60003B8")]
				[Address(RVA = "0x747A94", Offset = "0x747A94", VA = "0x747A94")]
				public static DepthMapEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60003B9")]
				[Address(RVA = "0x747B6C", Offset = "0x747B6C", VA = "0x747B6C")]
				public static DepthMapEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60003BA")]
				[Address(RVA = "0x747C4C", Offset = "0x747C4C", VA = "0x747C4C")]
				public static DepthMapEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60003BB")]
				[Address(RVA = "0x747D24", Offset = "0x747D24", VA = "0x747D24")]
				public static DepthMapEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60003BC")]
				[Address(RVA = "0x747E04", Offset = "0x747E04", VA = "0x747E04")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60003BD")]
				[Address(RVA = "0x747ED8", Offset = "0x747ED8", VA = "0x747ED8")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60003BE")]
				[Address(RVA = "0x7466FC", Offset = "0x7466FC", VA = "0x7466FC")]
				private DepthMapEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60003BF")]
				[Address(RVA = "0x742A84", Offset = "0x742A84", VA = "0x742A84")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60003C0")]
				[Address(RVA = "0x748054", Offset = "0x748054", VA = "0x748054", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60003C1")]
				[Address(RVA = "0x7480D4", Offset = "0x7480D4", VA = "0x7480D4", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60003C2")]
				[Address(RVA = "0x7435EC", Offset = "0x7435EC", VA = "0x7435EC")]
				public static Builder CreateBuilder(DepthMapEvent prototype)
				{
					return null;
				}
			}

			[Token(Token = "0x2000067")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171EC4", Offset = "0x171EC4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171EC4", Offset = "0x171EC4")]
			public sealed class OrientationEvent : GeneratedMessageLite<OrientationEvent, OrientationEvent.Builder>
			{
				[Token(Token = "0x2000068")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171F34", Offset = "0x171F34")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171F34", Offset = "0x171F34")]
				public sealed class Builder : GeneratedBuilderLite<OrientationEvent, Builder>
				{
					[Token(Token = "0x40002FD")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					private bool resultIsReadOnly;

					[Token(Token = "0x40002FE")]
					[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
					private OrientationEvent result;

					[Token(Token = "0x1700011F")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x600040D")]
						[Address(RVA = "0x754AE4", Offset = "0x754AE4", VA = "0x754AE4", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000120")]
					public override bool IsInitialized
					{
						[Token(Token = "0x600040F")]
						[Address(RVA = "0x754B88", Offset = "0x754B88", VA = "0x754B88", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000121")]
					protected override OrientationEvent MessageBeingBuilt
					{
						[Token(Token = "0x6000410")]
						[Address(RVA = "0x754BBC", Offset = "0x754BBC", VA = "0x754BBC", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000122")]
					public override OrientationEvent DefaultInstanceForType
					{
						[Token(Token = "0x6000413")]
						[Address(RVA = "0x754D18", Offset = "0x754D18", VA = "0x754D18", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000123")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6000419")]
						[Address(RVA = "0x755768", Offset = "0x755768", VA = "0x755768")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000124")]
					public long Timestamp
					{
						[Token(Token = "0x600041A")]
						[Address(RVA = "0x75578C", Offset = "0x75578C", VA = "0x75578C")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x600041B")]
						[Address(RVA = "0x754F98", Offset = "0x754F98", VA = "0x754F98")]
						set
						{
						}
					}

					[Token(Token = "0x17000125")]
					public bool HasX
					{
						[Token(Token = "0x600041E")]
						[Address(RVA = "0x755858", Offset = "0x755858", VA = "0x755858")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000126")]
					public float X
					{
						[Token(Token = "0x600041F")]
						[Address(RVA = "0x75587C", Offset = "0x75587C", VA = "0x75587C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6000420")]
						[Address(RVA = "0x754FB0", Offset = "0x754FB0", VA = "0x754FB0")]
						set
						{
						}
					}

					[Token(Token = "0x17000127")]
					public bool HasY
					{
						[Token(Token = "0x6000423")]
						[Address(RVA = "0x755948", Offset = "0x755948", VA = "0x755948")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000128")]
					public float Y
					{
						[Token(Token = "0x6000424")]
						[Address(RVA = "0x75596C", Offset = "0x75596C", VA = "0x75596C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6000425")]
						[Address(RVA = "0x754FB4", Offset = "0x754FB4", VA = "0x754FB4")]
						set
						{
						}
					}

					[Token(Token = "0x17000129")]
					public bool HasZ
					{
						[Token(Token = "0x6000428")]
						[Address(RVA = "0x755A38", Offset = "0x755A38", VA = "0x755A38")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700012A")]
					public float Z
					{
						[Token(Token = "0x6000429")]
						[Address(RVA = "0x755A5C", Offset = "0x755A5C", VA = "0x755A5C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600042A")]
						[Address(RVA = "0x754FB8", Offset = "0x754FB8", VA = "0x754FB8")]
						set
						{
						}
					}

					[Token(Token = "0x1700012B")]
					public bool HasW
					{
						[Token(Token = "0x600042D")]
						[Address(RVA = "0x755B28", Offset = "0x755B28", VA = "0x755B28")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700012C")]
					public float W
					{
						[Token(Token = "0x600042E")]
						[Address(RVA = "0x755B4C", Offset = "0x755B4C", VA = "0x755B4C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600042F")]
						[Address(RVA = "0x754FBC", Offset = "0x754FBC", VA = "0x754FBC")]
						set
						{
						}
					}

					[Token(Token = "0x600040B")]
					[Address(RVA = "0x7548E8", Offset = "0x7548E8", VA = "0x7548E8")]
					public Builder()
					{
					}

					[Token(Token = "0x600040C")]
					[Address(RVA = "0x754A70", Offset = "0x754A70", VA = "0x754A70")]
					internal Builder(OrientationEvent cloneFrom)
					{
					}

					[Token(Token = "0x600040E")]
					[Address(RVA = "0x754AE8", Offset = "0x754AE8", VA = "0x754AE8")]
					private OrientationEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6000411")]
					[Address(RVA = "0x754BC0", Offset = "0x754BC0", VA = "0x754BC0", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6000412")]
					[Address(RVA = "0x754C4C", Offset = "0x754C4C", VA = "0x754C4C", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6000414")]
					[Address(RVA = "0x754D90", Offset = "0x754D90", VA = "0x754D90", Slot = "13")]
					public override OrientationEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6000415")]
					[Address(RVA = "0x754DD4", Offset = "0x754DD4", VA = "0x754DD4", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6000416")]
					[Address(RVA = "0x754E88", Offset = "0x754E88", VA = "0x754E88", Slot = "26")]
					public override Builder MergeFrom(OrientationEvent other)
					{
						return null;
					}

					[Token(Token = "0x6000417")]
					[Address(RVA = "0x754FC0", Offset = "0x754FC0", VA = "0x754FC0", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6000418")]
					[Address(RVA = "0x755060", Offset = "0x755060", VA = "0x755060", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x600041C")]
					[Address(RVA = "0x7557B0", Offset = "0x7557B0", VA = "0x7557B0")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x600041D")]
					[Address(RVA = "0x755808", Offset = "0x755808", VA = "0x755808")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6000421")]
					[Address(RVA = "0x7558A0", Offset = "0x7558A0", VA = "0x7558A0")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6000422")]
					[Address(RVA = "0x7558FC", Offset = "0x7558FC", VA = "0x7558FC")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6000426")]
					[Address(RVA = "0x755990", Offset = "0x755990", VA = "0x755990")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6000427")]
					[Address(RVA = "0x7559EC", Offset = "0x7559EC", VA = "0x7559EC")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x600042B")]
					[Address(RVA = "0x755A80", Offset = "0x755A80", VA = "0x755A80")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x600042C")]
					[Address(RVA = "0x755ADC", Offset = "0x755ADC", VA = "0x755ADC")]
					public Builder ClearZ()
					{
						return null;
					}

					[Token(Token = "0x6000430")]
					[Address(RVA = "0x755B70", Offset = "0x755B70", VA = "0x755B70")]
					public Builder SetW(float value)
					{
						return null;
					}

					[Token(Token = "0x6000431")]
					[Address(RVA = "0x755BCC", Offset = "0x755BCC", VA = "0x755BCC")]
					public Builder ClearW()
					{
						return null;
					}
				}

				[Token(Token = "0x40002EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly OrientationEvent defaultInstance;

				[Token(Token = "0x40002EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				private static readonly string[] _orientationEventFieldNames;

				[Token(Token = "0x40002EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly uint[] _orientationEventFieldTags;

				[Token(Token = "0x40002ED")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40002EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private bool hasTimestamp;

				[Token(Token = "0x40002EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private long timestamp_;

				[Token(Token = "0x40002F0")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x40002F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasX;

				[Token(Token = "0x40002F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private float x_;

				[Token(Token = "0x40002F3")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x40002F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasY;

				[Token(Token = "0x40002F5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float y_;

				[Token(Token = "0x40002F6")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x40002F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasZ;

				[Token(Token = "0x40002F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float z_;

				[Token(Token = "0x40002F9")]
				public const int WFieldNumber = 5;

				[Token(Token = "0x40002FA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasW;

				[Token(Token = "0x40002FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float w_;

				[Token(Token = "0x40002FC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000110")]
				public static OrientationEvent DefaultInstance
				{
					[Token(Token = "0x60003E9")]
					[Address(RVA = "0x73EE2C", Offset = "0x73EE2C", VA = "0x73EE2C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000111")]
				public override OrientationEvent DefaultInstanceForType
				{
					[Token(Token = "0x60003EA")]
					[Address(RVA = "0x7533D0", Offset = "0x7533D0", VA = "0x7533D0", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000112")]
				protected override OrientationEvent ThisMessage
				{
					[Token(Token = "0x60003EB")]
					[Address(RVA = "0x753448", Offset = "0x753448", VA = "0x753448", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000113")]
				public bool HasTimestamp
				{
					[Token(Token = "0x60003EC")]
					[Address(RVA = "0x75344C", Offset = "0x75344C", VA = "0x75344C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000114")]
				public long Timestamp
				{
					[Token(Token = "0x60003ED")]
					[Address(RVA = "0x753454", Offset = "0x753454", VA = "0x753454")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000115")]
				public bool HasX
				{
					[Token(Token = "0x60003EE")]
					[Address(RVA = "0x75345C", Offset = "0x75345C", VA = "0x75345C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000116")]
				public float X
				{
					[Token(Token = "0x60003EF")]
					[Address(RVA = "0x753464", Offset = "0x753464", VA = "0x753464")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000117")]
				public bool HasY
				{
					[Token(Token = "0x60003F0")]
					[Address(RVA = "0x75346C", Offset = "0x75346C", VA = "0x75346C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000118")]
				public float Y
				{
					[Token(Token = "0x60003F1")]
					[Address(RVA = "0x753474", Offset = "0x753474", VA = "0x753474")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000119")]
				public bool HasZ
				{
					[Token(Token = "0x60003F2")]
					[Address(RVA = "0x75347C", Offset = "0x75347C", VA = "0x75347C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700011A")]
				public float Z
				{
					[Token(Token = "0x60003F3")]
					[Address(RVA = "0x753484", Offset = "0x753484", VA = "0x753484")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700011B")]
				public bool HasW
				{
					[Token(Token = "0x60003F4")]
					[Address(RVA = "0x75348C", Offset = "0x75348C", VA = "0x75348C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700011C")]
				public float W
				{
					[Token(Token = "0x60003F5")]
					[Address(RVA = "0x753494", Offset = "0x753494", VA = "0x753494")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700011D")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60003F6")]
					[Address(RVA = "0x75349C", Offset = "0x75349C", VA = "0x75349C", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700011E")]
				public override int SerializedSize
				{
					[Token(Token = "0x60003F8")]
					[Address(RVA = "0x75399C", Offset = "0x75399C", VA = "0x75399C", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60003E7")]
				[Address(RVA = "0x753000", Offset = "0x753000", VA = "0x753000")]
				private OrientationEvent()
				{
				}

				[Token(Token = "0x60003E8")]
				[Address(RVA = "0x75306C", Offset = "0x75306C", VA = "0x75306C")]
				static OrientationEvent()
				{
				}

				[Token(Token = "0x60003F7")]
				[Address(RVA = "0x7534A4", Offset = "0x7534A4", VA = "0x7534A4", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60003F9")]
				[Address(RVA = "0x753BB0", Offset = "0x753BB0", VA = "0x753BB0", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60003FA")]
				[Address(RVA = "0x753C84", Offset = "0x753C84", VA = "0x753C84", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60003FB")]
				[Address(RVA = "0x753E98", Offset = "0x753E98", VA = "0x753E98", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60003FC")]
				[Address(RVA = "0x754058", Offset = "0x754058", VA = "0x754058")]
				public static OrientationEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60003FD")]
				[Address(RVA = "0x754130", Offset = "0x754130", VA = "0x754130")]
				public static OrientationEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60003FE")]
				[Address(RVA = "0x754210", Offset = "0x754210", VA = "0x754210")]
				public static OrientationEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60003FF")]
				[Address(RVA = "0x7542E8", Offset = "0x7542E8", VA = "0x7542E8")]
				public static OrientationEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000400")]
				[Address(RVA = "0x7543C8", Offset = "0x7543C8", VA = "0x7543C8")]
				public static OrientationEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000401")]
				[Address(RVA = "0x7544A0", Offset = "0x7544A0", VA = "0x7544A0")]
				public static OrientationEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000402")]
				[Address(RVA = "0x754580", Offset = "0x754580", VA = "0x754580")]
				public static OrientationEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000403")]
				[Address(RVA = "0x754658", Offset = "0x754658", VA = "0x754658")]
				public static OrientationEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000404")]
				[Address(RVA = "0x754738", Offset = "0x754738", VA = "0x754738")]
				public static OrientationEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6000405")]
				[Address(RVA = "0x75480C", Offset = "0x75480C", VA = "0x75480C")]
				public static OrientationEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000406")]
				[Address(RVA = "0x7533CC", Offset = "0x7533CC", VA = "0x7533CC")]
				private OrientationEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6000407")]
				[Address(RVA = "0x742B18", Offset = "0x742B18", VA = "0x742B18")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6000408")]
				[Address(RVA = "0x754988", Offset = "0x754988", VA = "0x754988", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6000409")]
				[Address(RVA = "0x754A08", Offset = "0x754A08", VA = "0x754A08", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x600040A")]
				[Address(RVA = "0x74384C", Offset = "0x74384C", VA = "0x74384C")]
				public static Builder CreateBuilder(OrientationEvent prototype)
				{
					return null;
				}
			}

			[Token(Token = "0x2000069")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x171FA4", Offset = "0x171FA4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x171FA4", Offset = "0x171FA4")]
			public sealed class KeyEvent : GeneratedMessageLite<KeyEvent, KeyEvent.Builder>
			{
				[Token(Token = "0x200006A")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x172014", Offset = "0x172014")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x172014", Offset = "0x172014")]
				public sealed class Builder : GeneratedBuilderLite<KeyEvent, Builder>
				{
					[Token(Token = "0x4000309")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400030A")]
					[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
					private KeyEvent result;

					[Token(Token = "0x17000136")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6000452")]
						[Address(RVA = "0x74CF6C", Offset = "0x74CF6C", VA = "0x74CF6C", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000137")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6000454")]
						[Address(RVA = "0x74D010", Offset = "0x74D010", VA = "0x74D010", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000138")]
					protected override KeyEvent MessageBeingBuilt
					{
						[Token(Token = "0x6000455")]
						[Address(RVA = "0x74D044", Offset = "0x74D044", VA = "0x74D044", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000139")]
					public override KeyEvent DefaultInstanceForType
					{
						[Token(Token = "0x6000458")]
						[Address(RVA = "0x74D1A0", Offset = "0x74D1A0", VA = "0x74D1A0", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700013A")]
					public bool HasAction
					{
						[Token(Token = "0x600045E")]
						[Address(RVA = "0x74D914", Offset = "0x74D914", VA = "0x74D914")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700013B")]
					public int Action
					{
						[Token(Token = "0x600045F")]
						[Address(RVA = "0x74D938", Offset = "0x74D938", VA = "0x74D938")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6000460")]
						[Address(RVA = "0x74D3DC", Offset = "0x74D3DC", VA = "0x74D3DC")]
						set
						{
						}
					}

					[Token(Token = "0x1700013C")]
					public bool HasCode
					{
						[Token(Token = "0x6000463")]
						[Address(RVA = "0x74D9F8", Offset = "0x74D9F8", VA = "0x74D9F8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700013D")]
					public int Code
					{
						[Token(Token = "0x6000464")]
						[Address(RVA = "0x74DA1C", Offset = "0x74DA1C", VA = "0x74DA1C")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6000465")]
						[Address(RVA = "0x74D3E0", Offset = "0x74D3E0", VA = "0x74D3E0")]
						set
						{
						}
					}

					[Token(Token = "0x6000450")]
					[Address(RVA = "0x74CD70", Offset = "0x74CD70", VA = "0x74CD70")]
					public Builder()
					{
					}

					[Token(Token = "0x6000451")]
					[Address(RVA = "0x74CEF8", Offset = "0x74CEF8", VA = "0x74CEF8")]
					internal Builder(KeyEvent cloneFrom)
					{
					}

					[Token(Token = "0x6000453")]
					[Address(RVA = "0x74CF70", Offset = "0x74CF70", VA = "0x74CF70")]
					private KeyEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6000456")]
					[Address(RVA = "0x74D048", Offset = "0x74D048", VA = "0x74D048", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6000457")]
					[Address(RVA = "0x74D0D4", Offset = "0x74D0D4", VA = "0x74D0D4", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6000459")]
					[Address(RVA = "0x74D218", Offset = "0x74D218", VA = "0x74D218", Slot = "13")]
					public override KeyEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x600045A")]
					[Address(RVA = "0x74D25C", Offset = "0x74D25C", VA = "0x74D25C", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x600045B")]
					[Address(RVA = "0x74D310", Offset = "0x74D310", VA = "0x74D310", Slot = "26")]
					public override Builder MergeFrom(KeyEvent other)
					{
						return null;
					}

					[Token(Token = "0x600045C")]
					[Address(RVA = "0x74D3E4", Offset = "0x74D3E4", VA = "0x74D3E4", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x600045D")]
					[Address(RVA = "0x74D484", Offset = "0x74D484", VA = "0x74D484", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6000461")]
					[Address(RVA = "0x74D95C", Offset = "0x74D95C", VA = "0x74D95C")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x6000462")]
					[Address(RVA = "0x74D9AC", Offset = "0x74D9AC", VA = "0x74D9AC")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x6000466")]
					[Address(RVA = "0x74DA40", Offset = "0x74DA40", VA = "0x74DA40")]
					public Builder SetCode(int value)
					{
						return null;
					}

					[Token(Token = "0x6000467")]
					[Address(RVA = "0x74DA90", Offset = "0x74DA90", VA = "0x74DA90")]
					public Builder ClearCode()
					{
						return null;
					}
				}

				[Token(Token = "0x40002FF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly KeyEvent defaultInstance;

				[Token(Token = "0x4000300")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				private static readonly string[] _keyEventFieldNames;

				[Token(Token = "0x4000301")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly uint[] _keyEventFieldTags;

				[Token(Token = "0x4000302")]
				public const int ActionFieldNumber = 1;

				[Token(Token = "0x4000303")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private bool hasAction;

				[Token(Token = "0x4000304")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				private int action_;

				[Token(Token = "0x4000305")]
				public const int CodeFieldNumber = 2;

				[Token(Token = "0x4000306")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasCode;

				[Token(Token = "0x4000307")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				private int code_;

				[Token(Token = "0x4000308")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700012D")]
				public static KeyEvent DefaultInstance
				{
					[Token(Token = "0x6000434")]
					[Address(RVA = "0x73EF48", Offset = "0x73EF48", VA = "0x73EF48")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700012E")]
				public override KeyEvent DefaultInstanceForType
				{
					[Token(Token = "0x6000435")]
					[Address(RVA = "0x74BE40", Offset = "0x74BE40", VA = "0x74BE40", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700012F")]
				protected override KeyEvent ThisMessage
				{
					[Token(Token = "0x6000436")]
					[Address(RVA = "0x74BEB8", Offset = "0x74BEB8", VA = "0x74BEB8", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000130")]
				public bool HasAction
				{
					[Token(Token = "0x6000437")]
					[Address(RVA = "0x74BEBC", Offset = "0x74BEBC", VA = "0x74BEBC")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000131")]
				public int Action
				{
					[Token(Token = "0x6000438")]
					[Address(RVA = "0x74BEC4", Offset = "0x74BEC4", VA = "0x74BEC4")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000132")]
				public bool HasCode
				{
					[Token(Token = "0x6000439")]
					[Address(RVA = "0x74BECC", Offset = "0x74BECC", VA = "0x74BECC")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000133")]
				public int Code
				{
					[Token(Token = "0x600043A")]
					[Address(RVA = "0x74BED4", Offset = "0x74BED4", VA = "0x74BED4")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000134")]
				public override bool IsInitialized
				{
					[Token(Token = "0x600043B")]
					[Address(RVA = "0x74BEDC", Offset = "0x74BEDC", VA = "0x74BEDC", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000135")]
				public override int SerializedSize
				{
					[Token(Token = "0x600043D")]
					[Address(RVA = "0x74C134", Offset = "0x74C134", VA = "0x74C134", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000432")]
				[Address(RVA = "0x74BB6C", Offset = "0x74BB6C", VA = "0x74BB6C")]
				private KeyEvent()
				{
				}

				[Token(Token = "0x6000433")]
				[Address(RVA = "0x74BBD8", Offset = "0x74BBD8", VA = "0x74BBD8")]
				static KeyEvent()
				{
				}

				[Token(Token = "0x600043C")]
				[Address(RVA = "0x74BEE4", Offset = "0x74BEE4", VA = "0x74BEE4", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x600043E")]
				[Address(RVA = "0x74C23C", Offset = "0x74C23C", VA = "0x74C23C", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x600043F")]
				[Address(RVA = "0x74C2BC", Offset = "0x74C2BC", VA = "0x74C2BC", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6000440")]
				[Address(RVA = "0x74C3F0", Offset = "0x74C3F0", VA = "0x74C3F0", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6000441")]
				[Address(RVA = "0x74C4E0", Offset = "0x74C4E0", VA = "0x74C4E0")]
				public static KeyEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6000442")]
				[Address(RVA = "0x74C5B8", Offset = "0x74C5B8", VA = "0x74C5B8")]
				public static KeyEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000443")]
				[Address(RVA = "0x74C698", Offset = "0x74C698", VA = "0x74C698")]
				public static KeyEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6000444")]
				[Address(RVA = "0x74C770", Offset = "0x74C770", VA = "0x74C770")]
				public static KeyEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000445")]
				[Address(RVA = "0x74C850", Offset = "0x74C850", VA = "0x74C850")]
				public static KeyEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000446")]
				[Address(RVA = "0x74C928", Offset = "0x74C928", VA = "0x74C928")]
				public static KeyEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000447")]
				[Address(RVA = "0x74CA08", Offset = "0x74CA08", VA = "0x74CA08")]
				public static KeyEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6000448")]
				[Address(RVA = "0x74CAE0", Offset = "0x74CAE0", VA = "0x74CAE0")]
				public static KeyEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6000449")]
				[Address(RVA = "0x74CBC0", Offset = "0x74CBC0", VA = "0x74CBC0")]
				public static KeyEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x600044A")]
				[Address(RVA = "0x74CC94", Offset = "0x74CC94", VA = "0x74CC94")]
				public static KeyEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600044B")]
				[Address(RVA = "0x74BE3C", Offset = "0x74BE3C", VA = "0x74BE3C")]
				private KeyEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x600044C")]
				[Address(RVA = "0x742BAC", Offset = "0x742BAC", VA = "0x742BAC")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x600044D")]
				[Address(RVA = "0x74CE10", Offset = "0x74CE10", VA = "0x74CE10", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x600044E")]
				[Address(RVA = "0x74CE90", Offset = "0x74CE90", VA = "0x74CE90", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x600044F")]
				[Address(RVA = "0x743AAC", Offset = "0x743AAC", VA = "0x743AAC")]
				public static Builder CreateBuilder(KeyEvent prototype)
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200006B")]
		[DebuggerNonUserCode]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x172084", Offset = "0x172084")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x172084", Offset = "0x172084")]
		public sealed class Builder : GeneratedBuilderLite<PhoneEvent, Builder>
		{
			[Token(Token = "0x400030B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool resultIsReadOnly;

			[Token(Token = "0x400030C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private PhoneEvent result;

			[Token(Token = "0x1700013E")]
			protected override Builder ThisBuilder
			{
				[Token(Token = "0x600046A")]
				[Address(RVA = "0x740C08", Offset = "0x740C08", VA = "0x740C08", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			public override bool IsInitialized
			{
				[Token(Token = "0x600046C")]
				[Address(RVA = "0x740CAC", Offset = "0x740CAC", VA = "0x740CAC", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000140")]
			protected override PhoneEvent MessageBeingBuilt
			{
				[Token(Token = "0x600046D")]
				[Address(RVA = "0x740CE0", Offset = "0x740CE0", VA = "0x740CE0", Slot = "25")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000141")]
			public override PhoneEvent DefaultInstanceForType
			{
				[Token(Token = "0x6000470")]
				[Address(RVA = "0x740E3C", Offset = "0x740E3C", VA = "0x740E3C", Slot = "9")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000142")]
			public bool HasType
			{
				[Token(Token = "0x6000476")]
				[Address(RVA = "0x742C40", Offset = "0x742C40", VA = "0x742C40")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000143")]
			public Types.Type Type
			{
				[Token(Token = "0x6000477")]
				[Address(RVA = "0x742C64", Offset = "0x742C64", VA = "0x742C64")]
				get
				{
					return default(Types.Type);
				}
				[Token(Token = "0x6000478")]
				[Address(RVA = "0x741124", Offset = "0x741124", VA = "0x741124")]
				set
				{
				}
			}

			[Token(Token = "0x17000144")]
			public bool HasMotionEvent
			{
				[Token(Token = "0x600047B")]
				[Address(RVA = "0x742D28", Offset = "0x742D28", VA = "0x742D28")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000145")]
			public Types.MotionEvent MotionEvent
			{
				[Token(Token = "0x600047C")]
				[Address(RVA = "0x742930", Offset = "0x742930", VA = "0x742930")]
				get
				{
					return null;
				}
				[Token(Token = "0x600047D")]
				[Address(RVA = "0x742958", Offset = "0x742958", VA = "0x742958")]
				set
				{
				}
			}

			[Token(Token = "0x17000146")]
			public bool HasGyroscopeEvent
			{
				[Token(Token = "0x6000482")]
				[Address(RVA = "0x742F88", Offset = "0x742F88", VA = "0x742F88")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000147")]
			public Types.GyroscopeEvent GyroscopeEvent
			{
				[Token(Token = "0x6000483")]
				[Address(RVA = "0x7429C4", Offset = "0x7429C4", VA = "0x7429C4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000484")]
				[Address(RVA = "0x7429EC", Offset = "0x7429EC", VA = "0x7429EC")]
				set
				{
				}
			}

			[Token(Token = "0x17000148")]
			public bool HasAccelerometerEvent
			{
				[Token(Token = "0x6000489")]
				[Address(RVA = "0x7431E8", Offset = "0x7431E8", VA = "0x7431E8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000149")]
			public Types.AccelerometerEvent AccelerometerEvent
			{
				[Token(Token = "0x600048A")]
				[Address(RVA = "0x742A58", Offset = "0x742A58", VA = "0x742A58")]
				get
				{
					return null;
				}
				[Token(Token = "0x600048B")]
				[Address(RVA = "0x742A80", Offset = "0x742A80", VA = "0x742A80")]
				set
				{
				}
			}

			[Token(Token = "0x1700014A")]
			public bool HasDepthMapEvent
			{
				[Token(Token = "0x6000490")]
				[Address(RVA = "0x743448", Offset = "0x743448", VA = "0x743448")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700014B")]
			public Types.DepthMapEvent DepthMapEvent
			{
				[Token(Token = "0x6000491")]
				[Address(RVA = "0x742AEC", Offset = "0x742AEC", VA = "0x742AEC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000492")]
				[Address(RVA = "0x742B14", Offset = "0x742B14", VA = "0x742B14")]
				set
				{
				}
			}

			[Token(Token = "0x1700014C")]
			public bool HasOrientationEvent
			{
				[Token(Token = "0x6000497")]
				[Address(RVA = "0x7436A8", Offset = "0x7436A8", VA = "0x7436A8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700014D")]
			public Types.OrientationEvent OrientationEvent
			{
				[Token(Token = "0x6000498")]
				[Address(RVA = "0x742B80", Offset = "0x742B80", VA = "0x742B80")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000499")]
				[Address(RVA = "0x742BA8", Offset = "0x742BA8", VA = "0x742BA8")]
				set
				{
				}
			}

			[Token(Token = "0x1700014E")]
			public bool HasKeyEvent
			{
				[Token(Token = "0x600049E")]
				[Address(RVA = "0x743908", Offset = "0x743908", VA = "0x743908")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700014F")]
			public Types.KeyEvent KeyEvent
			{
				[Token(Token = "0x600049F")]
				[Address(RVA = "0x742C14", Offset = "0x742C14", VA = "0x742C14")]
				get
				{
					return null;
				}
				[Token(Token = "0x60004A0")]
				[Address(RVA = "0x742C3C", Offset = "0x742C3C", VA = "0x742C3C")]
				set
				{
				}
			}

			[Token(Token = "0x6000468")]
			[Address(RVA = "0x74099C", Offset = "0x74099C", VA = "0x74099C")]
			public Builder()
			{
			}

			[Token(Token = "0x6000469")]
			[Address(RVA = "0x740B94", Offset = "0x740B94", VA = "0x740B94")]
			internal Builder(PhoneEvent cloneFrom)
			{
			}

			[Token(Token = "0x600046B")]
			[Address(RVA = "0x740C0C", Offset = "0x740C0C", VA = "0x740C0C")]
			private PhoneEvent PrepareBuilder()
			{
				return null;
			}

			[Token(Token = "0x600046E")]
			[Address(RVA = "0x740CE4", Offset = "0x740CE4", VA = "0x740CE4", Slot = "10")]
			public override Builder Clear()
			{
				return null;
			}

			[Token(Token = "0x600046F")]
			[Address(RVA = "0x740D70", Offset = "0x740D70", VA = "0x740D70", Slot = "11")]
			public override Builder Clone()
			{
				return null;
			}

			[Token(Token = "0x6000471")]
			[Address(RVA = "0x740EB4", Offset = "0x740EB4", VA = "0x740EB4", Slot = "13")]
			public override PhoneEvent BuildPartial()
			{
				return null;
			}

			[Token(Token = "0x6000472")]
			[Address(RVA = "0x740EF8", Offset = "0x740EF8", VA = "0x740EF8", Slot = "14")]
			public override Builder MergeFrom(IMessageLite other)
			{
				return null;
			}

			[Token(Token = "0x6000473")]
			[Address(RVA = "0x740FAC", Offset = "0x740FAC", VA = "0x740FAC", Slot = "26")]
			public override Builder MergeFrom(PhoneEvent other)
			{
				return null;
			}

			[Token(Token = "0x6000474")]
			[Address(RVA = "0x741BC0", Offset = "0x741BC0", VA = "0x741BC0", Slot = "16")]
			public override Builder MergeFrom(ICodedInputStream input)
			{
				return null;
			}

			[Token(Token = "0x6000475")]
			[Address(RVA = "0x741C60", Offset = "0x741C60", VA = "0x741C60", Slot = "15")]
			public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
			{
				return null;
			}

			[Token(Token = "0x6000479")]
			[Address(RVA = "0x742C88", Offset = "0x742C88", VA = "0x742C88")]
			public Builder SetType(Types.Type value)
			{
				return null;
			}

			[Token(Token = "0x600047A")]
			[Address(RVA = "0x742CD8", Offset = "0x742CD8", VA = "0x742CD8")]
			public Builder ClearType()
			{
				return null;
			}

			[Token(Token = "0x600047E")]
			[Address(RVA = "0x742D4C", Offset = "0x742D4C", VA = "0x742D4C")]
			public Builder SetMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x600047F")]
			[Address(RVA = "0x742DF8", Offset = "0x742DF8", VA = "0x742DF8")]
			public Builder SetMotionEvent(Types.MotionEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6000480")]
			[Address(RVA = "0x741128", Offset = "0x741128", VA = "0x741128")]
			public Builder MergeMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x6000481")]
			[Address(RVA = "0x742F3C", Offset = "0x742F3C", VA = "0x742F3C")]
			public Builder ClearMotionEvent()
			{
				return null;
			}

			[Token(Token = "0x6000485")]
			[Address(RVA = "0x742FAC", Offset = "0x742FAC", VA = "0x742FAC")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6000486")]
			[Address(RVA = "0x743058", Offset = "0x743058", VA = "0x743058")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6000487")]
			[Address(RVA = "0x7412EC", Offset = "0x7412EC", VA = "0x7412EC")]
			public Builder MergeGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6000488")]
			[Address(RVA = "0x74319C", Offset = "0x74319C", VA = "0x74319C")]
			public Builder ClearGyroscopeEvent()
			{
				return null;
			}

			[Token(Token = "0x600048C")]
			[Address(RVA = "0x74320C", Offset = "0x74320C", VA = "0x74320C")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x600048D")]
			[Address(RVA = "0x7432B8", Offset = "0x7432B8", VA = "0x7432B8")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600048E")]
			[Address(RVA = "0x7414B0", Offset = "0x7414B0", VA = "0x7414B0")]
			public Builder MergeAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x600048F")]
			[Address(RVA = "0x7433FC", Offset = "0x7433FC", VA = "0x7433FC")]
			public Builder ClearAccelerometerEvent()
			{
				return null;
			}

			[Token(Token = "0x6000493")]
			[Address(RVA = "0x74346C", Offset = "0x74346C", VA = "0x74346C")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6000494")]
			[Address(RVA = "0x743518", Offset = "0x743518", VA = "0x743518")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6000495")]
			[Address(RVA = "0x741674", Offset = "0x741674", VA = "0x741674")]
			public Builder MergeDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6000496")]
			[Address(RVA = "0x74365C", Offset = "0x74365C", VA = "0x74365C")]
			public Builder ClearDepthMapEvent()
			{
				return null;
			}

			[Token(Token = "0x600049A")]
			[Address(RVA = "0x7436CC", Offset = "0x7436CC", VA = "0x7436CC")]
			public Builder SetOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x600049B")]
			[Address(RVA = "0x743778", Offset = "0x743778", VA = "0x743778")]
			public Builder SetOrientationEvent(Types.OrientationEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600049C")]
			[Address(RVA = "0x741838", Offset = "0x741838", VA = "0x741838")]
			public Builder MergeOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x600049D")]
			[Address(RVA = "0x7438BC", Offset = "0x7438BC", VA = "0x7438BC")]
			public Builder ClearOrientationEvent()
			{
				return null;
			}

			[Token(Token = "0x60004A1")]
			[Address(RVA = "0x74392C", Offset = "0x74392C", VA = "0x74392C")]
			public Builder SetKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x60004A2")]
			[Address(RVA = "0x7439D8", Offset = "0x7439D8", VA = "0x7439D8")]
			public Builder SetKeyEvent(Types.KeyEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x7419FC", Offset = "0x7419FC", VA = "0x7419FC")]
			public Builder MergeKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x60004A4")]
			[Address(RVA = "0x743B1C", Offset = "0x743B1C", VA = "0x743B1C")]
			public Builder ClearKeyEvent()
			{
				return null;
			}
		}

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly PhoneEvent defaultInstance;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly string[] _phoneEventFieldNames;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly uint[] _phoneEventFieldTags;

		[Token(Token = "0x400027A")]
		public const int TypeFieldNumber = 1;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool hasType;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Types.Type type_;

		[Token(Token = "0x400027D")]
		public const int MotionEventFieldNumber = 2;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool hasMotionEvent;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Types.MotionEvent motionEvent_;

		[Token(Token = "0x4000280")]
		public const int GyroscopeEventFieldNumber = 3;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool hasGyroscopeEvent;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Types.GyroscopeEvent gyroscopeEvent_;

		[Token(Token = "0x4000283")]
		public const int AccelerometerEventFieldNumber = 4;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasAccelerometerEvent;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Types.AccelerometerEvent accelerometerEvent_;

		[Token(Token = "0x4000286")]
		public const int DepthMapEventFieldNumber = 5;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasDepthMapEvent;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Types.DepthMapEvent depthMapEvent_;

		[Token(Token = "0x4000289")]
		public const int OrientationEventFieldNumber = 6;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasOrientationEvent;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Types.OrientationEvent orientationEvent_;

		[Token(Token = "0x400028C")]
		public const int KeyEventFieldNumber = 7;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasKeyEvent;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Types.KeyEvent keyEvent_;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int memoizedSerializedSize;

		[Token(Token = "0x17000088")]
		public static PhoneEvent DefaultInstance
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0x73E814", Offset = "0x73E814", VA = "0x73E814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		public override PhoneEvent DefaultInstanceForType
		{
			[Token(Token = "0x6000274")]
			[Address(RVA = "0x73E8A0", Offset = "0x73E8A0", VA = "0x73E8A0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		protected override PhoneEvent ThisMessage
		{
			[Token(Token = "0x6000275")]
			[Address(RVA = "0x73E918", Offset = "0x73E918", VA = "0x73E918", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		public bool HasType
		{
			[Token(Token = "0x6000276")]
			[Address(RVA = "0x73E91C", Offset = "0x73E91C", VA = "0x73E91C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		public Types.Type Type
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x73E924", Offset = "0x73E924", VA = "0x73E924")]
			get
			{
				return default(Types.Type);
			}
		}

		[Token(Token = "0x1700008D")]
		public bool HasMotionEvent
		{
			[Token(Token = "0x6000278")]
			[Address(RVA = "0x73E92C", Offset = "0x73E92C", VA = "0x73E92C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public Types.MotionEvent MotionEvent
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x73E934", Offset = "0x73E934", VA = "0x73E934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public bool HasGyroscopeEvent
		{
			[Token(Token = "0x600027A")]
			[Address(RVA = "0x73EA48", Offset = "0x73EA48", VA = "0x73EA48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		public Types.GyroscopeEvent GyroscopeEvent
		{
			[Token(Token = "0x600027B")]
			[Address(RVA = "0x73EA50", Offset = "0x73EA50", VA = "0x73EA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public bool HasAccelerometerEvent
		{
			[Token(Token = "0x600027C")]
			[Address(RVA = "0x73EB64", Offset = "0x73EB64", VA = "0x73EB64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000092")]
		public Types.AccelerometerEvent AccelerometerEvent
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x73EB6C", Offset = "0x73EB6C", VA = "0x73EB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		public bool HasDepthMapEvent
		{
			[Token(Token = "0x600027E")]
			[Address(RVA = "0x73EC80", Offset = "0x73EC80", VA = "0x73EC80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000094")]
		public Types.DepthMapEvent DepthMapEvent
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x73EC88", Offset = "0x73EC88", VA = "0x73EC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		public bool HasOrientationEvent
		{
			[Token(Token = "0x6000280")]
			[Address(RVA = "0x73ED9C", Offset = "0x73ED9C", VA = "0x73ED9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000096")]
		public Types.OrientationEvent OrientationEvent
		{
			[Token(Token = "0x6000281")]
			[Address(RVA = "0x73EDA4", Offset = "0x73EDA4", VA = "0x73EDA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		public bool HasKeyEvent
		{
			[Token(Token = "0x6000282")]
			[Address(RVA = "0x73EEB8", Offset = "0x73EEB8", VA = "0x73EEB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000098")]
		public Types.KeyEvent KeyEvent
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0x73EEC0", Offset = "0x73EEC0", VA = "0x73EEC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public override bool IsInitialized
		{
			[Token(Token = "0x6000284")]
			[Address(RVA = "0x73EFD4", Offset = "0x73EFD4", VA = "0x73EFD4", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public override int SerializedSize
		{
			[Token(Token = "0x6000286")]
			[Address(RVA = "0x73F6D0", Offset = "0x73F6D0", VA = "0x73F6D0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x73E364", Offset = "0x73E364", VA = "0x73E364")]
		private PhoneEvent()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x73E3D8", Offset = "0x73E3D8", VA = "0x73E3D8")]
		static PhoneEvent()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x73EFDC", Offset = "0x73EFDC", VA = "0x73EFDC", Slot = "14")]
		public override void WriteTo(ICodedOutputStream output)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x73F998", Offset = "0x73F998", VA = "0x73F998", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x73FB4C", Offset = "0x73FB4C", VA = "0x73FB4C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x73FF04", Offset = "0x73FF04", VA = "0x73FF04", Slot = "15")]
		public override void PrintTo(TextWriter writer)
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x7400A4", Offset = "0x7400A4", VA = "0x7400A4")]
		public static PhoneEvent ParseFrom(ByteString data)
		{
			return null;
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x7401E4", Offset = "0x7401E4", VA = "0x7401E4")]
		public static PhoneEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x7402C4", Offset = "0x7402C4", VA = "0x7402C4")]
		public static PhoneEvent ParseFrom(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x74039C", Offset = "0x74039C", VA = "0x74039C")]
		public static PhoneEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x74047C", Offset = "0x74047C", VA = "0x74047C")]
		public static PhoneEvent ParseFrom(Stream input)
		{
			return null;
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x740554", Offset = "0x740554", VA = "0x740554")]
		public static PhoneEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x740634", Offset = "0x740634", VA = "0x740634")]
		public static PhoneEvent ParseDelimitedFrom(Stream input)
		{
			return null;
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x74070C", Offset = "0x74070C", VA = "0x74070C")]
		public static PhoneEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x7407EC", Offset = "0x7407EC", VA = "0x7407EC")]
		public static PhoneEvent ParseFrom(ICodedInputStream input)
		{
			return null;
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x7408C0", Offset = "0x7408C0", VA = "0x7408C0")]
		public static PhoneEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x73E810", Offset = "0x73E810", VA = "0x73E810")]
		private PhoneEvent MakeReadOnly()
		{
			return null;
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x74017C", Offset = "0x74017C", VA = "0x74017C")]
		public static Builder CreateBuilder()
		{
			return null;
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x740A3C", Offset = "0x740A3C", VA = "0x740A3C", Slot = "13")]
		public override Builder ToBuilder()
		{
			return null;
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x740B2C", Offset = "0x740B2C", VA = "0x740B2C", Slot = "12")]
		public override Builder CreateBuilderForType()
		{
			return null;
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x740ABC", Offset = "0x740ABC", VA = "0x740ABC")]
		public static Builder CreateBuilder(PhoneEvent prototype)
		{
			return null;
		}
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x200006C")]
	internal interface IControllerProvider
	{
		[Token(Token = "0x17000150")]
		bool SupportsBatteryStatus
		{
			[Token(Token = "0x60004A5")]
			get;
		}

		[Token(Token = "0x60004A6")]
		void OnPause();

		[Token(Token = "0x60004A7")]
		void OnResume();

		[Token(Token = "0x60004A8")]
		void ReadState(ControllerState outState);
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
public class GvrControllerTooltipsSimple : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshRenderer tooltipRenderer;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175720", Offset = "0x175720")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175720", Offset = "0x175720")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int colorId;

	[Token(Token = "0x17000151")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x5BEA50", Offset = "0x5BEA50", VA = "0x5BEA50", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18000C", Offset = "0x18000C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x5BEA58", Offset = "0x5BEA58", VA = "0x5BEA58", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18001C", Offset = "0x18001C")]
		set
		{
		}
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x5BEA48", Offset = "0x5BEA48", VA = "0x5BEA48")]
	public GvrControllerTooltipsSimple()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x5BEA60", Offset = "0x5BEA60", VA = "0x5BEA60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x5BEB60", Offset = "0x5BEB60", VA = "0x5BEB60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x5BEBEC", Offset = "0x5BEBEC", VA = "0x5BEBEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x5BEC78", Offset = "0x5BEC78", VA = "0x5BEC78")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x5BEA64", Offset = "0x5BEA64", VA = "0x5BEA64")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x5BEE04", Offset = "0x5BEE04", VA = "0x5BEE04")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x5BECA8", Offset = "0x5BECA8", VA = "0x5BECA8")]
	protected void OnVisualUpdate()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172104", Offset = "0x172104")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172104", Offset = "0x172104")]
[ExecuteInEditMode]
public class GvrTooltip : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x200006F")]
	private enum Location
	{
		[Token(Token = "0x4000320")]
		TouchPadOutside,
		[Token(Token = "0x4000321")]
		TouchPadInside,
		[Token(Token = "0x4000322")]
		AppButtonOutside,
		[Token(Token = "0x4000323")]
		AppButtonInside,
		[Token(Token = "0x4000324")]
		Custom
	}

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Quaternion RIGHT_SIDE_ROTATION;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static readonly Quaternion LEFT_SIDE_ROTATION;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static readonly Vector2 SQUARE_CENTER;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static readonly Vector2 PIVOT;

	[Token(Token = "0x4000315")]
	protected const float TOUCH_PAD_Y_POSITION_METERS = 0.0385f;

	[Token(Token = "0x4000316")]
	protected const float APP_BUTTON_Y_POSITION_METERS = 0.0105f;

	[Token(Token = "0x4000317")]
	protected const float TOOLTIP_Z_POSITION_METERS = 0.0098f;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175754", Offset = "0x175754")]
	[SerializeField]
	private Location location;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17579C", Offset = "0x17579C")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175800", Offset = "0x175800")]
	[SerializeField]
	private bool alwaysVisible;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool isOnLeft;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rectTransform;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175848", Offset = "0x175848")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175848", Offset = "0x175848")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x17000152")]
	public Text TooltipText
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x5D5C30", Offset = "0x5D5C30", VA = "0x5D5C30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000153")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x5D5C38", Offset = "0x5D5C38", VA = "0x5D5C38", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18002C", Offset = "0x18002C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x5D5C40", Offset = "0x5D5C40", VA = "0x5D5C40", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18003C", Offset = "0x18003C")]
		set
		{
		}
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x5D5C28", Offset = "0x5D5C28", VA = "0x5D5C28")]
	public GvrTooltip()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x5D5C48", Offset = "0x5D5C48", VA = "0x5D5C48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x5D5EDC", Offset = "0x5D5EDC", VA = "0x5D5EDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x5D5F78", Offset = "0x5D5F78", VA = "0x5D5F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x5D6004", Offset = "0x5D6004", VA = "0x5D6004")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x5D61BC", Offset = "0x5D61BC", VA = "0x5D61BC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x5D622C", Offset = "0x5D622C", VA = "0x5D622C")]
	public bool IsTooltipInside()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x5D5D08", Offset = "0x5D5D08", VA = "0x5D5D08")]
	public bool IsTooltipOnLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x5D6254", Offset = "0x5D6254", VA = "0x5D6254", Slot = "6")]
	protected virtual void OnSideChanged(bool IsLocationOnLeft)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x5D6514", Offset = "0x5D6514", VA = "0x5D6514")]
	protected float GetMetersToCanvasScale()
	{
		return default(float);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x5D6530", Offset = "0x5D6530", VA = "0x5D6530")]
	private Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x5D615C", Offset = "0x5D615C", VA = "0x5D615C")]
	private void CheckTooltipSide()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x5D5D44", Offset = "0x5D5D44", VA = "0x5D5D44")]
	private void RefreshTooltip()
	{
	}
}
[Token(Token = "0x2000070")]
public abstract class GvrBasePointer : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	public enum RaycastMode
	{
		[Token(Token = "0x4000329")]
		Camera,
		[Token(Token = "0x400032A")]
		Direct,
		[Token(Token = "0x400032B")]
		Hybrid
	}

	[Token(Token = "0x2000072")]
	public struct PointerRay
	{
		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Ray ray;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distanceFromStart;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distance;
	}

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17587C", Offset = "0x17587C")]
	public RaycastMode raycastMode;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1758B0", Offset = "0x1758B0")]
	public Camera overridePointerCamera;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17590C", Offset = "0x17590C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17590C", Offset = "0x17590C")]
	private bool <ShouldUseExitRadiusForRaycast>k__BackingField;

	[Token(Token = "0x17000154")]
	public RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x5B94C4", Offset = "0x5B94C4", VA = "0x5B94C4")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x17000155")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184D24", Offset = "0x184D24")]
	public Vector3 PointerIntersection
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x5B95BC", Offset = "0x5B95BC", VA = "0x5B95BC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000156")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184D80", Offset = "0x184D80")]
	public bool IsPointerIntersecting
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x5B962C", Offset = "0x5B962C", VA = "0x5B962C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000157")]
	public bool ShouldUseExitRadiusForRaycast
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x5B9714", Offset = "0x5B9714", VA = "0x5B9714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18004C", Offset = "0x18004C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x5B971C", Offset = "0x5B971C", VA = "0x5B971C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18005C", Offset = "0x18005C")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public float CurrentPointerRadius
	{
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x5B9724", Offset = "0x5B9724", VA = "0x5B9724")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000159")]
	public virtual Transform PointerTransform
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x5B977C", Offset = "0x5B977C", VA = "0x5B977C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015A")]
	public virtual bool TriggerDown
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x5B9784", Offset = "0x5B9784", VA = "0x5B9784", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015B")]
	public virtual bool Triggering
	{
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x5B98D0", Offset = "0x5B98D0", VA = "0x5B98D0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015C")]
	public virtual bool TriggerUp
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x5B9A1C", Offset = "0x5B9A1C", VA = "0x5B9A1C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	public virtual bool TouchDown
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x5B9B68", Offset = "0x5B9B68", VA = "0x5B9B68", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015E")]
	public virtual bool IsTouching
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x5B9C90", Offset = "0x5B9C90", VA = "0x5B9C90", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015F")]
	public virtual bool TouchUp
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x5B9DB8", Offset = "0x5B9DB8", VA = "0x5B9DB8", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000160")]
	public virtual Vector2 TouchPos
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x5B9EE0", Offset = "0x5B9EE0", VA = "0x5B9EE0", Slot = "11")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000161")]
	public virtual Vector3 MaxPointerEndPoint
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x5BA034", Offset = "0x5BA034", VA = "0x5BA034", Slot = "12")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000162")]
	public virtual bool IsAvailable
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x5BA1EC", Offset = "0x5BA1EC", VA = "0x5BA1EC", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000163")]
	public virtual float CameraRayIntersectionDistance
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x5BA2EC", Offset = "0x5BA2EC", VA = "0x5BA2EC", Slot = "14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000164")]
	public Camera PointerCamera
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x5BA2FC", Offset = "0x5BA2FC", VA = "0x5BA2FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public abstract float MaxPointerDistance
	{
		[Token(Token = "0x60004D7")]
		get;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x5B94B4", Offset = "0x5B94B4", VA = "0x5B94B4")]
	protected GvrBasePointer()
	{
	}

	[Token(Token = "0x60004D8")]
	public abstract void OnPointerEnter(RaycastResult raycastResult, bool isInteractive);

	[Token(Token = "0x60004D9")]
	public abstract void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive);

	[Token(Token = "0x60004DA")]
	public abstract void OnPointerExit(GameObject previousObject);

	[Token(Token = "0x60004DB")]
	public abstract void OnPointerClickDown();

	[Token(Token = "0x60004DC")]
	public abstract void OnPointerClickUp();

	[Token(Token = "0x60004DD")]
	public abstract void GetPointerRadius(out float enterRadius, out float exitRadius);

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x5BA194", Offset = "0x5BA194", VA = "0x5BA194")]
	public Vector3 GetPointAlongPointer(float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x5BA39C", Offset = "0x5BA39C", VA = "0x5BA39C")]
	public PointerRay GetRayForDistance(float distance)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x5BA680", Offset = "0x5BA680", VA = "0x5BA680")]
	public static PointerRay CalculateRay(GvrBasePointer pointer, RaycastMode mode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x5BA43C", Offset = "0x5BA43C", VA = "0x5BA43C")]
	public static PointerRay CalculateHybridRay(GvrBasePointer pointer, RaycastMode hybridMode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x5BACC0", Offset = "0x5BACC0", VA = "0x5BACC0", Slot = "22")]
	protected virtual void Start()
	{
	}
}
[Token(Token = "0x2000073")]
public abstract class GvrBasePointerRaycaster : BaseRaycaster
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GvrBasePointer.PointerRay lastRay;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175940", Offset = "0x175940")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175940", Offset = "0x175940")]
	private GvrBasePointer.RaycastMode <CurrentRaycastModeForHybrid>k__BackingField;

	[Token(Token = "0x17000166")]
	protected GvrBasePointer.RaycastMode CurrentRaycastModeForHybrid
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x5BADEC", Offset = "0x5BADEC", VA = "0x5BADEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18006C", Offset = "0x18006C")]
		get
		{
			return default(GvrBasePointer.RaycastMode);
		}
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x5BADF4", Offset = "0x5BADF4", VA = "0x5BADF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18007C", Offset = "0x18007C")]
		private set
		{
		}
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x5BADE4", Offset = "0x5BADE4", VA = "0x5BADE4")]
	protected GvrBasePointerRaycaster()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x5BADFC", Offset = "0x5BADFC", VA = "0x5BADFC")]
	public GvrBasePointer.PointerRay GetLastRay()
	{
		return default(GvrBasePointer.PointerRay);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x5BAE18", Offset = "0x5BAE18", VA = "0x5BAE18", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60004E8")]
	protected abstract bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList);

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x5BAFDC", Offset = "0x5BAFDC", VA = "0x5BAFDC")]
	private void RaycastHybrid(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x5BB164", Offset = "0x5BB164", VA = "0x5BB164")]
	private void RaycastDefault(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}
}
[Token(Token = "0x2000074")]
public interface IGvrPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x60004EB")]
	void OnGvrPointerHover(PointerEventData eventData);
}
[Token(Token = "0x2000075")]
public static class GvrExecuteEventsExtension
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly ExecuteEvents.EventFunction<IGvrPointerHoverHandler> s_HoverHandler;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175974", Offset = "0x175974")]
	private static ExecuteEvents.EventFunction<IGvrPointerHoverHandler> <>f__mg$cache0;

	[Token(Token = "0x17000167")]
	public static ExecuteEvents.EventFunction<IGvrPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x5C182C", Offset = "0x5C182C", VA = "0x5C182C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x5C1708", Offset = "0x5C1708", VA = "0x5C1708")]
	private static void Execute(IGvrPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1721B8", Offset = "0x1721B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1721B8", Offset = "0x1721B8")]
public class GvrPointerGraphicRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x2000077")]
	public enum BlockingObjects
	{
		[Token(Token = "0x400033D")]
		None,
		[Token(Token = "0x400033E")]
		TwoD,
		[Token(Token = "0x400033F")]
		ThreeD,
		[Token(Token = "0x4000340")]
		All
	}

	[Token(Token = "0x4000333")]
	private const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ignoreReversedGraphics;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public BlockingObjects blockingObjects;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask blockingMask;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Canvas targetCanvas;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Graphic> raycastResults;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Camera cachedPointerEventCamera;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<Graphic> sortedGraphics;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175984", Offset = "0x175984")]
	private static Comparison<Graphic> <>f__am$cache0;

	[Token(Token = "0x17000168")]
	public override Camera eventCamera
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x5CB24C", Offset = "0x5CB24C", VA = "0x5CB24C", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000169")]
	private Canvas canvas
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x5CB4A0", Offset = "0x5CB4A0", VA = "0x5CB4A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x5CB1A8", Offset = "0x5CB1A8", VA = "0x5CB1A8")]
	protected GvrPointerGraphicRaycaster()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x5CB554", Offset = "0x5CB554", VA = "0x5CB554", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x5CB318", Offset = "0x5CB318", VA = "0x5CB318")]
	private Camera GetCameraForRaycastMode(GvrBasePointer pointer, GvrBasePointer.RaycastMode mode)
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x5CCA30", Offset = "0x5CCA30", VA = "0x5CCA30")]
	private Camera AddDummyCameraToPointer(GvrBasePointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x5CC2A0", Offset = "0x5CC2A0", VA = "0x5CC2A0")]
	private static void Raycast(Canvas canvas, Ray ray, Camera cam, float distance, List<Graphic> results, out Ray finalRay)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x5CCBD4", Offset = "0x5CCBD4", VA = "0x5CCBD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18008C", Offset = "0x18008C")]
	private static int <Raycast>m__0(Graphic g1, Graphic g2)
	{
		return default(int);
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x172274", Offset = "0x172274")]
public class GvrPointerPhysicsRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x2000079")]
	private class HitComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x5D21A0", Offset = "0x5D21A0", VA = "0x5D21A0")]
		public HitComparer()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x5D2D34", Offset = "0x5D2D34", VA = "0x5D2D34", Slot = "4")]
		public int Compare(RaycastHit lhs, RaycastHit rhs)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000341")]
	protected const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x4000342")]
	private const int MAX_RAYCAST_HITS_MAX = 512;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected LayerMask raycasterEventMask;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1759A4", Offset = "0x1759A4")]
	private int maxRaycastHits;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit[] hits;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private HitComparer hitComparer;

	[Token(Token = "0x1700016A")]
	public int MaxRaycastHits
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x5D21A8", Offset = "0x5D21A8", VA = "0x5D21A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x5D21B0", Offset = "0x5D21B0", VA = "0x5D21B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public override Camera eventCamera
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x5D2284", Offset = "0x5D2284", VA = "0x5D2284", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016C")]
	public int finalEventMask
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x5D2334", Offset = "0x5D2334", VA = "0x5D2334")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016D")]
	public LayerMask eventMask
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x5D242C", Offset = "0x5D242C", VA = "0x5D242C")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x5D2434", Offset = "0x5D2434", VA = "0x5D2434")]
		set
		{
		}
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x5D210C", Offset = "0x5D210C", VA = "0x5D210C")]
	protected GvrPointerPhysicsRaycaster()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x5D243C", Offset = "0x5D243C", VA = "0x5D243C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x5D24B0", Offset = "0x5D24B0", VA = "0x5D24B0", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x200007A")]
public class GvrPointerScrollInput
{
	[Token(Token = "0x200007B")]
	private class ScrollInfo
	{
		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isScrollingX;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool isScrollingY;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 initScroll;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 lastScroll;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 scrollVelocity;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public IGvrScrollSettings scrollSettings;

		[Token(Token = "0x1700016E")]
		public bool IsScrolling
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0x5D3D58", Offset = "0x5D3D58", VA = "0x5D3D58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x5D407C", Offset = "0x5D407C", VA = "0x5D407C")]
		public ScrollInfo()
		{
		}
	}

	[Token(Token = "0x4000347")]
	public const string PROPERTY_NAME_INERTIA = "inertia";

	[Token(Token = "0x4000348")]
	public const string PROPERTY_NAME_DECELERATION_RATE = "decelerationRate";

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1759DC", Offset = "0x1759DC")]
	public bool inertia;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175A10", Offset = "0x175A10")]
	public float decelerationRate;

	[Token(Token = "0x400034B")]
	public const float SCROLL_DELTA_MULTIPLIER = 1000f;

	[Token(Token = "0x400034C")]
	private const float CUTOFF_HZ = 10f;

	[Token(Token = "0x400034D")]
	private const float RC = 1f / (20f * (float)Math.PI);

	[Token(Token = "0x400034E")]
	private const float SPEED_CLAMP_RATIO = 0.05f;

	[Token(Token = "0x400034F")]
	private const float SPEED_CLAMP = 50f;

	[Token(Token = "0x4000350")]
	private const float SPEED_CLAMP_SQUARED = 2500f;

	[Token(Token = "0x4000351")]
	private const float INERTIA_THRESHOLD_RATIO = 0.2f;

	[Token(Token = "0x4000352")]
	private const float INERTIA_THRESHOLD = 200f;

	[Token(Token = "0x4000353")]
	private const float INERTIA_THRESHOLD_SQUARED = 40000f;

	[Token(Token = "0x4000354")]
	private const float SLOP_VERTICAL = 165f;

	[Token(Token = "0x4000355")]
	private const float SLOP_HORIZONTAL = 150f;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<GameObject, ScrollInfo> scrollHandlers;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<GameObject> scrollingObjects;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x5CCCBC", Offset = "0x5CCCBC", VA = "0x5CCCBC")]
	public GvrPointerScrollInput()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x5D19F8", Offset = "0x5D19F8", VA = "0x5D19F8")]
	public void HandleScroll(GameObject currentGameObject, PointerEventData pointerData, GvrBasePointer pointer, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x5D2F14", Offset = "0x5D2F14", VA = "0x5D2F14")]
	private void OnTouchingScrollHandler(GameObject currentScrollHandler, PointerEventData pointerData, Vector2 currentScroll, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x5D32EC", Offset = "0x5D32EC", VA = "0x5D32EC")]
	private void OnReleaseScrollHandler(GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x5D3D7C", Offset = "0x5D3D7C", VA = "0x5D3D7C")]
	private void UpdateVelocity(ScrollInfo scrollInfo, Vector2 scrollDisplacement)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x5D33F4", Offset = "0x5D33F4", VA = "0x5D33F4")]
	private void StopScrollingIfNecessary(bool touching, GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x5D3638", Offset = "0x5D3638", VA = "0x5D3638")]
	private void UpdateInertiaScrollHandlers(bool touching, GameObject currentScrollHandler, PointerEventData pointerData, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x5D3A9C", Offset = "0x5D3A9C", VA = "0x5D3A9C")]
	private ScrollInfo AddScrollHandler(GameObject scrollHandler, Vector2 currentScroll)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x5D2E14", Offset = "0x5D2E14", VA = "0x5D2E14")]
	private void RemoveScrollHandler(GameObject scrollHandler)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x5D3EBC", Offset = "0x5D3EBC", VA = "0x5D3EBC")]
	private bool ShouldUseInertia(ScrollInfo scrollInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x5D3F9C", Offset = "0x5D3F9C", VA = "0x5D3F9C")]
	private float GetDecelerationRate(ScrollInfo scrollInfo)
	{
		return default(float);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x5D3BE0", Offset = "0x5D3BE0", VA = "0x5D3BE0")]
	private static bool CanScrollStartX(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x5D3C9C", Offset = "0x5D3C9C", VA = "0x5D3C9C")]
	private static bool CanScrollStartY(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}
}
[Token(Token = "0x200007C")]
public class GvrScrollSettings : MonoBehaviour, IGvrScrollSettings
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175A44", Offset = "0x175A44")]
	public bool inertiaOverride;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175A78", Offset = "0x175A78")]
	public float decelerationRateOverride;

	[Token(Token = "0x1700016F")]
	public bool InertiaOverride
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x5D528C", Offset = "0x5D528C", VA = "0x5D528C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public float DecelerationRateOverride
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x5D5294", Offset = "0x5D5294", VA = "0x5D5294", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x5D5270", Offset = "0x5D5270", VA = "0x5D5270")]
	public GvrScrollSettings()
	{
	}
}
[Token(Token = "0x200007D")]
public interface IGvrScrollSettings
{
	[Token(Token = "0x17000171")]
	bool InertiaOverride
	{
		[Token(Token = "0x6000515")]
		get;
	}

	[Token(Token = "0x17000172")]
	float DecelerationRateOverride
	{
		[Token(Token = "0x6000516")]
		get;
	}
}
[Token(Token = "0x200007E")]
public class GvrAllEventsTrigger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007F")]
	public class TriggerEvent : UnityEvent<GameObject, PointerEventData>
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x3491F0", Offset = "0x3491F0", VA = "0x3491F0")]
		public TriggerEvent()
		{
		}
	}

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TriggerEvent OnPointerClick;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TriggerEvent OnPointerDown;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TriggerEvent OnPointerUp;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TriggerEvent OnPointerEnter;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TriggerEvent OnPointerExit;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TriggerEvent OnScroll;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool listenersAdded;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x348AD8", Offset = "0x348AD8", VA = "0x348AD8")]
	public GvrAllEventsTrigger()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x348AE0", Offset = "0x348AE0", VA = "0x348AE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x348CD4", Offset = "0x348CD4", VA = "0x348CD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x348EBC", Offset = "0x348EBC", VA = "0x348EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x348AE4", Offset = "0x348AE4", VA = "0x348AE4")]
	private void AddListeners()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x348CD8", Offset = "0x348CD8", VA = "0x348CD8")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x348EC0", Offset = "0x348EC0", VA = "0x348EC0")]
	private void OnPointerClickHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x348F48", Offset = "0x348F48", VA = "0x348F48")]
	private void OnPointerDownHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x348FD0", Offset = "0x348FD0", VA = "0x348FD0")]
	private void OnPointerUpHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x349058", Offset = "0x349058", VA = "0x349058")]
	private void OnPointerEnterHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x3490E0", Offset = "0x3490E0", VA = "0x3490E0")]
	private void OnPointerExitHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x349168", Offset = "0x349168", VA = "0x349168")]
	private void OnScrollHandler(GameObject target, PointerEventData eventData)
	{
	}
}
[Token(Token = "0x2000080")]
public class GvrEventExecutor : IGvrEventExecutor
{
	[Token(Token = "0x2000081")]
	public delegate void EventDelegate(GameObject target, PointerEventData eventData);

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Dictionary<Type, EventDelegate> eventTable;

	[Token(Token = "0x14000006")]
	public event EventDelegate OnPointerClick
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x5C0DC4", Offset = "0x5C0DC4", VA = "0x5C0DC4")]
		add
		{
		}
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x5C0E30", Offset = "0x5C0E30", VA = "0x5C0E30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event EventDelegate OnPointerDown
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x5C0E9C", Offset = "0x5C0E9C", VA = "0x5C0E9C")]
		add
		{
		}
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x5C0F08", Offset = "0x5C0F08", VA = "0x5C0F08")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event EventDelegate OnPointerUp
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x5C0F74", Offset = "0x5C0F74", VA = "0x5C0F74")]
		add
		{
		}
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x5C0FE0", Offset = "0x5C0FE0", VA = "0x5C0FE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event EventDelegate OnPointerEnter
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x5C104C", Offset = "0x5C104C", VA = "0x5C104C")]
		add
		{
		}
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x5C10B8", Offset = "0x5C10B8", VA = "0x5C10B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event EventDelegate OnPointerExit
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x5C1124", Offset = "0x5C1124", VA = "0x5C1124")]
		add
		{
		}
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x5C1190", Offset = "0x5C1190", VA = "0x5C1190")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event EventDelegate OnScroll
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x5C11FC", Offset = "0x5C11FC", VA = "0x5C11FC")]
		add
		{
		}
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x5C1268", Offset = "0x5C1268", VA = "0x5C1268")]
		remove
		{
		}
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x5C0D38", Offset = "0x5C0D38", VA = "0x5C0D38")]
	public GvrEventExecutor()
	{
	}

	[Token(Token = "0x6000531")]
	public bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler
	{
		return default(bool);
	}

	[Token(Token = "0x6000532")]
	public GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	public GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	private void CallEventDelegate<T>(GameObject target, BaseEventData eventData) where T : IEventSystemHandler
	{
	}

	[Token(Token = "0x6000535")]
	private void AddEventDelegate<T>(EventDelegate eventDelegate)
	{
	}

	[Token(Token = "0x6000536")]
	private void RemoveEventDelegate<T>(EventDelegate eventDelegate)
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1722C4", Offset = "0x1722C4")]
public class GvrPointerInputModule : BaseInputModule, IGvrInputModuleController
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175AAC", Offset = "0x175AAC")]
	public bool vrModeOnly;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175AE0", Offset = "0x175AE0")]
	public GvrPointerScrollInput scrollInput;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175B38", Offset = "0x175B38")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175B38", Offset = "0x175B38")]
	private GvrPointerInputModuleImpl <Impl>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175B6C", Offset = "0x175B6C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175B6C", Offset = "0x175B6C")]
	private GvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x17000173")]
	public GvrPointerInputModuleImpl Impl
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x5CCD90", Offset = "0x5CCD90", VA = "0x5CCD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18009C", Offset = "0x18009C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x5CCD98", Offset = "0x5CCD98", VA = "0x5CCD98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1800AC", Offset = "0x1800AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public GvrEventExecutor EventExecutor
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x5CCDA0", Offset = "0x5CCDA0", VA = "0x5CCDA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1800BC", Offset = "0x1800BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x5CCDA8", Offset = "0x5CCDA8", VA = "0x5CCDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1800CC", Offset = "0x1800CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public new EventSystem eventSystem
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x5CCDB0", Offset = "0x5CCDB0", VA = "0x5CCDB0", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000176")]
	public List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x5CCDB8", Offset = "0x5CCDB8", VA = "0x5CCDB8", Slot = "27")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000177")]
	public static GvrBasePointer Pointer
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x5BAF24", Offset = "0x5BAF24", VA = "0x5BAF24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x5CCF40", Offset = "0x5CCF40", VA = "0x5CCF40")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public static RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x5B94D4", Offset = "0x5B94D4", VA = "0x5B94D4")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x5CCC44", Offset = "0x5CCC44", VA = "0x5CCC44")]
	public GvrPointerInputModule()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x5BACC4", Offset = "0x5BACC4", VA = "0x5BACC4")]
	public static void OnPointerCreated(GvrBasePointer createdPointer)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x5CD0A4", Offset = "0x5CD0A4", VA = "0x5CD0A4")]
	public static GvrEventExecutor FindEventExecutor()
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x5CCDC0", Offset = "0x5CCDC0", VA = "0x5CCDC0")]
	public static GvrPointerInputModule FindInputModule()
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x5CD15C", Offset = "0x5CD15C", VA = "0x5CD15C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x5CD28C", Offset = "0x5CD28C", VA = "0x5CD28C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x5CD504", Offset = "0x5CD504", VA = "0x5CD504", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x5CD5D4", Offset = "0x5CD5D4", VA = "0x5CD5D4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x5CD7DC", Offset = "0x5CD7DC", VA = "0x5CD7DC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x5CD888", Offset = "0x5CD888", VA = "0x5CD888", Slot = "28")]
	public bool ShouldActivate()
	{
		return default(bool);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x5CD890", Offset = "0x5CD890", VA = "0x5CD890", Slot = "29")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x5CD898", Offset = "0x5CD898", VA = "0x5CD898", Slot = "30")]
	public new GameObject FindCommonRoot(GameObject g1, GameObject g2)
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x5CD8A8", Offset = "0x5CD8A8", VA = "0x5CD8A8", Slot = "31")]
	public new BaseEventData GetBaseEventData()
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x5CD8B0", Offset = "0x5CD8B0", VA = "0x5CD8B0", Slot = "32")]
	public new RaycastResult FindFirstRaycast(List<RaycastResult> candidates)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x5CD604", Offset = "0x5CD604", VA = "0x5CD604")]
	private void UpdateImplProperties()
	{
	}
}
[Token(Token = "0x2000083")]
public class GvrPointerInputModuleImpl
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175BA0", Offset = "0x175BA0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175BA0", Offset = "0x175BA0")]
	private IGvrInputModuleController <ModuleController>k__BackingField;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175BD4", Offset = "0x175BD4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175BD4", Offset = "0x175BD4")]
	private IGvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175C08", Offset = "0x175C08")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175C08", Offset = "0x175C08")]
	private bool <VrModeOnly>k__BackingField;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175C3C", Offset = "0x175C3C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175C3C", Offset = "0x175C3C")]
	private GvrPointerScrollInput <ScrollInput>k__BackingField;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175C70", Offset = "0x175C70")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175C70", Offset = "0x175C70")]
	private PointerEventData <CurrentEventData>k__BackingField;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GvrBasePointer pointer;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 lastPose;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isPointerHovering;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isActive;

	[Token(Token = "0x17000179")]
	public IGvrInputModuleController ModuleController
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x5CD8E8", Offset = "0x5CD8E8", VA = "0x5CD8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1800DC", Offset = "0x1800DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x5CD8D8", Offset = "0x5CD8D8", VA = "0x5CD8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1800EC", Offset = "0x1800EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public IGvrEventExecutor EventExecutor
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x5CD8F0", Offset = "0x5CD8F0", VA = "0x5CD8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1800FC", Offset = "0x1800FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x5CD8E0", Offset = "0x5CD8E0", VA = "0x5CD8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18010C", Offset = "0x18010C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public bool VrModeOnly
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x5CD8F8", Offset = "0x5CD8F8", VA = "0x5CD8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18011C", Offset = "0x18011C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x5CD8D0", Offset = "0x5CD8D0", VA = "0x5CD8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18012C", Offset = "0x18012C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public GvrPointerScrollInput ScrollInput
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x5CD900", Offset = "0x5CD900", VA = "0x5CD900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18013C", Offset = "0x18013C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x5CD8C8", Offset = "0x5CD8C8", VA = "0x5CD8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18014C", Offset = "0x18014C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public PointerEventData CurrentEventData
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x5CD154", Offset = "0x5CD154", VA = "0x5CD154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18015C", Offset = "0x18015C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x5CD908", Offset = "0x5CD908", VA = "0x5CD908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x18016C", Offset = "0x18016C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public GvrBasePointer Pointer
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x5CCF38", Offset = "0x5CCF38", VA = "0x5CCF38")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x5CD000", Offset = "0x5CD000", VA = "0x5CD000")]
		set
		{
		}
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x5CD880", Offset = "0x5CD880", VA = "0x5CD880")]
	public GvrPointerInputModuleImpl()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x5CD184", Offset = "0x5CD184", VA = "0x5CD184")]
	public bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x5CD2B4", Offset = "0x5CD2B4", VA = "0x5CD2B4")]
	public void DeactivateModule()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x5CD52C", Offset = "0x5CD52C", VA = "0x5CD52C")]
	public bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x5CD678", Offset = "0x5CD678", VA = "0x5CD678")]
	public void Process()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x5CEE34", Offset = "0x5CEE34", VA = "0x5CEE34")]
	private void CastRay()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x5CFE88", Offset = "0x5CFE88", VA = "0x5CFE88")]
	private void UpdateCurrentObject(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x5D0510", Offset = "0x5D0510", VA = "0x5D0510")]
	private void UpdatePointer(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x5D1FFC", Offset = "0x5D1FFC", VA = "0x5D1FFC")]
	private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
	{
		return default(bool);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x5D0B64", Offset = "0x5D0B64", VA = "0x5D0B64")]
	private void HandleDrag()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x5CDA20", Offset = "0x5CDA20", VA = "0x5CDA20")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x5D1290", Offset = "0x5D1290", VA = "0x5D1290")]
	private void HandleTriggerDown()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x5CEDB0", Offset = "0x5CEDB0", VA = "0x5CEDB0")]
	private GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x5CE21C", Offset = "0x5CE21C", VA = "0x5CE21C")]
	private void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x5CD910", Offset = "0x5CD910", VA = "0x5CD910")]
	private void TryExitPointer()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x5CECF0", Offset = "0x5CECF0", VA = "0x5CECF0")]
	private bool IsPointerActiveAndAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x5D1DB0", Offset = "0x5D1DB0", VA = "0x5D1DB0")]
	private void RaycastAll()
	{
	}
}
[Token(Token = "0x2000084")]
public interface IGvrEventExecutor
{
	[Token(Token = "0x6000570")]
	bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler;

	[Token(Token = "0x6000571")]
	GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler;

	[Token(Token = "0x6000572")]
	GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler;
}
[Token(Token = "0x2000085")]
public interface IGvrInputModuleController
{
	[Token(Token = "0x1700017F")]
	EventSystem eventSystem
	{
		[Token(Token = "0x6000573")]
		get;
	}

	[Token(Token = "0x17000180")]
	List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x6000574")]
		get;
	}

	[Token(Token = "0x6000575")]
	bool ShouldActivate();

	[Token(Token = "0x6000576")]
	void Deactivate();

	[Token(Token = "0x6000577")]
	GameObject FindCommonRoot(GameObject g1, GameObject g2);

	[Token(Token = "0x6000578")]
	BaseEventData GetBaseEventData();

	[Token(Token = "0x6000579")]
	RaycastResult FindFirstRaycast(List<RaycastResult> candidates);
}
[Token(Token = "0x2000086")]
public class GvrCardboardHelpers
{
	[Token(Token = "0x600057A")]
	[Address(RVA = "0x5BB25C", Offset = "0x5BB25C", VA = "0x5BB25C")]
	public GvrCardboardHelpers()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x5BB264", Offset = "0x5BB264", VA = "0x5BB264")]
	public static void Recenter()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x5BB7AC", Offset = "0x5BB7AC", VA = "0x5BB7AC")]
	public static void SetViewerProfile(string viewerProfileUri)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600057D")]
	[Address(RVA = "0x5BB6A8", Offset = "0x5BB6A8", VA = "0x5BB6A8")]
	private static extern void gvr_reset_tracking(IntPtr gvr_context);

	[PreserveSig]
	[Token(Token = "0x600057E")]
	[Address(RVA = "0x5BB868", Offset = "0x5BB868", VA = "0x5BB868")]
	private static extern void gvr_set_default_viewer_profile(IntPtr gvr_context, string viewer_profile_uri);
}
[Token(Token = "0x2000087")]
public class GvrEditorEmulator : MonoBehaviour
{
	[Token(Token = "0x600057F")]
	[Address(RVA = "0x5C0D30", Offset = "0x5C0D30", VA = "0x5C0D30")]
	public GvrEditorEmulator()
	{
	}
}
[Token(Token = "0x2000088")]
public static class GvrSettings
{
	[Token(Token = "0x2000089")]
	public enum ViewerPlatformType
	{
		[Token(Token = "0x400037C")]
		Error = -1,
		[Token(Token = "0x400037D")]
		Cardboard,
		[Token(Token = "0x400037E")]
		Daydream
	}

	[Token(Token = "0x200008A")]
	public enum UserPrefsHandedness
	{
		[Token(Token = "0x4000380")]
		Error = -1,
		[Token(Token = "0x4000381")]
		Right,
		[Token(Token = "0x4000382")]
		Left
	}

	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1739D4", Offset = "0x1739D4")]
	private sealed class <SetSustainedPerformanceMode>c__AnonStorey0
	{
		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AndroidJavaObject androidWindow;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool enabled;

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x5D5A4C", Offset = "0x5D5A4C", VA = "0x5D5A4C")]
		public <SetSustainedPerformanceMode>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x5D5A54", Offset = "0x5D5A54", VA = "0x5D5A54")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000375")]
	public const string VR_SDK_NONE = "None";

	[Token(Token = "0x4000376")]
	public const string VR_SDK_DAYDREAM = "daydream";

	[Token(Token = "0x4000377")]
	public const string VR_SDK_CARDBOARD = "cardboard";

	[Token(Token = "0x4000378")]
	private const string METHOD_GET_WINDOW = "getWindow";

	[Token(Token = "0x4000379")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x400037A")]
	private const string METHOD_SET_SUSTAINED_PERFORMANCE_MODE = "setSustainedPerformanceMode";

	[Token(Token = "0x17000181")]
	public static ViewerPlatformType ViewerPlatform
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x5D529C", Offset = "0x5D529C", VA = "0x5D529C")]
		get
		{
			return default(ViewerPlatformType);
		}
	}

	[Token(Token = "0x17000182")]
	public static bool SustainedPerformanceMode
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x5D5414", Offset = "0x5D5414", VA = "0x5D5414")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public static UserPrefsHandedness Handedness
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x5D5738", Offset = "0x5D5738", VA = "0x5D5738")]
		get
		{
			return default(UserPrefsHandedness);
		}
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x5D5418", Offset = "0x5D5418", VA = "0x5D5418")]
	private static void SetSustainedPerformanceMode(bool enabled)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x5BB314", Offset = "0x5BB314", VA = "0x5BB314")]
	public static IntPtr GetValidGvrNativePtrOrLogError()
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000585")]
	[Address(RVA = "0x5D5858", Offset = "0x5D5858", VA = "0x5D5858")]
	private static extern IntPtr gvr_get_user_prefs(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000586")]
	[Address(RVA = "0x5D5310", Offset = "0x5D5310", VA = "0x5D5310")]
	private static extern int gvr_get_viewer_type(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000587")]
	[Address(RVA = "0x5D5960", Offset = "0x5D5960", VA = "0x5D5960")]
	private static extern int gvr_user_prefs_get_controller_handedness(IntPtr gvrUserPrefsPtr);
}
[Token(Token = "0x200008B")]
public class GvrUnitySdkVersion
{
	[Token(Token = "0x4000383")]
	public const string GVR_SDK_VERSION = "1.110.0";

	[Token(Token = "0x4000384")]
	private const string VERSION_HEADER = "GVR SDK for Unity version: ";

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x4FE824", Offset = "0x4FE824", VA = "0x4FE824")]
	public GvrUnitySdkVersion()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x4FE82C", Offset = "0x4FE82C", VA = "0x4FE82C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x18017C", Offset = "0x18017C")]
	private static void LogGvrUnitySdkVersion()
	{
	}
}
[Token(Token = "0x200008C")]
public class GvrHeadset : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	public delegate void OnSafetyRegionEvent(bool enter);

	[Token(Token = "0x200008E")]
	public delegate void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation);

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1739E4", Offset = "0x1739E4")]
	private sealed class <EndOfFrame>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GvrHeadset $this;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170004CD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x5C34E8", Offset = "0x5C34E8", VA = "0x5C34E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x5C34F0", Offset = "0x5C34F0", VA = "0x5C34F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x5C3444", Offset = "0x5C3444", VA = "0x5C3444")]
		[DebuggerHidden]
		public <EndOfFrame>c__Iterator0()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x5C344C", Offset = "0x5C344C", VA = "0x5C344C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x5C34F8", Offset = "0x5C34F8", VA = "0x5C34F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x5C350C", Offset = "0x5C350C", VA = "0x5C350C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrHeadset instance;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IHeadsetProvider headsetProvider;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HeadsetState headsetState;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator standaloneUpdate;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OnSafetyRegionEvent safetyRegionDelegate;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private OnRecenterEvent recenterDelegate;

	[Token(Token = "0x17000184")]
	public static bool SupportsPositionalTracking
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x5C2010", Offset = "0x5C2010", VA = "0x5C2010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000C")]
	public static event OnSafetyRegionEvent OnSafetyRegionChange
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x5C1A10", Offset = "0x5C1A10", VA = "0x5C1A10")]
		add
		{
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x5C1B90", Offset = "0x5C1B90", VA = "0x5C1B90")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event OnRecenterEvent OnRecenter
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x5C1D10", Offset = "0x5C1D10", VA = "0x5C1D10")]
		add
		{
		}
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x5C1E90", Offset = "0x5C1E90", VA = "0x5C1E90")]
		remove
		{
		}
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x5C1988", Offset = "0x5C1988", VA = "0x5C1988")]
	private GvrHeadset()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x5C22B0", Offset = "0x5C22B0", VA = "0x5C22B0")]
	public static bool TryGetFloorHeight(ref float floorHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x5C2418", Offset = "0x5C2418", VA = "0x5C2418")]
	public static bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x5C2588", Offset = "0x5C2588", VA = "0x5C2588")]
	public static bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x5C26F0", Offset = "0x5C26F0", VA = "0x5C26F0")]
	public static bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x5C2858", Offset = "0x5C2858", VA = "0x5C2858")]
	public static bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x5C29C0", Offset = "0x5C29C0", VA = "0x5C29C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x5C2AF0", Offset = "0x5C2AF0", VA = "0x5C2AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x5C2BAC", Offset = "0x5C2BAC", VA = "0x5C2BAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x5C2BD8", Offset = "0x5C2BD8", VA = "0x5C2BD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x5C2C48", Offset = "0x5C2C48", VA = "0x5C2C48")]
	private void UpdateStandalone()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x5C2B28", Offset = "0x5C2B28", VA = "0x5C2B28")]
	[DebuggerHidden]
	private IEnumerator EndOfFrame()
	{
		return null;
	}
}
[Token(Token = "0x200008F")]
public enum GvrEventType
{
	[Token(Token = "0x400038D")]
	Invalid = -1,
	[Token(Token = "0x400038E")]
	Recenter = 1,
	[Token(Token = "0x400038F")]
	SafetyRegionExit = 2,
	[Token(Token = "0x4000390")]
	SafetyRegionEnter = 3
}
[Token(Token = "0x2000090")]
public enum GvrRecenterEventType
{
	[Token(Token = "0x4000392")]
	Invalid = -1,
	[Token(Token = "0x4000393")]
	RecenterEventRestart = 1,
	[Token(Token = "0x4000394")]
	RecenterEventAligned = 2
}
[Token(Token = "0x2000091")]
public enum GvrRecenterFlags
{
	[Token(Token = "0x4000396")]
	None
}
[Token(Token = "0x2000092")]
public enum GvrErrorType
{
	[Token(Token = "0x4000398")]
	None = 0,
	[Token(Token = "0x4000399")]
	ControllerCreateFailed = 2,
	[Token(Token = "0x400039A")]
	NoFrameAavilable = 3,
	[Token(Token = "0x400039B")]
	NoEventAvailable = 1000000,
	[Token(Token = "0x400039C")]
	NoPropertyAvailable = 1000001
}
[Token(Token = "0x2000093")]
public enum GvrSafetyRegionType
{
	[Token(Token = "0x400039E")]
	None,
	[Token(Token = "0x400039F")]
	Cylinder
}
namespace Gvr.Internal
{
	[Token(Token = "0x2000094")]
	internal static class HeadsetProviderFactory
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x347864", Offset = "0x347864", VA = "0x347864")]
		internal static IHeadsetProvider CreateProvider()
		{
			return null;
		}
	}
	[Token(Token = "0x2000095")]
	internal enum gvr_feature
	{
		[Token(Token = "0x40003A1")]
		HeadPose6dof = 3
	}
	[Token(Token = "0x2000096")]
	internal enum gvr_property_type
	{
		[Token(Token = "0x40003A3")]
		TrackingFloorHeight = 1,
		[Token(Token = "0x40003A4")]
		RecenterTransform,
		[Token(Token = "0x40003A5")]
		SafetyRegion,
		[Token(Token = "0x40003A6")]
		SafetyCylinderInnerRadius,
		[Token(Token = "0x40003A7")]
		SafetyCylinderOuterRadius
	}
	[Token(Token = "0x2000097")]
	internal enum gvr_value_type
	{
		[Token(Token = "0x40003A9")]
		None,
		[Token(Token = "0x40003AA")]
		Float,
		[Token(Token = "0x40003AB")]
		Double,
		[Token(Token = "0x40003AC")]
		Int,
		[Token(Token = "0x40003AD")]
		Int64,
		[Token(Token = "0x40003AE")]
		Flags,
		[Token(Token = "0x40003AF")]
		Sizei,
		[Token(Token = "0x40003B0")]
		Recti,
		[Token(Token = "0x40003B1")]
		Rectf,
		[Token(Token = "0x40003B2")]
		Vec2f,
		[Token(Token = "0x40003B3")]
		Vec3f,
		[Token(Token = "0x40003B4")]
		Quat,
		[Token(Token = "0x40003B5")]
		Mat4f,
		[Token(Token = "0x40003B6")]
		ClockTimePoint
	}
	[Token(Token = "0x2000098")]
	internal enum gvr_recenter_flags
	{
		[Token(Token = "0x40003B8")]
		None
	}
	[Token(Token = "0x2000099")]
	internal class AndroidNativeHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x200009A")]
		private class GvrValue
		{
			[Token(Token = "0x40003C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly int HEADER_SIZE;

			[Token(Token = "0x40003C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private gvr_value_header valueHeader;

			[Token(Token = "0x40003C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private byte[] buffer;

			[Token(Token = "0x40003C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IntPtr bufferPtr;

			[Token(Token = "0x40003C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private IntPtr valuePtr;

			[Token(Token = "0x40003CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GCHandle bufferHandle;

			[Token(Token = "0x17000186")]
			public IntPtr BufferPtr
			{
				[Token(Token = "0x60005B6")]
				[Address(RVA = "0x34184C", Offset = "0x34184C", VA = "0x34184C")]
				get
				{
					return default(IntPtr);
				}
			}

			[Token(Token = "0x17000187")]
			public gvr_value_type TypeEnum
			{
				[Token(Token = "0x60005B7")]
				[Address(RVA = "0x3419FC", Offset = "0x3419FC", VA = "0x3419FC")]
				get
				{
					return default(gvr_value_type);
				}
			}

			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x34007C", Offset = "0x34007C", VA = "0x34007C")]
			public GvrValue()
			{
			}

			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x341A28", Offset = "0x341A28", VA = "0x341A28", Slot = "1")]
			~GvrValue()
			{
			}

			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x34196C", Offset = "0x34196C", VA = "0x34196C")]
			public void Parse()
			{
			}

			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x3415C8", Offset = "0x3415C8", VA = "0x3415C8")]
			public int ToInt32()
			{
				return default(int);
			}

			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x341A94", Offset = "0x341A94", VA = "0x341A94")]
			public long ToInt64()
			{
				return default(long);
			}

			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x34114C", Offset = "0x34114C", VA = "0x34114C")]
			public float ToFloat()
			{
				return default(float);
			}

			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x341B64", Offset = "0x341B64", VA = "0x341B64")]
			public double ToDouble()
			{
				return default(double);
			}

			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x341C34", Offset = "0x341C34", VA = "0x341C34")]
			public Vector2 ToVector2()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x341D34", Offset = "0x341D34", VA = "0x341D34")]
			public Vector3 ToVector3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x341E34", Offset = "0x341E34", VA = "0x341E34")]
			public Vector4 ToVector4()
			{
				return default(Vector4);
			}

			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x341F2C", Offset = "0x341F2C", VA = "0x341F2C")]
			public Quaternion ToQuaternion()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x342024", Offset = "0x342024", VA = "0x342024")]
			public gvr_rectf ToGvrRectf()
			{
				return default(gvr_rectf);
			}

			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x34211C", Offset = "0x34211C", VA = "0x34211C")]
			public gvr_recti ToGvrRecti()
			{
				return default(gvr_recti);
			}

			[Token(Token = "0x60005C3")]
			[Address(RVA = "0x341378", Offset = "0x341378", VA = "0x341378")]
			public Matrix4x4 ToMatrix4x4()
			{
				return default(Matrix4x4);
			}
		}

		[StructLayout(0)]
		[Token(Token = "0x200009B")]
		private class gvr_recenter_event_data
		{
			[Token(Token = "0x40003CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int recenter_event_type;

			[Token(Token = "0x40003CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal uint recenter_event_flags;

			[Token(Token = "0x40003CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float[] pose_transform;

			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x3401C4", Offset = "0x3401C4", VA = "0x3401C4")]
			public gvr_recenter_event_data()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x200009C")]
		private class gvr_event_header
		{
			[Token(Token = "0x40003CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal long timestamp;

			[Token(Token = "0x40003CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int type;

			[Token(Token = "0x40003D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int flags;

			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x3401BC", Offset = "0x3401BC", VA = "0x3401BC")]
			public gvr_event_header()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x200009D")]
		private class gvr_value_header
		{
			[Token(Token = "0x40003D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal gvr_value_type value_type;

			[Token(Token = "0x40003D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int flags;

			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x341A20", Offset = "0x341A20", VA = "0x341A20")]
			public gvr_value_header()
			{
			}
		}

		[Token(Token = "0x200009E")]
		public struct gvr_sizei
		{
			[Token(Token = "0x40003D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int width;

			[Token(Token = "0x40003D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int height;
		}

		[Token(Token = "0x200009F")]
		public struct gvr_recti
		{
			[Token(Token = "0x40003D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int left;

			[Token(Token = "0x40003D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int right;

			[Token(Token = "0x40003D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int bottom;

			[Token(Token = "0x40003D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int top;
		}

		[Token(Token = "0x20000A0")]
		public struct gvr_rectf
		{
			[Token(Token = "0x40003D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float left;

			[Token(Token = "0x40003DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float right;

			[Token(Token = "0x40003DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float bottom;

			[Token(Token = "0x40003DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float top;
		}

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr gvrContextPtr;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GvrValue gvrValue;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private gvr_event_header gvrEventHeader;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private gvr_recenter_event_data gvrRecenterEventData;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] gvrEventBuffer;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GCHandle gvrEventHandle;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IntPtr gvrEventPtr;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private IntPtr gvrPropertiesPtr;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int supportsPositionalTracking;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private MutablePose3D transientRecenteredPose3d;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Matrix4x4 MATRIX4X4_IDENTITY;

		[Token(Token = "0x40003C4")]
		private const string DLL_NAME = "gvr";

		[Token(Token = "0x17000185")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x340238", Offset = "0x340238", VA = "0x340238", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x33FE9C", Offset = "0x33FE9C", VA = "0x33FE9C")]
		internal AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x340398", Offset = "0x340398", VA = "0x340398", Slot = "1")]
		~AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x340404", Offset = "0x340404", VA = "0x340404", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x340AAC", Offset = "0x340AAC", VA = "0x340AAC", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x34121C", Offset = "0x34121C", VA = "0x34121C", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x341574", Offset = "0x341574", VA = "0x341574", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x341698", Offset = "0x341698", VA = "0x341698", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x3416EC", Offset = "0x3416EC", VA = "0x3416EC", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x340B00", Offset = "0x340B00", VA = "0x340B00")]
		private bool _GvrGetProperty(gvr_property_type propertyType, GvrValue valueOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x3407B4", Offset = "0x3407B4", VA = "0x3407B4")]
		private void _HandleRecenterEvent(ref HeadsetState state, gvr_recenter_event_data eventData)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x341740", Offset = "0x341740", VA = "0x341740")]
		private gvr_value_type GetPropertyValueType(gvr_property_type propertyType)
		{
			return default(gvr_value_type);
		}

		[PreserveSig]
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x340278", Offset = "0x340278", VA = "0x340278")]
		private static extern bool gvr_is_feature_supported(IntPtr gvr_context, int feature);

		[PreserveSig]
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x3406B0", Offset = "0x3406B0", VA = "0x3406B0")]
		private static extern int gvr_poll_event(IntPtr gvr_context, IntPtr event_out);

		[PreserveSig]
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x341770", Offset = "0x341770", VA = "0x341770")]
		private static extern IntPtr gvr_get_current_properties(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x341858", Offset = "0x341858", VA = "0x341858")]
		private static extern int gvr_properties_get(IntPtr gvr_properties, gvr_property_type property_type, IntPtr value_out);
	}
	[Token(Token = "0x20000A1")]
	internal class DummyHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private HeadsetState dummyState;

		[Token(Token = "0x17000188")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x345658", Offset = "0x345658", VA = "0x345658", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x345650", Offset = "0x345650", VA = "0x345650")]
		public DummyHeadsetProvider()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x345660", Offset = "0x345660", VA = "0x345660", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x345664", Offset = "0x345664", VA = "0x345664", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x34566C", Offset = "0x34566C", VA = "0x34566C", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x345674", Offset = "0x345674", VA = "0x345674", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x34567C", Offset = "0x34567C", VA = "0x34567C", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x345684", Offset = "0x345684", VA = "0x345684", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A2")]
	internal class EditorHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private HeadsetState dummyState;

		[Token(Token = "0x17000189")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0x345778", Offset = "0x345778", VA = "0x345778", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x345770", Offset = "0x345770", VA = "0x345770")]
		public EditorHeadsetProvider()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x345780", Offset = "0x345780", VA = "0x345780", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x345784", Offset = "0x345784", VA = "0x345784", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x345798", Offset = "0x345798", VA = "0x345798", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x3457A0", Offset = "0x3457A0", VA = "0x3457A0", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x3457B0", Offset = "0x3457B0", VA = "0x3457B0", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x3457C4", Offset = "0x3457C4", VA = "0x3457C4", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A3")]
	internal struct HeadsetState
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GvrEventType eventType;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int eventFlags;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal long eventTimestampNs;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrRecenterEventType recenterEventType;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal uint recenterEventFlags;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 recenteredPosition;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Quaternion recenteredRotation;

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1C49F4", Offset = "0x1C49F4", VA = "0x1C49F4")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	internal interface IHeadsetProvider
	{
		[Token(Token = "0x1700018A")]
		bool SupportsPositionalTracking
		{
			[Token(Token = "0x60005D9")]
			get;
		}

		[Token(Token = "0x60005DA")]
		void PollEventState(ref HeadsetState outState);

		[Token(Token = "0x60005DB")]
		bool TryGetFloorHeight(ref float floorHeight);

		[Token(Token = "0x60005DC")]
		bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation);

		[Token(Token = "0x60005DD")]
		bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType);

		[Token(Token = "0x60005DE")]
		bool TryGetSafetyCylinderInnerRadius(ref float innerRadius);

		[Token(Token = "0x60005DF")]
		bool TryGetSafetyCylinderOuterRadius(ref float outerRadius);
	}
	[Token(Token = "0x20000A5")]
	public class InstantPreview : MonoBehaviour
	{
		[Token(Token = "0x20000A6")]
		public enum Resolutions
		{
			[Token(Token = "0x40003EF")]
			Big,
			[Token(Token = "0x40003F0")]
			Regular,
			[Token(Token = "0x40003F1")]
			WindowSized
		}

		[Token(Token = "0x20000A7")]
		private struct ResolutionSize
		{
			[Token(Token = "0x40003F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int width;

			[Token(Token = "0x40003F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int height;
		}

		[Token(Token = "0x20000A8")]
		public enum MultisampleCounts
		{
			[Token(Token = "0x40003F5")]
			One,
			[Token(Token = "0x40003F6")]
			Two,
			[Token(Token = "0x40003F7")]
			Four,
			[Token(Token = "0x40003F8")]
			Eight
		}

		[Token(Token = "0x20000A9")]
		public enum BitRates
		{
			[Token(Token = "0x40003FA")]
			_2000,
			[Token(Token = "0x40003FB")]
			_4000,
			[Token(Token = "0x40003FC")]
			_8000,
			[Token(Token = "0x40003FD")]
			_16000,
			[Token(Token = "0x40003FE")]
			_24000,
			[Token(Token = "0x40003FF")]
			_32000
		}

		[Token(Token = "0x20000AA")]
		private struct UnityRect
		{
			[Token(Token = "0x4000400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float right;

			[Token(Token = "0x4000401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float left;

			[Token(Token = "0x4000402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float top;

			[Token(Token = "0x4000403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float bottom;
		}

		[Token(Token = "0x20000AB")]
		private struct UnityEyeViews
		{
			[Token(Token = "0x4000404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 leftEyePose;

			[Token(Token = "0x4000405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Matrix4x4 rightEyePose;

			[Token(Token = "0x4000406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public UnityRect leftEyeViewSize;

			[Token(Token = "0x4000407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public UnityRect rightEyeViewSize;
		}

		[Token(Token = "0x40003E6")]
		private const string NoDevicesFoundAdbResult = "error: no devices/emulators found";

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175CA4", Offset = "0x175CA4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175CA4", Offset = "0x175CA4")]
		private static InstantPreview <Instance>k__BackingField;

		[Token(Token = "0x40003E8")]
		internal const string dllName = "instant_preview_unity_plugin";

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175CD8", Offset = "0x175CD8")]
		public Resolutions OutputResolution;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175D0C", Offset = "0x175D0C")]
		public MultisampleCounts MultisampleCount;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175D40", Offset = "0x175D40")]
		public BitRates BitRate;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x175D74", Offset = "0x175D74")]
		public bool InstallApkOnRun;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Object InstantPreviewApk;

		[Token(Token = "0x1700018B")]
		internal static InstantPreview Instance
		{
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0x3479EC", Offset = "0x3479EC", VA = "0x3479EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1801A0", Offset = "0x1801A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0x347A50", Offset = "0x347A50", VA = "0x347A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1801B0", Offset = "0x1801B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public bool IsCurrentlyConnected
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0x347AB4", Offset = "0x347AB4", VA = "0x347AB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x3479D4", Offset = "0x3479D4", VA = "0x3479D4")]
		public InstantPreview()
		{
		}
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
public class InstantPreviewHelper : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AdbPath;

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x519940", Offset = "0x519940", VA = "0x519940")]
	public InstantPreviewHelper()
	{
	}
}
[Token(Token = "0x20000AD")]
public enum GvrKeyboardEvent
{
	[Token(Token = "0x400040A")]
	GVR_KEYBOARD_ERROR_UNKNOWN,
	[Token(Token = "0x400040B")]
	GVR_KEYBOARD_ERROR_SERVICE_NOT_CONNECTED,
	[Token(Token = "0x400040C")]
	GVR_KEYBOARD_ERROR_NO_LOCALES_FOUND,
	[Token(Token = "0x400040D")]
	GVR_KEYBOARD_ERROR_SDK_LOAD_FAILED,
	[Token(Token = "0x400040E")]
	GVR_KEYBOARD_SHOWN,
	[Token(Token = "0x400040F")]
	GVR_KEYBOARD_HIDDEN,
	[Token(Token = "0x4000410")]
	GVR_KEYBOARD_TEXT_UPDATED,
	[Token(Token = "0x4000411")]
	GVR_KEYBOARD_TEXT_COMMITTED
}
[Token(Token = "0x20000AE")]
public enum GvrKeyboardError
{
	[Token(Token = "0x4000413")]
	UNKNOWN,
	[Token(Token = "0x4000414")]
	SERVICE_NOT_CONNECTED,
	[Token(Token = "0x4000415")]
	NO_LOCALES_FOUND,
	[Token(Token = "0x4000416")]
	SDK_LOAD_FAILED
}
[Token(Token = "0x20000AF")]
public enum GvrKeyboardInputMode
{
	[Token(Token = "0x4000418")]
	DEFAULT,
	[Token(Token = "0x4000419")]
	NUMERIC
}
[Token(Token = "0x20000B0")]
public class GvrKeyboard : MonoBehaviour
{
	[Token(Token = "0x20000B1")]
	public delegate void StandardCallback();

	[Token(Token = "0x20000B2")]
	public delegate void EditTextCallback(string edit_text);

	[Token(Token = "0x20000B3")]
	public delegate void ErrorCallback(GvrKeyboardError err);

	[Token(Token = "0x20000B4")]
	public delegate void KeyboardCallback(IntPtr closure, GvrKeyboardEvent evt);

	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1739F4", Offset = "0x1739F4")]
	private sealed class <Executer>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GvrKeyboard $this;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170004CF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x5C78B0", Offset = "0x5C78B0", VA = "0x5C78B0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x5C78B8", Offset = "0x5C78B8", VA = "0x5C78B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x5C6868", Offset = "0x5C6868", VA = "0x5C6868")]
		[DebuggerHidden]
		public <Executer>c__Iterator0()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x5C7574", Offset = "0x5C7574", VA = "0x5C7574", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x5C78C0", Offset = "0x5C78C0", VA = "0x5C78C0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x5C78D4", Offset = "0x5C78D4", VA = "0x5C78D4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboard instance;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static IKeyboardProvider keyboardProvider;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private KeyboardState keyboardState;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IEnumerator keyboardUpdate;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ErrorCallback errorCallback;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StandardCallback showCallback;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private StandardCallback hideCallback;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EditTextCallback updateCallback;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private EditTextCallback enterCallback;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isRight;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isKeyboardHidden;

	[Token(Token = "0x4000425")]
	private const float kExecuterWait = 0.01f;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<GvrKeyboardEvent> threadSafeCallbacks;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static object callbacksLock;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GvrKeyboardDelegateBase keyboardDelegate;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GvrKeyboardInputMode inputMode;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useRecommended;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175DA8", Offset = "0x175DA8")]
	private static KeyboardCallback <>f__mg$cache0;

	[Token(Token = "0x1700018D")]
	public string EditorText
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x5C3DD0", Offset = "0x5C3DD0", VA = "0x5C3DD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018E")]
	public GvrKeyboardInputMode Mode
	{
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x5C3F54", Offset = "0x5C3F54", VA = "0x5C3F54")]
		get
		{
			return default(GvrKeyboardInputMode);
		}
	}

	[Token(Token = "0x1700018F")]
	public bool IsValid
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x5C4098", Offset = "0x5C4098", VA = "0x5C4098")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public bool IsReady
	{
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x5C41E4", Offset = "0x5C41E4", VA = "0x5C41E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000191")]
	public Matrix4x4 WorldMatrix
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x5C4330", Offset = "0x5C4330", VA = "0x5C4330")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x5C3D4C", Offset = "0x5C3D4C", VA = "0x5C3D4C")]
	public GvrKeyboard()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x5C4508", Offset = "0x5C4508", VA = "0x5C4508")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x5C46EC", Offset = "0x5C46EC", VA = "0x5C46EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x5C477C", Offset = "0x5C477C", VA = "0x5C477C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x5C4E24", Offset = "0x5C4E24", VA = "0x5C4E24")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x5C59C4", Offset = "0x5C59C4", VA = "0x5C59C4")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x5C5E84", Offset = "0x5C5E84", VA = "0x5C5E84")]
	public void ClearText()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x5C50CC", Offset = "0x5C50CC", VA = "0x5C50CC")]
	public void Show()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x5C6424", Offset = "0x5C6424", VA = "0x5C6424")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x5C6584", Offset = "0x5C6584", VA = "0x5C6584")]
	public void OnPointerClick(BaseEventData data)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x5C6594", Offset = "0x5C6594", VA = "0x5C6594")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x5C6640", Offset = "0x5C6640", VA = "0x5C6640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x5C664C", Offset = "0x5C664C", VA = "0x5C664C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x5C65BC", Offset = "0x5C65BC", VA = "0x5C65BC")]
	[DebuggerHidden]
	private IEnumerator Executer()
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x5C6870", Offset = "0x5C6870", VA = "0x5C6870")]
	private void PoolKeyboardCallbacks(GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x5C7340", Offset = "0x5C7340", VA = "0x5C7340")]
	private static void OnKeyboardCallback(IntPtr closure, GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x5C74A0", Offset = "0x5C74A0", VA = "0x5C74A0")]
	private void KeyboardDelegate_KeyboardShown(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x5C74AC", Offset = "0x5C74AC", VA = "0x5C74AC")]
	private void KeyboardDelegate_KeyboardHidden(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x5C6020", Offset = "0x5C6020", VA = "0x5C6020")]
	private Matrix4x4 GetKeyboardObjectMatrix(Vector3 position)
	{
		return default(Matrix4x4);
	}
}
[Token(Token = "0x20000B5")]
public abstract class GvrKeyboardDelegateBase : MonoBehaviour
{
	[Token(Token = "0x1400000E")]
	[method: Token(Token = "0x6000614")]
	public abstract event EventHandler KeyboardHidden;

	[Token(Token = "0x1400000F")]
	[method: Token(Token = "0x6000616")]
	public abstract event EventHandler KeyboardShown;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x5C7D84", Offset = "0x5C7D84", VA = "0x5C7D84")]
	protected GvrKeyboardDelegateBase()
	{
	}

	[Token(Token = "0x600060F")]
	public abstract void OnKeyboardShow();

	[Token(Token = "0x6000610")]
	public abstract void OnKeyboardHide();

	[Token(Token = "0x6000611")]
	public abstract void OnKeyboardUpdate(string edit_text);

	[Token(Token = "0x6000612")]
	public abstract void OnKeyboardEnterPressed(string edit_text);

	[Token(Token = "0x6000613")]
	public abstract void OnKeyboardError(GvrKeyboardError errorCode);
}
[Token(Token = "0x20000B6")]
public class GvrKeyboardIntent
{
	[Token(Token = "0x20000B7")]
	private class KeyboardCallback : AndroidJavaProxy
	{
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x5C814C", Offset = "0x5C814C", VA = "0x5C814C")]
		internal KeyboardCallback()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x5C81E0", Offset = "0x5C81E0", VA = "0x5C81E0")]
		private void onPlayStoreResult()
		{
		}
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AndroidJavaObject keyboardFragment;

	[Token(Token = "0x400042E")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment";

	[Token(Token = "0x400042F")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment$KeyboardCallback";

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboardIntent theInstance;

	[Token(Token = "0x17000192")]
	public static GvrKeyboardIntent Instance
	{
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x5C7D94", Offset = "0x5C7D94", VA = "0x5C7D94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x5C7D8C", Offset = "0x5C7D8C", VA = "0x5C7D8C")]
	public GvrKeyboardIntent()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x5C7EC8", Offset = "0x5C7EC8", VA = "0x5C7EC8")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x5C8034", Offset = "0x5C8034", VA = "0x5C8034")]
	public void LaunchPlayStore()
	{
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x20000B8")]
	internal interface IKeyboardProvider
	{
		[Token(Token = "0x17000193")]
		string EditorText
		{
			[Token(Token = "0x6000627")]
			get;
			[Token(Token = "0x6000628")]
			set;
		}

		[Token(Token = "0x600061E")]
		void OnPause();

		[Token(Token = "0x600061F")]
		void OnResume();

		[Token(Token = "0x6000620")]
		void ReadState(KeyboardState outState);

		[Token(Token = "0x6000621")]
		bool Create(GvrKeyboard.KeyboardCallback keyboardEvent);

		[Token(Token = "0x6000622")]
		void UpdateData();

		[Token(Token = "0x6000623")]
		void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport);

		[Token(Token = "0x6000624")]
		void Hide();

		[Token(Token = "0x6000625")]
		void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model);

		[Token(Token = "0x6000626")]
		void SetInputMode(GvrKeyboardInputMode mode);
	}
	[Token(Token = "0x20000B9")]
	internal static class KeyboardProviderFactory
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x347ABC", Offset = "0x347ABC", VA = "0x347ABC")]
		internal static IKeyboardProvider CreateKeyboardProvider(GvrKeyboard owner)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BA")]
	public class AndroidNativeKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x20000BB")]
		private struct gvr_clock_time_point
		{
			[Token(Token = "0x4000447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long monotonic_system_time_nanos;
		}

		[Token(Token = "0x20000BC")]
		private struct gvr_recti
		{
			[Token(Token = "0x4000448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int left;

			[Token(Token = "0x4000449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int right;

			[Token(Token = "0x400044A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bottom;

			[Token(Token = "0x400044B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int top;
		}

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr renderEventFunction;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float currentDistance;

		[Token(Token = "0x4000433")]
		private const string METHOD_NAME_GET_PACKAGE_MANAGER = "getPackageManager";

		[Token(Token = "0x4000434")]
		private const string METHOD_NAME_GET_PACKAGE_INFO = "getPackageInfo";

		[Token(Token = "0x4000435")]
		private const string PACKAGE_NAME_VRINPUTMETHOD = "com.google.android.vr.inputmethod";

		[Token(Token = "0x4000436")]
		private const string FIELD_NAME_VERSION_CODE = "versionCode";

		[Token(Token = "0x4000437")]
		private const int MIN_VERSION_VRINPUTMETHOD = 170509062;

		[Token(Token = "0x4000438")]
		private const string dllName = "gvr_keyboard_shim_unity";

		[Token(Token = "0x4000439")]
		private const int TRIGGER_NONE = 0;

		[Token(Token = "0x400043A")]
		private const int TRIGGER_PRESSED = 1;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr keyboard_context;

		[Token(Token = "0x400043C")]
		private const int advanceID = 1571584315;

		[Token(Token = "0x400043D")]
		private const int renderLeftID = 1022982717;

		[Token(Token = "0x400043E")]
		private const int renderRightID = 1022982718;

		[Token(Token = "0x400043F")]
		private const string KEYBOARD_JAVA_CLASS = "com.google.vr.keyboard.GvrKeyboardUnity";

		[Token(Token = "0x4000440")]
		private const long kPredictionTimeWithoutVsyncNanos = 50000000L;

		[Token(Token = "0x4000441")]
		private const int kGvrControllerButtonClick = 1;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string editorText;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isValid;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool isReady;

		[Token(Token = "0x17000194")]
		public string EditorText
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0x343718", Offset = "0x343718", VA = "0x343718", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x600063D")]
			[Address(RVA = "0x3437AC", Offset = "0x3437AC", VA = "0x3437AC", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x3422F8", Offset = "0x3422F8", VA = "0x3422F8")]
		public AndroidNativeKeyboardProvider()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x342650", Offset = "0x342650", VA = "0x342650")]
		private static extern gvr_clock_time_point gvr_get_time_point_now();

		[PreserveSig]
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x342760", Offset = "0x342760", VA = "0x342760")]
		private static extern GvrKeyboardInputMode gvr_keyboard_get_input_mode(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x342840", Offset = "0x342840", VA = "0x342840")]
		private static extern void gvr_keyboard_set_input_mode(IntPtr keyboard_context, GvrKeyboardInputMode mode);

		[PreserveSig]
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x342924", Offset = "0x342924", VA = "0x342924")]
		private static extern IntPtr gvr_keyboard_initialize(AndroidJavaObject app_context, AndroidJavaObject class_loader);

		[PreserveSig]
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x342980", Offset = "0x342980", VA = "0x342980")]
		private static extern IntPtr gvr_keyboard_create(IntPtr closure, GvrKeyboard.KeyboardCallback callback);

		[PreserveSig]
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x342AA0", Offset = "0x342AA0", VA = "0x342AA0")]
		private static extern void gvr_keyboard_get_recommended_world_from_keyboard_matrix(float distance_from_eye, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x342BA0", Offset = "0x342BA0", VA = "0x342BA0")]
		private static extern void gvr_keyboard_set_world_from_keyboard_matrix(IntPtr keyboard_context, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x342C98", Offset = "0x342C98", VA = "0x342C98")]
		private static extern void gvr_keyboard_show(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x342DA0", Offset = "0x342DA0", VA = "0x342DA0")]
		private static extern void gvr_keyboard_update_button_state(IntPtr keyboard_context, int buttonIndex, bool pressed);

		[PreserveSig]
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x342E98", Offset = "0x342E98", VA = "0x342E98")]
		private static extern bool gvr_keyboard_update_controller_ray(IntPtr keyboard_context, IntPtr vector3Start, IntPtr vector3End, IntPtr vector3Hit);

		[PreserveSig]
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x342FA0", Offset = "0x342FA0", VA = "0x342FA0")]
		private static extern IntPtr gvr_keyboard_get_text(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x3430B0", Offset = "0x3430B0", VA = "0x3430B0")]
		private static extern int gvr_keyboard_set_text(IntPtr keyboard_context, IntPtr edit_text);

		[PreserveSig]
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x3431C8", Offset = "0x3431C8", VA = "0x3431C8")]
		private static extern void gvr_keyboard_hide(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x3432D0", Offset = "0x3432D0", VA = "0x3432D0")]
		private static extern void gvr_keyboard_destroy(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x3433E0", Offset = "0x3433E0", VA = "0x3433E0")]
		private static extern void GvrKeyboardSetFrameData(IntPtr keyboard_context, gvr_clock_time_point t);

		[PreserveSig]
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x343508", Offset = "0x343508", VA = "0x343508")]
		private static extern void GvrKeyboardSetEyeData(int eye_type, Matrix4x4 modelview, Matrix4x4 projection, gvr_recti viewport);

		[PreserveSig]
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x342578", Offset = "0x342578", VA = "0x342578")]
		private static extern IntPtr GetKeyboardRenderEventFunc();

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x343844", Offset = "0x343844", VA = "0x343844", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x343950", Offset = "0x343950", VA = "0x343950", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x343954", Offset = "0x343954", VA = "0x343954", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x343958", Offset = "0x343958", VA = "0x343958", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x343A34", Offset = "0x343A34", VA = "0x343A34", Slot = "1")]
		~AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x343AF4", Offset = "0x343AF4", VA = "0x343AF4", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x343E98", Offset = "0x343E98", VA = "0x343E98", Slot = "11")]
		public void Show(Matrix4x4 userMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x344654", Offset = "0x344654", VA = "0x344654", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x344A34", Offset = "0x344A34", VA = "0x344A34", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x3450B0", Offset = "0x3450B0", VA = "0x3450B0", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x34441C", Offset = "0x34441C", VA = "0x34441C")]
		private Matrix4x4 getRecommendedMatrix(float inputDistance)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x343B7C", Offset = "0x343B7C", VA = "0x343B7C")]
		private bool IsVrInputMethodAppMinVersion(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BD")]
	internal class DummyKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private KeyboardState dummyState;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175DB8", Offset = "0x175DB8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175DB8", Offset = "0x175DB8")]
		private string <EditorText>k__BackingField;

		[Token(Token = "0x17000195")]
		public string EditorText
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0x345760", Offset = "0x345760", VA = "0x345760", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1801D0", Offset = "0x1801D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000655")]
			[Address(RVA = "0x345768", Offset = "0x345768", VA = "0x345768", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1801E0", Offset = "0x1801E0")]
			set
			{
			}
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x34568C", Offset = "0x34568C", VA = "0x34568C")]
		internal DummyKeyboardProvider()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x345708", Offset = "0x345708", VA = "0x345708", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x34573C", Offset = "0x34573C", VA = "0x34573C", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x345740", Offset = "0x345740", VA = "0x345740", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x345744", Offset = "0x345744", VA = "0x345744", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x345748", Offset = "0x345748", VA = "0x345748", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x34574C", Offset = "0x34574C", VA = "0x34574C", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x345750", Offset = "0x345750", VA = "0x345750", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x345754", Offset = "0x345754", VA = "0x345754", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x34575C", Offset = "0x34575C", VA = "0x34575C", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class EmulatorKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private GameObject stub;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool showing;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GvrKeyboard.KeyboardCallback keyboardCallback;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private string editorText;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isValid;

		[Token(Token = "0x17000196")]
		public string EditorText
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x34602C", Offset = "0x34602C", VA = "0x34602C", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000658")]
			[Address(RVA = "0x346034", Offset = "0x346034", VA = "0x346034", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x345F38", Offset = "0x345F38", VA = "0x345F38")]
		public EmulatorKeyboardProvider()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x34603C", Offset = "0x34603C", VA = "0x34603C", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x346044", Offset = "0x346044", VA = "0x346044", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x346048", Offset = "0x346048", VA = "0x346048", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x34604C", Offset = "0x34604C", VA = "0x34604C", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x346124", Offset = "0x346124", VA = "0x346124", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x3461AC", Offset = "0x3461AC", VA = "0x3461AC", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x346324", Offset = "0x346324", VA = "0x346324", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x346654", Offset = "0x346654", VA = "0x346654", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x346658", Offset = "0x346658", VA = "0x346658", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x3465E0", Offset = "0x3465E0", VA = "0x3465E0")]
		private void SendUpdateNotification()
		{
		}
	}
}
[Token(Token = "0x20000BF")]
public class KeyboardState
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal string editorText;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal GvrKeyboardInputMode mode;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool isValid;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	internal bool isReady;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal Matrix4x4 worldMatrix;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x521D8C", Offset = "0x521D8C", VA = "0x521D8C")]
	public KeyboardState()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x521E2C", Offset = "0x521E2C", VA = "0x521E2C")]
	public void CopyFrom(KeyboardState other)
	{
	}
}
[Token(Token = "0x20000C0")]
public class GvrPermissionsRequester
{
	[Token(Token = "0x20000C1")]
	public class PermissionStatus
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175DEC", Offset = "0x175DEC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175DEC", Offset = "0x175DEC")]
		private string <Name>k__BackingField;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175E20", Offset = "0x175E20")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175E20", Offset = "0x175E20")]
		private bool <Granted>k__BackingField;

		[Token(Token = "0x17000198")]
		public string Name
		{
			[Token(Token = "0x600066D")]
			[Address(RVA = "0x5CAE04", Offset = "0x5CAE04", VA = "0x5CAE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1801F0", Offset = "0x1801F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x5CADF4", Offset = "0x5CADF4", VA = "0x5CADF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180200", Offset = "0x180200")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public bool Granted
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x5CAE0C", Offset = "0x5CAE0C", VA = "0x5CAE0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180210", Offset = "0x180210")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000670")]
			[Address(RVA = "0x5CADFC", Offset = "0x5CADFC", VA = "0x5CADFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180220", Offset = "0x180220")]
			set
			{
			}
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x5CADCC", Offset = "0x5CADCC", VA = "0x5CADCC")]
		public PermissionStatus(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x20000C2")]
	private class PermissionsCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] permissionNames;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Action<PermissionStatus[]> callback;

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x5CAD28", Offset = "0x5CAD28", VA = "0x5CAD28")]
		internal PermissionsCallback(string[] requestedPermissions, Action<PermissionStatus[]> callback)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x5CAE14", Offset = "0x5CAE14", VA = "0x5CAE14")]
		private void onRequestPermissionResult(bool allPermissionsGranted)
		{
		}
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AndroidJavaObject permissionsFragment;

	[Token(Token = "0x400045B")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment";

	[Token(Token = "0x400045C")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment$PermissionsCallback";

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrPermissionsRequester theInstance;

	[Token(Token = "0x17000197")]
	public static GvrPermissionsRequester Instance
	{
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x5CA460", Offset = "0x5CA460", VA = "0x5CA460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x5CA458", Offset = "0x5CA458", VA = "0x5CA458")]
	public GvrPermissionsRequester()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x5CA594", Offset = "0x5CA594", VA = "0x5CA594")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x5CA700", Offset = "0x5CA700", VA = "0x5CA700")]
	public bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x5CA80C", Offset = "0x5CA80C", VA = "0x5CA80C")]
	public bool[] HasPermissionsGranted(string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x5CAA1C", Offset = "0x5CAA1C", VA = "0x5CAA1C")]
	public bool ShouldShowRational(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x5CAB6C", Offset = "0x5CAB6C", VA = "0x5CAB6C")]
	public void RequestPermissions(string[] permissionArray, Action<PermissionStatus[]> callback)
	{
	}
}
[Token(Token = "0x20000C3")]
public class Pose3D
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Matrix4x4 FLIP_Z;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175E54", Offset = "0x175E54")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175E54", Offset = "0x175E54")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175E88", Offset = "0x175E88")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175E88", Offset = "0x175E88")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175EBC", Offset = "0x175EBC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x175EBC", Offset = "0x175EBC")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700019A")]
	public Vector3 Position
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x284D60", Offset = "0x284D60", VA = "0x284D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180230", Offset = "0x180230")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x2843C0", Offset = "0x2843C0", VA = "0x2843C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180240", Offset = "0x180240")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x284D74", Offset = "0x284D74", VA = "0x284D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180250", Offset = "0x180250")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x2843CC", Offset = "0x2843CC", VA = "0x2843CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180260", Offset = "0x180260")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x284D84", Offset = "0x284D84", VA = "0x284D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180270", Offset = "0x180270")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x2843DC", Offset = "0x2843DC", VA = "0x2843DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180280", Offset = "0x180280")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x284DAC", Offset = "0x284DAC", VA = "0x284DAC")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x28421C", Offset = "0x28421C", VA = "0x28421C")]
	public Pose3D()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x284454", Offset = "0x284454", VA = "0x284454")]
	public Pose3D(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x284670", Offset = "0x284670", VA = "0x284670")]
	public Pose3D(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x284990", Offset = "0x284990", VA = "0x284990")]
	public static Matrix4x4 FlipHandedness(Matrix4x4 matrix)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x2844A8", Offset = "0x2844A8", VA = "0x2844A8")]
	protected void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x284714", Offset = "0x284714", VA = "0x284714")]
	protected void Set(Matrix4x4 matrix)
	{
	}
}
[Token(Token = "0x20000C4")]
public class MutablePose3D : Pose3D
{
	[Token(Token = "0x6000681")]
	[Address(RVA = "0x365964", Offset = "0x365964", VA = "0x365964")]
	public MutablePose3D()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x3659E8", Offset = "0x3659E8", VA = "0x3659E8")]
	public new void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x365A24", Offset = "0x365A24", VA = "0x365A24")]
	public new void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x365AA0", Offset = "0x365AA0", VA = "0x365AA0")]
	public void SetRightHanded(Matrix4x4 matrix)
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x172320", Offset = "0x172320")]
public class GvrInfo : PropertyAttribute
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string text;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int numLines;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x5C379C", Offset = "0x5C379C", VA = "0x5C379C")]
	public GvrInfo(string text, int numLines)
	{
	}
}
[Token(Token = "0x20000C6")]
public class GvrDropdown : Dropdown
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject currentBlocker;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x5C0774", Offset = "0x5C0774", VA = "0x5C0774")]
	public GvrDropdown()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x5C07F8", Offset = "0x5C07F8", VA = "0x5C07F8", Slot = "42")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x5C0904", Offset = "0x5C0904", VA = "0x5C0904", Slot = "43")]
	public override void OnSubmit(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x5C0818", Offset = "0x5C0818", VA = "0x5C0818")]
	private void FixTemplateAndBlockerRaycasters()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x5C0AC4", Offset = "0x5C0AC4", VA = "0x5C0AC4", Slot = "45")]
	protected override GameObject CreateBlocker(Canvas rootCanvas)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x5C0AE0", Offset = "0x5C0AE0", VA = "0x5C0AE0", Slot = "47")]
	protected override GameObject CreateDropdownList(GameObject template)
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x5C0924", Offset = "0x5C0924", VA = "0x5C0924")]
	private void FixRaycaster(GameObject go, bool shouldCopyProperties)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x5C0B10", Offset = "0x5C0B10", VA = "0x5C0B10")]
	private GvrPointerGraphicRaycaster GetTemplateRaycaster()
	{
		return null;
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x5C0BF4", Offset = "0x5C0BF4", VA = "0x5C0BF4")]
	private void CopyRaycasterProperties(GvrPointerGraphicRaycaster source, GvrPointerGraphicRaycaster dest)
	{
	}

	[Token(Token = "0x600068F")]
	private static T GetOrAddComponent<T>(GameObject go, out bool addedComponent) where T : Component
	{
		return null;
	}
}
[Token(Token = "0x20000C7")]
public static class GvrActivityHelper
{
	[Token(Token = "0x4000469")]
	public const string GVR_DLL_NAME = "gvr";

	[Token(Token = "0x400046A")]
	public const string PACKAGE_UNITY_PLAYER = "com.unity3d.player.UnityPlayer";

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x32B1FC", Offset = "0x32B1FC", VA = "0x32B1FC")]
	public static AndroidJavaObject GetActivity()
	{
		return null;
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x33D96C", Offset = "0x33D96C", VA = "0x33D96C")]
	public static AndroidJavaObject GetApplicationContext(AndroidJavaObject activity)
	{
		return null;
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x20000C8")]
	public class GvrCursorHelper
	{
		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool cachedHeadEmulationActive;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool cachedControllerEmulationActive;

		[Token(Token = "0x1700019E")]
		public static bool HeadEmulationActive
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0x347720", Offset = "0x347720", VA = "0x347720")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public static bool ControllerEmulationActive
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0x3477FC", Offset = "0x3477FC", VA = "0x3477FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x347718", Offset = "0x347718", VA = "0x347718")]
		public GvrCursorHelper()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x347788", Offset = "0x347788", VA = "0x347788")]
		private static void UpdateCursorLockState()
		{
		}
	}
}
[Token(Token = "0x20000C9")]
public class GvrDaydreamApi : IDisposable
{
	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A04", Offset = "0x173A04")]
	private sealed class <CreateAsync>c__AnonStorey0
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AndroidJavaObject context;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Action<bool> callback;

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x5C0324", Offset = "0x5C0324", VA = "0x5C0324")]
		public <CreateAsync>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x5C0408", Offset = "0x5C0408", VA = "0x5C0408")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A14", Offset = "0x173A14")]
	private sealed class <LaunchVrHomeAsync>c__AnonStorey1
	{
		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Action<bool> callback;

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x5C0400", Offset = "0x5C0400", VA = "0x5C0400")]
		public <LaunchVrHomeAsync>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x5C0680", Offset = "0x5C0680", VA = "0x5C0680")]
		internal void <>m__0(bool success)
		{
		}
	}

	[Token(Token = "0x400046D")]
	private const string METHOD_CREATE = "create";

	[Token(Token = "0x400046E")]
	private const string METHOD_LAUNCH_VR_HOMESCREEN = "launchVrHomescreen";

	[Token(Token = "0x400046F")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x4000470")]
	private const string PACKAGE_DAYDREAM_API = "com.google.vr.ndk.base.DaydreamApi";

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrDaydreamApi m_instance;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AndroidJavaObject m_daydreamApiObject;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AndroidJavaClass m_daydreamApiClass;

	[Token(Token = "0x170001A0")]
	public static AndroidJavaObject JavaInstance
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x5BFDA0", Offset = "0x5BFDA0", VA = "0x5BFDA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public static bool IsCreated
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x5BFEAC", Offset = "0x5BFEAC", VA = "0x5BFEAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x5BFD10", Offset = "0x5BFD10", VA = "0x5BFD10")]
	public GvrDaydreamApi()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x5BFE1C", Offset = "0x5BFE1C", VA = "0x5BFE1C")]
	private static void EnsureCreated(Action<bool> callback)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x5C02B4", Offset = "0x5C02B4", VA = "0x5C02B4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x5C031C", Offset = "0x5C031C", VA = "0x5C031C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x180290", Offset = "0x180290")]
	public static void Create()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x5BFF28", Offset = "0x5BFF28", VA = "0x5BFF28")]
	public static void CreateAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x5C032C", Offset = "0x5C032C", VA = "0x5C032C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1802C4", Offset = "0x1802C4")]
	public static void LaunchVrHome()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x5C0334", Offset = "0x5C0334", VA = "0x5C0334")]
	public static void LaunchVrHomeAsync(Action<bool> callback)
	{
	}
}
[Token(Token = "0x20000CA")]
public static class GvrIntent
{
	[Token(Token = "0x4000474")]
	private const string METHOD_GET_INTENT = "getIntent";

	[Token(Token = "0x4000475")]
	private const string METHOD_HASH_CODE = "hashCode";

	[Token(Token = "0x4000476")]
	private const string METHOD_INTENT_GET_DATA_STRING = "getDataString";

	[Token(Token = "0x4000477")]
	private const string METHOD_INTENT_GET_BOOLEAN_EXTRA = "getBooleanExtra";

	[Token(Token = "0x4000478")]
	private const string EXTRA_VR_LAUNCH = "android.intent.extra.VR_LAUNCH";

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x5C37C4", Offset = "0x5C37C4", VA = "0x5C37C4")]
	public static string GetData()
	{
		return null;
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x5C3A78", Offset = "0x5C3A78", VA = "0x5C3A78")]
	public static bool IsLaunchedFromVr()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x5C3C64", Offset = "0x5C3C64", VA = "0x5C3C64")]
	public static int GetIntentHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x5C38B4", Offset = "0x5C38B4", VA = "0x5C38B4")]
	private static AndroidJavaObject GetIntent()
	{
		return null;
	}
}
[Token(Token = "0x20000CB")]
public static class GvrMathHelpers
{
	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x5C9C88", Offset = "0x5C9C88", VA = "0x5C9C88")]
	public static Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x5C9EA4", Offset = "0x5C9EA4", VA = "0x5C9EA4")]
	public static Vector2 NormalizedCartesianToSpherical(Vector3 cartCoords)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x5C95C0", Offset = "0x5C95C0", VA = "0x5C95C0")]
	public static float EaseOutCubic(float min, float max, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x5CA014", Offset = "0x5CA014", VA = "0x5CA014")]
	public static Matrix4x4 ConvertFloatArrayToMatrix(float[] floatArray)
	{
		return default(Matrix4x4);
	}
}
[Token(Token = "0x20000CC")]
public static class GvrUIHelpers
{
	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x4FE6C8", Offset = "0x4FE6C8", VA = "0x4FE6C8")]
	public static float GetMetersToCanvasScale(Transform canvasObject)
	{
		return default(float);
	}
}
[Token(Token = "0x20000CD")]
public static class GvrVRHelpers
{
	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x4FE8B8", Offset = "0x4FE8B8", VA = "0x4FE8B8")]
	public static Vector2 GetViewportCenter()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x4FE944", Offset = "0x4FE944", VA = "0x4FE944")]
	public static Vector3 GetHeadForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x4FEA28", Offset = "0x4FEA28", VA = "0x4FEA28")]
	public static Quaternion GetHeadRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x4FEAB0", Offset = "0x4FEAB0", VA = "0x4FEAB0")]
	public static Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x4FEB38", Offset = "0x4FEB38", VA = "0x4FEB38")]
	public static float GetRecommendedMaxLaserDistance(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x4FEB5C", Offset = "0x4FEB5C", VA = "0x4FEB5C")]
	public static float GetRayIntersection(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x4FEB80", Offset = "0x4FEB80", VA = "0x4FEB80")]
	public static bool GetShrinkLaser(GvrBasePointer.RaycastMode mode)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CE")]
public class GvrVideoPlayerTexture : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public enum VideoType
	{
		[Token(Token = "0x4000499")]
		Dash = 0,
		[Token(Token = "0x400049A")]
		HLS = 2,
		[Token(Token = "0x400049B")]
		Other = 3
	}

	[Token(Token = "0x20000D0")]
	public enum VideoResolution
	{
		[Token(Token = "0x400049D")]
		Lowest = 1,
		[Token(Token = "0x400049E")]
		_720 = 720,
		[Token(Token = "0x400049F")]
		_1080 = 1080,
		[Token(Token = "0x40004A0")]
		_2048 = 2048,
		[Token(Token = "0x40004A1")]
		Highest = 4096
	}

	[Token(Token = "0x20000D1")]
	public enum VideoPlayerState
	{
		[Token(Token = "0x40004A3")]
		Idle = 1,
		[Token(Token = "0x40004A4")]
		Preparing,
		[Token(Token = "0x40004A5")]
		Buffering,
		[Token(Token = "0x40004A6")]
		Ready,
		[Token(Token = "0x40004A7")]
		Ended
	}

	[Token(Token = "0x20000D2")]
	public enum VideoEvents
	{
		[Token(Token = "0x40004A9")]
		VideoReady = 1,
		[Token(Token = "0x40004AA")]
		VideoStartPlayback,
		[Token(Token = "0x40004AB")]
		VideoFormatChanged,
		[Token(Token = "0x40004AC")]
		VideoSurfaceSet,
		[Token(Token = "0x40004AD")]
		VideoSizeChanged
	}

	[Token(Token = "0x20000D3")]
	public enum StereoMode
	{
		[Token(Token = "0x40004AF")]
		NoValue = -1,
		[Token(Token = "0x40004B0")]
		Mono,
		[Token(Token = "0x40004B1")]
		TopBottom,
		[Token(Token = "0x40004B2")]
		LeftRight
	}

	[Token(Token = "0x20000D4")]
	private enum RenderCommand
	{
		[Token(Token = "0x40004B4")]
		None = -1,
		[Token(Token = "0x40004B5")]
		InitializePlayer,
		[Token(Token = "0x40004B6")]
		UpdateVideo,
		[Token(Token = "0x40004B7")]
		RenderMono,
		[Token(Token = "0x40004B8")]
		RenderLeftEye,
		[Token(Token = "0x40004B9")]
		RenderRightEye,
		[Token(Token = "0x40004BA")]
		Shutdown
	}

	[Token(Token = "0x20000D5")]
	internal delegate void OnVideoEventCallback(IntPtr cbdata, int eventId);

	[Token(Token = "0x20000D6")]
	internal delegate void OnExceptionCallback(string type, string msg, IntPtr cbdata);

	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A24", Offset = "0x173A24")]
	private sealed class <InternalOnVideoEventCallback>c__AnonStorey0
	{
		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GvrVideoPlayerTexture player;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int eventId;

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x504B58", Offset = "0x504B58", VA = "0x504B58")]
		public <InternalOnVideoEventCallback>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x5056DC", Offset = "0x5056DC", VA = "0x5056DC")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A34", Offset = "0x173A34")]
	private sealed class <InternalOnExceptionCallback>c__AnonStorey1
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GvrVideoPlayerTexture player;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string type;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string msg;

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x504CA8", Offset = "0x504CA8", VA = "0x504CA8")]
		public <InternalOnExceptionCallback>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x5056A8", Offset = "0x5056A8", VA = "0x5056A8")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr videoPlayerPtr;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int videoPlayerEventBase;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Texture initialTexture;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture surfaceTexture;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float[] videoMatrixRaw;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4 videoMatrix;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int videoMatrixPropertyId;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private long lastVideoTimestamp;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initialized;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int texWidth;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int texHeight;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private long lastBufferedPosition;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float framecount;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Renderer screen;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IntPtr renderEventFunction;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool playOnResume;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Action<int>> onEventCallbacks;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private List<Action<string, string>> onExceptionCallbacks;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Queue<Action> ExecuteOnMainThread;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text statusText;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public VideoType videoType;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string videoURL;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public string videoContentID;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string videoProviderId;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public VideoResolution initialResolution;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool adjustAspectRatio;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool useSecurePath;

	[Token(Token = "0x4000494")]
	private const string dllName = "gvrvideo";

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175EF0", Offset = "0x175EF0")]
	private static Action<string, string> <>f__am$cache0;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175F00", Offset = "0x175F00")]
	private static OnVideoEventCallback <>f__mg$cache0;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x175F10", Offset = "0x175F10")]
	private static OnExceptionCallback <>f__mg$cache1;

	[Token(Token = "0x170001A2")]
	public bool VideoReady
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x4FF6AC", Offset = "0x4FF6AC", VA = "0x4FF6AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A3")]
	public long CurrentPosition
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x4FF858", Offset = "0x4FF858", VA = "0x4FF858")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x4FFA0C", Offset = "0x4FFA0C", VA = "0x4FFA0C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public long VideoDuration
	{
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x4FFBD4", Offset = "0x4FFBD4", VA = "0x4FFBD4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170001A5")]
	public long BufferedPosition
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x4FFD7C", Offset = "0x4FFD7C", VA = "0x4FFD7C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170001A6")]
	public int BufferedPercentage
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x4FFF34", Offset = "0x4FFF34", VA = "0x4FFF34")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A7")]
	public bool IsPaused
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x5000E8", Offset = "0x5000E8", VA = "0x5000E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A8")]
	public VideoPlayerState PlayerState
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x5002A0", Offset = "0x5002A0", VA = "0x5002A0")]
		get
		{
			return default(VideoPlayerState);
		}
	}

	[Token(Token = "0x170001A9")]
	public int MaxVolume
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x500444", Offset = "0x500444", VA = "0x500444")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AA")]
	public int CurrentVolume
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x5005E8", Offset = "0x5005E8", VA = "0x5005E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x500790", Offset = "0x500790", VA = "0x500790")]
		set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public StereoMode CurrentStereoMode
	{
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x500820", Offset = "0x500820", VA = "0x500820")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170001AC")]
	public bool HasProjection
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x5009C0", Offset = "0x5009C0", VA = "0x5009C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AD")]
	public Renderer Screen
	{
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x500B70", Offset = "0x500B70", VA = "0x500B70")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x500B78", Offset = "0x500B78", VA = "0x500B78")]
		set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public Texture CurrentFrameTexture
	{
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x500D74", Offset = "0x500D74", VA = "0x500D74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AF")]
	public int Width
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x500D7C", Offset = "0x500D7C", VA = "0x500D7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B0")]
	public int Height
	{
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x500D84", Offset = "0x500D84", VA = "0x500D84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B1")]
	public float AspectRatio
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x500D8C", Offset = "0x500D8C", VA = "0x500D8C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x4FF690", Offset = "0x4FF690", VA = "0x4FF690")]
	public GvrVideoPlayerTexture()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x500DC0", Offset = "0x500DC0", VA = "0x500DC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x500E70", Offset = "0x500E70", VA = "0x500E70")]
	private void CreatePlayer()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x501884", Offset = "0x501884", VA = "0x501884")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x501A64", Offset = "0x501A64", VA = "0x501A64")]
	public void SetDisplayTexture(Texture texture)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x501BCC", Offset = "0x501BCC", VA = "0x501BCC")]
	public void CleanupVideo()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x501EDC", Offset = "0x501EDC", VA = "0x501EDC")]
	public void ReInitializeVideo()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x50254C", Offset = "0x50254C", VA = "0x50254C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x502550", Offset = "0x502550", VA = "0x502550")]
	private void OnApplicationPause(bool bPause)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x502750", Offset = "0x502750", VA = "0x502750")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x503094", Offset = "0x503094", VA = "0x503094")]
	private void OnRestartVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x5031F4", Offset = "0x5031F4", VA = "0x5031F4")]
	public void RestartVideo()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x500794", Offset = "0x500794", VA = "0x500794")]
	public void SetCurrentVolume(int val)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x501FDC", Offset = "0x501FDC", VA = "0x501FDC")]
	public bool Init()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x503868", Offset = "0x503868", VA = "0x503868")]
	public bool Play()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x5039B0", Offset = "0x5039B0", VA = "0x5039B0")]
	public bool Pause()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x503AB0", Offset = "0x503AB0", VA = "0x503AB0")]
	private void AdjustAspectRatio()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x503BF8", Offset = "0x503BF8", VA = "0x503BF8")]
	private void UpdateStatusText()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x503750", Offset = "0x503750", VA = "0x503750")]
	private void IssuePlayerEvent(RenderCommand evt)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x5042FC", Offset = "0x5042FC", VA = "0x5042FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x503180", Offset = "0x503180", VA = "0x503180")]
	public void RemoveOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x5014B4", Offset = "0x5014B4", VA = "0x5014B4")]
	public void SetOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x504938", Offset = "0x504938", VA = "0x504938")]
	internal void FireVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x4FEB94", Offset = "0x4FEB94", VA = "0x4FEB94")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1802F8", Offset = "0x1802F8")]
	private static void InternalOnVideoEventCallback(IntPtr cbdata, int eventId)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x50169C", Offset = "0x50169C", VA = "0x50169C")]
	public void SetOnExceptionCallback(Action<string, string> callback)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x4FF104", Offset = "0x4FF104", VA = "0x4FF104")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x180370", Offset = "0x180370")]
	private static void InternalOnExceptionCallback(string type, string msg, IntPtr cbdata)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x504CB0", Offset = "0x504CB0", VA = "0x504CB0")]
	internal void FireOnException(string type, string msg)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x5047E8", Offset = "0x5047E8", VA = "0x5047E8")]
	internal static IntPtr ToIntPtr(object obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x503324", Offset = "0x503324", VA = "0x503324")]
	internal string ProcessURL()
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x504200", Offset = "0x504200", VA = "0x504200")]
	private static extern IntPtr GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x504FA8", Offset = "0x504FA8", VA = "0x504FA8")]
	private static extern void SetExternalTextures(IntPtr videoPlayerPtr, int[] texIds, int size, int w, int h);

	[PreserveSig]
	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x5050E0", Offset = "0x5050E0", VA = "0x5050E0")]
	private static extern IntPtr GetRenderableTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x502FB8", Offset = "0x502FB8", VA = "0x502FB8")]
	private static extern int GetExternalSurfaceTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x5045B0", Offset = "0x5045B0", VA = "0x5045B0")]
	private static extern void GetVideoMatrix(IntPtr videoPlayerPtr, float[] videoMatrix);

	[PreserveSig]
	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x5046C8", Offset = "0x5046C8", VA = "0x5046C8")]
	private static extern long GetVideoTimestampNs(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x5012A8", Offset = "0x5012A8", VA = "0x5012A8")]
	public static extern IntPtr CreateVideoPlayer();

	[PreserveSig]
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x501DD0", Offset = "0x501DD0", VA = "0x501DD0")]
	public static extern void DestroyVideoPlayer(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x5013A0", Offset = "0x5013A0", VA = "0x5013A0")]
	private static extern int GetVideoPlayerEventBase(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x5033B0", Offset = "0x5033B0", VA = "0x5033B0")]
	private static extern IntPtr InitVideoPlayer(IntPtr videoPlayerPtr, int videoType, string videoURL, string contentID, string providerId, bool useSecurePath, bool useExisting);

	[PreserveSig]
	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x503638", Offset = "0x503638", VA = "0x503638")]
	private static extern void SetInitialResolution(IntPtr videoPlayerPtr, int initialResolution);

	[PreserveSig]
	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x500340", Offset = "0x500340", VA = "0x500340")]
	private static extern int GetPlayerState(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x502DC8", Offset = "0x502DC8", VA = "0x502DC8")]
	private static extern int GetWidth(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x502EC0", Offset = "0x502EC0", VA = "0x502EC0")]
	private static extern int GetHeight(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x502658", Offset = "0x502658", VA = "0x502658")]
	private static extern int PlayVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x501968", Offset = "0x501968", VA = "0x501968")]
	private static extern int PauseVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x4FF750", Offset = "0x4FF750", VA = "0x4FF750")]
	private static extern bool IsVideoReady(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x500198", Offset = "0x500198", VA = "0x500198")]
	private static extern bool IsVideoPaused(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x4FFC80", Offset = "0x4FFC80", VA = "0x4FFC80")]
	private static extern long GetDuration(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x4FFE28", Offset = "0x4FFE28", VA = "0x4FFE28")]
	private static extern long GetBufferedPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x4FF900", Offset = "0x4FF900", VA = "0x4FF900")]
	private static extern long GetCurrentPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x4FFAB8", Offset = "0x4FFAB8", VA = "0x4FFAB8")]
	private static extern void SetCurrentPosition(IntPtr videoPlayerPtr, long pos);

	[PreserveSig]
	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x4FFFD8", Offset = "0x4FFFD8", VA = "0x4FFFD8")]
	private static extern int GetBufferedPercentage(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x5004E8", Offset = "0x5004E8", VA = "0x5004E8")]
	private static extern int GetMaxVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x500688", Offset = "0x500688", VA = "0x500688")]
	private static extern int GetCurrentVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x503528", Offset = "0x503528", VA = "0x503528")]
	private static extern void SetCurrentVolume(IntPtr videoPlayerPtr, int value);

	[PreserveSig]
	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x5008C0", Offset = "0x5008C0", VA = "0x5008C0")]
	private static extern int GetStereoMode(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x500A60", Offset = "0x500A60", VA = "0x500A60")]
	private static extern bool HasProjectionData(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x5051F8", Offset = "0x5051F8", VA = "0x5051F8")]
	private static extern bool SetVideoPlayerSupportClassname(IntPtr videoPlayerPtr, string classname);

	[PreserveSig]
	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x505310", Offset = "0x505310", VA = "0x505310")]
	private static extern IntPtr GetRawPlayer(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x504808", Offset = "0x504808", VA = "0x504808")]
	private static extern void SetOnVideoEventCallback(IntPtr videoPlayerPtr, OnVideoEventCallback callback, IntPtr callback_arg);

	[PreserveSig]
	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x504B78", Offset = "0x504B78", VA = "0x504B78")]
	private static extern void SetOnExceptionCallback(IntPtr videoPlayerPtr, OnExceptionCallback callback, IntPtr callback_arg);

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x5054A0", Offset = "0x5054A0", VA = "0x5054A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1803E8", Offset = "0x1803E8")]
	private void <CreatePlayer>m__0(int eventId)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x5055B4", Offset = "0x5055B4", VA = "0x5055B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1803F8", Offset = "0x1803F8")]
	private static void <CreatePlayer>m__1(string type, string msg)
	{
	}
}
[Token(Token = "0x20000D7")]
public class CarTruck : MonoBehaviour
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float minSpeed;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxSpeed;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxRotationRate;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedOverride;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minCamDistForRaycast;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove _spline;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform _camera;

	[Token(Token = "0x40004C2")]
	private const bool alwaysTest = false;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastColliderPoint;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x3064FC", Offset = "0x3064FC", VA = "0x3064FC")]
	public CarTruck()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x3065D0", Offset = "0x3065D0", VA = "0x3065D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x3066A0", Offset = "0x3066A0", VA = "0x3066A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x306804", Offset = "0x306804", VA = "0x306804")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x306BD0", Offset = "0x306BD0", VA = "0x306BD0")]
	private void OnDrawGizmos()
	{
	}
}
[Token(Token = "0x20000D8")]
public class FishingBoat : MonoBehaviour
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A44", Offset = "0x173A44")]
	private sealed class <DelayedPause>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <pauseTime>__1;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <moveTime>__2;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal FishingBoat $this;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004D1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xBB2D80", Offset = "0xBB2D80", VA = "0xBB2D80", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xBB2D88", Offset = "0xBB2D88", VA = "0xBB2D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xBB2AC0", Offset = "0xBB2AC0", VA = "0xBB2AC0")]
		[DebuggerHidden]
		public <DelayedPause>c__Iterator0()
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xBB2AC8", Offset = "0xBB2AC8", VA = "0xBB2AC8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xBB2D90", Offset = "0xBB2D90", VA = "0xBB2D90", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xBB2DA4", Offset = "0xBB2DA4", VA = "0xBB2DA4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float minStateChangeTime;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxStateChangeTime;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxRotationRate;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private splineMove _spline;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject prefabWakeFX;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform attachWakeFX;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xBB26EC", Offset = "0xBB26EC", VA = "0xBB26EC")]
	public FishingBoat()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xBB2718", Offset = "0xBB2718", VA = "0xBB2718")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xBB2848", Offset = "0xBB2848", VA = "0xBB2848")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xBB284C", Offset = "0xBB284C", VA = "0xBB284C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xBB28FC", Offset = "0xBB28FC", VA = "0xBB28FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xBB2A3C", Offset = "0xBB2A3C", VA = "0xBB2A3C")]
	[DebuggerHidden]
	private IEnumerator DelayedPause()
	{
		return null;
	}
}
[Token(Token = "0x20000D9")]
public class LifeManager : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A54", Offset = "0x173A54")]
	private sealed class <_WaitForLevelManagerSubscribe>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LifeManager $this;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170004D3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x352CC0", Offset = "0x352CC0", VA = "0x352CC0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x352CC8", Offset = "0x352CC8", VA = "0x352CC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x3507FC", Offset = "0x3507FC", VA = "0x3507FC")]
		[DebuggerHidden]
		public <_WaitForLevelManagerSubscribe>c__Iterator0()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x352B84", Offset = "0x352B84", VA = "0x352B84", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x352CD0", Offset = "0x352CD0", VA = "0x352CD0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x352CE4", Offset = "0x352CE4", VA = "0x352CE4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A64", Offset = "0x173A64")]
	private sealed class <_WaitForLevelManagerUnsubscribe>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LifeManager $this;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170004D5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x352EA8", Offset = "0x352EA8", VA = "0x352EA8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x352EB0", Offset = "0x352EB0", VA = "0x352EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x350888", Offset = "0x350888", VA = "0x350888")]
		[DebuggerHidden]
		public <_WaitForLevelManagerUnsubscribe>c__Iterator1()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x352D6C", Offset = "0x352D6C", VA = "0x352D6C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x352EB8", Offset = "0x352EB8", VA = "0x352EB8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x352ECC", Offset = "0x352ECC", VA = "0x352ECC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<GameObject> prefabSailBoats;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GameObject> prefabFishingBoats;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<GameObject> prefabYatchs;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> prefabCars;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<GameObject> prefabBirds;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> prefabSeaLife;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<GameObject> prefabPlanes;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PathManager> pathsFishingBoats;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<PathManager> pathsSailBoats;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PathManager> pathsYatchs;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<PathManager> pathsCars;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> regionBirdFlock;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<PathManager> pathsSeaLife;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<PathManager> pathsPlanes;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public List<PathManager> pathsRaces;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rootDynamics;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool enableBoats;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool enableBirds;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool enableCars;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool enableSeaLife;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool enablePlanes;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool enableBoatsOnlyInFreeflight;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool enableBirdsOnlyInFreeflight;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool enableCarsOnlyInFreeflight;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool enableSeaLifeOnlyInFreeflight;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool enablePlanesOnlyInFreeflight;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SWS.WaypointManager _waypointMgr;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _boatsInitialized;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool _carsInitialized;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool _birdsInitialized;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool _sealifeInitialized;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _planesInitialized;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<GameObject> _boats;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> _cars;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<GameObject> _birds;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> _seaLife;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private List<GameObject> _planes;

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x350084", Offset = "0x350084", VA = "0x350084")]
	public LifeManager()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x350170", Offset = "0x350170", VA = "0x350170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x350548", Offset = "0x350548", VA = "0x350548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x35073C", Offset = "0x35073C", VA = "0x35073C")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManagerSubscribe()
	{
		return null;
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x35064C", Offset = "0x35064C", VA = "0x35064C")]
	private void _SubscribeToLevelManagerShowGameplayObjects()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x350804", Offset = "0x350804", VA = "0x350804")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManagerUnsubscribe()
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x350890", Offset = "0x350890", VA = "0x350890")]
	private void _UnsubscribeFromLevelManagerShowGameplayObjects()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x350980", Offset = "0x350980", VA = "0x350980")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x350B78", Offset = "0x350B78", VA = "0x350B78")]
	private void _ShowLifeManager(bool isActive)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x3507C0", Offset = "0x3507C0", VA = "0x3507C0")]
	private void OnReset()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x350BB4", Offset = "0x350BB4", VA = "0x350BB4")]
	private void EnableBoats(bool enable)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x35269C", Offset = "0x35269C", VA = "0x35269C")]
	private void SetupObjectOnPath(PathManager targetPath, GameObject newGO, bool lockZ = false)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x350DF0", Offset = "0x350DF0", VA = "0x350DF0")]
	private void EnableCars(bool enable)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x35134C", Offset = "0x35134C", VA = "0x35134C")]
	private void EnableBirds(bool enable)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x351348", Offset = "0x351348", VA = "0x351348")]
	private void EnableSeaLife(bool enable)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x3519DC", Offset = "0x3519DC", VA = "0x3519DC")]
	private void EnablePlanes(bool enable)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x3522E8", Offset = "0x3522E8", VA = "0x3522E8")]
	private void CreateBoats(List<GameObject> prefabBoats, List<PathManager> paths)
	{
	}
}
[Token(Token = "0x20000DA")]
public class PlaneAI : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float minFlightSpeed;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxFlightSpeed;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxRotationRate;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxRoll;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedOverride;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] propBlades;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float propBaseRotateRate;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _propRotateRate;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private splineMove _spline;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x27B838", Offset = "0x27B838", VA = "0x27B838")]
	public PlaneAI()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x27B908", Offset = "0x27B908", VA = "0x27B908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x27B914", Offset = "0x27B914", VA = "0x27B914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x27BBA4", Offset = "0x27BBA4", VA = "0x27BBA4")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x20000DB")]
public class ProximityViewActivate : MonoBehaviour
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float minRange;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minViewAngle;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Camera overrideCamera;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] activationGroup;

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x285E80", Offset = "0x285E80", VA = "0x285E80")]
	public ProximityViewActivate()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x285E88", Offset = "0x285E88", VA = "0x285E88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x285EAC", Offset = "0x285EAC", VA = "0x285EAC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SailBoat : MonoBehaviour
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float minSpeed;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxSpeed;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxRotationRate;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedOverride;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private splineMove _spline;

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x2EE0E0", Offset = "0x2EE0E0", VA = "0x2EE0E0")]
	public SailBoat()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x2EE10C", Offset = "0x2EE10C", VA = "0x2EE10C")]
	private void Update()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x2EE294", Offset = "0x2EE294", VA = "0x2EE294")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x20000DD")]
public class SeaLife : MonoBehaviour
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float delayBetweenJumps;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform _watchCamera;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _lastJumpTime;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x2F8824", Offset = "0x2F8824", VA = "0x2F8824")]
	public SeaLife()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x2F8838", Offset = "0x2F8838", VA = "0x2F8838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x2F88CC", Offset = "0x2F88CC", VA = "0x2F88CC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000DE")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int _distanceDisable;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _disableCheckInterval;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _enableCheckInterval;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _disableOnStart;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x38BEF8", Offset = "0x38BEF8", VA = "0x38BEF8")]
	public UnluckDistanceDisabler()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x38BF1C", Offset = "0x38BF1C", VA = "0x38BF1C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x38C058", Offset = "0x38C058", VA = "0x38C058")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x38C09C", Offset = "0x38C09C", VA = "0x38C09C")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x38C240", Offset = "0x38C240", VA = "0x38C240")]
	public void CheckEnable()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x172364", Offset = "0x172364")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform target;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 targetOffset;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distance;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minDistance;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int yMinLimit;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int yMaxLimit;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int zoomRate;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float panSpeed;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float zoomDampening;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float autoRotate;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float xDeg;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float yDeg;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float currentDistance;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float desiredDistance;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion currentRotation;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion rotation;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 position;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float idleTimer;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float idleSmooth;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x2BED88", Offset = "0x2BED88", VA = "0x2BED88")]
	public SmoothCameraOrbit()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x2BEDF8", Offset = "0x2BEDF8", VA = "0x2BEDF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x2BF32C", Offset = "0x2BF32C", VA = "0x2BF32C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x2BEDFC", Offset = "0x2BEDFC", VA = "0x2BEDFC")]
	public void Init()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x2BF330", Offset = "0x2BF330", VA = "0x2BF330")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x2BFAAC", Offset = "0x2BFAAC", VA = "0x2BFAAC")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}
}
[Token(Token = "0x20000E0")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _speed;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _lerpCounter;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject _model;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _modelT;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _soarTimer;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _instantiated;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _updateSeed;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Transform _thisT;

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xBB5EF0", Offset = "0xBB5EF0", VA = "0xBB5EF0")]
	public FlockChild()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xBB5F14", Offset = "0xBB5F14", VA = "0xBB5F14")]
	public void Start()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xBB6A88", Offset = "0xBB6A88", VA = "0xBB6A88")]
	public void Update()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xBB75F0", Offset = "0xBB75F0", VA = "0xBB75F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xBB764C", Offset = "0xBB764C", VA = "0xBB764C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xBB60F8", Offset = "0xBB60F8", VA = "0xBB60F8")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xBB6620", Offset = "0xBB6620", VA = "0xBB6620")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xBB69B4", Offset = "0xBB69B4", VA = "0xBB69B4")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xBB63A4", Offset = "0xBB63A4", VA = "0xBB63A4")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xBB6AFC", Offset = "0xBB6AFC", VA = "0xBB6AFC")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBB6BA4", Offset = "0xBB6BA4", VA = "0xBB6BA4")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBB6D3C", Offset = "0xBB6D3C", VA = "0xBB6D3C")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBB7AB0", Offset = "0xBB7AB0", VA = "0xBB7AB0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBB7278", Offset = "0xBB7278", VA = "0xBB7278")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBB62A4", Offset = "0xBB62A4", VA = "0xBB62A4")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xBB8448", Offset = "0xBB8448", VA = "0xBB8448")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xBB775C", Offset = "0xBB775C", VA = "0xBB775C")]
	public void Flap()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xBB644C", Offset = "0xBB644C", VA = "0xBB644C")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xBB8558", Offset = "0xBB8558", VA = "0xBB8558")]
	public void Soar()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xBB8644", Offset = "0xBB8644", VA = "0xBB8644")]
	public void Dive()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xBB8ABC", Offset = "0xBB8ABC", VA = "0xBB8ABC")]
	public void animationSpeed()
	{
	}
}
[Token(Token = "0x20000E1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1723C4", Offset = "0x1723C4")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _pitchMin;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _pitchMax;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _volumeMin;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _volumeMax;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FlockChild _flockChild;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AudioSource _audio;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _hasLanded;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBB8EE0", Offset = "0xBB8EE0", VA = "0xBB8EE0")]
	public FlockChildSound()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBB8F18", Offset = "0xBB8F18", VA = "0xBB8F18")]
	public void Start()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBB902C", Offset = "0xBB902C", VA = "0xBB902C")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xBB93DC", Offset = "0xBB93DC", VA = "0xBB93DC")]
	public void ScareSound()
	{
	}
}
[Token(Token = "0x20000E2")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FlockChild _childPrefab;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int _childAmount;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool _slowSpawn;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _spawnSphere;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _spawnSphereDepth;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _minSpeed;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _maxSpeed;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _minScale;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _maxScale;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _soarFrequency;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string _soarAnimation;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public string _flapAnimation;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string _idleAnimation;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _diveValue;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _diveFrequency;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _minDamping;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _maxDamping;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _waypointDistance;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _minAnimationSpeed;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _randomPositionTimer;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _positionSphere;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _positionSphereHeight;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _positionSphereDepth;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool _childTriggerPos;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _forcedRandomDelay;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool _flatFly;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool _flatSoar;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool _birdAvoid;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool _birdAvoidDown;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool _birdAvoidUp;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _soarMaxTime;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 _posBuffer;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int _updateDivisor;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _newDelta;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int _updateCounter;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float _activeChildren;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Transform _groupTransform;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string _groupName;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool _groupChildToFlock;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Transform _thisT;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xBB9588", Offset = "0xBB9588", VA = "0xBB9588")]
	public FlockController()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xBB9750", Offset = "0xBB9750", VA = "0xBB9750")]
	public void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBB98AC", Offset = "0xBB98AC", VA = "0xBB98AC")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xBB9BE8", Offset = "0xBB9BE8", VA = "0xBB9BE8")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xBB9C44", Offset = "0xBB9C44", VA = "0xBB9C44")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xBB9E20", Offset = "0xBB9E20", VA = "0xBB9E20")]
	public void Update()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xBB99CC", Offset = "0xBB99CC", VA = "0xBB99CC")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xBB9E90", Offset = "0xBB9E90", VA = "0xBB9E90")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xBB9F70", Offset = "0xBB9F70", VA = "0xBB9F70")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xBB789C", Offset = "0xBB789C", VA = "0xBB789C")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xBBA2D0", Offset = "0xBBA2D0", VA = "0xBBA2D0")]
	public void destroyBirds()
	{
	}
}
[Token(Token = "0x20000E3")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float _timer;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xBBA41C", Offset = "0xBBA41C", VA = "0xBBA41C")]
	public FlockWaypointTrigger()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xBBA42C", Offset = "0xBBA42C", VA = "0xBBA42C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xBBA568", Offset = "0xBBA568", VA = "0xBBA568")]
	public void Trigger()
	{
	}
}
[Token(Token = "0x20000E4")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FlockController _flockController;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float hSliderValue;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x522DE4", Offset = "0x522DE4", VA = "0x522DE4")]
	public LandingButtons()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x522DF8", Offset = "0x522DF8", VA = "0x522DF8")]
	public void OnGUI()
	{
	}
}
[Token(Token = "0x20000E5")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A74", Offset = "0x173A74")]
	private sealed class <GetFlockChild>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float minDelay;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float maxDelay;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LandingSpot $this;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004D7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x5264B4", Offset = "0x5264B4", VA = "0x5264B4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x5264BC", Offset = "0x5264BC", VA = "0x5264BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x5253A4", Offset = "0x5253A4", VA = "0x5253A4")]
		[DebuggerHidden]
		public <GetFlockChild>c__Iterator0()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x5257B4", Offset = "0x5257B4", VA = "0x5257B4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x5264C4", Offset = "0x5264C4", VA = "0x5264C4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x5264D8", Offset = "0x5264D8", VA = "0x5264D8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A84", Offset = "0x173A84")]
	private sealed class <ReleaseFlockChild>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float minDelay;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float maxDelay;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LandingSpot $this;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004D9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x526D58", Offset = "0x526D58", VA = "0x526D58", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x526D60", Offset = "0x526D60", VA = "0x526D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x5257AC", Offset = "0x5257AC", VA = "0x5257AC")]
		[DebuggerHidden]
		public <ReleaseFlockChild>c__Iterator1()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x526560", Offset = "0x526560", VA = "0x526560", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x526D68", Offset = "0x526D68", VA = "0x526D68", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x526D7C", Offset = "0x526D7C", VA = "0x526D7C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lerpCounter;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _idle;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _thisT;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x523F40", Offset = "0x523F40", VA = "0x523F40")]
	public LandingSpot()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x523F48", Offset = "0x523F48", VA = "0x523F48")]
	public void Start()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x5242CC", Offset = "0x5242CC", VA = "0x5242CC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x5248A8", Offset = "0x5248A8", VA = "0x5248A8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x524108", Offset = "0x524108", VA = "0x524108")]
	[DebuggerHidden]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x5241D0", Offset = "0x5241D0", VA = "0x5241D0")]
	public void RandomRotate()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x5253AC", Offset = "0x5253AC", VA = "0x5253AC")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x5252DC", Offset = "0x5252DC", VA = "0x5252DC")]
	[DebuggerHidden]
	public IEnumerator ReleaseFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}
}
[Token(Token = "0x20000E6")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173A94", Offset = "0x173A94")]
	private sealed class <InstantLandOnStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float delay;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LandingSpotController $this;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170004DB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x442A48", Offset = "0x442A48", VA = "0x442A48", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x442A50", Offset = "0x442A50", VA = "0x442A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x442448", Offset = "0x442448", VA = "0x442448")]
		[DebuggerHidden]
		public <InstantLandOnStart>c__Iterator0()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x4427FC", Offset = "0x4427FC", VA = "0x4427FC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x442A58", Offset = "0x442A58", VA = "0x442A58", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x442A6C", Offset = "0x442A6C", VA = "0x442A6C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173AA4", Offset = "0x173AA4")]
	private sealed class <InstantLand>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float delay;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LandingSpotController $this;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170004DD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x442750", Offset = "0x442750", VA = "0x442750", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x442758", Offset = "0x442758", VA = "0x442758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x4424FC", Offset = "0x4424FC", VA = "0x4424FC")]
		[DebuggerHidden]
		public <InstantLand>c__Iterator1()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x442504", Offset = "0x442504", VA = "0x442504", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x442760", Offset = "0x442760", VA = "0x442760", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x442774", Offset = "0x442774", VA = "0x442774", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool _randomRotate;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _maxBirdDistance;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _minBirdDistance;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _takeClosest;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public FlockController _flock;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _landOnStart;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool _soarLand;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _landingSpeedModifier;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform _featherPS;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _thisT;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x441B38", Offset = "0x441B38", VA = "0x441B38")]
	public LandingSpotController()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x441BE8", Offset = "0x441BE8", VA = "0x441BE8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x441F5C", Offset = "0x441F5C", VA = "0x441F5C")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x4420FC", Offset = "0x4420FC", VA = "0x4420FC")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x4422A8", Offset = "0x4422A8", VA = "0x4422A8")]
	public void LandAll()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x441EB0", Offset = "0x441EB0", VA = "0x441EB0")]
	[DebuggerHidden]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x442450", Offset = "0x442450", VA = "0x442450")]
	[DebuggerHidden]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}
}
namespace SWS
{
	[Token(Token = "0x20000E7")]
	public class MoveAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private splineMove sMove;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NavMeshAgent nAgent;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Animator animator;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastRotY;

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x2E62D4", Offset = "0x2E62D4", VA = "0x2E62D4")]
		public MoveAnimator()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x2E62DC", Offset = "0x2E62DC", VA = "0x2E62DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x2E63C0", Offset = "0x2E63C0", VA = "0x2E63C0")]
		private void OnAnimatorMove()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class PathIndicator : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173AB4", Offset = "0x173AB4")]
		private sealed class <EmitParticles>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float <rot>__1;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal ParticleSystem.MainModule <pMain>__1;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PathIndicator $this;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal object $current;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x170004DF")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0x2E6A80", Offset = "0x2E6A80", VA = "0x2E6A80", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024EB")]
				[Address(RVA = "0x2E6A88", Offset = "0x2E6A88", VA = "0x2E6A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x2E685C", Offset = "0x2E685C", VA = "0x2E685C")]
			[DebuggerHidden]
			public <EmitParticles>c__Iterator0()
			{
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x2E6864", Offset = "0x2E6864", VA = "0x2E6864", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x2E6A90", Offset = "0x2E6A90", VA = "0x2E6A90", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x2E6AA4", Offset = "0x2E6AA4", VA = "0x2E6AA4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float modRotation;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ParticleSystem pSys;

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x2E674C", Offset = "0x2E674C", VA = "0x2E674C")]
		public PathIndicator()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x2E6754", Offset = "0x2E6754", VA = "0x2E6754")]
		private void Start()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x2E67D8", Offset = "0x2E67D8", VA = "0x2E67D8")]
		[DebuggerHidden]
		private IEnumerator EmitParticles()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x17243C", Offset = "0x17243C")]
	public class PathRenderer : MonoBehaviour
	{
		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173AC4", Offset = "0x173AC4")]
		private sealed class <StartRenderer>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal PathRenderer $this;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170004E1")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60024F0")]
				[Address(RVA = "0x2E8418", Offset = "0x2E8418", VA = "0x2E8418", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F1")]
				[Address(RVA = "0x2E8420", Offset = "0x2E8420", VA = "0x2E8420", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x2E78F8", Offset = "0x2E78F8", VA = "0x2E78F8")]
			[DebuggerHidden]
			public <StartRenderer>c__Iterator0()
			{
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x2E8350", Offset = "0x2E8350", VA = "0x2E8350", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x2E8428", Offset = "0x2E8428", VA = "0x2E8428", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x2E843C", Offset = "0x2E843C", VA = "0x2E843C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool onUpdate;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float spacing;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private PathManager path;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer line;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3[] points;

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x2E777C", Offset = "0x2E777C", VA = "0x2E777C")]
		public PathRenderer()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x2E7790", Offset = "0x2E7790", VA = "0x2E7790")]
		private void Start()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x2E7874", Offset = "0x2E7874", VA = "0x2E7874")]
		[DebuggerHidden]
		private IEnumerator StartRenderer()
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x2E7900", Offset = "0x2E7900", VA = "0x2E7900")]
		private void Render()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x2E7BDC", Offset = "0x2E7BDC", VA = "0x2E7BDC")]
		private void DrawCurved()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x2E7D50", Offset = "0x2E7D50", VA = "0x2E7D50")]
		private void DrawLinear()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class BezierPathManager : PathManager
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3[] pathPoints;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<BezierPoint> bPoints;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool showHandles;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool connectHandles;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color color3;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pathDetail;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool customDetail;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<float> segmentDetail;

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x2E41B8", Offset = "0x2E41B8", VA = "0x2E41B8")]
		public BezierPathManager()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x2E442C", Offset = "0x2E442C", VA = "0x2E442C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x2E4FF8", Offset = "0x2E4FF8", VA = "0x2E4FF8", Slot = "4")]
		public override void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x2E53FC", Offset = "0x2E53FC", VA = "0x2E53FC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x2E5B74", Offset = "0x2E5B74", VA = "0x2E5B74", Slot = "6")]
		public override Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x2E5CE4", Offset = "0x2E5CE4", VA = "0x2E5CE4", Slot = "9")]
		public override int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x2E5D5C", Offset = "0x2E5D5C", VA = "0x2E5D5C", Slot = "7")]
		public override Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x2E5DF4", Offset = "0x2E5DF4", VA = "0x2E5DF4", Slot = "8")]
		public override int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x2E4C28", Offset = "0x2E4C28", VA = "0x2E4C28")]
		public void CalculatePath()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x2E5F60", Offset = "0x2E5F60", VA = "0x2E5F60")]
		private List<Vector3> GetPoints(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float detail)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000EB")]
	public class BezierPoint
	{
		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform wp;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform[] cp;

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x2E5388", Offset = "0x2E5388", VA = "0x2E5388")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class PathManager : MonoBehaviour
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform[] waypoints;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool drawCurved;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool drawDirection;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color color1;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color2;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 size;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool skipCustomNames;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject replaceObject;

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x2E42EC", Offset = "0x2E42EC", VA = "0x2E42EC")]
		public PathManager()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x2E6B2C", Offset = "0x2E6B2C", VA = "0x2E6B2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x2E6BBC", Offset = "0x2E6BBC", VA = "0x2E6BBC")]
		public void Create([Optional] Transform parent)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x2E6FEC", Offset = "0x2E6FEC", VA = "0x2E6FEC", Slot = "4")]
		public virtual void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x2E7114", Offset = "0x2E7114", VA = "0x2E7114")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x2E74D0", Offset = "0x2E74D0", VA = "0x2E74D0", Slot = "5")]
		public virtual float GetHandleSize(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x2E74D8", Offset = "0x2E74D8", VA = "0x2E74D8", Slot = "6")]
		public virtual Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x2E7708", Offset = "0x2E7708", VA = "0x2E7708", Slot = "7")]
		public virtual Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x2E7750", Offset = "0x2E7750", VA = "0x2E7750", Slot = "8")]
		public virtual int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x2E7758", Offset = "0x2E7758", VA = "0x2E7758", Slot = "9")]
		public virtual int GetWaypointCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000ED")]
	public class WaypointManager : MonoBehaviour
	{
		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<string, PathManager> Paths;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x176010", Offset = "0x176010")]
		private static Func<KeyValuePair<string, PathManager>, bool> <>f__am$cache0;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x176020", Offset = "0x176020")]
		private static Func<KeyValuePair<string, PathManager>, string> <>f__am$cache1;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x2E84C4", Offset = "0x2E84C4", VA = "0x2E84C4")]
		public WaypointManager()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x2E84CC", Offset = "0x2E84CC", VA = "0x2E84CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x2E44F0", Offset = "0x2E44F0", VA = "0x2E44F0")]
		public static void AddPath(GameObject path)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x2E8564", Offset = "0x2E8564", VA = "0x2E8564")]
		public static void CleanUp()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x2E88AC", Offset = "0x2E88AC", VA = "0x2E88AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x2E5AC8", Offset = "0x2E5AC8", VA = "0x2E5AC8")]
		public static void DrawStraight(Vector3[] waypoints)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x2E5978", Offset = "0x2E5978", VA = "0x2E5978")]
		public static void DrawCurved(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x2E8960", Offset = "0x2E8960", VA = "0x2E8960")]
		public static Vector3[] GetCurved(Vector3[] waypoints)
		{
			return null;
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x2E7E3C", Offset = "0x2E7E3C", VA = "0x2E7E3C")]
		public static Vector3 GetPoint(Vector3[] gizmoPoints, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x2E8C08", Offset = "0x2E8C08", VA = "0x2E8C08")]
		public static float GetPathLength(Vector3[] waypoints)
		{
			return default(float);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x2E8D48", Offset = "0x2E8D48", VA = "0x2E8D48")]
		public static List<Vector3> SmoothCurve(List<Vector3> pathToCurve, int interpolations)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x2E91D8", Offset = "0x2E91D8", VA = "0x2E91D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180498", Offset = "0x180498")]
		private static bool <CleanUp>m__0(KeyValuePair<string, PathManager> p)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x2E9288", Offset = "0x2E9288", VA = "0x2E9288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1804A8", Offset = "0x1804A8")]
		private static string <CleanUp>m__1(KeyValuePair<string, PathManager> p)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1724B4", Offset = "0x1724B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1724B4", Offset = "0x1724B4")]
	public class navMove : MonoBehaviour
	{
		[Token(Token = "0x20000EF")]
		public enum LoopType
		{
			[Token(Token = "0x40005C2")]
			none,
			[Token(Token = "0x40005C3")]
			loop,
			[Token(Token = "0x40005C4")]
			pingPong,
			[Token(Token = "0x40005C5")]
			random
		}

		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173AD4", Offset = "0x173AD4")]
		private sealed class <Move>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal navMove $this;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170004E3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60024F6")]
				[Address(RVA = "0x2EA7D0", Offset = "0x2EA7D0", VA = "0x2EA7D0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F7")]
				[Address(RVA = "0x2EA7D8", Offset = "0x2EA7D8", VA = "0x2EA7D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x2E9870", Offset = "0x2E9870", VA = "0x2E9870")]
			[DebuggerHidden]
			public <Move>c__Iterator0()
			{
			}

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x2EA43C", Offset = "0x2EA43C", VA = "0x2EA43C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x2EA7E0", Offset = "0x2EA7E0", VA = "0x2EA7E0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x2EA7F4", Offset = "0x2EA7F4", VA = "0x2EA7F4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173AE4", Offset = "0x173AE4")]
		private sealed class <NextWaypoint>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Transform <next>__0;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal navMove $this;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004E5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60024FC")]
				[Address(RVA = "0x2EAF90", Offset = "0x2EAF90", VA = "0x2EAF90", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024FD")]
				[Address(RVA = "0x2EAF98", Offset = "0x2EAF98", VA = "0x2EAF98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x2E98FC", Offset = "0x2E98FC", VA = "0x2E98FC")]
			[DebuggerHidden]
			public <NextWaypoint>c__Iterator1()
			{
			}

			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x2EA87C", Offset = "0x2EA87C", VA = "0x2EA87C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x2EAFA0", Offset = "0x2EAFA0", VA = "0x2EAFA0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x2EAFB4", Offset = "0x2EAFB4", VA = "0x2EAFB4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173AF4", Offset = "0x173AF4")]
		private sealed class <WaitForDestination>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float <remain>__0;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal navMove $this;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002502")]
				[Address(RVA = "0x2EB884", Offset = "0x2EB884", VA = "0x2EB884", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002503")]
				[Address(RVA = "0x2EB88C", Offset = "0x2EB88C", VA = "0x2EB88C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0x2E9988", Offset = "0x2E9988", VA = "0x2E9988")]
			[DebuggerHidden]
			public <WaitForDestination>c__Iterator2()
			{
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0x2EB5D0", Offset = "0x2EB5D0", VA = "0x2EB5D0", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0x2EB894", Offset = "0x2EB894", VA = "0x2EB894", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0x2EB8A8", Offset = "0x2EB8A8", VA = "0x2EB8A8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B04", Offset = "0x173B04")]
		private sealed class <ReachedEnd>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal LoopType $locvar0;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal navMove $this;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004E9")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002508")]
				[Address(RVA = "0x2EB38C", Offset = "0x2EB38C", VA = "0x2EB38C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002509")]
				[Address(RVA = "0x2EB394", Offset = "0x2EB394", VA = "0x2EB394", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002506")]
			[Address(RVA = "0x2E9B48", Offset = "0x2E9B48", VA = "0x2E9B48")]
			[DebuggerHidden]
			public <ReachedEnd>c__Iterator3()
			{
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x2EB03C", Offset = "0x2EB03C", VA = "0x2EB03C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x2EB39C", Offset = "0x2EB39C", VA = "0x2EB39C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x2EB3B0", Offset = "0x2EB3B0", VA = "0x2EB3B0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B14", Offset = "0x173B14")]
		private sealed class <Wait>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float secs;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal navMove $this;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004EB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600250E")]
				[Address(RVA = "0x2EB524", Offset = "0x2EB524", VA = "0x2EB524", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250F")]
				[Address(RVA = "0x2EB52C", Offset = "0x2EB52C", VA = "0x2EB52C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600250C")]
			[Address(RVA = "0x2EA1D8", Offset = "0x2EA1D8", VA = "0x2EA1D8")]
			[DebuggerHidden]
			public <Wait>c__Iterator4()
			{
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0x2EB438", Offset = "0x2EB438", VA = "0x2EB438", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0x2EB534", Offset = "0x2EB534", VA = "0x2EB534", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0x2EB548", Offset = "0x2EB548", VA = "0x2EB548", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PathManager pathContainer;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool onStart;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool moveToPath;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool reverse;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startPoint;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool closeLoop;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool updateRotation;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LoopType loopType;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] waypoints;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool repeat;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent agent;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private System.Random rand;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rndIndex;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool waiting;

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x2E92F8", Offset = "0x2E92F8", VA = "0x2E92F8")]
		public navMove()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x2E93B0", Offset = "0x2E93B0", VA = "0x2E93B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x2E9418", Offset = "0x2E9418", VA = "0x2E9418")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x2E9428", Offset = "0x2E9428", VA = "0x2E9428")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x2E97EC", Offset = "0x2E97EC", VA = "0x2E97EC")]
		[DebuggerHidden]
		private IEnumerator Move()
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x2E9878", Offset = "0x2E9878", VA = "0x2E9878")]
		[DebuggerHidden]
		private IEnumerator NextWaypoint()
		{
			return null;
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x2E9904", Offset = "0x2E9904", VA = "0x2E9904")]
		[DebuggerHidden]
		private IEnumerator WaitForDestination()
		{
			return null;
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x2E9990", Offset = "0x2E9990", VA = "0x2E9990")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x2E9AC4", Offset = "0x2E9AC4", VA = "0x2E9AC4")]
		[DebuggerHidden]
		private IEnumerator ReachedEnd()
		{
			return null;
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x2E9B50", Offset = "0x2E9B50", VA = "0x2E9B50")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x2E9FB4", Offset = "0x2E9FB4", VA = "0x2E9FB4")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x2EA0A0", Offset = "0x2EA0A0", VA = "0x2EA0A0")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x2EA12C", Offset = "0x2EA12C", VA = "0x2EA12C")]
		[DebuggerHidden]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x2EA1E0", Offset = "0x2EA1E0", VA = "0x2EA1E0")]
		public void Resume()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x2EA230", Offset = "0x2EA230", VA = "0x2EA230")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x2EA2A4", Offset = "0x2EA2A4", VA = "0x2EA2A4")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x2E978C", Offset = "0x2E978C", VA = "0x2E978C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x2EA2C8", Offset = "0x2EA2C8", VA = "0x2EA2C8")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x2EA408", Offset = "0x2EA408", VA = "0x2EA408")]
		public void ChangeSpeed(float value)
		{
		}
	}
	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x17256C", Offset = "0x17256C")]
	public class splineMove : MonoBehaviour
	{
		[Token(Token = "0x20000F1")]
		public enum TimeValue
		{
			[Token(Token = "0x40005E6")]
			time,
			[Token(Token = "0x40005E7")]
			speed
		}

		[Token(Token = "0x20000F2")]
		public enum LoopType
		{
			[Token(Token = "0x40005E9")]
			none,
			[Token(Token = "0x40005EA")]
			loop,
			[Token(Token = "0x40005EB")]
			pingPong,
			[Token(Token = "0x40005EC")]
			random,
			[Token(Token = "0x40005ED")]
			yoyo
		}

		[Token(Token = "0x20000F3")]
		public enum RotationType
		{
			[Token(Token = "0x40005EF")]
			none,
			[Token(Token = "0x40005F0")]
			all
		}

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B24", Offset = "0x173B24")]
		private sealed class <Wait>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float secs;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal splineMove $this;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x170004ED")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002514")]
				[Address(RVA = "0x2EE034", Offset = "0x2EE034", VA = "0x2EE034", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002515")]
				[Address(RVA = "0x2EE03C", Offset = "0x2EE03C", VA = "0x2EE03C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002512")]
			[Address(RVA = "0x2EDC00", Offset = "0x2EDC00", VA = "0x2EDC00")]
			[DebuggerHidden]
			public <Wait>c__Iterator0()
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0x2EDF48", Offset = "0x2EDF48", VA = "0x2EDF48", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0x2EE044", Offset = "0x2EE044", VA = "0x2EE044", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002517")]
			[Address(RVA = "0x2EE058", Offset = "0x2EE058", VA = "0x2EE058", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public bool returnToLoopStart;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxDegreesDelta;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathManager pathContainer;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onStart;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool moveToPath;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool reverse;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int startPoint;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool closeLoop;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool local;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lookAhead;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sizeToAdd;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimeValue timeValue;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float speed;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve animEaseType;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LoopType loopType;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] waypoints;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PathType pathType;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PathMode pathMode;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Ease easeType;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public AxisConstraint lockPosition;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AxisConstraint lockRotation;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public RotationType waypointRotation;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rotationTarget;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public Tweener tween;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] wpPos;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float originSpeed;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion originRot;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private System.Random rand;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int[] rndArray;

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x2EB930", Offset = "0x2EB930", VA = "0x2EB930")]
		public splineMove()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x2EBA00", Offset = "0x2EBA00", VA = "0x2EBA00")]
		private void Start()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x2EBA10", Offset = "0x2EBA10", VA = "0x2EBA10")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x2EBCA8", Offset = "0x2EBCA8", VA = "0x2EBCA8")]
		private void Initialize(int startAt = 0)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x2EBF98", Offset = "0x2EBF98", VA = "0x2EBF98")]
		private void CreateTween()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x2ECBCC", Offset = "0x2ECBCC", VA = "0x2ECBCC")]
		private void OnWaypointReached(int index)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x2ECC08", Offset = "0x2ECC08", VA = "0x2ECC08")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x2ECE20", Offset = "0x2ECE20", VA = "0x2ECE20")]
		private void OnWaypointRotation()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x2ED9A0", Offset = "0x2ED9A0", VA = "0x2ED9A0")]
		public void ApplyLookAheadRotationZ(float maxRotation, float lookAhead)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x2ED82C", Offset = "0x2ED82C", VA = "0x2ED82C")]
		private void ApplyWaypointRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x2ED9EC", Offset = "0x2ED9EC", VA = "0x2ED9EC")]
		private void ReachedEnd()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x2EC58C", Offset = "0x2EC58C", VA = "0x2EC58C")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x2ECB28", Offset = "0x2ECB28", VA = "0x2ECB28")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x2EDA90", Offset = "0x2EDA90", VA = "0x2EDA90")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x2EDB54", Offset = "0x2EDB54", VA = "0x2EDB54")]
		[DebuggerHidden]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x2EDC08", Offset = "0x2EDC08", VA = "0x2EDC08")]
		public void Resume()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x2EDC90", Offset = "0x2EDC90", VA = "0x2EDC90")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x2EDD58", Offset = "0x2EDD58", VA = "0x2EDD58")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x2EBF60", Offset = "0x2EBF60", VA = "0x2EBF60")]
		public void Stop()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x2EDD7C", Offset = "0x2EDD7C", VA = "0x2EDD7C")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x2ECB94", Offset = "0x2ECB94", VA = "0x2ECB94")]
		public void ChangeSpeed(float value)
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20000F4")]
	public enum AchievementType : uint
	{
		[Token(Token = "0x40005F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1760B0", Offset = "0x1760B0")]
		Unknown,
		[Token(Token = "0x40005F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1760E4", Offset = "0x1760E4")]
		Simple,
		[Token(Token = "0x40005F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176118", Offset = "0x176118")]
		Bitfield,
		[Token(Token = "0x40005F5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176150", Offset = "0x176150")]
		Count
	}
	[Token(Token = "0x20000F5")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x3FDA30", Offset = "0x3FDA30", VA = "0x3FDA30")]
		public AndroidPlatform()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x3FDA38", Offset = "0x3FDA38", VA = "0x3FDA38")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x20000F6")]
public class BufferedAudioStream
{
	[Token(Token = "0x40005F6")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AudioSource audio;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] audioBuffer;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int writePos;

	[Token(Token = "0x40005FA")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40005FB")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40005FC")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40005FD")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float remainingBufferTime;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x43FDF0", Offset = "0x43FDF0", VA = "0x43FDF0")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x43FF88", Offset = "0x43FF88", VA = "0x43FF88")]
	public void Update()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x43FF20", Offset = "0x43FF20", VA = "0x43FF20")]
	private void Stop()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x440244", Offset = "0x440244", VA = "0x440244")]
	public void AddData(float[] samples)
	{
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20000F7")]
	public static class Callback
	{
		[Token(Token = "0x20000F8")]
		private class RequestCallback
		{
			[Token(Token = "0x4000604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Message.Callback messageCallback;

			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x295594", Offset = "0x295594", VA = "0x295594")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x294C4C", Offset = "0x294C4C", VA = "0x294C4C")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x29559C", Offset = "0x29559C", VA = "0x29559C", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20000F9")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x60007E0")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x60007E1")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x60007D4")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x294B04", Offset = "0x294B04", VA = "0x294B04")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x60007D6")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x294C6C", Offset = "0x294C6C", VA = "0x294C6C")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x294D84", Offset = "0x294D84", VA = "0x294D84")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x295194", Offset = "0x295194", VA = "0x295194")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x295248", Offset = "0x295248", VA = "0x295248")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x294EF4", Offset = "0x294EF4", VA = "0x294EF4")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x29596C", Offset = "0x29596C", VA = "0x29596C")]
		public CallbackRunner()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x295980", Offset = "0x295980", VA = "0x295980")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x295A5C", Offset = "0x295A5C", VA = "0x295A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x295B94", Offset = "0x295B94", VA = "0x295B94")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x295C48", Offset = "0x295C48", VA = "0x295C48")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class CAPI
	{
		[Token(Token = "0x20000FC")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x400060A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x400060B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x400060C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stringValue_;

			[Token(Token = "0x400060D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int intValue_;

			[Token(Token = "0x400060E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double doubleValue_;

			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x1C4044", Offset = "0x1C4044", VA = "0x1C4044")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x1C4064", Offset = "0x1C4064", VA = "0x1C4064")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x1C4088", Offset = "0x1C4088", VA = "0x1C4088")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20000FD")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x400060F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4000611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr parameterArray;

			[Token(Token = "0x4000612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint parameterArrayCount;

			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x1C4144", Offset = "0x1C4144", VA = "0x1C4144")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20000FE")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4000613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4000614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint dataArrayCount;

			[Token(Token = "0x4000615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr criterionArray;

			[Token(Token = "0x4000616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20000FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1725BC", Offset = "0x1725BC")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4000607")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000609")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x3FDE6C", Offset = "0x3FDE6C", VA = "0x3FDE6C")]
		public CAPI()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x3FDE74", Offset = "0x3FDE74", VA = "0x3FDE74")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x3FE080", Offset = "0x3FE080", VA = "0x3FE080")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x3FE7B0", Offset = "0x3FE7B0", VA = "0x3FE7B0")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x3FE8A4", Offset = "0x3FE8A4", VA = "0x3FE8A4")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x3FECB4", Offset = "0x3FECB4", VA = "0x3FECB4")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x3FEE08", Offset = "0x3FEE08", VA = "0x3FEE08")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x3FEEA4", Offset = "0x3FEEA4", VA = "0x3FEEA4")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x3FEF44", Offset = "0x3FEF44", VA = "0x3FEF44")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x3FF048", Offset = "0x3FF048", VA = "0x3FF048")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x3FF108", Offset = "0x3FF108", VA = "0x3FF108")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x3FDB50", Offset = "0x3FDB50", VA = "0x3FDB50")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x3FF310", Offset = "0x3FF310", VA = "0x3FF310")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x3FF428", Offset = "0x3FF428", VA = "0x3FF428")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x3FF538", Offset = "0x3FF538", VA = "0x3FF538")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x3FF640", Offset = "0x3FF640", VA = "0x3FF640")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x3FF6C0", Offset = "0x3FF6C0", VA = "0x3FF6C0")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x3FF798", Offset = "0x3FF798", VA = "0x3FF798")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x3FF890", Offset = "0x3FF890", VA = "0x3FF890")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x3FF998", Offset = "0x3FF998", VA = "0x3FF998")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x3FFA80", Offset = "0x3FFA80", VA = "0x3FFA80")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x3FFB88", Offset = "0x3FFB88", VA = "0x3FFB88")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x3FFCA0", Offset = "0x3FFCA0", VA = "0x3FFCA0")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x3FFDA8", Offset = "0x3FFDA8", VA = "0x3FFDA8")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x3FFEC0", Offset = "0x3FFEC0", VA = "0x3FFEC0")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x3FFFB0", Offset = "0x3FFFB0", VA = "0x3FFFB0")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x4000B0", Offset = "0x4000B0", VA = "0x4000B0")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x4001C8", Offset = "0x4001C8", VA = "0x4001C8")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x4002B0", Offset = "0x4002B0", VA = "0x4002B0")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x400398", Offset = "0x400398", VA = "0x400398")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x3FD760", Offset = "0x3FD760", VA = "0x3FD760")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x400470", Offset = "0x400470", VA = "0x400470")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x400570", Offset = "0x400570", VA = "0x400570")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x400668", Offset = "0x400668", VA = "0x400668")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x400774", Offset = "0x400774", VA = "0x400774")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x400BC0", Offset = "0x400BC0", VA = "0x400BC0")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x400CE0", Offset = "0x400CE0", VA = "0x400CE0")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x400DC4", Offset = "0x400DC4", VA = "0x400DC4")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers, UIntPtr count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x400EA8", Offset = "0x400EA8", VA = "0x400EA8")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr count);

		[PreserveSig]
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x401068", Offset = "0x401068", VA = "0x401068")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x401198", Offset = "0x401198", VA = "0x401198")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[PreserveSig]
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x4012A8", Offset = "0x4012A8", VA = "0x4012A8")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x4013B8", Offset = "0x4013B8", VA = "0x4013B8")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x401498", Offset = "0x401498", VA = "0x401498")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x4015A0", Offset = "0x4015A0", VA = "0x4015A0")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x401678", Offset = "0x401678", VA = "0x401678")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x401788", Offset = "0x401788", VA = "0x401788")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x4018A8", Offset = "0x4018A8", VA = "0x4018A8")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x4019B0", Offset = "0x4019B0", VA = "0x4019B0")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x401AB0", Offset = "0x401AB0", VA = "0x401AB0")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x401BF0", Offset = "0x401BF0", VA = "0x401BF0")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x401CF0", Offset = "0x401CF0", VA = "0x401CF0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x401E00", Offset = "0x401E00", VA = "0x401E00")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x401ED8", Offset = "0x401ED8", VA = "0x401ED8")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x402000", Offset = "0x402000", VA = "0x402000")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x402130", Offset = "0x402130", VA = "0x402130")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x402248", Offset = "0x402248", VA = "0x402248")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x402328", Offset = "0x402328", VA = "0x402328")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x402400", Offset = "0x402400", VA = "0x402400")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x4024E0", Offset = "0x4024E0", VA = "0x4024E0")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x4025C0", Offset = "0x4025C0", VA = "0x4025C0")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x4026D0", Offset = "0x4026D0", VA = "0x4026D0")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x3FC720", Offset = "0x3FC720", VA = "0x3FC720")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x4027D8", Offset = "0x4027D8", VA = "0x4027D8")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x3FC920", Offset = "0x3FC920", VA = "0x3FC920")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000828")]
		[Address(RVA = "0x4028C8", Offset = "0x4028C8", VA = "0x4028C8")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x3FCB20", Offset = "0x3FCB20", VA = "0x3FCB20")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x3FCD08", Offset = "0x3FCD08", VA = "0x3FCD08")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x3FCF08", Offset = "0x3FCF08", VA = "0x3FCF08")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x3FD1F8", Offset = "0x3FD1F8", VA = "0x3FD1F8")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x3FD4CC", Offset = "0x3FD4CC", VA = "0x3FD4CC")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x4029B0", Offset = "0x4029B0", VA = "0x4029B0")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x600082F")]
		[Address(RVA = "0x402A88", Offset = "0x402A88", VA = "0x402A88")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x402B90", Offset = "0x402B90", VA = "0x402B90")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000831")]
		[Address(RVA = "0x3FDD98", Offset = "0x3FDD98", VA = "0x3FDD98")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x402C78", Offset = "0x402C78", VA = "0x402C78")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x402D60", Offset = "0x402D60", VA = "0x402D60")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x402E40", Offset = "0x402E40", VA = "0x402E40")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x402F10", Offset = "0x402F10", VA = "0x402F10")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x402FFC", Offset = "0x402FFC", VA = "0x402FFC")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x4030F0", Offset = "0x4030F0", VA = "0x4030F0")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x4031D0", Offset = "0x4031D0", VA = "0x4031D0")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x4032C8", Offset = "0x4032C8", VA = "0x4032C8")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x4033A8", Offset = "0x4033A8", VA = "0x4033A8")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x403478", Offset = "0x403478", VA = "0x403478")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x40355C", Offset = "0x40355C", VA = "0x40355C")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600083D")]
		[Address(RVA = "0x403650", Offset = "0x403650", VA = "0x403650")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x403740", Offset = "0x403740", VA = "0x403740")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x403810", Offset = "0x403810", VA = "0x403810")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x4038EC", Offset = "0x4038EC", VA = "0x4038EC")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000841")]
		[Address(RVA = "0x4039E0", Offset = "0x4039E0", VA = "0x4039E0")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x403AC8", Offset = "0x403AC8", VA = "0x403AC8")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x403BE0", Offset = "0x403BE0", VA = "0x403BE0")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x403CD4", Offset = "0x403CD4", VA = "0x403CD4")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x403DE8", Offset = "0x403DE8", VA = "0x403DE8")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x403EDC", Offset = "0x403EDC", VA = "0x403EDC")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000847")]
		[Address(RVA = "0x404018", Offset = "0x404018", VA = "0x404018")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x404128", Offset = "0x404128", VA = "0x404128")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x404204", Offset = "0x404204", VA = "0x404204")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x4042D8", Offset = "0x4042D8", VA = "0x4042D8")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x4043E8", Offset = "0x4043E8", VA = "0x4043E8")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600084C")]
		[Address(RVA = "0x4044B8", Offset = "0x4044B8", VA = "0x4044B8")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x4045C8", Offset = "0x4045C8", VA = "0x4045C8")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600084E")]
		[Address(RVA = "0x404698", Offset = "0x404698", VA = "0x404698")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x4047A0", Offset = "0x4047A0", VA = "0x4047A0")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000850")]
		[Address(RVA = "0x404898", Offset = "0x404898", VA = "0x404898")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x4049B0", Offset = "0x4049B0", VA = "0x4049B0")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000852")]
		[Address(RVA = "0x404A80", Offset = "0x404A80", VA = "0x404A80")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x404B88", Offset = "0x404B88", VA = "0x404B88")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x404C58", Offset = "0x404C58", VA = "0x404C58")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x404D30", Offset = "0x404D30", VA = "0x404D30")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x404F28", Offset = "0x404F28", VA = "0x404F28")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x404FFC", Offset = "0x404FFC", VA = "0x404FFC")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x4050D0", Offset = "0x4050D0", VA = "0x4050D0")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x4051AC", Offset = "0x4051AC", VA = "0x4051AC")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x4052A0", Offset = "0x4052A0", VA = "0x4052A0")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x405394", Offset = "0x405394", VA = "0x405394")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x405488", Offset = "0x405488", VA = "0x405488")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x405588", Offset = "0x405588", VA = "0x405588")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x405668", Offset = "0x405668", VA = "0x405668")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x40574C", Offset = "0x40574C", VA = "0x40574C")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x405848", Offset = "0x405848", VA = "0x405848")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x405958", Offset = "0x405958", VA = "0x405958")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[PreserveSig]
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x405A30", Offset = "0x405A30", VA = "0x405A30")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x405B08", Offset = "0x405B08", VA = "0x405B08")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x405BE0", Offset = "0x405BE0", VA = "0x405BE0")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000865")]
		[Address(RVA = "0x405CB8", Offset = "0x405CB8", VA = "0x405CB8")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x405D98", Offset = "0x405D98", VA = "0x405D98")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x405E70", Offset = "0x405E70", VA = "0x405E70")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x405F50", Offset = "0x405F50", VA = "0x405F50")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x406048", Offset = "0x406048", VA = "0x406048")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x406128", Offset = "0x406128", VA = "0x406128")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x40622C", Offset = "0x40622C", VA = "0x40622C")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x406320", Offset = "0x406320", VA = "0x406320")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x406420", Offset = "0x406420", VA = "0x406420")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x4064F8", Offset = "0x4064F8", VA = "0x4064F8")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x4065E8", Offset = "0x4065E8", VA = "0x4065E8")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x4066C8", Offset = "0x4066C8", VA = "0x4066C8")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x4067B4", Offset = "0x4067B4", VA = "0x4067B4")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x406890", Offset = "0x406890", VA = "0x406890")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x406974", Offset = "0x406974", VA = "0x406974")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x406A50", Offset = "0x406A50", VA = "0x406A50")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x406B30", Offset = "0x406B30", VA = "0x406B30")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x406C08", Offset = "0x406C08", VA = "0x406C08")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x406CF0", Offset = "0x406CF0", VA = "0x406CF0")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x406DE0", Offset = "0x406DE0", VA = "0x406DE0")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x406ED0", Offset = "0x406ED0", VA = "0x406ED0")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x406FAC", Offset = "0x406FAC", VA = "0x406FAC")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x407090", Offset = "0x407090", VA = "0x407090")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x407180", Offset = "0x407180", VA = "0x407180")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x4072A8", Offset = "0x4072A8", VA = "0x4072A8")]
		public static extern ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data, uint numItems);

		[PreserveSig]
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x407488", Offset = "0x407488", VA = "0x407488")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x407570", Offset = "0x407570", VA = "0x407570")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x407648", Offset = "0x407648", VA = "0x407648")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x407730", Offset = "0x407730", VA = "0x407730")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x407828", Offset = "0x407828", VA = "0x407828")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x407920", Offset = "0x407920", VA = "0x407920")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x407A28", Offset = "0x407A28", VA = "0x407A28")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x407B28", Offset = "0x407B28", VA = "0x407B28")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000886")]
		[Address(RVA = "0x407C10", Offset = "0x407C10", VA = "0x407C10")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000887")]
		[Address(RVA = "0x407D30", Offset = "0x407D30", VA = "0x407D30")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x407E40", Offset = "0x407E40", VA = "0x407E40")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x407F50", Offset = "0x407F50", VA = "0x407F50")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x408040", Offset = "0x408040", VA = "0x408040")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600088B")]
		[Address(RVA = "0x408130", Offset = "0x408130", VA = "0x408130")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600088C")]
		[Address(RVA = "0x408238", Offset = "0x408238", VA = "0x408238")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x408338", Offset = "0x408338", VA = "0x408338")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600088E")]
		[Address(RVA = "0x408420", Offset = "0x408420", VA = "0x408420")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x600088F")]
		[Address(RVA = "0x4084F8", Offset = "0x4084F8", VA = "0x4084F8")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x4085D8", Offset = "0x4085D8", VA = "0x4085D8")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x4086B0", Offset = "0x4086B0", VA = "0x4086B0")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x4087CC", Offset = "0x4087CC", VA = "0x4087CC")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x4088B0", Offset = "0x4088B0", VA = "0x4088B0")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x408998", Offset = "0x408998", VA = "0x408998")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x408AA8", Offset = "0x408AA8", VA = "0x408AA8")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x408BC0", Offset = "0x408BC0", VA = "0x408BC0")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x408CE8", Offset = "0x408CE8", VA = "0x408CE8")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x408DD8", Offset = "0x408DD8", VA = "0x408DD8")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x408EE4", Offset = "0x408EE4", VA = "0x408EE4")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x408FC8", Offset = "0x408FC8", VA = "0x408FC8")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[PreserveSig]
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x4090B0", Offset = "0x4090B0", VA = "0x4090B0")]
		public static extern ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data, uint numItems);

		[PreserveSig]
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x4092B8", Offset = "0x4092B8", VA = "0x4092B8")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x4093B0", Offset = "0x4093B0", VA = "0x4093B0")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x4094D8", Offset = "0x4094D8", VA = "0x4094D8")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x600089F")]
		[Address(RVA = "0x4095D0", Offset = "0x4095D0", VA = "0x4095D0")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x4096D8", Offset = "0x4096D8", VA = "0x4096D8")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x4097E0", Offset = "0x4097E0", VA = "0x4097E0")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x4098E8", Offset = "0x4098E8", VA = "0x4098E8")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x4099C0", Offset = "0x4099C0", VA = "0x4099C0")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x409AA0", Offset = "0x409AA0", VA = "0x409AA0")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x409BC0", Offset = "0x409BC0", VA = "0x409BC0")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x409CC0", Offset = "0x409CC0", VA = "0x409CC0")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x409D98", Offset = "0x409D98", VA = "0x409D98")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x409E98", Offset = "0x409E98", VA = "0x409E98")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x409F70", Offset = "0x409F70", VA = "0x409F70")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[PreserveSig]
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x40A058", Offset = "0x40A058", VA = "0x40A058")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x40A144", Offset = "0x40A144", VA = "0x40A144")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x40A1C8", Offset = "0x40A1C8", VA = "0x40A1C8")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x40A2B0", Offset = "0x40A2B0", VA = "0x40A2B0")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x40A398", Offset = "0x40A398", VA = "0x40A398")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x40A480", Offset = "0x40A480", VA = "0x40A480")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x40A574", Offset = "0x40A574", VA = "0x40A574")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x40A5F8", Offset = "0x40A5F8", VA = "0x40A5F8")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x40A6E8", Offset = "0x40A6E8", VA = "0x40A6E8")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x40A7D0", Offset = "0x40A7D0", VA = "0x40A7D0")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x40A8C4", Offset = "0x40A8C4", VA = "0x40A8C4")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x40A948", Offset = "0x40A948", VA = "0x40A948")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x40AA30", Offset = "0x40AA30", VA = "0x40AA30")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x40AB18", Offset = "0x40AB18", VA = "0x40AB18")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x40AC08", Offset = "0x40AC08", VA = "0x40AC08")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x40AC90", Offset = "0x40AC90", VA = "0x40AC90")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x40AD70", Offset = "0x40AD70", VA = "0x40AD70")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x40AE18", Offset = "0x40AE18", VA = "0x40AE18")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x40AF00", Offset = "0x40AF00", VA = "0x40AF00")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x40AFF0", Offset = "0x40AFF0", VA = "0x40AFF0")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x40B078", Offset = "0x40B078", VA = "0x40B078")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x40B160", Offset = "0x40B160", VA = "0x40B160")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x40B248", Offset = "0x40B248", VA = "0x40B248")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x40B340", Offset = "0x40B340", VA = "0x40B340")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x40B430", Offset = "0x40B430", VA = "0x40B430")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x40B4B8", Offset = "0x40B4B8", VA = "0x40B4B8")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x40B598", Offset = "0x40B598", VA = "0x40B598")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x40B6A8", Offset = "0x40B6A8", VA = "0x40B6A8")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x40B790", Offset = "0x40B790", VA = "0x40B790")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x40B818", Offset = "0x40B818", VA = "0x40B818")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x40B900", Offset = "0x40B900", VA = "0x40B900")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x40B9E8", Offset = "0x40B9E8", VA = "0x40B9E8")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x40BA70", Offset = "0x40BA70", VA = "0x40BA70")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x40BB58", Offset = "0x40BB58", VA = "0x40BB58")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x40BC48", Offset = "0x40BC48", VA = "0x40BC48")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x40BD34", Offset = "0x40BD34", VA = "0x40BD34")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x40BDB8", Offset = "0x40BDB8", VA = "0x40BDB8")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x40BE98", Offset = "0x40BE98", VA = "0x40BE98")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x40C018", Offset = "0x40C018", VA = "0x40C018")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x40BF30", Offset = "0x40BF30", VA = "0x40BF30")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x40C0F8", Offset = "0x40C0F8", VA = "0x40C0F8")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x40C180", Offset = "0x40C180", VA = "0x40C180")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x40C25C", Offset = "0x40C25C", VA = "0x40C25C")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x40C2E0", Offset = "0x40C2E0", VA = "0x40C2E0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x40C3C8", Offset = "0x40C3C8", VA = "0x40C3C8")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x40C4B0", Offset = "0x40C4B0", VA = "0x40C4B0")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x40C598", Offset = "0x40C598", VA = "0x40C598")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x40C620", Offset = "0x40C620", VA = "0x40C620")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x40C708", Offset = "0x40C708", VA = "0x40C708")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x40C790", Offset = "0x40C790", VA = "0x40C790")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x40C870", Offset = "0x40C870", VA = "0x40C870")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x40C958", Offset = "0x40C958", VA = "0x40C958")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x40CA3C", Offset = "0x40CA3C", VA = "0x40CA3C")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x40CAC0", Offset = "0x40CAC0", VA = "0x40CAC0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x40CBB0", Offset = "0x40CBB0", VA = "0x40CBB0")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x40CCA4", Offset = "0x40CCA4", VA = "0x40CCA4")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x40CD28", Offset = "0x40CD28", VA = "0x40CD28")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x40CE18", Offset = "0x40CE18", VA = "0x40CE18")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x40CF00", Offset = "0x40CF00", VA = "0x40CF00")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x40CFF4", Offset = "0x40CFF4", VA = "0x40CFF4")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x40D078", Offset = "0x40D078", VA = "0x40D078")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x40D164", Offset = "0x40D164", VA = "0x40D164")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x40D1E8", Offset = "0x40D1E8", VA = "0x40D1E8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x40D2D0", Offset = "0x40D2D0", VA = "0x40D2D0")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x40D3BC", Offset = "0x40D3BC", VA = "0x40D3BC")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x40D440", Offset = "0x40D440", VA = "0x40D440")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x40D530", Offset = "0x40D530", VA = "0x40D530")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x40D608", Offset = "0x40D608", VA = "0x40D608")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x3FEB50", Offset = "0x3FEB50", VA = "0x3FEB50")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x40D6E8", Offset = "0x40D6E8", VA = "0x40D6E8")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x3FEA38", Offset = "0x3FEA38", VA = "0x3FEA38")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x3FEBDC", Offset = "0x3FEBDC", VA = "0x3FEBDC")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x40D7C8", Offset = "0x40D7C8", VA = "0x40D7C8")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x40D8A8", Offset = "0x40D8A8", VA = "0x40D8A8")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x40D9B0", Offset = "0x40D9B0", VA = "0x40D9B0")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x40DA38", Offset = "0x40DA38", VA = "0x40DA38")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x40DB18", Offset = "0x40DB18", VA = "0x40DB18")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x40DC28", Offset = "0x40DC28", VA = "0x40DC28")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x40DCB0", Offset = "0x40DCB0", VA = "0x40DCB0")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x40DD88", Offset = "0x40DD88", VA = "0x40DD88")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x40DE68", Offset = "0x40DE68", VA = "0x40DE68")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x40DF48", Offset = "0x40DF48", VA = "0x40DF48")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x40E028", Offset = "0x40E028", VA = "0x40E028")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x40E114", Offset = "0x40E114", VA = "0x40E114")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x40E198", Offset = "0x40E198", VA = "0x40E198")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x40E284", Offset = "0x40E284", VA = "0x40E284")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x40E308", Offset = "0x40E308", VA = "0x40E308")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x40E3F0", Offset = "0x40E3F0", VA = "0x40E3F0")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x40E478", Offset = "0x40E478", VA = "0x40E478")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x40E560", Offset = "0x40E560", VA = "0x40E560")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x40E648", Offset = "0x40E648", VA = "0x40E648")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x40E6D0", Offset = "0x40E6D0", VA = "0x40E6D0")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x40E7B8", Offset = "0x40E7B8", VA = "0x40E7B8")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x40E8B0", Offset = "0x40E8B0", VA = "0x40E8B0")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x40E998", Offset = "0x40E998", VA = "0x40E998")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x40EA20", Offset = "0x40EA20", VA = "0x40EA20")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x40EB08", Offset = "0x40EB08", VA = "0x40EB08")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x40EBE8", Offset = "0x40EBE8", VA = "0x40EBE8")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x40ECC8", Offset = "0x40ECC8", VA = "0x40ECC8")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x40EDA4", Offset = "0x40EDA4", VA = "0x40EDA4")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600090E")]
		[Address(RVA = "0x40EF28", Offset = "0x40EF28", VA = "0x40EF28")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x40EE40", Offset = "0x40EE40", VA = "0x40EE40")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x40F010", Offset = "0x40F010", VA = "0x40F010")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x40F0F0", Offset = "0x40F0F0", VA = "0x40F0F0")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x40F1D0", Offset = "0x40F1D0", VA = "0x40F1D0")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x40F278", Offset = "0x40F278", VA = "0x40F278")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x40F360", Offset = "0x40F360", VA = "0x40F360")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x40F440", Offset = "0x40F440", VA = "0x40F440")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x40F530", Offset = "0x40F530", VA = "0x40F530")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000917")]
		[Address(RVA = "0x40F5B8", Offset = "0x40F5B8", VA = "0x40F5B8")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x40F6A0", Offset = "0x40F6A0", VA = "0x40F6A0")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000919")]
		[Address(RVA = "0x40F728", Offset = "0x40F728", VA = "0x40F728")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600091A")]
		[Address(RVA = "0x40F818", Offset = "0x40F818", VA = "0x40F818")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600091B")]
		[Address(RVA = "0x40F900", Offset = "0x40F900", VA = "0x40F900")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600091C")]
		[Address(RVA = "0x40F9E8", Offset = "0x40F9E8", VA = "0x40F9E8")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600091D")]
		[Address(RVA = "0x40FAD8", Offset = "0x40FAD8", VA = "0x40FAD8")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600091E")]
		[Address(RVA = "0x40FBD0", Offset = "0x40FBD0", VA = "0x40FBD0")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600091F")]
		[Address(RVA = "0x40FCC8", Offset = "0x40FCC8", VA = "0x40FCC8")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x40FDB8", Offset = "0x40FDB8", VA = "0x40FDB8")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x40FEB0", Offset = "0x40FEB0", VA = "0x40FEB0")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x40FFA0", Offset = "0x40FFA0", VA = "0x40FFA0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x410090", Offset = "0x410090", VA = "0x410090")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x410188", Offset = "0x410188", VA = "0x410188")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000925")]
		[Address(RVA = "0x410288", Offset = "0x410288", VA = "0x410288")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000926")]
		[Address(RVA = "0x410380", Offset = "0x410380", VA = "0x410380")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000927")]
		[Address(RVA = "0x410480", Offset = "0x410480", VA = "0x410480")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x41057C", Offset = "0x41057C", VA = "0x41057C")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000929")]
		[Address(RVA = "0x410600", Offset = "0x410600", VA = "0x410600")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600092A")]
		[Address(RVA = "0x4106F8", Offset = "0x4106F8", VA = "0x4106F8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600092B")]
		[Address(RVA = "0x4107F8", Offset = "0x4107F8", VA = "0x4107F8")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600092C")]
		[Address(RVA = "0x4108F0", Offset = "0x4108F0", VA = "0x4108F0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600092D")]
		[Address(RVA = "0x4109E0", Offset = "0x4109E0", VA = "0x4109E0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x410AC8", Offset = "0x410AC8", VA = "0x410AC8")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600092F")]
		[Address(RVA = "0x410B50", Offset = "0x410B50", VA = "0x410B50")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x410C38", Offset = "0x410C38", VA = "0x410C38")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000931")]
		[Address(RVA = "0x410D20", Offset = "0x410D20", VA = "0x410D20")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x410E14", Offset = "0x410E14", VA = "0x410E14")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000933")]
		[Address(RVA = "0x410E98", Offset = "0x410E98", VA = "0x410E98")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000934")]
		[Address(RVA = "0x410F88", Offset = "0x410F88", VA = "0x410F88")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000935")]
		[Address(RVA = "0x411070", Offset = "0x411070", VA = "0x411070")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x411168", Offset = "0x411168", VA = "0x411168")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x411258", Offset = "0x411258", VA = "0x411258")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000938")]
		[Address(RVA = "0x411348", Offset = "0x411348", VA = "0x411348")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000939")]
		[Address(RVA = "0x411440", Offset = "0x411440", VA = "0x411440")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x411530", Offset = "0x411530", VA = "0x411530")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600093B")]
		[Address(RVA = "0x4115B8", Offset = "0x4115B8", VA = "0x4115B8")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x4116A0", Offset = "0x4116A0", VA = "0x4116A0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x411798", Offset = "0x411798", VA = "0x411798")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x411820", Offset = "0x411820", VA = "0x411820")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x411910", Offset = "0x411910", VA = "0x411910")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x411A10", Offset = "0x411A10", VA = "0x411A10")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x411B00", Offset = "0x411B00", VA = "0x411B00")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x411BF8", Offset = "0x411BF8", VA = "0x411BF8")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x411CF0", Offset = "0x411CF0", VA = "0x411CF0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x411DE0", Offset = "0x411DE0", VA = "0x411DE0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x411EC8", Offset = "0x411EC8", VA = "0x411EC8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x411FC0", Offset = "0x411FC0", VA = "0x411FC0")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x4120B0", Offset = "0x4120B0", VA = "0x4120B0")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x4121A0", Offset = "0x4121A0", VA = "0x4121A0")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x412284", Offset = "0x412284", VA = "0x412284")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x412308", Offset = "0x412308", VA = "0x412308")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x4123F0", Offset = "0x4123F0", VA = "0x4123F0")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x4124D0", Offset = "0x4124D0", VA = "0x4124D0")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x4125B0", Offset = "0x4125B0", VA = "0x4125B0")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x412698", Offset = "0x412698", VA = "0x412698")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x412788", Offset = "0x412788", VA = "0x412788")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x412870", Offset = "0x412870", VA = "0x412870")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x412958", Offset = "0x412958", VA = "0x412958")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x412A40", Offset = "0x412A40", VA = "0x412A40")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x412B28", Offset = "0x412B28", VA = "0x412B28")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x412C10", Offset = "0x412C10", VA = "0x412C10")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x412D00", Offset = "0x412D00", VA = "0x412D00")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x412DE8", Offset = "0x412DE8", VA = "0x412DE8")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x412ED0", Offset = "0x412ED0", VA = "0x412ED0")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x412FB8", Offset = "0x412FB8", VA = "0x412FB8")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x4130A8", Offset = "0x4130A8", VA = "0x4130A8")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x413188", Offset = "0x413188", VA = "0x413188")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x413270", Offset = "0x413270", VA = "0x413270")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x413360", Offset = "0x413360", VA = "0x413360")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x413450", Offset = "0x413450", VA = "0x413450")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x413560", Offset = "0x413560", VA = "0x413560")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x413648", Offset = "0x413648", VA = "0x413648")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x413738", Offset = "0x413738", VA = "0x413738")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x413820", Offset = "0x413820", VA = "0x413820")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x413908", Offset = "0x413908", VA = "0x413908")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x4139F0", Offset = "0x4139F0", VA = "0x4139F0")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x413AD8", Offset = "0x413AD8", VA = "0x413AD8")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x413BC0", Offset = "0x413BC0", VA = "0x413BC0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x413CA8", Offset = "0x413CA8", VA = "0x413CA8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000967")]
		[Address(RVA = "0x413D98", Offset = "0x413D98", VA = "0x413D98")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x413E80", Offset = "0x413E80", VA = "0x413E80")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000969")]
		[Address(RVA = "0x413F60", Offset = "0x413F60", VA = "0x413F60")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x414040", Offset = "0x414040", VA = "0x414040")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x414120", Offset = "0x414120", VA = "0x414120")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x414200", Offset = "0x414200", VA = "0x414200")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x414310", Offset = "0x414310", VA = "0x414310")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x414428", Offset = "0x414428", VA = "0x414428")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600096F")]
		[Address(RVA = "0x414540", Offset = "0x414540", VA = "0x414540")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x414620", Offset = "0x414620", VA = "0x414620")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000971")]
		[Address(RVA = "0x414738", Offset = "0x414738", VA = "0x414738")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000972")]
		[Address(RVA = "0x414818", Offset = "0x414818", VA = "0x414818")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x414930", Offset = "0x414930", VA = "0x414930")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x414A40", Offset = "0x414A40", VA = "0x414A40")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x414B58", Offset = "0x414B58", VA = "0x414B58")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x414C44", Offset = "0x414C44", VA = "0x414C44")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x414CC8", Offset = "0x414CC8", VA = "0x414CC8")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x414DA0", Offset = "0x414DA0", VA = "0x414DA0")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x414E80", Offset = "0x414E80", VA = "0x414E80")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x414F90", Offset = "0x414F90", VA = "0x414F90")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x4150A0", Offset = "0x4150A0", VA = "0x4150A0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600097C")]
		[Address(RVA = "0x415180", Offset = "0x415180", VA = "0x415180")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600097D")]
		[Address(RVA = "0x415298", Offset = "0x415298", VA = "0x415298")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600097E")]
		[Address(RVA = "0x4153B0", Offset = "0x4153B0", VA = "0x4153B0")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600097F")]
		[Address(RVA = "0x4154C8", Offset = "0x4154C8", VA = "0x4154C8")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000980")]
		[Address(RVA = "0x4155B0", Offset = "0x4155B0", VA = "0x4155B0")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x4156D8", Offset = "0x4156D8", VA = "0x4156D8")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000982")]
		[Address(RVA = "0x4157D0", Offset = "0x4157D0", VA = "0x4157D0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000983")]
		[Address(RVA = "0x415900", Offset = "0x415900", VA = "0x415900")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000984")]
		[Address(RVA = "0x4159F8", Offset = "0x4159F8", VA = "0x4159F8")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x415B08", Offset = "0x415B08", VA = "0x415B08")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x415C18", Offset = "0x415C18", VA = "0x415C18")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x415D30", Offset = "0x415D30", VA = "0x415D30")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x415E10", Offset = "0x415E10", VA = "0x415E10")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x415F20", Offset = "0x415F20", VA = "0x415F20")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x416028", Offset = "0x416028", VA = "0x416028")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x416138", Offset = "0x416138", VA = "0x416138")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x416250", Offset = "0x416250", VA = "0x416250")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600098D")]
		[Address(RVA = "0x416368", Offset = "0x416368", VA = "0x416368")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x416478", Offset = "0x416478", VA = "0x416478")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x416580", Offset = "0x416580", VA = "0x416580")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x416698", Offset = "0x416698", VA = "0x416698")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x4167A8", Offset = "0x4167A8", VA = "0x4167A8")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x4168B0", Offset = "0x4168B0", VA = "0x4168B0")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x4169C0", Offset = "0x4169C0", VA = "0x4169C0")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x416AC8", Offset = "0x416AC8", VA = "0x416AC8")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x416B50", Offset = "0x416B50", VA = "0x416B50")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x416C58", Offset = "0x416C58", VA = "0x416C58")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x416D78", Offset = "0x416D78", VA = "0x416D78")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x416E88", Offset = "0x416E88", VA = "0x416E88")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x416F98", Offset = "0x416F98", VA = "0x416F98")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x417078", Offset = "0x417078", VA = "0x417078")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x417198", Offset = "0x417198", VA = "0x417198")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x417278", Offset = "0x417278", VA = "0x417278")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600099D")]
		[Address(RVA = "0x417300", Offset = "0x417300", VA = "0x417300")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x4173D8", Offset = "0x4173D8", VA = "0x4173D8")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600099F")]
		[Address(RVA = "0x417460", Offset = "0x417460", VA = "0x417460")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x417538", Offset = "0x417538", VA = "0x417538")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x4175C0", Offset = "0x4175C0", VA = "0x4175C0")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x41769C", Offset = "0x41769C", VA = "0x41769C")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x417720", Offset = "0x417720", VA = "0x417720")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x417800", Offset = "0x417800", VA = "0x417800")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x417888", Offset = "0x417888", VA = "0x417888")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x41795C", Offset = "0x41795C", VA = "0x41795C")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x4179E0", Offset = "0x4179E0", VA = "0x4179E0")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x417AF0", Offset = "0x417AF0", VA = "0x417AF0")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x417BD4", Offset = "0x417BD4", VA = "0x417BD4")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x417C58", Offset = "0x417C58", VA = "0x417C58")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x417D38", Offset = "0x417D38", VA = "0x417D38")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x417E50", Offset = "0x417E50", VA = "0x417E50")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x417F38", Offset = "0x417F38", VA = "0x417F38")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x417FE0", Offset = "0x417FE0", VA = "0x417FE0")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x4180C0", Offset = "0x4180C0", VA = "0x4180C0")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x418168", Offset = "0x418168", VA = "0x418168")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x418248", Offset = "0x418248", VA = "0x418248")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x418324", Offset = "0x418324", VA = "0x418324")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x4183A8", Offset = "0x4183A8", VA = "0x4183A8")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x418480", Offset = "0x418480", VA = "0x418480")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x418568", Offset = "0x418568", VA = "0x418568")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x4185F0", Offset = "0x4185F0", VA = "0x4185F0")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x4186D0", Offset = "0x4186D0", VA = "0x4186D0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x4187E8", Offset = "0x4187E8", VA = "0x4187E8")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x4188D0", Offset = "0x4188D0", VA = "0x4188D0")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x4189E8", Offset = "0x4189E8", VA = "0x4189E8")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x418AF8", Offset = "0x418AF8", VA = "0x418AF8")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x418B80", Offset = "0x418B80", VA = "0x418B80")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x418C58", Offset = "0x418C58", VA = "0x418C58")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x418D60", Offset = "0x418D60", VA = "0x418D60")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x418E78", Offset = "0x418E78", VA = "0x418E78")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x418F60", Offset = "0x418F60", VA = "0x418F60")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x419078", Offset = "0x419078", VA = "0x419078")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x419190", Offset = "0x419190", VA = "0x419190")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x4192A8", Offset = "0x4192A8", VA = "0x4192A8")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x4193B8", Offset = "0x4193B8", VA = "0x4193B8")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x419440", Offset = "0x419440", VA = "0x419440")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x419550", Offset = "0x419550", VA = "0x419550")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x419658", Offset = "0x419658", VA = "0x419658")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x419760", Offset = "0x419760", VA = "0x419760")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x419868", Offset = "0x419868", VA = "0x419868")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x419978", Offset = "0x419978", VA = "0x419978")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x419A98", Offset = "0x419A98", VA = "0x419A98")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x419B20", Offset = "0x419B20", VA = "0x419B20")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x419C00", Offset = "0x419C00", VA = "0x419C00")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x419D10", Offset = "0x419D10", VA = "0x419D10")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x419E30", Offset = "0x419E30", VA = "0x419E30")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x419F18", Offset = "0x419F18", VA = "0x419F18")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x41A000", Offset = "0x41A000", VA = "0x41A000")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x41A0A8", Offset = "0x41A0A8", VA = "0x41A0A8")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x41A190", Offset = "0x41A190", VA = "0x41A190")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x41A284", Offset = "0x41A284", VA = "0x41A284")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x41A308", Offset = "0x41A308", VA = "0x41A308")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x41A3F8", Offset = "0x41A3F8", VA = "0x41A3F8")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x41A4E0", Offset = "0x41A4E0", VA = "0x41A4E0")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x41A5D8", Offset = "0x41A5D8", VA = "0x41A5D8")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x41A6C0", Offset = "0x41A6C0", VA = "0x41A6C0")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x41A7A0", Offset = "0x41A7A0", VA = "0x41A7A0")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x41A828", Offset = "0x41A828", VA = "0x41A828")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x41A904", Offset = "0x41A904", VA = "0x41A904")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x41A988", Offset = "0x41A988", VA = "0x41A988")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x41AA6C", Offset = "0x41AA6C", VA = "0x41AA6C")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x41AAF0", Offset = "0x41AAF0", VA = "0x41AAF0")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x41ABD0", Offset = "0x41ABD0", VA = "0x41ABD0")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x41ACE8", Offset = "0x41ACE8", VA = "0x41ACE8")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x41ADEC", Offset = "0x41ADEC", VA = "0x41ADEC")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x41AE70", Offset = "0x41AE70", VA = "0x41AE70")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x41AF48", Offset = "0x41AF48", VA = "0x41AF48")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x41AFD0", Offset = "0x41AFD0", VA = "0x41AFD0")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x41B0A8", Offset = "0x41B0A8", VA = "0x41B0A8")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x41B130", Offset = "0x41B130", VA = "0x41B130")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x41B208", Offset = "0x41B208", VA = "0x41B208")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x41B290", Offset = "0x41B290", VA = "0x41B290")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x41B368", Offset = "0x41B368", VA = "0x41B368")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x41B444", Offset = "0x41B444", VA = "0x41B444")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x41B4C8", Offset = "0x41B4C8", VA = "0x41B4C8")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x41B5A8", Offset = "0x41B5A8", VA = "0x41B5A8")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x41B6C0", Offset = "0x41B6C0", VA = "0x41B6C0")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x41B7D8", Offset = "0x41B7D8", VA = "0x41B7D8")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x41B8C0", Offset = "0x41B8C0", VA = "0x41B8C0")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x41B948", Offset = "0x41B948", VA = "0x41B948")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x41BA28", Offset = "0x41BA28", VA = "0x41BA28")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x41BB08", Offset = "0x41BB08", VA = "0x41BB08")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x41BBF8", Offset = "0x41BBF8", VA = "0x41BBF8")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x41BD18", Offset = "0x41BD18", VA = "0x41BD18")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x41BDA0", Offset = "0x41BDA0", VA = "0x41BDA0")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x41BE80", Offset = "0x41BE80", VA = "0x41BE80")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x41BF90", Offset = "0x41BF90", VA = "0x41BF90")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x41C0B0", Offset = "0x41C0B0", VA = "0x41C0B0")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x41C138", Offset = "0x41C138", VA = "0x41C138")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x41C210", Offset = "0x41C210", VA = "0x41C210")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x41C2F8", Offset = "0x41C2F8", VA = "0x41C2F8")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x41C3F0", Offset = "0x41C3F0", VA = "0x41C3F0")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x41C520", Offset = "0x41C520", VA = "0x41C520")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x41C620", Offset = "0x41C620", VA = "0x41C620")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x41C708", Offset = "0x41C708", VA = "0x41C708")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x41C7E0", Offset = "0x41C7E0", VA = "0x41C7E0")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x41C8C0", Offset = "0x41C8C0", VA = "0x41C8C0")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x41C9B0", Offset = "0x41C9B0", VA = "0x41C9B0")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x41CAB8", Offset = "0x41CAB8", VA = "0x41CAB8")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x41CBA8", Offset = "0x41CBA8", VA = "0x41CBA8")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x41CCA0", Offset = "0x41CCA0", VA = "0x41CCA0")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x41CD98", Offset = "0x41CD98", VA = "0x41CD98")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x41CE98", Offset = "0x41CE98", VA = "0x41CE98")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x41CF8C", Offset = "0x41CF8C", VA = "0x41CF8C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x41D060", Offset = "0x41D060", VA = "0x41D060")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x41D164", Offset = "0x41D164", VA = "0x41D164")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x41D248", Offset = "0x41D248", VA = "0x41D248")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x41D354", Offset = "0x41D354", VA = "0x41D354")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x41D440", Offset = "0x41D440", VA = "0x41D440")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x41D548", Offset = "0x41D548", VA = "0x41D548")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x41D638", Offset = "0x41D638", VA = "0x41D638")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x41D72C", Offset = "0x41D72C", VA = "0x41D72C")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x41D7F8", Offset = "0x41D7F8", VA = "0x41D7F8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x41D8F0", Offset = "0x41D8F0", VA = "0x41D8F0")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x41D9F8", Offset = "0x41D9F8", VA = "0x41D9F8")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x41DB0C", Offset = "0x41DB0C", VA = "0x41DB0C")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x41DBF8", Offset = "0x41DBF8", VA = "0x41DBF8")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x41DCF0", Offset = "0x41DCF0", VA = "0x41DCF0")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x41DDD0", Offset = "0x41DDD0", VA = "0x41DDD0")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x41DEB8", Offset = "0x41DEB8", VA = "0x41DEB8")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x41DFE0", Offset = "0x41DFE0", VA = "0x41DFE0")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);
	}
	[Token(Token = "0x2000100")]
	public enum CloudStorageDataStatus : uint
	{
		[Token(Token = "0x4000618")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176184", Offset = "0x176184")]
		Unknown,
		[Token(Token = "0x4000619")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1761B8", Offset = "0x1761B8")]
		InSync,
		[Token(Token = "0x400061A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1761EC", Offset = "0x1761EC")]
		NeedsDownload,
		[Token(Token = "0x400061B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176228", Offset = "0x176228")]
		RemoteDownloading,
		[Token(Token = "0x400061C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176268", Offset = "0x176268")]
		NeedsUpload,
		[Token(Token = "0x400061D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1762A4", Offset = "0x1762A4")]
		LocalUploading,
		[Token(Token = "0x400061E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1762E0", Offset = "0x1762E0")]
		InConflict
	}
	[Token(Token = "0x2000101")]
	public enum CloudStorageUpdateStatus : uint
	{
		[Token(Token = "0x4000620")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176318", Offset = "0x176318")]
		Unknown,
		[Token(Token = "0x4000621")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17634C", Offset = "0x17634C")]
		Ok,
		[Token(Token = "0x4000622")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17637C", Offset = "0x17637C")]
		BetterVersionStored,
		[Token(Token = "0x4000623")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1763C0", Offset = "0x1763C0")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000102")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000A24")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000A25")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000A26")]
		void Update();

		[Token(Token = "0x6000A27")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000103")]
	public enum KeyValuePairType : uint
	{
		[Token(Token = "0x4000625")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176404", Offset = "0x176404")]
		String,
		[Token(Token = "0x4000626")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176438", Offset = "0x176438")]
		Int,
		[Token(Token = "0x4000627")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17646C", Offset = "0x17646C")]
		Double,
		[Token(Token = "0x4000628")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1764A0", Offset = "0x1764A0")]
		Unknown
	}
	[Token(Token = "0x2000104")]
	public enum LaunchType : uint
	{
		[Token(Token = "0x400062A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1764D4", Offset = "0x1764D4")]
		Unknown,
		[Token(Token = "0x400062B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176508", Offset = "0x176508")]
		Normal,
		[Token(Token = "0x400062C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17653C", Offset = "0x17653C")]
		Invite,
		[Token(Token = "0x400062D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176570", Offset = "0x176570")]
		Coordinated,
		[Token(Token = "0x400062E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1765A8", Offset = "0x1765A8")]
		Deeplink
	}
	[Token(Token = "0x2000105")]
	public enum LeaderboardFilterType : uint
	{
		[Token(Token = "0x4000630")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1765E0", Offset = "0x1765E0")]
		None,
		[Token(Token = "0x4000631")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176614", Offset = "0x176614")]
		Friends,
		[Token(Token = "0x4000632")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176648", Offset = "0x176648")]
		Unknown
	}
	[Token(Token = "0x2000106")]
	public enum LeaderboardStartAt : uint
	{
		[Token(Token = "0x4000634")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17667C", Offset = "0x17667C")]
		Top,
		[Token(Token = "0x4000635")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1766AC", Offset = "0x1766AC")]
		CenteredOnViewer,
		[Token(Token = "0x4000636")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1766EC", Offset = "0x1766EC")]
		Unknown
	}
	[Token(Token = "0x2000107")]
	public enum MatchmakingCriterionImportance : uint
	{
		[Token(Token = "0x4000638")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176720", Offset = "0x176720")]
		Required,
		[Token(Token = "0x4000639")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176758", Offset = "0x176758")]
		High,
		[Token(Token = "0x400063A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17678C", Offset = "0x17678C")]
		Medium,
		[Token(Token = "0x400063B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1767C0", Offset = "0x1767C0")]
		Low,
		[Token(Token = "0x400063C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1767F0", Offset = "0x1767F0")]
		Unknown
	}
	[Token(Token = "0x2000108")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x29A27C", Offset = "0x29A27C", VA = "0x29A27C")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x29A30C", Offset = "0x29A30C", VA = "0x29A30C")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x29A3A4", Offset = "0x29A3A4", VA = "0x29A3A4")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x29A42C", Offset = "0x29A42C", VA = "0x29A42C")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x29A4BC", Offset = "0x29A4BC", VA = "0x29A4BC")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x29A54C", Offset = "0x29A54C", VA = "0x29A54C")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x29A5F0", Offset = "0x29A5F0", VA = "0x29A5F0")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x29A678", Offset = "0x29A678", VA = "0x29A678")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x29A710", Offset = "0x29A710", VA = "0x29A710")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x29A7BC", Offset = "0x29A7BC", VA = "0x29A7BC")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x29A854", Offset = "0x29A854", VA = "0x29A854")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x29A8DC", Offset = "0x29A8DC", VA = "0x29A8DC")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x29A96C", Offset = "0x29A96C", VA = "0x29A96C")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x2992B0", Offset = "0x2992B0", VA = "0x2992B0")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x29A9FC", Offset = "0x29A9FC", VA = "0x29A9FC", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public enum MatchmakingStatApproach : uint
	{
		[Token(Token = "0x400063F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176824", Offset = "0x176824")]
		Unknown,
		[Token(Token = "0x4000640")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176858", Offset = "0x176858")]
		Trailing,
		[Token(Token = "0x4000641")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176890", Offset = "0x176890")]
		Swingy
	}
	[Token(Token = "0x200010A")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x200010B")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170001B2")]
		public T Data
		{
			[Token(Token = "0x6000A38")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000A37")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A39")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x200010C")]
	public class Message
	{
		[Token(Token = "0x200010D")]
		public delegate void Callback(Message message);

		[Token(Token = "0x200010E")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000648")]
			Unknown = 0u,
			[Token(Token = "0x4000649")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x400064A")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x400064B")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x400064C")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400064D")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400064E")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400064F")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000650")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000651")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000652")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000653")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000654")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000655")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000656")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000657")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000658")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000659")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x400065A")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x400065B")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x400065C")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x400065D")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x400065E")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x400065F")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000660")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000661")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000662")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000663")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000664")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000665")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000666")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000667")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000668")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000669")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x400066A")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x400066B")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x400066C")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x400066D")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x400066E")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x400066F")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000670")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000671")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000672")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000673")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000674")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000675")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000676")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000677")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000678")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000679")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x400067A")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x400067B")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x400067C")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x400067D")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x400067E")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x400067F")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000680")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000681")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000682")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000683")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000684")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000685")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000686")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000687")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000688")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000689")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x400068A")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x400068B")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x400068C")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x400068D")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x400068E")]
			Room_Join = 382373641u,
			[Token(Token = "0x400068F")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000690")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000691")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000692")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000693")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000694")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000695")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000696")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000697")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000698")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000699")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x400069A")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x400069B")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x400069C")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x400069D")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x400069E")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x400069F")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x40006A0")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x40006A1")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x40006A2")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40006A3")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40006A4")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40006A5")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40006A6")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40006A7")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40006A8")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40006A9")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40006AA")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40006AB")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x40006AC")]
			Notification_Voip_SystemVoipState = 1490179237u
		}

		[Token(Token = "0x200010F")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong requestID;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Error error;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1768C4", Offset = "0x1768C4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1768C4", Offset = "0x1768C4")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170001B3")]
		public MessageType Type
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x295478", Offset = "0x295478", VA = "0x295478")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool IsError
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x29ADE4", Offset = "0x29ADE4", VA = "0x29ADE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		public ulong RequestID
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x295470", Offset = "0x295470", VA = "0x295470")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001B6")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x29D27C", Offset = "0x29D27C", VA = "0x29D27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180528", Offset = "0x180528")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x29D218", Offset = "0x29D218", VA = "0x29D218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180518", Offset = "0x180518")]
			set
			{
			}
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x29AAD4", Offset = "0x29AAD4", VA = "0x29AAD4")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x29ADDC", Offset = "0x29ADDC", VA = "0x29ADDC", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x29ADF4", Offset = "0x29ADF4", VA = "0x29ADF4", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x29ADFC", Offset = "0x29ADFC", VA = "0x29ADFC", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x29AE04", Offset = "0x29AE04", VA = "0x29AE04", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x29AE0C", Offset = "0x29AE0C", VA = "0x29AE0C", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x29AE14", Offset = "0x29AE14", VA = "0x29AE14", Slot = "8")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x29AE1C", Offset = "0x29AE1C", VA = "0x29AE1C", Slot = "9")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x29AE24", Offset = "0x29AE24", VA = "0x29AE24", Slot = "10")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x29AE2C", Offset = "0x29AE2C", VA = "0x29AE2C", Slot = "11")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x29AE34", Offset = "0x29AE34", VA = "0x29AE34", Slot = "12")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x29AE3C", Offset = "0x29AE3C", VA = "0x29AE3C", Slot = "13")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x29AE44", Offset = "0x29AE44", VA = "0x29AE44", Slot = "14")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x29AE4C", Offset = "0x29AE4C", VA = "0x29AE4C", Slot = "15")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x29AE54", Offset = "0x29AE54", VA = "0x29AE54", Slot = "16")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x29AE5C", Offset = "0x29AE5C", VA = "0x29AE5C", Slot = "17")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x29AE64", Offset = "0x29AE64", VA = "0x29AE64", Slot = "18")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x29AE6C", Offset = "0x29AE6C", VA = "0x29AE6C", Slot = "19")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x29AE74", Offset = "0x29AE74", VA = "0x29AE74", Slot = "20")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x29AE7C", Offset = "0x29AE7C", VA = "0x29AE7C", Slot = "21")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x29AE84", Offset = "0x29AE84", VA = "0x29AE84", Slot = "22")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x29AE8C", Offset = "0x29AE8C", VA = "0x29AE8C", Slot = "23")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x29AE94", Offset = "0x29AE94", VA = "0x29AE94", Slot = "24")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x29AE9C", Offset = "0x29AE9C", VA = "0x29AE9C", Slot = "25")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x29AEA4", Offset = "0x29AEA4", VA = "0x29AEA4", Slot = "26")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x29AEAC", Offset = "0x29AEAC", VA = "0x29AEAC", Slot = "27")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x29AEB4", Offset = "0x29AEB4", VA = "0x29AEB4", Slot = "28")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x29AEBC", Offset = "0x29AEBC", VA = "0x29AEBC", Slot = "29")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x29AEC4", Offset = "0x29AEC4", VA = "0x29AEC4", Slot = "30")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x29AECC", Offset = "0x29AECC", VA = "0x29AECC", Slot = "31")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x29AED4", Offset = "0x29AED4", VA = "0x29AED4", Slot = "32")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x29AEDC", Offset = "0x29AEDC", VA = "0x29AEDC", Slot = "33")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x29AEE4", Offset = "0x29AEE4", VA = "0x29AEE4", Slot = "34")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x29AEEC", Offset = "0x29AEEC", VA = "0x29AEEC", Slot = "35")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x29AEF4", Offset = "0x29AEF4", VA = "0x29AEF4", Slot = "36")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x29AEFC", Offset = "0x29AEFC", VA = "0x29AEFC", Slot = "37")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x29AF04", Offset = "0x29AF04", VA = "0x29AF04", Slot = "38")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x29AF0C", Offset = "0x29AF0C", VA = "0x29AF0C", Slot = "39")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x29AF14", Offset = "0x29AF14", VA = "0x29AF14", Slot = "40")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x29AF1C", Offset = "0x29AF1C", VA = "0x29AF1C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x294E20", Offset = "0x294E20", VA = "0x294E20")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000110")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x29BF58", Offset = "0x29BF58", VA = "0x29BF58")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x29D654", Offset = "0x29D654", VA = "0x29D654", Slot = "8")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x29D6B8", Offset = "0x29D6B8", VA = "0x29D6B8", Slot = "41")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000111")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x29BFC4", Offset = "0x29BFC4", VA = "0x29BFC4")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x29D9D4", Offset = "0x29D9D4", VA = "0x29D9D4", Slot = "9")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x29DA38", Offset = "0x29DA38", VA = "0x29DA38", Slot = "41")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x29C030", Offset = "0x29C030", VA = "0x29C030")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x29DD54", Offset = "0x29DD54", VA = "0x29DD54", Slot = "10")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x29DDB8", Offset = "0x29DDB8", VA = "0x29DDB8", Slot = "41")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000113")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x29C09C", Offset = "0x29C09C", VA = "0x29C09C")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x29DF14", Offset = "0x29DF14", VA = "0x29DF14", Slot = "11")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x29DF78", Offset = "0x29DF78", VA = "0x29DF78", Slot = "41")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x29C108", Offset = "0x29C108", VA = "0x29C108")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x29E0F4", Offset = "0x29E0F4", VA = "0x29E0F4", Slot = "12")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x29E158", Offset = "0x29E158", VA = "0x29E158", Slot = "41")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x29C174", Offset = "0x29C174", VA = "0x29C174")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x29E2F0", Offset = "0x29E2F0", VA = "0x29E2F0", Slot = "13")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x29E354", Offset = "0x29E354", VA = "0x29E354", Slot = "41")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x29C1E0", Offset = "0x29C1E0", VA = "0x29C1E0")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x29E850", Offset = "0x29E850", VA = "0x29E850", Slot = "14")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x29E8B4", Offset = "0x29E8B4", VA = "0x29E8B4", Slot = "41")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x29C24C", Offset = "0x29C24C", VA = "0x29C24C")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x29E4D0", Offset = "0x29E4D0", VA = "0x29E4D0", Slot = "15")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x29E534", Offset = "0x29E534", VA = "0x29E534", Slot = "41")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x29C2B8", Offset = "0x29C2B8", VA = "0x29C2B8")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x29EA70", Offset = "0x29EA70", VA = "0x29EA70", Slot = "16")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x29EAD4", Offset = "0x29EAD4", VA = "0x29EAD4", Slot = "41")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000119")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x29EF0C", Offset = "0x29EF0C", VA = "0x29EF0C")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x29EF78", Offset = "0x29EF78", VA = "0x29EF78", Slot = "17")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x29EFDC", Offset = "0x29EFDC", VA = "0x29EFDC", Slot = "41")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011A")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x29C324", Offset = "0x29C324", VA = "0x29C324")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x29F3B0", Offset = "0x29F3B0", VA = "0x29F3B0", Slot = "19")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x29F414", Offset = "0x29F414", VA = "0x29F414", Slot = "41")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011B")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x29C3FC", Offset = "0x29C3FC", VA = "0x29C3FC")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x29F754", Offset = "0x29F754", VA = "0x29F754", Slot = "20")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x29F7B8", Offset = "0x29F7B8", VA = "0x29F7B8", Slot = "41")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011C")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x29C468", Offset = "0x29C468", VA = "0x29C468")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x29F924", Offset = "0x29F924", VA = "0x29F924", Slot = "21")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x29F988", Offset = "0x29F988", VA = "0x29F988", Slot = "41")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011D")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x29C540", Offset = "0x29C540", VA = "0x29C540")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x29FDA4", Offset = "0x29FDA4", VA = "0x29FDA4", Slot = "23")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x29FE08", Offset = "0x29FE08", VA = "0x29FE08", Slot = "41")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x29C5AC", Offset = "0x29C5AC", VA = "0x29C5AC")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x29FFD8", Offset = "0x29FFD8", VA = "0x29FFD8", Slot = "24")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x2A003C", Offset = "0x2A003C", VA = "0x2A003C", Slot = "41")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x29C618", Offset = "0x29C618", VA = "0x29C618")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x2A04FC", Offset = "0x2A04FC", VA = "0x2A04FC", Slot = "25")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x2A0560", Offset = "0x2A0560", VA = "0x2A0560", Slot = "41")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000120")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x29C684", Offset = "0x29C684", VA = "0x29C684")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x2A0848", Offset = "0x2A0848", VA = "0x2A0848", Slot = "26")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x2A08AC", Offset = "0x2A08AC", VA = "0x2A08AC", Slot = "41")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000121")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x2A09F8", Offset = "0x2A09F8", VA = "0x2A09F8")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x2A0A64", Offset = "0x2A0A64", VA = "0x2A0A64", Slot = "27")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x2A0AC8", Offset = "0x2A0AC8", VA = "0x2A0AC8", Slot = "41")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x29C6F0", Offset = "0x29C6F0", VA = "0x29C6F0")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x2A0CD8", Offset = "0x2A0CD8", VA = "0x2A0CD8", Slot = "27")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x2A0D3C", Offset = "0x2A0D3C", VA = "0x2A0D3C", Slot = "41")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x29C75C", Offset = "0x29C75C", VA = "0x29C75C")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x2A0DF0", Offset = "0x2A0DF0", VA = "0x2A0DF0", Slot = "28")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x2A0E54", Offset = "0x2A0E54", VA = "0x2A0E54", Slot = "41")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x29C7C8", Offset = "0x29C7C8", VA = "0x29C7C8")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x2A1340", Offset = "0x2A1340", VA = "0x2A1340", Slot = "29")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x2A13A4", Offset = "0x2A13A4", VA = "0x2A13A4", Slot = "41")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x29C834", Offset = "0x29C834", VA = "0x29C834")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x2A16C0", Offset = "0x2A16C0", VA = "0x2A16C0", Slot = "30")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x2A1724", Offset = "0x2A1724", VA = "0x2A1724", Slot = "41")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x29C8A0", Offset = "0x29C8A0", VA = "0x29C8A0")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x2A18C8", Offset = "0x2A18C8", VA = "0x2A18C8", Slot = "31")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x2A192C", Offset = "0x2A192C", VA = "0x2A192C", Slot = "41")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000127")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x29C90C", Offset = "0x29C90C", VA = "0x29C90C")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x2A1C48", Offset = "0x2A1C48", VA = "0x2A1C48", Slot = "32")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x2A1CAC", Offset = "0x2A1CAC", VA = "0x2A1CAC", Slot = "41")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000128")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x29C978", Offset = "0x29C978", VA = "0x29C978")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x2A2460", Offset = "0x2A2460", VA = "0x2A2460", Slot = "32")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x2A24C4", Offset = "0x2A24C4", VA = "0x2A24C4", Slot = "41")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000129")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x29C9E4", Offset = "0x29C9E4", VA = "0x29C9E4")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x2A2578", Offset = "0x2A2578", VA = "0x2A2578", Slot = "32")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x2A25DC", Offset = "0x2A25DC", VA = "0x2A25DC", Slot = "41")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012A")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x29CA50", Offset = "0x29CA50", VA = "0x29CA50")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x2A20E0", Offset = "0x2A20E0", VA = "0x2A20E0", Slot = "34")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x2A2144", Offset = "0x2A2144", VA = "0x2A2144", Slot = "41")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x29CABC", Offset = "0x29CABC", VA = "0x29CABC")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x2A1D60", Offset = "0x2A1D60", VA = "0x2A1D60", Slot = "33")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x2A1DC4", Offset = "0x2A1DC4", VA = "0x2A1DC4", Slot = "41")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012C")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x29CB28", Offset = "0x29CB28", VA = "0x29CB28")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x2A2690", Offset = "0x2A2690", VA = "0x2A2690", Slot = "35")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x2A26F4", Offset = "0x2A26F4", VA = "0x2A26F4", Slot = "41")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x29CB94", Offset = "0x29CB94", VA = "0x29CB94")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x2A2778", Offset = "0x2A2778", VA = "0x2A2778", Slot = "36")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x2A27DC", Offset = "0x2A27DC", VA = "0x2A27DC", Slot = "41")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x29CC00", Offset = "0x29CC00", VA = "0x29CC00")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x2A2938", Offset = "0x2A2938", VA = "0x2A2938", Slot = "37")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x2A299C", Offset = "0x2A299C", VA = "0x2A299C", Slot = "41")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x29CC6C", Offset = "0x29CC6C", VA = "0x29CC6C")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x2A2B48", Offset = "0x2A2B48", VA = "0x2A2B48", Slot = "38")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x2A2BAC", Offset = "0x2A2BAC", VA = "0x2A2BAC", Slot = "41")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000130")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x29CCD8", Offset = "0x29CCD8", VA = "0x29CCD8")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x2A2EC8", Offset = "0x2A2EC8", VA = "0x2A2EC8", Slot = "39")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x2A2F2C", Offset = "0x2A2F2C", VA = "0x2A2F2C", Slot = "41")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x29CD44", Offset = "0x29CD44", VA = "0x29CD44")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x2A3248", Offset = "0x2A3248", VA = "0x2A3248", Slot = "40")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x2A32AC", Offset = "0x2A32AC", VA = "0x2A32AC", Slot = "41")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x29CDB0", Offset = "0x29CDB0", VA = "0x29CDB0")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x2A06DC", Offset = "0x2A06DC", VA = "0x2A06DC", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x2A0740", Offset = "0x2A0740", VA = "0x2A0740", Slot = "41")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x29CE1C", Offset = "0x29CE1C", VA = "0x29CE1C")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x2A1130", Offset = "0x2A1130", VA = "0x2A1130", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x2A1194", Offset = "0x2A1194", VA = "0x2A1194", Slot = "41")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000134")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x29C390", Offset = "0x29C390", VA = "0x29C390")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x29F2B8", Offset = "0x29F2B8", VA = "0x29F2B8", Slot = "18")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x29F31C", Offset = "0x29F31C", VA = "0x29F31C", Slot = "41")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000135")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x29CE88", Offset = "0x29CE88", VA = "0x29CE88")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x2A01E0", Offset = "0x2A01E0", VA = "0x2A01E0", Slot = "32")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x2A0244", Offset = "0x2A0244", VA = "0x2A0244", Slot = "41")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000136")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x29C4D4", Offset = "0x29C4D4", VA = "0x29C4D4")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x29FB08", Offset = "0x29FB08", VA = "0x29FB08", Slot = "23")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x29FB84", Offset = "0x29FB84", VA = "0x29FB84", Slot = "34")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x29FC00", Offset = "0x29FC00", VA = "0x29FC00", Slot = "41")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x29CEF4", Offset = "0x29CEF4", VA = "0x29CEF4")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x29EC50", Offset = "0x29EC50", VA = "0x29EC50", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x29ECB4", Offset = "0x29ECB4", VA = "0x29ECB4", Slot = "41")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000138")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Target;

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x2A33F8", Offset = "0x2A33F8", VA = "0x2A33F8")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x29D76C", Offset = "0x29D76C", VA = "0x29D76C")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class AchievementProgress
	{
		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong Count;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x2A34C0", Offset = "0x2A34C0", VA = "0x2A34C0")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x29DAEC", Offset = "0x29DAEC", VA = "0x29DAEC")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x29DE6C", Offset = "0x29DE6C", VA = "0x29DE6C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CurrentCode;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string CurrentName;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int LatestCode;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string LatestName;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x29E02C", Offset = "0x29E02C", VA = "0x29E02C")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x29E20C", Offset = "0x29E20C", VA = "0x29E20C")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class CloudStorageData
	{
		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly byte[] Data;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DataSize;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Key;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x29E408", Offset = "0x29E408", VA = "0x29E408")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Counter;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint DataSize;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string ExtraData;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Key;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x29E968", Offset = "0x29E968", VA = "0x29E968")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x29E5E8", Offset = "0x29E5E8", VA = "0x29E5E8")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Key;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x29EB88", Offset = "0x29EB88", VA = "0x29EB88")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1725D0", Offset = "0x1725D0")]
	public class DeserializableList<T> : IList<T>, IEnumerable, ICollection<T>, IEnumerable<T>
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170001B7")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000AFA")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		public int Count
		{
			[Token(Token = "0x6000AF9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B9")]
		public T Item
		{
			[Token(Token = "0x6000AFC")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000AFD")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184DE0", Offset = "0x184DE0")]
		public List<T> Data
		{
			[Token(Token = "0x6000B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000B09")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000B0A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public string NextUrl
		{
			[Token(Token = "0x6000B0B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF8")]
		public DeserializableList()
		{
		}

		[Token(Token = "0x6000AFB")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000AFE")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000AFF")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B00")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B01")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000B02")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B03")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000B04")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B05")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000B06")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000B07")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000144")]
	public class Error
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x29ADAC", Offset = "0x29ADAC", VA = "0x29ADAC")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] Payload;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x29ED68", Offset = "0x29ED68", VA = "0x29ED68")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class InstalledApplication
	{
		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string ApplicationId;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string PackageName;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Status;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int VersionCode;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string VersionName;

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x2A35B0", Offset = "0x2A35B0", VA = "0x2A35B0")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x29F090", Offset = "0x29F090", VA = "0x29F090")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class LaunchDetails
	{
		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong RoomID;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList Users;

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x2A3688", Offset = "0x2A3688", VA = "0x2A3688")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int Rank;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Score;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User User;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x2A3774", Offset = "0x2A3774", VA = "0x2A3774")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x29F4C8", Offset = "0x29F4C8", VA = "0x29F4C8")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool IsPaused;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x29F86C", Offset = "0x29F86C", VA = "0x29F86C")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x29FA3C", Offset = "0x29FA3C", VA = "0x29FA3C")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CanMatch;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyTotalScore;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string TraceId;

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x2A3AB0", Offset = "0x2A3AB0", VA = "0x2A3AB0")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x2A3888", Offset = "0x2A3888", VA = "0x2A3888")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x29FCB4", Offset = "0x29FCB4", VA = "0x29FCB4")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly User User;

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x2A3B88", Offset = "0x2A3B88", VA = "0x2A3B88")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2A3C5C", Offset = "0x2A3C5C", VA = "0x2A3C5C")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly uint AverageWait;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Pool;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string RequestHash;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x29FEBC", Offset = "0x29FEBC", VA = "0x29FEBC")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Room Room;

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2A00F0", Offset = "0x2A00F0", VA = "0x2A00F0")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class MatchmakingStats
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly uint DrawCount;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly uint LossCount;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint WinCount;

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x2A0614", Offset = "0x2A0614", VA = "0x2A0614")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1768F8", Offset = "0x1768F8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1768F8", Offset = "0x1768F8")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17692C", Offset = "0x17692C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17692C", Offset = "0x17692C")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170001BF")]
		public ulong ID
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x2A3E9C", Offset = "0x2A3E9C", VA = "0x2A3E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180538", Offset = "0x180538")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x2A3E84", Offset = "0x2A3E84", VA = "0x2A3E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180548", Offset = "0x180548")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x2A3EA4", Offset = "0x2A3EA4", VA = "0x2A3EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180558", Offset = "0x180558")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x2A3E94", Offset = "0x2A3E94", VA = "0x2A3E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180568", Offset = "0x180568")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x2A0818", Offset = "0x2A0818", VA = "0x2A0818")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class OrgScopedID
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x2A0960", Offset = "0x2A0960", VA = "0x2A0960")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class Party
	{
		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly User Leader;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly UserList Users;

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x2A0B7C", Offset = "0x2A0B7C", VA = "0x2A0B7C")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class Pid
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Id;

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x2A3EAC", Offset = "0x2A3EAC", VA = "0x2A3EAC")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x2A0F08", Offset = "0x2A0F08", VA = "0x2A0F08")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class PingResult
	{
		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x176960", Offset = "0x176960")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x176960", Offset = "0x176960")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170001C1")]
		public ulong ID
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x2A3F54", Offset = "0x2A3F54", VA = "0x2A3F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180578", Offset = "0x180578")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x2A3F44", Offset = "0x2A3F44", VA = "0x2A3F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180588", Offset = "0x180588")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x2A3F5C", Offset = "0x2A3F5C", VA = "0x2A3F5C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001C3")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x2A3FF0", Offset = "0x2A3FF0", VA = "0x2A3FF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x2A12F8", Offset = "0x2A12F8", VA = "0x2A12F8")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class Product
	{
		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Description;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string FormattedPrice;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Sku;

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x2A4058", Offset = "0x2A4058", VA = "0x2A4058")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x2A1458", Offset = "0x2A1458", VA = "0x2A1458")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class Purchase
	{
		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Sku;

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x2A17D8", Offset = "0x2A17D8", VA = "0x2A17D8")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x2A19E0", Offset = "0x2A19E0", VA = "0x2A19E0")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class Room
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Description;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly uint MaxUsers;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Name;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public readonly User Owner;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly RoomType Type;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly UserList Users;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly uint Version;

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x2A02F8", Offset = "0x2A02F8", VA = "0x2A02F8")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x2A21F8", Offset = "0x2A21F8", VA = "0x2A21F8")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x2A4120", Offset = "0x2A4120", VA = "0x2A4120")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x2A1E78", Offset = "0x2A1E78", VA = "0x2A1E78")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class SystemVoipState
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x2A2890", Offset = "0x2A2890", VA = "0x2A2890")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class User
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ImageURL;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string InviteToken;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string OculusID;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Presence;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x2A2A50", Offset = "0x2A2A50", VA = "0x2A2A50")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x2A2FE0", Offset = "0x2A2FE0", VA = "0x2A2FE0")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class UserAndRoom
	{
		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Room Room;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly User User;

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x2A41F0", Offset = "0x2A41F0", VA = "0x2A41F0")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x2A2C60", Offset = "0x2A2C60", VA = "0x2A2C60")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class UserProof
	{
		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Value;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x2A3360", Offset = "0x2A3360", VA = "0x2A3360")]
		public UserProof(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000169")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ulong size;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170001C4")]
		public ulong SenderID
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x2A5368", Offset = "0x2A5368", VA = "0x2A5368")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001C5")]
		public ulong Size
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x2A53F0", Offset = "0x2A53F0", VA = "0x2A53F0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001C6")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x2A53F8", Offset = "0x2A53F8", VA = "0x2A53F8")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x2A43D8", Offset = "0x2A43D8", VA = "0x2A43D8")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x2A5194", Offset = "0x2A5194", VA = "0x2A5194")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2A5480", Offset = "0x2A5480", VA = "0x2A5480", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x2A54E4", Offset = "0x2A54E4", VA = "0x2A54E4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public enum PeerConnectionState : uint
	{
		[Token(Token = "0x4000735")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176994", Offset = "0x176994")]
		Unknown,
		[Token(Token = "0x4000736")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1769C8", Offset = "0x1769C8")]
		Connected,
		[Token(Token = "0x4000737")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176A00", Offset = "0x176A00")]
		Timeout,
		[Token(Token = "0x4000738")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176A34", Offset = "0x176A34")]
		Closed
	}
	[Token(Token = "0x200016B")]
	public sealed class Core
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2968A4", Offset = "0x2968A4", VA = "0x2968A4")]
		public Core()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x295D64", Offset = "0x295D64", VA = "0x295D64")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2968AC", Offset = "0x2968AC", VA = "0x2968AC")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x29693C", Offset = "0x29693C", VA = "0x29693C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x29701C", Offset = "0x29701C", VA = "0x29701C")]
		private static string GetAppIDFromConfig(bool forceWindows)
		{
			return null;
		}
	}
	[Token(Token = "0x200016C")]
	public static class Rooms
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x2A5FE4", Offset = "0x2A5FE4", VA = "0x2A5FE4")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x2A6340", Offset = "0x2A6340", VA = "0x2A6340")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x2A63D8", Offset = "0x2A63D8", VA = "0x2A63D8")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x2A6470", Offset = "0x2A6470", VA = "0x2A6470")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x2A6590", Offset = "0x2A6590", VA = "0x2A6590")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x2A66F8", Offset = "0x2A66F8", VA = "0x2A66F8")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x2A6810", Offset = "0x2A6810", VA = "0x2A6810")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x2A6918", Offset = "0x2A6918", VA = "0x2A6918")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x2A6A30", Offset = "0x2A6A30", VA = "0x2A6A30")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x2A6B38", Offset = "0x2A6B38", VA = "0x2A6B38")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x2A6C90", Offset = "0x2A6C90", VA = "0x2A6C90")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x2A6D98", Offset = "0x2A6D98", VA = "0x2A6D98")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x2A6EB8", Offset = "0x2A6EB8", VA = "0x2A6EB8")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x2A6FD8", Offset = "0x2A6FD8", VA = "0x2A6FD8")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x2A7140", Offset = "0x2A7140", VA = "0x2A7140")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x2A7274", Offset = "0x2A7274", VA = "0x2A7274")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x2A736C", Offset = "0x2A736C", VA = "0x2A736C")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x2A7484", Offset = "0x2A7484", VA = "0x2A7484")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x2A75A4", Offset = "0x2A75A4", VA = "0x2A75A4")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x2A76C4", Offset = "0x2A76C4", VA = "0x2A76C4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x2A77D8", Offset = "0x2A77D8", VA = "0x2A77D8")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x2A78F8", Offset = "0x2A78F8", VA = "0x2A78F8")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x298230", Offset = "0x298230", VA = "0x298230")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x2982C8", Offset = "0x2982C8", VA = "0x2982C8")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x2983D0", Offset = "0x2983D0", VA = "0x2983D0")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x2984D8", Offset = "0x2984D8", VA = "0x2984D8")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}
	}
	[Token(Token = "0x200016E")]
	public static class Matchmaking
	{
		[Token(Token = "0x200016F")]
		public class CustomQuery
		{
			[Token(Token = "0x2000170")]
			public struct Criterion
			{
				[Token(Token = "0x400073D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x400073E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x400073F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6000B75")]
				[Address(RVA = "0x1C4208", Offset = "0x1C4208", VA = "0x1C4208")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> data;

			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Criterion[] criteria;

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x29A268", Offset = "0x29A268", VA = "0x29A268")]
			public CustomQuery()
			{
			}

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x298C1C", Offset = "0x298C1C", VA = "0x298C1C")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x2985E0", Offset = "0x2985E0", VA = "0x2985E0")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x298930", Offset = "0x298930", VA = "0x298930")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x2989C8", Offset = "0x2989C8", VA = "0x2989C8")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x298AE8", Offset = "0x298AE8", VA = "0x298AE8")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x299150", Offset = "0x299150", VA = "0x299150")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x299308", Offset = "0x299308", VA = "0x299308")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x299400", Offset = "0x299400", VA = "0x299400")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x2994E8", Offset = "0x2994E8", VA = "0x2994E8")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x299630", Offset = "0x299630", VA = "0x299630")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x299790", Offset = "0x299790", VA = "0x299790")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x2998B0", Offset = "0x2998B0", VA = "0x2998B0")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x299A10", Offset = "0x299A10", VA = "0x299A10")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x299B44", Offset = "0x299B44", VA = "0x299B44")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x299CA4", Offset = "0x299CA4", VA = "0x299CA4")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x299DE0", Offset = "0x299DE0", VA = "0x299DE0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x299F48", Offset = "0x299F48", VA = "0x299F48")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x29A050", Offset = "0x29A050", VA = "0x29A050")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x29A170", Offset = "0x29A170", VA = "0x29A170")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public static class Net
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x2A42E0", Offset = "0x2A42E0", VA = "0x2A42E0")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x2A44B0", Offset = "0x2A44B0", VA = "0x2A44B0")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x2A45EC", Offset = "0x2A45EC", VA = "0x2A45EC")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x2A46B0", Offset = "0x2A46B0", VA = "0x2A46B0")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x2A4774", Offset = "0x2A4774", VA = "0x2A4774")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x2A4838", Offset = "0x2A4838", VA = "0x2A4838")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x2A4900", Offset = "0x2A4900", VA = "0x2A4900")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x2A4A20", Offset = "0x2A4A20", VA = "0x2A4A20")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x2A4AD8", Offset = "0x2A4AD8", VA = "0x2A4AD8")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x2A4B8C", Offset = "0x2A4B8C", VA = "0x2A4B8C")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x2A4CA4", Offset = "0x2A4CA4", VA = "0x2A4CA4")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x2A4D3C", Offset = "0x2A4D3C", VA = "0x2A4D3C")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000172")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x297C0C", Offset = "0x297C0C", VA = "0x297C0C")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x297D50", Offset = "0x297D50", VA = "0x297D50")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x297E94", Offset = "0x297E94", VA = "0x297E94")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x297FC0", Offset = "0x297FC0", VA = "0x297FC0")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x2980EC", Offset = "0x2980EC", VA = "0x2980EC")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000173")]
	public static class Voip
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x2A8AF8", Offset = "0x2A8AF8", VA = "0x2A8AF8")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x2A8BBC", Offset = "0x2A8BBC", VA = "0x2A8BBC")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x2A8C80", Offset = "0x2A8C80", VA = "0x2A8C80")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x2A8D44", Offset = "0x2A8D44", VA = "0x2A8D44")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x2A8E14", Offset = "0x2A8E14", VA = "0x2A8E14")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x2A8EE4", Offset = "0x2A8EE4", VA = "0x2A8EE4")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x2A8FE4", Offset = "0x2A8FE4", VA = "0x2A8FE4")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x2A90A0", Offset = "0x2A90A0", VA = "0x2A90A0")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x2A9158", Offset = "0x2A9158", VA = "0x2A9158")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x2A9210", Offset = "0x2A9210", VA = "0x2A9210")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x2A92E0", Offset = "0x2A92E0", VA = "0x2A92E0")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}
	}
	[Token(Token = "0x2000174")]
	public static class Achievements
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x3FC600", Offset = "0x3FC600", VA = "0x3FC600")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x3FC808", Offset = "0x3FC808", VA = "0x3FC808")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x3FCA14", Offset = "0x3FCA14", VA = "0x3FCA14")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x3FCBFC", Offset = "0x3FCBFC", VA = "0x3FCBFC")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x3FCDE0", Offset = "0x3FCDE0", VA = "0x3FCDE0")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x3FD0D0", Offset = "0x3FD0D0", VA = "0x3FD0D0")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x3FD3BC", Offset = "0x3FD3BC", VA = "0x3FD3BC")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x3FD59C", Offset = "0x3FD59C", VA = "0x3FD59C")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x3FD870", Offset = "0x3FD870", VA = "0x3FD870")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000175")]
	public static class Application
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x3FDC8C", Offset = "0x3FDC8C", VA = "0x3FDC8C")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x295C4C", Offset = "0x295C4C", VA = "0x295C4C")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x295DF0", Offset = "0x295DF0", VA = "0x295DF0")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x295F08", Offset = "0x295F08", VA = "0x295F08")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x296018", Offset = "0x296018", VA = "0x296018")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x296130", Offset = "0x296130", VA = "0x296130")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x296240", Offset = "0x296240", VA = "0x296240")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x296358", Offset = "0x296358", VA = "0x296358")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x296478", Offset = "0x296478", VA = "0x296478")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x296598", Offset = "0x296598", VA = "0x296598")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x2966E4", Offset = "0x2966E4", VA = "0x2966E4")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000177")]
	public static class Entitlements
	{
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x2972E4", Offset = "0x2972E4", VA = "0x2972E4")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000179")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200017A")]
	public static class IAP
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x2973F4", Offset = "0x2973F4", VA = "0x2973F4")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x2974E8", Offset = "0x2974E8", VA = "0x2974E8")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x29760C", Offset = "0x29760C", VA = "0x29760C")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x297714", Offset = "0x297714", VA = "0x297714")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x29788C", Offset = "0x29788C", VA = "0x29788C")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x297A4C", Offset = "0x297A4C", VA = "0x297A4C")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017B")]
	public static class Notifications
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x2A4DD4", Offset = "0x2A4DD4", VA = "0x2A4DD4")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x2A4EDC", Offset = "0x2A4EDC", VA = "0x2A4EDC")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x2A4FD4", Offset = "0x2A4FD4", VA = "0x2A4FD4")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public static class Parties
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x2A5578", Offset = "0x2A5578", VA = "0x2A5578")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	public static class Users
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x2A8020", Offset = "0x2A8020", VA = "0x2A8020")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x2A8138", Offset = "0x2A8138", VA = "0x2A8138")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x2A8240", Offset = "0x2A8240", VA = "0x2A8240")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x2A8348", Offset = "0x2A8348", VA = "0x2A8348")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x2A8450", Offset = "0x2A8450", VA = "0x2A8450")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x2A8558", Offset = "0x2A8558", VA = "0x2A8558")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x2A8670", Offset = "0x2A8670", VA = "0x2A8670")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x2A8778", Offset = "0x2A8778", VA = "0x2A8778")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x2A8938", Offset = "0x2A8938", VA = "0x2A8938")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017E")]
	public static class PlatformInternal
	{
		[Token(Token = "0x200017F")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000741")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000742")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000743")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000744")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000745")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000746")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000747")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000748")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000749")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x400074A")]
			Party_Get = 1586058173u,
			[Token(Token = "0x400074B")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x400074C")]
			Party_Invite = 901104867u,
			[Token(Token = "0x400074D")]
			Party_Join = 1744993395u,
			[Token(Token = "0x400074E")]
			Party_Leave = 848430801u,
			[Token(Token = "0x400074F")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000750")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000751")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000752")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000753")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000754")]
			User_NewTestUserFriends = 517416647u
		}

		[Token(Token = "0x2000180")]
		public static class HTTP
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x2A56FC", Offset = "0x2A56FC", VA = "0x2A56FC")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x2A5680", Offset = "0x2A5680", VA = "0x2A5680")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x29CF60", Offset = "0x29CF60", VA = "0x29CF60")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170001C7")]
		public static string AppID
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x2972B8", Offset = "0x2972B8", VA = "0x2972B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x2A59BC", Offset = "0x2A59BC", VA = "0x2A59BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public static string MobileAppID
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x297290", Offset = "0x297290", VA = "0x297290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x2A59E8", Offset = "0x2A59E8", VA = "0x2A59E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x296FF4", Offset = "0x296FF4", VA = "0x296FF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x2A5A14", Offset = "0x2A5A14", VA = "0x2A5A14")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x2A5848", Offset = "0x2A5848", VA = "0x2A5848")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x2A5A40", Offset = "0x2A5A40", VA = "0x2A5A40")]
			set
			{
			}
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x2A5794", Offset = "0x2A5794", VA = "0x2A5794")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x6000BC6")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000BC7")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000183")]
	public class Request
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x176A98", Offset = "0x176A98")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x176A98", Offset = "0x176A98")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x170001CB")]
		public ulong RequestID
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x294D7C", Offset = "0x294D7C", VA = "0x294D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180598", Offset = "0x180598")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x2A5AA4", Offset = "0x2A5AA4", VA = "0x2A5AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1805A8", Offset = "0x1805A8")]
			set
			{
			}
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x2973CC", Offset = "0x2973CC", VA = "0x2973CC")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x2A5AB4", Offset = "0x2A5AB4", VA = "0x2A5AB4")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x295B9C", Offset = "0x295B9C", VA = "0x295B9C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000184")]
	public enum RoomJoinability : uint
	{
		[Token(Token = "0x400075B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176ACC", Offset = "0x176ACC")]
		Unknown,
		[Token(Token = "0x400075C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176B00", Offset = "0x176B00")]
		AreIn,
		[Token(Token = "0x400075D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176B34", Offset = "0x176B34")]
		AreKicked,
		[Token(Token = "0x400075E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176B6C", Offset = "0x176B6C")]
		CanJoin,
		[Token(Token = "0x400075F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176BA4", Offset = "0x176BA4")]
		IsFull,
		[Token(Token = "0x4000760")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176BD8", Offset = "0x176BD8")]
		NoViewer,
		[Token(Token = "0x4000761")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176C10", Offset = "0x176C10")]
		PolicyPrevents
	}
	[Token(Token = "0x2000185")]
	public enum RoomJoinPolicy : uint
	{
		[Token(Token = "0x4000763")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176C4C", Offset = "0x176C4C")]
		None,
		[Token(Token = "0x4000764")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176C80", Offset = "0x176C80")]
		Everyone,
		[Token(Token = "0x4000765")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176CB8", Offset = "0x176CB8")]
		FriendsOfMembers,
		[Token(Token = "0x4000766")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176CF8", Offset = "0x176CF8")]
		FriendsOfOwner,
		[Token(Token = "0x4000767")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176D38", Offset = "0x176D38")]
		InvitedUsers,
		[Token(Token = "0x4000768")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176D74", Offset = "0x176D74")]
		Unknown
	}
	[Token(Token = "0x2000186")]
	public enum RoomMembershipLockStatus : uint
	{
		[Token(Token = "0x400076A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176DA8", Offset = "0x176DA8")]
		Unknown,
		[Token(Token = "0x400076B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176DDC", Offset = "0x176DDC")]
		Lock,
		[Token(Token = "0x400076C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176E10", Offset = "0x176E10")]
		Unlock
	}
	[Token(Token = "0x2000187")]
	public class RoomOptions
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x2A5B40", Offset = "0x2A5B40", VA = "0x2A5B40")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x2A5BD0", Offset = "0x2A5BD0", VA = "0x2A5BD0")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x2A5C68", Offset = "0x2A5C68", VA = "0x2A5C68")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x2A5CF0", Offset = "0x2A5CF0", VA = "0x2A5CF0")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x2A5D80", Offset = "0x2A5D80", VA = "0x2A5D80")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x2A5E24", Offset = "0x2A5E24", VA = "0x2A5E24")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x2A5EB4", Offset = "0x2A5EB4", VA = "0x2A5EB4")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x2A5F0C", Offset = "0x2A5F0C", VA = "0x2A5F0C", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public enum RoomType : uint
	{
		[Token(Token = "0x400076F")]
		Unknown,
		[Token(Token = "0x4000770")]
		Matchmaking,
		[Token(Token = "0x4000771")]
		Moderated,
		[Token(Token = "0x4000772")]
		Private,
		[Token(Token = "0x4000773")]
		Solo
	}
	[Token(Token = "0x2000189")]
	public enum SendPolicy : uint
	{
		[Token(Token = "0x4000775")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176E44", Offset = "0x176E44")]
		Unreliable,
		[Token(Token = "0x4000776")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176E7C", Offset = "0x176E7C")]
		Reliable,
		[Token(Token = "0x4000777")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176EB4", Offset = "0x176EB4")]
		Unknown
	}
	[Token(Token = "0x200018A")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x200018B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x172604", Offset = "0x172604")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x297190", Offset = "0x297190", VA = "0x297190")]
		public StandalonePlatform()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x2A7AB8", Offset = "0x2A7AB8", VA = "0x2A7AB8")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x297198", Offset = "0x297198", VA = "0x297198")]
		public bool InitializeInEditor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x2A7C68", Offset = "0x2A7C68", VA = "0x2A7C68")]
		public bool Initialize(string accessToken)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200018C")]
	public sealed class StandalonePlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000778")]
		private const string OculusPlatformAccessTokenKey = "OculusPlatformAccessToken";

		[Token(Token = "0x170001CC")]
		public static string OculusPlatformAccessToken
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x2A7BDC", Offset = "0x2A7BDC", VA = "0x2A7BDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x2A801C", Offset = "0x2A801C", VA = "0x2A801C")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x2A8014", Offset = "0x2A8014", VA = "0x2A8014")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public enum SystemVoipStatus : uint
	{
		[Token(Token = "0x400077A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176EE8", Offset = "0x176EE8")]
		Unknown,
		[Token(Token = "0x400077B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176F1C", Offset = "0x176F1C")]
		Unavailable,
		[Token(Token = "0x400077C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176F54", Offset = "0x176F54")]
		Suppressed,
		[Token(Token = "0x400077D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176F8C", Offset = "0x176F8C")]
		Active
	}
	[Token(Token = "0x200018E")]
	public enum UserOrdering : uint
	{
		[Token(Token = "0x400077F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176FC0", Offset = "0x176FC0")]
		Unknown,
		[Token(Token = "0x4000780")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x176FF4", Offset = "0x176FF4")]
		None,
		[Token(Token = "0x4000781")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x177028", Offset = "0x177028")]
		PresenceAlphabetical
	}
	[Token(Token = "0x200018F")]
	public enum UserPresenceStatus : uint
	{
		[Token(Token = "0x4000783")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17706C", Offset = "0x17706C")]
		Unknown,
		[Token(Token = "0x4000784")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1770A0", Offset = "0x1770A0")]
		Online,
		[Token(Token = "0x4000785")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1770D4", Offset = "0x1770D4")]
		Offline
	}
	[Token(Token = "0x2000190")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x2000191")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x400078B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x400078C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] scratchBuffer;

			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x2A9DF8", Offset = "0x2A9DF8", VA = "0x2A9DF8")]
			public FilterReadDelegate()
			{
			}

			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x2A9E00", Offset = "0x2A9E00", VA = "0x2A9E00")]
			private void Awake()
			{
			}

			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x2A9ED8", Offset = "0x2A9ED8", VA = "0x2A9ED8")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}
		}

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170001CD")]
		public ulong senderID
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x2A93F8", Offset = "0x2A93F8", VA = "0x2A93F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x2A93F0", Offset = "0x2A93F0", VA = "0x2A93F0")]
		public VoipAudioSourceHiLevel()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x2A94EC", Offset = "0x2A94EC", VA = "0x2A94EC")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x2A94F0", Offset = "0x2A94F0", VA = "0x2A94F0")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x2A9524", Offset = "0x2A9524", VA = "0x2A9524")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x2A98F0", Offset = "0x2A98F0", VA = "0x2A98F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x2A991C", Offset = "0x2A991C", VA = "0x2A991C", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x2A9994", Offset = "0x2A9994", VA = "0x2A9994")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x2A9A3C", Offset = "0x2A9A3C", VA = "0x2A9A3C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public enum VoipMuteState : uint
	{
		[Token(Token = "0x400078E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x177108", Offset = "0x177108")]
		Unknown,
		[Token(Token = "0x400078F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17713C", Offset = "0x17713C")]
		Muted,
		[Token(Token = "0x4000790")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x177170", Offset = "0x177170")]
		Unmuted
	}
	[Token(Token = "0x2000193")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong senderID;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x2A998C", Offset = "0x2A998C", VA = "0x2A998C")]
		public VoipPCMSourceNative()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x2AA5C0", Offset = "0x2AA5C0", VA = "0x2AA5C0", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x2AA6B0", Offset = "0x2AA6B0", VA = "0x2AA6B0", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x2AA6C0", Offset = "0x2AA6C0", VA = "0x2AA6C0", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x2AA788", Offset = "0x2AA788", VA = "0x2AA788", Slot = "6")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public enum VoipSampleRate : uint
	{
		[Token(Token = "0x4000793")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1771A4", Offset = "0x1771A4")]
		Unknown,
		[Token(Token = "0x4000794")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1771D8", Offset = "0x1771D8")]
		HZ24000,
		[Token(Token = "0x4000795")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x17720C", Offset = "0x17720C")]
		HZ44100,
		[Token(Token = "0x4000796")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x177240", Offset = "0x177240")]
		HZ48000
	}
	[Token(Token = "0x2000195")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000196")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x172618", Offset = "0x172618")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x297064", Offset = "0x297064", VA = "0x297064")]
		public WindowsPlatform()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x2AA78C", Offset = "0x2AA78C", VA = "0x2AA78C")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x29706C", Offset = "0x29706C", VA = "0x29706C")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000197")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x17262C", Offset = "0x17262C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000198")]
	public enum RotationAxes
	{
		[Token(Token = "0x40007A0")]
		MouseXAndY,
		[Token(Token = "0x40007A1")]
		MouseX,
		[Token(Token = "0x40007A2")]
		MouseY
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RotationAxes axes;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityX;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sensitivityY;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumX;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumX;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumY;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maximumY;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationY;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x361AB0", Offset = "0x361AB0", VA = "0x361AB0")]
	public MouseLook()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x361AF0", Offset = "0x361AF0", VA = "0x361AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x361DD8", Offset = "0x361DD8", VA = "0x361DD8")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000199")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float fadeTime;
}
[Token(Token = "0x200019A")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x367160", Offset = "0x367160", VA = "0x367160")]
	public ONSPReflectionZone()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x367168", Offset = "0x367168", VA = "0x367168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x36716C", Offset = "0x36716C", VA = "0x36716C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x367170", Offset = "0x367170", VA = "0x367170")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x367338", Offset = "0x367338", VA = "0x367338")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x3671B8", Offset = "0x3671B8", VA = "0x3671B8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x36726C", Offset = "0x36726C", VA = "0x36726C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x367380", Offset = "0x367380", VA = "0x367380")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x367458", Offset = "0x367458", VA = "0x367458")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x367664", Offset = "0x367664", VA = "0x367664")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}
}
[Token(Token = "0x200019B")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170001CE")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x366434", Offset = "0x366434", VA = "0x366434")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x36643C", Offset = "0x36643C", VA = "0x36643C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public float Gain
	{
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x366444", Offset = "0x366444", VA = "0x366444")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x36644C", Offset = "0x36644C", VA = "0x36644C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x3664E4", Offset = "0x3664E4", VA = "0x3664E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x3664EC", Offset = "0x3664EC", VA = "0x3664EC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public float Near
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x3664F4", Offset = "0x3664F4", VA = "0x3664F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x3664FC", Offset = "0x3664FC", VA = "0x3664FC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public float Far
	{
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x366594", Offset = "0x366594", VA = "0x366594")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x36659C", Offset = "0x36659C", VA = "0x36659C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x366634", Offset = "0x366634", VA = "0x366634")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x36663C", Offset = "0x36663C", VA = "0x36663C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x3666D4", Offset = "0x3666D4", VA = "0x3666D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x3666DC", Offset = "0x3666DC", VA = "0x3666DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x3662DC", Offset = "0x3662DC", VA = "0x3662DC")]
	public ONSPAudioSource()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x366300", Offset = "0x366300", VA = "0x366300")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x3666E4", Offset = "0x3666E4", VA = "0x3666E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x3668D0", Offset = "0x3668D0", VA = "0x3668D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x3668D4", Offset = "0x3668D4", VA = "0x3668D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x36676C", Offset = "0x36676C", VA = "0x36676C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x3669E0", Offset = "0x3669E0", VA = "0x3669E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x367040", Offset = "0x367040", VA = "0x367040")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x200019C")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x367914", Offset = "0x367914", VA = "0x367914")]
	public ONSPVersion()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x367920", Offset = "0x367920", VA = "0x367920")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x367A34", Offset = "0x367A34", VA = "0x367A34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x367B84", Offset = "0x367B84", VA = "0x367B84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x367B88", Offset = "0x367B88", VA = "0x367B88")]
	private void Update()
	{
	}
}
[Token(Token = "0x200019D")]
public class OVRBoundary
{
	[Token(Token = "0x200019E")]
	public enum Node
	{
		[Token(Token = "0x40007B7")]
		HandLeft = 3,
		[Token(Token = "0x40007B8")]
		HandRight = 4,
		[Token(Token = "0x40007B9")]
		Head = 9
	}

	[Token(Token = "0x200019F")]
	public enum BoundaryType
	{
		[Token(Token = "0x40007BB")]
		OuterBoundary = 1,
		[Token(Token = "0x40007BC")]
		PlayArea = 0x100
	}

	[Token(Token = "0x20001A0")]
	public struct BoundaryTestResult
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsTriggering;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ClosestDistance;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 ClosestPoint;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 ClosestPointNormal;
	}

	[Token(Token = "0x20001A1")]
	public struct BoundaryLookAndFeel
	{
		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color Color;
	}

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int cachedVector3fSize;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static OVRNativeBuffer cachedGeometryNativeBuffer;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] cachedGeometryManagedBuffer;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x367B8C", Offset = "0x367B8C", VA = "0x367B8C")]
	public OVRBoundary()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x367B94", Offset = "0x367B94", VA = "0x367B94")]
	public bool GetConfigured()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x367C10", Offset = "0x367C10", VA = "0x367C10")]
	public BoundaryTestResult TestNode(Node node, BoundaryType boundaryType)
	{
		return default(BoundaryTestResult);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x367D44", Offset = "0x367D44", VA = "0x367D44")]
	public BoundaryTestResult TestPoint(Vector3 point, BoundaryType boundaryType)
	{
		return default(BoundaryTestResult);
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x367EA0", Offset = "0x367EA0", VA = "0x367EA0")]
	public void SetLookAndFeel(BoundaryLookAndFeel lookAndFeel)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x367F6C", Offset = "0x367F6C", VA = "0x367F6C")]
	public void ResetLookAndFeel()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x367FE8", Offset = "0x367FE8", VA = "0x367FE8")]
	public Vector3[] GetGeometry(BoundaryType boundaryType)
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x3685A8", Offset = "0x3685A8", VA = "0x3685A8")]
	public Vector3 GetDimensions(BoundaryType boundaryType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x368650", Offset = "0x368650", VA = "0x368650")]
	public bool GetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x3686CC", Offset = "0x3686CC", VA = "0x3686CC")]
	public void SetVisible(bool value)
	{
	}
}
[Token(Token = "0x20001A2")]
[ExecuteInEditMode]
public class OVRCameraRig : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1772E4", Offset = "0x1772E4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1772E4", Offset = "0x1772E4")]
	private Transform <trackingSpace>k__BackingField;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177318", Offset = "0x177318")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177318", Offset = "0x177318")]
	private Transform <leftEyeAnchor>k__BackingField;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17734C", Offset = "0x17734C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17734C", Offset = "0x17734C")]
	private Transform <centerEyeAnchor>k__BackingField;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177380", Offset = "0x177380")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177380", Offset = "0x177380")]
	private Transform <rightEyeAnchor>k__BackingField;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1773B4", Offset = "0x1773B4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1773B4", Offset = "0x1773B4")]
	private Transform <leftHandAnchor>k__BackingField;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1773E8", Offset = "0x1773E8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1773E8", Offset = "0x1773E8")]
	private Transform <rightHandAnchor>k__BackingField;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17741C", Offset = "0x17741C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17741C", Offset = "0x17741C")]
	private Transform <trackerAnchor>k__BackingField;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool usePerEyeCameras;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool useFixedUpdateForTracking;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	protected bool _skipUpdate;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected readonly string trackingSpaceName;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected readonly string trackerAnchorName;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected readonly string leftEyeAnchorName;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected readonly string centerEyeAnchorName;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected readonly string rightEyeAnchorName;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected readonly string leftHandAnchorName;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected readonly string rightHandAnchorName;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Camera _centerEyeCamera;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Camera _leftEyeCamera;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Camera _rightEyeCamera;

	[Token(Token = "0x170001D5")]
	public Camera leftEyeCamera
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x36896C", Offset = "0x36896C", VA = "0x36896C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D6")]
	public Camera rightEyeCamera
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x368984", Offset = "0x368984", VA = "0x368984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D7")]
	public Transform trackingSpace
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x36899C", Offset = "0x36899C", VA = "0x36899C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1805B8", Offset = "0x1805B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x3689A4", Offset = "0x3689A4", VA = "0x3689A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1805C8", Offset = "0x1805C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public Transform leftEyeAnchor
	{
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x3689AC", Offset = "0x3689AC", VA = "0x3689AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1805D8", Offset = "0x1805D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x3689B4", Offset = "0x3689B4", VA = "0x3689B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1805E8", Offset = "0x1805E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public Transform centerEyeAnchor
	{
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x3689BC", Offset = "0x3689BC", VA = "0x3689BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1805F8", Offset = "0x1805F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x3689C4", Offset = "0x3689C4", VA = "0x3689C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180608", Offset = "0x180608")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public Transform rightEyeAnchor
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x3689CC", Offset = "0x3689CC", VA = "0x3689CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180618", Offset = "0x180618")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x3689D4", Offset = "0x3689D4", VA = "0x3689D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180628", Offset = "0x180628")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public Transform leftHandAnchor
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x3689DC", Offset = "0x3689DC", VA = "0x3689DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180638", Offset = "0x180638")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x3689E4", Offset = "0x3689E4", VA = "0x3689E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180648", Offset = "0x180648")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	public Transform rightHandAnchor
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x3689EC", Offset = "0x3689EC", VA = "0x3689EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180658", Offset = "0x180658")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x3689F4", Offset = "0x3689F4", VA = "0x3689F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180668", Offset = "0x180668")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public Transform trackerAnchor
	{
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x3689FC", Offset = "0x3689FC", VA = "0x3689FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180678", Offset = "0x180678")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x368A04", Offset = "0x368A04", VA = "0x368A04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180688", Offset = "0x180688")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<OVRCameraRig> UpdatedAnchors
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x368A0C", Offset = "0x368A0C", VA = "0x368A0C")]
		add
		{
		}
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x368B18", Offset = "0x368B18", VA = "0x368B18")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x368888", Offset = "0x368888", VA = "0x368888")]
	public OVRCameraRig()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x368C24", Offset = "0x368C24", VA = "0x368C24", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x368C3C", Offset = "0x368C3C", VA = "0x368C3C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x368C4C", Offset = "0x368C4C", VA = "0x368C4C", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x368C68", Offset = "0x368C68", VA = "0x368C68", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x368C8C", Offset = "0x368C8C", VA = "0x368C8C", Slot = "8")]
	protected virtual void UpdateAnchors()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x3693D8", Offset = "0x3693D8", VA = "0x3693D8", Slot = "9")]
	protected virtual void RaiseUpdatedAnchorsEvent()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x369448", Offset = "0x369448", VA = "0x369448", Slot = "10")]
	public virtual void EnsureGameObjectIntegrity()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x369F1C", Offset = "0x369F1C", VA = "0x369F1C", Slot = "11")]
	protected virtual Transform ConfigureAnchor(Transform root, string name)
	{
		return null;
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x36A2F4", Offset = "0x36A2F4", VA = "0x36A2F4", Slot = "12")]
	public virtual Matrix4x4 ComputeTrackReferenceMatrix()
	{
		return default(Matrix4x4);
	}
}
[Token(Token = "0x20001A3")]
public static class OVRExtensions
{
	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x6CF9A0", Offset = "0x6CF9A0", VA = "0x6CF9A0")]
	public static OVRPose ToTrackingSpacePose(this Transform transform, Camera camera)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x6CFBB4", Offset = "0x6CFBB4", VA = "0x6CFBB4")]
	public static OVRPose ToWorldSpacePose(OVRPose trackingSpacePose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x6CFAD0", Offset = "0x6CFAD0", VA = "0x6CFAD0")]
	public static OVRPose ToHeadSpacePose(this Transform transform, Camera camera)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x6CFDC8", Offset = "0x6CFDC8", VA = "0x6CFDC8")]
	internal static OVRPose ToOVRPose(this Transform t, bool isLocal = false)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x6CFE94", Offset = "0x6CFE94", VA = "0x6CFE94")]
	internal static void FromOVRPose(this Transform t, OVRPose pose, bool isLocal = false)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x6CFFBC", Offset = "0x6CFFBC", VA = "0x6CFFBC")]
	internal static OVRPose ToOVRPose(this OVRPlugin.Posef p)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x6D0054", Offset = "0x6D0054", VA = "0x6D0054")]
	internal static OVRTracker.Frustum ToFrustum(this OVRPlugin.Frustumf f)
	{
		return default(OVRTracker.Frustum);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x6D007C", Offset = "0x6D007C", VA = "0x6D007C")]
	internal static Color FromColorf(this OVRPlugin.Colorf c)
	{
		return default(Color);
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x6D0088", Offset = "0x6D0088", VA = "0x6D0088")]
	internal static OVRPlugin.Colorf ToColorf(this Color c)
	{
		return default(OVRPlugin.Colorf);
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x6D0094", Offset = "0x6D0094", VA = "0x6D0094")]
	internal static Vector3 FromVector3f(this OVRPlugin.Vector3f v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x6D009C", Offset = "0x6D009C", VA = "0x6D009C")]
	internal static Vector3 FromFlippedZVector3f(this OVRPlugin.Vector3f v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x6D00A8", Offset = "0x6D00A8", VA = "0x6D00A8")]
	internal static OVRPlugin.Vector3f ToVector3f(this Vector3 v)
	{
		return default(OVRPlugin.Vector3f);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x6D00B0", Offset = "0x6D00B0", VA = "0x6D00B0")]
	internal static OVRPlugin.Vector3f ToFlippedZVector3f(this Vector3 v)
	{
		return default(OVRPlugin.Vector3f);
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x6D00BC", Offset = "0x6D00BC", VA = "0x6D00BC")]
	internal static Quaternion FromQuatf(this OVRPlugin.Quatf q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x6D00C8", Offset = "0x6D00C8", VA = "0x6D00C8")]
	internal static Quaternion FromFlippedZQuatf(this OVRPlugin.Quatf q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x6D00DC", Offset = "0x6D00DC", VA = "0x6D00DC")]
	internal static OVRPlugin.Quatf ToQuatf(this Quaternion q)
	{
		return default(OVRPlugin.Quatf);
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x6D00E8", Offset = "0x6D00E8", VA = "0x6D00E8")]
	internal static OVRPlugin.Quatf ToFlippedZQuatf(this Quaternion q)
	{
		return default(OVRPlugin.Quatf);
	}
}
[Serializable]
[Token(Token = "0x20001A4")]
public struct OVRPose
{
	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x170001DE")]
	public static OVRPose identity
	{
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x3F507C", Offset = "0x3F507C", VA = "0x3F507C")]
		get
		{
			return default(OVRPose);
		}
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1C5788", Offset = "0x1C5788", VA = "0x1C5788", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1C5790", Offset = "0x1C5790", VA = "0x1C5790", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x3F5248", Offset = "0x3F5248", VA = "0x3F5248")]
	public static bool operator ==(OVRPose x, OVRPose y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x3F53B4", Offset = "0x3F53B4", VA = "0x3F53B4")]
	public static bool operator !=(OVRPose x, OVRPose y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x3F5418", Offset = "0x3F5418", VA = "0x3F5418")]
	public static OVRPose operator *(OVRPose lhs, OVRPose rhs)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x1C57C0", Offset = "0x1C57C0", VA = "0x1C57C0")]
	public OVRPose Inverse()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1C57D4", Offset = "0x1C57D4", VA = "0x1C57D4")]
	internal OVRPose flipZ()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1C581C", Offset = "0x1C581C", VA = "0x1C581C")]
	internal OVRPlugin.Posef ToPosef()
	{
		return default(OVRPlugin.Posef);
	}
}
[Token(Token = "0x20001A5")]
public class OVRNativeBuffer : IDisposable
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool disposed;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int m_numBytes;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr m_ptr;

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x6DE370", Offset = "0x6DE370", VA = "0x6DE370")]
	public OVRNativeBuffer(int numBytes)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x6F11B0", Offset = "0x6F11B0", VA = "0x6F11B0", Slot = "1")]
	~OVRNativeBuffer()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x6F1258", Offset = "0x6F1258", VA = "0x6F1258")]
	public void Reset(int numBytes)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x6F125C", Offset = "0x6F125C", VA = "0x6F125C")]
	public int GetCapacity()
	{
		return default(int);
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x6DE4B0", Offset = "0x6DE4B0", VA = "0x6DE4B0")]
	public IntPtr GetPointer(int byteOffset = 0)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x6F1264", Offset = "0x6F1264", VA = "0x6F1264", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x6F122C", Offset = "0x6F122C", VA = "0x6F122C")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x6F1104", Offset = "0x6F1104", VA = "0x6F1104")]
	private void Reallocate(int numBytes)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x6F129C", Offset = "0x6F129C", VA = "0x6F129C")]
	private void Release()
	{
	}
}
[Token(Token = "0x20001A6")]
public class OVRDebugHeadController : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public bool AllowPitchLook;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	public bool AllowYawLook;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[SerializeField]
	public bool InvertPitch;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public float GamePad_PitchDegreesPerSec;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public float GamePad_YawDegreesPerSec;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool AllowMovement;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public float ForwardSpeed;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public float StrafeSpeed;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected OVRCameraRig CameraRig;

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x36C394", Offset = "0x36C394", VA = "0x36C394")]
	public OVRDebugHeadController()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x36C3C0", Offset = "0x36C3C0", VA = "0x36C3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x36C4F4", Offset = "0x36C4F4", VA = "0x36C4F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x36C4F8", Offset = "0x36C4F8", VA = "0x36C4F8")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001A7")]
public class OVRDisplay
{
	[Token(Token = "0x20001A8")]
	public struct EyeFov
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float UpFov;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float DownFov;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float LeftFov;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float RightFov;
	}

	[Token(Token = "0x20001A9")]
	public struct EyeRenderDesc
	{
		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 resolution;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 fov;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EyeFov fullFov;
	}

	[Token(Token = "0x20001AA")]
	public struct LatencyData
	{
		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float render;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float timeWarp;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float postPresent;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float renderError;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeWarpError;
	}

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool needsConfigureTexture;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private EyeRenderDesc[] eyeDescs;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool recenterRequested;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int recenterRequestedFrameCount;

	[Token(Token = "0x170001DF")]
	public Vector3 acceleration
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x36F1F0", Offset = "0x36F1F0", VA = "0x36F1F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001E0")]
	public Vector3 angularAcceleration
	{
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x36F314", Offset = "0x36F314", VA = "0x36F314")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001E1")]
	public Vector3 velocity
	{
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x36F484", Offset = "0x36F484", VA = "0x36F484")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001E2")]
	public Vector3 angularVelocity
	{
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x36F5A8", Offset = "0x36F5A8", VA = "0x36F5A8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001E3")]
	public LatencyData latency
	{
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x36F718", Offset = "0x36F718", VA = "0x36F718")]
		get
		{
			return default(LatencyData);
		}
	}

	[Token(Token = "0x170001E4")]
	public float appFramerate
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x36F9E4", Offset = "0x36F9E4", VA = "0x36F9E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001E5")]
	public int recommendedMSAALevel
	{
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x36FAA0", Offset = "0x36FAA0", VA = "0x36FAA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E6")]
	public float[] displayFrequenciesAvailable
	{
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x36FB24", Offset = "0x36FB24", VA = "0x36FB24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E7")]
	public float displayFrequency
	{
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x36FBA0", Offset = "0x36FBA0", VA = "0x36FBA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x36FC1C", Offset = "0x36FC1C", VA = "0x36FC1C")]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action RecenteredPose
	{
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x36EF44", Offset = "0x36EF44", VA = "0x36EF44")]
		add
		{
		}
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x36F050", Offset = "0x36F050", VA = "0x36F050")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x36EE24", Offset = "0x36EE24", VA = "0x36EE24")]
	public OVRDisplay()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x36EEDC", Offset = "0x36EEDC", VA = "0x36EEDC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x36F15C", Offset = "0x36F15C", VA = "0x36F15C")]
	public void RecenterPose()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x36EDC8", Offset = "0x36EDC8", VA = "0x36EDC8")]
	public EyeRenderDesc GetEyeRenderDesc(XRNode eye)
	{
		return default(EyeRenderDesc);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x36EEB8", Offset = "0x36EEB8", VA = "0x36EEB8")]
	private void UpdateTextures()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x36FCA0", Offset = "0x36FCA0", VA = "0x36FCA0")]
	private void ConfigureEyeDesc(XRNode eye)
	{
	}
}
[Token(Token = "0x20001AB")]
public static class OVRHaptics
{
	[Token(Token = "0x20001AC")]
	public static class Config
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177538", Offset = "0x177538")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177538", Offset = "0x177538")]
		private static int <SampleRateHz>k__BackingField;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17756C", Offset = "0x17756C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17756C", Offset = "0x17756C")]
		private static int <SampleSizeInBytes>k__BackingField;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1775A0", Offset = "0x1775A0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1775A0", Offset = "0x1775A0")]
		private static int <MinimumSafeSamplesQueued>k__BackingField;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1775D4", Offset = "0x1775D4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1775D4", Offset = "0x1775D4")]
		private static int <MinimumBufferSamplesCount>k__BackingField;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177608", Offset = "0x177608")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177608", Offset = "0x177608")]
		private static int <OptimalBufferSamplesCount>k__BackingField;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17763C", Offset = "0x17763C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17763C", Offset = "0x17763C")]
		private static int <MaximumBufferSamplesCount>k__BackingField;

		[Token(Token = "0x170001E8")]
		public static int SampleRateHz
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x6DD428", Offset = "0x6DD428", VA = "0x6DD428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180798", Offset = "0x180798")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x6DD4B4", Offset = "0x6DD4B4", VA = "0x6DD4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1807A8", Offset = "0x1807A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public static int SampleSizeInBytes
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x6DD544", Offset = "0x6DD544", VA = "0x6DD544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1807B8", Offset = "0x1807B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x6DD5D0", Offset = "0x6DD5D0", VA = "0x6DD5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1807C8", Offset = "0x1807C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public static int MinimumSafeSamplesQueued
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x6DD660", Offset = "0x6DD660", VA = "0x6DD660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1807D8", Offset = "0x1807D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x6DD6EC", Offset = "0x6DD6EC", VA = "0x6DD6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1807E8", Offset = "0x1807E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public static int MinimumBufferSamplesCount
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x6DD77C", Offset = "0x6DD77C", VA = "0x6DD77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1807F8", Offset = "0x1807F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x6DD808", Offset = "0x6DD808", VA = "0x6DD808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180808", Offset = "0x180808")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public static int OptimalBufferSamplesCount
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x6DD898", Offset = "0x6DD898", VA = "0x6DD898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180818", Offset = "0x180818")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x6DD924", Offset = "0x6DD924", VA = "0x6DD924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180828", Offset = "0x180828")]
			private set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public static int MaximumBufferSamplesCount
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x6DD9B4", Offset = "0x6DD9B4", VA = "0x6DD9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180838", Offset = "0x180838")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x6DDA40", Offset = "0x6DDA40", VA = "0x6DDA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180848", Offset = "0x180848")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x6DD424", Offset = "0x6DD424", VA = "0x6DD424")]
		static Config()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x6DC5EC", Offset = "0x6DC5EC", VA = "0x6DC5EC")]
		public static void Load()
		{
		}
	}

	[Token(Token = "0x20001AD")]
	public class OVRHapticsChannel
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private OVRHapticsOutput m_output;

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x6DC80C", Offset = "0x6DC80C", VA = "0x6DC80C")]
		public OVRHapticsChannel(uint outputIndex)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x6DDAD0", Offset = "0x6DDAD0", VA = "0x6DDAD0")]
		public void Preempt(OVRHapticsClip clip)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x6DDBD0", Offset = "0x6DDBD0", VA = "0x6DDBD0")]
		public void Queue(OVRHapticsClip clip)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x6DDCA4", Offset = "0x6DDCA4", VA = "0x6DDCA4")]
		public void Mix(OVRHapticsClip clip)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x6DE2D0", Offset = "0x6DE2D0", VA = "0x6DE2D0")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x20001AE")]
	private class OVRHapticsOutput
	{
		[Token(Token = "0x20001AF")]
		private class ClipPlaybackTracker
		{
			[Token(Token = "0x400080C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177670", Offset = "0x177670")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177670", Offset = "0x177670")]
			private int <ReadCount>k__BackingField;

			[Token(Token = "0x400080D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1776A4", Offset = "0x1776A4")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1776A4", Offset = "0x1776A4")]
			private OVRHapticsClip <Clip>k__BackingField;

			[Token(Token = "0x170001EE")]
			public int ReadCount
			{
				[Token(Token = "0x6000C9F")]
				[Address(RVA = "0x6DE4A0", Offset = "0x6DE4A0", VA = "0x6DE4A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180858", Offset = "0x180858")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000CA0")]
				[Address(RVA = "0x6DE558", Offset = "0x6DE558", VA = "0x6DE558")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180868", Offset = "0x180868")]
				set
				{
				}
			}

			[Token(Token = "0x170001EF")]
			public OVRHapticsClip Clip
			{
				[Token(Token = "0x6000CA1")]
				[Address(RVA = "0x6DE490", Offset = "0x6DE490", VA = "0x6DE490")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180878", Offset = "0x180878")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000CA2")]
				[Address(RVA = "0x6DE760", Offset = "0x6DE760", VA = "0x6DE760")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180888", Offset = "0x180888")]
				set
				{
				}
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x6DE560", Offset = "0x6DE560", VA = "0x6DE560")]
			public ClipPlaybackTracker(OVRHapticsClip clip)
			{
			}
		}

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_lowLatencyMode;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool m_paddingEnabled;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_prevSamplesQueued;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_prevSamplesQueuedTime;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_numPredictionHits;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_numPredictionMisses;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_numUnderruns;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ClipPlaybackTracker> m_pendingClips;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private uint m_controller;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRNativeBuffer m_nativeBuffer;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private OVRHapticsClip m_paddingClip;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x6DC6E8", Offset = "0x6DC6E8", VA = "0x6DC6E8")]
		public OVRHapticsOutput(uint controller)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x6DCA58", Offset = "0x6DCA58", VA = "0x6DCA58")]
		public void Process()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x6DDB00", Offset = "0x6DDB00", VA = "0x6DDB00")]
		public void Preempt(OVRHapticsClip clip)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x6DDC00", Offset = "0x6DDC00", VA = "0x6DDC00")]
		public void Queue(OVRHapticsClip clip)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x6DDCD4", Offset = "0x6DDCD4", VA = "0x6DDCD4")]
		public void Mix(OVRHapticsClip clip)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x6DE2F8", Offset = "0x6DE2F8", VA = "0x6DE2F8")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly OVRHapticsChannel[] Channels;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly OVRHapticsChannel LeftChannel;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly OVRHapticsChannel RightChannel;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly OVRHapticsOutput[] m_outputs;

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x6DC308", Offset = "0x6DC308", VA = "0x6DC308")]
	static OVRHaptics()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x6DC8E4", Offset = "0x6DC8E4", VA = "0x6DC8E4")]
	public static void Process()
	{
	}
}
[Token(Token = "0x20001B0")]
public class OVRHapticsClip
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1776D8", Offset = "0x1776D8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1776D8", Offset = "0x1776D8")]
	private int <Count>k__BackingField;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17770C", Offset = "0x17770C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17770C", Offset = "0x17770C")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177740", Offset = "0x177740")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177740", Offset = "0x177740")]
	private byte[] <Samples>k__BackingField;

	[Token(Token = "0x170001F0")]
	public int Count
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x6DE498", Offset = "0x6DE498", VA = "0x6DE498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180898", Offset = "0x180898")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x6DE840", Offset = "0x6DE840", VA = "0x6DE840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1808A8", Offset = "0x1808A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public int Capacity
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x6DE770", Offset = "0x6DE770", VA = "0x6DE770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1808B8", Offset = "0x1808B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x6DE768", Offset = "0x6DE768", VA = "0x6DE768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1808C8", Offset = "0x1808C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public byte[] Samples
	{
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x6DE4A8", Offset = "0x6DE4A8", VA = "0x6DE4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1808D8", Offset = "0x1808D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x6DE778", Offset = "0x6DE778", VA = "0x6DE778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1808E8", Offset = "0x1808E8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x6DE3E0", Offset = "0x6DE3E0", VA = "0x6DE3E0")]
	public OVRHapticsClip()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x6DE580", Offset = "0x6DE580", VA = "0x6DE580")]
	public OVRHapticsClip(int capacity)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x6DE780", Offset = "0x6DE780", VA = "0x6DE780")]
	public OVRHapticsClip(byte[] samples, int samplesCount)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x6DE848", Offset = "0x6DE848", VA = "0x6DE848")]
	public OVRHapticsClip(OVRHapticsClip a, OVRHapticsClip b)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x6DEAF4", Offset = "0x6DEAF4", VA = "0x6DEAF4")]
	public OVRHapticsClip(AudioClip audioClip, int channel = 0)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x6DE648", Offset = "0x6DE648", VA = "0x6DE648")]
	public void WriteSample(byte sample)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x6DEEDC", Offset = "0x6DEEDC", VA = "0x6DEEDC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x6DEC58", Offset = "0x6DEC58", VA = "0x6DEC58")]
	private void InitializeFromAudioFloatTrack(float[] sourceData, double sourceFrequency, int sourceChannelCount, int sourceChannel)
	{
	}
}
[Token(Token = "0x20001B1")]
public static class OVRInput
{
	[Token(Token = "0x20001B2")]
	[Flags]
	public enum Button
	{
		[Token(Token = "0x400081C")]
		None = 0,
		[Token(Token = "0x400081D")]
		One = 1,
		[Token(Token = "0x400081E")]
		Two = 2,
		[Token(Token = "0x400081F")]
		Three = 4,
		[Token(Token = "0x4000820")]
		Four = 8,
		[Token(Token = "0x4000821")]
		Start = 0x100,
		[Token(Token = "0x4000822")]
		Back = 0x200,
		[Token(Token = "0x4000823")]
		PrimaryShoulder = 0x1000,
		[Token(Token = "0x4000824")]
		PrimaryIndexTrigger = 0x2000,
		[Token(Token = "0x4000825")]
		PrimaryHandTrigger = 0x4000,
		[Token(Token = "0x4000826")]
		PrimaryThumbstick = 0x8000,
		[Token(Token = "0x4000827")]
		PrimaryThumbstickUp = 0x10000,
		[Token(Token = "0x4000828")]
		PrimaryThumbstickDown = 0x20000,
		[Token(Token = "0x4000829")]
		PrimaryThumbstickLeft = 0x40000,
		[Token(Token = "0x400082A")]
		PrimaryThumbstickRight = 0x80000,
		[Token(Token = "0x400082B")]
		PrimaryTouchpad = 0x400,
		[Token(Token = "0x400082C")]
		SecondaryShoulder = 0x100000,
		[Token(Token = "0x400082D")]
		SecondaryIndexTrigger = 0x200000,
		[Token(Token = "0x400082E")]
		SecondaryHandTrigger = 0x400000,
		[Token(Token = "0x400082F")]
		SecondaryThumbstick = 0x800000,
		[Token(Token = "0x4000830")]
		SecondaryThumbstickUp = 0x1000000,
		[Token(Token = "0x4000831")]
		SecondaryThumbstickDown = 0x2000000,
		[Token(Token = "0x4000832")]
		SecondaryThumbstickLeft = 0x4000000,
		[Token(Token = "0x4000833")]
		SecondaryThumbstickRight = 0x8000000,
		[Token(Token = "0x4000834")]
		SecondaryTouchpad = 0x800,
		[Token(Token = "0x4000835")]
		DpadUp = 0x10,
		[Token(Token = "0x4000836")]
		DpadDown = 0x20,
		[Token(Token = "0x4000837")]
		DpadLeft = 0x40,
		[Token(Token = "0x4000838")]
		DpadRight = 0x80,
		[Token(Token = "0x4000839")]
		Up = 0x10000000,
		[Token(Token = "0x400083A")]
		Down = 0x20000000,
		[Token(Token = "0x400083B")]
		Left = 0x40000000,
		[Token(Token = "0x400083C")]
		Right = int.MinValue,
		[Token(Token = "0x400083D")]
		Any = -1
	}

	[Token(Token = "0x20001B3")]
	[Flags]
	public enum RawButton
	{
		[Token(Token = "0x400083F")]
		None = 0,
		[Token(Token = "0x4000840")]
		A = 1,
		[Token(Token = "0x4000841")]
		B = 2,
		[Token(Token = "0x4000842")]
		X = 0x100,
		[Token(Token = "0x4000843")]
		Y = 0x200,
		[Token(Token = "0x4000844")]
		Start = 0x100000,
		[Token(Token = "0x4000845")]
		Back = 0x200000,
		[Token(Token = "0x4000846")]
		LShoulder = 0x800,
		[Token(Token = "0x4000847")]
		LIndexTrigger = 0x10000000,
		[Token(Token = "0x4000848")]
		LHandTrigger = 0x20000000,
		[Token(Token = "0x4000849")]
		LThumbstick = 0x400,
		[Token(Token = "0x400084A")]
		LThumbstickUp = 0x10,
		[Token(Token = "0x400084B")]
		LThumbstickDown = 0x20,
		[Token(Token = "0x400084C")]
		LThumbstickLeft = 0x40,
		[Token(Token = "0x400084D")]
		LThumbstickRight = 0x80,
		[Token(Token = "0x400084E")]
		LTouchpad = 0x40000000,
		[Token(Token = "0x400084F")]
		RShoulder = 8,
		[Token(Token = "0x4000850")]
		RIndexTrigger = 0x4000000,
		[Token(Token = "0x4000851")]
		RHandTrigger = 0x8000000,
		[Token(Token = "0x4000852")]
		RThumbstick = 4,
		[Token(Token = "0x4000853")]
		RThumbstickUp = 0x1000,
		[Token(Token = "0x4000854")]
		RThumbstickDown = 0x2000,
		[Token(Token = "0x4000855")]
		RThumbstickLeft = 0x4000,
		[Token(Token = "0x4000856")]
		RThumbstickRight = 0x8000,
		[Token(Token = "0x4000857")]
		RTouchpad = int.MinValue,
		[Token(Token = "0x4000858")]
		DpadUp = 0x10000,
		[Token(Token = "0x4000859")]
		DpadDown = 0x20000,
		[Token(Token = "0x400085A")]
		DpadLeft = 0x40000,
		[Token(Token = "0x400085B")]
		DpadRight = 0x80000,
		[Token(Token = "0x400085C")]
		Any = -1
	}

	[Token(Token = "0x20001B4")]
	[Flags]
	public enum Touch
	{
		[Token(Token = "0x400085E")]
		None = 0,
		[Token(Token = "0x400085F")]
		One = 1,
		[Token(Token = "0x4000860")]
		Two = 2,
		[Token(Token = "0x4000861")]
		Three = 4,
		[Token(Token = "0x4000862")]
		Four = 8,
		[Token(Token = "0x4000863")]
		PrimaryIndexTrigger = 0x2000,
		[Token(Token = "0x4000864")]
		PrimaryThumbstick = 0x8000,
		[Token(Token = "0x4000865")]
		PrimaryThumbRest = 0x1000,
		[Token(Token = "0x4000866")]
		PrimaryTouchpad = 0x400,
		[Token(Token = "0x4000867")]
		SecondaryIndexTrigger = 0x200000,
		[Token(Token = "0x4000868")]
		SecondaryThumbstick = 0x800000,
		[Token(Token = "0x4000869")]
		SecondaryThumbRest = 0x100000,
		[Token(Token = "0x400086A")]
		SecondaryTouchpad = 0x800,
		[Token(Token = "0x400086B")]
		Any = -1
	}

	[Token(Token = "0x20001B5")]
	[Flags]
	public enum RawTouch
	{
		[Token(Token = "0x400086D")]
		None = 0,
		[Token(Token = "0x400086E")]
		A = 1,
		[Token(Token = "0x400086F")]
		B = 2,
		[Token(Token = "0x4000870")]
		X = 0x100,
		[Token(Token = "0x4000871")]
		Y = 0x200,
		[Token(Token = "0x4000872")]
		LIndexTrigger = 0x1000,
		[Token(Token = "0x4000873")]
		LThumbstick = 0x400,
		[Token(Token = "0x4000874")]
		LThumbRest = 0x800,
		[Token(Token = "0x4000875")]
		LTouchpad = 0x40000000,
		[Token(Token = "0x4000876")]
		RIndexTrigger = 0x10,
		[Token(Token = "0x4000877")]
		RThumbstick = 4,
		[Token(Token = "0x4000878")]
		RThumbRest = 8,
		[Token(Token = "0x4000879")]
		RTouchpad = int.MinValue,
		[Token(Token = "0x400087A")]
		Any = -1
	}

	[Token(Token = "0x20001B6")]
	[Flags]
	public enum NearTouch
	{
		[Token(Token = "0x400087C")]
		None = 0,
		[Token(Token = "0x400087D")]
		PrimaryIndexTrigger = 1,
		[Token(Token = "0x400087E")]
		PrimaryThumbButtons = 2,
		[Token(Token = "0x400087F")]
		SecondaryIndexTrigger = 4,
		[Token(Token = "0x4000880")]
		SecondaryThumbButtons = 8,
		[Token(Token = "0x4000881")]
		Any = -1
	}

	[Token(Token = "0x20001B7")]
	[Flags]
	public enum RawNearTouch
	{
		[Token(Token = "0x4000883")]
		None = 0,
		[Token(Token = "0x4000884")]
		LIndexTrigger = 1,
		[Token(Token = "0x4000885")]
		LThumbButtons = 2,
		[Token(Token = "0x4000886")]
		RIndexTrigger = 4,
		[Token(Token = "0x4000887")]
		RThumbButtons = 8,
		[Token(Token = "0x4000888")]
		Any = -1
	}

	[Token(Token = "0x20001B8")]
	[Flags]
	public enum Axis1D
	{
		[Token(Token = "0x400088A")]
		None = 0,
		[Token(Token = "0x400088B")]
		PrimaryIndexTrigger = 1,
		[Token(Token = "0x400088C")]
		PrimaryHandTrigger = 4,
		[Token(Token = "0x400088D")]
		SecondaryIndexTrigger = 2,
		[Token(Token = "0x400088E")]
		SecondaryHandTrigger = 8,
		[Token(Token = "0x400088F")]
		Any = -1
	}

	[Token(Token = "0x20001B9")]
	[Flags]
	public enum RawAxis1D
	{
		[Token(Token = "0x4000891")]
		None = 0,
		[Token(Token = "0x4000892")]
		LIndexTrigger = 1,
		[Token(Token = "0x4000893")]
		LHandTrigger = 4,
		[Token(Token = "0x4000894")]
		RIndexTrigger = 2,
		[Token(Token = "0x4000895")]
		RHandTrigger = 8,
		[Token(Token = "0x4000896")]
		Any = -1
	}

	[Token(Token = "0x20001BA")]
	[Flags]
	public enum Axis2D
	{
		[Token(Token = "0x4000898")]
		None = 0,
		[Token(Token = "0x4000899")]
		PrimaryThumbstick = 1,
		[Token(Token = "0x400089A")]
		PrimaryTouchpad = 4,
		[Token(Token = "0x400089B")]
		SecondaryThumbstick = 2,
		[Token(Token = "0x400089C")]
		SecondaryTouchpad = 8,
		[Token(Token = "0x400089D")]
		Any = -1
	}

	[Token(Token = "0x20001BB")]
	[Flags]
	public enum RawAxis2D
	{
		[Token(Token = "0x400089F")]
		None = 0,
		[Token(Token = "0x40008A0")]
		LThumbstick = 1,
		[Token(Token = "0x40008A1")]
		LTouchpad = 4,
		[Token(Token = "0x40008A2")]
		RThumbstick = 2,
		[Token(Token = "0x40008A3")]
		RTouchpad = 8,
		[Token(Token = "0x40008A4")]
		Any = -1
	}

	[Token(Token = "0x20001BC")]
	[Flags]
	public enum Controller
	{
		[Token(Token = "0x40008A6")]
		None = 0,
		[Token(Token = "0x40008A7")]
		LTouch = 1,
		[Token(Token = "0x40008A8")]
		RTouch = 2,
		[Token(Token = "0x40008A9")]
		Touch = 3,
		[Token(Token = "0x40008AA")]
		Remote = 4,
		[Token(Token = "0x40008AB")]
		Gamepad = 0x10,
		[Token(Token = "0x40008AC")]
		Touchpad = 0x8000000,
		[Token(Token = "0x40008AD")]
		LTrackedRemote = 0x1000000,
		[Token(Token = "0x40008AE")]
		RTrackedRemote = 0x2000000,
		[Token(Token = "0x40008AF")]
		Active = int.MinValue,
		[Token(Token = "0x40008B0")]
		All = -1
	}

	[Token(Token = "0x20001BD")]
	public enum Handedness
	{
		[Token(Token = "0x40008B2")]
		Unsupported,
		[Token(Token = "0x40008B3")]
		LeftHanded,
		[Token(Token = "0x40008B4")]
		RightHanded
	}

	[Token(Token = "0x20001BE")]
	private abstract class OVRControllerBase
	{
		[Token(Token = "0x20001BF")]
		public class VirtualButtonMap
		{
			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RawButton None;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RawButton One;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RawButton Two;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RawButton Three;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RawButton Four;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public RawButton Start;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RawButton Back;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public RawButton PrimaryShoulder;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RawButton PrimaryIndexTrigger;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public RawButton PrimaryHandTrigger;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RawButton PrimaryThumbstick;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public RawButton PrimaryThumbstickUp;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RawButton PrimaryThumbstickDown;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public RawButton PrimaryThumbstickLeft;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RawButton PrimaryThumbstickRight;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public RawButton PrimaryTouchpad;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RawButton SecondaryShoulder;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public RawButton SecondaryIndexTrigger;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public RawButton SecondaryHandTrigger;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public RawButton SecondaryThumbstick;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public RawButton SecondaryThumbstickUp;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public RawButton SecondaryThumbstickDown;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public RawButton SecondaryThumbstickLeft;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public RawButton SecondaryThumbstickRight;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public RawButton SecondaryTouchpad;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public RawButton DpadUp;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public RawButton DpadDown;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public RawButton DpadLeft;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public RawButton DpadRight;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public RawButton Up;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public RawButton Down;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public RawButton Left;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public RawButton Right;

			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x6E2EB8", Offset = "0x6E2EB8", VA = "0x6E2EB8")]
			public VirtualButtonMap()
			{
			}

			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x6E34B0", Offset = "0x6E34B0", VA = "0x6E34B0")]
			public RawButton ToRawMask(Button virtualMask)
			{
				return default(RawButton);
			}
		}

		[Token(Token = "0x20001C0")]
		public class VirtualTouchMap
		{
			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RawTouch None;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RawTouch One;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RawTouch Two;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RawTouch Three;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RawTouch Four;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public RawTouch PrimaryIndexTrigger;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RawTouch PrimaryThumbstick;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public RawTouch PrimaryThumbRest;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RawTouch PrimaryTouchpad;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public RawTouch SecondaryIndexTrigger;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RawTouch SecondaryThumbstick;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public RawTouch SecondaryThumbRest;

			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RawTouch SecondaryTouchpad;

			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x6E2EC0", Offset = "0x6E2EC0", VA = "0x6E2EC0")]
			public VirtualTouchMap()
			{
			}

			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x6E3640", Offset = "0x6E3640", VA = "0x6E3640")]
			public RawTouch ToRawMask(Touch virtualMask)
			{
				return default(RawTouch);
			}
		}

		[Token(Token = "0x20001C1")]
		public class VirtualNearTouchMap
		{
			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RawNearTouch None;

			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RawNearTouch PrimaryIndexTrigger;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RawNearTouch PrimaryThumbButtons;

			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RawNearTouch SecondaryIndexTrigger;

			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RawNearTouch SecondaryThumbButtons;

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x6E2EC8", Offset = "0x6E2EC8", VA = "0x6E2EC8")]
			public VirtualNearTouchMap()
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x6E36E0", Offset = "0x6E36E0", VA = "0x6E36E0")]
			public RawNearTouch ToRawMask(NearTouch virtualMask)
			{
				return default(RawNearTouch);
			}
		}

		[Token(Token = "0x20001C2")]
		public class VirtualAxis1DMap
		{
			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RawAxis1D None;

			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RawAxis1D PrimaryIndexTrigger;

			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RawAxis1D PrimaryHandTrigger;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RawAxis1D SecondaryIndexTrigger;

			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RawAxis1D SecondaryHandTrigger;

			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x6E2ED0", Offset = "0x6E2ED0", VA = "0x6E2ED0")]
			public VirtualAxis1DMap()
			{
			}

			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x6E3720", Offset = "0x6E3720", VA = "0x6E3720")]
			public RawAxis1D ToRawMask(Axis1D virtualMask)
			{
				return default(RawAxis1D);
			}
		}

		[Token(Token = "0x20001C3")]
		public class VirtualAxis2DMap
		{
			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RawAxis2D None;

			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RawAxis2D PrimaryThumbstick;

			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RawAxis2D PrimaryTouchpad;

			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RawAxis2D SecondaryThumbstick;

			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RawAxis2D SecondaryTouchpad;

			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x6E2ED8", Offset = "0x6E2ED8", VA = "0x6E2ED8")]
			public VirtualAxis2DMap()
			{
			}

			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x6E3760", Offset = "0x6E3760", VA = "0x6E3760")]
			public RawAxis2D ToRawMask(Axis2D virtualMask)
			{
				return default(RawAxis2D);
			}
		}

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Controller controllerType;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VirtualButtonMap buttonMap;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VirtualTouchMap touchMap;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VirtualNearTouchMap nearTouchMap;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualAxis1DMap axis1DMap;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VirtualAxis2DMap axis2DMap;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRPlugin.ControllerState4 previousState;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVRPlugin.ControllerState4 currentState;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool shouldApplyDeadzone;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x6E2D28", Offset = "0x6E2D28", VA = "0x6E2D28")]
		public OVRControllerBase()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x6E2EE0", Offset = "0x6E2EE0", VA = "0x6E2EE0", Slot = "4")]
		public virtual Controller Update()
		{
			return default(Controller);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x6E3380", Offset = "0x6E3380", VA = "0x6E3380", Slot = "5")]
		public virtual void SetControllerVibration(float frequency, float amplitude)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x6E3418", Offset = "0x6E3418", VA = "0x6E3418", Slot = "6")]
		public virtual void RecenterController()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x6E3498", Offset = "0x6E3498", VA = "0x6E3498", Slot = "7")]
		public virtual bool WasRecentered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x6E34A0", Offset = "0x6E34A0", VA = "0x6E34A0", Slot = "8")]
		public virtual byte GetRecenterCount()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x6E34A8", Offset = "0x6E34A8", VA = "0x6E34A8", Slot = "9")]
		public virtual byte GetBatteryPercentRemaining()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CF3")]
		public abstract void ConfigureButtonMap();

		[Token(Token = "0x6000CF4")]
		public abstract void ConfigureTouchMap();

		[Token(Token = "0x6000CF5")]
		public abstract void ConfigureNearTouchMap();

		[Token(Token = "0x6000CF6")]
		public abstract void ConfigureAxis1DMap();

		[Token(Token = "0x6000CF7")]
		public abstract void ConfigureAxis2DMap();

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x6E0194", Offset = "0x6E0194", VA = "0x6E0194")]
		public RawButton ResolveToRawMask(Button virtualMask)
		{
			return default(RawButton);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x6E0854", Offset = "0x6E0854", VA = "0x6E0854")]
		public RawTouch ResolveToRawMask(Touch virtualMask)
		{
			return default(RawTouch);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x6E1144", Offset = "0x6E1144", VA = "0x6E1144")]
		public RawNearTouch ResolveToRawMask(NearTouch virtualMask)
		{
			return default(RawNearTouch);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x6E1F34", Offset = "0x6E1F34", VA = "0x6E1F34")]
		public RawAxis1D ResolveToRawMask(Axis1D virtualMask)
		{
			return default(RawAxis1D);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x6E2650", Offset = "0x6E2650", VA = "0x6E2650")]
		public RawAxis2D ResolveToRawMask(Axis2D virtualMask)
		{
			return default(RawAxis2D);
		}
	}

	[Token(Token = "0x20001C4")]
	private class OVRControllerTouch : OVRControllerBase
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x6DF328", Offset = "0x6DF328", VA = "0x6DF328")]
		public OVRControllerTouch()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x6E7EBC", Offset = "0x6E7EBC", VA = "0x6E7EBC", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x6E8258", Offset = "0x6E8258", VA = "0x6E8258", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x6E83D4", Offset = "0x6E83D4", VA = "0x6E83D4", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x6E8470", Offset = "0x6E8470", VA = "0x6E8470", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x6E850C", Offset = "0x6E850C", VA = "0x6E850C", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x6E85A8", Offset = "0x6E85A8", VA = "0x6E85A8", Slot = "7")]
		public override bool WasRecentered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x6E85D0", Offset = "0x6E85D0", VA = "0x6E85D0", Slot = "8")]
		public override byte GetRecenterCount()
		{
			return default(byte);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x6E85E4", Offset = "0x6E85E4", VA = "0x6E85E4", Slot = "9")]
		public override byte GetBatteryPercentRemaining()
		{
			return default(byte);
		}
	}

	[Token(Token = "0x20001C5")]
	private class OVRControllerLTouch : OVRControllerBase
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x6DF344", Offset = "0x6DF344", VA = "0x6DF344")]
		public OVRControllerLTouch()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x6E57D4", Offset = "0x6E57D4", VA = "0x6E57D4", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x6E5B5C", Offset = "0x6E5B5C", VA = "0x6E5B5C", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x6E5CCC", Offset = "0x6E5CCC", VA = "0x6E5CCC", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x6E5D64", Offset = "0x6E5D64", VA = "0x6E5D64", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x6E5DFC", Offset = "0x6E5DFC", VA = "0x6E5DFC", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x6E5E94", Offset = "0x6E5E94", VA = "0x6E5E94", Slot = "7")]
		public override bool WasRecentered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x6E5EAC", Offset = "0x6E5EAC", VA = "0x6E5EAC", Slot = "8")]
		public override byte GetRecenterCount()
		{
			return default(byte);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x6E5EB4", Offset = "0x6E5EB4", VA = "0x6E5EB4", Slot = "9")]
		public override byte GetBatteryPercentRemaining()
		{
			return default(byte);
		}
	}

	[Token(Token = "0x20001C6")]
	private class OVRControllerRTouch : OVRControllerBase
	{
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x6DF360", Offset = "0x6DF360", VA = "0x6DF360")]
		public OVRControllerRTouch()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x6E67E8", Offset = "0x6E67E8", VA = "0x6E67E8", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x6E6B70", Offset = "0x6E6B70", VA = "0x6E6B70", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x6E6CE0", Offset = "0x6E6CE0", VA = "0x6E6CE0", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x6E6D78", Offset = "0x6E6D78", VA = "0x6E6D78", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x6E6E10", Offset = "0x6E6E10", VA = "0x6E6E10", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x6E6EA8", Offset = "0x6E6EA8", VA = "0x6E6EA8", Slot = "7")]
		public override bool WasRecentered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x6E6EC0", Offset = "0x6E6EC0", VA = "0x6E6EC0", Slot = "8")]
		public override byte GetRecenterCount()
		{
			return default(byte);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x6E6EC8", Offset = "0x6E6EC8", VA = "0x6E6EC8", Slot = "9")]
		public override byte GetBatteryPercentRemaining()
		{
			return default(byte);
		}
	}

	[Token(Token = "0x20001C7")]
	private class OVRControllerRemote : OVRControllerBase
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x6E77FC", Offset = "0x6E77FC", VA = "0x6E77FC")]
		public OVRControllerRemote()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x6E7818", Offset = "0x6E7818", VA = "0x6E7818", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x6E7B9C", Offset = "0x6E7B9C", VA = "0x6E7B9C", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x6E7D00", Offset = "0x6E7D00", VA = "0x6E7D00", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x6E7D94", Offset = "0x6E7D94", VA = "0x6E7D94", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x6E7E28", Offset = "0x6E7E28", VA = "0x6E7E28", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	private class OVRControllerGamepadPC : OVRControllerBase
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x6E50DC", Offset = "0x6E50DC", VA = "0x6E50DC")]
		public OVRControllerGamepadPC()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x6E50F8", Offset = "0x6E50F8", VA = "0x6E50F8", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x6E54A4", Offset = "0x6E54A4", VA = "0x6E54A4", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x6E5608", Offset = "0x6E5608", VA = "0x6E5608", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x6E569C", Offset = "0x6E569C", VA = "0x6E569C", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x6E5738", Offset = "0x6E5738", VA = "0x6E5738", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}
	}

	[Token(Token = "0x20001C9")]
	private class OVRControllerGamepadMac : OVRControllerBase
	{
		[Token(Token = "0x20001CA")]
		private enum AxisGPC
		{
			[Token(Token = "0x40008FE")]
			None = -1,
			[Token(Token = "0x40008FF")]
			LeftXAxis,
			[Token(Token = "0x4000900")]
			LeftYAxis,
			[Token(Token = "0x4000901")]
			RightXAxis,
			[Token(Token = "0x4000902")]
			RightYAxis,
			[Token(Token = "0x4000903")]
			LeftTrigger,
			[Token(Token = "0x4000904")]
			RightTrigger,
			[Token(Token = "0x4000905")]
			DPad_X_Axis,
			[Token(Token = "0x4000906")]
			DPad_Y_Axis,
			[Token(Token = "0x4000907")]
			Max
		}

		[Token(Token = "0x20001CB")]
		public enum ButtonGPC
		{
			[Token(Token = "0x4000909")]
			None = -1,
			[Token(Token = "0x400090A")]
			A,
			[Token(Token = "0x400090B")]
			B,
			[Token(Token = "0x400090C")]
			X,
			[Token(Token = "0x400090D")]
			Y,
			[Token(Token = "0x400090E")]
			Up,
			[Token(Token = "0x400090F")]
			Down,
			[Token(Token = "0x4000910")]
			Left,
			[Token(Token = "0x4000911")]
			Right,
			[Token(Token = "0x4000912")]
			Start,
			[Token(Token = "0x4000913")]
			Back,
			[Token(Token = "0x4000914")]
			LStick,
			[Token(Token = "0x4000915")]
			RStick,
			[Token(Token = "0x4000916")]
			LeftShoulder,
			[Token(Token = "0x4000917")]
			RightShoulder,
			[Token(Token = "0x4000918")]
			Max
		}

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool initialized;

		[Token(Token = "0x40008FC")]
		private const string DllName = "OVRGamepad";

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x6E3E7C", Offset = "0x6E3E7C", VA = "0x6E3E7C")]
		public OVRControllerGamepadMac()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x6E3F84", Offset = "0x6E3F84", VA = "0x6E3F84", Slot = "1")]
		~OVRControllerGamepadMac()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x6E40D8", Offset = "0x6E40D8", VA = "0x6E40D8", Slot = "4")]
		public override Controller Update()
		{
			return default(Controller);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x6E48E0", Offset = "0x6E48E0", VA = "0x6E48E0", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x6E4C8C", Offset = "0x6E4C8C", VA = "0x6E4C8C", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x6E4DF0", Offset = "0x6E4DF0", VA = "0x6E4DF0", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x6E4E84", Offset = "0x6E4E84", VA = "0x6E4E84", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x6E4F20", Offset = "0x6E4F20", VA = "0x6E4F20", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x6E4FBC", Offset = "0x6E4FBC", VA = "0x6E4FBC", Slot = "5")]
		public override void SetControllerVibration(float frequency, float amplitude)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x6E3EA0", Offset = "0x6E3EA0", VA = "0x6E3EA0")]
		private static extern bool OVR_GamepadController_Initialize();

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x6E3FF8", Offset = "0x6E3FF8", VA = "0x6E3FF8")]
		private static extern bool OVR_GamepadController_Destroy();

		[PreserveSig]
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x6E4638", Offset = "0x6E4638", VA = "0x6E4638")]
		private static extern bool OVR_GamepadController_Update();

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x6E4800", Offset = "0x6E4800", VA = "0x6E4800")]
		private static extern float OVR_GamepadController_GetAxis(int axis);

		[PreserveSig]
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x6E4718", Offset = "0x6E4718", VA = "0x6E4718")]
		private static extern bool OVR_GamepadController_GetButton(int button);

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x6E4FE0", Offset = "0x6E4FE0", VA = "0x6E4FE0")]
		private static extern bool OVR_GamepadController_SetVibration(int node, float strength, float frequency);
	}

	[Token(Token = "0x20001CC")]
	private class OVRControllerGamepadAndroid : OVRControllerBase
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x6DF27C", Offset = "0x6DF27C", VA = "0x6DF27C")]
		public OVRControllerGamepadAndroid()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x6E37A0", Offset = "0x6E37A0", VA = "0x6E37A0", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x6E3B4C", Offset = "0x6E3B4C", VA = "0x6E3B4C", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x6E3CB0", Offset = "0x6E3CB0", VA = "0x6E3CB0", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x6E3D44", Offset = "0x6E3D44", VA = "0x6E3D44", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x6E3DE0", Offset = "0x6E3DE0", VA = "0x6E3DE0", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	private class OVRControllerTouchpad : OVRControllerBase
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private OVRPlugin.Vector2f moveAmount;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float maxTapMagnitude;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float minMoveMagnitude;

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x6DF298", Offset = "0x6DF298", VA = "0x6DF298")]
		public OVRControllerTouchpad()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x6E85FC", Offset = "0x6E85FC", VA = "0x6E85FC", Slot = "4")]
		public override Controller Update()
		{
			return default(Controller);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x6E8804", Offset = "0x6E8804", VA = "0x6E8804", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x6E8B8C", Offset = "0x6E8B8C", VA = "0x6E8B8C", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x6E8CF4", Offset = "0x6E8CF4", VA = "0x6E8CF4", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x6E8D88", Offset = "0x6E8D88", VA = "0x6E8D88", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x6E8E1C", Offset = "0x6E8E1C", VA = "0x6E8E1C", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	private class OVRControllerLTrackedRemote : OVRControllerBase
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool emitSwipe;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private OVRPlugin.Vector2f moveAmount;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float minMoveMagnitude;

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x6DF2D0", Offset = "0x6DF2D0", VA = "0x6DF2D0")]
		public OVRControllerLTrackedRemote()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x6E5EBC", Offset = "0x6E5EBC", VA = "0x6E5EBC", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x6E624C", Offset = "0x6E624C", VA = "0x6E624C", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x6E63B8", Offset = "0x6E63B8", VA = "0x6E63B8", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x6E644C", Offset = "0x6E644C", VA = "0x6E644C", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x6E64E4", Offset = "0x6E64E4", VA = "0x6E64E4", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x6E6578", Offset = "0x6E6578", VA = "0x6E6578", Slot = "4")]
		public override Controller Update()
		{
			return default(Controller);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x6E67C0", Offset = "0x6E67C0", VA = "0x6E67C0", Slot = "7")]
		public override bool WasRecentered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x6E67D8", Offset = "0x6E67D8", VA = "0x6E67D8", Slot = "8")]
		public override byte GetRecenterCount()
		{
			return default(byte);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x6E67E0", Offset = "0x6E67E0", VA = "0x6E67E0", Slot = "9")]
		public override byte GetBatteryPercentRemaining()
		{
			return default(byte);
		}
	}

	[Token(Token = "0x20001CF")]
	private class OVRControllerRTrackedRemote : OVRControllerBase
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool emitSwipe;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private OVRPlugin.Vector2f moveAmount;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float minMoveMagnitude;

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x6DF2FC", Offset = "0x6DF2FC", VA = "0x6DF2FC")]
		public OVRControllerRTrackedRemote()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x6E6ED0", Offset = "0x6E6ED0", VA = "0x6E6ED0", Slot = "10")]
		public override void ConfigureButtonMap()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x6E7260", Offset = "0x6E7260", VA = "0x6E7260", Slot = "11")]
		public override void ConfigureTouchMap()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x6E73CC", Offset = "0x6E73CC", VA = "0x6E73CC", Slot = "12")]
		public override void ConfigureNearTouchMap()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x6E7460", Offset = "0x6E7460", VA = "0x6E7460", Slot = "13")]
		public override void ConfigureAxis1DMap()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x6E74F8", Offset = "0x6E74F8", VA = "0x6E74F8", Slot = "14")]
		public override void ConfigureAxis2DMap()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x6E758C", Offset = "0x6E758C", VA = "0x6E758C", Slot = "4")]
		public override Controller Update()
		{
			return default(Controller);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x6E77D4", Offset = "0x6E77D4", VA = "0x6E77D4", Slot = "7")]
		public override bool WasRecentered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x6E77EC", Offset = "0x6E77EC", VA = "0x6E77EC", Slot = "8")]
		public override byte GetRecenterCount()
		{
			return default(byte);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x6E77F4", Offset = "0x6E77F4", VA = "0x6E77F4", Slot = "9")]
		public override byte GetBatteryPercentRemaining()
		{
			return default(byte);
		}
	}

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float AXIS_AS_BUTTON_THRESHOLD;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float AXIS_DEADZONE_THRESHOLD;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<OVRControllerBase> controllers;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Controller activeControllerType;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Controller connectedControllerTypes;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static OVRPlugin.Step stepType;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int fixedUpdateCount;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static bool _pluginSupportsActiveController;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private static bool _pluginSupportsActiveControllerCached;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Version _pluginSupportsActiveControllerMinVersion;

	[Token(Token = "0x170001F3")]
	private static bool pluginSupportsActiveController
	{
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x6DF37C", Offset = "0x6DF37C", VA = "0x6DF37C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x6DEEE8", Offset = "0x6DEEE8", VA = "0x6DEEE8")]
	static OVRInput()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x6DF488", Offset = "0x6DF488", VA = "0x6DF488")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x6DFB94", Offset = "0x6DFB94", VA = "0x6DFB94")]
	public static void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x6DFD14", Offset = "0x6DFD14", VA = "0x6DFD14")]
	public static bool GetControllerOrientationTracked(Controller controllerType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x6DFDE4", Offset = "0x6DFDE4", VA = "0x6DFDE4")]
	public static bool GetControllerPositionTracked(Controller controllerType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x6D63E8", Offset = "0x6D63E8", VA = "0x6D63E8")]
	public static Vector3 GetLocalControllerPosition(Controller controllerType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x6D6648", Offset = "0x6D6648", VA = "0x6D6648")]
	public static Vector3 GetLocalControllerVelocity(Controller controllerType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x6D6824", Offset = "0x6D6824", VA = "0x6D6824")]
	public static Vector3 GetLocalControllerAcceleration(Controller controllerType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x6D5DD8", Offset = "0x6D5DD8", VA = "0x6D5DD8")]
	public static Quaternion GetLocalControllerRotation(Controller controllerType)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x6D6030", Offset = "0x6D6030", VA = "0x6D6030")]
	public static Vector3 GetLocalControllerAngularVelocity(Controller controllerType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x6D620C", Offset = "0x6D620C", VA = "0x6D620C")]
	public static Vector3 GetLocalControllerAngularAcceleration(Controller controllerType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x6DFEB4", Offset = "0x6DFEB4", VA = "0x6DFEB4")]
	public static Handedness GetDominantHand()
	{
		return default(Handedness);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x6D6F60", Offset = "0x6D6F60", VA = "0x6D6F60")]
	public static bool Get(Button virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x6D80A8", Offset = "0x6D80A8", VA = "0x6D80A8")]
	public static bool Get(RawButton rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x6DFF30", Offset = "0x6DFF30", VA = "0x6DFF30")]
	private static bool GetResolvedButton(Button virtualMask, RawButton rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x6D706C", Offset = "0x6D706C", VA = "0x6D706C")]
	public static bool GetDown(Button virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x6D81B4", Offset = "0x6D81B4", VA = "0x6D81B4")]
	public static bool GetDown(RawButton rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x6E01C4", Offset = "0x6E01C4", VA = "0x6E01C4")]
	private static bool GetResolvedButtonDown(Button virtualMask, RawButton rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x6D7178", Offset = "0x6D7178", VA = "0x6D7178")]
	public static bool GetUp(Button virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x6D82C0", Offset = "0x6D82C0", VA = "0x6D82C0")]
	public static bool GetUp(RawButton rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x6E03FC", Offset = "0x6E03FC", VA = "0x6E03FC")]
	private static bool GetResolvedButtonUp(Button virtualMask, RawButton rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x6D7284", Offset = "0x6D7284", VA = "0x6D7284")]
	public static bool Get(Touch virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x6DFB08", Offset = "0x6DFB08", VA = "0x6DFB08")]
	public static bool Get(RawTouch rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x6E0634", Offset = "0x6E0634", VA = "0x6E0634")]
	private static bool GetResolvedTouch(Touch virtualMask, RawTouch rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x6D7390", Offset = "0x6D7390", VA = "0x6D7390")]
	public static bool GetDown(Touch virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x6E0ABC", Offset = "0x6E0ABC", VA = "0x6E0ABC")]
	public static bool GetDown(RawTouch rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x6E0884", Offset = "0x6E0884", VA = "0x6E0884")]
	private static bool GetResolvedTouchDown(Touch virtualMask, RawTouch rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x6D749C", Offset = "0x6D749C", VA = "0x6D749C")]
	public static bool GetUp(Touch virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x6E0D80", Offset = "0x6E0D80", VA = "0x6E0D80")]
	public static bool GetUp(RawTouch rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x6E0B48", Offset = "0x6E0B48", VA = "0x6E0B48")]
	private static bool GetResolvedTouchUp(Touch virtualMask, RawTouch rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x6E0E0C", Offset = "0x6E0E0C", VA = "0x6E0E0C")]
	public static bool Get(NearTouch virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x6E10B8", Offset = "0x6E10B8", VA = "0x6E10B8")]
	public static bool Get(RawNearTouch rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x6E0E98", Offset = "0x6E0E98", VA = "0x6E0E98")]
	private static bool GetResolvedNearTouch(NearTouch virtualMask, RawNearTouch rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x6E1174", Offset = "0x6E1174", VA = "0x6E1174")]
	public static bool GetDown(NearTouch virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x6E1438", Offset = "0x6E1438", VA = "0x6E1438")]
	public static bool GetDown(RawNearTouch rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x6E1200", Offset = "0x6E1200", VA = "0x6E1200")]
	private static bool GetResolvedNearTouchDown(NearTouch virtualMask, RawNearTouch rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x6E14C4", Offset = "0x6E14C4", VA = "0x6E14C4")]
	public static bool GetUp(NearTouch virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x6E1788", Offset = "0x6E1788", VA = "0x6E1788")]
	public static bool GetUp(RawNearTouch rawMask, Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x6E1550", Offset = "0x6E1550", VA = "0x6E1550")]
	private static bool GetResolvedNearTouchUp(NearTouch virtualMask, RawNearTouch rawMask, Controller controllerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x6D6A9C", Offset = "0x6D6A9C", VA = "0x6D6A9C")]
	public static float Get(Axis1D virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(float);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x6E1EA8", Offset = "0x6E1EA8", VA = "0x6E1EA8")]
	public static float Get(RawAxis1D rawMask, Controller controllerMask = Controller.Active)
	{
		return default(float);
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x6E1814", Offset = "0x6E1814", VA = "0x6E1814")]
	private static float GetResolvedAxis1D(Axis1D virtualMask, RawAxis1D rawMask, Controller controllerMask)
	{
		return default(float);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x6D6A00", Offset = "0x6D6A00", VA = "0x6D6A00")]
	public static Vector2 Get(Axis2D virtualMask, Controller controllerMask = Controller.Active)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x6E25B4", Offset = "0x6E25B4", VA = "0x6E25B4")]
	public static Vector2 Get(RawAxis2D rawMask, Controller controllerMask = Controller.Active)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x6E201C", Offset = "0x6E201C", VA = "0x6E201C")]
	private static Vector2 GetResolvedAxis2D(Axis2D virtualMask, RawAxis2D rawMask, Controller controllerMask)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x6D5B78", Offset = "0x6D5B78", VA = "0x6D5B78")]
	public static Controller GetConnectedControllers()
	{
		return default(Controller);
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x6E286C", Offset = "0x6E286C", VA = "0x6E286C")]
	public static bool IsControllerConnected(Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x6D56D4", Offset = "0x6D56D4", VA = "0x6D56D4")]
	public static Controller GetActiveController()
	{
		return default(Controller);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x6E290C", Offset = "0x6E290C", VA = "0x6E290C")]
	public static void SetControllerVibration(float frequency, float amplitude, Controller controllerMask = Controller.Active)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x6E2B28", Offset = "0x6E2B28", VA = "0x6E2B28")]
	public static void RecenterController(Controller controllerMask = Controller.Active)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x6D6CD0", Offset = "0x6D6CD0", VA = "0x6D6CD0")]
	public static bool GetControllerWasRecentered(Controller controllerMask = Controller.Active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x6D5760", Offset = "0x6D5760", VA = "0x6D5760")]
	public static byte GetControllerRecenterCount(Controller controllerMask = Controller.Active)
	{
		return default(byte);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x6D596C", Offset = "0x6D596C", VA = "0x6D596C")]
	public static byte GetControllerBatteryPercentRemaining(Controller controllerMask = Controller.Active)
	{
		return default(byte);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x6E2804", Offset = "0x6E2804", VA = "0x6E2804")]
	private static Vector2 CalculateAbsMax(Vector2 a, Vector2 b)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x6E1FD8", Offset = "0x6E1FD8", VA = "0x6E1FD8")]
	private static float CalculateAbsMax(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x6E2680", Offset = "0x6E2680", VA = "0x6E2680")]
	private static Vector2 CalculateDeadzone(Vector2 a, float deadzone)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x6E1F64", Offset = "0x6E1F64", VA = "0x6E1F64")]
	private static float CalculateDeadzone(float a, float deadzone)
	{
		return default(float);
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x6E0150", Offset = "0x6E0150", VA = "0x6E0150")]
	private static bool ShouldResolveController(Controller controllerType, Controller controllerMask)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001D0")]
public class OVRLayerAttribute : PropertyAttribute
{
	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x6E8EB0", Offset = "0x6E8EB0", VA = "0x6E8EB0")]
	public OVRLayerAttribute()
	{
	}
}
[Token(Token = "0x20001D1")]
public class OVRManager : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000957")]
		EyeLevel,
		[Token(Token = "0x4000958")]
		FloorLevel
	}

	[Token(Token = "0x20001D3")]
	public enum EyeTextureFormat
	{
		[Token(Token = "0x400095A")]
		Default = 0,
		[Token(Token = "0x400095B")]
		R16G16B16A16_FP = 2,
		[Token(Token = "0x400095C")]
		R11G11B10_FP = 3
	}

	[Token(Token = "0x20001D4")]
	public enum TiledMultiResLevel
	{
		[Token(Token = "0x400095E")]
		Off,
		[Token(Token = "0x400095F")]
		LMSLow,
		[Token(Token = "0x4000960")]
		LMSMedium,
		[Token(Token = "0x4000961")]
		LMSHigh
	}

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177774", Offset = "0x177774")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177774", Offset = "0x177774")]
	private static OVRManager <instance>k__BackingField;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1777A8", Offset = "0x1777A8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1777A8", Offset = "0x1777A8")]
	private static OVRDisplay <display>k__BackingField;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1777DC", Offset = "0x1777DC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1777DC", Offset = "0x1777DC")]
	private static OVRTracker <tracker>k__BackingField;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177810", Offset = "0x177810")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177810", Offset = "0x177810")]
	private static OVRBoundary <boundary>k__BackingField;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static OVRProfile _profile;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IEnumerable<Camera> disabledCameras;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float prevTimeScale;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool _isHmdPresentCached;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private static bool _isHmdPresent;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private static bool _wasHmdPresent;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private static bool _hasVrFocusCached;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static bool _hasVrFocus;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private static bool _hadVrFocus;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private static bool _hadInputFocus;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x177AE8", Offset = "0x177AE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177AE8", Offset = "0x177AE8")]
	public bool queueAhead;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177B54", Offset = "0x177B54")]
	public bool useRecommendedMSAALevel;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177B88", Offset = "0x177B88")]
	private bool _monoscopic;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177BD0", Offset = "0x177BD0")]
	public bool enableAdaptiveResolution;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x177C30", Offset = "0x177C30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177C30", Offset = "0x177C30")]
	public float minRenderScale;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x177C80", Offset = "0x177C80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177C80", Offset = "0x177C80")]
	public float maxRenderScale;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x177CD0", Offset = "0x177CD0")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177CD0", Offset = "0x177CD0")]
	private TrackingOrigin _trackingOriginType;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177D68", Offset = "0x177D68")]
	public bool usePositionTracking;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[HideInInspector]
	public bool useRotationTracking;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177DAC", Offset = "0x177DAC")]
	public bool useIPDInPositionTracking;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177DE0", Offset = "0x177DE0")]
	public bool resetTrackerOnLoad;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177E48", Offset = "0x177E48")]
	public bool AllowRecenter;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177E7C", Offset = "0x177E7C")]
	private bool _reorientHMDOnControllerRecenter;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177EC4", Offset = "0x177EC4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x177EC4", Offset = "0x177EC4")]
	private bool <isSupportedPlatform>k__BackingField;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private static bool _isUserPresentCached;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool _isUserPresent;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private static bool _wasUserPresent;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private static bool prevAudioOutIdIsCached;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private static bool prevAudioInIdIsCached;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static string prevAudioOutId;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string prevAudioInId;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static bool wasPositionTracked;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal static string UnityAlphaOrBetaVersionWarningMessage;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool multipleMainCameraWarningPresented;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x177EF8", Offset = "0x177EF8")]
	private static Comparison<Camera> <>f__am$cache0;

	[Token(Token = "0x170001F4")]
	public static OVRManager instance
	{
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x6E8EF0", Offset = "0x6E8EF0", VA = "0x6E8EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1808F8", Offset = "0x1808F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x6E8F7C", Offset = "0x6E8F7C", VA = "0x6E8F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180908", Offset = "0x180908")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public static OVRDisplay display
	{
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x6E900C", Offset = "0x6E900C", VA = "0x6E900C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180918", Offset = "0x180918")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x6E9098", Offset = "0x6E9098", VA = "0x6E9098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180928", Offset = "0x180928")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public static OVRTracker tracker
	{
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x6DBD78", Offset = "0x6DBD78", VA = "0x6DBD78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180938", Offset = "0x180938")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x6E9128", Offset = "0x6E9128", VA = "0x6E9128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180948", Offset = "0x180948")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public static OVRBoundary boundary
	{
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x6E91B8", Offset = "0x6E91B8", VA = "0x6E91B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180958", Offset = "0x180958")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x6E9244", Offset = "0x6E9244", VA = "0x6E9244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180968", Offset = "0x180968")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public static OVRProfile profile
	{
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x6E92D4", Offset = "0x6E92D4", VA = "0x6E92D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public static bool isHmdPresent
	{
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x6EBB50", Offset = "0x6EBB50", VA = "0x6EBB50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x6EBCA0", Offset = "0x6EBCA0", VA = "0x6EBCA0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public static string audioOutId
	{
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x6EBD3C", Offset = "0x6EBD3C", VA = "0x6EBD3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FB")]
	public static string audioInId
	{
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x6EBDB8", Offset = "0x6EBDB8", VA = "0x6EBDB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FC")]
	public static bool hasVrFocus
	{
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x6EBE34", Offset = "0x6EBE34", VA = "0x6EBE34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x6EBF84", Offset = "0x6EBF84", VA = "0x6EBF84")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	public static bool hasInputFocus
	{
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x6EC020", Offset = "0x6EC020", VA = "0x6EC020")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FE")]
	public bool chromatic
	{
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x6EC09C", Offset = "0x6EC09C", VA = "0x6EC09C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x6EC154", Offset = "0x6EC154", VA = "0x6EC154")]
		set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public bool monoscopic
	{
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x6EC210", Offset = "0x6EC210", VA = "0x6EC210")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x6EC2CC", Offset = "0x6EC2CC", VA = "0x6EC2CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public int vsyncCount
	{
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x6EC42C", Offset = "0x6EC42C", VA = "0x6EC42C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x6EC4E4", Offset = "0x6EC4E4", VA = "0x6EC4E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public static float batteryLevel
	{
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x6EC5A0", Offset = "0x6EC5A0", VA = "0x6EC5A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000202")]
	public static float batteryTemperature
	{
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x6EC658", Offset = "0x6EC658", VA = "0x6EC658")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000203")]
	public static int batteryStatus
	{
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x6EC710", Offset = "0x6EC710", VA = "0x6EC710")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000204")]
	public static float volumeLevel
	{
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x6EC7C8", Offset = "0x6EC7C8", VA = "0x6EC7C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000205")]
	public static int cpuLevel
	{
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x6EC880", Offset = "0x6EC880", VA = "0x6EC880")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x6EC938", Offset = "0x6EC938", VA = "0x6EC938")]
		set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public static int gpuLevel
	{
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x6EC9F4", Offset = "0x6EC9F4", VA = "0x6EC9F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x6ECAAC", Offset = "0x6ECAAC", VA = "0x6ECAAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public static bool isPowerSavingActive
	{
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x6ECB68", Offset = "0x6ECB68", VA = "0x6ECB68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000208")]
	public static EyeTextureFormat eyeTextureFormat
	{
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x6ECC20", Offset = "0x6ECC20", VA = "0x6ECC20")]
		get
		{
			return default(EyeTextureFormat);
		}
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x6ECC9C", Offset = "0x6ECC9C", VA = "0x6ECC9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public static bool tiledMultiResSupported
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x6ECD20", Offset = "0x6ECD20", VA = "0x6ECD20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020A")]
	public static TiledMultiResLevel tiledMultiResLevel
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x6ECD9C", Offset = "0x6ECD9C", VA = "0x6ECD9C")]
		get
		{
			return default(TiledMultiResLevel);
		}
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x6ECE98", Offset = "0x6ECE98", VA = "0x6ECE98")]
		set
		{
		}
	}

	[Token(Token = "0x1700020B")]
	public static bool gpuUtilSupported
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x6ECF9C", Offset = "0x6ECF9C", VA = "0x6ECF9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020C")]
	public static float gpuUtilLevel
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x6ED018", Offset = "0x6ED018", VA = "0x6ED018")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020D")]
	public TrackingOrigin trackingOriginType
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x6ED114", Offset = "0x6ED114", VA = "0x6ED114")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x6ED1D0", Offset = "0x6ED1D0", VA = "0x6ED1D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700020E")]
	public bool reorientHMDOnControllerRecenter
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x6ED298", Offset = "0x6ED298", VA = "0x6ED298")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x6ED350", Offset = "0x6ED350", VA = "0x6ED350")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public bool isSupportedPlatform
	{
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x6ED40C", Offset = "0x6ED40C", VA = "0x6ED40C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180978", Offset = "0x180978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x6ED414", Offset = "0x6ED414", VA = "0x6ED414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180988", Offset = "0x180988")]
		private set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public bool isUserPresent
	{
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x6ED41C", Offset = "0x6ED41C", VA = "0x6ED41C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x6ED56C", Offset = "0x6ED56C", VA = "0x6ED56C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public static Version utilitiesVersion
	{
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x6ED608", Offset = "0x6ED608", VA = "0x6ED608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000212")]
	public static Version pluginVersion
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x6ED694", Offset = "0x6ED694", VA = "0x6ED694")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000213")]
	public static Version sdkVersion
	{
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x6ED710", Offset = "0x6ED710", VA = "0x6ED710")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000012")]
	public static event Action HMDAcquired
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x6E9450", Offset = "0x6E9450", VA = "0x6E9450")]
		add
		{
		}
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x6E95D0", Offset = "0x6E95D0", VA = "0x6E95D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action HMDLost
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x6E9750", Offset = "0x6E9750", VA = "0x6E9750")]
		add
		{
		}
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x6E98D0", Offset = "0x6E98D0", VA = "0x6E98D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action HMDMounted
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x6E9A50", Offset = "0x6E9A50", VA = "0x6E9A50")]
		add
		{
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x6E9BD0", Offset = "0x6E9BD0", VA = "0x6E9BD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action HMDUnmounted
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x6E9D50", Offset = "0x6E9D50", VA = "0x6E9D50")]
		add
		{
		}
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x6E9ED0", Offset = "0x6E9ED0", VA = "0x6E9ED0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action VrFocusAcquired
	{
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x6EA050", Offset = "0x6EA050", VA = "0x6EA050")]
		add
		{
		}
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x6EA1D0", Offset = "0x6EA1D0", VA = "0x6EA1D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Action VrFocusLost
	{
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x6EA350", Offset = "0x6EA350", VA = "0x6EA350")]
		add
		{
		}
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x6EA4D0", Offset = "0x6EA4D0", VA = "0x6EA4D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Action InputFocusAcquired
	{
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x6EA650", Offset = "0x6EA650", VA = "0x6EA650")]
		add
		{
		}
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x6EA7D0", Offset = "0x6EA7D0", VA = "0x6EA7D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event Action InputFocusLost
	{
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x6EA950", Offset = "0x6EA950", VA = "0x6EA950")]
		add
		{
		}
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x6EAAD0", Offset = "0x6EAAD0", VA = "0x6EAAD0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event Action AudioOutChanged
	{
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x6EAC50", Offset = "0x6EAC50", VA = "0x6EAC50")]
		add
		{
		}
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x6EADD0", Offset = "0x6EADD0", VA = "0x6EADD0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event Action AudioInChanged
	{
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x6EAF50", Offset = "0x6EAF50", VA = "0x6EAF50")]
		add
		{
		}
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x6EB0D0", Offset = "0x6EB0D0", VA = "0x6EB0D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Action TrackingAcquired
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x6EB250", Offset = "0x6EB250", VA = "0x6EB250")]
		add
		{
		}
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x6EB3D0", Offset = "0x6EB3D0", VA = "0x6EB3D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event Action TrackingLost
	{
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x6EB550", Offset = "0x6EB550", VA = "0x6EB550")]
		add
		{
		}
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x6EB6D0", Offset = "0x6EB6D0", VA = "0x6EB6D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184CE0", Offset = "0x184CE0")]
	public static event Action HSWDismissed
	{
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x6EB850", Offset = "0x6EB850", VA = "0x6EB850")]
		add
		{
		}
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x6EB9D0", Offset = "0x6EB9D0", VA = "0x6EB9D0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x6E8EB8", Offset = "0x6E8EB8", VA = "0x6E8EB8")]
	public OVRManager()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x6EC390", Offset = "0x6EC390", VA = "0x6EC390")]
	public static bool IsAdaptiveResSupportedByEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x6ED78C", Offset = "0x6ED78C", VA = "0x6ED78C")]
	internal static bool IsUnityAlphaOrBetaVersion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x6ED884", Offset = "0x6ED884", VA = "0x6ED884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x6EDF94", Offset = "0x6EDF94", VA = "0x6EDF94")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x6EE18C", Offset = "0x6EE18C", VA = "0x6EE18C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x6F043C", Offset = "0x6F043C", VA = "0x6F043C")]
	private Camera FindMainCamera()
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x6F0948", Offset = "0x6F0948", VA = "0x6F0948")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x6F094C", Offset = "0x6F094C", VA = "0x6F094C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x6F09C4", Offset = "0x6F09C4", VA = "0x6F09C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x6F0A3C", Offset = "0x6F0A3C", VA = "0x6F0A3C")]
	public void ReturnToLauncher()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x6F0AB4", Offset = "0x6F0AB4", VA = "0x6F0AB4")]
	public static void PlatformUIConfirmQuit()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x6F0CB8", Offset = "0x6F0CB8", VA = "0x6F0CB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180998", Offset = "0x180998")]
	private static int <FindMainCamera>m__0(Camera c0, Camera c1)
	{
		return default(int);
	}
}
[Token(Token = "0x20001D5")]
public abstract class OVROnCompleteListener : AndroidJavaProxy
{
	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x6F1348", Offset = "0x6F1348", VA = "0x6F1348")]
	public OVROnCompleteListener()
	{
	}

	[Token(Token = "0x6000DB9")]
	public abstract void onSuccess();

	[Token(Token = "0x6000DBA")]
	public abstract void onFailure();
}
[Token(Token = "0x20001D6")]
public class OVROverlay : MonoBehaviour
{
	[Token(Token = "0x20001D7")]
	public enum OverlayShape
	{
		[Token(Token = "0x400097A")]
		Quad = 0,
		[Token(Token = "0x400097B")]
		Cylinder = 1,
		[Token(Token = "0x400097C")]
		Cubemap = 2,
		[Token(Token = "0x400097D")]
		OffcenterCubemap = 4,
		[Token(Token = "0x400097E")]
		Equirect = 5
	}

	[Token(Token = "0x20001D8")]
	public enum OverlayType
	{
		[Token(Token = "0x4000980")]
		None,
		[Token(Token = "0x4000981")]
		Underlay,
		[Token(Token = "0x4000982")]
		Overlay
	}

	[Token(Token = "0x20001D9")]
	private struct LayerTexture
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture appTexture;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr appTexturePtr;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture[] swapChain;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr[] swapChainPtr;
	}

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177F08", Offset = "0x177F08")]
	public OverlayType currentOverlayType;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177F4C", Offset = "0x177F4C")]
	public bool isDynamic;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177F80", Offset = "0x177F80")]
	public bool isProtectedContent;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177FB4", Offset = "0x177FB4")]
	public int compositionDepth;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x177FE8", Offset = "0x177FE8")]
	public OverlayShape currentOverlayShape;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OverlayShape prevOverlayShape;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17802C", Offset = "0x17802C")]
	public Texture[] textures;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected IntPtr[] texturePtrs;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool isOverridePending;

	[Token(Token = "0x400096B")]
	internal const int maxInstances = 15;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static OVROverlay[] instances;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Material tex2DMaterial;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material cubeMaterial;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private LayerTexture[] layerTextures;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRPlugin.LayerDesc layerDesc;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int stageCount;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int layerIndex;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int layerId;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GCHandle layerIdHandle;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private IntPtr layerIdPtr;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int frameIndex;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int prevFrameIndex;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer rend;

	[Token(Token = "0x17000214")]
	private OVRPlugin.LayerLayout layout
	{
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x6F15CC", Offset = "0x6F15CC", VA = "0x6F15CC")]
		get
		{
			return default(OVRPlugin.LayerLayout);
		}
	}

	[Token(Token = "0x17000215")]
	private int texturesPerStage
	{
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x6F16C0", Offset = "0x6F16C0", VA = "0x6F16C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x6F13DC", Offset = "0x6F13DC", VA = "0x6F13DC")]
	public OVROverlay()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x6F14E0", Offset = "0x6F14E0", VA = "0x6F14E0")]
	public void OverrideOverlayTextureInfo(Texture srcTexture, IntPtr nativePtr, XRNode node)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x6F16E0", Offset = "0x6F16E0", VA = "0x6F16E0")]
	private bool CreateLayer(int mipLevels, int sampleCount, OVRPlugin.EyeTextureFormat etFormat, int flags, OVRPlugin.Sizei size, OVRPlugin.OverlayShape shape)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x6F1D5C", Offset = "0x6F1D5C", VA = "0x6F1D5C")]
	private bool CreateLayerTextures(bool useMipmaps, OVRPlugin.Sizei size, bool isHdr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x6F22E0", Offset = "0x6F22E0", VA = "0x6F22E0")]
	private void DestroyLayerTextures()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x6F2474", Offset = "0x6F2474", VA = "0x6F2474")]
	private void DestroyLayer()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x6F2720", Offset = "0x6F2720", VA = "0x6F2720")]
	private bool LatchLayerTextures()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x6F2DEC", Offset = "0x6F2DEC", VA = "0x6F2DEC")]
	private OVRPlugin.LayerDesc GetCurrentLayerDesc()
	{
		return default(OVRPlugin.LayerDesc);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x6F3354", Offset = "0x6F3354", VA = "0x6F3354")]
	private bool PopulateLayer(int mipLevels, bool isHdr, OVRPlugin.Sizei size, int sampleCount, int stage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x6F39E0", Offset = "0x6F39E0", VA = "0x6F39E0")]
	private bool SubmitLayer(bool overlay, bool headLocked, OVRPose pose, Vector3 scale, int frameIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x6F3BD4", Offset = "0x6F3BD4", VA = "0x6F3BD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x6F4040", Offset = "0x6F4040", VA = "0x6F4040")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x6F40D4", Offset = "0x6F40D4", VA = "0x6F40D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x6F4124", Offset = "0x6F4124", VA = "0x6F4124")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x6F4140", Offset = "0x6F4140", VA = "0x6F4140")]
	private bool ComputeSubmit(ref OVRPose pose, ref Vector3 scale, ref bool overlay, ref bool headLocked)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x6F4730", Offset = "0x6F4730", VA = "0x6F4730")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x20001DA")]
public class OVRPlatformMenu : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	public enum eHandler
	{
		[Token(Token = "0x400098D")]
		ShowConfirmQuit,
		[Token(Token = "0x400098E")]
		RetreatOneLevel
	}

	[Token(Token = "0x20001DC")]
	private enum eBackButtonAction
	{
		[Token(Token = "0x4000990")]
		NONE,
		[Token(Token = "0x4000991")]
		SHORT_PRESS
	}

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private OVRInput.RawButton inputCode;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public eHandler shortPressHandler;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Func<bool> OnShortPress;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<string> sceneStack;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178090", Offset = "0x178090")]
	private static Func<bool> <>f__mg$cache0;

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x3DD7E8", Offset = "0x3DD7E8", VA = "0x3DD7E8")]
	public OVRPlatformMenu()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x3DD7F8", Offset = "0x3DD7F8", VA = "0x3DD7F8")]
	private eBackButtonAction HandleBackButtonState()
	{
		return default(eBackButtonAction);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x3DD884", Offset = "0x3DD884", VA = "0x3DD884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x3DDADC", Offset = "0x3DDADC", VA = "0x3DDADC")]
	private void ShowConfirmQuitMenu()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x3DDC10", Offset = "0x3DDC10", VA = "0x3DDC10")]
	private static bool RetreatOneLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x3DDD4C", Offset = "0x3DDD4C", VA = "0x3DDD4C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001DD")]
public static class OVRPlugin
{
	[StructLayout(0)]
	[Token(Token = "0x20001DE")]
	private class GUID
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int a;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public short b;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public short c;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte d0;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte d1;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte d2;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public byte d3;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte d4;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte d5;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public byte d6;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public byte d7;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x3E4D14", Offset = "0x3E4D14", VA = "0x3E4D14")]
		public GUID()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	public enum Bool
	{
		[Token(Token = "0x40009AE")]
		False,
		[Token(Token = "0x40009AF")]
		True
	}

	[Token(Token = "0x20001E0")]
	public enum Result
	{
		[Token(Token = "0x40009B1")]
		Success = 0,
		[Token(Token = "0x40009B2")]
		Failure = -1000,
		[Token(Token = "0x40009B3")]
		Failure_InvalidParameter = -1001,
		[Token(Token = "0x40009B4")]
		Failure_NotInitialized = -1002,
		[Token(Token = "0x40009B5")]
		Failure_InvalidOperation = -1003,
		[Token(Token = "0x40009B6")]
		Failure_Unsupported = -1004,
		[Token(Token = "0x40009B7")]
		Failure_NotYetImplemented = -1005,
		[Token(Token = "0x40009B8")]
		Failure_OperationFailed = -1006,
		[Token(Token = "0x40009B9")]
		Failure_InsufficientSize = -1007
	}

	[Token(Token = "0x20001E1")]
	public enum CameraStatus
	{
		[Token(Token = "0x40009BB")]
		CameraStatus_None = 0,
		[Token(Token = "0x40009BC")]
		CameraStatus_Connected = 1,
		[Token(Token = "0x40009BD")]
		CameraStatus_Calibrating = 2,
		[Token(Token = "0x40009BE")]
		CameraStatus_CalibrationFailed = 3,
		[Token(Token = "0x40009BF")]
		CameraStatus_Calibrated = 4,
		[Token(Token = "0x40009C0")]
		CameraStatus_EnumSize = int.MaxValue
	}

	[Token(Token = "0x20001E2")]
	public enum Eye
	{
		[Token(Token = "0x40009C2")]
		None = -1,
		[Token(Token = "0x40009C3")]
		Left,
		[Token(Token = "0x40009C4")]
		Right,
		[Token(Token = "0x40009C5")]
		Count
	}

	[Token(Token = "0x20001E3")]
	public enum Tracker
	{
		[Token(Token = "0x40009C7")]
		None = -1,
		[Token(Token = "0x40009C8")]
		Zero,
		[Token(Token = "0x40009C9")]
		One,
		[Token(Token = "0x40009CA")]
		Two,
		[Token(Token = "0x40009CB")]
		Three,
		[Token(Token = "0x40009CC")]
		Count
	}

	[Token(Token = "0x20001E4")]
	public enum Node
	{
		[Token(Token = "0x40009CE")]
		None = -1,
		[Token(Token = "0x40009CF")]
		EyeLeft,
		[Token(Token = "0x40009D0")]
		EyeRight,
		[Token(Token = "0x40009D1")]
		EyeCenter,
		[Token(Token = "0x40009D2")]
		HandLeft,
		[Token(Token = "0x40009D3")]
		HandRight,
		[Token(Token = "0x40009D4")]
		TrackerZero,
		[Token(Token = "0x40009D5")]
		TrackerOne,
		[Token(Token = "0x40009D6")]
		TrackerTwo,
		[Token(Token = "0x40009D7")]
		TrackerThree,
		[Token(Token = "0x40009D8")]
		Head,
		[Token(Token = "0x40009D9")]
		DeviceObjectZero,
		[Token(Token = "0x40009DA")]
		Count
	}

	[Token(Token = "0x20001E5")]
	public enum Controller
	{
		[Token(Token = "0x40009DC")]
		None = 0,
		[Token(Token = "0x40009DD")]
		LTouch = 1,
		[Token(Token = "0x40009DE")]
		RTouch = 2,
		[Token(Token = "0x40009DF")]
		Touch = 3,
		[Token(Token = "0x40009E0")]
		Remote = 4,
		[Token(Token = "0x40009E1")]
		Gamepad = 16,
		[Token(Token = "0x40009E2")]
		Touchpad = 134217728,
		[Token(Token = "0x40009E3")]
		LTrackedRemote = 16777216,
		[Token(Token = "0x40009E4")]
		RTrackedRemote = 33554432,
		[Token(Token = "0x40009E5")]
		Active = int.MinValue,
		[Token(Token = "0x40009E6")]
		All = -1
	}

	[Token(Token = "0x20001E6")]
	public enum Handedness
	{
		[Token(Token = "0x40009E8")]
		Unsupported,
		[Token(Token = "0x40009E9")]
		LeftHanded,
		[Token(Token = "0x40009EA")]
		RightHanded
	}

	[Token(Token = "0x20001E7")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x40009EC")]
		EyeLevel,
		[Token(Token = "0x40009ED")]
		FloorLevel,
		[Token(Token = "0x40009EE")]
		Count
	}

	[Token(Token = "0x20001E8")]
	public enum RecenterFlags
	{
		[Token(Token = "0x40009F0")]
		Default = 0,
		[Token(Token = "0x40009F1")]
		Controllers = 1073741824,
		[Token(Token = "0x40009F2")]
		IgnoreAll = int.MinValue,
		[Token(Token = "0x40009F3")]
		Count = -2147483647
	}

	[Token(Token = "0x20001E9")]
	public enum BatteryStatus
	{
		[Token(Token = "0x40009F5")]
		Charging,
		[Token(Token = "0x40009F6")]
		Discharging,
		[Token(Token = "0x40009F7")]
		Full,
		[Token(Token = "0x40009F8")]
		NotCharging,
		[Token(Token = "0x40009F9")]
		Unknown
	}

	[Token(Token = "0x20001EA")]
	public enum EyeTextureFormat
	{
		[Token(Token = "0x40009FB")]
		Default = 0,
		[Token(Token = "0x40009FC")]
		R8G8B8A8_sRGB = 0,
		[Token(Token = "0x40009FD")]
		R8G8B8A8 = 1,
		[Token(Token = "0x40009FE")]
		R16G16B16A16_FP = 2,
		[Token(Token = "0x40009FF")]
		R11G11B10_FP = 3,
		[Token(Token = "0x4000A00")]
		B8G8R8A8_sRGB = 4,
		[Token(Token = "0x4000A01")]
		B8G8R8A8 = 5,
		[Token(Token = "0x4000A02")]
		R5G6B5 = 11,
		[Token(Token = "0x4000A03")]
		EnumSize = int.MaxValue
	}

	[Token(Token = "0x20001EB")]
	public enum PlatformUI
	{
		[Token(Token = "0x4000A05")]
		None = -1,
		[Token(Token = "0x4000A06")]
		ConfirmQuit = 1,
		[Token(Token = "0x4000A07")]
		GlobalMenuTutorial = 2
	}

	[Token(Token = "0x20001EC")]
	public enum SystemRegion
	{
		[Token(Token = "0x4000A09")]
		Unspecified,
		[Token(Token = "0x4000A0A")]
		Japan,
		[Token(Token = "0x4000A0B")]
		China
	}

	[Token(Token = "0x20001ED")]
	public enum SystemHeadset
	{
		[Token(Token = "0x4000A0D")]
		None = 0,
		[Token(Token = "0x4000A0E")]
		GearVR_R320 = 1,
		[Token(Token = "0x4000A0F")]
		GearVR_R321 = 2,
		[Token(Token = "0x4000A10")]
		GearVR_R322 = 3,
		[Token(Token = "0x4000A11")]
		GearVR_R323 = 4,
		[Token(Token = "0x4000A12")]
		GearVR_R324 = 5,
		[Token(Token = "0x4000A13")]
		GearVR_R325 = 6,
		[Token(Token = "0x4000A14")]
		Oculus_Go = 7,
		[Token(Token = "0x4000A15")]
		Rift_DK1 = 4096,
		[Token(Token = "0x4000A16")]
		Rift_DK2 = 4097,
		[Token(Token = "0x4000A17")]
		Rift_CV1 = 4098
	}

	[Token(Token = "0x20001EE")]
	public enum OverlayShape
	{
		[Token(Token = "0x4000A19")]
		Quad = 0,
		[Token(Token = "0x4000A1A")]
		Cylinder = 1,
		[Token(Token = "0x4000A1B")]
		Cubemap = 2,
		[Token(Token = "0x4000A1C")]
		OffcenterCubemap = 4,
		[Token(Token = "0x4000A1D")]
		Equirect = 5
	}

	[Token(Token = "0x20001EF")]
	public enum Step
	{
		[Token(Token = "0x4000A1F")]
		Render = -1,
		[Token(Token = "0x4000A20")]
		Physics
	}

	[Token(Token = "0x20001F0")]
	public enum CameraDevice
	{
		[Token(Token = "0x4000A22")]
		None = 0,
		[Token(Token = "0x4000A23")]
		WebCamera0 = 100,
		[Token(Token = "0x4000A24")]
		WebCamera1 = 101,
		[Token(Token = "0x4000A25")]
		ZEDCamera = 300
	}

	[Token(Token = "0x20001F1")]
	public enum CameraDeviceDepthSensingMode
	{
		[Token(Token = "0x4000A27")]
		Standard,
		[Token(Token = "0x4000A28")]
		Fill
	}

	[Token(Token = "0x20001F2")]
	public enum CameraDeviceDepthQuality
	{
		[Token(Token = "0x4000A2A")]
		Low,
		[Token(Token = "0x4000A2B")]
		Medium,
		[Token(Token = "0x4000A2C")]
		High
	}

	[Token(Token = "0x20001F3")]
	public enum TiledMultiResLevel
	{
		[Token(Token = "0x4000A2E")]
		Off = 0,
		[Token(Token = "0x4000A2F")]
		LMSLow = 1,
		[Token(Token = "0x4000A30")]
		LMSMedium = 2,
		[Token(Token = "0x4000A31")]
		LMSHigh = 3,
		[Token(Token = "0x4000A32")]
		EnumSize = int.MaxValue
	}

	[Token(Token = "0x20001F4")]
	public struct CameraDeviceIntrinsicsParameters
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fx;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float fy;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float cx;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float cy;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double disto0;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double disto1;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double disto2;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double disto3;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double disto4;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float v_fov;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float h_fov;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float d_fov;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int w;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int h;
	}

	[Token(Token = "0x20001F5")]
	private enum OverlayFlag
	{
		[Token(Token = "0x4000A42")]
		None = 0,
		[Token(Token = "0x4000A43")]
		OnTop = 1,
		[Token(Token = "0x4000A44")]
		HeadLocked = 2,
		[Token(Token = "0x4000A45")]
		ShapeFlag_Quad = 0,
		[Token(Token = "0x4000A46")]
		ShapeFlag_Cylinder = 16,
		[Token(Token = "0x4000A47")]
		ShapeFlag_Cubemap = 32,
		[Token(Token = "0x4000A48")]
		ShapeFlag_OffcenterCubemap = 64,
		[Token(Token = "0x4000A49")]
		ShapeFlagRangeMask = 240
	}

	[Token(Token = "0x20001F6")]
	public struct Vector2f
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}

	[Token(Token = "0x20001F7")]
	public struct Vector3f
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3f zero;

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x1C5780", Offset = "0x1C5780", VA = "0x1C5780", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x20001F8")]
	public struct Quatf
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Quatf identity;

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1C5778", Offset = "0x1C5778", VA = "0x1C5778", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x20001F9")]
	public struct Posef
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quatf Orientation;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3f Position;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Posef identity;

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1C5770", Offset = "0x1C5770", VA = "0x1C5770", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x20001FA")]
	public struct PoseStatef
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Posef Pose;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3f Velocity;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3f Acceleration;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3f AngularVelocity;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3f AngularAcceleration;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double Time;
	}

	[Token(Token = "0x20001FB")]
	public struct ControllerState4
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint ConnectedControllers;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint Buttons;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint Touches;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint NearTouches;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float LIndexTrigger;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RIndexTrigger;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LHandTrigger;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RHandTrigger;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2f LThumbstick;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2f RThumbstick;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2f LTouchpad;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2f RTouchpad;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte LBatteryPercentRemaining;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public byte RBatteryPercentRemaining;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public byte LRecenterCount;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public byte RRecenterCount;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public byte Reserved_27;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public byte Reserved_26;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public byte Reserved_25;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public byte Reserved_24;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte Reserved_23;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public byte Reserved_22;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public byte Reserved_21;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public byte Reserved_20;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public byte Reserved_19;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public byte Reserved_18;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public byte Reserved_17;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public byte Reserved_16;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public byte Reserved_15;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public byte Reserved_14;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public byte Reserved_13;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public byte Reserved_12;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public byte Reserved_11;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public byte Reserved_10;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public byte Reserved_09;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public byte Reserved_08;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte Reserved_07;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public byte Reserved_06;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public byte Reserved_05;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public byte Reserved_04;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public byte Reserved_03;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public byte Reserved_02;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public byte Reserved_01;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public byte Reserved_00;

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1C5204", Offset = "0x1C5204", VA = "0x1C5204")]
		public ControllerState4(ControllerState2 cs)
		{
		}
	}

	[Token(Token = "0x20001FC")]
	public struct ControllerState2
	{
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint ConnectedControllers;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint Buttons;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint Touches;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint NearTouches;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float LIndexTrigger;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RIndexTrigger;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LHandTrigger;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RHandTrigger;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2f LThumbstick;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2f RThumbstick;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2f LTouchpad;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2f RTouchpad;

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1C51AC", Offset = "0x1C51AC", VA = "0x1C51AC")]
		public ControllerState2(ControllerState cs)
		{
		}
	}

	[Token(Token = "0x20001FD")]
	public struct ControllerState
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint ConnectedControllers;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint Buttons;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint Touches;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint NearTouches;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float LIndexTrigger;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RIndexTrigger;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LHandTrigger;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RHandTrigger;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2f LThumbstick;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2f RThumbstick;
	}

	[Token(Token = "0x20001FE")]
	public struct HapticsBuffer
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr Samples;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SamplesCount;
	}

	[Token(Token = "0x20001FF")]
	public struct HapticsState
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SamplesAvailable;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SamplesQueued;
	}

	[Token(Token = "0x2000200")]
	public struct HapticsDesc
	{
		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SampleRateHz;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SampleSizeInBytes;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int MinimumSafeSamplesQueued;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int MinimumBufferSamplesCount;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int OptimalBufferSamplesCount;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MaximumBufferSamplesCount;
	}

	[Token(Token = "0x2000201")]
	public struct AppPerfFrameStats
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int HmdVsyncIndex;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int AppFrameIndex;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int AppDroppedFrameCount;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AppMotionToPhotonLatency;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float AppQueueAheadTime;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float AppCpuElapsedTime;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AppGpuElapsedTime;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int CompositorFrameIndex;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CompositorDroppedFrameCount;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float CompositorLatency;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CompositorCpuElapsedTime;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float CompositorGpuElapsedTime;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CompositorCpuStartToGpuEndElapsedTime;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CompositorGpuEndToVsyncElapsedTime;
	}

	[Token(Token = "0x2000202")]
	public struct AppPerfStats
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AppPerfFrameStats[] FrameStats;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int FrameStatsCount;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Bool AnyFrameStatsDropped;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AdaptiveGpuPerformanceScale;
	}

	[Token(Token = "0x2000203")]
	public struct Sizei
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int w;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int h;
	}

	[Token(Token = "0x2000204")]
	public struct Sizef
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float h;
	}

	[Token(Token = "0x2000205")]
	public struct Vector2i
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;
	}

	[Token(Token = "0x2000206")]
	public struct Recti
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2i Pos;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Sizei Size;
	}

	[Token(Token = "0x2000207")]
	public struct Rectf
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2f Pos;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Sizef Size;
	}

	[Token(Token = "0x2000208")]
	public struct Frustumf
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float zNear;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float zFar;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fovX;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fovY;
	}

	[Token(Token = "0x2000209")]
	public struct Frustumf2
	{
		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float zNear;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float zFar;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Fovf Fov;
	}

	[Token(Token = "0x200020A")]
	public enum BoundaryType
	{
		[Token(Token = "0x4000ACE")]
		OuterBoundary = 1,
		[Token(Token = "0x4000ACF")]
		PlayArea = 0x100
	}

	[Token(Token = "0x200020B")]
	public struct BoundaryTestResult
	{
		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bool IsTriggering;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ClosestDistance;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3f ClosestPoint;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3f ClosestPointNormal;
	}

	[Token(Token = "0x200020C")]
	public struct BoundaryLookAndFeel
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Colorf Color;
	}

	[Token(Token = "0x200020D")]
	public struct BoundaryGeometry
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoundaryType BoundaryType;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3f[] Points;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int PointsCount;
	}

	[Token(Token = "0x200020E")]
	public struct Colorf
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}

	[Token(Token = "0x200020F")]
	public struct Fovf
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float UpTan;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float DownTan;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float LeftTan;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float RightTan;
	}

	[Token(Token = "0x2000210")]
	public struct CameraIntrinsics
	{
		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValid;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double LastChangedTimeSeconds;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Fovf FOVPort;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VirtualNearPlaneDistanceMeters;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float VirtualFarPlaneDistanceMeters;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sizei ImageSensorPixelResolution;
	}

	[Token(Token = "0x2000211")]
	public struct CameraExtrinsics
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValid;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double LastChangedTimeSeconds;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CameraStatus CameraStatusData;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Node AttachedToNode;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Posef RelativePose;
	}

	[Token(Token = "0x2000212")]
	public enum LayerLayout
	{
		[Token(Token = "0x4000AEC")]
		Stereo = 0,
		[Token(Token = "0x4000AED")]
		Mono = 1,
		[Token(Token = "0x4000AEE")]
		DoubleWide = 2,
		[Token(Token = "0x4000AEF")]
		Array = 3,
		[Token(Token = "0x4000AF0")]
		EnumSize = 15
	}

	[Token(Token = "0x2000213")]
	public enum LayerFlags
	{
		[Token(Token = "0x4000AF2")]
		Static = 1,
		[Token(Token = "0x4000AF3")]
		LoadingScreen = 2,
		[Token(Token = "0x4000AF4")]
		SymmetricFov = 4,
		[Token(Token = "0x4000AF5")]
		TextureOriginAtBottomLeft = 8,
		[Token(Token = "0x4000AF6")]
		ChromaticAberrationCorrection = 0x10,
		[Token(Token = "0x4000AF7")]
		NoAllocation = 0x20,
		[Token(Token = "0x4000AF8")]
		ProtectedContent = 0x40
	}

	[Token(Token = "0x2000214")]
	public struct LayerDesc
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OverlayShape Shape;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public LayerLayout Layout;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sizei TextureSize;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MipLevels;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SampleCount;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EyeTextureFormat Format;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int LayerFlags;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fovf[] Fov;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Rectf[] VisibleRect;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sizei MaxViewportSize;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EyeTextureFormat DepthFormat;

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1C55D0", Offset = "0x1C55D0", VA = "0x1C55D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x2000215")]
	public struct LayerSubmit
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int LayerId;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int TextureStage;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Recti[] ViewportRect;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Posef Pose;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int LayerSubmitFlags;
	}

	[Token(Token = "0x2000216")]
	private static class OVRP_0_1_0
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x3E7C80", Offset = "0x3E7C80", VA = "0x3E7C80")]
		public static extern Sizei ovrp_GetEyeTextureSize(Eye eyeId);
	}

	[Token(Token = "0x2000217")]
	private static class OVRP_0_1_1
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x3E8B10", Offset = "0x3E8B10", VA = "0x3E8B10")]
		public static extern Bool ovrp_SetOverlayQuad2(Bool onTop, Bool headLocked, IntPtr texture, IntPtr device, Posef pose, Vector3f scale);
	}

	[Token(Token = "0x2000218")]
	private static class OVRP_0_1_2
	{
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x3EA0C8", Offset = "0x3EA0C8", VA = "0x3EA0C8")]
		public static extern Posef ovrp_GetNodePose(Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x3EBA68", Offset = "0x3EBA68", VA = "0x3EBA68")]
		public static extern Bool ovrp_SetControllerVibration(uint controllerMask, float frequency, float amplitude);
	}

	[Token(Token = "0x2000219")]
	private static class OVRP_0_1_3
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x3EA5C0", Offset = "0x3EA5C0", VA = "0x3EA5C0")]
		public static extern Posef ovrp_GetNodeVelocity(Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x3EAC30", Offset = "0x3EAC30", VA = "0x3EAC30")]
		public static extern Posef ovrp_GetNodeAcceleration(Node nodeId);
	}

	[Token(Token = "0x200021A")]
	private static class OVRP_0_5_0
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;
	}

	[Token(Token = "0x200021B")]
	private static class OVRP_1_0_0
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x3EFF58", Offset = "0x3EFF58", VA = "0x3EFF58")]
		public static extern TrackingOrigin ovrp_GetTrackingOriginType();

		[PreserveSig]
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x3F00B8", Offset = "0x3F00B8", VA = "0x3F00B8")]
		public static extern Bool ovrp_SetTrackingOriginType(TrackingOrigin originType);

		[PreserveSig]
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x3F0218", Offset = "0x3F0218", VA = "0x3F0218")]
		public static extern Posef ovrp_GetTrackingCalibratedOrigin();

		[PreserveSig]
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x3F04E8", Offset = "0x3F04E8", VA = "0x3F04E8")]
		public static extern Bool ovrp_RecenterTrackingOrigin(uint flags);
	}

	[Token(Token = "0x200021C")]
	private static class OVRP_1_1_0
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x3E22D0", Offset = "0x3E22D0", VA = "0x3E22D0")]
		public static extern Bool ovrp_GetInitialized();

		[PreserveSig]
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x3F3D40", Offset = "0x3F3D40", VA = "0x3F3D40")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x3E1C68", Offset = "0x3E1C68", VA = "0x3E1C68")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x3F3E38", Offset = "0x3F3E38", VA = "0x3F3E38")]
		private static extern IntPtr _ovrp_GetNativeSDKVersion();

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x3E2198", Offset = "0x3E2198", VA = "0x3E2198")]
		public static string ovrp_GetNativeSDKVersion()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x3E4D20", Offset = "0x3E4D20", VA = "0x3E4D20")]
		public static extern IntPtr ovrp_GetAudioOutId();

		[PreserveSig]
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x3E5578", Offset = "0x3E5578", VA = "0x3E5578")]
		public static extern IntPtr ovrp_GetAudioInId();

		[PreserveSig]
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x3F3F40", Offset = "0x3F3F40", VA = "0x3F3F40")]
		public static extern float ovrp_GetEyeTextureScale();

		[PreserveSig]
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x3F4048", Offset = "0x3F4048", VA = "0x3F4048")]
		public static extern Bool ovrp_SetEyeTextureScale(float value);

		[PreserveSig]
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x3F4160", Offset = "0x3F4160", VA = "0x3F4160")]
		public static extern Bool ovrp_GetTrackingOrientationSupported();

		[PreserveSig]
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x3E2CC8", Offset = "0x3E2CC8", VA = "0x3E2CC8")]
		public static extern Bool ovrp_GetTrackingOrientationEnabled();

		[PreserveSig]
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x3E2E88", Offset = "0x3E2E88", VA = "0x3E2E88")]
		public static extern Bool ovrp_SetTrackingOrientationEnabled(Bool value);

		[PreserveSig]
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x3E3808", Offset = "0x3E3808", VA = "0x3E3808")]
		public static extern Bool ovrp_GetTrackingPositionSupported();

		[PreserveSig]
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x3E3030", Offset = "0x3E3030", VA = "0x3E3030")]
		public static extern Bool ovrp_GetTrackingPositionEnabled();

		[PreserveSig]
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x3E31F0", Offset = "0x3E31F0", VA = "0x3E31F0")]
		public static extern Bool ovrp_SetTrackingPositionEnabled(Bool value);

		[PreserveSig]
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x3E3CE8", Offset = "0x3E3CE8", VA = "0x3E3CE8")]
		public static extern Bool ovrp_GetNodePresent(Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x3EAFC8", Offset = "0x3EAFC8", VA = "0x3EAFC8")]
		public static extern Bool ovrp_GetNodeOrientationTracked(Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x3E39A8", Offset = "0x3E39A8", VA = "0x3E39A8")]
		public static extern Bool ovrp_GetNodePositionTracked(Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x3E7AE0", Offset = "0x3E7AE0", VA = "0x3E7AE0")]
		public static extern Frustumf ovrp_GetNodeFrustum(Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x3EB1B8", Offset = "0x3EB1B8", VA = "0x3EB1B8")]
		public static extern ControllerState ovrp_GetControllerState(uint controllerMask);

		[PreserveSig]
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x3E68E0", Offset = "0x3E68E0", VA = "0x3E68E0")]
		public static extern int ovrp_GetSystemCpuLevel();

		[PreserveSig]
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x3E6A68", Offset = "0x3E6A68", VA = "0x3E6A68")]
		public static extern Bool ovrp_SetSystemCpuLevel(int value);

		[PreserveSig]
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x3E6BF8", Offset = "0x3E6BF8", VA = "0x3E6BF8")]
		public static extern int ovrp_GetSystemGpuLevel();

		[PreserveSig]
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x3E6D80", Offset = "0x3E6D80", VA = "0x3E6D80")]
		public static extern Bool ovrp_SetSystemGpuLevel(int value);

		[PreserveSig]
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x3E3B48", Offset = "0x3E3B48", VA = "0x3E3B48")]
		public static extern Bool ovrp_GetSystemPowerSavingMode();

		[PreserveSig]
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x3F18B0", Offset = "0x3F18B0", VA = "0x3F18B0")]
		public static extern float ovrp_GetSystemDisplayFrequency();

		[PreserveSig]
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x3E6F10", Offset = "0x3E6F10", VA = "0x3E6F10")]
		public static extern int ovrp_GetSystemVSyncCount();

		[PreserveSig]
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x3E7228", Offset = "0x3E7228", VA = "0x3E7228")]
		public static extern float ovrp_GetSystemVolume();

		[PreserveSig]
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x3E7980", Offset = "0x3E7980", VA = "0x3E7980")]
		public static extern BatteryStatus ovrp_GetSystemBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x3E6638", Offset = "0x3E6638", VA = "0x3E6638")]
		public static extern float ovrp_GetSystemBatteryLevel();

		[PreserveSig]
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x3E6788", Offset = "0x3E6788", VA = "0x3E6788")]
		public static extern float ovrp_GetSystemBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x3F4240", Offset = "0x3F4240", VA = "0x3F4240")]
		private static extern IntPtr _ovrp_GetSystemProductName();

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x3E5DD0", Offset = "0x3E5DD0", VA = "0x3E5DD0")]
		public static string ovrp_GetSystemProductName()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x3E8190", Offset = "0x3E8190", VA = "0x3E8190")]
		public static extern Bool ovrp_ShowSystemUI(PlatformUI ui);

		[PreserveSig]
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x3E2910", Offset = "0x3E2910", VA = "0x3E2910")]
		public static extern Bool ovrp_GetAppMonoscopic();

		[PreserveSig]
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x3E2AF8", Offset = "0x3E2AF8", VA = "0x3E2AF8")]
		public static extern Bool ovrp_SetAppMonoscopic(Bool value);

		[PreserveSig]
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x3E56F0", Offset = "0x3E56F0", VA = "0x3E56F0")]
		public static extern Bool ovrp_GetAppHasVrFocus();

		[PreserveSig]
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x3E5AD0", Offset = "0x3E5AD0", VA = "0x3E5AD0")]
		public static extern Bool ovrp_GetAppShouldQuit();

		[PreserveSig]
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x3E5C50", Offset = "0x3E5C50", VA = "0x3E5C50")]
		public static extern Bool ovrp_GetAppShouldRecenter();

		[PreserveSig]
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x3F4318", Offset = "0x3F4318", VA = "0x3F4318")]
		private static extern IntPtr _ovrp_GetAppLatencyTimings();

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x3E5EFC", Offset = "0x3E5EFC", VA = "0x3E5EFC")]
		public static string ovrp_GetAppLatencyTimings()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x3E3EB8", Offset = "0x3E3EB8", VA = "0x3E3EB8")]
		public static extern Bool ovrp_GetUserPresent();

		[PreserveSig]
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x3E73A0", Offset = "0x3E73A0", VA = "0x3E73A0")]
		public static extern float ovrp_GetUserIPD();

		[PreserveSig]
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x3E7518", Offset = "0x3E7518", VA = "0x3E7518")]
		public static extern Bool ovrp_SetUserIPD(float value);

		[PreserveSig]
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x3E6028", Offset = "0x3E6028", VA = "0x3E6028")]
		public static extern float ovrp_GetUserEyeDepth();

		[PreserveSig]
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x3E61A8", Offset = "0x3E61A8", VA = "0x3E61A8")]
		public static extern Bool ovrp_SetUserEyeDepth(float value);

		[PreserveSig]
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x3E6330", Offset = "0x3E6330", VA = "0x3E6330")]
		public static extern float ovrp_GetUserEyeHeight();

		[PreserveSig]
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x3E64B0", Offset = "0x3E64B0", VA = "0x3E64B0")]
		public static extern Bool ovrp_SetUserEyeHeight(float value);
	}

	[Token(Token = "0x200021D")]
	private static class OVRP_1_2_0
	{
		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x3E7098", Offset = "0x3E7098", VA = "0x3E7098")]
		public static extern Bool ovrp_SetSystemVSyncCount(int vsyncCount);

		[PreserveSig]
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x3F0380", Offset = "0x3F0380", VA = "0x3F0380")]
		public static extern Bool ovrpi_SetTrackingCalibratedOrigin();
	}

	[Token(Token = "0x200021E")]
	private static class OVRP_1_3_0
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x3E76A0", Offset = "0x3E76A0", VA = "0x3E76A0")]
		public static extern Bool ovrp_GetEyeOcclusionMeshEnabled();

		[PreserveSig]
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x3E7828", Offset = "0x3E7828", VA = "0x3E7828")]
		public static extern Bool ovrp_SetEyeOcclusionMeshEnabled(Bool value);

		[PreserveSig]
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x3E4078", Offset = "0x3E4078", VA = "0x3E4078")]
		public static extern Bool ovrp_GetSystemHeadphonesPresent();
	}

	[Token(Token = "0x200021F")]
	private static class OVRP_1_5_0
	{
		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x3E44B8", Offset = "0x3E44B8", VA = "0x3E44B8")]
		public static extern SystemRegion ovrp_GetSystemRegion();
	}

	[Token(Token = "0x2000220")]
	private static class OVRP_1_6_0
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x3E3420", Offset = "0x3E3420", VA = "0x3E3420")]
		public static extern Bool ovrp_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x3E3668", Offset = "0x3E3668", VA = "0x3E3668")]
		public static extern Bool ovrp_SetTrackingIPDEnabled(Bool value);

		[PreserveSig]
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x3EBC80", Offset = "0x3EBC80", VA = "0x3EBC80")]
		public static extern HapticsDesc ovrp_GetControllerHapticsDesc(uint controllerMask);

		[PreserveSig]
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x3EBE90", Offset = "0x3EBE90", VA = "0x3EBE90")]
		public static extern HapticsState ovrp_GetControllerHapticsState(uint controllerMask);

		[PreserveSig]
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x3EC0A8", Offset = "0x3EC0A8", VA = "0x3EC0A8")]
		public static extern Bool ovrp_SetControllerHaptics(uint controllerMask, HapticsBuffer hapticsBuffer);

		[PreserveSig]
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x3E8998", Offset = "0x3E8998", VA = "0x3E8998")]
		public static extern Bool ovrp_SetOverlayQuad3(uint flags, IntPtr textureLeft, IntPtr textureRight, IntPtr device, Posef pose, Vector3f scale, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x3EC2D8", Offset = "0x3EC2D8", VA = "0x3EC2D8")]
		public static extern float ovrp_GetEyeRecommendedResolutionScale();

		[PreserveSig]
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x3EC4C0", Offset = "0x3EC4C0", VA = "0x3EC4C0")]
		public static extern float ovrp_GetAppCpuStartToGpuEndTime();

		[PreserveSig]
		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x3E4298", Offset = "0x3E4298", VA = "0x3E4298")]
		public static extern int ovrp_GetSystemRecommendedMSAALevel();
	}

	[Token(Token = "0x2000221")]
	private static class OVRP_1_7_0
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x3E2520", Offset = "0x3E2520", VA = "0x3E2520")]
		public static extern Bool ovrp_GetAppChromaticCorrection();

		[PreserveSig]
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x3E2770", Offset = "0x3E2770", VA = "0x3E2770")]
		public static extern Bool ovrp_SetAppChromaticCorrection(Bool value);
	}

	[Token(Token = "0x2000222")]
	private static class OVRP_1_8_0
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x3EC6B0", Offset = "0x3EC6B0", VA = "0x3EC6B0")]
		public static extern Bool ovrp_GetBoundaryConfigured();

		[PreserveSig]
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x3EC8B0", Offset = "0x3EC8B0", VA = "0x3EC8B0")]
		public static extern BoundaryTestResult ovrp_TestBoundaryNode(Node nodeId, BoundaryType boundaryType);

		[PreserveSig]
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x3ECB18", Offset = "0x3ECB18", VA = "0x3ECB18")]
		public static extern BoundaryTestResult ovrp_TestBoundaryPoint(Vector3f point, BoundaryType boundaryType);

		[PreserveSig]
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x3ECD90", Offset = "0x3ECD90", VA = "0x3ECD90")]
		public static extern Bool ovrp_SetBoundaryLookAndFeel(BoundaryLookAndFeel lookAndFeel);

		[PreserveSig]
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x3ECFA0", Offset = "0x3ECFA0", VA = "0x3ECFA0")]
		public static extern Bool ovrp_ResetBoundaryLookAndFeel();

		[PreserveSig]
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x3ED1A0", Offset = "0x3ED1A0", VA = "0x3ED1A0")]
		public static extern BoundaryGeometry ovrp_GetBoundaryGeometry(BoundaryType boundaryType);

		[PreserveSig]
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x3EF378", Offset = "0x3EF378", VA = "0x3EF378")]
		public static extern Vector3f ovrp_GetBoundaryDimensions(BoundaryType boundaryType);

		[PreserveSig]
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x3EF578", Offset = "0x3EF578", VA = "0x3EF578")]
		public static extern Bool ovrp_GetBoundaryVisible();

		[PreserveSig]
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x3EF7C8", Offset = "0x3EF7C8", VA = "0x3EF7C8")]
		public static extern Bool ovrp_SetBoundaryVisible(Bool value);

		[PreserveSig]
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x3E9D78", Offset = "0x3E9D78", VA = "0x3E9D78")]
		public static extern Bool ovrp_Update2(int stateId, int frameIndex, double predictionSeconds);

		[PreserveSig]
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x3E9FB0", Offset = "0x3E9FB0", VA = "0x3E9FB0")]
		public static extern Posef ovrp_GetNodePose2(int stateId, Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x3EA4A0", Offset = "0x3EA4A0", VA = "0x3EA4A0")]
		public static extern Posef ovrp_GetNodeVelocity2(int stateId, Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x3EAB08", Offset = "0x3EAB08", VA = "0x3EAB08")]
		public static extern Posef ovrp_GetNodeAcceleration2(int stateId, Node nodeId);
	}

	[Token(Token = "0x2000223")]
	private static class OVRP_1_9_0
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x3EF9E8", Offset = "0x3EF9E8", VA = "0x3EF9E8")]
		public static extern SystemHeadset ovrp_GetSystemHeadsetType();

		[PreserveSig]
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x3EFBF8", Offset = "0x3EFBF8", VA = "0x3EFBF8")]
		public static extern Controller ovrp_GetActiveController();

		[PreserveSig]
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x3EFE08", Offset = "0x3EFE08", VA = "0x3EFE08")]
		public static extern Controller ovrp_GetConnectedControllers();

		[PreserveSig]
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x3ED418", Offset = "0x3ED418", VA = "0x3ED418")]
		public static extern Bool ovrp_GetBoundaryGeometry2(BoundaryType boundaryType, IntPtr points, ref int pointsCount);

		[PreserveSig]
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x3ED658", Offset = "0x3ED658", VA = "0x3ED658")]
		public static extern AppPerfStats ovrp_GetAppPerfStats();

		[PreserveSig]
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x3ED898", Offset = "0x3ED898", VA = "0x3ED898")]
		public static extern Bool ovrp_ResetAppPerfStats();
	}

	[Token(Token = "0x2000224")]
	private static class OVRP_1_10_0
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;
	}

	[Token(Token = "0x2000225")]
	private static class OVRP_1_11_0
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x3EE2F8", Offset = "0x3EE2F8", VA = "0x3EE2F8")]
		public static extern Bool ovrp_SetDesiredEyeTextureFormat(EyeTextureFormat value);

		[PreserveSig]
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x3EE100", Offset = "0x3EE100", VA = "0x3EE100")]
		public static extern EyeTextureFormat ovrp_GetDesiredEyeTextureFormat();
	}

	[Token(Token = "0x2000226")]
	private static class OVRP_1_12_0
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x3EDAA8", Offset = "0x3EDAA8", VA = "0x3EDAA8")]
		public static extern float ovrp_GetAppFramerate();

		[PreserveSig]
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x3E9E90", Offset = "0x3E9E90", VA = "0x3E9E90")]
		public static extern PoseStatef ovrp_GetNodePoseState(Step stepId, Node nodeId);

		[PreserveSig]
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x3EB498", Offset = "0x3EB498", VA = "0x3EB498")]
		public static extern ControllerState2 ovrp_GetControllerState2(uint controllerMask);
	}

	[Token(Token = "0x2000227")]
	private static class OVRP_1_15_0
	{
		[Token(Token = "0x4000B1A")]
		public const int OVRP_EXTERNAL_CAMERA_NAME_SIZE = 32;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x3EE4F0", Offset = "0x3EE4F0", VA = "0x3EE4F0")]
		public static extern Result ovrp_InitializeMixedReality();

		[PreserveSig]
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x3EE6E0", Offset = "0x3EE6E0", VA = "0x3EE6E0")]
		public static extern Result ovrp_ShutdownMixedReality();

		[PreserveSig]
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x3EE900", Offset = "0x3EE900", VA = "0x3EE900")]
		public static extern Bool ovrp_GetMixedRealityInitialized();

		[PreserveSig]
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x3EED08", Offset = "0x3EED08", VA = "0x3EED08")]
		public static extern Result ovrp_UpdateExternalCamera();

		[PreserveSig]
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x3EEB10", Offset = "0x3EEB10", VA = "0x3EEB10")]
		public static extern Result ovrp_GetExternalCameraCount(out int cameraCount);

		[PreserveSig]
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x3F38B8", Offset = "0x3F38B8", VA = "0x3F38B8")]
		public static extern Result ovrp_GetExternalCameraName(int cameraId, char[] cameraName);

		[PreserveSig]
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x3EF108", Offset = "0x3EF108", VA = "0x3EF108")]
		public static extern Result ovrp_GetExternalCameraIntrinsics(int cameraId, out CameraIntrinsics cameraIntrinsics);

		[PreserveSig]
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x3EEFB0", Offset = "0x3EEFB0", VA = "0x3EEFB0")]
		public static extern Result ovrp_GetExternalCameraExtrinsics(int cameraId, out CameraExtrinsics cameraExtrinsics);

		[PreserveSig]
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x3E8E08", Offset = "0x3E8E08", VA = "0x3E8E08")]
		public static extern Result ovrp_CalculateLayerDesc(OverlayShape shape, LayerLayout layout, ref Sizei textureSize, int mipLevels, int sampleCount, EyeTextureFormat format, int layerFlags, ref LayerDesc layerDesc);

		[PreserveSig]
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x3E93F0", Offset = "0x3E93F0", VA = "0x3E93F0")]
		public static extern Result ovrp_EnqueueSetupLayer(ref LayerDesc desc, IntPtr layerId);

		[PreserveSig]
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x3E96A0", Offset = "0x3E96A0", VA = "0x3E96A0")]
		public static extern Result ovrp_EnqueueDestroyLayer(IntPtr layerId);

		[PreserveSig]
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x3E9B50", Offset = "0x3E9B50", VA = "0x3E9B50")]
		public static extern Result ovrp_GetLayerTextureStageCount(int layerId, ref int layerTextureStageCount);

		[PreserveSig]
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x3E98F8", Offset = "0x3E98F8", VA = "0x3E98F8")]
		public static extern Result ovrp_GetLayerTexturePtr(int layerId, int stage, Eye eyeId, ref IntPtr textureHandle);

		[PreserveSig]
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x3E8848", Offset = "0x3E8848", VA = "0x3E8848")]
		public static extern Result ovrp_EnqueueSubmitLayer(uint flags, IntPtr textureLeft, IntPtr textureRight, int layerId, int frameIndex, ref Posef pose, ref Vector3f scale, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x3F1CB8", Offset = "0x3F1CB8", VA = "0x3F1CB8")]
		public static extern Result ovrp_GetNodeFrustum2(Node nodeId, out Frustumf2 nodeFrustum);

		[PreserveSig]
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x3F2140", Offset = "0x3F2140", VA = "0x3F2140")]
		public static extern Bool ovrp_GetEyeTextureArrayEnabled();
	}

	[Token(Token = "0x2000228")]
	private static class OVRP_1_16_0
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x3EB828", Offset = "0x3EB828", VA = "0x3EB828")]
		public static extern Result ovrp_GetControllerState4(uint controllerMask, ref ControllerState4 controllerState);
	}

	[Token(Token = "0x2000229")]
	private static class OVRP_1_17_0
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;
	}

	[Token(Token = "0x200022A")]
	private static class OVRP_1_18_0
	{
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x3EDCD8", Offset = "0x3EDCD8", VA = "0x3EDCD8")]
		public static extern Result ovrp_SetHandNodePoseStateLatency(double latencyInSeconds);

		[PreserveSig]
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x3EDF08", Offset = "0x3EDF08", VA = "0x3EDF08")]
		public static extern Result ovrp_GetHandNodePoseStateLatency(out double latencyInSeconds);

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x3E5938", Offset = "0x3E5938", VA = "0x3E5938")]
		public static extern Result ovrp_GetAppHasInputFocus(out Bool appHasInputFocus);
	}

	[Token(Token = "0x200022B")]
	private static class OVRP_1_19_0
	{
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;
	}

	[Token(Token = "0x200022C")]
	private static class OVRP_1_21_0
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x3F06F8", Offset = "0x3F06F8", VA = "0x3F06F8")]
		public static extern Result ovrp_GetTiledMultiResSupported(out Bool foveationSupported);

		[PreserveSig]
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x3F0938", Offset = "0x3F0938", VA = "0x3F0938")]
		public static extern Result ovrp_GetTiledMultiResLevel(out TiledMultiResLevel level);

		[PreserveSig]
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x3F0B60", Offset = "0x3F0B60", VA = "0x3F0B60")]
		public static extern Result ovrp_SetTiledMultiResLevel(TiledMultiResLevel level);

		[PreserveSig]
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x3F0D70", Offset = "0x3F0D70", VA = "0x3F0D70")]
		public static extern Result ovrp_GetGPUUtilSupported(out Bool gpuUtilSupported);

		[PreserveSig]
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x3F1000", Offset = "0x3F1000", VA = "0x3F1000")]
		public static extern Result ovrp_GetGPUUtilLevel(out float gpuUtil);

		[PreserveSig]
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x3F17D0", Offset = "0x3F17D0", VA = "0x3F17D0")]
		public static extern Result ovrp_GetSystemDisplayFrequency2(out float systemDisplayFrequency);

		[PreserveSig]
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x3F14E0", Offset = "0x3F14E0", VA = "0x3F14E0")]
		public static extern Result ovrp_GetSystemDisplayAvailableFrequencies(IntPtr systemDisplayAvailableFrequencies, out int numFrequencies);

		[PreserveSig]
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x3F1A98", Offset = "0x3F1A98", VA = "0x3F1A98")]
		public static extern Result ovrp_SetSystemDisplayFrequency(float requestedFrequency);

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x3F1F10", Offset = "0x3F1F10", VA = "0x3F1F10")]
		public static extern Result ovrp_GetAppAsymmetricFov(out Bool useAsymmetricFov);
	}

	[Token(Token = "0x200022D")]
	private static class OVRP_1_28_0
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version version;

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x3F2348", Offset = "0x3F2348", VA = "0x3F2348")]
		public static extern Result ovrp_GetDominantHand(out Handedness dominantHand);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x3F2590", Offset = "0x3F2590", VA = "0x3F2590")]
		public static extern Result ovrp_GetReorientHMDOnControllerRecenter(out Bool recenter);

		[PreserveSig]
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x3F2798", Offset = "0x3F2798", VA = "0x3F2798")]
		public static extern Result ovrp_SetReorientHMDOnControllerRecenter(Bool recenter);

		[PreserveSig]
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x3F29A8", Offset = "0x3F29A8", VA = "0x3F29A8")]
		public static extern Result ovrp_SendEvent(string name, string param);

		[PreserveSig]
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x3E9258", Offset = "0x3E9258", VA = "0x3E9258")]
		public static extern Result ovrp_EnqueueSetupLayer2(ref LayerDesc desc, int compositionDepth, IntPtr layerId);
	}

	[Token(Token = "0x4000992")]
	public const bool isSupportedPlatform = true;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Version wrapperVersion;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Version _version;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Version _nativeSDKVersion;

	[Token(Token = "0x4000996")]
	private const int OverlayShapeFlagShift = 4;

	[Token(Token = "0x4000997")]
	public const int AppPerfFrameStatsMaxCount = 5;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static GUID _nativeAudioOutGuid;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Guid _cachedAudioOutGuid;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string _cachedAudioOutString;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static GUID _nativeAudioInGuid;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Guid _cachedAudioInGuid;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string _cachedAudioInString;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static OVRNativeBuffer _nativeSystemDisplayFrequenciesAvailable;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float[] _cachedSystemDisplayFrequenciesAvailable;

	[Token(Token = "0x40009A0")]
	private const string pluginName = "OVRPlugin";

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static Version _versionZero;

	[Token(Token = "0x17000216")]
	public static Version version
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x3E1404", Offset = "0x3E1404", VA = "0x3E1404")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000217")]
	public static Version nativeSDKVersion
	{
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x3E1D1C", Offset = "0x3E1D1C", VA = "0x3E1D1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	public static bool initialized
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x3E224C", Offset = "0x3E224C", VA = "0x3E224C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000219")]
	public static bool chromatic
	{
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x3E23CC", Offset = "0x3E23CC", VA = "0x3E23CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x3E25F8", Offset = "0x3E25F8", VA = "0x3E25F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public static bool monoscopic
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x3E2850", Offset = "0x3E2850", VA = "0x3E2850")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x3E2A10", Offset = "0x3E2A10", VA = "0x3E2A10")]
		set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public static bool rotation
	{
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x3E2C08", Offset = "0x3E2C08", VA = "0x3E2C08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x3E2DA4", Offset = "0x3E2DA4", VA = "0x3E2DA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public static bool position
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x3E2F6C", Offset = "0x3E2F6C", VA = "0x3E2F6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x3E3108", Offset = "0x3E3108", VA = "0x3E3108")]
		set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public static bool useIPDInPositionTracking
	{
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x3E32D0", Offset = "0x3E32D0", VA = "0x3E32D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x3E34F4", Offset = "0x3E34F4", VA = "0x3E34F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public static bool positionSupported
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x3E3744", Offset = "0x3E3744", VA = "0x3E3744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021F")]
	public static bool positionTracked
	{
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x3E38E4", Offset = "0x3E38E4", VA = "0x3E38E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000220")]
	public static bool powerSaving
	{
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x3E3A84", Offset = "0x3E3A84", VA = "0x3E3A84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000221")]
	public static bool hmdPresent
	{
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x3E3C20", Offset = "0x3E3C20", VA = "0x3E3C20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000222")]
	public static bool userPresent
	{
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x3E3DF4", Offset = "0x3E3DF4", VA = "0x3E3DF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000223")]
	public static bool headphonesPresent
	{
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x3E3FB4", Offset = "0x3E3FB4", VA = "0x3E3FB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000224")]
	public static int recommendedMSAALevel
	{
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x3E4150", Offset = "0x3E4150", VA = "0x3E4150")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000225")]
	public static SystemRegion systemRegion
	{
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x3E4374", Offset = "0x3E4374", VA = "0x3E4374")]
		get
		{
			return default(SystemRegion);
		}
	}

	[Token(Token = "0x17000226")]
	public static string audioOutId
	{
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x3E45B8", Offset = "0x3E45B8", VA = "0x3E45B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000227")]
	public static string audioInId
	{
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x3E4E1C", Offset = "0x3E4E1C", VA = "0x3E4E1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000228")]
	public static bool hasVrFocus
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x3E5670", Offset = "0x3E5670", VA = "0x3E5670")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000229")]
	public static bool hasInputFocus
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x3E57F0", Offset = "0x3E57F0", VA = "0x3E57F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022A")]
	public static bool shouldQuit
	{
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x3E5A50", Offset = "0x3E5A50", VA = "0x3E5A50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022B")]
	public static bool shouldRecenter
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x3E5BD0", Offset = "0x3E5BD0", VA = "0x3E5BD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022C")]
	public static string productName
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x3E5D58", Offset = "0x3E5D58", VA = "0x3E5D58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022D")]
	public static string latency
	{
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x3E5E84", Offset = "0x3E5E84", VA = "0x3E5E84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022E")]
	public static float eyeDepth
	{
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x3E5FB0", Offset = "0x3E5FB0", VA = "0x3E5FB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x3E6128", Offset = "0x3E6128", VA = "0x3E6128")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public static float eyeHeight
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x3E62B8", Offset = "0x3E62B8", VA = "0x3E62B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x3E6430", Offset = "0x3E6430", VA = "0x3E6430")]
		set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public static float batteryLevel
	{
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x3E65C0", Offset = "0x3E65C0", VA = "0x3E65C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000231")]
	public static float batteryTemperature
	{
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x3E670C", Offset = "0x3E670C", VA = "0x3E670C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000232")]
	public static int cpuLevel
	{
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x3E6864", Offset = "0x3E6864", VA = "0x3E6864")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x3E69E4", Offset = "0x3E69E4", VA = "0x3E69E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public static int gpuLevel
	{
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x3E6B7C", Offset = "0x3E6B7C", VA = "0x3E6B7C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x3E6CFC", Offset = "0x3E6CFC", VA = "0x3E6CFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000234")]
	public static int vsyncCount
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x3E6E94", Offset = "0x3E6E94", VA = "0x3E6E94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x3E7018", Offset = "0x3E7018", VA = "0x3E7018")]
		set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public static float systemVolume
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x3E71B0", Offset = "0x3E71B0", VA = "0x3E71B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000236")]
	public static float ipd
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x3E7328", Offset = "0x3E7328", VA = "0x3E7328")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x3E7494", Offset = "0x3E7494", VA = "0x3E7494")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public static bool occlusionMesh
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x3E761C", Offset = "0x3E761C", VA = "0x3E761C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x3E7778", Offset = "0x3E7778", VA = "0x3E7778")]
		set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public static BatteryStatus batteryStatus
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x3E7908", Offset = "0x3E7908", VA = "0x3E7908")]
		get
		{
			return default(BatteryStatus);
		}
	}

	[Token(Token = "0x17000239")]
	public static bool tiledMultiResSupported
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x3F05C4", Offset = "0x3F05C4", VA = "0x3F05C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023A")]
	public static TiledMultiResLevel tiledMultiResLevel
	{
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x3F07D8", Offset = "0x3F07D8", VA = "0x3F07D8")]
		get
		{
			return default(TiledMultiResLevel);
		}
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x3F0A14", Offset = "0x3F0A14", VA = "0x3F0A14")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public static bool gpuUtilSupported
	{
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x3F0C3C", Offset = "0x3F0C3C", VA = "0x3F0C3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023C")]
	public static float gpuUtilLevel
	{
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x3F0E88", Offset = "0x3F0E88", VA = "0x3F0E88")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700023D")]
	public static float[] systemDisplayFrequenciesAvailable
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x3F1110", Offset = "0x3F1110", VA = "0x3F1110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023E")]
	public static float systemDisplayFrequency
	{
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x3F15D4", Offset = "0x3F15D4", VA = "0x3F15D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x3F1988", Offset = "0x3F1988", VA = "0x3F1988")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public static bool AsymmetricFovEnabled
	{
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x3F1DD0", Offset = "0x3F1DD0", VA = "0x3F1DD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000240")]
	public static bool EyeTextureArrayEnabled
	{
		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x3F2028", Offset = "0x3F2028", VA = "0x3F2028")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x3E7A54", Offset = "0x3E7A54", VA = "0x3E7A54")]
	public static Frustumf GetEyeFrustum(Eye eyeId)
	{
		return default(Frustumf);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x3E7BF4", Offset = "0x3E7BF4", VA = "0x3E7BF4")]
	public static Sizei GetEyeTextureSize(Eye eyeId)
	{
		return default(Sizei);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x3E7D9C", Offset = "0x3E7D9C", VA = "0x3E7D9C")]
	public static Posef GetTrackerPose(Tracker trackerId)
	{
		return default(Posef);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x3E807C", Offset = "0x3E807C", VA = "0x3E807C")]
	public static Frustumf GetTrackerFrustum(Tracker trackerId)
	{
		return default(Frustumf);
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x3E8104", Offset = "0x3E8104", VA = "0x3E8104")]
	public static bool ShowUI(PlatformUI ui)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x3E8298", Offset = "0x3E8298", VA = "0x3E8298")]
	public static bool EnqueueSubmitLayer(bool onTop, bool headLocked, IntPtr leftTexture, IntPtr rightTexture, int layerId, int frameIndex, Posef pose, Vector3f scale, int layerIndex = 0, OverlayShape shape = OverlayShape.Quad)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x3E8C78", Offset = "0x3E8C78", VA = "0x3E8C78")]
	public static LayerDesc CalculateLayerDesc(OverlayShape shape, LayerLayout layout, Sizei textureSize, int mipLevels, int sampleCount, EyeTextureFormat format, int layerFlags)
	{
		return default(LayerDesc);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x3E8FC8", Offset = "0x3E8FC8", VA = "0x3E8FC8")]
	public static bool EnqueueSetupLayer(LayerDesc desc, int compositionDepth, IntPtr layerID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x3E9580", Offset = "0x3E9580", VA = "0x3E9580")]
	public static bool EnqueueDestroyLayer(IntPtr layerID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x3E97B8", Offset = "0x3E97B8", VA = "0x3E97B8")]
	public static IntPtr GetLayerTexture(int layerId, int stage, Eye eyeId)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x3E9A24", Offset = "0x3E9A24", VA = "0x3E9A24")]
	public static int GetLayerTextureStageCount(int layerId)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x3E9C38", Offset = "0x3E9C38", VA = "0x3E9C38")]
	public static bool UpdateNodePhysicsPoses(int frameIndex, double predictionSeconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x3E7E28", Offset = "0x3E7E28", VA = "0x3E7E28")]
	public static Posef GetNodePose(Node nodeId, Step stepId)
	{
		return default(Posef);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x3EA1D8", Offset = "0x3EA1D8", VA = "0x3EA1D8")]
	public static Vector3f GetNodeVelocity(Node nodeId, Step stepId)
	{
		return default(Vector3f);
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x3EA6D8", Offset = "0x3EA6D8", VA = "0x3EA6D8")]
	public static Vector3f GetNodeAngularVelocity(Node nodeId, Step stepId)
	{
		return default(Vector3f);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x3EA840", Offset = "0x3EA840", VA = "0x3EA840")]
	public static Vector3f GetNodeAcceleration(Node nodeId, Step stepId)
	{
		return default(Vector3f);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x3EAD50", Offset = "0x3EAD50", VA = "0x3EAD50")]
	public static Vector3f GetNodeAngularAcceleration(Node nodeId, Step stepId)
	{
		return default(Vector3f);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x3EAEB8", Offset = "0x3EAEB8", VA = "0x3EAEB8")]
	public static bool GetNodePresent(Node nodeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x3EAF40", Offset = "0x3EAF40", VA = "0x3EAF40")]
	public static bool GetNodeOrientationTracked(Node nodeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x3EB0A8", Offset = "0x3EB0A8", VA = "0x3EB0A8")]
	public static bool GetNodePositionTracked(Node nodeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x3EB130", Offset = "0x3EB130", VA = "0x3EB130")]
	public static ControllerState GetControllerState(uint controllerMask)
	{
		return default(ControllerState);
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x3EB2D4", Offset = "0x3EB2D4", VA = "0x3EB2D4")]
	public static ControllerState2 GetControllerState2(uint controllerMask)
	{
		return default(ControllerState2);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x3EB614", Offset = "0x3EB614", VA = "0x3EB614")]
	public static ControllerState4 GetControllerState4(uint controllerMask)
	{
		return default(ControllerState4);
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x3EB9CC", Offset = "0x3EB9CC", VA = "0x3EB9CC")]
	public static bool SetControllerVibration(uint controllerMask, float frequency, float amplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x3EBB54", Offset = "0x3EBB54", VA = "0x3EBB54")]
	public static HapticsDesc GetControllerHapticsDesc(uint controllerMask)
	{
		return default(HapticsDesc);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x3EBD68", Offset = "0x3EBD68", VA = "0x3EBD68")]
	public static HapticsState GetControllerHapticsState(uint controllerMask)
	{
		return default(HapticsState);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x3EBF78", Offset = "0x3EBF78", VA = "0x3EBF78")]
	public static bool SetControllerHaptics(uint controllerMask, HapticsBuffer hapticsBuffer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x3EC1D0", Offset = "0x3EC1D0", VA = "0x3EC1D0")]
	public static float GetEyeRecommendedResolutionScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x3EC3B8", Offset = "0x3EC3B8", VA = "0x3EC3B8")]
	public static float GetAppCpuStartToGpuEndTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x3EC598", Offset = "0x3EC598", VA = "0x3EC598")]
	public static bool GetBoundaryConfigured()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x3EC784", Offset = "0x3EC784", VA = "0x3EC784")]
	public static BoundaryTestResult TestBoundaryNode(Node nodeId, BoundaryType boundaryType)
	{
		return default(BoundaryTestResult);
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x3EC9D0", Offset = "0x3EC9D0", VA = "0x3EC9D0")]
	public static BoundaryTestResult TestBoundaryPoint(Vector3f point, BoundaryType boundaryType)
	{
		return default(BoundaryTestResult);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x3ECC4C", Offset = "0x3ECC4C", VA = "0x3ECC4C")]
	public static bool SetBoundaryLookAndFeel(BoundaryLookAndFeel lookAndFeel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x3ECE84", Offset = "0x3ECE84", VA = "0x3ECE84")]
	public static bool ResetBoundaryLookAndFeel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x3ED078", Offset = "0x3ED078", VA = "0x3ED078")]
	public static BoundaryGeometry GetBoundaryGeometry(BoundaryType boundaryType)
	{
		return default(BoundaryGeometry);
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x3ED2E0", Offset = "0x3ED2E0", VA = "0x3ED2E0")]
	public static bool GetBoundaryGeometry2(BoundaryType boundaryType, IntPtr points, ref int pointsCount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x3ED540", Offset = "0x3ED540", VA = "0x3ED540")]
	public static AppPerfStats GetAppPerfStats()
	{
		return default(AppPerfStats);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x3ED780", Offset = "0x3ED780", VA = "0x3ED780")]
	public static bool ResetAppPerfStats()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x3ED99C", Offset = "0x3ED99C", VA = "0x3ED99C")]
	public static float GetAppFramerate()
	{
		return default(float);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x3EDBA8", Offset = "0x3EDBA8", VA = "0x3EDBA8")]
	public static bool SetHandNodePoseStateLatency(double latencyInSeconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x3EDDC4", Offset = "0x3EDDC4", VA = "0x3EDDC4")]
	public static double GetHandNodePoseStateLatency()
	{
		return default(double);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x3EDFEC", Offset = "0x3EDFEC", VA = "0x3EDFEC")]
	public static EyeTextureFormat GetDesiredEyeTextureFormat()
	{
		return default(EyeTextureFormat);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x3EE1D8", Offset = "0x3EE1D8", VA = "0x3EE1D8")]
	public static bool SetDesiredEyeTextureFormat(EyeTextureFormat value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x3EE3D8", Offset = "0x3EE3D8", VA = "0x3EE3D8")]
	public static bool InitializeMixedReality()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x3EE5C4", Offset = "0x3EE5C4", VA = "0x3EE5C4")]
	public static bool ShutdownMixedReality()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x3EE7E8", Offset = "0x3EE7E8", VA = "0x3EE7E8")]
	public static bool IsMixedRealityInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x3EE9D8", Offset = "0x3EE9D8", VA = "0x3EE9D8")]
	public static int GetExternalCameraCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x3EEBEC", Offset = "0x3EEBEC", VA = "0x3EEBEC")]
	public static bool UpdateExternalCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x3EEE10", Offset = "0x3EEE10", VA = "0x3EEE10")]
	public static bool GetMixedRealityCameraInfo(int cameraId, out CameraExtrinsics cameraExtrinsics, out CameraIntrinsics cameraIntrinsics)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x3EF24C", Offset = "0x3EF24C", VA = "0x3EF24C")]
	public static Vector3f GetBoundaryDimensions(BoundaryType boundaryType)
	{
		return default(Vector3f);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x3EF45C", Offset = "0x3EF45C", VA = "0x3EF45C")]
	public static bool GetBoundaryVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x3EF67C", Offset = "0x3EF67C", VA = "0x3EF67C")]
	public static bool SetBoundaryVisible(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x3EF8DC", Offset = "0x3EF8DC", VA = "0x3EF8DC")]
	public static SystemHeadset GetSystemHeadsetType()
	{
		return default(SystemHeadset);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x3EFAF0", Offset = "0x3EFAF0", VA = "0x3EFAF0")]
	public static Controller GetActiveController()
	{
		return default(Controller);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x3EFD00", Offset = "0x3EFD00", VA = "0x3EFD00")]
	public static Controller GetConnectedControllers()
	{
		return default(Controller);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x3E276C", Offset = "0x3E276C", VA = "0x3E276C")]
	private static Bool ToBool(bool b)
	{
		return default(Bool);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x3EFEE0", Offset = "0x3EFEE0", VA = "0x3EFEE0")]
	public static TrackingOrigin GetTrackingOriginType()
	{
		return default(TrackingOrigin);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x3F002C", Offset = "0x3F002C", VA = "0x3F002C")]
	public static bool SetTrackingOriginType(TrackingOrigin originType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x3F0194", Offset = "0x3F0194", VA = "0x3F0194")]
	public static Posef GetTrackingCalibratedOrigin()
	{
		return default(Posef);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x3F02FC", Offset = "0x3F02FC", VA = "0x3F02FC")]
	public static bool SetTrackingCalibratedOrigin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x3F045C", Offset = "0x3F045C", VA = "0x3F045C")]
	public static bool RecenterTrackingOrigin(RecenterFlags flags)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x3F1B78", Offset = "0x3F1B78", VA = "0x3F1B78")]
	public static bool GetNodeFrustum2(Node nodeId, out Frustumf2 frustum)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x3F2218", Offset = "0x3F2218", VA = "0x3F2218")]
	public static Handedness GetDominantHand()
	{
		return default(Handedness);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x3F2458", Offset = "0x3F2458", VA = "0x3F2458")]
	public static bool GetReorientHMDOnControllerRecenter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x3F2678", Offset = "0x3F2678", VA = "0x3F2678")]
	public static bool SetReorientHMDOnControllerRecenter(bool recenterSetting)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x3F2880", Offset = "0x3F2880", VA = "0x3F2880")]
	public static bool SendEvent(string name, string param = "")
	{
		return default(bool);
	}
}
[Token(Token = "0x200022E")]
public class OVRProfile : UnityEngine.Object
{
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x172744", Offset = "0x172744")]
	public enum State
	{
		[Token(Token = "0x4000B23")]
		NOT_TRIGGERED,
		[Token(Token = "0x4000B24")]
		LOADING,
		[Token(Token = "0x4000B25")]
		READY,
		[Token(Token = "0x4000B26")]
		ERROR
	}

	[Token(Token = "0x17000241")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184E50", Offset = "0x184E50")]
	public string id
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x3F5820", Offset = "0x3F5820", VA = "0x3F5820")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000242")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184E60", Offset = "0x184E60")]
	public string userName
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x3F587C", Offset = "0x3F587C", VA = "0x3F587C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000243")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184E70", Offset = "0x184E70")]
	public string locale
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x3F58D8", Offset = "0x3F58D8", VA = "0x3F58D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000244")]
	public float ipd
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x3F5934", Offset = "0x3F5934", VA = "0x3F5934")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000245")]
	public float eyeHeight
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x3DF9A4", Offset = "0x3DF9A4", VA = "0x3DF9A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000246")]
	public float eyeDepth
	{
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x3DE71C", Offset = "0x3DE71C", VA = "0x3DE71C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000247")]
	public float neckHeight
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x3F5A90", Offset = "0x3F5A90", VA = "0x3F5A90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000248")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184E80", Offset = "0x184E80")]
	public State state
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x3F5AB4", Offset = "0x3F5AB4", VA = "0x3F5AB4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x3F579C", Offset = "0x3F579C", VA = "0x3F579C")]
	public OVRProfile()
	{
	}
}
[Token(Token = "0x2000230")]
public class OVRTracker
{
	[Token(Token = "0x2000231")]
	public struct Frustum
	{
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float nearZ;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float farZ;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 fov;
	}

	[Token(Token = "0x17000249")]
	public bool isPresent
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x3F9734", Offset = "0x3F9734", VA = "0x3F9734")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024A")]
	public bool isPositionTracked
	{
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x3F97EC", Offset = "0x3F97EC", VA = "0x3F97EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024B")]
	public bool isEnabled
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x3F9864", Offset = "0x3F9864", VA = "0x3F9864")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x3F8478", Offset = "0x3F8478", VA = "0x3F8478")]
		set
		{
		}
	}

	[Token(Token = "0x1700024C")]
	public int count
	{
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x3F991C", Offset = "0x3F991C", VA = "0x3F991C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x3F972C", Offset = "0x3F972C", VA = "0x3F972C")]
	public OVRTracker()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x3F9AE0", Offset = "0x3F9AE0", VA = "0x3F9AE0")]
	public Frustum GetFrustum(int tracker = 0)
	{
		return default(Frustum);
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x3F9BD4", Offset = "0x3F9BD4", VA = "0x3F9BD4")]
	public OVRPose GetPose(int tracker = 0)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x3F9E74", Offset = "0x3F9E74", VA = "0x3F9E74")]
	public bool GetPoseValid(int tracker = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x3F994C", Offset = "0x3F994C", VA = "0x3F994C")]
	public bool GetPresent(int tracker = 0)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000232")]
public class OVRChromaticAberration : MonoBehaviour
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OVRInput.RawButton toggleButton;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool chromatic;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x36A728", Offset = "0x36A728", VA = "0x36A728")]
	public OVRChromaticAberration()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x36A738", Offset = "0x36A738", VA = "0x36A738")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x36A7E8", Offset = "0x36A7E8", VA = "0x36A7E8")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000233")]
public class OVRCubemapCapture : MonoBehaviour
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool autoTriggerAfterLaunch;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float autoTriggerDelay;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float autoTriggerElapse;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode triggeredByKey;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string pathName;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cubemapSize;

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x36A8EC", Offset = "0x36A8EC", VA = "0x36A8EC")]
	public OVRCubemapCapture()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x36A914", Offset = "0x36A914", VA = "0x36A914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x36AA14", Offset = "0x36AA14", VA = "0x36AA14")]
	public static void TriggerCubemapCapture(Vector3 capturePos, int cubemapSize = 2048, [Optional] string pathName)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x36AD88", Offset = "0x36AD88", VA = "0x36AD88")]
	public static void RenderIntoCubemap(Camera ownerCamera, Cubemap outCubemap)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x36B7B8", Offset = "0x36B7B8", VA = "0x36B7B8")]
	public static bool SaveCubemapCapture(Cubemap cubemap, [Optional] string pathName)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000234")]
public class OVRDebugInfo : MonoBehaviour
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject debugUIManager;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject debugUIObject;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject riftPresent;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject fps;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject ipd;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject fov;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject height;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject depth;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject resolutionEyeTexture;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject latencies;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject texts;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string strRiftPresent;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string strFPS;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string strIPD;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private string strFOV;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string strHeight;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string strDepth;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string strResolutionEyeTexture;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private string strLatencies;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float updateInterval;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float accum;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int frames;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timeLeft;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool initUIComponent;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isInited;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float offsetY;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float riftPresentTimeout;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool showVRVars;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x36CBC8", Offset = "0x36CBC8", VA = "0x36CBC8")]
	public OVRDebugInfo()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x36CBE4", Offset = "0x36CBE4", VA = "0x36CBE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x36CF00", Offset = "0x36CF00", VA = "0x36CF00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x36DBCC", Offset = "0x36DBCC", VA = "0x36DBCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x36CFDC", Offset = "0x36CFDC", VA = "0x36CFDC")]
	private void InitUIComponents()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x36D648", Offset = "0x36D648", VA = "0x36D648")]
	private void UpdateVariable()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x36D684", Offset = "0x36D684", VA = "0x36D684")]
	private void UpdateStrings()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x36E628", Offset = "0x36E628", VA = "0x36E628")]
	private void RiftPresentGUI(GameObject guiMainOBj)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x36D60C", Offset = "0x36D60C", VA = "0x36D60C")]
	private void UpdateDeviceDetection()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x36DBD8", Offset = "0x36DBD8", VA = "0x36DBD8")]
	private GameObject VariableObjectManager(GameObject gameObject, string name, float posY, string str, int fontSize)
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x36E8B0", Offset = "0x36E8B0", VA = "0x36E8B0")]
	private GameObject ComponentComposition(GameObject GO)
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x36DE9C", Offset = "0x36DE9C", VA = "0x36DE9C")]
	private void UpdateIPD()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x36DFC0", Offset = "0x36DFC0", VA = "0x36DFC0")]
	private void UpdateEyeHeightOffset()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x36E0D8", Offset = "0x36E0D8", VA = "0x36E0D8")]
	private void UpdateEyeDepthOffset()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x36E1F0", Offset = "0x36E1F0", VA = "0x36E1F0")]
	private void UpdateFOV()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x36E30C", Offset = "0x36E30C", VA = "0x36E30C")]
	private void UpdateResolutionEyeTexture()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x36E4E8", Offset = "0x36E4E8", VA = "0x36E4E8")]
	private void UpdateLatencyValues()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x36E4EC", Offset = "0x36E4EC", VA = "0x36E4EC")]
	private void UpdateFPS()
	{
	}
}
[Token(Token = "0x2000235")]
public class OVRGazePointer : MonoBehaviour
{
	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform gazeIcon;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1780A0", Offset = "0x1780A0")]
	public bool hideByDefault;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17810C", Offset = "0x17810C")]
	public float showTimeoutPeriod;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178174", Offset = "0x178174")]
	public float hideTimeoutPeriod;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1781A8", Offset = "0x1781A8")]
	public bool dimOnHideRequest;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178214", Offset = "0x178214")]
	public float depthScaleMultiplier;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform rayTransform;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17825C", Offset = "0x17825C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17825C", Offset = "0x17825C")]
	private bool <hidden>k__BackingField;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178290", Offset = "0x178290")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x178290", Offset = "0x178290")]
	private float <currentScale>k__BackingField;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float depth;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float hideUntilTime;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int positionSetsThisFrame;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastShowRequestTime;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastHideRequestTime;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1782C4", Offset = "0x1782C4")]
	public float cursorRadius;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRProgressIndicator progressIndicator;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRGazePointer _instance;

	[Token(Token = "0x1700024D")]
	public bool hidden
	{
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x6D0134", Offset = "0x6D0134", VA = "0x6D0134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1809A8", Offset = "0x1809A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x6D013C", Offset = "0x6D013C", VA = "0x6D013C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1809B8", Offset = "0x1809B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700024E")]
	public float currentScale
	{
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x6D0144", Offset = "0x6D0144", VA = "0x6D0144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1809C8", Offset = "0x1809C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x6D014C", Offset = "0x6D014C", VA = "0x6D014C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1809D8", Offset = "0x1809D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public static OVRGazePointer instance
	{
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x6D0154", Offset = "0x6D0154", VA = "0x6D0154")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000250")]
	public float visibilityStrength
	{
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x6D0420", Offset = "0x6D0420", VA = "0x6D0420")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000251")]
	public float SelectionProgress
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x6D0568", Offset = "0x6D0568", VA = "0x6D0568")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x6D0620", Offset = "0x6D0620", VA = "0x6D0620")]
		set
		{
		}
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x6D00FC", Offset = "0x6D00FC", VA = "0x6D00FC")]
	public OVRGazePointer()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x6D06D8", Offset = "0x6D06D8", VA = "0x6D06D8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x6D08C4", Offset = "0x6D08C4", VA = "0x6D08C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x6D1348", Offset = "0x6D1348", VA = "0x6D1348")]
	public void SetPosition(Vector3 pos, Vector3 normal)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x6D15F8", Offset = "0x6D15F8", VA = "0x6D15F8")]
	public void SetPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x6D1660", Offset = "0x6D1660", VA = "0x6D1660")]
	public float GetCurrentRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x6D1674", Offset = "0x6D1674", VA = "0x6D1674")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x6D1920", Offset = "0x6D1920", VA = "0x6D1920")]
	public void RequestHide()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x6D194C", Offset = "0x6D194C", VA = "0x6D194C")]
	public void RequestShow()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x6D0B20", Offset = "0x6D0B20", VA = "0x6D0B20")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x6D0F34", Offset = "0x6D0F34", VA = "0x6D0F34")]
	private void Show()
	{
	}
}
[Token(Token = "0x2000236")]
public class OVRGearVrControllerTest : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	public class BoolMonitor
	{
		[Token(Token = "0x2000238")]
		public delegate bool BoolGenerator();

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_name;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private BoolGenerator m_generator;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_prevValue;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool m_currentValue;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool m_currentValueRecentlyChanged;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_displayTimeout;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_displayTimer;

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x6D4938", Offset = "0x6D4938", VA = "0x6D4938")]
		public BoolMonitor(string name, BoolGenerator generator, float displayTimeout = 0.5f)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x6D5C04", Offset = "0x6D5C04", VA = "0x6D5C04")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x6D5CB0", Offset = "0x6D5CB0", VA = "0x6D5CB0")]
		public void AppendToStringBuilder(ref StringBuilder sb)
		{
		}
	}

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text uiText;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<BoolMonitor> monitors;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private StringBuilder data;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string prevConnected;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static BoolMonitor controllers;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1782F8", Offset = "0x1782F8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache0;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178308", Offset = "0x178308")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178318", Offset = "0x178318")]
	private static BoolMonitor.BoolGenerator <>f__am$cache2;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178328", Offset = "0x178328")]
	private static BoolMonitor.BoolGenerator <>f__am$cache3;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178338", Offset = "0x178338")]
	private static BoolMonitor.BoolGenerator <>f__am$cache4;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178348", Offset = "0x178348")]
	private static BoolMonitor.BoolGenerator <>f__am$cache5;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178358", Offset = "0x178358")]
	private static BoolMonitor.BoolGenerator <>f__am$cache6;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178368", Offset = "0x178368")]
	private static BoolMonitor.BoolGenerator <>f__am$cache7;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178378", Offset = "0x178378")]
	private static BoolMonitor.BoolGenerator <>f__am$cache8;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178388", Offset = "0x178388")]
	private static BoolMonitor.BoolGenerator <>f__am$cache9;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178398", Offset = "0x178398")]
	private static BoolMonitor.BoolGenerator <>f__am$cacheA;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1783A8", Offset = "0x1783A8")]
	private static BoolMonitor.BoolGenerator <>f__am$cacheB;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1783B8", Offset = "0x1783B8")]
	private static BoolMonitor.BoolGenerator <>f__am$cacheC;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1783C8", Offset = "0x1783C8")]
	private static BoolMonitor.BoolGenerator <>f__am$cacheD;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1783D8", Offset = "0x1783D8")]
	private static BoolMonitor.BoolGenerator <>f__am$cacheE;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1783E8", Offset = "0x1783E8")]
	private static BoolMonitor.BoolGenerator <>f__am$cacheF;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1783F8", Offset = "0x1783F8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache10;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178408", Offset = "0x178408")]
	private static BoolMonitor.BoolGenerator <>f__am$cache11;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178418", Offset = "0x178418")]
	private static BoolMonitor.BoolGenerator <>f__am$cache12;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178428", Offset = "0x178428")]
	private static BoolMonitor.BoolGenerator <>f__am$cache13;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178438", Offset = "0x178438")]
	private static BoolMonitor.BoolGenerator <>f__am$cache14;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178448", Offset = "0x178448")]
	private static BoolMonitor.BoolGenerator <>f__am$cache15;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178458", Offset = "0x178458")]
	private static BoolMonitor.BoolGenerator <>f__am$cache16;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178468", Offset = "0x178468")]
	private static BoolMonitor.BoolGenerator <>f__am$cache17;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178478", Offset = "0x178478")]
	private static BoolMonitor.BoolGenerator <>f__am$cache18;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178488", Offset = "0x178488")]
	private static BoolMonitor.BoolGenerator <>f__am$cache19;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178498", Offset = "0x178498")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1A;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1784A8", Offset = "0x1784A8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1B;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1784B8", Offset = "0x1784B8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1C;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1784C8", Offset = "0x1784C8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1D;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1784D8", Offset = "0x1784D8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1E;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1784E8", Offset = "0x1784E8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache1F;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1784F8", Offset = "0x1784F8")]
	private static BoolMonitor.BoolGenerator <>f__am$cache20;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178508", Offset = "0x178508")]
	private static BoolMonitor.BoolGenerator <>f__am$cache21;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178518", Offset = "0x178518")]
	private static BoolMonitor.BoolGenerator <>f__am$cache22;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178528", Offset = "0x178528")]
	private static BoolMonitor.BoolGenerator <>f__am$cache23;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178538", Offset = "0x178538")]
	private static BoolMonitor.BoolGenerator <>f__am$cache24;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178548", Offset = "0x178548")]
	private static BoolMonitor.BoolGenerator <>f__am$cache25;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x6D196C", Offset = "0x6D196C", VA = "0x6D196C")]
	public OVRGearVrControllerTest()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x6D1974", Offset = "0x6D1974", VA = "0x6D1974")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x6D49FC", Offset = "0x6D49FC", VA = "0x6D49FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x6D6C54", Offset = "0x6D6C54", VA = "0x6D6C54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1809E8", Offset = "0x1809E8")]
	private static bool <Start>m__0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x6D6EE0", Offset = "0x6D6EE0", VA = "0x6D6EE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1809F8", Offset = "0x1809F8")]
	private static bool <Start>m__1()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x6D6FEC", Offset = "0x6D6FEC", VA = "0x6D6FEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A08", Offset = "0x180A08")]
	private static bool <Start>m__2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x6D70F8", Offset = "0x6D70F8", VA = "0x6D70F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A18", Offset = "0x180A18")]
	private static bool <Start>m__3()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x6D7204", Offset = "0x6D7204", VA = "0x6D7204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A28", Offset = "0x180A28")]
	private static bool <Start>m__4()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x6D7310", Offset = "0x6D7310", VA = "0x6D7310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A38", Offset = "0x180A38")]
	private static bool <Start>m__5()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x6D741C", Offset = "0x6D741C", VA = "0x6D741C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A48", Offset = "0x180A48")]
	private static bool <Start>m__6()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x6D7528", Offset = "0x6D7528", VA = "0x6D7528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A58", Offset = "0x180A58")]
	private static bool <Start>m__7()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x6D75A8", Offset = "0x6D75A8", VA = "0x6D75A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A68", Offset = "0x180A68")]
	private static bool <Start>m__8()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x6D7628", Offset = "0x6D7628", VA = "0x6D7628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A78", Offset = "0x180A78")]
	private static bool <Start>m__9()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x6D76A8", Offset = "0x6D76A8", VA = "0x6D76A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A88", Offset = "0x180A88")]
	private static bool <Start>m__A()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x6D7728", Offset = "0x6D7728", VA = "0x6D7728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180A98", Offset = "0x180A98")]
	private static bool <Start>m__B()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x6D77A8", Offset = "0x6D77A8", VA = "0x6D77A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180AA8", Offset = "0x180AA8")]
	private static bool <Start>m__C()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x6D7828", Offset = "0x6D7828", VA = "0x6D7828")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180AB8", Offset = "0x180AB8")]
	private static bool <Start>m__D()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x6D78A8", Offset = "0x6D78A8", VA = "0x6D78A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180AC8", Offset = "0x180AC8")]
	private static bool <Start>m__E()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x6D7928", Offset = "0x6D7928", VA = "0x6D7928")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180AD8", Offset = "0x180AD8")]
	private static bool <Start>m__F()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x6D79A8", Offset = "0x6D79A8", VA = "0x6D79A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180AE8", Offset = "0x180AE8")]
	private static bool <Start>m__10()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x6D7A28", Offset = "0x6D7A28", VA = "0x6D7A28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180AF8", Offset = "0x180AF8")]
	private static bool <Start>m__11()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x6D7AA8", Offset = "0x6D7AA8", VA = "0x6D7AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B08", Offset = "0x180B08")]
	private static bool <Start>m__12()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x6D7B28", Offset = "0x6D7B28", VA = "0x6D7B28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B18", Offset = "0x180B18")]
	private static bool <Start>m__13()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x6D7BA8", Offset = "0x6D7BA8", VA = "0x6D7BA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B28", Offset = "0x180B28")]
	private static bool <Start>m__14()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x6D7C28", Offset = "0x6D7C28", VA = "0x6D7C28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B38", Offset = "0x180B38")]
	private static bool <Start>m__15()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x6D7CA8", Offset = "0x6D7CA8", VA = "0x6D7CA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B48", Offset = "0x180B48")]
	private static bool <Start>m__16()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x6D7D28", Offset = "0x6D7D28", VA = "0x6D7D28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B58", Offset = "0x180B58")]
	private static bool <Start>m__17()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x6D7DA8", Offset = "0x6D7DA8", VA = "0x6D7DA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B68", Offset = "0x180B68")]
	private static bool <Start>m__18()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x6D7E28", Offset = "0x6D7E28", VA = "0x6D7E28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B78", Offset = "0x180B78")]
	private static bool <Start>m__19()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x6D7EA8", Offset = "0x6D7EA8", VA = "0x6D7EA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B88", Offset = "0x180B88")]
	private static bool <Start>m__1A()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x6D7F28", Offset = "0x6D7F28", VA = "0x6D7F28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180B98", Offset = "0x180B98")]
	private static bool <Start>m__1B()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x6D7FA8", Offset = "0x6D7FA8", VA = "0x6D7FA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180BA8", Offset = "0x180BA8")]
	private static bool <Start>m__1C()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x6D8028", Offset = "0x6D8028", VA = "0x6D8028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180BB8", Offset = "0x180BB8")]
	private static bool <Start>m__1D()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x6D8134", Offset = "0x6D8134", VA = "0x6D8134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180BC8", Offset = "0x180BC8")]
	private static bool <Start>m__1E()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x6D8240", Offset = "0x6D8240", VA = "0x6D8240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180BD8", Offset = "0x180BD8")]
	private static bool <Start>m__1F()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x6D834C", Offset = "0x6D834C", VA = "0x6D834C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180BE8", Offset = "0x180BE8")]
	private static bool <Start>m__20()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x6D83CC", Offset = "0x6D83CC", VA = "0x6D83CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180BF8", Offset = "0x180BF8")]
	private static bool <Start>m__21()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x6D844C", Offset = "0x6D844C", VA = "0x6D844C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C08", Offset = "0x180C08")]
	private static bool <Start>m__22()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x6D84CC", Offset = "0x6D84CC", VA = "0x6D84CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C18", Offset = "0x180C18")]
	private static bool <Start>m__23()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x6D854C", Offset = "0x6D854C", VA = "0x6D854C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C28", Offset = "0x180C28")]
	private static bool <Start>m__24()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x6D85CC", Offset = "0x6D85CC", VA = "0x6D85CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C38", Offset = "0x180C38")]
	private static bool <Start>m__25()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x6D864C", Offset = "0x6D864C", VA = "0x6D864C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C48", Offset = "0x180C48")]
	private static bool <controllers>m__26()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000239")]
public class OVRGrabbable : MonoBehaviour
{
	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	protected bool m_allowOffhandGrab;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	protected bool m_snapPosition;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[SerializeField]
	protected bool m_snapOrientation;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	protected Transform m_snapOffset;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	protected Collider[] m_grabPoints;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_grabbedKinematic;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected Collider m_grabbedCollider;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected OVRGrabber m_grabbedBy;

	[Token(Token = "0x17000252")]
	public bool allowOffhandGrab
	{
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x6D8A4C", Offset = "0x6D8A4C", VA = "0x6D8A4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000253")]
	public bool isGrabbed
	{
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x6D8A54", Offset = "0x6D8A54", VA = "0x6D8A54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000254")]
	public bool snapPosition
	{
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x6D8AE0", Offset = "0x6D8AE0", VA = "0x6D8AE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000255")]
	public bool snapOrientation
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x6D8AE8", Offset = "0x6D8AE8", VA = "0x6D8AE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000256")]
	public Transform snapOffset
	{
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x6D8AF0", Offset = "0x6D8AF0", VA = "0x6D8AF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000257")]
	public OVRGrabber grabbedBy
	{
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x6D8AF8", Offset = "0x6D8AF8", VA = "0x6D8AF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000258")]
	public Transform grabbedTransform
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x6D8B00", Offset = "0x6D8B00", VA = "0x6D8B00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000259")]
	public Rigidbody grabbedRigidbody
	{
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x6D8B2C", Offset = "0x6D8B2C", VA = "0x6D8B2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025A")]
	public Collider[] grabPoints
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x6D8B58", Offset = "0x6D8B58", VA = "0x6D8B58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x6D8A3C", Offset = "0x6D8A3C", VA = "0x6D8A3C")]
	public OVRGrabbable()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x6D8B60", Offset = "0x6D8B60", VA = "0x6D8B60", Slot = "4")]
	public virtual void GrabBegin(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x6D8C18", Offset = "0x6D8C18", VA = "0x6D8C18", Slot = "5")]
	public virtual void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x6D8D64", Offset = "0x6D8D64", VA = "0x6D8D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x6D8F08", Offset = "0x6D8F08", VA = "0x6D8F08", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x6D8F90", Offset = "0x6D8F90", VA = "0x6D8F90")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x200023A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172754", Offset = "0x172754")]
public class OVRGrabber : MonoBehaviour
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float grabBegin;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float grabEnd;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	protected bool m_parentHeldObject;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform m_gripTransform;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected Collider[] m_grabVolumes;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected OVRInput.Controller m_controller;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected Transform m_parentTransform;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_grabVolumeEnabled;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected Vector3 m_lastPos;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Quaternion m_lastRot;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Quaternion m_anchorOffsetRotation;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3 m_anchorOffsetPosition;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float m_prevFlex;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected OVRGrabbable m_grabbedObj;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected Vector3 m_grabbedObjectPosOff;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Quaternion m_grabbedObjectRotOff;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Dictionary<OVRGrabbable, int> m_grabCandidates;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected bool operatingWithoutOVRCameraRig;

	[Token(Token = "0x1700025B")]
	public OVRGrabbable grabbedObject
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x6D91E0", Offset = "0x6D91E0", VA = "0x6D91E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x6D9130", Offset = "0x6D9130", VA = "0x6D9130")]
	public OVRGrabber()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x6D9044", Offset = "0x6D9044", VA = "0x6D9044")]
	public void ForceRelease(OVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x6D951C", Offset = "0x6D951C", VA = "0x6D951C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x6D9830", Offset = "0x6D9830", VA = "0x6D9830", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x6D9B64", Offset = "0x6D9B64", VA = "0x6D9B64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x6D9B74", Offset = "0x6D9B74", VA = "0x6D9B74")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x6D9FC0", Offset = "0x6D9FC0", VA = "0x6D9FC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x6DA05C", Offset = "0x6DA05C", VA = "0x6DA05C")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x6DA1D4", Offset = "0x6DA1D4", VA = "0x6DA1D4")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x6D9F6C", Offset = "0x6D9F6C", VA = "0x6D9F6C")]
	protected void CheckForGrabOrRelease(float prevFlex)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x6DA38C", Offset = "0x6DA38C", VA = "0x6DA38C", Slot = "6")]
	protected virtual void GrabBegin()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x6DAF08", Offset = "0x6DAF08", VA = "0x6DAF08", Slot = "7")]
	protected virtual void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x6D91E8", Offset = "0x6D91E8", VA = "0x6D91E8")]
	protected void GrabEnd()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x6DB1BC", Offset = "0x6DB1BC", VA = "0x6DB1BC")]
	protected void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x6DB294", Offset = "0x6DB294", VA = "0x6DB294", Slot = "8")]
	protected virtual void GrabVolumeEnable(bool enabled)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x6DB3C8", Offset = "0x6DB3C8", VA = "0x6DB3C8", Slot = "9")]
	protected virtual void OffhandGrabbed(OVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x6DB4D0", Offset = "0x6DB4D0", VA = "0x6DB4D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C58", Offset = "0x180C58")]
	private void <Awake>m__0(OVRCameraRig r)
	{
	}
}
[Token(Token = "0x200023B")]
public class OVRGridCube : MonoBehaviour
{
	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public KeyCode GridKey;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject CubeGrid;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool CubeGridOn;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool CubeSwitchColorOld;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	private bool CubeSwitchColor;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int gridSizeX;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int gridSizeY;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int gridSizeZ;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float gridScale;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cubeScale;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private OVRCameraRig CameraController;

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x6DB4D4", Offset = "0x6DB4D4", VA = "0x6DB4D4")]
	public OVRGridCube()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x6DB50C", Offset = "0x6DB50C", VA = "0x6DB50C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x6DB7C8", Offset = "0x6DB7C8", VA = "0x6DB7C8")]
	public void SetOVRCameraController(ref OVRCameraRig cameraController)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x6DB510", Offset = "0x6DB510", VA = "0x6DB510")]
	private void UpdateCubeGrid()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x6DB7D4", Offset = "0x6DB7D4", VA = "0x6DB7D4")]
	private void CreateCubeGrid()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x6DBE04", Offset = "0x6DBE04", VA = "0x6DBE04")]
	private void CubeGridSwitchColor(bool CubeSwitchColor)
	{
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x200023C")]
	public class OVRInputModule : PointerInputModule
	{
		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1727CC", Offset = "0x1727CC")]
		public enum InputMode
		{
			[Token(Token = "0x4000BCF")]
			Mouse,
			[Token(Token = "0x4000BD0")]
			Buttons
		}

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1785F8", Offset = "0x1785F8")]
		public Transform rayTransform;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17862C", Offset = "0x17862C")]
		public OVRInput.Button joyPadClickButton;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17867C", Offset = "0x17867C")]
		public KeyCode gazeClickKey;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1786D0", Offset = "0x1786D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1786D0", Offset = "0x1786D0")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178730", Offset = "0x178730")]
		public bool matchNormalOnPhysicsColliders;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x178764", Offset = "0x178764")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178764", Offset = "0x178764")]
		public bool useRightStickScroll;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178800", Offset = "0x178800")]
		public float rightStickDeadZone;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x178868", Offset = "0x178868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178868", Offset = "0x178868")]
		public bool useSwipeScroll;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178900", Offset = "0x178900")]
		public float swipeDragThreshold;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178964", Offset = "0x178964")]
		public float swipeDragScale;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1789BC", Offset = "0x1789BC")]
		public bool InvertSwipeXAxis;

		[NonSerialized]
		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x178A04", Offset = "0x178A04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178A04", Offset = "0x178A04")]
		public float angleDragThreshold;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_NextAction;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x178A98", Offset = "0x178A98")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Dictionary<int, OVRPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x1700025C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x184E90", Offset = "0x184E90")]
		public InputMode inputMode
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x385F98", Offset = "0x385F98", VA = "0x385F98")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x1700025D")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x385FA0", Offset = "0x385FA0", VA = "0x385FA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x385FA8", Offset = "0x385FA8", VA = "0x385FA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x385FB0", Offset = "0x385FB0", VA = "0x385FB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x385FB8", Offset = "0x385FB8", VA = "0x385FB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public string horizontalAxis
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x385FC0", Offset = "0x385FC0", VA = "0x385FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x385FC8", Offset = "0x385FC8", VA = "0x385FC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public string verticalAxis
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x385FD0", Offset = "0x385FD0", VA = "0x385FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x385FD8", Offset = "0x385FD8", VA = "0x385FD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public string submitButton
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x385FE0", Offset = "0x385FE0", VA = "0x385FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x385FE8", Offset = "0x385FE8", VA = "0x385FE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public string cancelButton
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x385FF0", Offset = "0x385FF0", VA = "0x385FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x385FF8", Offset = "0x385FF8", VA = "0x385FF8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x385E54", Offset = "0x385E54", VA = "0x385E54")]
		protected OVRInputModule()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x386000", Offset = "0x386000", VA = "0x386000", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x3860C0", Offset = "0x3860C0", VA = "0x3860C0", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x3860D8", Offset = "0x3860D8", VA = "0x3860D8", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x386280", Offset = "0x386280", VA = "0x386280", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x386460", Offset = "0x386460", VA = "0x386460", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x3867C0", Offset = "0x3867C0", VA = "0x3867C0")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x3869F4", Offset = "0x3869F4", VA = "0x3869F4")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x386A44", Offset = "0x386A44", VA = "0x386A44")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x386B68", Offset = "0x386B68", VA = "0x386B68")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x386DDC", Offset = "0x386DDC", VA = "0x386DDC")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x386F60", Offset = "0x386F60", VA = "0x386F60")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x387CA8", Offset = "0x387CA8", VA = "0x387CA8")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x388130", Offset = "0x388130", VA = "0x388130", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x3880E0", Offset = "0x3880E0", VA = "0x3880E0")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x3881F0", Offset = "0x3881F0", VA = "0x3881F0")]
		protected void CopyFromTo(OVRPointerEventData from, OVRPointerEventData to)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x388420", Offset = "0x388420", VA = "0x388420")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x3885F4", Offset = "0x3885F4", VA = "0x3885F4")]
		protected bool GetPointerData(int id, out OVRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x386480", Offset = "0x386480", VA = "0x386480")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x38872C", Offset = "0x38872C", VA = "0x38872C")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x38895C", Offset = "0x38895C", VA = "0x38895C", Slot = "30")]
		protected virtual MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x389B14", Offset = "0x389B14", VA = "0x389B14")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x38A174", Offset = "0x38A174", VA = "0x38A174")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x3881B4", Offset = "0x3881B4", VA = "0x3881B4")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x38A700", Offset = "0x38A700", VA = "0x38A700")]
		protected Vector2 SwipeAdjustedPosition(Vector2 originalPosition, PointerEventData pointerEvent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x38A87C", Offset = "0x38A87C", VA = "0x38A87C", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x38AD50", Offset = "0x38AD50", VA = "0x38AD50", Slot = "31")]
		protected virtual PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x3893A4", Offset = "0x3893A4", VA = "0x3893A4")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
}
[Token(Token = "0x200023E")]
public class OVRModeParms : MonoBehaviour
{
	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OVRInput.RawButton resetButton;

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x6F0D80", Offset = "0x6F0D80", VA = "0x6F0D80")]
	public OVRModeParms()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x6F0D90", Offset = "0x6F0D90", VA = "0x6F0D90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x6F0E60", Offset = "0x6F0E60", VA = "0x6F0E60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x6F0F34", Offset = "0x6F0F34", VA = "0x6F0F34")]
	private void TestPowerStateMode()
	{
	}
}
[Token(Token = "0x200023F")]
public class OVRMonoscopic : MonoBehaviour
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OVRInput.RawButton toggleButton;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool monoscopic;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x6F0FFC", Offset = "0x6F0FFC", VA = "0x6F0FFC")]
	public OVRMonoscopic()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x6F100C", Offset = "0x6F100C", VA = "0x6F100C")]
	private void Update()
	{
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x172804", Offset = "0x172804")]
	public class OVRPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4000BD4")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sortOrder;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178B50", Offset = "0x178B50")]
		private static Comparison<RaycastHit> <>f__am$cache0;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178B60", Offset = "0x178B60")]
		private static Comparison<RaycastHit> <>f__am$cache1;

		[Token(Token = "0x17000263")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x38AECC", Offset = "0x38AECC", VA = "0x38AECC", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public virtual int depth
		{
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x38AF50", Offset = "0x38AF50", VA = "0x38AF50", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000265")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x38B040", Offset = "0x38B040", VA = "0x38B040", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000266")]
		public int finalEventMask
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x38B048", Offset = "0x38B048", VA = "0x38B048")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000267")]
		public LayerMask eventMask
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x38B140", Offset = "0x38B140", VA = "0x38B140")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x38B148", Offset = "0x38B148", VA = "0x38B148")]
			set
			{
			}
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x38AE98", Offset = "0x38AE98", VA = "0x38AE98")]
		protected OVRPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x38B150", Offset = "0x38B150", VA = "0x38B150", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x3894F4", Offset = "0x3894F4", VA = "0x3894F4")]
		public void Spherecast(PointerEventData eventData, List<RaycastResult> resultAppendList, float radius)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x389A28", Offset = "0x389A28", VA = "0x389A28")]
		public Vector2 GetScreenPos(Vector3 worldPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x38B72C", Offset = "0x38B72C", VA = "0x38B72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C68", Offset = "0x180C68")]
		private static int <Raycast>m__0(RaycastHit r1, RaycastHit r2)
		{
			return default(int);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x38B7F8", Offset = "0x38B7F8", VA = "0x38B7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C78", Offset = "0x180C78")]
		private static int <Spherecast>m__1(RaycastHit r1, RaycastHit r2)
		{
			return default(int);
		}
	}
}
[Token(Token = "0x2000241")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x17287C", Offset = "0x17287C")]
public class OVRPlayerController : MonoBehaviour
{
	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float Acceleration;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Damping;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float BackAndSideDampen;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float JumpForce;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAmount;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationRatchet;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178B70", Offset = "0x178B70")]
	public bool SnapRotation;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178BA4", Offset = "0x178BA4")]
	public int FixedSpeedSteps;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool HmdResetsY;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool HmdRotatesY;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GravityModifier;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useProfileData;

	[NonSerialized]
	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CameraHeight;

	[NonSerialized]
	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool Teleported;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool EnableRotation;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected CharacterController Controller;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected OVRCameraRig CameraRig;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float MoveScale;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 MoveThrottle;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float FallSpeed;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private OVRPose? InitialPose;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178C74", Offset = "0x178C74")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x178C74", Offset = "0x178C74")]
	private float <InitialYRotation>k__BackingField;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float MoveScaleMultiplier;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float RotationScaleMultiplier;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool SkipMouseRotation;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool HaltUpdateMovement;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool prevHatLeft;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool prevHatRight;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float SimulationRate;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float buttonRotation;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x17000268")]
	public float InitialYRotation
	{
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x3DE5D0", Offset = "0x3DE5D0", VA = "0x3DE5D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C88", Offset = "0x180C88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x3DE5D8", Offset = "0x3DE5D8", VA = "0x3DE5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180C98", Offset = "0x180C98")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<Transform> TransformUpdated
	{
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x3DDF88", Offset = "0x3DDF88", VA = "0x3DDF88")]
		add
		{
		}
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x3DE094", Offset = "0x3DE094", VA = "0x3DE094")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x3DE1A0", Offset = "0x3DE1A0", VA = "0x3DE1A0")]
		add
		{
		}
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x3DE2AC", Offset = "0x3DE2AC", VA = "0x3DE2AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x3DE3B8", Offset = "0x3DE3B8", VA = "0x3DE3B8")]
		add
		{
		}
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x3DE4C4", Offset = "0x3DE4C4", VA = "0x3DE4C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x3DDE68", Offset = "0x3DDE68", VA = "0x3DDE68")]
	public OVRPlayerController()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x3DE5E0", Offset = "0x3DE5E0", VA = "0x3DE5E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x3DE794", Offset = "0x3DE794", VA = "0x3DE794")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x3DE9FC", Offset = "0x3DE9FC", VA = "0x3DE9FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x3DEB88", Offset = "0x3DEB88", VA = "0x3DEB88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x3DED14", Offset = "0x3DED14", VA = "0x3DED14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x3DED64", Offset = "0x3DED64", VA = "0x3DED64", Slot = "4")]
	protected virtual void UpdateController()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x3DFA1C", Offset = "0x3DFA1C", VA = "0x3DFA1C", Slot = "5")]
	public virtual void UpdateMovement()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x3E0D88", Offset = "0x3E0D88", VA = "0x3E0D88")]
	public void UpdateTransform(OVRCameraRig rig)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x3E1034", Offset = "0x3E1034", VA = "0x3E1034")]
	public bool Jump()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x3E118C", Offset = "0x3E118C", VA = "0x3E118C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x3E1260", Offset = "0x3E1260", VA = "0x3E1260")]
	public void GetMoveScaleMultiplier(ref float moveScaleMultiplier)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x3E126C", Offset = "0x3E126C", VA = "0x3E126C")]
	public void SetMoveScaleMultiplier(float moveScaleMultiplier)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x3E1274", Offset = "0x3E1274", VA = "0x3E1274")]
	public void GetRotationScaleMultiplier(ref float rotationScaleMultiplier)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x3E1280", Offset = "0x3E1280", VA = "0x3E1280")]
	public void SetRotationScaleMultiplier(float rotationScaleMultiplier)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x3E1288", Offset = "0x3E1288", VA = "0x3E1288")]
	public void GetSkipMouseRotation(ref bool skipMouseRotation)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x3E1294", Offset = "0x3E1294", VA = "0x3E1294")]
	public void SetSkipMouseRotation(bool skipMouseRotation)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x3E129C", Offset = "0x3E129C", VA = "0x3E129C")]
	public void GetHaltUpdateMovement(ref bool haltUpdateMovement)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x3E12A8", Offset = "0x3E12A8", VA = "0x3E12A8")]
	public void SetHaltUpdateMovement(bool haltUpdateMovement)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x3E12B0", Offset = "0x3E12B0", VA = "0x3E12B0")]
	public void ResetOrientation()
	{
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000242")]
	public class OVRPointerEventData : PointerEventData
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Ray worldSpaceRay;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Vector2 swipeStart;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x388724", Offset = "0x388724", VA = "0x388724")]
		public OVRPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x38B8C4", Offset = "0x38B8C4", VA = "0x38B8C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000243")]
	public static class PointerEventDataExtension
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x387B6C", Offset = "0x387B6C", VA = "0x387B6C")]
		public static bool IsVRPointer(this PointerEventData pointerEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x38B67C", Offset = "0x38B67C", VA = "0x38B67C")]
		public static Ray GetRay(this PointerEventData pointerEventData)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x38A65C", Offset = "0x38A65C", VA = "0x38A65C")]
		public static Vector2 GetSwipeStart(this PointerEventData pointerEventData)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x387C00", Offset = "0x387C00", VA = "0x387C00")]
		public static void SetSwipeStart(this PointerEventData pointerEventData, Vector2 start)
		{
		}
	}
}
[Token(Token = "0x2000244")]
public class OVRProgressIndicator : MonoBehaviour
{
	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MeshRenderer progressImage;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x178CA8", Offset = "0x178CA8")]
	public float currentProgress;

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x3F5ABC", Offset = "0x3F5ABC", VA = "0x3F5ABC")]
	public OVRProgressIndicator()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x3F5AD0", Offset = "0x3F5AD0", VA = "0x3F5AD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x3F5B00", Offset = "0x3F5B00", VA = "0x3F5B00")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000245")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172904", Offset = "0x172904")]
public class OVRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
{
	[Token(Token = "0x2000246")]
	private struct RaycastHit
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Graphic graphic;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 worldPos;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool fromMouse;
	}

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178CC0", Offset = "0x178CC0")]
	public GameObject pointer;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int sortOrder;

	[NonSerialized]
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas m_Canvas;

	[NonSerialized]
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<RaycastHit> m_RaycastResults;

	[NonSerialized]
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<RaycastHit> s_SortedGraphics;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178D14", Offset = "0x178D14")]
	private static Comparison<RaycastHit> <>f__am$cache0;

	[Token(Token = "0x17000269")]
	private Canvas canvas
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x3F5C6C", Offset = "0x3F5C6C", VA = "0x3F5C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026A")]
	public override Camera eventCamera
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x3F5D20", Offset = "0x3F5D20", VA = "0x3F5D20", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026B")]
	public override int sortOrderPriority
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x3F5D50", Offset = "0x3F5D50", VA = "0x3F5D50", Slot = "20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x3F5BB4", Offset = "0x3F5BB4", VA = "0x3F5BB4")]
	protected OVRRaycaster()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x3F5D58", Offset = "0x3F5D58", VA = "0x3F5D58")]
	private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x3F6E84", Offset = "0x3F6E84", VA = "0x3F6E84", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x3F6EF4", Offset = "0x3F6EF4", VA = "0x3F6EF4")]
	public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x3F66B8", Offset = "0x3F66B8", VA = "0x3F66B8")]
	private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x3F77E0", Offset = "0x3F77E0", VA = "0x3F77E0")]
	public Vector2 GetScreenPosition(RaycastResult raycastResult)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x3F71A0", Offset = "0x3F71A0", VA = "0x3F71A0")]
	private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x3F78CC", Offset = "0x3F78CC", VA = "0x3F78CC")]
	public bool IsFocussed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x3F7A4C", Offset = "0x3F7A4C", VA = "0x3F7A4C", Slot = "22")]
	public void OnPointerEnter(PointerEventData e)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x3F7BE4", Offset = "0x3F7BE4", VA = "0x3F7BE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180CE8", Offset = "0x180CE8")]
	private static int <GraphicRaycast>m__0(RaycastHit g1, RaycastHit g2)
	{
		return default(int);
	}
}
namespace Assets.OVR.Scripts
{
	[Token(Token = "0x2000247")]
	public class Record
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string category;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string message;

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x42DDB0", Offset = "0x42DDB0", VA = "0x42DDB0")]
		public Record(string cat, string msg)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class RangedRecord : Record
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float value;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x42DDD8", Offset = "0x42DDD8", VA = "0x42DDD8")]
		public RangedRecord(string cat, string msg, float val, float minVal, float maxVal)
		{
		}
	}
	[Token(Token = "0x2000249")]
	public delegate void FixMethodDelegate(UnityEngine.Object obj, bool isLastInSet, int selectedIndex);
	[Token(Token = "0x200024A")]
	public class FixRecord : Record
	{
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FixMethodDelegate fixMethod;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Object targetObject;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] buttonNames;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool complete;

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x42DD68", Offset = "0x42DD68", VA = "0x42DD68")]
		public FixRecord(string cat, string msg, FixMethodDelegate fix, UnityEngine.Object target, string[] buttons)
		{
		}
	}
}
[Token(Token = "0x200024B")]
public class OVRResetOrientation : MonoBehaviour
{
	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OVRInput.RawButton resetButton;

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x3F7C54", Offset = "0x3F7C54", VA = "0x3F7C54")]
	public OVRResetOrientation()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x3F7C64", Offset = "0x3F7C64", VA = "0x3F7C64")]
	private void Update()
	{
	}
}
[Token(Token = "0x200024C")]
public class OVRSceneSampleController : MonoBehaviour
{
	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public KeyCode quitKey;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture fadeInTexture;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float speedRotationIncrement;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPlayerController playerController;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRCameraRig cameraController;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string layerName;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool visionMode;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRGridCube gridCube;

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x3F7D4C", Offset = "0x3F7D4C", VA = "0x3F7D4C")]
	public OVRSceneSampleController()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x3F7DD4", Offset = "0x3F7DD4", VA = "0x3F7DD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x3F7FF4", Offset = "0x3F7FF4", VA = "0x3F7FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x3F8114", Offset = "0x3F8114", VA = "0x3F8114")]
	private void Update()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x3F82B8", Offset = "0x3F82B8", VA = "0x3F82B8")]
	private void UpdateVisionMode()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x3F8378", Offset = "0x3F8378", VA = "0x3F8378")]
	private void UpdateSpeedAndRotationScaleMultiplier()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x3F8208", Offset = "0x3F8208", VA = "0x3F8208")]
	private void UpdateRecenterPose()
	{
	}
}
[Token(Token = "0x200024D")]
public class OVRScreenFade : MonoBehaviour
{
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B34", Offset = "0x173B34")]
	private sealed class <Fade>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float startAlpha;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float endAlpha;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal OVRScreenFade $this;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170004EF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600251A")]
			[Address(RVA = "0x3F9480", Offset = "0x3F9480", VA = "0x3F9480", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600251B")]
			[Address(RVA = "0x3F9488", Offset = "0x3F9488", VA = "0x3F9488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x3F92C4", Offset = "0x3F92C4", VA = "0x3F92C4")]
		[DebuggerHidden]
		public <Fade>c__Iterator0()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x3F92CC", Offset = "0x3F92CC", VA = "0x3F92CC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x3F9490", Offset = "0x3F9490", VA = "0x3F9490", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x3F94A4", Offset = "0x3F94A4", VA = "0x3F94A4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178D24", Offset = "0x178D24")]
	public float fadeTime;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x178D60", Offset = "0x178D60")]
	public Color fadeColor;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fadeOnStart;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int renderQueue;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float uiFadeAlpha;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Material fadeMaterial;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isFading;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178DAC", Offset = "0x178DAC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x178DAC", Offset = "0x178DAC")]
	private float <currentAlpha>k__BackingField;

	[Token(Token = "0x1700026C")]
	public float currentAlpha
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x3F85B4", Offset = "0x3F85B4", VA = "0x3F85B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180CF8", Offset = "0x180CF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x3F85BC", Offset = "0x3F85BC", VA = "0x3F85BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180D08", Offset = "0x180D08")]
		private set
		{
		}
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x3F8534", Offset = "0x3F8534", VA = "0x3F8534")]
	public OVRScreenFade()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x3F85C4", Offset = "0x3F85C4", VA = "0x3F85C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x3F8D14", Offset = "0x3F8D14", VA = "0x3F8D14")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x3F8E08", Offset = "0x3F8E08", VA = "0x3F8E08")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x3F8E34", Offset = "0x3F8E34", VA = "0x3F8E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x3F8E70", Offset = "0x3F8E70", VA = "0x3F8E70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x3F8E88", Offset = "0x3F8E88", VA = "0x3F8E88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x3F9060", Offset = "0x3F9060", VA = "0x3F9060")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x3F8D0C", Offset = "0x3F8D0C", VA = "0x3F8D0C")]
	public void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x3F8D40", Offset = "0x3F8D40", VA = "0x3F8D40")]
	[DebuggerHidden]
	private IEnumerator Fade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x3F90F4", Offset = "0x3F90F4", VA = "0x3F90F4")]
	private void SetMaterialAlpha()
	{
	}
}
[Token(Token = "0x200024E")]
public class OVRTrackedRemote : MonoBehaviour
{
	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject m_modelGearVrController;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject m_modelOculusGoController;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OVRInput.Controller m_controller;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isOculusGo;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x3F952C", Offset = "0x3F952C", VA = "0x3F952C")]
	public OVRTrackedRemote()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x3F9534", Offset = "0x3F9534", VA = "0x3F9534")]
	private void Start()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x3F9600", Offset = "0x3F9600", VA = "0x3F9600")]
	private void Update()
	{
	}
}
[Token(Token = "0x200024F")]
public class OVRWaitCursor : MonoBehaviour
{
	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 rotateSpeeds;

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x3FA008", Offset = "0x3FA008", VA = "0x3FA008")]
	public OVRWaitCursor()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x3FA068", Offset = "0x3FA068", VA = "0x3FA068")]
	private void Update()
	{
	}
}
namespace OvrTouch.Controllers
{
	[Token(Token = "0x2000250")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x2000251")]
		private enum AnimParamId
		{
			[Token(Token = "0x4000C33")]
			Button1,
			[Token(Token = "0x4000C34")]
			Button2,
			[Token(Token = "0x4000C35")]
			Trigger,
			[Token(Token = "0x4000C36")]
			Grip,
			[Token(Token = "0x4000C37")]
			JoyX,
			[Token(Token = "0x4000C38")]
			JoyY,
			[Token(Token = "0x4000C39")]
			Count
		}

		[Token(Token = "0x2000252")]
		private static class Const
		{
			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly string[] AnimParamNames;
		}

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private HandednessId m_handedness;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_meshRoot;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_enableControllerAnimations;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedController m_trackedController;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] m_animParamIndices;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x2B0988", Offset = "0x2B0988", VA = "0x2B0988")]
		public TouchController()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x2B0A04", Offset = "0x2B0A04", VA = "0x2B0A04")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x2B0A58", Offset = "0x2B0A58", VA = "0x2B0A58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x2B0DA0", Offset = "0x2B0DA0", VA = "0x2B0DA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x2B10EC", Offset = "0x2B10EC", VA = "0x2B10EC")]
		private void SetAnimParam(AnimParamId paramId, float paramValue)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public enum HandednessId
	{
		[Token(Token = "0x4000C3C")]
		Left,
		[Token(Token = "0x4000C3D")]
		Right
	}
	[Token(Token = "0x2000254")]
	public class TrackedController : MonoBehaviour
	{
		[Token(Token = "0x2000255")]
		private static class Const
		{
			[Token(Token = "0x4000C4A")]
			public const float TriggerDebounceTime = 0.05f;

			[Token(Token = "0x4000C4B")]
			public const float ThumbDebounceTime = 0.15f;
		}

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private HandednessId m_handedness;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_trackedTransform;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_initialized;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRInput.Controller m_controllerType;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_point;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool m_thumbsUp;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_lastPoint;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_lastNonPoint;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_lastThumb;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_lastNonThumb;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_hapticDuration;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_hapticStartTime;

		[Token(Token = "0x1700026D")]
		public HandednessId Handedness
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x2B16D0", Offset = "0x2B16D0", VA = "0x2B16D0")]
			get
			{
				return default(HandednessId);
			}
		}

		[Token(Token = "0x1700026E")]
		public bool IsLeft
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x2B1914", Offset = "0x2B1914", VA = "0x2B1914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026F")]
		public bool IsPoint
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x2B1928", Offset = "0x2B1928", VA = "0x2B1928")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		public bool IsThumbsUp
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x2B1930", Offset = "0x2B1930", VA = "0x2B1930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		public bool Button1
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x2B1060", Offset = "0x2B1060", VA = "0x2B1060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		public bool Button2
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x2B1160", Offset = "0x2B1160", VA = "0x2B1160")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000273")]
		public bool ButtonStart
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x2B1938", Offset = "0x2B1938", VA = "0x2B1938")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		public bool ButtonJoystick
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x2B19C4", Offset = "0x2B19C4", VA = "0x2B19C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000275")]
		public float Trigger
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x2B130C", Offset = "0x2B130C", VA = "0x2B130C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000276")]
		public float GripTrigger
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x2B1280", Offset = "0x2B1280", VA = "0x2B1280")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000277")]
		public Vector2 Joystick
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x2B11EC", Offset = "0x2B11EC", VA = "0x2B11EC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x2B16AC", Offset = "0x2B16AC", VA = "0x2B16AC")]
		public TrackedController()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x2B0B9C", Offset = "0x2B0B9C", VA = "0x2B0B9C")]
		public static TrackedController FindOrCreate(HandednessId handedness)
		{
			return null;
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x2B1860", Offset = "0x2B1860", VA = "0x2B1860")]
		public void PlayHapticEvent(float frequency, float amplitude, float duration)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x2B1A50", Offset = "0x2B1A50", VA = "0x2B1A50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x2B1AF4", Offset = "0x2B1AF4", VA = "0x2B1AF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x2B16D8", Offset = "0x2B16D8", VA = "0x2B16D8")]
		private void Initialize(HandednessId handedness, Transform trackedTransform)
		{
		}
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000256")]
	public struct GrabbableGrabMsg
	{
		[Token(Token = "0x4000C4C")]
		public const string MsgNameGrabBegin = "OnGrabBegin";

		[Token(Token = "0x4000C4D")]
		public const string MsgNameGrabEnd = "OnGrabEnd";

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grabbable Sender;
	}
	[Token(Token = "0x2000257")]
	public struct GrabbableOverlapMsg
	{
		[Token(Token = "0x4000C4F")]
		public const string MsgNameOverlapBegin = "OnOverlapBegin";

		[Token(Token = "0x4000C50")]
		public const string MsgNameOverlapEnd = "OnOverlapEnd";

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grabbable Sender;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Hand Hand;
	}
	[Token(Token = "0x2000258")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_allowOffhandGrab;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GrabPoint[] m_grabPoints;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_grabbedKinematic;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabPoint m_grabbedGrabPoint;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Hand m_grabbedHand;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand m_overlapHand;

		[Token(Token = "0x17000278")]
		public bool AllowOffhandGrab
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x2B3F8C", Offset = "0x2B3F8C", VA = "0x2B3F8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		public HandPose HandPose
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x2B3F94", Offset = "0x2B3F94", VA = "0x2B3F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public bool IsGrabbed
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x2B2BD8", Offset = "0x2B2BD8", VA = "0x2B2BD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027B")]
		public Hand GrabbedHand
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x2B2C64", Offset = "0x2B2C64", VA = "0x2B2C64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public Transform GrabTransform
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x2B3FB8", Offset = "0x2B3FB8", VA = "0x2B3FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public GrabPoint[] GrabPoints
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x2B239C", Offset = "0x2B239C", VA = "0x2B239C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public bool grabbedKinematic
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x2B3FDC", Offset = "0x2B3FDC", VA = "0x2B3FDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x2B3FE4", Offset = "0x2B3FE4", VA = "0x2B3FE4")]
			set
			{
			}
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x2B3F7C", Offset = "0x2B3F7C", VA = "0x2B3F7C")]
		public Grabbable()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x2B3FEC", Offset = "0x2B3FEC", VA = "0x2B3FEC")]
		public void GrabBegin(Hand hand, GrabPoint grabPoint)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x2B41A4", Offset = "0x2B41A4", VA = "0x2B41A4")]
		public void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x2B437C", Offset = "0x2B437C", VA = "0x2B437C")]
		public void OverlapBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x2B4410", Offset = "0x2B4410", VA = "0x2B4410")]
		public void OverlapEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x2B44A8", Offset = "0x2B44A8", VA = "0x2B44A8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x2B4150", Offset = "0x2B4150", VA = "0x2B4150")]
		private void SendMsg(string msgName, object msg)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x2B3A50", Offset = "0x2B3A50", VA = "0x2B3A50", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000259")]
	public class GrabPoint
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private HandPose m_handPose;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Collider m_grabCollider;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_grabOverride;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform m_grabTransform;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x1700027F")]
		public HandPose HandPose
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x2B3CE0", Offset = "0x2B3CE0", VA = "0x2B3CE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public Collider GrabCollider
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x2B3CE8", Offset = "0x2B3CE8", VA = "0x2B3CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		public Transform GrabTransform
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x2B23A4", Offset = "0x2B23A4", VA = "0x2B23A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x2B3CF0", Offset = "0x2B3CF0", VA = "0x2B3CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x2B3CC0", Offset = "0x2B3CC0", VA = "0x2B3CC0")]
		public GrabPoint(Collider collider)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x2B3CF8", Offset = "0x2B3CF8", VA = "0x2B3CF8")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class GrabTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Grabbable m_grabbable;

		[Token(Token = "0x17000283")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x2B3E84", Offset = "0x2B3E84", VA = "0x2B3E84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x2B3E7C", Offset = "0x2B3E7C", VA = "0x2B3E7C")]
		public GrabTrigger()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x2B3E8C", Offset = "0x2B3E8C", VA = "0x2B3E8C")]
		public void SetGrabbable(Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x17297C", Offset = "0x17297C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x17297C", Offset = "0x17297C")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x200025C")]
		private static class Const
		{
			[Token(Token = "0x4000C7E")]
			public const string AnimLayerNamePoint = "Point Layer";

			[Token(Token = "0x4000C7F")]
			public const string AnimLayerNameThumb = "Thumb Layer";

			[Token(Token = "0x4000C80")]
			public const string AnimParamNameFlex = "Flex";

			[Token(Token = "0x4000C81")]
			public const string AnimParamNamePose = "Pose";

			[Token(Token = "0x4000C82")]
			public const float HapticOverlapAmplitude = 0.15f;

			[Token(Token = "0x4000C83")]
			public const float HapticOverlapFrequency = 0.2f;

			[Token(Token = "0x4000C84")]
			public const float HapticOverlapDuration = 0.02f;

			[Token(Token = "0x4000C85")]
			public const float InputRateChange = 20f;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly RegistrationTransform RegistrationLeft;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static readonly RegistrationTransform RegistrationRight;

			[Token(Token = "0x4000C88")]
			public const float ThreshCollisionFlex = 0.96f;

			[Token(Token = "0x4000C89")]
			public const float ThreshGrabBegin = 0.55f;

			[Token(Token = "0x4000C8A")]
			public const float ThreshGrabEnd = 0.35f;

			[Token(Token = "0x4000C8B")]
			public const float ThreshThrowSpeed = 1f;
		}

		[Token(Token = "0x200025D")]
		private struct RegistrationTransform
		{
			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Translation;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion Rotation;

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x1C3E0C", Offset = "0x1C3E0C", VA = "0x1C3E0C")]
			public RegistrationTransform(Vector3 translation, Quaternion rotation)
			{
			}
		}

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private HandednessId m_handedness;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected Transform m_gripTransform;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_meshRoot;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandParticles m_handParticlesPf;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Collider[] m_grabVolumes;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TrackedController m_trackedController;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VelocityTracker m_velocityTracker;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Collider[] m_colliders;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indexCollider;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_grabVolumeEnabled;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_wasGrabVolumeEnabled;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_flex;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_point;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_thumbsUp;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected HandPose m_grabbedHandPose;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Grabbable m_grabbedGrabbable;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Dictionary<Grabbable, int> m_grabCandidates;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Hand s_leftHand;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Hand s_rightHand;

		[Token(Token = "0x4000C79")]
		private const string LEFT_HAND_NAME = "LeftHandPf";

		[Token(Token = "0x4000C7A")]
		private const string RIGHT_HAND_NAME = "RightHandPf";

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private List<Collider> m_disableColliders;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_disableIndexFinger;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x178EF0", Offset = "0x178EF0")]
		private static Func<Collider, bool> <>f__am$cache0;

		[Token(Token = "0x17000284")]
		public HandednessId Handedness
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x2B48E4", Offset = "0x2B48E4", VA = "0x2B48E4")]
			get
			{
				return default(HandednessId);
			}
		}

		[Token(Token = "0x17000285")]
		public bool IsGrabbingGrabbable
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x2B5E24", Offset = "0x2B5E24", VA = "0x2B5E24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000286")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x2B5EB0", Offset = "0x2B5EB0", VA = "0x2B5EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public Vector3 LinearVelocity
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x2B5EB8", Offset = "0x2B5EB8", VA = "0x2B5EB8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000288")]
		public Vector3 AngularVelocity
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x2B5EEC", Offset = "0x2B5EEC", VA = "0x2B5EEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000289")]
		public TrackedController TrackedController
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x2B5F20", Offset = "0x2B5F20", VA = "0x2B5F20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		public static Hand LeftHand
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x2B6110", Offset = "0x2B6110", VA = "0x2B6110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public static Hand RightHand
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x2B619C", Offset = "0x2B619C", VA = "0x2B619C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public List<Collider> DisableColliders
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x2B69A8", Offset = "0x2B69A8", VA = "0x2B69A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x2B5D40", Offset = "0x2B5D40", VA = "0x2B5D40")]
		public Hand()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x2B5F28", Offset = "0x2B5F28", VA = "0x2B5F28")]
		private void _SetInstance()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x2B60BC", Offset = "0x2B60BC", VA = "0x2B60BC")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x2B6228", Offset = "0x2B6228", VA = "0x2B6228", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x2B69B0", Offset = "0x2B69B0", VA = "0x2B69B0", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x2B7138", Offset = "0x2B7138", VA = "0x2B7138", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x2B7140", Offset = "0x2B7140", VA = "0x2B7140")]
		private void UpdateGrabbablePositon(bool isPhysicsMove)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x2B80B0", Offset = "0x2B80B0", VA = "0x2B80B0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x2B8284", Offset = "0x2B8284", VA = "0x2B8284")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x2B6C24", Offset = "0x2B6C24", VA = "0x2B6C24")]
		private float InputFlex()
		{
			return default(float);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x2B6C4C", Offset = "0x2B6C4C", VA = "0x2B6C4C")]
		private bool InputPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x2B6D30", Offset = "0x2B6D30", VA = "0x2B6D30")]
		private bool InputThumbsUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x2B6C70", Offset = "0x2B6C70", VA = "0x2B6C70")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x2B6EA4", Offset = "0x2B6EA4", VA = "0x2B6EA4")]
		private void AnimationAdvance()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x2B6DC0", Offset = "0x2B6DC0", VA = "0x2B6DC0")]
		private void CollisionAdvance()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x2B6908", Offset = "0x2B6908", VA = "0x2B6908")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x2B843C", Offset = "0x2B843C", VA = "0x2B843C")]
		private void CollisionEnableIndex(bool enabled)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x2B6D60", Offset = "0x2B6D60", VA = "0x2B6D60")]
		private void GrabAdvance(float prevFlex)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x2B8694", Offset = "0x2B8694", VA = "0x2B8694", Slot = "7")]
		protected virtual void GrabBegin()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x2B84B4", Offset = "0x2B84B4", VA = "0x2B84B4")]
		private void GrabEnd()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x2B7B74", Offset = "0x2B7B74", VA = "0x2B7B74")]
		private void GrabbableAdvance(Vector3 finalPosition, Quaternion finalRotation)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x2B75E4", Offset = "0x2B75E4", VA = "0x2B75E4")]
		private void RidgidBodyAdvance(Vector3 finalPosition, Quaternion finalRotation)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x2B8DE8", Offset = "0x2B8DE8", VA = "0x2B8DE8", Slot = "8")]
		protected virtual void GrabbableGrab(Grabbable grabbable, GrabPoint grabPoint)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x2B8E54", Offset = "0x2B8E54", VA = "0x2B8E54", Slot = "9")]
		protected virtual void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x2B6D54", Offset = "0x2B6D54", VA = "0x2B6D54")]
		private void GrabVolumeAdvance()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x2B8B90", Offset = "0x2B8B90", VA = "0x2B8B90")]
		protected void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x2B8EC4", Offset = "0x2B8EC4", VA = "0x2B8EC4", Slot = "10")]
		protected virtual void OffhandGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x2B74B8", Offset = "0x2B74B8", VA = "0x2B74B8")]
		private RegistrationTransform HandRegistration()
		{
			return default(RegistrationTransform);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x2B2C6C", Offset = "0x2B2C6C", VA = "0x2B2C6C")]
		public void ReleaseHand()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x2B47E4", Offset = "0x2B47E4", VA = "0x2B47E4")]
		public void RemoveFromGrabbableCandidates([Optional] Grabbable g)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x2B8FE0", Offset = "0x2B8FE0", VA = "0x2B8FE0")]
		private void _EnableIndexFinger(GameManager.CameraState cameraState)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x2B90D4", Offset = "0x2B90D4", VA = "0x2B90D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180D28", Offset = "0x180D28")]
		private static bool <Start>m__0(Collider childCollider)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x172A20", Offset = "0x172A20")]
	public class HandParticles : MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Hand m_hand;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_emissionRateVelocityScale;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private ParticleSystem m_particleSystem;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private FixedJoint m_fixedJoint;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x26F5E8", Offset = "0x26F5E8", VA = "0x26F5E8")]
		public HandParticles()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x26F5FC", Offset = "0x26F5FC", VA = "0x26F5FC")]
		public void SetHand(Hand hand)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x26F784", Offset = "0x26F784", VA = "0x26F784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x26F948", Offset = "0x26F948", VA = "0x26F948")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000C94")]
		Default,
		[Token(Token = "0x4000C95")]
		Generic,
		[Token(Token = "0x4000C96")]
		PingPongBall,
		[Token(Token = "0x4000C97")]
		GunDart,
		[Token(Token = "0x4000C98")]
		Centered,
		[Token(Token = "0x4000C99")]
		Postit
	}
	[Token(Token = "0x2000260")]
	public enum HandPoseAttachType
	{
		[Token(Token = "0x4000C9B")]
		None,
		[Token(Token = "0x4000C9C")]
		Snap,
		[Token(Token = "0x4000C9D")]
		SnapPosition
	}
	[Token(Token = "0x2000261")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private HandPoseAttachType m_attachType;

		[Token(Token = "0x1700028D")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x26FA74", Offset = "0x26FA74", VA = "0x26FA74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x26FA7C", Offset = "0x26FA7C", VA = "0x26FA7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x26FA84", Offset = "0x26FA84", VA = "0x26FA84")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x17000290")]
		public HandPoseAttachType AttachType
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x26FA8C", Offset = "0x26FA8C", VA = "0x26FA8C")]
			get
			{
				return default(HandPoseAttachType);
			}
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x26FA6C", Offset = "0x26FA6C", VA = "0x26FA6C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class VelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x2000263")]
		private static class Const
		{
			[Token(Token = "0x4000CAC")]
			public const float WindowTime = 1f / 90f;

			[Token(Token = "0x4000CAD")]
			public const float WindowEpsilon = 0.0001f;

			[Token(Token = "0x4000CAE")]
			public const float LinearSpeedWindow = 4f / 45f;

			[Token(Token = "0x4000CAF")]
			public const float LinearVelocityWindow = 2f / 45f;

			[Token(Token = "0x4000CB0")]
			public const float AngularVelocityWindow = 1f / 45f;

			[Token(Token = "0x4000CB1")]
			public const int MaxSamples = 45;
		}

		[Token(Token = "0x2000264")]
		private struct Sample
		{
			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Time;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float LinearSpeed;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 LinearVelocity;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 AngularVelocity;
		}

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_showGizmos;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_index;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_count;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Sample[] m_samples;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_position;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion m_rotation;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_frameLinearVelocity;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_frameAngularVelocity;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_trackedLinearVelocity;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_trackedAngularVelocity;

		[Token(Token = "0x17000291")]
		public Vector3 FrameAngularVelocity
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x274550", Offset = "0x274550", VA = "0x274550")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000292")]
		public Vector3 FrameLinearVelocity
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x274564", Offset = "0x274564", VA = "0x274564")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000293")]
		public Vector3 TrackedAngularVelocity
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x274578", Offset = "0x274578", VA = "0x274578")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000294")]
		public Vector3 TrackedLinearVelocity
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x27458C", Offset = "0x27458C", VA = "0x27458C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x2743C4", Offset = "0x2743C4", VA = "0x2743C4")]
		public VelocityTracker()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x2745A0", Offset = "0x2745A0", VA = "0x2745A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x274638", Offset = "0x274638", VA = "0x274638")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x275208", Offset = "0x275208", VA = "0x275208")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x2748FC", Offset = "0x2748FC", VA = "0x2748FC")]
		private Vector3 DeltaRotation(Quaternion final, Quaternion initial)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x274A64", Offset = "0x274A64", VA = "0x274A64")]
		private void AddSample(Vector3 deltaPosition, Vector3 deltaRotation)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x27529C", Offset = "0x27529C", VA = "0x27529C")]
		private int Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x27533C", Offset = "0x27533C", VA = "0x27533C")]
		private int IndexPrev(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x27534C", Offset = "0x27534C", VA = "0x27534C")]
		private bool IsSampleValid(int index, float windowSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x275004", Offset = "0x275004", VA = "0x275004")]
		private Vector3 ComputeAverageAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x274CCC", Offset = "0x274CCC", VA = "0x274CCC")]
		private Vector3 ComputeAverageLinearVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x274ED0", Offset = "0x274ED0", VA = "0x274ED0")]
		private float ComputeMaxLinearSpeed()
		{
			return default(float);
		}
	}
}
namespace OvrTouch.Services
{
	[Token(Token = "0x2000265")]
	public class Colorizer : MonoBehaviour
	{
		[Token(Token = "0x2000266")]
		private static class Const
		{
			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Color ColorGrab;
		}

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_color;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x2753E8", Offset = "0x2753E8", VA = "0x2753E8")]
		public Colorizer()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x27542C", Offset = "0x27542C", VA = "0x27542C")]
		private void OnGrabBegin(OvrTouch.Hands.GrabbableGrabMsg grabMsg)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x2755EC", Offset = "0x2755EC", VA = "0x2755EC")]
		private void OnGrabEnd(OvrTouch.Hands.GrabbableGrabMsg grabMsg)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x275610", Offset = "0x275610", VA = "0x275610")]
		private void OnOverlapBegin(OvrTouch.Hands.GrabbableOverlapMsg overlapMsg)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x275614", Offset = "0x275614", VA = "0x275614")]
		private void OnOverlapEnd(OvrTouch.Hands.GrabbableOverlapMsg overlapMsg)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x275618", Offset = "0x275618", VA = "0x275618")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x2754D4", Offset = "0x2754D4", VA = "0x2754D4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x2756B8", Offset = "0x2756B8", VA = "0x2756B8")]
		private Color RandomColor()
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000267")]
	public class PhysicsSettings : MonoBehaviour
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Vector3 m_gravity;

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x2757EC", Offset = "0x2757EC", VA = "0x2757EC")]
		public PhysicsSettings()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x27584C", Offset = "0x27584C", VA = "0x27584C")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class TouchVisualizer : MonoBehaviour
	{
		[Token(Token = "0x2000269")]
		private enum DisplayMode
		{
			[Token(Token = "0x4000CBF")]
			Hand,
			[Token(Token = "0x4000CC0")]
			Controller,
			[Token(Token = "0x4000CC1")]
			HandAndController,
			[Token(Token = "0x4000CC2")]
			Count
		}

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private DisplayMode m_displayMode;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Hand m_hand;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private TouchController m_controller;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_wasButtonDown;

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x275914", Offset = "0x275914", VA = "0x275914")]
		public TouchVisualizer()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x275924", Offset = "0x275924", VA = "0x275924")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x275A14", Offset = "0x275A14", VA = "0x275A14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x27592C", Offset = "0x27592C", VA = "0x27592C")]
		private void ModeChange(DisplayMode nextDisplayMode)
		{
		}
	}
}
[Token(Token = "0x200026A")]
public class AlwaysLoadedCameraHandeler : MonoBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_cameraFullyLoaded;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_cameraAlwaysLoaded;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 m_cameraOffset;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_alwaysLoadedOffset;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UnityEvent OnResetAlwaysLoadedEvt;

	[Token(Token = "0x17000295")]
	public Vector3 CameraOffset
	{
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x4287D8", Offset = "0x4287D8", VA = "0x4287D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x4287EC", Offset = "0x4287EC", VA = "0x4287EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000296")]
	public Vector3 AlwaysLoadedOffset
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x4287F8", Offset = "0x4287F8", VA = "0x4287F8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x42880C", Offset = "0x42880C", VA = "0x42880C")]
		set
		{
		}
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x428718", Offset = "0x428718", VA = "0x428718")]
	public AlwaysLoadedCameraHandeler()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x428818", Offset = "0x428818", VA = "0x428818")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x4288D0", Offset = "0x4288D0", VA = "0x4288D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x428A04", Offset = "0x428A04", VA = "0x428A04")]
	public void Update()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x428BF4", Offset = "0x428BF4", VA = "0x428BF4")]
	public void ResetAlwaysLoadedCamera()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x428BF8", Offset = "0x428BF8", VA = "0x428BF8")]
	private void _OnResetAlwaysLoaded()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x428AD8", Offset = "0x428AD8", VA = "0x428AD8")]
	private Vector3 _FullyLoadedToAlwaysLoaded(Vector3 fullyLoadedPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x428C24", Offset = "0x428C24", VA = "0x428C24")]
	private Vector3 _AlwaysLoadedToFullyLoaded(Vector3 alwaysLoadedPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x428D40", Offset = "0x428D40", VA = "0x428D40")]
	public Vector3 FullyLoadedToAlwaysLoaded(Vector3 fullyLoadedPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x428D60", Offset = "0x428D60", VA = "0x428D60")]
	public Vector3 AlwaysLoadedToFullyLoaded(Vector3 alwaysLoadedPosition)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200026B")]
public class AlwaysLoadedManager : MonoBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_alCameraContainer;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform m_flCameraContainer;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_alBoundary;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_alAssembly;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_movementRatio;

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x428D80", Offset = "0x428D80", VA = "0x428D80")]
	public AlwaysLoadedManager()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x428D90", Offset = "0x428D90", VA = "0x428D90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x428F84", Offset = "0x428F84", VA = "0x428F84")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x4290C8", Offset = "0x4290C8", VA = "0x4290C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x429128", Offset = "0x429128", VA = "0x429128")]
	private void _SetAlActive(bool isActive)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x42915C", Offset = "0x42915C", VA = "0x42915C")]
	private void _UpdateCameraPosition()
	{
	}
}
[Token(Token = "0x200026C")]
public class AlwaysLoadedTrigger : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject alwaysLoadedLarge;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject alwaysLoadedSmall;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string collisionObjectName;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static AlwaysLoadedManager alwaysLoadedManager;

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x4292A8", Offset = "0x4292A8", VA = "0x4292A8")]
	public AlwaysLoadedTrigger()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x4292B0", Offset = "0x4292B0", VA = "0x4292B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x429388", Offset = "0x429388", VA = "0x429388")]
	private void Init()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x42946C", Offset = "0x42946C", VA = "0x42946C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x429470", Offset = "0x429470", VA = "0x429470")]
	public void EnterRegion()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x4294C8", Offset = "0x4294C8", VA = "0x4294C8")]
	public void ExitRegion(AlwaysLoadedTrigger triggerScript)
	{
	}
}
[Token(Token = "0x200026D")]
public class StreamHelper : MonoBehaviour
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] postponedVisibilityList;

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x2C350C", Offset = "0x2C350C", VA = "0x2C350C")]
	public StreamHelper()
	{
	}
}
[Token(Token = "0x200026E")]
public class StreamManager : MonoBehaviour
{
	[Token(Token = "0x200026F")]
	public enum IslandLoadingState
	{
		[Token(Token = "0x4000CDF")]
		Unloaded,
		[Token(Token = "0x4000CE0")]
		Loading,
		[Token(Token = "0x4000CE1")]
		Loaded,
		[Token(Token = "0x4000CE2")]
		Hidden
	}

	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B44", Offset = "0x173B44")]
	private sealed class <LoadLevel>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int islandToLoad;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal AsyncOperation <loadingStatus>__0;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal StreamManager $this;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004F1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002520")]
			[Address(RVA = "0x2C587C", Offset = "0x2C587C", VA = "0x2C587C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002521")]
			[Address(RVA = "0x2C5884", Offset = "0x2C5884", VA = "0x2C5884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x2C4728", Offset = "0x2C4728", VA = "0x2C4728")]
		[DebuggerHidden]
		public <LoadLevel>c__Iterator0()
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x2C5418", Offset = "0x2C5418", VA = "0x2C5418", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x2C588C", Offset = "0x2C588C", VA = "0x2C588C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x2C58A0", Offset = "0x2C58A0", VA = "0x2C58A0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B54", Offset = "0x173B54")]
	private sealed class <WaitForUnpause>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AsyncOperation loadingStatus;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int islandToLoad;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal StreamManager $this;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004F3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x2C5D28", Offset = "0x2C5D28", VA = "0x2C5D28", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x2C5D30", Offset = "0x2C5D30", VA = "0x2C5D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x2C4F78", Offset = "0x2C4F78", VA = "0x2C4F78")]
		[DebuggerHidden]
		public <WaitForUnpause>c__Iterator1()
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x2C5BC0", Offset = "0x2C5BC0", VA = "0x2C5BC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x2C5D38", Offset = "0x2C5D38", VA = "0x2C5D38", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x2C5D4C", Offset = "0x2C5D4C", VA = "0x2C5D4C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B64", Offset = "0x173B64")]
	private sealed class <UnloadIsland>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AsyncOperation loadingStatus;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int islandToLoad;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal StreamManager $this;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004F5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600252C")]
			[Address(RVA = "0x2C5B14", Offset = "0x2C5B14", VA = "0x2C5B14", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0x2C5B1C", Offset = "0x2C5B1C", VA = "0x2C5B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x2C4F80", Offset = "0x2C4F80", VA = "0x2C4F80")]
		[DebuggerHidden]
		public <UnloadIsland>c__Iterator2()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x2C5928", Offset = "0x2C5928", VA = "0x2C5928", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x2C5B24", Offset = "0x2C5B24", VA = "0x2C5B24", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x2C5B38", Offset = "0x2C5B38", VA = "0x2C5B38", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B74", Offset = "0x173B74")]
	private sealed class <ActivateScene>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AsyncOperation loadingStatus;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int islandToLoad;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal StreamManager $this;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004F7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0x2C536C", Offset = "0x2C536C", VA = "0x2C536C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002533")]
			[Address(RVA = "0x2C5374", Offset = "0x2C5374", VA = "0x2C5374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x2C4F88", Offset = "0x2C4F88", VA = "0x2C4F88")]
		[DebuggerHidden]
		public <ActivateScene>c__Iterator3()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x2C4F90", Offset = "0x2C4F90", VA = "0x2C4F90", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x2C537C", Offset = "0x2C537C", VA = "0x2C537C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x2C5390", Offset = "0x2C5390", VA = "0x2C5390", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject alwaysLoadedLight;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] alwaysLoadedSmall;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] alwaysLoadedLarge;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public IslandLoadingState[] currentIslandLoadingStates;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string[] islandNames;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentIsland;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int desiredIsland;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static StreamManager streamManager;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x2C3514", Offset = "0x2C3514", VA = "0x2C3514")]
	public StreamManager()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x2C351C", Offset = "0x2C351C", VA = "0x2C351C")]
	public static StreamManager Instance()
	{
		return null;
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x2C3704", Offset = "0x2C3704", VA = "0x2C3704")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x2C39E4", Offset = "0x2C39E4", VA = "0x2C39E4")]
	public void StreamIsland(string islandName)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x2C3E18", Offset = "0x2C3E18", VA = "0x2C3E18")]
	public void HideIsland(string islandToUnload)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x2C3B78", Offset = "0x2C3B78", VA = "0x2C3B78")]
	public void StartIslandStreaming(int islandToLoad)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x2C4688", Offset = "0x2C4688", VA = "0x2C4688")]
	[DebuggerHidden]
	private IEnumerator LoadLevel(int islandToLoad)
	{
		return null;
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x2C4730", Offset = "0x2C4730", VA = "0x2C4730")]
	private void ActivateStreamedIsland(AsyncOperation loadingStatus, int islandToLoad)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x2C4B34", Offset = "0x2C4B34", VA = "0x2C4B34")]
	private void ShowIsland(AsyncOperation loadingStatus, int islandToLoad)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x2C4D50", Offset = "0x2C4D50", VA = "0x2C4D50")]
	[DebuggerHidden]
	private IEnumerator WaitForUnpause(AsyncOperation loadingStatus, int islandToLoad)
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x2C4CC0", Offset = "0x2C4CC0", VA = "0x2C4CC0")]
	private void UnloadIsland(int islandToUnLoad)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x2C4E08", Offset = "0x2C4E08", VA = "0x2C4E08")]
	[DebuggerHidden]
	private IEnumerator UnloadIsland(AsyncOperation loadingStatus, int islandToLoad)
	{
		return null;
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x2C4EC0", Offset = "0x2C4EC0", VA = "0x2C4EC0")]
	[DebuggerHidden]
	private IEnumerator ActivateScene(AsyncOperation loadingStatus, int islandToLoad)
	{
		return null;
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x2C4264", Offset = "0x2C4264", VA = "0x2C4264")]
	public void ShowCurrentIsland()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x2C3FA4", Offset = "0x2C3FA4", VA = "0x2C3FA4")]
	public void HideCurrentIsland()
	{
	}
}
[Token(Token = "0x2000270")]
public class StreamTrigger : MonoBehaviour
{
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string islandName;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string collisionObjectName;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static StreamManager streamManager;

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x2C5DD4", Offset = "0x2C5DD4", VA = "0x2C5DD4")]
	public StreamTrigger()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x2C5DDC", Offset = "0x2C5DDC", VA = "0x2C5DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x2C5E8C", Offset = "0x2C5E8C", VA = "0x2C5E8C")]
	private void Init()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x2C5F70", Offset = "0x2C5F70", VA = "0x2C5F70")]
	private void OnTriggerEnter(Collider other)
	{
	}
}
[Token(Token = "0x2000271")]
public class StreamUntrigger : MonoBehaviour
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string islandName;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string collisionObjectName;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static StreamManager streamManager;

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x2C642C", Offset = "0x2C642C", VA = "0x2C642C")]
	public StreamUntrigger()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x2C6434", Offset = "0x2C6434", VA = "0x2C6434")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x2C64E4", Offset = "0x2C64E4", VA = "0x2C64E4")]
	private void Init()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x2C65C8", Offset = "0x2C65C8", VA = "0x2C65C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x2C69D8", Offset = "0x2C69D8", VA = "0x2C69D8")]
	private void OnTriggerExit(Collider other)
	{
	}
}
[Token(Token = "0x2000272")]
public class FallingLeaf : MonoBehaviour
{
	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GrabbableProp m_grabbableProp;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_forcePowerMin;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_forcePowerMax;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_dir;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_elapsedTime;

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xBB1630", Offset = "0xBB1630", VA = "0xBB1630")]
	public FallingLeaf()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xBB16DC", Offset = "0xBB16DC", VA = "0xBB16DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xBB1AAC", Offset = "0xBB1AAC", VA = "0xBB1AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xBB1AB0", Offset = "0xBB1AB0", VA = "0xBB1AB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xBB1C28", Offset = "0xBB1C28", VA = "0xBB1C28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xBB1D74", Offset = "0xBB1D74", VA = "0xBB1D74")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xBB1F04", Offset = "0xBB1F04", VA = "0xBB1F04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xBB1F08", Offset = "0xBB1F08", VA = "0xBB1F08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xBB1AB4", Offset = "0xBB1AB4", VA = "0xBB1AB4")]
	private void _UpdateMovement()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xBB17F8", Offset = "0xBB17F8", VA = "0xBB17F8")]
	private void _StartMovement()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xBB1964", Offset = "0xBB1964", VA = "0xBB1964")]
	private void _SubscribeToGPEvents()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xBB1C2C", Offset = "0xBB1C2C", VA = "0xBB1C2C")]
	private void _UnsubscribeToGPEvents()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xBB1F0C", Offset = "0xBB1F0C", VA = "0xBB1F0C")]
	private void _GrabBeginHandler(OvrTouch.Hands.Grabbable sender, EventArgs e)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xBB1F10", Offset = "0xBB1F10", VA = "0xBB1F10")]
	private void _GrabEndHandler(OvrTouch.Hands.Grabbable sender, EventArgs e)
	{
	}
}
[Token(Token = "0x2000273")]
public class ReloadTutorial : MonoBehaviour
{
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B84", Offset = "0x173B84")]
	private sealed class <_WaitForVisorUp>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ReloadTutorial $this;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170004F9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002538")]
			[Address(RVA = "0x293814", Offset = "0x293814", VA = "0x293814", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0x29381C", Offset = "0x29381C", VA = "0x29381C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x292B04", Offset = "0x292B04", VA = "0x292B04")]
		[DebuggerHidden]
		public <_WaitForVisorUp>c__Iterator0()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x293588", Offset = "0x293588", VA = "0x293588", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x293824", Offset = "0x293824", VA = "0x293824", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x293838", Offset = "0x293838", VA = "0x293838", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173B94", Offset = "0x173B94")]
	private sealed class <_OpenChamber>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MoveObject[] $locvar0;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float timeToOpen;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal ReloadTutorial $this;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170004FB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600253E")]
			[Address(RVA = "0x2934DC", Offset = "0x2934DC", VA = "0x2934DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x2934E4", Offset = "0x2934E4", VA = "0x2934E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x292CCC", Offset = "0x292CCC", VA = "0x292CCC")]
		[DebuggerHidden]
		public <_OpenChamber>c__Iterator1()
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x2931E8", Offset = "0x2931E8", VA = "0x2931E8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x2934EC", Offset = "0x2934EC", VA = "0x2934EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x293500", Offset = "0x293500", VA = "0x293500", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173BA4", Offset = "0x173BA4")]
	private sealed class <_CycleChamber>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <cycleTime>__0;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <floatTime>__0;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal ReloadTutorial $this;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170004FD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x29313C", Offset = "0x29313C", VA = "0x29313C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0x293144", Offset = "0x293144", VA = "0x293144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x292D58", Offset = "0x292D58", VA = "0x292D58")]
		[DebuggerHidden]
		public <_CycleChamber>c__Iterator2()
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x292D60", Offset = "0x292D60", VA = "0x292D60", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x29314C", Offset = "0x29314C", VA = "0x29314C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x293160", Offset = "0x293160", VA = "0x293160", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_gunParent;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject m_buttonParent;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Animator m_animator;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrabbableGun m_gun;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MoveObject[] m_moveObjects;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_cycleAnimation;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_cycleTime;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_openTime;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_pauseAfterCycle;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_animIsCycling;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool m_isVisible;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool m_wasVisible;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameManager m_gameManager;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ScreenFader m_screenFader;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x292460", Offset = "0x292460", VA = "0x292460")]
	public ReloadTutorial()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x292484", Offset = "0x292484", VA = "0x292484")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x292A5C", Offset = "0x292A5C", VA = "0x292A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x292A80", Offset = "0x292A80", VA = "0x292A80")]
	[DebuggerHidden]
	private IEnumerator _WaitForVisorUp()
	{
		return null;
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x292B0C", Offset = "0x292B0C", VA = "0x292B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x2926E4", Offset = "0x2926E4", VA = "0x2926E4")]
	private void _SetClipLength(string clipName)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x292C20", Offset = "0x292C20", VA = "0x292C20")]
	[DebuggerHidden]
	private IEnumerator _OpenChamber(float timeToOpen)
	{
		return null;
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x292CD4", Offset = "0x292CD4", VA = "0x292CD4")]
	[DebuggerHidden]
	private IEnumerator _CycleChamber()
	{
		return null;
	}
}
[Token(Token = "0x2000274")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x172A98", Offset = "0x172A98")]
public class DescriptionUWPAttribute : Attribute
{
	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly DescriptionUWPAttribute Default;

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x3BDDFC", Offset = "0x3BDDFC", VA = "0x3BDDFC")]
	public DescriptionUWPAttribute()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x3BDE04", Offset = "0x3BDE04", VA = "0x3BDE04")]
	public DescriptionUWPAttribute(string name)
	{
	}
}
[Token(Token = "0x2000275")]
public class AdvancedWindAudio : MonoBehaviour, IModdableAudio
{
	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private WindTransition[] m_windTransitions;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_play;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179118", Offset = "0x179118")]
	private static Func<WindTransition, float> <>f__am$cache0;

	[Token(Token = "0x17000297")]
	private float m_knots
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x4203FC", Offset = "0x4203FC", VA = "0x4203FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000022")]
	public event AudioProcessingEventHandler PreProcessingEvent
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x4204D8", Offset = "0x4204D8", VA = "0x4204D8", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x4205E4", Offset = "0x4205E4", VA = "0x4205E4", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event AudioProcessingEventHandler PostProcessingEvent
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x4206F0", Offset = "0x4206F0", VA = "0x4206F0", Slot = "6")]
		add
		{
		}
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x4207FC", Offset = "0x4207FC", VA = "0x4207FC", Slot = "7")]
		remove
		{
		}
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x41FBE4", Offset = "0x41FBE4", VA = "0x41FBE4")]
	public AdvancedWindAudio()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x41FBEC", Offset = "0x41FBEC", VA = "0x41FBEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x41FC9C", Offset = "0x41FC9C", VA = "0x41FC9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x42002C", Offset = "0x42002C", VA = "0x42002C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x41FEA8", Offset = "0x41FEA8", VA = "0x41FEA8")]
	private void _SetUpAudioSources()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x41FDA0", Offset = "0x41FDA0", VA = "0x41FDA0")]
	private void _SortWindTransitionsByKnots()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x420030", Offset = "0x420030", VA = "0x420030")]
	private void _UpdateWindTransitions()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x41FBF0", Offset = "0x41FBF0", VA = "0x41FBF0")]
	private void _GetControllerAircraft()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x41FCC4", Offset = "0x41FCC4", VA = "0x41FCC4")]
	public void ToggleAudio(bool isPlaying)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x4204B0", Offset = "0x4204B0", VA = "0x4204B0")]
	protected void _OnPreProcessing(AudioSource source)
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x4204C4", Offset = "0x4204C4", VA = "0x4204C4")]
	protected void _OnPostProcessing(AudioSource source)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x420CC4", Offset = "0x420CC4", VA = "0x420CC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180DA8", Offset = "0x180DA8")]
	private static float <_SortWindTransitionsByKnots>m__0(WindTransition x)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000276")]
public class WindTransition
{
	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSource[] Sources;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip Clip;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float FadeInKnots;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadePeakKnots;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadeOutKnots;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PeakVolume;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x739A9C", Offset = "0x739A9C", VA = "0x739A9C")]
	public WindTransition()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x739AAC", Offset = "0x739AAC", VA = "0x739AAC")]
	public void SetAudioClip(AudioClip clip)
	{
	}
}
[Token(Token = "0x2000277")]
public class AudioRandomizer : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	private enum SoundState
	{
		[Token(Token = "0x4000D16")]
		WAITING,
		[Token(Token = "0x4000D17")]
		ACTIVE
	}

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioClip[] m_clips;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_minimumDelay;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_maximumDelay;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_allowRepeatClip;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_currentDelay;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_currentClipNum;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoundState m_soundState;

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x42E618", Offset = "0x42E618", VA = "0x42E618")]
	public AudioRandomizer()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x42E628", Offset = "0x42E628", VA = "0x42E628")]
	private void Start()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x42E720", Offset = "0x42E720", VA = "0x42E720")]
	private void Update()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x42E650", Offset = "0x42E650", VA = "0x42E650")]
	private void _GetAudioSource()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x42E6FC", Offset = "0x42E6FC", VA = "0x42E6FC")]
	private void _ResetDelay()
	{
	}
}
[Token(Token = "0x2000279")]
public class AudioSourceManager : MonoBehaviour
{
	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSourceManager s_instance;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_bgmAudioSourceDflt;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource m_bgmAudioSource;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioSource m_sfxAudioSourceDflt;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource m_sfxAudioSource;

	[Token(Token = "0x17000298")]
	public static AudioSourceManager Instance
	{
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x42E914", Offset = "0x42E914", VA = "0x42E914")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000299")]
	public AudioSource BGMAudioSource
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x42EA34", Offset = "0x42EA34", VA = "0x42EA34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x42EAD0", Offset = "0x42EAD0", VA = "0x42EAD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700029A")]
	public AudioSource SFXAudioSource
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x42EAD8", Offset = "0x42EAD8", VA = "0x42EAD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x42EB74", Offset = "0x42EB74", VA = "0x42EB74")]
		set
		{
		}
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x42E90C", Offset = "0x42E90C", VA = "0x42E90C")]
	public AudioSourceManager()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x42E9A0", Offset = "0x42E9A0", VA = "0x42E9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x42EA30", Offset = "0x42EA30", VA = "0x42EA30")]
	private void Update()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x42EB7C", Offset = "0x42EB7C", VA = "0x42EB7C")]
	public void MoveAudioSource(AudioSource audioSource, Transform reference)
	{
	}
}
[Token(Token = "0x200027A")]
public class BGMAudioController : MonoBehaviour
{
	[Token(Token = "0x200027B")]
	public delegate void BGMAudioEvent();

	[Token(Token = "0x200027C")]
	private enum BGM_STATE
	{
		[Token(Token = "0x4000D33")]
		Stop,
		[Token(Token = "0x4000D34")]
		Play,
		[Token(Token = "0x4000D35")]
		Pause,
		[Token(Token = "0x4000D36")]
		Stopping,
		[Token(Token = "0x4000D37")]
		Playing,
		[Token(Token = "0x4000D38")]
		Pausing
	}

	[Token(Token = "0x200027D")]
	private enum AudioMode
	{
		[Token(Token = "0x4000D3A")]
		Normal,
		[Token(Token = "0x4000D3B")]
		Vamp
	}

	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173BB4", Offset = "0x173BB4")]
	private sealed class <_ChangeClip>c__AnonStorey0
	{
		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BGMClip.BGMType bgmType;

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x431C1C", Offset = "0x431C1C", VA = "0x431C1C")]
		public <_ChangeClip>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x4327F4", Offset = "0x4327F4", VA = "0x4327F4")]
		internal bool <>m__0(BGMClip x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_prevAudioSourceVolume;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_prevVampAudioSourceVolume;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_audioSourceTform;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_vampAudioSource;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private List<BGMClip> m_audioClips;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ONSPAudioSource m_onspAudioSource;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private BGM_STATE m_bgmState;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_timeElapsed;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_startVolume;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_targetVolume;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_duration;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BGMClip m_bgmToPlay;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private BGMClip.BGMType m_bgmToChangeTo;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_bgmToChangeAutoPlay;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_bgmToChangeTime;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_bgmToChangeTargetVolume;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_bgmToChangeSeekTime;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioMode m_audioMode;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int m_loopCount;

	[Token(Token = "0x1700029B")]
	public float AudioSourceTime
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x431518", Offset = "0x431518", VA = "0x431518")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700029C")]
	public int LoopCount
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x431F28", Offset = "0x431F28", VA = "0x431F28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000024")]
	public event BGMAudioEvent ChangeClipEvent
	{
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x43012C", Offset = "0x43012C", VA = "0x43012C")]
		add
		{
		}
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x430238", Offset = "0x430238", VA = "0x430238")]
		remove
		{
		}
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x42F994", Offset = "0x42F994", VA = "0x42F994")]
	public BGMAudioController()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x42F9A4", Offset = "0x42F9A4", VA = "0x42F9A4")]
	public void ResetClip()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x42F9D4", Offset = "0x42F9D4", VA = "0x42F9D4")]
	public void StartBGM(float secsToFadeIn = 0f, float targetVolume = 1f, float seekTime = 0f)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x42FBD4", Offset = "0x42FBD4", VA = "0x42FBD4")]
	public void StopBGM(float secsToFadeOut = 0f)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x42FCC4", Offset = "0x42FCC4", VA = "0x42FCC4")]
	public void PauseBGM(float secsToFadeOut = 0f)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x42FDC8", Offset = "0x42FDC8", VA = "0x42FDC8")]
	public void ChangeClip(BGMClip.BGMType bgmType, float secsToFadeOut = 0f, bool autoPlay = false, float secsToFadeIn = 0f, float maxVolume = 1f, float seekTime = 0f)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x430344", Offset = "0x430344", VA = "0x430344", Slot = "4")]
	protected virtual void _OnChangeClip()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x430568", Offset = "0x430568", VA = "0x430568")]
	private void Start()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x430728", Offset = "0x430728", VA = "0x430728")]
	private void Update()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x4311E0", Offset = "0x4311E0", VA = "0x4311E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x4312E0", Offset = "0x4312E0", VA = "0x4312E0")]
	private void _UnmountHMD()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x4313FC", Offset = "0x4313FC", VA = "0x4313FC")]
	private void _MountHMD()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x430670", Offset = "0x430670", VA = "0x430670")]
	private void _InitAudioSource()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x4315CC", Offset = "0x4315CC", VA = "0x4315CC")]
	private void _FindAudioSource()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x4318A0", Offset = "0x4318A0", VA = "0x4318A0")]
	private void _SetUpAudioSource()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x431A0C", Offset = "0x431A0C", VA = "0x431A0C")]
	private void _CreateONSPAudioSource()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x42F9EC", Offset = "0x42F9EC", VA = "0x42F9EC")]
	private void _StartBGM(float secsToFadeIn = 0f, float targetVolume = 1f, float seekTime = 0f)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x42FBD8", Offset = "0x42FBD8", VA = "0x42FBD8")]
	private void _StopBGM(float secsToFadeOut = 0f)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x42FCC8", Offset = "0x42FCC8", VA = "0x42FCC8")]
	private void _PauseBGM(float secsToFadeOut = 0f)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x42FDF8", Offset = "0x42FDF8", VA = "0x42FDF8")]
	private void _ChangeClip(BGMClip.BGMType bgmType, float secsToFadeOut = 0f, bool autoPlay = false, float secsToFadeIn = 0f, float targetVolume = 1f, float seekTime = 0f)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x430744", Offset = "0x430744", VA = "0x430744")]
	private void _UpdateBGMVolume()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x431D18", Offset = "0x431D18", VA = "0x431D18")]
	private void _UpdateVamp()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x431E6C", Offset = "0x431E6C", VA = "0x431E6C")]
	private void _SwitchAudioClipToVampClip()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x431ECC", Offset = "0x431ECC", VA = "0x431ECC")]
	private void _SwitchAudioClipToMainClip()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x430F80", Offset = "0x430F80", VA = "0x430F80")]
	private void _UpdateLoopTracking()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x431F30", Offset = "0x431F30", VA = "0x431F30")]
	public void SetTo3D(Transform bgmPosition)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x4323A8", Offset = "0x4323A8", VA = "0x4323A8")]
	public void SetTo2D()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x4327BC", Offset = "0x4327BC", VA = "0x4327BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180DB8", Offset = "0x180DB8")]
	private bool <_UpdateBGMVolume>m__0(BGMClip x)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x200027E")]
public class BGMClip
{
	[Token(Token = "0x200027F")]
	public enum BGMType
	{
		[Token(Token = "0x4000D41")]
		None,
		[Token(Token = "0x4000D42")]
		Office_01,
		[Token(Token = "0x4000D43")]
		Ingame_01,
		[Token(Token = "0x4000D44")]
		Office_02,
		[Token(Token = "0x4000D45")]
		Ingame_02,
		[Token(Token = "0x4000D46")]
		Office_03,
		[Token(Token = "0x4000D47")]
		Ingame_03,
		[Token(Token = "0x4000D48")]
		Office_04,
		[Token(Token = "0x4000D49")]
		Ingame_04,
		[Token(Token = "0x4000D4A")]
		MainMenu,
		[Token(Token = "0x4000D4B")]
		Ingame_01m,
		[Token(Token = "0x4000D4C")]
		Ingame_01h,
		[Token(Token = "0x4000D4D")]
		Ingame_02m,
		[Token(Token = "0x4000D4E")]
		Ingame_02h,
		[Token(Token = "0x4000D4F")]
		Ingame_03m,
		[Token(Token = "0x4000D50")]
		Ingame_03h,
		[Token(Token = "0x4000D51")]
		Ingame_04l_0,
		[Token(Token = "0x4000D52")]
		Ingame_04l_1,
		[Token(Token = "0x4000D53")]
		Ingame_04m_0,
		[Token(Token = "0x4000D54")]
		Ingame_04m_1,
		[Token(Token = "0x4000D55")]
		Ingame_04m_2,
		[Token(Token = "0x4000D56")]
		Ingame_04h_0,
		[Token(Token = "0x4000D57")]
		Ingame_04h_1,
		[Token(Token = "0x4000D58")]
		Ingame_04h_2
	}

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BGMType clipType;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip clip;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip vampClip;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int vampLoops;

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x433E94", Offset = "0x433E94", VA = "0x433E94")]
	public BGMClip(BGMType clipType = BGMType.None, [Optional] AudioClip clip, [Optional] AudioClip vampClip, int vampLoops = 0)
	{
	}
}
[Token(Token = "0x2000280")]
public class BGMAudioManager : MonoBehaviour
{
	[Token(Token = "0x2000281")]
	public enum STATE
	{
		[Token(Token = "0x4000D66")]
		None,
		[Token(Token = "0x4000D67")]
		Load,
		[Token(Token = "0x4000D68")]
		Initialize,
		[Token(Token = "0x4000D69")]
		Running,
		[Token(Token = "0x4000D6A")]
		End
	}

	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173BC4", Offset = "0x173BC4")]
	private sealed class <_UpdateBGMAudio>c__AnonStorey1
	{
		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BGMClip.BGMType bgmType;

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x433304", Offset = "0x433304", VA = "0x433304")]
		public <_UpdateBGMAudio>c__AnonStorey1()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x433AD8", Offset = "0x433AD8", VA = "0x433AD8")]
		internal bool <>m__0(BGMSetting x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173BD4", Offset = "0x173BD4")]
	private sealed class <_WaitForLevelManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BGMAudioManager $this;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170004FF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0x433C30", Offset = "0x433C30", VA = "0x433C30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0x433C38", Offset = "0x433C38", VA = "0x433C38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x43393C", Offset = "0x43393C", VA = "0x43393C")]
		[DebuggerHidden]
		public <_WaitForLevelManager>c__Iterator0()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x433B10", Offset = "0x433B10", VA = "0x433B10", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x433C40", Offset = "0x433C40", VA = "0x433C40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x433C54", Offset = "0x433C54", VA = "0x433C54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173BE4", Offset = "0x173BE4")]
	private sealed class <_DetermineIslandClip>c__AnonStorey2
	{
		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BGMClip.BGMType bgmType;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x433944", Offset = "0x433944", VA = "0x433944")]
		public <_DetermineIslandClip>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x433AA0", Offset = "0x433AA0", VA = "0x433AA0")]
		internal bool <>m__0(BGMSetting x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BGMAudioManager s_instance;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private STATE m_state;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameManager m_gameManager;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private BGMAudioController m_audioController;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BGMSetting> m_bgmSettings;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BGMSetting m_currentBGMSetting;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BGMSetting m_nextBGMSetting;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GAME_STATE m_bgmPlayState;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_forcePlayAtStart;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool m_forcePlay;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_lastOfficePlaybackTime;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17921C", Offset = "0x17921C")]
	private static Func<BGMSetting, bool> <>f__am$cache0;

	[Token(Token = "0x1700029D")]
	public static BGMAudioManager Instance
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x43290C", Offset = "0x43290C", VA = "0x43290C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700029E")]
	public STATE State
	{
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x432A28", Offset = "0x432A28", VA = "0x432A28")]
		get
		{
			return default(STATE);
		}
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x432878", Offset = "0x432878", VA = "0x432878")]
	public BGMAudioManager()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x432998", Offset = "0x432998", VA = "0x432998")]
	private void _GetInstance()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x432A30", Offset = "0x432A30", VA = "0x432A30")]
	public void StopBGM(float secsToFadeOut = 0f)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x432A60", Offset = "0x432A60", VA = "0x432A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x432A64", Offset = "0x432A64", VA = "0x432A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x432A70", Offset = "0x432A70", VA = "0x432A70")]
	private void Update()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x432ACC", Offset = "0x432ACC", VA = "0x432ACC")]
	private void _LoadCommon()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x433178", Offset = "0x433178", VA = "0x433178")]
	public void StartBGM(bool forceStart = false)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x433254", Offset = "0x433254", VA = "0x433254")]
	public void PauseBGM()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x432BF4", Offset = "0x432BF4", VA = "0x432BF4")]
	private void _InitBGMAudio()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x432C00", Offset = "0x432C00", VA = "0x432C00")]
	private void _UpdateBGMAudio()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x4334D0", Offset = "0x4334D0", VA = "0x4334D0")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManager()
	{
		return null;
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x433554", Offset = "0x433554", VA = "0x433554")]
	private void _DetermineIslandClip()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x43330C", Offset = "0x43330C", VA = "0x43330C")]
	private void _ChangeBGMClip(BGMSetting bgmSetting, float seekTime = 0f)
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x43394C", Offset = "0x43394C", VA = "0x43394C")]
	private void _OnChangeClipHandler()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x433958", Offset = "0x433958", VA = "0x433958")]
	private void _SwitchCurrentBGMSetting()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x433964", Offset = "0x433964", VA = "0x433964")]
	public void SetTo3D(Transform bgmPosition)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x433994", Offset = "0x433994", VA = "0x433994")]
	public void SetTo2D()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x4339BC", Offset = "0x4339BC", VA = "0x4339BC")]
	private void _PauseBGM()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x433A70", Offset = "0x433A70", VA = "0x433A70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180DD8", Offset = "0x180DD8")]
	private static bool <_UpdateBGMAudio>m__0(BGMSetting x)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000282")]
public class BGMSetting : EZClass
{
	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BGMClip.BGMType BGMType;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float MaxVolume;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float SecsToFadeIn;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float SecsToFadeOut;

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x43402C", Offset = "0x43402C", VA = "0x43402C")]
	public BGMSetting(BGMClip.BGMType bgmType, float maxVolume, float secsToFadeIn, float secsToFadeOut)
	{
	}
}
[Token(Token = "0x2000283")]
public class BGMAudioManagerHack : MonoBehaviour
{
	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool done;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BGMAudioManager bgmAudioManager;

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x433CDC", Offset = "0x433CDC", VA = "0x433CDC")]
	public BGMAudioManagerHack()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x433CE4", Offset = "0x433CE4", VA = "0x433CE4")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000284")]
public class BGMClipManager : MonoBehaviour
{
	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BGMClipManager s_instance;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private List<BGMClip> m_audioClips;

	[Token(Token = "0x1700029F")]
	public static BGMClipManager Instance
	{
		[Token(Token = "0x6001152")]
		[Address(RVA = "0x431C24", Offset = "0x431C24", VA = "0x431C24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A0")]
	public List<BGMClip> AudioClips
	{
		[Token(Token = "0x6001153")]
		[Address(RVA = "0x431D10", Offset = "0x431D10", VA = "0x431D10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A1")]
	public bool IsAudioClipsEmpty
	{
		[Token(Token = "0x6001154")]
		[Address(RVA = "0x431C88", Offset = "0x431C88", VA = "0x431C88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x433ECC", Offset = "0x433ECC", VA = "0x433ECC")]
	public BGMClipManager()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x433F58", Offset = "0x433F58", VA = "0x433F58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x433FBC", Offset = "0x433FBC", VA = "0x433FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x433FC0", Offset = "0x433FC0", VA = "0x433FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x433FC4", Offset = "0x433FC4", VA = "0x433FC4")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000285")]
public class CollisionAudio : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4000D74")]
	private const float TIME_TO_WAIT = 1f;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isWaitingForTimer;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_elapsedTime;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AudioClip> m_audioClips;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_relativeSpeedAtMaxVolume;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private ONSPAudioSource m_onspAudioSource;

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x308E7C", Offset = "0x308E7C", VA = "0x308E7C")]
	public CollisionAudio()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x308E90", Offset = "0x308E90", VA = "0x308E90")]
	private void Start()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x30932C", Offset = "0x30932C", VA = "0x30932C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x309340", Offset = "0x309340", VA = "0x309340")]
	private void Update()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x3093E0", Offset = "0x3093E0", VA = "0x3093E0")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x3097C8", Offset = "0x3097C8", VA = "0x3097C8")]
	public void PlayAudio(float volume)
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x308EB4", Offset = "0x308EB4", VA = "0x308EB4")]
	private void _GetGameManager()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x309390", Offset = "0x309390", VA = "0x309390")]
	private void _UpdateTimer()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x3097CC", Offset = "0x3097CC", VA = "0x3097CC")]
	private void _ResetTimer()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x308F38", Offset = "0x308F38", VA = "0x308F38")]
	private void _GetOrAddAudioSource()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x309168", Offset = "0x309168", VA = "0x309168")]
	private void _GetOrAddONSPAudioSource()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x309620", Offset = "0x309620", VA = "0x309620")]
	private void _PlayAudio(float volume)
	{
	}
}
[Token(Token = "0x2000286")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172AAC", Offset = "0x172AAC")]
public class CrashAudio : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	private enum CRASH_CLIP_INTENSITY
	{
		[Token(Token = "0x4000D8C")]
		Low,
		[Token(Token = "0x4000D8D")]
		Medium,
		[Token(Token = "0x4000D8E")]
		High
	}

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioMixerGroup m_audioMixerGroup;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioClip[] m_groundLowClips;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioClip[] m_groundMedClips;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] m_groundHiClips;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AudioClip[] m_waterLowClips;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] m_waterMedClips;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AudioClip[] m_waterHiClips;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] m_treesLowClips;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AudioClip[] m_treesMedClips;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] m_treesHiClips;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_crashLowVelocity;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_crashMedVelocity;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_crashHiVelocity;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_crashLowAngleVelocity;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_crashMedAngleVelocity;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_crashHiAngleVelocity;

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x3AB080", Offset = "0x3AB080", VA = "0x3AB080")]
	public CrashAudio()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x3AB0C0", Offset = "0x3AB0C0", VA = "0x3AB0C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x3AB190", Offset = "0x3AB190", VA = "0x3AB190")]
	private void Start()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x3AB3AC", Offset = "0x3AB3AC", VA = "0x3AB3AC")]
	private void _PlayCrashClip(CrashManager.CRASH_TYPE crashType, CRASH_CLIP_INTENSITY crashClipIntensity, Vector3 positionOfCrash)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x3AB8D4", Offset = "0x3AB8D4", VA = "0x3AB8D4")]
	private AudioClip[] _GetClips(CrashManager.CRASH_TYPE crashType, CRASH_CLIP_INTENSITY crashClipIntensity)
	{
		return null;
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x3AB0C4", Offset = "0x3AB0C4", VA = "0x3AB0C4")]
	private void _InitCrashVelocities()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x3ABC34", Offset = "0x3ABC34", VA = "0x3ABC34")]
	private void _CrashCallback(float velocity, float angularVelocity, CrashManager.CRASH_TYPE crashType, Vector3 positionOfCrash)
	{
	}
}
[Token(Token = "0x2000288")]
public class DefaultAudioManager : MonoBehaviour
{
	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DefaultAudioManager s_instance;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioMixerGroup m_masterMixer;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioClip m_lowTimeClip;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioMixerGroup m_uiMixer;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip m_uiTapButtonClip;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AudioClip m_uiInsertFloppyClip;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip m_uiEjectFloppyClip;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AudioClip m_uiShredFloppyClip;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] m_uiPressKeyboardClips;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AudioClip m_uiVisorUpClip;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip m_uiVisorDownClip;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private AudioClip m_loadingCompBootClip;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip m_loadingCompIdleClip;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private AudioClip m_notEnoughMoneyClip;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip m_purchasedItemClip;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private AudioMixerGroup m_medalMixer;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip m_goldAudioClip;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private AudioClip m_silverAudioClip;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip m_bronzeAudioClip;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private AudioClip m_failAudioClip;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioMixerGroup m_balloonMixer;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private AnimationCurve m_balloonAudioCurve;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip m_bigBalloonAudioClip;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private AudioClip m_mediumBalloonAudioClip;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip m_smallBalloonAudioClip;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private AudioClip m_errorBalloonAudioClip;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioMixerGroup m_ringMixer;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private AudioClip m_bigRingAudioClip;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip m_mediumRingAudioClip;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private AudioClip m_smallRingAudioClip;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip m_tinyRingAudioClip;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private AudioClip m_failRingKeepAudioClip;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip m_failRingRemoveAudioClip;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private AudioClip m_bronzeLandingClip;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip m_silverLandingClip;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private AudioClip m_goldLandingClip;

	[Token(Token = "0x170002A2")]
	public static DefaultAudioManager Instance
	{
		[Token(Token = "0x600116D")]
		[Address(RVA = "0x3BC86C", Offset = "0x3BC86C", VA = "0x3BC86C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A3")]
	public AudioMixerGroup MasterMixer
	{
		[Token(Token = "0x600116F")]
		[Address(RVA = "0x3BC988", Offset = "0x3BC988", VA = "0x3BC988")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A4")]
	public AudioClip LowTimeClip
	{
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x3BC990", Offset = "0x3BC990", VA = "0x3BC990")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A5")]
	public AudioMixerGroup UIMixer
	{
		[Token(Token = "0x6001171")]
		[Address(RVA = "0x3BC998", Offset = "0x3BC998", VA = "0x3BC998")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A6")]
	public AudioClip UITapButtonClip
	{
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x3BC9A0", Offset = "0x3BC9A0", VA = "0x3BC9A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A7")]
	public AudioClip UIInsertFloppyClip
	{
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x3BC9A8", Offset = "0x3BC9A8", VA = "0x3BC9A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A8")]
	public AudioClip UIEjectFloppyClip
	{
		[Token(Token = "0x6001174")]
		[Address(RVA = "0x3BC9B0", Offset = "0x3BC9B0", VA = "0x3BC9B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A9")]
	public AudioClip UIShredFloppyClip
	{
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x3BC9B8", Offset = "0x3BC9B8", VA = "0x3BC9B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AA")]
	public AudioClip UIPressKeyboardClips
	{
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x3BC9C0", Offset = "0x3BC9C0", VA = "0x3BC9C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AB")]
	public AudioClip UIVisorUpClip
	{
		[Token(Token = "0x6001177")]
		[Address(RVA = "0x3BCA6C", Offset = "0x3BCA6C", VA = "0x3BCA6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AC")]
	public AudioClip UIVisorDownClip
	{
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x3BCA74", Offset = "0x3BCA74", VA = "0x3BCA74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AD")]
	public AudioClip LoadingCompBootClip
	{
		[Token(Token = "0x6001179")]
		[Address(RVA = "0x3BCA7C", Offset = "0x3BCA7C", VA = "0x3BCA7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AE")]
	public AudioClip LoadingCompIdleClip
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x3BCA84", Offset = "0x3BCA84", VA = "0x3BCA84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AF")]
	public AudioClip NotEnoughMoneyClip
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x3BCA8C", Offset = "0x3BCA8C", VA = "0x3BCA8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B0")]
	public AudioClip PurchasedItemClip
	{
		[Token(Token = "0x600117C")]
		[Address(RVA = "0x3BCA94", Offset = "0x3BCA94", VA = "0x3BCA94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B1")]
	public AudioMixerGroup MedalMixer
	{
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x3BCA9C", Offset = "0x3BCA9C", VA = "0x3BCA9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B2")]
	public AudioClip GoldAudioClip
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0x3BCAA4", Offset = "0x3BCAA4", VA = "0x3BCAA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B3")]
	public AudioClip SilverAudioClip
	{
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x3BCAAC", Offset = "0x3BCAAC", VA = "0x3BCAAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B4")]
	public AudioClip BronzeAudioClip
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0x3BCAB4", Offset = "0x3BCAB4", VA = "0x3BCAB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B5")]
	public AudioClip FailAudioClip
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x3BCABC", Offset = "0x3BCABC", VA = "0x3BCABC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B6")]
	public AudioMixerGroup BalloonMixer
	{
		[Token(Token = "0x6001182")]
		[Address(RVA = "0x3BCAC4", Offset = "0x3BCAC4", VA = "0x3BCAC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B7")]
	public AnimationCurve BalloonAudioCurve
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x3BCACC", Offset = "0x3BCACC", VA = "0x3BCACC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B8")]
	public AudioClip BigBalloonAudioClip
	{
		[Token(Token = "0x6001184")]
		[Address(RVA = "0x3BCAD4", Offset = "0x3BCAD4", VA = "0x3BCAD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B9")]
	public AudioClip MediumBalloonAudioClip
	{
		[Token(Token = "0x6001185")]
		[Address(RVA = "0x3BCADC", Offset = "0x3BCADC", VA = "0x3BCADC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BA")]
	public AudioClip SmallBalloonAudioClip
	{
		[Token(Token = "0x6001186")]
		[Address(RVA = "0x3BCAE4", Offset = "0x3BCAE4", VA = "0x3BCAE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BB")]
	public AudioClip ErrorBalloonAudioClip
	{
		[Token(Token = "0x6001187")]
		[Address(RVA = "0x3BCAEC", Offset = "0x3BCAEC", VA = "0x3BCAEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BC")]
	public AudioClip BigRingAudioClip
	{
		[Token(Token = "0x6001188")]
		[Address(RVA = "0x3BCAF4", Offset = "0x3BCAF4", VA = "0x3BCAF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BD")]
	public AudioClip MediumRingAudioClip
	{
		[Token(Token = "0x6001189")]
		[Address(RVA = "0x3BCAFC", Offset = "0x3BCAFC", VA = "0x3BCAFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BE")]
	public AudioClip SmallRingAudioClip
	{
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x3BCB04", Offset = "0x3BCB04", VA = "0x3BCB04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BF")]
	public AudioClip TinyRingAudioClip
	{
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x3BCB0C", Offset = "0x3BCB0C", VA = "0x3BCB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C0")]
	public AudioClip FailRingKeepAudioClip
	{
		[Token(Token = "0x600118C")]
		[Address(RVA = "0x3BCB14", Offset = "0x3BCB14", VA = "0x3BCB14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C1")]
	public AudioClip FailRingRemoveAudioClip
	{
		[Token(Token = "0x600118D")]
		[Address(RVA = "0x3BCB1C", Offset = "0x3BCB1C", VA = "0x3BCB1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C2")]
	public AudioClip BronzeLandingAudioClip
	{
		[Token(Token = "0x600118E")]
		[Address(RVA = "0x3BCB24", Offset = "0x3BCB24", VA = "0x3BCB24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C3")]
	public AudioClip SilverLandingAudioClip
	{
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x3BCB2C", Offset = "0x3BCB2C", VA = "0x3BCB2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C4")]
	public AudioClip GoldLandingAudioClip
	{
		[Token(Token = "0x6001190")]
		[Address(RVA = "0x3BCB34", Offset = "0x3BCB34", VA = "0x3BCB34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x3BC864", Offset = "0x3BC864", VA = "0x3BC864")]
	public DefaultAudioManager()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x3BC8F8", Offset = "0x3BC8F8", VA = "0x3BC8F8")]
	private void _InitSingleton()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x3BCB3C", Offset = "0x3BCB3C", VA = "0x3BCB3C")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000289")]
public class DeviceAudio : MonoBehaviour
{
	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioClip m_deviceOnClip;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioClip m_deviceOffClip;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DashGuage m_deviceInput;

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x3BDEBC", Offset = "0x3BDEBC", VA = "0x3BDEBC")]
	public DeviceAudio()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x3BDEC4", Offset = "0x3BDEC4", VA = "0x3BDEC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x3BDEE0", Offset = "0x3BDEE0", VA = "0x3BDEE0")]
	private void _AwakeGetAudioSource()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x3BDF94", Offset = "0x3BDF94", VA = "0x3BDF94")]
	private void _AwakeGetSwitchDeviceInput()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x3BE18C", Offset = "0x3BE18C", VA = "0x3BE18C")]
	private void _OnDeviceOnCallback()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x3BE244", Offset = "0x3BE244", VA = "0x3BE244")]
	private void _OnDeviceOffCallback()
	{
	}
}
[Token(Token = "0x200028A")]
public class EngineAudio : MonoBehaviour, IModdableAudio, IEngineAudio
{
	[Token(Token = "0x200028B")]
	public enum SOUND_STATE
	{
		[Token(Token = "0x4000DD7")]
		Off,
		[Token(Token = "0x4000DD8")]
		Transitioning,
		[Token(Token = "0x4000DD9")]
		On
	}

	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173BF4", Offset = "0x173BF4")]
	private sealed class <startOnAwake>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EngineAudio $this;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000501")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0x3D47DC", Offset = "0x3D47DC", VA = "0x3D47DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0x3D47E4", Offset = "0x3D47E4", VA = "0x3D47E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x3D1848", Offset = "0x3D1848", VA = "0x3D1848")]
		[DebuggerHidden]
		public <startOnAwake>c__Iterator0()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x3D45F0", Offset = "0x3D45F0", VA = "0x3D45F0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x3D47EC", Offset = "0x3D47EC", VA = "0x3D47EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x3D4800", Offset = "0x3D4800", VA = "0x3D4800", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C04", Offset = "0x173C04")]
	private sealed class <_StartEngine>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <timeStarted>__0;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal EngineAudio $this;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000503")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0x3D3D64", Offset = "0x3D3D64", VA = "0x3D3D64", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000504")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600255D")]
			[Address(RVA = "0x3D3D6C", Offset = "0x3D3D6C", VA = "0x3D3D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x3D23AC", Offset = "0x3D23AC", VA = "0x3D23AC")]
		[DebuggerHidden]
		public <_StartEngine>c__Iterator1()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x3D3AFC", Offset = "0x3D3AFC", VA = "0x3D3AFC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x3D3D74", Offset = "0x3D3D74", VA = "0x3D3D74", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x3D3D88", Offset = "0x3D3D88", VA = "0x3D3D88", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C14", Offset = "0x173C14")]
	private sealed class <_RunEngine>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EngineAudio $this;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000505")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002562")]
			[Address(RVA = "0x3D3A50", Offset = "0x3D3A50", VA = "0x3D3A50", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002563")]
			[Address(RVA = "0x3D3A58", Offset = "0x3D3A58", VA = "0x3D3A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x3D2438", Offset = "0x3D2438", VA = "0x3D2438")]
		[DebuggerHidden]
		public <_RunEngine>c__Iterator2()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x3D36E4", Offset = "0x3D36E4", VA = "0x3D36E4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x3D3A60", Offset = "0x3D3A60", VA = "0x3D3A60", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x3D3A74", Offset = "0x3D3A74", VA = "0x3D3A74", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C24", Offset = "0x173C24")]
	private sealed class <_StartFail>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EngineAudio $this;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000507")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002568")]
			[Address(RVA = "0x3D3FBC", Offset = "0x3D3FBC", VA = "0x3D3FBC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000508")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002569")]
			[Address(RVA = "0x3D3FC4", Offset = "0x3D3FC4", VA = "0x3D3FC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x3D24C4", Offset = "0x3D24C4", VA = "0x3D24C4")]
		[DebuggerHidden]
		public <_StartFail>c__Iterator3()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x3D3E10", Offset = "0x3D3E10", VA = "0x3D3E10", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x3D3FCC", Offset = "0x3D3FCC", VA = "0x3D3FCC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x3D3FE0", Offset = "0x3D3FE0", VA = "0x3D3FE0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C34", Offset = "0x173C34")]
	private sealed class <_StopEngine>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EngineAudio $this;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000509")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600256E")]
			[Address(RVA = "0x3D4544", Offset = "0x3D4544", VA = "0x3D4544", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600256F")]
			[Address(RVA = "0x3D454C", Offset = "0x3D454C", VA = "0x3D454C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x3D28BC", Offset = "0x3D28BC", VA = "0x3D28BC")]
		[DebuggerHidden]
		public <_StopEngine>c__Iterator4()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x3D4068", Offset = "0x3D4068", VA = "0x3D4068", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x3D4554", Offset = "0x3D4554", VA = "0x3D4554", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x3D4568", Offset = "0x3D4568", VA = "0x3D4568", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SOUND_STATE m_currentSoundState;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InteractableInputAudio m_magnetoBuzz;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioSource m_engineSourceCrank;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_engineCrankVolume;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_engineCrankPitch;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_engineSourceStartOutcome;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_engineStartOutcomeVolume;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_engineStartOutcomePitch;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AudioSource[] m_engineRunSources;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] m_engineRunSourcesVolume;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float[] m_engineRunSourcesPitch;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip m_engineCrank;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private AudioClip m_engineStart;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip m_engineFail;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private AudioClip m_engineShutdown;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] m_engineRunSounds;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float[] m_engineSoundPitchLow;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float[] m_engineSoundPitchHigh;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17966C", Offset = "0x17966C")]
	private float m_soundBlendThreshhold;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_soundBlendEndCaps;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_soundBlendLength;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_blendCrank;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_idleFadeInTime;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float m_engineFadeOutTime;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Engine.ENGINE_STATE m_previousEngineState;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Engine m_engine;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EngineAudio m_engineAudio;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_forceStopEngine;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SOUND_STATE m_previousSoundState;

	[Token(Token = "0x14000025")]
	public event AudioProcessingEventHandler PreProcessingEvent
	{
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x3D328C", Offset = "0x3D328C", VA = "0x3D328C", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x3D3398", Offset = "0x3D3398", VA = "0x3D3398", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event AudioProcessingEventHandler PostProcessingEvent
	{
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x3D34A4", Offset = "0x3D34A4", VA = "0x3D34A4", Slot = "6")]
		add
		{
		}
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x3D35B0", Offset = "0x3D35B0", VA = "0x3D35B0", Slot = "7")]
		remove
		{
		}
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x3D0A38", Offset = "0x3D0A38", VA = "0x3D0A38")]
	public EngineAudio()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x3D0A60", Offset = "0x3D0A60", VA = "0x3D0A60", Slot = "8")]
	public SOUND_STATE GetCurrentSoundState()
	{
		return default(SOUND_STATE);
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x3D0A68", Offset = "0x3D0A68", VA = "0x3D0A68")]
	public static EngineAudio Instance()
	{
		return null;
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x3D0C60", Offset = "0x3D0C60", VA = "0x3D0C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x3D10E4", Offset = "0x3D10E4", VA = "0x3D10E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x3D14BC", Offset = "0x3D14BC", VA = "0x3D14BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x3D1594", Offset = "0x3D1594", VA = "0x3D1594")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x3D16E8", Offset = "0x3D16E8", VA = "0x3D16E8")]
	private void _PauseAudio(bool isPaused)
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x3D178C", Offset = "0x3D178C", VA = "0x3D178C", Slot = "9")]
	public void StartOnAwake()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x3D17C4", Offset = "0x3D17C4", VA = "0x3D17C4")]
	[DebuggerHidden]
	private IEnumerator startOnAwake()
	{
		return null;
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x3D14FC", Offset = "0x3D14FC", VA = "0x3D14FC")]
	private void _SoundAdvance()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x3D1FDC", Offset = "0x3D1FDC", VA = "0x3D1FDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x3D1850", Offset = "0x3D1850", VA = "0x3D1850")]
	[DebuggerHidden]
	private IEnumerator _StartEngine()
	{
		return null;
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x3D23B4", Offset = "0x3D23B4", VA = "0x3D23B4")]
	[DebuggerHidden]
	private IEnumerator _RunEngine()
	{
		return null;
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x3D2440", Offset = "0x3D2440", VA = "0x3D2440")]
	[DebuggerHidden]
	private IEnumerator _StartFail()
	{
		return null;
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x3D18D4", Offset = "0x3D18D4", VA = "0x3D18D4")]
	private void _EngineRunning()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x3D1F58", Offset = "0x3D1F58", VA = "0x3D1F58")]
	[DebuggerHidden]
	private IEnumerator _StopEngine()
	{
		return null;
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x3D24CC", Offset = "0x3D24CC", VA = "0x3D24CC")]
	private int _SetClip(float clip)
	{
		return default(int);
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x3D2278", Offset = "0x3D2278", VA = "0x3D2278")]
	private void _SetVolume(AudioSource audioSource, float volume, [Optional] float? pitch)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x3D28C4", Offset = "0x3D28C4", VA = "0x3D28C4", Slot = "10")]
	public void ForceStopEngine()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x3D29F8", Offset = "0x3D29F8", VA = "0x3D29F8", Slot = "11")]
	public void ForceStartEngine()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x3D2B28", Offset = "0x3D2B28", VA = "0x3D2B28")]
	public static EngineAudio FindEngineAudio(Transform transform, EngineAudio engineAudio)
	{
		return null;
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x3D2F3C", Offset = "0x3D2F3C", VA = "0x3D2F3C")]
	public static IEngineAudio FindIEngineAudio(Transform transform, IEngineAudio iEngineAudio)
	{
		return null;
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x3D36BC", Offset = "0x3D36BC", VA = "0x3D36BC", Slot = "12")]
	protected virtual void _OnPreProcessing(AudioSource source)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x3D36D0", Offset = "0x3D36D0", VA = "0x3D36D0", Slot = "13")]
	protected virtual void _OnPostProcessing(AudioSource source)
	{
	}
}
[Token(Token = "0x200028C")]
public class EngineRocketAudio : MonoBehaviour, IModdableAudio, IEngineAudio
{
	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private EngineRocket m_engineRocket;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioSource m_rocketSource;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_rocketSourceVolume;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_rocketSourcePitch;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AudioSource m_rocketLoopSource;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_rocketLoopSourceVolume;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_rocketLoopSourcePitch;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] m_rocketLoopClip;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AudioClip[] m_rocketBoostClip;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] m_rocketLaunchClip;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private AudioClip[] m_rocketOffClip;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip[] m_rocketFailClip;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private EngineAudio.SOUND_STATE m_currentSoundState;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_forceStopEngine;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private EngineAudio.SOUND_STATE m_previousSoundState;

	[Token(Token = "0x14000027")]
	public event AudioProcessingEventHandler PreProcessingEvent
	{
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x3D6320", Offset = "0x3D6320", VA = "0x3D6320", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x3D642C", Offset = "0x3D642C", VA = "0x3D642C", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event AudioProcessingEventHandler PostProcessingEvent
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x3D6538", Offset = "0x3D6538", VA = "0x3D6538", Slot = "6")]
		add
		{
		}
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x3D6644", Offset = "0x3D6644", VA = "0x3D6644", Slot = "7")]
		remove
		{
		}
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x3D517C", Offset = "0x3D517C", VA = "0x3D517C")]
	public EngineRocketAudio()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x3D5184", Offset = "0x3D5184", VA = "0x3D5184")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x3D58F0", Offset = "0x3D58F0", VA = "0x3D58F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x3D51A8", Offset = "0x3D51A8", VA = "0x3D51A8")]
	private void _GetEngineRocket()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x3D546C", Offset = "0x3D546C", VA = "0x3D546C")]
	private void _SubscribeToEvents()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x3D5B00", Offset = "0x3D5B00", VA = "0x3D5B00")]
	private void _OnFirstIgniteRocketCallback()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x3D5D18", Offset = "0x3D5D18", VA = "0x3D5D18")]
	private void _OnIgniteRocketCallback()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x3D5B08", Offset = "0x3D5B08", VA = "0x3D5B08")]
	private void _IgniteRocket(AudioClip[] Clips)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x3D5D20", Offset = "0x3D5D20", VA = "0x3D5D20")]
	private void _OnRocketUpdateCallback(float perFuelLeft)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x3D5DD4", Offset = "0x3D5DD4", VA = "0x3D5DD4")]
	private void _OnRocketOffCallback()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x3D5F74", Offset = "0x3D5F74", VA = "0x3D5F74")]
	private void _OnRocketFailCallback()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x3D60B4", Offset = "0x3D60B4", VA = "0x3D60B4", Slot = "8")]
	public EngineAudio.SOUND_STATE GetCurrentSoundState()
	{
		return default(EngineAudio.SOUND_STATE);
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x3D5744", Offset = "0x3D5744", VA = "0x3D5744")]
	private void _SetupAudioSource()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x3D60BC", Offset = "0x3D60BC", VA = "0x3D60BC", Slot = "9")]
	public void StartOnAwake()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x3D60C4", Offset = "0x3D60C4", VA = "0x3D60C4")]
	private void _StartOnAwake()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x3D60CC", Offset = "0x3D60CC", VA = "0x3D60CC", Slot = "10")]
	public void ForceStopEngine()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x3D60D0", Offset = "0x3D60D0", VA = "0x3D60D0")]
	private void _ForceStopEngine()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x3D61F8", Offset = "0x3D61F8", VA = "0x3D61F8", Slot = "11")]
	public void ForceStartEngine()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x3D61FC", Offset = "0x3D61FC", VA = "0x3D61FC")]
	private void _ForceStartEngine()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x3D59CC", Offset = "0x3D59CC", VA = "0x3D59CC")]
	private void _SetVolume(AudioSource audioSource, float volume, [Optional] float? pitch)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x3D6750", Offset = "0x3D6750", VA = "0x3D6750")]
	protected void _OnPreProcessing(AudioSource source)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x3D6764", Offset = "0x3D6764", VA = "0x3D6764")]
	protected void _OnPostProcessing(AudioSource source)
	{
	}
}
[Token(Token = "0x200028D")]
public class HeadWindAudio : MonoBehaviour, IModdableAudio
{
	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioSource m_source;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioClip m_headwindClip;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_minVolumeKnots;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxVolumeKnots;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_maxVolume;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_minPitch;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_maxPitch;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool m_play;

	[Token(Token = "0x170002C5")]
	private float m_knots
	{
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x50695C", Offset = "0x50695C", VA = "0x50695C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000029")]
	public event AudioProcessingEventHandler PreProcessingEvent
	{
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x506A10", Offset = "0x506A10", VA = "0x506A10", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x506B1C", Offset = "0x506B1C", VA = "0x506B1C", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event AudioProcessingEventHandler PostProcessingEvent
	{
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x506C28", Offset = "0x506C28", VA = "0x506C28", Slot = "6")]
		add
		{
		}
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x506D34", Offset = "0x506D34", VA = "0x506D34", Slot = "7")]
		remove
		{
		}
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x506410", Offset = "0x506410", VA = "0x506410")]
	public HeadWindAudio()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x506440", Offset = "0x506440", VA = "0x506440")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x506708", Offset = "0x506708", VA = "0x506708")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x506464", Offset = "0x506464", VA = "0x506464")]
	private void _GetControllerAircraft()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x506548", Offset = "0x506548", VA = "0x506548")]
	private void _SetupHeadWind()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x50670C", Offset = "0x50670C", VA = "0x50670C")]
	private void _UpdateHeadWind()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x506510", Offset = "0x506510", VA = "0x506510")]
	public void ToggleAudio(bool isPlaying)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x506E40", Offset = "0x506E40", VA = "0x506E40", Slot = "8")]
	protected virtual void _OnPreProcessing(AudioSource source)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x506E54", Offset = "0x506E54", VA = "0x506E54", Slot = "9")]
	protected virtual void _OnPostProcessing(AudioSource source)
	{
	}
}
[Token(Token = "0x200028E")]
public interface IEngineAudio
{
	[Token(Token = "0x60011DE")]
	EngineAudio.SOUND_STATE GetCurrentSoundState();

	[Token(Token = "0x60011DF")]
	void StartOnAwake();

	[Token(Token = "0x60011E0")]
	void ForceStopEngine();

	[Token(Token = "0x60011E1")]
	void ForceStartEngine();
}
[Token(Token = "0x200028F")]
public delegate void AudioProcessingEventHandler(AudioSource source);
[Token(Token = "0x2000290")]
public interface IModdableAudio
{
	[Token(Token = "0x1400002B")]
	event AudioProcessingEventHandler PreProcessingEvent;

	[Token(Token = "0x1400002C")]
	event AudioProcessingEventHandler PostProcessingEvent;
}
[Token(Token = "0x2000291")]
public class InteractableInputAudio : MonoBehaviour
{
	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C44", Offset = "0x173C44")]
	private sealed class <_PlayDigitalState>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AudioClip clip;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float delay;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal InteractableInputAudio $this;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x1700050B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002574")]
			[Address(RVA = "0x51DE2C", Offset = "0x51DE2C", VA = "0x51DE2C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002575")]
			[Address(RVA = "0x51DE34", Offset = "0x51DE34", VA = "0x51DE34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x51D87C", Offset = "0x51D87C", VA = "0x51D87C")]
		[DebuggerHidden]
		public <_PlayDigitalState>c__Iterator0()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x51DC88", Offset = "0x51DC88", VA = "0x51DC88", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x51DE3C", Offset = "0x51DE3C", VA = "0x51DE3C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x51DE50", Offset = "0x51DE50", VA = "0x51DE50", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C54", Offset = "0x173C54")]
	private sealed class <_PlayAnalogState>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AudioClip clip;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float delay;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float input;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal InteractableInputAudio $this;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x1700050D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600257A")]
			[Address(RVA = "0x51DBDC", Offset = "0x51DBDC", VA = "0x51DBDC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600257B")]
			[Address(RVA = "0x51DBE4", Offset = "0x51DBE4", VA = "0x51DBE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x51D884", Offset = "0x51D884", VA = "0x51D884")]
		[DebuggerHidden]
		public <_PlayAnalogState>c__Iterator1()
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x51D8D0", Offset = "0x51D8D0", VA = "0x51D8D0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x51DBEC", Offset = "0x51DBEC", VA = "0x51DBEC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x51DC00", Offset = "0x51DC00", VA = "0x51DC00", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C64", Offset = "0x173C64")]
	private sealed class <_PlayIdleState>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AudioClip clip;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float delay;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float input;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <volumeTarget>__0;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <volumeRamp>__0;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float <currentVolume>__0;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal InteractableInputAudio $this;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x1700050F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0x51E400", Offset = "0x51E400", VA = "0x51E400", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0x51E408", Offset = "0x51E408", VA = "0x51E408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x51D88C", Offset = "0x51D88C", VA = "0x51D88C")]
		[DebuggerHidden]
		public <_PlayIdleState>c__Iterator2()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x51DED8", Offset = "0x51DED8", VA = "0x51DED8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x51E410", Offset = "0x51E410", VA = "0x51E410", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x51E424", Offset = "0x51E424", VA = "0x51E424", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_stateAudioSource;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_stateDelay;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioSource m_idleAudioSource;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_idleDelay;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_idleAudioPitchOn;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_idleAudioPitchOff;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_idleVolumeRampTimeOn;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_idleVolumeRampTimeOff;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_idleAudioVolumeOn;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_idleAudioVolumeOff;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_transitionAudioStopStillTime;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_transitionAudioSource;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_transitionDelay;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_transitionAudioPitchOn;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_transitionAudioPitchOff;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_transitionAudioVolumeOn;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_transitionAudioVolumeOff;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip m_clipOn;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private AudioClip m_clipOff;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip m_clipTransitionOn;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private AudioClip m_clipTransitionOff;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip m_clipIdleOn;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private AudioClip m_clipIdleOff;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_currentInput;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_lastInput;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_inputStillTime;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_useTransitionPitchOnIdle;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool m_forceAudioStop;

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x51C55C", Offset = "0x51C55C", VA = "0x51C55C")]
	public InteractableInputAudio()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x51C590", Offset = "0x51C590", VA = "0x51C590")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x51CEBC", Offset = "0x51CEBC", VA = "0x51CEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x51CF64", Offset = "0x51CF64", VA = "0x51CF64")]
	private void Update()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x51D028", Offset = "0x51D028", VA = "0x51D028")]
	private void _UpdateStillTime()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x51CE98", Offset = "0x51CE98", VA = "0x51CE98")]
	private void _GetInteractableInput()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x51C5BC", Offset = "0x51C5BC", VA = "0x51C5BC")]
	private void _CheckAudioSources()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x51CEC0", Offset = "0x51CEC0", VA = "0x51CEC0")]
	private void _SetStartState()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x51D0B4", Offset = "0x51D0B4", VA = "0x51D0B4")]
	private void _SwitchAdvance()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x51D1FC", Offset = "0x51D1FC", VA = "0x51D1FC")]
	private bool _CheckDigitalStates()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x51D298", Offset = "0x51D298", VA = "0x51D298")]
	private bool _CheckAnalogStates()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x51D34C", Offset = "0x51D34C", VA = "0x51D34C")]
	private bool _CheckIdleStates()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x51D498", Offset = "0x51D498", VA = "0x51D498")]
	[DebuggerHidden]
	private IEnumerator _PlayDigitalState(AudioClip clip, float delay)
	{
		return null;
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x51D60C", Offset = "0x51D60C", VA = "0x51D60C")]
	[DebuggerHidden]
	private IEnumerator _PlayAnalogState(AudioClip clip, float input, float delay)
	{
		return null;
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x51D79C", Offset = "0x51D79C", VA = "0x51D79C")]
	[DebuggerHidden]
	private IEnumerator _PlayIdleState(AudioClip clip, float input, float delay)
	{
		return null;
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x51D3E8", Offset = "0x51D3E8", VA = "0x51D3E8")]
	private void _StopDigitalState()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x51D6EC", Offset = "0x51D6EC", VA = "0x51D6EC")]
	private void _StopAnalogState()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x51D55C", Offset = "0x51D55C", VA = "0x51D55C")]
	private void _StopIdleState()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x51D894", Offset = "0x51D894", VA = "0x51D894")]
	public void ForceStopAudio()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x51D8C4", Offset = "0x51D8C4", VA = "0x51D8C4")]
	public void ForceStartAudio()
	{
	}
}
[Token(Token = "0x2000292")]
public class OnLookLowerVolume : MonoBehaviour
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Camera m_mainCamera;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject m_moddableAudioObj;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IModdableAudio m_moddableAudio;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_inverse;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_minVolume;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_maxVolume;

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x2AFE7C", Offset = "0x2AFE7C", VA = "0x2AFE7C")]
	public OnLookLowerVolume()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x2AFE8C", Offset = "0x2AFE8C", VA = "0x2AFE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x2B0190", Offset = "0x2B0190", VA = "0x2B0190")]
	private void Update()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x2AFEA8", Offset = "0x2AFEA8", VA = "0x2AFEA8")]
	private void _GetMainCamera()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x2B0004", Offset = "0x2B0004", VA = "0x2B0004")]
	private void _GetModdableAudio()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x2B0194", Offset = "0x2B0194", VA = "0x2B0194")]
	private void _PostProcessModdableAudio(AudioSource source)
	{
	}
}
[Token(Token = "0x2000293")]
public class PauseAudioSourceOnGamePause : MonoBehaviour
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameManager m_gameManager;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x27AA18", Offset = "0x27AA18", VA = "0x27AA18")]
	public PauseAudioSourceOnGamePause()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x27AA20", Offset = "0x27AA20", VA = "0x27AA20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x27ABC0", Offset = "0x27ABC0", VA = "0x27ABC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x27ACAC", Offset = "0x27ACAC", VA = "0x27ACAC")]
	private void _Pause(bool isPaused)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x27ACBC", Offset = "0x27ACBC", VA = "0x27ACBC")]
	private void _PauseAudioSource()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x27AD6C", Offset = "0x27AD6C", VA = "0x27AD6C")]
	private void _UnpauseAudioSource()
	{
	}
}
[Token(Token = "0x2000294")]
public class SetupAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	public enum AUDIOSOURCE_TO_USE
	{
		[Token(Token = "0x4000E21")]
		None = -1,
		[Token(Token = "0x4000E22")]
		BGM,
		[Token(Token = "0x4000E23")]
		SFX,
		[Token(Token = "0x4000E24")]
		Custom,
		[Token(Token = "0x4000E25")]
		Length
	}

	[Serializable]
	[Token(Token = "0x2000296")]
	public class AudioSourceSettings
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float MinDistance;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float MaxDistance;

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x2FC648", Offset = "0x2FC648", VA = "0x2FC648")]
		public AudioSourceSettings(float minDist, float maxDist)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000297")]
	public class ONSPSettings
	{
		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Gain;

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x2FC68C", Offset = "0x2FC68C", VA = "0x2FC68C")]
		public ONSPSettings(float gain)
		{
		}
	}

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioSource m_customAudioSource;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private AUDIOSOURCE_TO_USE m_audioSourceToUse;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSourceSettings m_audioSourceSettings;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private ONSPSettings m_onspSettings;

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x2FC1F4", Offset = "0x2FC1F4", VA = "0x2FC1F4")]
	public SetupAudioSource()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x2FC204", Offset = "0x2FC204", VA = "0x2FC204")]
	private void _SetAudioSourceTo3D(AudioSource audioSource)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x2FC53C", Offset = "0x2FC53C", VA = "0x2FC53C")]
	private void _SetupAudioSource(AudioSource audioSource)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x2FC2C0", Offset = "0x2FC2C0", VA = "0x2FC2C0")]
	private void _SetupONSPAudioSource(GameObject go, [Optional] AudioSource audioSource)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x2FC644", Offset = "0x2FC644", VA = "0x2FC644")]
	private void _SetAudioSourceTo2D(AudioSource audioSource)
	{
	}
}
[Token(Token = "0x2000298")]
public class SFXAudioController : MonoBehaviour
{
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C74", Offset = "0x173C74")]
	private sealed class <_ChangeClip>c__AnonStorey0
	{
		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SFXClip.SFX_Type type;

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x2E410C", Offset = "0x2E410C", VA = "0x2E410C")]
		public <_ChangeClip>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x2E4120", Offset = "0x2E4120", VA = "0x2E4120")]
		internal bool <>m__0(SFXClip x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C84", Offset = "0x173C84")]
	private sealed class <_PlayOneShot>c__AnonStorey1
	{
		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SFXClip.SFX_Type type;

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x2E4114", Offset = "0x2E4114", VA = "0x2E4114")]
		public <_PlayOneShot>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x2E4158", Offset = "0x2E4158", VA = "0x2E4158")]
		internal bool <>m__0(SFXClip x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SFXAudioController s_instance;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_source;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SFXClip[] m_clips;

	[Token(Token = "0x170002C6")]
	public static SFXAudioController Instance
	{
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x2E3530", Offset = "0x2E3530", VA = "0x2E3530")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C7")]
	public float AudioSourceTime
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x2E4058", Offset = "0x2E4058", VA = "0x2E4058")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x2E3528", Offset = "0x2E3528", VA = "0x2E3528")]
	public SFXAudioController()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x2E35BC", Offset = "0x2E35BC", VA = "0x2E35BC")]
	private void _InitSingleton()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x2E364C", Offset = "0x2E364C", VA = "0x2E364C")]
	public void PlaySFX()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x2E367C", Offset = "0x2E367C", VA = "0x2E367C")]
	public void StopSFX()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x2E36AC", Offset = "0x2E36AC", VA = "0x2E36AC")]
	public void ChangeClip(AudioClip clip)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x2E379C", Offset = "0x2E379C", VA = "0x2E379C")]
	public void ChangeClip(SFXClip.SFX_Type type)
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x2E393C", Offset = "0x2E393C", VA = "0x2E393C")]
	public AudioSource PlayOneShot(AudioClip clip, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x2E3C1C", Offset = "0x2E3C1C", VA = "0x2E3C1C")]
	public AudioSource PlayOneShot(SFXClip.SFX_Type type, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x2E3F90", Offset = "0x2E3F90", VA = "0x2E3F90")]
	private void Start()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x2E3FAC", Offset = "0x2E3FAC", VA = "0x2E3FAC")]
	private void _FindAudioSource()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x2E36B4", Offset = "0x2E36B4", VA = "0x2E36B4")]
	private void _ChangeClip(AudioClip clip, bool autoPlay = true)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x2E37A4", Offset = "0x2E37A4", VA = "0x2E37A4")]
	private void _ChangeClip(SFXClip.SFX_Type type, bool autoPlay = true)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x2E3650", Offset = "0x2E3650", VA = "0x2E3650")]
	private void _PlaySFX()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x2E3680", Offset = "0x2E3680", VA = "0x2E3680")]
	private void _StopSFX()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x2E395C", Offset = "0x2E395C", VA = "0x2E395C")]
	private AudioSource _PlayOneShot(AudioClip clip, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x2E3C3C", Offset = "0x2E3C3C", VA = "0x2E3C3C")]
	private AudioSource _PlayOneShot(SFXClip.SFX_Type type, Vector3 position)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000299")]
public class SFXClip
{
	[Token(Token = "0x200029A")]
	public enum SFX_Type
	{
		[Token(Token = "0x4000E2F")]
		None,
		[Token(Token = "0x4000E30")]
		Death
	}

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AudioClip Clip;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SFX_Type Type;

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x2E4190", Offset = "0x2E4190", VA = "0x2E4190")]
	public SFXClip(AudioClip clip, SFX_Type type = SFX_Type.None)
	{
	}
}
[Token(Token = "0x200029B")]
public class SimpleSound : MonoBehaviour
{
	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173C94", Offset = "0x173C94")]
	private sealed class <FadeSoundIn>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <currentVolume>__0;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float desiredVolume;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SimpleSound $this;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000511")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600258A")]
			[Address(RVA = "0x2BCD18", Offset = "0x2BCD18", VA = "0x2BCD18", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000512")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0x2BCD20", Offset = "0x2BCD20", VA = "0x2BCD20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x2BCB20", Offset = "0x2BCB20", VA = "0x2BCB20")]
		[DebuggerHidden]
		public <FadeSoundIn>c__Iterator0()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x2BCB28", Offset = "0x2BCB28", VA = "0x2BCB28", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x2BCD28", Offset = "0x2BCD28", VA = "0x2BCD28", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x2BCD3C", Offset = "0x2BCD3C", VA = "0x2BCD3C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_fadeSoundIn;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_fadeInTime;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_offSetSound;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x2BC808", Offset = "0x2BC808", VA = "0x2BC808")]
	public SimpleSound()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x2BC818", Offset = "0x2BC818", VA = "0x2BC818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x2BC954", Offset = "0x2BC954", VA = "0x2BC954")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x2BCA74", Offset = "0x2BCA74", VA = "0x2BCA74")]
	[DebuggerHidden]
	private IEnumerator FadeSoundIn(float desiredVolume)
	{
		return null;
	}
}
[Token(Token = "0x200029C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172B24", Offset = "0x172B24")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172B24", Offset = "0x172B24")]
public class SoundSourceFollower : MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioClip m_audioClip;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_seekTime;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private LayerMask m_LayerToRaycast;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int m_measureEveryXFrame;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_volumeInterpTime;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_volume;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform m_camera;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ONSPAudioSource m_onspAudioSource;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_isOverWater;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_rayDistance;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x170002C8")]
	public bool IsOverWater
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x2BFB90", Offset = "0x2BFB90", VA = "0x2BFB90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x2BFB78", Offset = "0x2BFB78", VA = "0x2BFB78")]
	public SoundSourceFollower()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x2BFB98", Offset = "0x2BFB98", VA = "0x2BFB98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x2BFD3C", Offset = "0x2BFD3C", VA = "0x2BFD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x2BFE2C", Offset = "0x2BFE2C", VA = "0x2BFE2C")]
	private void Update()
	{
	}
}
[Token(Token = "0x200029D")]
public static class Assertion
{
	[Token(Token = "0x4000E41")]
	private const string DEFAULT_MESSAGE = "AssertionError";

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x42D334", Offset = "0x42D334", VA = "0x42D334")]
	public static void Assert(bool expression)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x42D398", Offset = "0x42D398", VA = "0x42D398")]
	public static void Assert(bool expression, string assertErrorMessage)
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x42D46C", Offset = "0x42D46C", VA = "0x42D46C")]
	public static void AssertNotNull(object pointer, string name)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x42D518", Offset = "0x42D518", VA = "0x42D518")]
	public static void AssertNotNull(object pointer)
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x42D584", Offset = "0x42D584", VA = "0x42D584")]
	public static void AssertNotNull(UnityEngine.Object pointer, string name)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x42D668", Offset = "0x42D668", VA = "0x42D668")]
	public static void AssertNotNull(UnityEngine.Object pointer)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x42D70C", Offset = "0x42D70C", VA = "0x42D70C")]
	public static void AssertNotEmpty(string s, string name)
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x42D7C0", Offset = "0x42D7C0", VA = "0x42D7C0")]
	public static void AssertNotEmpty(string s)
	{
	}
}
namespace Common.Fsm
{
	[Token(Token = "0x200029E")]
	public class FsmDelegateAction : FsmActionAdapter
	{
		[Token(Token = "0x200029F")]
		public delegate void FsmActionRoutine(FsmState owner);

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private FsmActionRoutine onEnterRoutine;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FsmActionRoutine onUpdateRoutine;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private FsmActionRoutine onExitRoutine;

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x30C618", Offset = "0x30C618", VA = "0x30C618")]
		public FsmDelegateAction(FsmState owner, FsmActionRoutine onEnterRoutine)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x30C64C", Offset = "0x30C64C", VA = "0x30C64C")]
		public FsmDelegateAction(FsmState owner, FsmActionRoutine onEnterRoutine, FsmActionRoutine onUpdateRoutine, [Optional] FsmActionRoutine onExitRoutine)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x30C684", Offset = "0x30C684", VA = "0x30C684", Slot = "8")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x30CA5C", Offset = "0x30CA5C", VA = "0x30CA5C", Slot = "9")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x30CA78", Offset = "0x30CA78", VA = "0x30CA78", Slot = "10")]
		public override void OnExit()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	internal class ConcreteFsmState : FsmState
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly string name;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Fsm owner;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, FsmState> transitionMap;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly List<FsmAction> actionList;

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x30AD38", Offset = "0x30AD38", VA = "0x30AD38")]
		public ConcreteFsmState(string name, Fsm owner)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x30AE08", Offset = "0x30AE08", VA = "0x30AE08", Slot = "4")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x30AE10", Offset = "0x30AE10", VA = "0x30AE10", Slot = "5")]
		public void AddTransition(string eventId, FsmState destinationState)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x30AF2C", Offset = "0x30AF2C", VA = "0x30AF2C", Slot = "6")]
		public FsmState GetTransition(string eventId)
		{
			return null;
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x30AFEC", Offset = "0x30AFEC", VA = "0x30AFEC", Slot = "7")]
		public void AddAction(FsmAction action)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x30B164", Offset = "0x30B164", VA = "0x30B164", Slot = "8")]
		public IEnumerable<FsmAction> GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x30B16C", Offset = "0x30B16C", VA = "0x30B16C", Slot = "9")]
		public void SendEvent(string eventId)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class Fsm
	{
		[Token(Token = "0x20002A2")]
		private delegate void StateActionProcessor(FsmAction action);

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173CA4", Offset = "0x173CA4")]
		private sealed class <ExitState>c__AnonStorey0
		{
			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal FsmState currentStateOnInvoke;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal Fsm $this;

			[Token(Token = "0x600258E")]
			[Address(RVA = "0x30BF70", Offset = "0x30BF70", VA = "0x30BF70")]
			public <ExitState>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0x30C45C", Offset = "0x30C45C", VA = "0x30C45C")]
			internal void <>m__0(FsmAction action)
			{
			}
		}

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly string name;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private FsmState currentState;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, FsmState> stateMap;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Dictionary<string, FsmState> globalTransitionMap;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179BCC", Offset = "0x179BCC")]
		private static StateActionProcessor <>f__am$cache0;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179BDC", Offset = "0x179BDC")]
		private static StateActionProcessor <>f__am$cache1;

		[Token(Token = "0x170002C9")]
		public string Name
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x30B394", Offset = "0x30B394", VA = "0x30B394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x30B2F8", Offset = "0x30B2F8", VA = "0x30B2F8")]
		public Fsm(string name)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x30B39C", Offset = "0x30B39C", VA = "0x30B39C")]
		public FsmState AddState(string name)
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x30B4D4", Offset = "0x30B4D4", VA = "0x30B4D4")]
		private void ProcessStateActions(FsmState state, StateActionProcessor actionProcessor)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x30BC3C", Offset = "0x30BC3C", VA = "0x30BC3C")]
		public void Start(string stateName)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x30BD54", Offset = "0x30BD54", VA = "0x30BD54")]
		private void ChangeToState(FsmState state)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x30BE70", Offset = "0x30BE70", VA = "0x30BE70")]
		private void EnterState(FsmState state)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x30BD88", Offset = "0x30BD88", VA = "0x30BD88")]
		private void ExitState(FsmState state)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x30BF78", Offset = "0x30BF78", VA = "0x30BF78")]
		public void Update()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x30C054", Offset = "0x30C054", VA = "0x30C054")]
		public FsmState GetCurrentState()
		{
			return null;
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x30B19C", Offset = "0x30B19C", VA = "0x30B19C")]
		public void SendEvent(string eventId)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x30C05C", Offset = "0x30C05C", VA = "0x30C05C")]
		private FsmState ResolveTransition(string eventId)
		{
			return null;
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x30C1B0", Offset = "0x30C1B0", VA = "0x30C1B0")]
		public void AddGlobalTransition(string eventId, FsmState destinationState)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x30C2B4", Offset = "0x30C2B4", VA = "0x30C2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180E78", Offset = "0x180E78")]
		private static void <EnterState>m__0(FsmAction action)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x30C388", Offset = "0x30C388", VA = "0x30C388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180E88", Offset = "0x180E88")]
		private static void <Update>m__1(FsmAction action)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public interface FsmAction
	{
		[Token(Token = "0x6001259")]
		FsmState GetOwner();

		[Token(Token = "0x600125A")]
		void OnEnter();

		[Token(Token = "0x600125B")]
		void OnUpdate();

		[Token(Token = "0x600125C")]
		void OnExit();
	}
	[Token(Token = "0x20002A4")]
	public abstract class FsmActionAdapter : FsmAction
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly FsmState owner;

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x30C5E4", Offset = "0x30C5E4", VA = "0x30C5E4")]
		public FsmActionAdapter(FsmState owner)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x30C604", Offset = "0x30C604", VA = "0x30C604", Slot = "4")]
		public FsmState GetOwner()
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x30C60C", Offset = "0x30C60C", VA = "0x30C60C", Slot = "8")]
		public virtual void OnEnter()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x30C610", Offset = "0x30C610", VA = "0x30C610", Slot = "9")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x30C614", Offset = "0x30C614", VA = "0x30C614", Slot = "10")]
		public virtual void OnExit()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public interface FsmState
	{
		[Token(Token = "0x6001262")]
		string GetName();

		[Token(Token = "0x6001263")]
		void AddTransition(string eventId, FsmState destinationState);

		[Token(Token = "0x6001264")]
		FsmState GetTransition(string eventId);

		[Token(Token = "0x6001265")]
		void AddAction(FsmAction action);

		[Token(Token = "0x6001266")]
		IEnumerable<FsmAction> GetActions();

		[Token(Token = "0x6001267")]
		void SendEvent(string eventId);
	}
}
namespace Common.Query
{
	[Token(Token = "0x20002A6")]
	public class ConcreteQueryRequest : IQueryRequest
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string queryId;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Dictionary<string, object> paramMap;

		[Token(Token = "0x170002CA")]
		public string QueryId
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x30CBEC", Offset = "0x30CBEC", VA = "0x30CBEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x30CBF4", Offset = "0x30CBF4", VA = "0x30CBF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x30CAE0", Offset = "0x30CAE0", VA = "0x30CAE0")]
		public ConcreteQueryRequest()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x30CB6C", Offset = "0x30CB6C", VA = "0x30CB6C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x30CBFC", Offset = "0x30CBFC", VA = "0x30CBFC", Slot = "4")]
		public void AddParameter(string paramId, object value)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x30CCC0", Offset = "0x30CCC0", VA = "0x30CCC0", Slot = "5")]
		public bool HasParameter(string paramId)
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x30CD40", Offset = "0x30CD40", VA = "0x30CD40", Slot = "6")]
		public object GetParameter(string paramId)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A7")]
	internal class ConcreteQueryResult : IMutableQueryResult, IQueryResult
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private object result;

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x30CDF8", Offset = "0x30CDF8", VA = "0x30CDF8")]
		public ConcreteQueryResult()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x30CE00", Offset = "0x30CE00", VA = "0x30CE00", Slot = "4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x30CE0C", Offset = "0x30CE0C", VA = "0x30CE0C", Slot = "5")]
		public void Set(object result)
		{
		}

		[Token(Token = "0x6001272")]
		public T Get<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002A8")]
	public interface IMutableQueryResult : IQueryResult
	{
		[Token(Token = "0x6001273")]
		void Clear();

		[Token(Token = "0x6001274")]
		void Set(object result);
	}
	[Token(Token = "0x20002A9")]
	public interface IQueryRequest
	{
		[Token(Token = "0x6001275")]
		void AddParameter(string paramId, object value);

		[Token(Token = "0x6001276")]
		bool HasParameter(string paramId);

		[Token(Token = "0x6001277")]
		object GetParameter(string paramId);
	}
	[Token(Token = "0x20002AA")]
	public interface IQueryResult
	{
		[Token(Token = "0x6001278")]
		T Get<T>();
	}
	[Token(Token = "0x20002AB")]
	public delegate void QueryResultResolver(IQueryRequest request, IMutableQueryResult result);
	[Token(Token = "0x20002AC")]
	public static class QuerySystem
	{
		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly QuerySystemImplementation systemInstance;

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x30D248", Offset = "0x30D248", VA = "0x30D248")]
		public static void RegisterResolver(string queryId, QueryResultResolver resolver)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x30D3C0", Offset = "0x30D3C0", VA = "0x30D3C0")]
		public static void RemoveResolver(string queryId)
		{
		}

		[Token(Token = "0x600127F")]
		public static T Query<T>(string queryId)
		{
			return (T)null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x30D524", Offset = "0x30D524", VA = "0x30D524")]
		public static IQueryRequest Start(string queryId)
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		public static T Complete<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x30D694", Offset = "0x30D694", VA = "0x30D694")]
		public static bool HasResolver(string queryId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002AD")]
	internal class QuerySystemImplementation
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, QueryResultResolver> resolverMap;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private ConcreteQueryResult result;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConcreteQueryRequest request;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool locked;

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x30D83C", Offset = "0x30D83C", VA = "0x30D83C")]
		public QuerySystemImplementation()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x30D2FC", Offset = "0x30D2FC", VA = "0x30D2FC")]
		public void RegisterResolver(string queryId, QueryResultResolver resolver)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x30D46C", Offset = "0x30D46C", VA = "0x30D46C")]
		public void RemoveResolver(string queryId)
		{
		}

		[Token(Token = "0x6001287")]
		public T Query<T>(string queryId)
		{
			return (T)null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x30D5D0", Offset = "0x30D5D0", VA = "0x30D5D0")]
		public IQueryRequest Start(string queryId)
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		public T Complete<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x30D740", Offset = "0x30D740", VA = "0x30D740")]
		public bool HasResolver(string queryId)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x20002AE")]
public class RaceConfig : ScriptableObject
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int resourceCount;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int enemyCount;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179BEC", Offset = "0x179BEC")]
	public float lerpDuration;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showAdvancedSettings;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179C08", Offset = "0x179C08")]
	public float boostOffsetDuration;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179C28", Offset = "0x179C28")]
	public float slowdownOffsetDuration;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179C48", Offset = "0x179C48")]
	public float minSpeed;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179C60", Offset = "0x179C60")]
	public float maxSpeed;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float avoidanceDistance;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x179C78", Offset = "0x179C78")]
	public float[] baseAircraftSpeed;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x179C88", Offset = "0x179C88")]
	public string pathDirectory;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] pathFileName;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform[] aircraftPrefabReferences;

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x286BB8", Offset = "0x286BB8", VA = "0x286BB8")]
	public RaceConfig()
	{
	}
}
[Token(Token = "0x20002AF")]
public class RacePositionHolderConfig : ScriptableObject
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int numberOfPlaceHolders;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int numberOfRows;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int numberOfColumns;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float horizontalSpace;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalSpace;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initialXPosition;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float initialZPosition;

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x28B7B8", Offset = "0x28B7B8", VA = "0x28B7B8")]
	public RacePositionHolderConfig()
	{
	}
}
[Token(Token = "0x20002B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172BC8", Offset = "0x172BC8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172BC8", Offset = "0x172BC8")]
public class Decal : MonoBehaviour
{
	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material material;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite sprite;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179C98", Offset = "0x179C98")]
	public float maxAngle;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x179CB4", Offset = "0x179CB4")]
	public float pushDistanceBase;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pushDistance;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask affectedLayers;

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x3BBF90", Offset = "0x3BBF90", VA = "0x3BBF90")]
	public Decal()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x3BBFD8", Offset = "0x3BBFD8", VA = "0x3BBFD8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x3BC134", Offset = "0x3BC134", VA = "0x3BC134")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x3BC190", Offset = "0x3BC190", VA = "0x3BC190")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}
}
[Token(Token = "0x20002B1")]
public class DestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool isActive;

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x3BDE0C", Offset = "0x3BDE0C", VA = "0x3BDE0C")]
	public DestroyOnLoad()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x3BDE1C", Offset = "0x3BDE1C", VA = "0x3BDE1C")]
	private void Awake()
	{
	}
}
[Token(Token = "0x20002B2")]
public class DialogContent : ScriptableObject
{
	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip DialogAudio;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string DialogPath;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public DialogContent NextDialogContent;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent EndDialogEvt;

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x3C02E8", Offset = "0x3C02E8", VA = "0x3C02E8")]
	public DialogContent([Optional] AudioClip audio, string path = "", [Optional] DialogContent nextContent, [Optional] UnityEvent uEvent)
	{
	}
}
[Token(Token = "0x20002B3")]
public class DialogManager : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	private enum DIALOG_PROGRESS
	{
		[Token(Token = "0x4000E89")]
		None,
		[Token(Token = "0x4000E8A")]
		Paused,
		[Token(Token = "0x4000E8B")]
		Start,
		[Token(Token = "0x4000E8C")]
		InProgress,
		[Token(Token = "0x4000E8D")]
		End,
		[Token(Token = "0x4000E8E")]
		Wait
	}

	[Serializable]
	[Token(Token = "0x20002B5")]
	public class TakeOffDialog
	{
		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VEHICLE_TYPE VehicleType;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DialogContent DialogContent;

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x3C3080", Offset = "0x3C3080", VA = "0x3C3080")]
		public TakeOffDialog(VEHICLE_TYPE type, DialogContent dg)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B6")]
	public class InstructedLandDialog
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VEHICLE_TYPE VehicleType;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DialogContent DialogContent;

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x3C3000", Offset = "0x3C3000", VA = "0x3C3000")]
		public InstructedLandDialog(VEHICLE_TYPE type, DialogContent dg)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B7")]
	public class LeaveBoundsDialog
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VEHICLE_TYPE VehicleType;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ISLAND_TYPE IslandType;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DialogContent DialogContent;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x3C3028", Offset = "0x3C3028", VA = "0x3C3028")]
		public LeaveBoundsDialog(VEHICLE_TYPE vehicleType, ISLAND_TYPE islandType, DialogContent dg)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B8")]
	public class OfficeMedalDialog
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MEDAL_TYPE MedalType;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DialogContent DialogContent;

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x3C3058", Offset = "0x3C3058", VA = "0x3C3058")]
		public OfficeMedalDialog(MEDAL_TYPE medalType, DialogContent dialogContent)
		{
		}
	}

	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173CB4", Offset = "0x173CB4")]
	private sealed class <GetTakeOffDialog>c__AnonStorey0
	{
		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VEHICLE_TYPE type;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal List<TakeOffDialog> todList;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal TakeOffDialog tod;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DialogManager $this;

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x3C1DA0", Offset = "0x3C1DA0", VA = "0x3C1DA0")]
		public <GetTakeOffDialog>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x3C2E88", Offset = "0x3C2E88", VA = "0x3C2E88")]
		internal bool <>m__0(TakeOffDialog x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x3C2ED0", Offset = "0x3C2ED0", VA = "0x3C2ED0")]
		internal bool <>m__1(TakeOffDialog x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x3C2F54", Offset = "0x3C2F54", VA = "0x3C2F54")]
		internal bool <>m__2(TakeOffDialog x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x3C2FEC", Offset = "0x3C2FEC", VA = "0x3C2FEC")]
		internal bool <>m__3(TakeOffDialog x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173CC4", Offset = "0x173CC4")]
	private sealed class <GetInstructedLandDialog>c__AnonStorey1
	{
		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VEHICLE_TYPE type;

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x3C1FFC", Offset = "0x3C1FFC", VA = "0x3C1FFC")]
		public <GetInstructedLandDialog>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x3C2DA8", Offset = "0x3C2DA8", VA = "0x3C2DA8")]
		internal bool <>m__0(InstructedLandDialog x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173CD4", Offset = "0x173CD4")]
	private sealed class <GetLeaveBoundsDialog>c__AnonStorey2
	{
		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VEHICLE_TYPE vehicleType;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ISLAND_TYPE islandType;

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x3C2274", Offset = "0x3C2274", VA = "0x3C2274")]
		public <GetLeaveBoundsDialog>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x3C2DF0", Offset = "0x3C2DF0", VA = "0x3C2DF0")]
		internal bool <>m__0(LeaveBoundsDialog x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173CE4", Offset = "0x173CE4")]
	private sealed class <GetOfficeMedalDialog>c__AnonStorey3
	{
		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MEDAL_TYPE medalType;

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x3C23FC", Offset = "0x3C23FC", VA = "0x3C23FC")]
		public <GetOfficeMedalDialog>c__AnonStorey3()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x3C2E50", Offset = "0x3C2E50", VA = "0x3C2E50")]
		internal bool <>m__0(OfficeMedalDialog x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DialogManager s_instance;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float m_prevAudioSourceVolume;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private DialogContent m_currDialogContent;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<DialogContent> DialogContents;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DIALOG_PROGRESS m_dialogProgress;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_waitTime;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_waitTimeElapsed;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private List<TakeOffDialog> m_vehicleTakeOffDialogs;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<TakeOffDialog> m_lastPlayedTakeOffDialogs;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private List<TakeOffDialog> m_takeOffDialogSelection;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<InstructedLandDialog> m_vehicleInstructedLandDialogs;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private List<LeaveBoundsDialog> m_vehicleLeaveBoundsDialogs;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<OfficeMedalDialog> m_officeMedalDialogs;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private AudioMixerGroup m_dialogueMixerGroup;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ONSPAudioSource m_onspAudioSource;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DIALOG_PROGRESS m_prevDialogProgress;

	[Token(Token = "0x170002CB")]
	public static DialogManager Instance
	{
		[Token(Token = "0x6001295")]
		[Address(RVA = "0x3C053C", Offset = "0x3C053C", VA = "0x3C053C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002CC")]
	public bool IsPlayingDialog
	{
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x3C2910", Offset = "0x3C2910", VA = "0x3C2910")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x3C03A8", Offset = "0x3C03A8", VA = "0x3C03A8")]
	public DialogManager()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x3C05C8", Offset = "0x3C05C8", VA = "0x3C05C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x3C0738", Offset = "0x3C0738", VA = "0x3C0738")]
	private void Update()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x3C07E0", Offset = "0x3C07E0", VA = "0x3C07E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x3C08E0", Offset = "0x3C08E0", VA = "0x3C08E0")]
	private void _MountHMD()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x3C0994", Offset = "0x3C0994", VA = "0x3C0994")]
	private void _UnmountHMD()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x3C0A48", Offset = "0x3C0A48", VA = "0x3C0A48")]
	public void StopDialog(bool clearQueue = true)
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x3C0B10", Offset = "0x3C0B10", VA = "0x3C0B10")]
	public void PauseDialog()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x3C0BE0", Offset = "0x3C0BE0", VA = "0x3C0BE0")]
	public void UnpauseDialog()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x3C0D10", Offset = "0x3C0D10", VA = "0x3C0D10")]
	public void StartDialog()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x3C0D20", Offset = "0x3C0D20", VA = "0x3C0D20")]
	public void ForceStartDialog()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x3C0E94", Offset = "0x3C0E94", VA = "0x3C0E94")]
	public void EnqueueDialog(DialogContent dc, [Optional] Transform tf)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x3C0E98", Offset = "0x3C0E98", VA = "0x3C0E98")]
	private void _EnqueueDialog(DialogContent dc)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x3C0DB4", Offset = "0x3C0DB4", VA = "0x3C0DB4")]
	private DialogContent _DequeueDialog()
	{
		return null;
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x3C073C", Offset = "0x3C073C", VA = "0x3C073C")]
	private void _UpdateDialog()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x3C0F68", Offset = "0x3C0F68", VA = "0x3C0F68")]
	private void _ProcessDialog()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x3C1020", Offset = "0x3C1020", VA = "0x3C1020")]
	private void _WaitForDialogToFinish()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x3C1198", Offset = "0x3C1198", VA = "0x3C1198")]
	private void _ProcessNextDialog()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x3C133C", Offset = "0x3C133C", VA = "0x3C133C")]
	private void _Wait()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x3C1644", Offset = "0x3C1644", VA = "0x3C1644")]
	public DialogContent GetTakeOffDialog(VEHICLE_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x3C1DA8", Offset = "0x3C1DA8", VA = "0x3C1DA8")]
	public DialogContent GetInstructedLandDialog(VEHICLE_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x3C2004", Offset = "0x3C2004", VA = "0x3C2004")]
	public DialogContent GetLeaveBoundsDialog(VEHICLE_TYPE vehicleType, ISLAND_TYPE islandType)
	{
		return null;
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x3C227C", Offset = "0x3C227C", VA = "0x3C227C")]
	public DialogContent GetOfficeMedalDialog(MEDAL_TYPE medalType)
	{
		return null;
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x3C0714", Offset = "0x3C0714", VA = "0x3C0714")]
	private void _InitializeAudioSource()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x3C2404", Offset = "0x3C2404", VA = "0x3C2404")]
	private void _CreateAudioSource()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x3C2650", Offset = "0x3C2650", VA = "0x3C2650")]
	private void _SetUpAudioSource()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x3C27C4", Offset = "0x3C27C4", VA = "0x3C27C4")]
	private void _SetUpONSPAudioSource()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x3C1380", Offset = "0x3C1380", VA = "0x3C1380")]
	private void _PlayAudio(AudioClip clip)
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x3C0B20", Offset = "0x3C0B20", VA = "0x3C0B20")]
	public void PauseAudio()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x3C0BF0", Offset = "0x3C0BF0", VA = "0x3C0BF0")]
	public void UnpauseAudio()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x3C2920", Offset = "0x3C2920", VA = "0x3C2920")]
	public void SetTo3D(Transform audioSourcePosition)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x3C2BA4", Offset = "0x3C2BA4", VA = "0x3C2BA4")]
	public void SetTo2D()
	{
	}
}
[Token(Token = "0x20002B9")]
public class DialogPositionsOffice : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002BA")]
	private class DialogPosition
	{
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OFFICE_TYPE officeType;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform position;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x3C31FC", Offset = "0x3C31FC", VA = "0x3C31FC")]
		public DialogPosition()
		{
		}
	}

	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173CF4", Offset = "0x173CF4")]
	private sealed class <GetDialogPosition>c__AnonStorey0
	{
		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OFFICE_TYPE officeType;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x3C31BC", Offset = "0x3C31BC", VA = "0x3C31BC")]
		public <GetDialogPosition>c__AnonStorey0()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x3C31C4", Offset = "0x3C31C4", VA = "0x3C31C4")]
		internal bool <>m__0(DialogPosition x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private DialogPosition[] m_dialogPositions;

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x3C30A8", Offset = "0x3C30A8", VA = "0x3C30A8")]
	public DialogPositionsOffice()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x3C30B0", Offset = "0x3C30B0", VA = "0x3C30B0")]
	public Transform GetDialogPosition(OFFICE_TYPE officeType)
	{
		return null;
	}
}
[Token(Token = "0x20002BB")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x3C8734", Offset = "0x3C8734", VA = "0x3C8734")]
	public DontDestroyOnLoad()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x3C873C", Offset = "0x3C873C", VA = "0x3C873C")]
	private void Start()
	{
	}
}
[Token(Token = "0x20002BC")]
public interface IEventBase
{
}
[Token(Token = "0x20002BD")]
public class EventClearDialogs : MonoBehaviour
{
	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x3D6C14", Offset = "0x3D6C14", VA = "0x3D6C14")]
	public EventClearDialogs()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x3D6C1C", Offset = "0x3D6C1C", VA = "0x3D6C1C")]
	public void ClearDialogs()
	{
	}
}
[Token(Token = "0x20002BE")]
public class EventDebug : MonoBehaviour
{
	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x3D7D48", Offset = "0x3D7D48", VA = "0x3D7D48")]
	public EventDebug()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x3D7D50", Offset = "0x3D7D50", VA = "0x3D7D50")]
	public void Log(string msg)
	{
	}
}
[Token(Token = "0x20002BF")]
public class EventDebugTriggers : MonoBehaviour
{
	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x3D7DD4", Offset = "0x3D7DD4", VA = "0x3D7DD4")]
	public EventDebugTriggers()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x3D7DDC", Offset = "0x3D7DDC", VA = "0x3D7DDC")]
	public void LogTriggers()
	{
	}
}
[Token(Token = "0x20002C0")]
public class EventManager : MonoBehaviour
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventManager s_instance;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent ScreenFaderUpEvt;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent DialogEndEvt;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent PauseEvt;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent UnpauseEvt;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEvent StartOfFlightEvt;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent TakeOffEvt;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEvent LandEvt;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent InstructedLandEvt;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UnityEvent ExitBoundsEvt;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent EnterBoundsEvt;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public DistanceFromObjectEvent DistanceFromObjectEvt;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DistanceFromObjectEvent DistanceFromObjectYEvt;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UnityEvent RingMissedEvt;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MultipleRingScoredEvent MultipleRingScoredEvt;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MultipleRingMissedEvent MultipleRingMissedEvt;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MultipleRingSettledEvent MultipleRingSettledEvt;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public EngineStartEvent EngineStartEvt;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FirstPlayEvent FirstPlayEvt;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public UnityEvent CompleteLevelEvt;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent CompleteTabletLevelEvt;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public UnityEvent FailLevelEvt;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent CrashEvt;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityIntEvent ScreenFaderUpCountCompletedLevelEvt;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SwitchComputerScreenEvent SwitchComputerScreenEvt;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public UnityEvent BronzeMedalEarnedEvt;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent SilverMedalEarnedEvt;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public UnityEvent GoldMedalEarnedEvt;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CompleteJobEvent CompleteJobEvt;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public EarnXMoneyEvent EarnXMoneyEvt;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PurchaseOfficeEvent PurchaseOfficeEvt;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public UnlockJobEvent UnlockJobEvt;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PurchaseAircraftEvent PurchaseAircraftEvt;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public SelectAircraftEvent SelectAircraftEvt;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OfficeMedalEvent OfficeMedalEvt;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public UnityEvent LoggedInComputerEvt;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool m_debugEventTriggers;

	[Token(Token = "0x170002CD")]
	public static EventManager Instance
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x3C14FC", Offset = "0x3C14FC", VA = "0x3C14FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x3D7F34", Offset = "0x3D7F34", VA = "0x3D7F34")]
	public EventManager()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x3D7F3C", Offset = "0x3D7F3C", VA = "0x3D7F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x3D7FCC", Offset = "0x3D7FCC", VA = "0x3D7FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x3D7FD0", Offset = "0x3D7FD0", VA = "0x3D7FD0")]
	public void ClearVehicleEvents()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x3D8200", Offset = "0x3D8200", VA = "0x3D8200")]
	public void Gen_ScreenFaderUp()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x3C1588", Offset = "0x3C1588", VA = "0x3C1588")]
	public void Gen_DialogEnd()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x3D82BC", Offset = "0x3D82BC", VA = "0x3D82BC")]
	public void Gen_PauseGame()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x3D8378", Offset = "0x3D8378", VA = "0x3D8378")]
	public void Gen_UnpauseGame()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x3D8434", Offset = "0x3D8434", VA = "0x3D8434")]
	public void Veh_StartOfFlight()
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x3D84F0", Offset = "0x3D84F0", VA = "0x3D84F0")]
	public void Veh_TakeOff()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x3D85AC", Offset = "0x3D85AC", VA = "0x3D85AC")]
	public void Veh_Land()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x3D8668", Offset = "0x3D8668", VA = "0x3D8668")]
	public void Veh_InstructedLand()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x3D8724", Offset = "0x3D8724", VA = "0x3D8724")]
	public void Veh_ExitBounds()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x3D87E0", Offset = "0x3D87E0", VA = "0x3D87E0")]
	public void Veh_EnterBounds()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x3C8478", Offset = "0x3C8478", VA = "0x3C8478")]
	public void Veh_DistanceFromObjectEvent(float distance)
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x3C85B4", Offset = "0x3C85B4", VA = "0x3C85B4")]
	public void Veh_DistanceFromObjectY(float distance)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x3D889C", Offset = "0x3D889C", VA = "0x3D889C")]
	public void Veh_RingMissed()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x3D8958", Offset = "0x3D8958", VA = "0x3D8958")]
	public void Veh_MultipleRingScored(int ringsScored)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x3D8A28", Offset = "0x3D8A28", VA = "0x3D8A28")]
	public void Veh_MultipleRingMissed(int ringsMissed)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x3D8AF8", Offset = "0x3D8AF8", VA = "0x3D8AF8")]
	public void Veh_MultipleRingSettled(int ringsSettled)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x3D8BC8", Offset = "0x3D8BC8", VA = "0x3D8BC8")]
	public void Veh_EngineStart(VEHICLE_TYPE vehType)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x3D8C98", Offset = "0x3D8C98", VA = "0x3D8C98")]
	public void Veh_FirstPlay(LEVEL_TYPE levelType, int levelNum)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x3D8D70", Offset = "0x3D8D70", VA = "0x3D8D70")]
	public void Veh_CompleteLevel()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x3D8E2C", Offset = "0x3D8E2C", VA = "0x3D8E2C")]
	public void Veh_CompleteTabletLevel()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x3D8EE8", Offset = "0x3D8EE8", VA = "0x3D8EE8")]
	public void Veh_FailLevel()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x3D8FA4", Offset = "0x3D8FA4", VA = "0x3D8FA4")]
	public void Veh_Crash()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x3D9060", Offset = "0x3D9060", VA = "0x3D9060")]
	public void Off_ScreenFaderUpCountCompletedLevelEvt(int numberOfCompletedLevels)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x3D9130", Offset = "0x3D9130", VA = "0x3D9130")]
	public void Off_SwitchComputerScreen(ControllerComputer.MenuScreens menuScreen, string jobFolderType)
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x3D9404", Offset = "0x3D9404", VA = "0x3D9404")]
	public void Off_BronzeMedalEarned()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x3D94C0", Offset = "0x3D94C0", VA = "0x3D94C0")]
	public void Off_SilverMedalEarned()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x3D957C", Offset = "0x3D957C", VA = "0x3D957C")]
	public void Off_GoldMedalEarned()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x3D9638", Offset = "0x3D9638", VA = "0x3D9638")]
	public void Off_CompleteJob(LEVEL_TYPE lastCompletedJobType)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x3D9708", Offset = "0x3D9708", VA = "0x3D9708")]
	public void Off_EarnXMoney(int moneyEarned)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x3D97D8", Offset = "0x3D97D8", VA = "0x3D97D8")]
	public void Off_PurchaseOffice(int officePurchased)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x3D98A8", Offset = "0x3D98A8", VA = "0x3D98A8")]
	public void Off_UnlockJob(LEVEL_TYPE lastCompletedJobType)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x3D9978", Offset = "0x3D9978", VA = "0x3D9978")]
	public void Off_PurchaseAircraft(int aircraftPurchased)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x3D9A48", Offset = "0x3D9A48", VA = "0x3D9A48")]
	public void Off_SelectAircraft(int aircraftSelected)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x3D9B18", Offset = "0x3D9B18", VA = "0x3D9B18")]
	public void Off_OfficeMedal(MEDAL_TYPE medalReceived)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x3D9BE8", Offset = "0x3D9BE8", VA = "0x3D9BE8")]
	public void Off_LoggedInComputer()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C1")]
public class DistanceFromObjectEvent : UnityEvent<float>
{
	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x3C7984", Offset = "0x3C7984", VA = "0x3C7984")]
	public DistanceFromObjectEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C2")]
public class MultipleRingScoredEvent : UnityEvent<int>
{
	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x36589C", Offset = "0x36589C", VA = "0x36589C")]
	public MultipleRingScoredEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C3")]
public class MultipleRingMissedEvent : UnityEvent<int>
{
	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x365838", Offset = "0x365838", VA = "0x365838")]
	public MultipleRingMissedEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C4")]
public class MultipleRingSettledEvent : UnityEvent<int>
{
	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x365900", Offset = "0x365900", VA = "0x365900")]
	public MultipleRingSettledEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C5")]
public class EngineStartEvent : UnityEvent<VEHICLE_TYPE>
{
	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x3D6778", Offset = "0x3D6778", VA = "0x3D6778")]
	public EngineStartEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C6")]
public class FirstPlayEvent : UnityEvent<LEVEL_TYPE, int>
{
	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xBB2688", Offset = "0xBB2688", VA = "0xBB2688")]
	public FirstPlayEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C7")]
public class SwitchComputerScreenEvent : UnityEvent<ControllerComputer.MenuScreens, string>
{
	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x2C773C", Offset = "0x2C773C", VA = "0x2C773C")]
	public SwitchComputerScreenEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C8")]
public class CompleteJobEvent : UnityEvent<LEVEL_TYPE>
{
	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x30DF7C", Offset = "0x30DF7C", VA = "0x30DF7C")]
	public CompleteJobEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C9")]
public class EarnXMoneyEvent : UnityEvent<int>
{
	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x3C9DD0", Offset = "0x3C9DD0", VA = "0x3C9DD0")]
	public EarnXMoneyEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CA")]
public class PurchaseOfficeEvent : UnityEvent<int>
{
	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x286210", Offset = "0x286210", VA = "0x286210")]
	public PurchaseOfficeEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CB")]
public class UnlockJobEvent : UnityEvent<LEVEL_TYPE>
{
	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x38BE94", Offset = "0x38BE94", VA = "0x38BE94")]
	public UnlockJobEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CC")]
public class PurchaseAircraftEvent : UnityEvent<int>
{
	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x2861AC", Offset = "0x2861AC", VA = "0x2861AC")]
	public PurchaseAircraftEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CD")]
public class SelectAircraftEvent : UnityEvent<int>
{
	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x2F8B40", Offset = "0x2F8B40", VA = "0x2F8B40")]
	public SelectAircraftEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CE")]
public class OfficeMedalEvent : UnityEvent<MEDAL_TYPE>
{
	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x2AD7C8", Offset = "0x2AD7C8", VA = "0x2AD7C8")]
	public OfficeMedalEvent()
	{
	}
}
[Token(Token = "0x20002CF")]
public class EventPlayDialog : MonoBehaviour
{
	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private DialogContent[] m_dialogContent;

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x3D9CE4", Offset = "0x3D9CE4", VA = "0x3D9CE4")]
	public EventPlayDialog()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x3D9CEC", Offset = "0x3D9CEC", VA = "0x3D9CEC")]
	public void PlayDialog(bool clearDialog = false)
	{
	}
}
[Token(Token = "0x20002D0")]
public class EventPlayMedalDialog : MonoBehaviour
{
	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x3D9F5C", Offset = "0x3D9F5C", VA = "0x3D9F5C")]
	public EventPlayMedalDialog()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x3D9F64", Offset = "0x3D9F64", VA = "0x3D9F64")]
	public void PlayMedalDialog(bool clearDialog = false)
	{
	}
}
[Token(Token = "0x20002D1")]
public class EventSaveGame : MonoBehaviour
{
	[Token(Token = "0x6001301")]
	[Address(RVA = "0x3DA1F8", Offset = "0x3DA1F8", VA = "0x3DA1F8")]
	public EventSaveGame()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x3DA200", Offset = "0x3DA200", VA = "0x3DA200")]
	public void SaveGame()
	{
	}
}
[Token(Token = "0x20002D2")]
public class EventShowObject : MonoBehaviour
{
	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_targetObject;

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x3DA454", Offset = "0x3DA454", VA = "0x3DA454")]
	public EventShowObject()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x3DA45C", Offset = "0x3DA45C", VA = "0x3DA45C")]
	public void ShowObject(bool isShowing)
	{
	}
}
[Token(Token = "0x20002D3")]
public class EventSubscriber : MonoBehaviour
{
	[Token(Token = "0x2000573")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D04", Offset = "0x173D04")]
	private sealed class <_WaitForEventManagerSubscribe>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EventSubscriber $this;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000513")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600259F")]
			[Address(RVA = "0xBAB3EC", Offset = "0xBAB3EC", VA = "0xBAB3EC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000514")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0xBAB3F4", Offset = "0xBAB3F4", VA = "0xBAB3F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xBAB270", Offset = "0xBAB270", VA = "0xBAB270")]
		[DebuggerHidden]
		public <_WaitForEventManagerSubscribe>c__Iterator0()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xBAB278", Offset = "0xBAB278", VA = "0xBAB278", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xBAB3FC", Offset = "0xBAB3FC", VA = "0xBAB3FC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xBAB410", Offset = "0xBAB410", VA = "0xBAB410", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_subscribeOnStartup;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EventManager m_eventManager;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int i;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnSubscribeEvt;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEvent OnUnsubscribeEvt;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent ScreenFaderUpEvt;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEvent DialogEndEvt;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent StartOfFlightEvt;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UnityEvent TakeOffEvt;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent LandEvt;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UnityEvent InstructedLandEvt;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent ExitBoundsEvt;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UnityEvent EnterBoundsEvt;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DistanceFromObjectEvent DistanceFromObjectEvt;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public DistanceFromObjectEvent DistanceFromObjectYEvt;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent RingMissedEvt;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public MultipleRingScoredEvent MultipleRingScoredEvt;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MultipleRingMissedEvent MultipleRingMissedEvt;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public MultipleRingSettledEvent MultipleRingSettledEvt;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EngineStartEvent EngineStartEvt;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public FirstPlayEvent FirstPlayEvt;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent CompleteLevelEvt;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityEvent CompleteTabletLevel;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent FailLevelEvt;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public UnityEvent CrashEvt;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityIntEvent ScreenFaderCompletedLevelEvt;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public SwitchComputerScreenEvent SwitchComputerScreenEvt;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent BronzeMedalEarnedEvt;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public UnityEvent SilverMedalEarnedEvt;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent GoldMedalEarnedEvt;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CompleteJobEvent CompleteJobEvt;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EarnXMoneyEvent EarnXMoneyEvt;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public PurchaseOfficeEvent PurchaseOfficeEvt;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnlockJobEvent UnlockJobEvt;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public PurchaseAircraftEvent PurchaseAircraftEvt;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SelectAircraftEvent SelectAircraftEvt;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public OfficeMedalEvent OfficeMedalEvt;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent LoggedInComputerEvt;

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x3DA514", Offset = "0x3DA514", VA = "0x3DA514")]
	public EventSubscriber()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x3DA51C", Offset = "0x3DA51C", VA = "0x3DA51C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x3DA520", Offset = "0x3DA520", VA = "0x3DA520")]
	private void Update()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x3DA524", Offset = "0x3DA524", VA = "0x3DA524")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x3DA5D8", Offset = "0x3DA5D8", VA = "0x3DA5D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x3DA724", Offset = "0x3DA724", VA = "0x3DA724")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x3DA6A0", Offset = "0x3DA6A0", VA = "0x3DA6A0")]
	[DebuggerHidden]
	private IEnumerator _WaitForEventManagerSubscribe()
	{
		return null;
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x3DA728", Offset = "0x3DA728", VA = "0x3DA728")]
	private void _GetEventManager()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x3DA7EC", Offset = "0x3DA7EC", VA = "0x3DA7EC")]
	public void SubscribeEvents()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x3DA92C", Offset = "0x3DA92C", VA = "0x3DA92C")]
	private void _SubscribeEvents()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x3DA528", Offset = "0x3DA528", VA = "0x3DA528")]
	private void _UnsubscribeEvents()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x3DA9DC", Offset = "0x3DA9DC", VA = "0x3DA9DC")]
	private void _SubscribeGenericEvents()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x3DAB08", Offset = "0x3DAB08", VA = "0x3DAB08")]
	private void _SubscribeVehicleEvents()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x3DB3DC", Offset = "0x3DB3DC", VA = "0x3DB3DC")]
	private void _SubscribeOfficeEvents()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x3DBB64", Offset = "0x3DBB64", VA = "0x3DBB64")]
	private void _UnsubscribeGenericEvents()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x3DBC90", Offset = "0x3DBC90", VA = "0x3DBC90")]
	private void _UnsubscribeVehicleEvents()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x3DC564", Offset = "0x3DC564", VA = "0x3DC564")]
	private void _UnsubscribeOfficeEvents()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x3DBB38", Offset = "0x3DBB38", VA = "0x3DBB38")]
	public void InvokeOnSubscribe()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x3DCCC0", Offset = "0x3DCCC0", VA = "0x3DCCC0")]
	public void InvokeOnUnsubscribe()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x3DCCEC", Offset = "0x3DCCEC", VA = "0x3DCCEC")]
	public void InvokeScreenFaderUp()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x3DCD18", Offset = "0x3DCD18", VA = "0x3DCD18")]
	public void InvokeDialogEnd()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x3DCD44", Offset = "0x3DCD44", VA = "0x3DCD44")]
	public void InvokeStartOfFlight()
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x3DCD70", Offset = "0x3DCD70", VA = "0x3DCD70")]
	public void InvokeTakeOff()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x3DCD9C", Offset = "0x3DCD9C", VA = "0x3DCD9C")]
	public void InvokeLand()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x3DCDC8", Offset = "0x3DCDC8", VA = "0x3DCDC8")]
	public void InvokeInstructedLand()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x3DCDF4", Offset = "0x3DCDF4", VA = "0x3DCDF4")]
	public void InvokeExitBounds()
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x3DCE20", Offset = "0x3DCE20", VA = "0x3DCE20")]
	public void InvokeEnterBounds()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x3DCE4C", Offset = "0x3DCE4C", VA = "0x3DCE4C")]
	public void InvokeDistanceFromObject(float distance)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x3DCECC", Offset = "0x3DCECC", VA = "0x3DCECC")]
	public void InvokeDistanceFromObjectY(float distance)
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x3DCF4C", Offset = "0x3DCF4C", VA = "0x3DCF4C")]
	public void InvokeRingMissed()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x3DCF78", Offset = "0x3DCF78", VA = "0x3DCF78")]
	public void InvokeMultipleRingScored(int ringsScored)
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x3DCFF8", Offset = "0x3DCFF8", VA = "0x3DCFF8")]
	public void InvokeMultipleRingMissed(int ringsMissed)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x3DD078", Offset = "0x3DD078", VA = "0x3DD078")]
	public void InvokeMultipleRingSettled(int ringsSettled)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x3DD0F8", Offset = "0x3DD0F8", VA = "0x3DD0F8")]
	public void InvokeEngineStart(VEHICLE_TYPE type)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x3DD178", Offset = "0x3DD178", VA = "0x3DD178")]
	public void InvokeFirstPlay(LEVEL_TYPE levelType, int levelNum)
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x3DD200", Offset = "0x3DD200", VA = "0x3DD200")]
	public void InvokeCompleteLevel()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x3DD22C", Offset = "0x3DD22C", VA = "0x3DD22C")]
	public void InvokeCompleteTabletLevel()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x3DD258", Offset = "0x3DD258", VA = "0x3DD258")]
	public void InvokeFailLevel()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x3DD284", Offset = "0x3DD284", VA = "0x3DD284")]
	public void InvokeCrash()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x3DD2B0", Offset = "0x3DD2B0", VA = "0x3DD2B0")]
	public void InvokeScreenFaderCountCompletedLevel(int numberOfLevelsCompleted)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x3DD330", Offset = "0x3DD330", VA = "0x3DD330")]
	public void InvokeSwitchComputerScreen(ControllerComputer.MenuScreens menuScreen, string jobFolderType)
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x3DD3B8", Offset = "0x3DD3B8", VA = "0x3DD3B8")]
	public void InvokeBronzeMedalEarned()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x3DD3E4", Offset = "0x3DD3E4", VA = "0x3DD3E4")]
	public void InvokeSilverMedalEarned()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x3DD410", Offset = "0x3DD410", VA = "0x3DD410")]
	public void InvokeGoldMedalEarned()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x3DD43C", Offset = "0x3DD43C", VA = "0x3DD43C")]
	public void InvokeCompleteJob(LEVEL_TYPE lastCompletedJobType)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x3DD4BC", Offset = "0x3DD4BC", VA = "0x3DD4BC")]
	public void InvokeEarnXMoney(int moneyEarned)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x3DD53C", Offset = "0x3DD53C", VA = "0x3DD53C")]
	public void InvokePurchaseOffice(int officePurchased)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x3DD5BC", Offset = "0x3DD5BC", VA = "0x3DD5BC")]
	public void InvokeUnlockJob(LEVEL_TYPE lastCompletedJobType)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x3DD63C", Offset = "0x3DD63C", VA = "0x3DD63C")]
	public void InvokePurchaseAircraft(int aircraftPurchased)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x3DD6BC", Offset = "0x3DD6BC", VA = "0x3DD6BC")]
	public void InvokeSelectAicraft(int aircraftSelected)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x3DD73C", Offset = "0x3DD73C", VA = "0x3DD73C")]
	public void InvokeOfficeMedal(MEDAL_TYPE lastCompletedMedalType)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x3DD7BC", Offset = "0x3DD7BC", VA = "0x3DD7BC")]
	public void InvokedLoggedInComputer()
	{
	}
}
[Token(Token = "0x20002D4")]
public class EventToggleDistanceCheck : MonoBehaviour
{
	[Token(Token = "0x6001339")]
	[Address(RVA = "0xBAB788", Offset = "0xBAB788", VA = "0xBAB788")]
	public EventToggleDistanceCheck()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xBAB790", Offset = "0xBAB790", VA = "0xBAB790")]
	public void SetRefTransform(string runwayName)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xBABB14", Offset = "0xBABB14", VA = "0xBABB14")]
	public void EnableDistanceCheck(float distance)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xBABCA4", Offset = "0xBABCA4", VA = "0xBABCA4")]
	public void DisableDistanceCheck()
	{
	}
}
[Token(Token = "0x20002D5")]
public class EventCheckMissedRings : MonoBehaviour
{
	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int m_numOfRingsToMiss;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_callOnlyOnce;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_called;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent ConditionMet;

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x3D67DC", Offset = "0x3D67DC", VA = "0x3D67DC")]
	public EventCheckMissedRings()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x3D67EC", Offset = "0x3D67EC", VA = "0x3D67EC")]
	public void CheckNumOfRingsMissed(int numOfRingsMissed)
	{
	}
}
[Token(Token = "0x20002D6")]
public class EventCheckScoredRings : MonoBehaviour
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int m_numOfRingsToScore;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_callOnlyOnce;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_called;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent ConditionMet;

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x3D6944", Offset = "0x3D6944", VA = "0x3D6944")]
	public EventCheckScoredRings()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x3D6954", Offset = "0x3D6954", VA = "0x3D6954")]
	public void CheckNumOfRingsScored(int numOfRingsScored)
	{
	}
}
[Token(Token = "0x20002D7")]
public class EventCheckSettledRings : MonoBehaviour
{
	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int m_numOfRingsToSettle;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_callOnlyOnce;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_called;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent ConditionMet;

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x3D6AAC", Offset = "0x3D6AAC", VA = "0x3D6AAC")]
	public EventCheckSettledRings()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x3D6ABC", Offset = "0x3D6ABC", VA = "0x3D6ABC")]
	public void CheckNumOfRingsSettled(int numOfRingsSettled)
	{
	}
}
[Token(Token = "0x20002D8")]
public class EventConditionCheck : MonoBehaviour
{
	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private UnityEvent ConditionMet;

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x3D6D14", Offset = "0x3D6D14", VA = "0x3D6D14")]
	public EventConditionCheck()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x3D6D1C", Offset = "0x3D6D1C", VA = "0x3D6D1C")]
	private void _GetGameManager(bool force = false)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x3D6DEC", Offset = "0x3D6DEC", VA = "0x3D6DEC")]
	public void CheckCameraState(int cameraState)
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x3D6E14", Offset = "0x3D6E14", VA = "0x3D6E14")]
	private void _CheckCameraState(GameManager.CameraState cameraState)
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x3D6E68", Offset = "0x3D6E68", VA = "0x3D6E68")]
	public void CheckPlayerDataTrigger(int index)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x3D6E90", Offset = "0x3D6E90", VA = "0x3D6E90")]
	private void _CheckPlayerDataTrigger(int index)
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x3D6F10", Offset = "0x3D6F10", VA = "0x3D6F10")]
	public void CheckPlayerDataTriggerDone(int index)
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x3D6F38", Offset = "0x3D6F38", VA = "0x3D6F38")]
	private void _CheckPlayerDataTriggerDone(int index)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x3D6FB8", Offset = "0x3D6FB8", VA = "0x3D6FB8")]
	public void CheckComputerScreenTrigger(int index)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x3D6FE0", Offset = "0x3D6FE0", VA = "0x3D6FE0")]
	private void _CheckComputerScreenTrigger(int index)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x3D7044", Offset = "0x3D7044", VA = "0x3D7044")]
	public void CheckJobType(string jobType)
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x3D706C", Offset = "0x3D706C", VA = "0x3D706C")]
	private void _CheckJobType(string jobType)
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x3D7140", Offset = "0x3D7140", VA = "0x3D7140")]
	public void CheckCompletedMedal(MEDAL_TYPE officeMedal)
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x3D7168", Offset = "0x3D7168", VA = "0x3D7168")]
	private void _CheckCompletedMedal(MEDAL_TYPE officeMedal)
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x3D724C", Offset = "0x3D724C", VA = "0x3D724C")]
	public void CheckCompletedLevelType(int levelType)
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x3D7274", Offset = "0x3D7274", VA = "0x3D7274")]
	private void _CheckCompletedLevelType(int levelType)
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x3D7340", Offset = "0x3D7340", VA = "0x3D7340")]
	public void CheckCompletedNotLevelType(int levelType)
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x3D7368", Offset = "0x3D7368", VA = "0x3D7368")]
	private void _CheckCompletedNotLevelType(int levelType)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x3D7434", Offset = "0x3D7434", VA = "0x3D7434")]
	public void CheckJobNumber(int jobNumber)
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x3D745C", Offset = "0x3D745C", VA = "0x3D745C")]
	private void _CheckJobNumber(int jobNumber)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x3D74B8", Offset = "0x3D74B8", VA = "0x3D74B8")]
	public void CheckLastMedal(int medalType)
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x3D74E0", Offset = "0x3D74E0", VA = "0x3D74E0")]
	private void _CheckLastMedal(int medalType)
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x3D7554", Offset = "0x3D7554", VA = "0x3D7554")]
	public void CheckCanBuyOffice(int office)
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x3D757C", Offset = "0x3D757C", VA = "0x3D757C")]
	private void _CheckCanBuyOffice(int office)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x3D7768", Offset = "0x3D7768", VA = "0x3D7768")]
	public void CheckCanBuyVehicle(int vehicle)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x3D7790", Offset = "0x3D7790", VA = "0x3D7790")]
	private void _CheckCanBuyVehicle(int vehicle)
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x3D7AE8", Offset = "0x3D7AE8", VA = "0x3D7AE8")]
	public void IsVehicleUltralight(int vehicle)
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x3D7C38", Offset = "0x3D7C38", VA = "0x3D7C38")]
	public void IsVehicleGlider(int vehicle)
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x3D7C64", Offset = "0x3D7C64", VA = "0x3D7C64")]
	public void IsVehicleSport(int vehicle)
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x3D7C90", Offset = "0x3D7C90", VA = "0x3D7C90")]
	public void IsVehicleRacer(int vehicle)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x3D7B14", Offset = "0x3D7B14", VA = "0x3D7B14")]
	private void _IsVehicle(int vehicle, int vehicleToCheck)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x3D7CBC", Offset = "0x3D7CBC", VA = "0x3D7CBC")]
	public void IsLevelEnough(int numberOfLevelsCompleted)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x3D7CE4", Offset = "0x3D7CE4", VA = "0x3D7CE4")]
	private void _IsLevelEnough(int numberOfLevelsCompleted)
	{
	}
}
[Token(Token = "0x20002D9")]
public class EventOnStart : MonoBehaviour
{
	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent OnStartEvent;

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x3D9CA8", Offset = "0x3D9CA8", VA = "0x3D9CA8")]
	public EventOnStart()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x3D9CB0", Offset = "0x3D9CB0", VA = "0x3D9CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x3D9CB4", Offset = "0x3D9CB4", VA = "0x3D9CB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x3D9CB8", Offset = "0x3D9CB8", VA = "0x3D9CB8")]
	public void InvokeOnStart()
	{
	}
}
[Token(Token = "0x20002DA")]
public class EventSetTrigger : MonoBehaviour
{
	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int m_triggerToSet;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_triggered;

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x3DA334", Offset = "0x3DA334", VA = "0x3DA334")]
	public EventSetTrigger()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x3DA33C", Offset = "0x3DA33C", VA = "0x3DA33C")]
	public void SetTrigger()
	{
	}
}
[Token(Token = "0x20002DB")]
public class EventTimer : MonoBehaviour
{
	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_timerEnabled;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_timerDuration;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_timerElapsed;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent TimerEnd;

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xBAB6E4", Offset = "0xBAB6E4", VA = "0xBAB6E4")]
	public EventTimer()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xBAB6EC", Offset = "0xBAB6EC", VA = "0xBAB6EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xBAB764", Offset = "0xBAB764", VA = "0xBAB764")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xBAB6F0", Offset = "0xBAB6F0", VA = "0xBAB6F0")]
	private void _UpdateTimer()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xBAB778", Offset = "0xBAB778", VA = "0xBAB778")]
	public void StopTimer()
	{
	}
}
[Token(Token = "0x20002DC")]
public class EventUnlockJob : MonoBehaviour
{
	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private LEVEL_TYPE m_levelType;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent ConditionMet;

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xBABE04", Offset = "0xBABE04", VA = "0xBABE04")]
	public EventUnlockJob()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xBABE14", Offset = "0xBABE14", VA = "0xBABE14")]
	public void CheckMission(LEVEL_TYPE levelType)
	{
	}
}
[Token(Token = "0x20002DD")]
public class DistanceFromRunwayTrigger : MonoBehaviour
{
	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<TriggerRunway> m_refRunways;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_runwayName;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_enableDistCheck;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool m_distCheckCalled;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_distToCheck;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_enableDistCheckX;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool m_distCheckXCalled;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_distToCheckX;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool m_enableDistCheckY;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool m_distCheckYCalled;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_distToCheckY;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool m_enableDistCheckZ;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool m_distCheckZCalled;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_distToCheckZ;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private EventManager m_eventManager;

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x3C79E8", Offset = "0x3C79E8", VA = "0x3C79E8")]
	public DistanceFromRunwayTrigger()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x3C7ABC", Offset = "0x3C7ABC", VA = "0x3C7ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x3C7E40", Offset = "0x3C7E40", VA = "0x3C7E40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x3C7B9C", Offset = "0x3C7B9C", VA = "0x3C7B9C")]
	private void _GetReferenceRunways()
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x3C8430", Offset = "0x3C8430", VA = "0x3C8430")]
	public void ToggleDistanceCheck(bool isEnabled)
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x3C8438", Offset = "0x3C8438", VA = "0x3C8438")]
	public void ToggleDistanceCheckX(bool isEnabled)
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x3C8440", Offset = "0x3C8440", VA = "0x3C8440")]
	public void ToggleDistanceCheckY(bool isEnabled)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x3C8448", Offset = "0x3C8448", VA = "0x3C8448")]
	public void ToggleDistanceCheckZ(bool isEnabled)
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x3C8450", Offset = "0x3C8450", VA = "0x3C8450")]
	public void SetRunwayName(string runwayName)
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x3C8458", Offset = "0x3C8458", VA = "0x3C8458")]
	public void SetDistance(float distance)
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x3C8460", Offset = "0x3C8460", VA = "0x3C8460")]
	public void SetDistanceX(float distance)
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x3C8468", Offset = "0x3C8468", VA = "0x3C8468")]
	public void SetDistanceY(float distance)
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x3C8470", Offset = "0x3C8470", VA = "0x3C8470")]
	public void SetDistanceZ(float distance)
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x3C7E44", Offset = "0x3C7E44", VA = "0x3C7E44")]
	private void _UpdateDistanceCheck()
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x3C7AD8", Offset = "0x3C7AD8", VA = "0x3C7AD8")]
	private void _GetEventManager()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x3C8684", Offset = "0x3C8684", VA = "0x3C8684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180EA8", Offset = "0x180EA8")]
	private bool <_GetReferenceRunways>m__0(TriggerRunway x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002DE")]
public class OculusAchievements : MonoBehaviour
{
	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OculusAchievements _instance;

	[Token(Token = "0x170002CE")]
	public static OculusAchievements Instance
	{
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x2AABD0", Offset = "0x2AABD0", VA = "0x2AABD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x2AABC8", Offset = "0x2AABC8", VA = "0x2AABC8")]
	public OculusAchievements()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x2AAC5C", Offset = "0x2AAC5C", VA = "0x2AAC5C")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x2AADD0", Offset = "0x2AADD0", VA = "0x2AADD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x2AB0C0", Offset = "0x2AB0C0", VA = "0x2AB0C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x2AB238", Offset = "0x2AB238", VA = "0x2AB238")]
	private void OnAchievementEarned(AchievementManager.Achievements achievement)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x2AB360", Offset = "0x2AB360", VA = "0x2AB360")]
	public void ResetAchievements()
	{
	}
}
[Token(Token = "0x20002DF")]
public class AchievementManager : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	public enum Achievements
	{
		[Token(Token = "0x4000F14")]
		completeAllUltralightJobs,
		[Token(Token = "0x4000F15")]
		completeAllGliderJobs,
		[Token(Token = "0x4000F16")]
		completeAllSportJobs,
		[Token(Token = "0x4000F17")]
		completeAllRacerJobs,
		[Token(Token = "0x4000F18")]
		complete25PctBronze,
		[Token(Token = "0x4000F19")]
		complete50PctBronze,
		[Token(Token = "0x4000F1A")]
		complete100PctBronze,
		[Token(Token = "0x4000F1B")]
		earnGoldInAll,
		[Token(Token = "0x4000F1C")]
		earnGoldInNonLicense,
		[Token(Token = "0x4000F1D")]
		purchaseAllOffices,
		[Token(Token = "0x4000F1E")]
		takeOff
	}

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool _onlyIssueOnce;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AchievementManager _instance;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Action<Achievements> OnAchievementEarned;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool _internalOverrideForceTest;

	[Token(Token = "0x170002CF")]
	public static AchievementManager Instance
	{
		[Token(Token = "0x600138A")]
		[Address(RVA = "0x41E244", Offset = "0x41E244", VA = "0x41E244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x41E23C", Offset = "0x41E23C", VA = "0x41E23C")]
	public AchievementManager()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x41E2D0", Offset = "0x41E2D0", VA = "0x41E2D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x41E588", Offset = "0x41E588", VA = "0x41E588")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x41E7FC", Offset = "0x41E7FC", VA = "0x41E7FC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x41EA04", Offset = "0x41EA04", VA = "0x41EA04")]
	private void OnPurchasedOffice(int whichOffice)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x41EE8C", Offset = "0x41EE8C", VA = "0x41EE8C")]
	public void ResetAchievements()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x41EBDC", Offset = "0x41EBDC", VA = "0x41EBDC")]
	public bool HasAchievement(Achievements achievementID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x41ECC8", Offset = "0x41ECC8", VA = "0x41ECC8")]
	public void SetAchievement(Achievements achievement)
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x41EFB0", Offset = "0x41EFB0", VA = "0x41EFB0")]
	private void DefaultOnAchievementEarned(Achievements achievement)
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x41F0F0", Offset = "0x41F0F0", VA = "0x41F0F0")]
	public void CheckForAllOffices()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x41F240", Offset = "0x41F240", VA = "0x41F240")]
	public void CheckLegacyAchievements()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x41F80C", Offset = "0x41F80C", VA = "0x41F80C")]
	public void CheckForAchievements()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x41FBDC", Offset = "0x41FBDC", VA = "0x41FBDC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002E1")]
public class AircraftRecorder : ObjectRecorder
{
	[Token(Token = "0x6001398")]
	[Address(RVA = "0x42585C", Offset = "0x42585C", VA = "0x42585C")]
	public AircraftRecorder()
	{
	}
}
[Token(Token = "0x20002E2")]
public class AircraftRecPlayer : MonoBehaviour
{
	[Token(Token = "0x20002E3")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000F29")]
		NONE,
		[Token(Token = "0x4000F2A")]
		START,
		[Token(Token = "0x4000F2B")]
		UPDATE,
		[Token(Token = "0x4000F2C")]
		END
	}

	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D14", Offset = "0x173D14")]
	private sealed class <_ImportFromJSONStringFile>c__AnonStorey0
	{
		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string name;

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x4256DC", Offset = "0x4256DC", VA = "0x4256DC")]
		public <_ImportFromJSONStringFile>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x4257A4", Offset = "0x4257A4", VA = "0x4257A4")]
		internal bool <>m__0(FileInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D24", Offset = "0x173D24")]
	private sealed class <_ImportFromJSONByteFile>c__AnonStorey1
	{
		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string name;

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x4256E4", Offset = "0x4256E4", VA = "0x4256E4")]
		public <_ImportFromJSONByteFile>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x4256EC", Offset = "0x4256EC", VA = "0x4256EC")]
		internal bool <>m__0(FileInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_playbackObject;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ACRecPos> m_acRecPos;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_currPlaybackIndex;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_elapsedPlaybackTime;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_prevPosition;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion m_prevRotation;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlaybackState m_playbackState;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string m_path;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_fileName;

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x424264", Offset = "0x424264", VA = "0x424264")]
	public AircraftRecPlayer()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x4243AC", Offset = "0x4243AC", VA = "0x4243AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x4244A8", Offset = "0x4244A8", VA = "0x4244A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x42499C", Offset = "0x42499C", VA = "0x42499C")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x424C4C", Offset = "0x424C4C", VA = "0x424C4C")]
	public void ImportFromJSONStringFile()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x425200", Offset = "0x425200", VA = "0x425200")]
	public void ImportFromJSONByteFile()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x4249A0", Offset = "0x4249A0", VA = "0x4249A0")]
	private void _StartPlayback()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x4244AC", Offset = "0x4244AC", VA = "0x4244AC")]
	private void _UpdatePlayback()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x4250C4", Offset = "0x4250C4", VA = "0x4250C4")]
	private void _EndPlayback()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x4243B0", Offset = "0x4243B0", VA = "0x4243B0")]
	private void _GetPath()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x424C68", Offset = "0x424C68", VA = "0x424C68")]
	private void _ImportFromJSONStringFile()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x42521C", Offset = "0x42521C", VA = "0x42521C")]
	private void _ImportFromJSONByteFile()
	{
	}
}
[Token(Token = "0x20002E4")]
public class AvoidanceProfileDO
{
	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IRaceAircraft racerA;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IRaceAircraft racerB;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float targetDistance;

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x42F984", Offset = "0x42F984", VA = "0x42F984")]
	public AvoidanceProfileDO()
	{
	}
}
[Token(Token = "0x20002E5")]
public class BaseFSMHandlerDO
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179F0C", Offset = "0x179F0C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x179F0C", Offset = "0x179F0C")]
	private string <name>k__BackingField;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179F40", Offset = "0x179F40")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x179F40", Offset = "0x179F40")]
	private float <baseSpeed>k__BackingField;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179F74", Offset = "0x179F74")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x179F74", Offset = "0x179F74")]
	private float <currentSpeed>k__BackingField;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179FA8", Offset = "0x179FA8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x179FA8", Offset = "0x179FA8")]
	private float <speedCoolDownTime>k__BackingField;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x179FDC", Offset = "0x179FDC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x179FDC", Offset = "0x179FDC")]
	private float <boostOffsetTime>k__BackingField;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A010", Offset = "0x17A010")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A010", Offset = "0x17A010")]
	private float <slowDownOffsetTime>k__BackingField;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A044", Offset = "0x17A044")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A044", Offset = "0x17A044")]
	private float <minSpeed>k__BackingField;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A078", Offset = "0x17A078")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A078", Offset = "0x17A078")]
	private float <maxSpeed>k__BackingField;

	[Token(Token = "0x170002D0")]
	public string name
	{
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x42354C", Offset = "0x42354C", VA = "0x42354C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180EB8", Offset = "0x180EB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x43D3B0", Offset = "0x43D3B0", VA = "0x43D3B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180EC8", Offset = "0x180EC8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D1")]
	public float baseSpeed
	{
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x423554", Offset = "0x423554", VA = "0x423554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180ED8", Offset = "0x180ED8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x43D3B8", Offset = "0x43D3B8", VA = "0x43D3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180EE8", Offset = "0x180EE8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D2")]
	public float currentSpeed
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x423AF4", Offset = "0x423AF4", VA = "0x423AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180EF8", Offset = "0x180EF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x42355C", Offset = "0x42355C", VA = "0x42355C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F08", Offset = "0x180F08")]
		set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public float speedCoolDownTime
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x423870", Offset = "0x423870", VA = "0x423870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F18", Offset = "0x180F18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x43D3C0", Offset = "0x43D3C0", VA = "0x43D3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F28", Offset = "0x180F28")]
		set
		{
		}
	}

	[Token(Token = "0x170002D4")]
	public float boostOffsetTime
	{
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x426EF4", Offset = "0x426EF4", VA = "0x426EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F38", Offset = "0x180F38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x43D3C8", Offset = "0x43D3C8", VA = "0x43D3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F48", Offset = "0x180F48")]
		set
		{
		}
	}

	[Token(Token = "0x170002D5")]
	public float slowDownOffsetTime
	{
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x427110", Offset = "0x427110", VA = "0x427110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F58", Offset = "0x180F58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x43D3D0", Offset = "0x43D3D0", VA = "0x43D3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F68", Offset = "0x180F68")]
		set
		{
		}
	}

	[Token(Token = "0x170002D6")]
	public float minSpeed
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x423DAC", Offset = "0x423DAC", VA = "0x423DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F78", Offset = "0x180F78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x43D3D8", Offset = "0x43D3D8", VA = "0x43D3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F88", Offset = "0x180F88")]
		set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public float maxSpeed
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x423AFC", Offset = "0x423AFC", VA = "0x423AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180F98", Offset = "0x180F98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x43D3E0", Offset = "0x43D3E0", VA = "0x43D3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180FA8", Offset = "0x180FA8")]
		set
		{
		}
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x43D3A8", Offset = "0x43D3A8", VA = "0x43D3A8")]
	public BaseFSMHandlerDO()
	{
	}
}
[Token(Token = "0x20002E6")]
public class EnemyAircraftRacerDO
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A0AC", Offset = "0x17A0AC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A0AC", Offset = "0x17A0AC")]
	private string <id>k__BackingField;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A0E0", Offset = "0x17A0E0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A0E0", Offset = "0x17A0E0")]
	private RacerType <racerType>k__BackingField;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A114", Offset = "0x17A114")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A114", Offset = "0x17A114")]
	private float <minSpeed>k__BackingField;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A148", Offset = "0x17A148")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A148", Offset = "0x17A148")]
	private float <maxSpeed>k__BackingField;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A17C", Offset = "0x17A17C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A17C", Offset = "0x17A17C")]
	private float <aircraftSpeed>k__BackingField;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A1B0", Offset = "0x17A1B0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A1B0", Offset = "0x17A1B0")]
	private float <avoidanceDistance>k__BackingField;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A1E4", Offset = "0x17A1E4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A1E4", Offset = "0x17A1E4")]
	private float <index>k__BackingField;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A218", Offset = "0x17A218")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A218", Offset = "0x17A218")]
	private float <lerpDuration>k__BackingField;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A24C", Offset = "0x17A24C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A24C", Offset = "0x17A24C")]
	private float <boostOffsetDuration>k__BackingField;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A280", Offset = "0x17A280")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A280", Offset = "0x17A280")]
	private float <slowdownOffsetDuration>k__BackingField;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A2B4", Offset = "0x17A2B4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A2B4", Offset = "0x17A2B4")]
	private string <recordedAssetPath>k__BackingField;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A2E8", Offset = "0x17A2E8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A2E8", Offset = "0x17A2E8")]
	private string <recordedAssetFileName>k__BackingField;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A31C", Offset = "0x17A31C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A31C", Offset = "0x17A31C")]
	private bool <allowAvoidance>k__BackingField;

	[Token(Token = "0x170002D8")]
	public string id
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x3CC214", Offset = "0x3CC214", VA = "0x3CC214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180FB8", Offset = "0x180FB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x3CC21C", Offset = "0x3CC21C", VA = "0x3CC21C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180FC8", Offset = "0x180FC8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public RacerType racerType
	{
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x3CC224", Offset = "0x3CC224", VA = "0x3CC224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180FD8", Offset = "0x180FD8")]
		get
		{
			return default(RacerType);
		}
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x3CC22C", Offset = "0x3CC22C", VA = "0x3CC22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180FE8", Offset = "0x180FE8")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public float minSpeed
	{
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x3CC234", Offset = "0x3CC234", VA = "0x3CC234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x180FF8", Offset = "0x180FF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x3CC23C", Offset = "0x3CC23C", VA = "0x3CC23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181008", Offset = "0x181008")]
		set
		{
		}
	}

	[Token(Token = "0x170002DB")]
	public float maxSpeed
	{
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x3CC244", Offset = "0x3CC244", VA = "0x3CC244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181018", Offset = "0x181018")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x3CC24C", Offset = "0x3CC24C", VA = "0x3CC24C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181028", Offset = "0x181028")]
		set
		{
		}
	}

	[Token(Token = "0x170002DC")]
	public float aircraftSpeed
	{
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x3CC254", Offset = "0x3CC254", VA = "0x3CC254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181038", Offset = "0x181038")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x3CC25C", Offset = "0x3CC25C", VA = "0x3CC25C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181048", Offset = "0x181048")]
		set
		{
		}
	}

	[Token(Token = "0x170002DD")]
	public float avoidanceDistance
	{
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x3CC264", Offset = "0x3CC264", VA = "0x3CC264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181058", Offset = "0x181058")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x3CC26C", Offset = "0x3CC26C", VA = "0x3CC26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181068", Offset = "0x181068")]
		set
		{
		}
	}

	[Token(Token = "0x170002DE")]
	public float index
	{
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x3CC274", Offset = "0x3CC274", VA = "0x3CC274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181078", Offset = "0x181078")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x3CC27C", Offset = "0x3CC27C", VA = "0x3CC27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181088", Offset = "0x181088")]
		set
		{
		}
	}

	[Token(Token = "0x170002DF")]
	public float lerpDuration
	{
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x3CC284", Offset = "0x3CC284", VA = "0x3CC284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181098", Offset = "0x181098")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x3CC28C", Offset = "0x3CC28C", VA = "0x3CC28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1810A8", Offset = "0x1810A8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E0")]
	public float boostOffsetDuration
	{
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x3CC294", Offset = "0x3CC294", VA = "0x3CC294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1810B8", Offset = "0x1810B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x3CC29C", Offset = "0x3CC29C", VA = "0x3CC29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1810C8", Offset = "0x1810C8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E1")]
	public float slowdownOffsetDuration
	{
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x3CC2A4", Offset = "0x3CC2A4", VA = "0x3CC2A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1810D8", Offset = "0x1810D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x3CC2AC", Offset = "0x3CC2AC", VA = "0x3CC2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1810E8", Offset = "0x1810E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E2")]
	public string recordedAssetPath
	{
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x3CC2B4", Offset = "0x3CC2B4", VA = "0x3CC2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1810F8", Offset = "0x1810F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x3CC2BC", Offset = "0x3CC2BC", VA = "0x3CC2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181108", Offset = "0x181108")]
		set
		{
		}
	}

	[Token(Token = "0x170002E3")]
	public string recordedAssetFileName
	{
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x3CC2C4", Offset = "0x3CC2C4", VA = "0x3CC2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181118", Offset = "0x181118")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x3CC2CC", Offset = "0x3CC2CC", VA = "0x3CC2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181128", Offset = "0x181128")]
		set
		{
		}
	}

	[Token(Token = "0x170002E4")]
	public bool allowAvoidance
	{
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x3CC2D4", Offset = "0x3CC2D4", VA = "0x3CC2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181138", Offset = "0x181138")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x3CC2DC", Offset = "0x3CC2DC", VA = "0x3CC2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181148", Offset = "0x181148")]
		set
		{
		}
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x3CC20C", Offset = "0x3CC20C", VA = "0x3CC20C")]
	public EnemyAircraftRacerDO()
	{
	}
}
[Token(Token = "0x20002E7")]
public interface IFSMHandlerDO
{
}
[Token(Token = "0x20002E8")]
public class RaceFSMHandlerDO : BaseFSMHandlerDO, IFSMHandlerDO
{
	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x286C48", Offset = "0x286C48", VA = "0x286C48")]
	public RaceFSMHandlerDO()
	{
	}
}
[Token(Token = "0x20002E9")]
public class RacerDataDO
{
	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A350", Offset = "0x17A350")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A350", Offset = "0x17A350")]
	private string <id>k__BackingField;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A384", Offset = "0x17A384")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A384", Offset = "0x17A384")]
	private int <currentPosition>k__BackingField;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A3B8", Offset = "0x17A3B8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A3B8", Offset = "0x17A3B8")]
	private int <ringIndexPassed>k__BackingField;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A3EC", Offset = "0x17A3EC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A3EC", Offset = "0x17A3EC")]
	private int <totalRings>k__BackingField;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A420", Offset = "0x17A420")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A420", Offset = "0x17A420")]
	private RacerType <racerType>k__BackingField;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A454", Offset = "0x17A454")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A454", Offset = "0x17A454")]
	private bool <raceFinished>k__BackingField;

	[Token(Token = "0x170002E5")]
	public string id
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x289EFC", Offset = "0x289EFC", VA = "0x289EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181158", Offset = "0x181158")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x289ECC", Offset = "0x289ECC", VA = "0x289ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181168", Offset = "0x181168")]
		set
		{
		}
	}

	[Token(Token = "0x170002E6")]
	public int currentPosition
	{
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x28D8E8", Offset = "0x28D8E8", VA = "0x28D8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181178", Offset = "0x181178")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x289EDC", Offset = "0x289EDC", VA = "0x289EDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181188", Offset = "0x181188")]
		set
		{
		}
	}

	[Token(Token = "0x170002E7")]
	public int ringIndexPassed
	{
		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x28D8F0", Offset = "0x28D8F0", VA = "0x28D8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181198", Offset = "0x181198")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x289EE4", Offset = "0x289EE4", VA = "0x289EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1811A8", Offset = "0x1811A8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E8")]
	public int totalRings
	{
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x28D8F8", Offset = "0x28D8F8", VA = "0x28D8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1811B8", Offset = "0x1811B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x289EEC", Offset = "0x289EEC", VA = "0x289EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1811C8", Offset = "0x1811C8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E9")]
	public RacerType racerType
	{
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x28D900", Offset = "0x28D900", VA = "0x28D900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1811D8", Offset = "0x1811D8")]
		get
		{
			return default(RacerType);
		}
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x289ED4", Offset = "0x289ED4", VA = "0x289ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1811E8", Offset = "0x1811E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002EA")]
	public bool raceFinished
	{
		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x28D908", Offset = "0x28D908", VA = "0x28D908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1811F8", Offset = "0x1811F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x289EF4", Offset = "0x289EF4", VA = "0x289EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181208", Offset = "0x181208")]
		set
		{
		}
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x289EC4", Offset = "0x289EC4", VA = "0x289EC4")]
	public RacerDataDO()
	{
	}
}
[Token(Token = "0x20002EA")]
public class RacerProgressDO
{
	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A488", Offset = "0x17A488")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A488", Offset = "0x17A488")]
	private string <id>k__BackingField;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A4BC", Offset = "0x17A4BC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A4BC", Offset = "0x17A4BC")]
	private int <position>k__BackingField;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A4F0", Offset = "0x17A4F0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A4F0", Offset = "0x17A4F0")]
	private float <distance>k__BackingField;

	[Token(Token = "0x170002EB")]
	public string id
	{
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x28D918", Offset = "0x28D918", VA = "0x28D918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181218", Offset = "0x181218")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x289F0C", Offset = "0x289F0C", VA = "0x289F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181228", Offset = "0x181228")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	public int position
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x28D920", Offset = "0x28D920", VA = "0x28D920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181238", Offset = "0x181238")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x289F1C", Offset = "0x289F1C", VA = "0x289F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181248", Offset = "0x181248")]
		set
		{
		}
	}

	[Token(Token = "0x170002ED")]
	public float distance
	{
		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x28D928", Offset = "0x28D928", VA = "0x28D928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181258", Offset = "0x181258")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x289F14", Offset = "0x289F14", VA = "0x289F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181268", Offset = "0x181268")]
		set
		{
		}
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x289F04", Offset = "0x289F04", VA = "0x289F04")]
	public RacerProgressDO()
	{
	}
}
[Token(Token = "0x20002EB")]
public class RecorderFSMHandlerDO : BaseFSMHandlerDO, IFSMHandlerDO
{
	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A524", Offset = "0x17A524")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A524", Offset = "0x17A524")]
	private Action<float> <UpdateValue>k__BackingField;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A558", Offset = "0x17A558")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A558", Offset = "0x17A558")]
	private Action <CooldownStarted>k__BackingField;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A58C", Offset = "0x17A58C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A58C", Offset = "0x17A58C")]
	private Action<bool> <Cooldown>k__BackingField;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A5C0", Offset = "0x17A5C0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A5C0", Offset = "0x17A5C0")]
	private Action<bool> <Normal>k__BackingField;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A5F4", Offset = "0x17A5F4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A5F4", Offset = "0x17A5F4")]
	private RecordedObject <aircraftRecorder>k__BackingField;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float currentVelocity;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A628", Offset = "0x17A628")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A628", Offset = "0x17A628")]
	private float <timeScale>k__BackingField;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A65C", Offset = "0x17A65C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A65C", Offset = "0x17A65C")]
	private float <regainTimerBoost>k__BackingField;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A690", Offset = "0x17A690")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A690", Offset = "0x17A690")]
	private float <regainTimerSlowdown>k__BackingField;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A6C4", Offset = "0x17A6C4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A6C4", Offset = "0x17A6C4")]
	private bool <overrideCooldown>k__BackingField;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A6F8", Offset = "0x17A6F8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17A6F8", Offset = "0x17A6F8")]
	private bool <restartActionSpeed>k__BackingField;

	[Token(Token = "0x170002EE")]
	public Action<float> UpdateValue
	{
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x2923C0", Offset = "0x2923C0", VA = "0x2923C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181278", Offset = "0x181278")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x2923C8", Offset = "0x2923C8", VA = "0x2923C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181288", Offset = "0x181288")]
		set
		{
		}
	}

	[Token(Token = "0x170002EF")]
	public Action CooldownStarted
	{
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x2923D0", Offset = "0x2923D0", VA = "0x2923D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181298", Offset = "0x181298")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x2923D8", Offset = "0x2923D8", VA = "0x2923D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1812A8", Offset = "0x1812A8")]
		set
		{
		}
	}

	[Token(Token = "0x170002F0")]
	public Action<bool> Cooldown
	{
		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x2923E0", Offset = "0x2923E0", VA = "0x2923E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1812B8", Offset = "0x1812B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x2923E8", Offset = "0x2923E8", VA = "0x2923E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1812C8", Offset = "0x1812C8")]
		set
		{
		}
	}

	[Token(Token = "0x170002F1")]
	public Action<bool> Normal
	{
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x2923F0", Offset = "0x2923F0", VA = "0x2923F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1812D8", Offset = "0x1812D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x2923F8", Offset = "0x2923F8", VA = "0x2923F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1812E8", Offset = "0x1812E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002F2")]
	public RecordedObject aircraftRecorder
	{
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x292400", Offset = "0x292400", VA = "0x292400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1812F8", Offset = "0x1812F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x292408", Offset = "0x292408", VA = "0x292408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181308", Offset = "0x181308")]
		set
		{
		}
	}

	[Token(Token = "0x170002F3")]
	public float timeScale
	{
		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x292410", Offset = "0x292410", VA = "0x292410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181318", Offset = "0x181318")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x292418", Offset = "0x292418", VA = "0x292418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181328", Offset = "0x181328")]
		set
		{
		}
	}

	[Token(Token = "0x170002F4")]
	public float regainTimerBoost
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x292420", Offset = "0x292420", VA = "0x292420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181338", Offset = "0x181338")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x292428", Offset = "0x292428", VA = "0x292428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181348", Offset = "0x181348")]
		set
		{
		}
	}

	[Token(Token = "0x170002F5")]
	public float regainTimerSlowdown
	{
		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x292430", Offset = "0x292430", VA = "0x292430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181358", Offset = "0x181358")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x292438", Offset = "0x292438", VA = "0x292438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181368", Offset = "0x181368")]
		set
		{
		}
	}

	[Token(Token = "0x170002F6")]
	public bool overrideCooldown
	{
		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x292440", Offset = "0x292440", VA = "0x292440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181378", Offset = "0x181378")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x292448", Offset = "0x292448", VA = "0x292448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181388", Offset = "0x181388")]
		set
		{
		}
	}

	[Token(Token = "0x170002F7")]
	public bool restartActionSpeed
	{
		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x292450", Offset = "0x292450", VA = "0x292450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181398", Offset = "0x181398")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x292458", Offset = "0x292458", VA = "0x292458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1813A8", Offset = "0x1813A8")]
		set
		{
		}
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x2923B8", Offset = "0x2923B8", VA = "0x2923B8")]
	public RecorderFSMHandlerDO()
	{
	}
}
[Token(Token = "0x20002EC")]
public class EnemyRacer : RecordedObject
{
	[Token(Token = "0x4000F59")]
	private const float MIN_SPEED = 0f;

	[Token(Token = "0x4000F5A")]
	private const float MAX_SPEED = 3f;

	[Token(Token = "0x4000F5B")]
	private const float SPEED_COOLDOWN_TIME = 1f;

	[Token(Token = "0x4000F5C")]
	private const string ACTIVATE = "Activate";

	[Token(Token = "0x4000F5D")]
	private const string BOOST = "Boost";

	[Token(Token = "0x4000F5E")]
	private const string SLOW_DOWN = "SlowDown";

	[Token(Token = "0x4000F5F")]
	private const string REVERT = "Revert";

	[Token(Token = "0x4000F60")]
	private const string STOP = "Stop";

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float eventTimer;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Fsm SpeedFsm;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A72C", Offset = "0x17A72C")]
	private static FsmDelegateAction.FsmActionRoutine <>f__am$cache0;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A73C", Offset = "0x17A73C")]
	private static FsmDelegateAction.FsmActionRoutine <>f__am$cache1;

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x3CC2E4", Offset = "0x3CC2E4", VA = "0x3CC2E4")]
	public EnemyRacer()
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x3CC2EC", Offset = "0x3CC2EC", VA = "0x3CC2EC")]
	protected void Start()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x3CD4D0", Offset = "0x3CD4D0", VA = "0x3CD4D0")]
	protected void Update()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x3CD508", Offset = "0x3CD508", VA = "0x3CD508")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x3CD590", Offset = "0x3CD590", VA = "0x3CD590")]
	public void EndPlayback()
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x3CD618", Offset = "0x3CD618", VA = "0x3CD618")]
	public void PausePlayback()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x3CD6A0", Offset = "0x3CD6A0", VA = "0x3CD6A0")]
	public void AvoidTarget(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x3CC3A4", Offset = "0x3CC3A4", VA = "0x3CC3A4")]
	private void PrepareSpeedFsm()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x3CD83C", Offset = "0x3CD83C", VA = "0x3CD83C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1813B8", Offset = "0x1813B8")]
	private static void <PrepareSpeedFsm>m__0(FsmState owner)
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x3CD840", Offset = "0x3CD840", VA = "0x3CD840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1813C8", Offset = "0x1813C8")]
	private void <PrepareSpeedFsm>m__1(FsmState owner)
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x3CD84C", Offset = "0x3CD84C", VA = "0x3CD84C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1813D8", Offset = "0x1813D8")]
	private void <PrepareSpeedFsm>m__2(FsmState owner)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x3CD858", Offset = "0x3CD858", VA = "0x3CD858")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1813E8", Offset = "0x1813E8")]
	private void <PrepareSpeedFsm>m__3(FsmState owner)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x3CD9A0", Offset = "0x3CD9A0", VA = "0x3CD9A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1813F8", Offset = "0x1813F8")]
	private void <PrepareSpeedFsm>m__4(FsmState owner)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x3CD9AC", Offset = "0x3CD9AC", VA = "0x3CD9AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181408", Offset = "0x181408")]
	private void <PrepareSpeedFsm>m__5(FsmState owner)
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x3CDAF0", Offset = "0x3CDAF0", VA = "0x3CDAF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181418", Offset = "0x181418")]
	private static void <PrepareSpeedFsm>m__6(FsmState owner)
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x3CDAF4", Offset = "0x3CDAF4", VA = "0x3CDAF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181428", Offset = "0x181428")]
	private void <PrepareSpeedFsm>m__7(FsmState owner)
	{
	}
}
[Token(Token = "0x20002ED")]
public class EnemyRacerAircraft : RecordedObject, IRaceAircraft
{
	[Token(Token = "0x20002EE")]
	private enum COLLIDER_POSITION
	{
		[Token(Token = "0x4000F88")]
		InFront,
		[Token(Token = "0x4000F89")]
		Behind,
		[Token(Token = "0x4000F8A")]
		Advanced,
		[Token(Token = "0x4000F8B")]
		Retarded
	}

	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D34", Offset = "0x173D34")]
	private sealed class <_WaitForPathToLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EnemyRacerAircraft $this;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000515")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025A9")]
			[Address(RVA = "0x3CF4F4", Offset = "0x3CF4F4", VA = "0x3CF4F4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000516")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0x3CF4FC", Offset = "0x3CF4FC", VA = "0x3CF4FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x3CEA64", Offset = "0x3CEA64", VA = "0x3CEA64")]
		[DebuggerHidden]
		public <_WaitForPathToLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x3CF404", Offset = "0x3CF404", VA = "0x3CF404", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x3CF504", Offset = "0x3CF504", VA = "0x3CF504", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x3CF518", Offset = "0x3CF518", VA = "0x3CF518", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	private bool m_allowAvoidance;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float m_offsetMinCriteria;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float m_offsetMaxCriteria;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private Transform[] racerColliders;

	[Token(Token = "0x4000F69")]
	private const string RECORDER_MAIN = "main";

	[Token(Token = "0x4000F6A")]
	private const string RECORDER_CLONE = "clone";

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<float> UpdateTimeScaleValue;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_inRangeTime;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_minSpeed;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_maxSpeed;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_raceSpeed;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_lerpingDuration;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_boostOffsetDuration;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_slowdownOffsetDuration;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IAircraftFSMHandler m_fsmHandler;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_isInitialized;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string m_recordedAssetPath;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private string m_recordedAssetFileName;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string m_id;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_currentVelocity;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_scaleVelocity;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_floatAspect;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RecordedObject m_cloneRecorder;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_lastTimeScale;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool m_updateStatus;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private RacerType m_racerType;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool m_tempOverrideTimeScale;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool m_isAvoiding;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool m_isInProximity;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private SemaphoreToggle stopStateSemaphore;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_avoidanceDistance;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_currentAvoidanceDistance;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_maxLerpDistance;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_currentLerpDistance;

	[Token(Token = "0x170002F8")]
	public string ID
	{
		[Token(Token = "0x600140D")]
		[Address(RVA = "0x3CDDCC", Offset = "0x3CDDCC", VA = "0x3CDDCC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002F9")]
	public Transform Transform
	{
		[Token(Token = "0x600140E")]
		[Address(RVA = "0x3CDDD4", Offset = "0x3CDDD4", VA = "0x3CDDD4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002FA")]
	public RacerType RacerType
	{
		[Token(Token = "0x600140F")]
		[Address(RVA = "0x3CDDDC", Offset = "0x3CDDDC", VA = "0x3CDDDC", Slot = "6")]
		get
		{
			return default(RacerType);
		}
	}

	[Token(Token = "0x170002FB")]
	public bool TimescaleOverriden
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0x3CDDE4", Offset = "0x3CDDE4", VA = "0x3CDDE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002FC")]
	public bool Avoiding
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0x3CDDEC", Offset = "0x3CDDEC", VA = "0x3CDDEC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002FD")]
	public bool IsInProximity
	{
		[Token(Token = "0x6001412")]
		[Address(RVA = "0x3CDDF4", Offset = "0x3CDDF4", VA = "0x3CDDF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x3CDCC0", Offset = "0x3CDCC0", VA = "0x3CDCC0")]
	public EnemyRacerAircraft()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x3CDDFC", Offset = "0x3CDDFC", VA = "0x3CDDFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x3CDE1C", Offset = "0x3CDE1C", VA = "0x3CDE1C")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x3CDF40", Offset = "0x3CDF40", VA = "0x3CDF40")]
	public void Initialize(EnemyAircraftRacerDO data)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x3CE200", Offset = "0x3CE200", VA = "0x3CE200")]
	private void InitializeRaceStatus()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x3CDFFC", Offset = "0x3CDFFC", VA = "0x3CDFFC")]
	private void SetData(EnemyAircraftRacerDO data)
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x3CE144", Offset = "0x3CE144", VA = "0x3CE144")]
	private void InitializeRecorder()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x3CE358", Offset = "0x3CE358", VA = "0x3CE358")]
	private void InitializeCloneRecorder()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x3CE4F8", Offset = "0x3CE4F8", VA = "0x3CE4F8")]
	private void InitializeRecorderFSM()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x3CE8E8", Offset = "0x3CE8E8", VA = "0x3CE8E8")]
	public void StartFollowingPath()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x3CE9E0", Offset = "0x3CE9E0", VA = "0x3CE9E0")]
	[DebuggerHidden]
	public IEnumerator _WaitForPathToLoad()
	{
		return null;
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x3CEA6C", Offset = "0x3CEA6C", VA = "0x3CEA6C")]
	public void ResumeFollowingPath()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x3CEAB0", Offset = "0x3CEAB0", VA = "0x3CEAB0")]
	public void PauseFollowingPath()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x3CEAF4", Offset = "0x3CEAF4", VA = "0x3CEAF4")]
	public void StopFollowingPath()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x3CEB38", Offset = "0x3CEB38", VA = "0x3CEB38")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x3CEBF0", Offset = "0x3CEBF0", VA = "0x3CEBF0")]
	public void ResumePlayback()
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x3CEC28", Offset = "0x3CEC28", VA = "0x3CEC28")]
	public void EndPlayback()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x3CEC60", Offset = "0x3CEC60", VA = "0x3CEC60")]
	public void PausePlayback()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x3CEB94", Offset = "0x3CEB94", VA = "0x3CEB94")]
	private void ProcessAircraftProgress()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x3CF060", Offset = "0x3CF060", VA = "0x3CF060")]
	public void EnableColliders(bool enableColliders)
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x3CEC98", Offset = "0x3CEC98", VA = "0x3CEC98")]
	private void UpdateTimeScale(float currentTime, float targetTime)
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x3CF1EC", Offset = "0x3CF1EC", VA = "0x3CF1EC")]
	private float GetSpeedDeviation(float currentDistance, float min, float max, float offset)
	{
		return default(float);
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x3CF2B0", Offset = "0x3CF2B0", VA = "0x3CF2B0", Slot = "9")]
	public void AvoidTarget(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x3CF2B4", Offset = "0x3CF2B4", VA = "0x3CF2B4")]
	public void SetProximityAction(bool isInProximity)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x3CF2BC", Offset = "0x3CF2BC", VA = "0x3CF2BC", Slot = "8")]
	public void IsAvoiding(bool isAvoiding)
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x3CF2C4", Offset = "0x3CF2C4", VA = "0x3CF2C4")]
	private void ProcessOriginalTransition()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x3CF3F0", Offset = "0x3CF3F0", VA = "0x3CF3F0")]
	private void OnUpdateTimeScaleValue(float value)
	{
	}
}
[Token(Token = "0x20002EF")]
public class AircraftBaseFSMHandler
{
	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected float eventTimer;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Fsm speedFsm;

	[Token(Token = "0x4000F8E")]
	protected const string INACTIVE = "Inactive";

	[Token(Token = "0x4000F8F")]
	protected const string NORMAL = "Normal";

	[Token(Token = "0x4000F90")]
	protected const string BOOST = "Boost";

	[Token(Token = "0x4000F91")]
	protected const string SLOWDOWN = "SlowDown";

	[Token(Token = "0x4000F92")]
	protected const string COOLDOWN = "CoolDown";

	[Token(Token = "0x4000F93")]
	protected const string REGAIN = "Regain";

	[Token(Token = "0x4000F94")]
	protected const string REVERT = "Revert";

	[Token(Token = "0x4000F95")]
	protected const string STOP = "Stop";

	[Token(Token = "0x4000F96")]
	protected const string ACTIVATE = "Activate";

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x4220EC", Offset = "0x4220EC", VA = "0x4220EC")]
	public AircraftBaseFSMHandler()
	{
	}
}
[Token(Token = "0x20002F0")]
public class AircraftRaceFSMHandler : AircraftBaseFSMHandler, IAircraftFSMHandler
{
	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RaceFSMHandlerDO _fsmData;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A78C", Offset = "0x17A78C")]
	private static FsmDelegateAction.FsmActionRoutine <>f__am$cache0;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17A79C", Offset = "0x17A79C")]
	private static FsmDelegateAction.FsmActionRoutine <>f__am$cache1;

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x42237C", Offset = "0x42237C", VA = "0x42237C")]
	public AircraftRaceFSMHandler()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x422384", Offset = "0x422384", VA = "0x422384", Slot = "4")]
	public void Initialize(IFSMHandlerDO data)
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x423564", Offset = "0x423564", VA = "0x423564", Slot = "5")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x4235E0", Offset = "0x4235E0", VA = "0x4235E0", Slot = "6")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x42365C", Offset = "0x42365C", VA = "0x42365C")]
	public void StopState()
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x4236D8", Offset = "0x4236D8", VA = "0x4236D8", Slot = "7")]
	public void SlowDown()
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x423754", Offset = "0x423754", VA = "0x423754", Slot = "8")]
	public void Boost()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x4237D0", Offset = "0x4237D0", VA = "0x4237D0", Slot = "9")]
	public void Update()
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x4237FC", Offset = "0x4237FC", VA = "0x4237FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181448", Offset = "0x181448")]
	private static void <Initialize>m__0(FsmState owner)
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x423800", Offset = "0x423800", VA = "0x423800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181458", Offset = "0x181458")]
	private void <Initialize>m__1(FsmState owner)
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x423844", Offset = "0x423844", VA = "0x423844")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181468", Offset = "0x181468")]
	private void <Initialize>m__2(FsmState owner)
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x423878", Offset = "0x423878", VA = "0x423878")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181478", Offset = "0x181478")]
	private void <Initialize>m__3(FsmState owner)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x423B04", Offset = "0x423B04", VA = "0x423B04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181488", Offset = "0x181488")]
	private void <Initialize>m__4(FsmState owner)
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x423B30", Offset = "0x423B30", VA = "0x423B30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181498", Offset = "0x181498")]
	private void <Initialize>m__5(FsmState owner)
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x423DB4", Offset = "0x423DB4", VA = "0x423DB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1814A8", Offset = "0x1814A8")]
	private static void <Initialize>m__6(FsmState owner)
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x423DB8", Offset = "0x423DB8", VA = "0x423DB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1814B8", Offset = "0x1814B8")]
	private void <Initialize>m__7(FsmState owner)
	{
	}
}
[Token(Token = "0x20002F1")]
public class AircraftRecorderFSMHandler : AircraftBaseFSMHandler, IAircraftFSMHandler
{
	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RecorderFSMHandlerDO _fsmData;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string _previousState;

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x425864", Offset = "0x425864", VA = "0x425864")]
	public AircraftRecorderFSMHandler()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x42586C", Offset = "0x42586C", VA = "0x42586C", Slot = "4")]
	public void Initialize(IFSMHandlerDO data)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x426ADC", Offset = "0x426ADC", VA = "0x426ADC")]
	private void TransitionHandler(string stateName)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x426CE0", Offset = "0x426CE0", VA = "0x426CE0")]
	private void IncreaseTimeScale(float maxTime, bool updateValue = true)
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x426EFC", Offset = "0x426EFC", VA = "0x426EFC")]
	private void DecreaseTimeScale(float minTime, bool updateValue = true)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x427118", Offset = "0x427118", VA = "0x427118")]
	private void OnTimeScaleUpdate()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x427200", Offset = "0x427200", VA = "0x427200", Slot = "5")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x42727C", Offset = "0x42727C", VA = "0x42727C", Slot = "6")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x4272F8", Offset = "0x4272F8", VA = "0x4272F8", Slot = "7")]
	public void SlowDown()
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x427374", Offset = "0x427374", VA = "0x427374", Slot = "8")]
	public void Boost()
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x4273F0", Offset = "0x4273F0", VA = "0x4273F0", Slot = "9")]
	public void Update()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x42741C", Offset = "0x42741C", VA = "0x42741C")]
	public string GetState()
	{
		return null;
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x427550", Offset = "0x427550", VA = "0x427550")]
	public float GetTimescale()
	{
		return default(float);
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x42758C", Offset = "0x42758C", VA = "0x42758C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1814C8", Offset = "0x1814C8")]
	private void <Initialize>m__0(FsmState owner)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x427670", Offset = "0x427670", VA = "0x427670")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1814D8", Offset = "0x1814D8")]
	private void <Initialize>m__1(FsmState owner)
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x427754", Offset = "0x427754", VA = "0x427754")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1814E8", Offset = "0x1814E8")]
	private void <Initialize>m__2(FsmState owner)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x427818", Offset = "0x427818", VA = "0x427818")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1814F8", Offset = "0x1814F8")]
	private void <Initialize>m__3(FsmState owner)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x427984", Offset = "0x427984", VA = "0x427984")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181508", Offset = "0x181508")]
	private void <Initialize>m__4(FsmState owner)
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x427B18", Offset = "0x427B18", VA = "0x427B18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181518", Offset = "0x181518")]
	private void <Initialize>m__5(FsmState owner)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x427C84", Offset = "0x427C84", VA = "0x427C84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181528", Offset = "0x181528")]
	private void <Initialize>m__6(FsmState owner)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x427E18", Offset = "0x427E18", VA = "0x427E18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181538", Offset = "0x181538")]
	private void <Initialize>m__7(FsmState owner)
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x427F94", Offset = "0x427F94", VA = "0x427F94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181548", Offset = "0x181548")]
	private void <Initialize>m__8(FsmState owner)
	{
	}
}
[Token(Token = "0x20002F2")]
public interface IAircraftFSMHandler
{
	[Token(Token = "0x6001454")]
	void Initialize(IFSMHandlerDO data);

	[Token(Token = "0x6001455")]
	void Activate();

	[Token(Token = "0x6001456")]
	void Stop();

	[Token(Token = "0x6001457")]
	void SlowDown();

	[Token(Token = "0x6001458")]
	void Boost();

	[Token(Token = "0x6001459")]
	void Update();
}
[Token(Token = "0x20002F3")]
public class RacerHandler
{
	[Token(Token = "0x600145A")]
	[Address(RVA = "0x28D910", Offset = "0x28D910", VA = "0x28D910")]
	public RacerHandler()
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x2884B0", Offset = "0x2884B0", VA = "0x2884B0")]
	public static EnemyRacerAircraft[] CreateEnemyRacers(RaceConfig config, string prefixName = "racer_", int startingIndex = 1, bool visibleAtStart = true, [Optional] Transform parent, bool allowAvoidance = true)
	{
		return null;
	}
}
[Token(Token = "0x20002F4")]
public interface IRaceAircraft
{
	[Token(Token = "0x170002FE")]
	string ID
	{
		[Token(Token = "0x600145C")]
		get;
	}

	[Token(Token = "0x170002FF")]
	Transform Transform
	{
		[Token(Token = "0x600145D")]
		get;
	}

	[Token(Token = "0x17000300")]
	RacerType RacerType
	{
		[Token(Token = "0x600145E")]
		get;
	}

	[Token(Token = "0x17000301")]
	bool Avoiding
	{
		[Token(Token = "0x600145F")]
		get;
	}

	[Token(Token = "0x6001460")]
	void IsAvoiding(bool isAvoiding);

	[Token(Token = "0x6001461")]
	void AvoidTarget(Vector3 position);
}
[Token(Token = "0x20002F5")]
public class OnCollisionEnterStopRecorder : MonoBehaviour
{
	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private LayerMask m_layersToCollide;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_nameToCollide;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AircraftRecorder m_aircraftRecorder;

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x2AD82C", Offset = "0x2AD82C", VA = "0x2AD82C")]
	public OnCollisionEnterStopRecorder()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x2AD8DC", Offset = "0x2AD8DC", VA = "0x2AD8DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x2AD8E0", Offset = "0x2AD8E0", VA = "0x2AD8E0")]
	private void OnCollisionEnter(Collision col)
	{
	}
}
[Token(Token = "0x20002F6")]
public class OnTriggerEnterStartRecorder : MonoBehaviour
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private LayerMask m_layersToCollide;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_nameToCollide;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AircraftRecorder m_aircraftRecorder;

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x2B03F8", Offset = "0x2B03F8", VA = "0x2B03F8")]
	public OnTriggerEnterStartRecorder()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x2B04A8", Offset = "0x2B04A8", VA = "0x2B04A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x2B04AC", Offset = "0x2B04AC", VA = "0x2B04AC")]
	private void OnTriggerEnter(Collider col)
	{
	}
}
[Token(Token = "0x20002F7")]
public class OnTriggerEnterStopRecorder : MonoBehaviour
{
	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private LayerMask m_layersToCollide;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_nameToCollide;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AircraftRecorder m_aircraftRecorder;

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x2B06C0", Offset = "0x2B06C0", VA = "0x2B06C0")]
	public OnTriggerEnterStopRecorder()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x2B0770", Offset = "0x2B0770", VA = "0x2B0770")]
	private void Start()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x2B0774", Offset = "0x2B0774", VA = "0x2B0774")]
	private void OnTriggerEnter(Collider col)
	{
	}
}
[Token(Token = "0x20002F8")]
public class PlayerRacer : MonoBehaviour
{
	[Token(Token = "0x600146B")]
	[Address(RVA = "0x283EE8", Offset = "0x283EE8", VA = "0x283EE8")]
	public PlayerRacer()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x283EF0", Offset = "0x283EF0", VA = "0x283EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x283FBC", Offset = "0x283FBC", VA = "0x283FBC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x284048", Offset = "0x284048", VA = "0x284048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181558", Offset = "0x181558")]
	private void <Start>m__0(IQueryRequest request, IMutableQueryResult result)
	{
	}
}
[Token(Token = "0x20002F9")]
public class PlayerRacerAircraft : MonoBehaviour, IRaceAircraft
{
	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string _id;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_tempOverrideTimeScale;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_isNormalizingTimescale;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool m_isAvoiding;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool m_isInProximity;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RacerType _racerType;

	[Token(Token = "0x17000302")]
	public string ID
	{
		[Token(Token = "0x6001470")]
		[Address(RVA = "0x2841C4", Offset = "0x2841C4", VA = "0x2841C4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000303")]
	public bool TimescaleOverriden
	{
		[Token(Token = "0x6001471")]
		[Address(RVA = "0x2841CC", Offset = "0x2841CC", VA = "0x2841CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000304")]
	public bool IsNormalizingTimescale
	{
		[Token(Token = "0x6001472")]
		[Address(RVA = "0x2841D4", Offset = "0x2841D4", VA = "0x2841D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000305")]
	public bool Avoiding
	{
		[Token(Token = "0x6001473")]
		[Address(RVA = "0x2841DC", Offset = "0x2841DC", VA = "0x2841DC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000306")]
	public bool IsInProximity
	{
		[Token(Token = "0x6001474")]
		[Address(RVA = "0x2841E4", Offset = "0x2841E4", VA = "0x2841E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000307")]
	public Transform Transform
	{
		[Token(Token = "0x6001475")]
		[Address(RVA = "0x2841EC", Offset = "0x2841EC", VA = "0x2841EC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000308")]
	public RacerType RacerType
	{
		[Token(Token = "0x6001476")]
		[Address(RVA = "0x2841F4", Offset = "0x2841F4", VA = "0x2841F4", Slot = "6")]
		get
		{
			return default(RacerType);
		}
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x284124", Offset = "0x284124", VA = "0x284124")]
	public PlayerRacerAircraft()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x2841FC", Offset = "0x2841FC", VA = "0x2841FC")]
	public void Initialize(string id, RacerType racerType)
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x284208", Offset = "0x284208", VA = "0x284208", Slot = "9")]
	public void AvoidTarget(Vector3 position)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x28420C", Offset = "0x28420C", VA = "0x28420C", Slot = "8")]
	public void IsAvoiding(bool isAvoiding)
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x284214", Offset = "0x284214", VA = "0x284214")]
	public void SetProximityAction(bool value)
	{
	}
}
[Token(Token = "0x20002FA")]
public class RaceAircraft : MonoBehaviour
{
	[Token(Token = "0x600147B")]
	[Address(RVA = "0x286BA8", Offset = "0x286BA8", VA = "0x286BA8")]
	public RaceAircraft()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x286BB0", Offset = "0x286BB0", VA = "0x286BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x286BB4", Offset = "0x286BB4", VA = "0x286BB4")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002FB")]
public class RaceManager : MonoBehaviour
{
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D44", Offset = "0x173D44")]
	private sealed class <_WaitForLevelManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RaceManager $this;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000517")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x28A63C", Offset = "0x28A63C", VA = "0x28A63C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000518")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x28A644", Offset = "0x28A644", VA = "0x28A644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x286F50", Offset = "0x286F50", VA = "0x286F50")]
		[DebuggerHidden]
		public <_WaitForLevelManager>c__Iterator0()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x28A508", Offset = "0x28A508", VA = "0x28A508", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x28A64C", Offset = "0x28A64C", VA = "0x28A64C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x28A660", Offset = "0x28A660", VA = "0x28A660", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private EnemyRacerAircraft[] m_enemyRacers;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private RacePositionHolder m_placeHolderHandler;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AvoidanceManager m_avoidanceManager;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RingManager m_ringManager;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_enemiesAvoidEachOther;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool m_isDebug;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[SerializeField]
	private bool m_enableAircraftPositioning;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_enemyTargetForPositioning;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 m_positioningDistance;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17A8BC", Offset = "0x17A8BC")]
	[SerializeField]
	private KeyCode m_leftPosKey;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private KeyCode m_rightPosKey;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private KeyCode m_forwardPosKey;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private KeyCode m_backPosKey;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private KeyCode m_upPosKey;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private KeyCode m_downPosKey;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_startRaceFromBeginning;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private GenericTrigger m_startTrigger;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerRacerAircraft m_playerRacer;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private RaceConfig m_raceConfig;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaceStateType m_raceState;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private LevelManager m_levelManager;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaceManager m_raceManager;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameManager m_gameManager;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_updateRace;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool m_raceInitialized;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool _triedToInitialize;

	[Token(Token = "0x17000309")]
	public RaceStateType RaceState
	{
		[Token(Token = "0x600147F")]
		[Address(RVA = "0x286D38", Offset = "0x286D38", VA = "0x286D38")]
		get
		{
			return default(RaceStateType);
		}
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x286C50", Offset = "0x286C50", VA = "0x286C50")]
	public RaceManager()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x286D40", Offset = "0x286D40", VA = "0x286D40")]
	public static RaceManager Instance()
	{
		return null;
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x286ECC", Offset = "0x286ECC", VA = "0x286ECC")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManager()
	{
		return null;
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x286F58", Offset = "0x286F58", VA = "0x286F58")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x287918", Offset = "0x287918", VA = "0x287918")]
	private void Start()
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x287AB8", Offset = "0x287AB8", VA = "0x287AB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x287560", Offset = "0x287560", VA = "0x287560")]
	private void _AddListeners()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x287ABC", Offset = "0x287ABC", VA = "0x287ABC")]
	private void _RemoveListeners()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x287478", Offset = "0x287478", VA = "0x287478")]
	private void _InitializeLevel()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x287DBC", Offset = "0x287DBC", VA = "0x287DBC")]
	private void _InitializeAvoidance()
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x286FA0", Offset = "0x286FA0", VA = "0x286FA0")]
	private void _GetPlayerRacer()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x287220", Offset = "0x287220", VA = "0x287220")]
	private void _CreateEnemyRacers()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x288C6C", Offset = "0x288C6C", VA = "0x288C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x288DD0", Offset = "0x288DD0", VA = "0x288DD0")]
	private void _ProcessAircraftPositioning()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x2890AC", Offset = "0x2890AC", VA = "0x2890AC")]
	private void _PlacePlayerPlaneOnTarget(Vector3 newPos, Vector3 offsetPos, Quaternion newRot)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x288D5C", Offset = "0x288D5C", VA = "0x288D5C")]
	private void _ProcessRacersPosition()
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x2892C4", Offset = "0x2892C4", VA = "0x2892C4")]
	private void _PlayAll()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x289418", Offset = "0x289418", VA = "0x289418")]
	private void _PauseAll()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x28956C", Offset = "0x28956C", VA = "0x28956C")]
	private void _ResumeAll()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x2896C0", Offset = "0x2896C0", VA = "0x2896C0")]
	private void _StopAll()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x289814", Offset = "0x289814", VA = "0x289814")]
	private void _InitializeRace()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x2898C8", Offset = "0x2898C8", VA = "0x2898C8")]
	private void _InitializeRaceData()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x287384", Offset = "0x287384", VA = "0x287384")]
	private void _InitializeEnemyPosition()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x289F24", Offset = "0x289F24", VA = "0x289F24")]
	private bool _CanStartRace()
	{
		return default(bool);
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x28A1A0", Offset = "0x28A1A0", VA = "0x28A1A0")]
	public void RingHit(Transform aircraft, ScoreRing.RaceRingType ringPointType, int ringIndex)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x288BF0", Offset = "0x288BF0", VA = "0x288BF0")]
	private void _EnableRacerColliders(bool value)
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x28A260", Offset = "0x28A260", VA = "0x28A260")]
	private void _EndRace()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x287860", Offset = "0x287860", VA = "0x287860")]
	private void _StartRace()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x2880BC", Offset = "0x2880BC", VA = "0x2880BC")]
	private void _SetPlayerRacerComponent(Transform playerAircraft)
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x28A30C", Offset = "0x28A30C", VA = "0x28A30C")]
	private void _OnGamePaused(bool paused)
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x28A31C", Offset = "0x28A31C", VA = "0x28A31C")]
	private void _OnAircraftAssigned(ControllerAircraft aircraftController)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x28A4F8", Offset = "0x28A4F8", VA = "0x28A4F8")]
	private void _OnStartTriggerEntered(Transform obj)
	{
	}
}
[Token(Token = "0x20002FC")]
public class RacePositionHolder : MonoBehaviour
{
	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public List<Transform> placeHolders;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public RacePositionHolderConfig config;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public bool _withBoxCollider;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float posX;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float posZ;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int horCtr;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int vertCtr;

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x28A6E8", Offset = "0x28A6E8", VA = "0x28A6E8")]
	public RacePositionHolder()
	{
	}

	[Token(Token = "0x60014A0")]
	public void SetPlacement<T>([Optional] T[] itemsToPlace, bool withBoxCollider = false) where T : MonoBehaviour
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x28A774", Offset = "0x28A774", VA = "0x28A774")]
	public void SetPlacement(bool withBoxCollider = false)
	{
	}

	[Token(Token = "0x60014A2")]
	public void PlaceItems<T>(T[] itemsToPlace) where T : MonoBehaviour
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x28AB3C", Offset = "0x28AB3C", VA = "0x28AB3C")]
	private void PlaceItem(Transform item, Transform holder)
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x28AAB4", Offset = "0x28AAB4", VA = "0x28AAB4")]
	private void CreateGrid(RacePositionHolderConfig config)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x28ABF0", Offset = "0x28ABF0", VA = "0x28ABF0")]
	private void CreatePlaceHolderObject()
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x28B0EC", Offset = "0x28B0EC", VA = "0x28B0EC")]
	public void ResetValues()
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x28B228", Offset = "0x28B228", VA = "0x28B228")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x28A8E4", Offset = "0x28A8E4", VA = "0x28A8E4")]
	public void RemoveAllPlaceHolder()
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x28B24C", Offset = "0x28B24C", VA = "0x28B24C")]
	private void DestroyObjectHolder(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x28B32C", Offset = "0x28B32C", VA = "0x28B32C")]
	public void AddHolder([Optional] Transform item)
	{
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x28B484", Offset = "0x28B484", VA = "0x28B484")]
	public void RemoveHolder()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x28A840", Offset = "0x28A840", VA = "0x28A840")]
	private bool HasConfig()
	{
		return default(bool);
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x28B72C", Offset = "0x28B72C", VA = "0x28B72C")]
	private void SetConfigWarning()
	{
	}
}
[Token(Token = "0x20002FD")]
public abstract class RaceQueryIds
{
	[Token(Token = "0x4000FCC")]
	public const string PlayerRacer = "PlayerRacer";

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x28B7C0", Offset = "0x28B7C0", VA = "0x28B7C0")]
	protected RaceQueryIds()
	{
	}
}
namespace RecordedMovement
{
	[Token(Token = "0x20002FE")]
	public class RecordedObject : MonoBehaviour
	{
		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D54", Offset = "0x173D54")]
		private sealed class <_DownloadJson>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string <name>__0;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal string <fullPath>__0;

			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal FsmState owner;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal string <jsonString>__0;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal RecordedObject $this;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal object $current;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60025B5")]
				[Address(RVA = "0x2922B4", Offset = "0x2922B4", VA = "0x2922B4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B6")]
				[Address(RVA = "0x2922BC", Offset = "0x2922BC", VA = "0x2922BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0x290A24", Offset = "0x290A24", VA = "0x290A24")]
			[DebuggerHidden]
			public <_DownloadJson>c__Iterator0()
			{
			}

			[Token(Token = "0x60025B4")]
			[Address(RVA = "0x291EB0", Offset = "0x291EB0", VA = "0x291EB0", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x2922C4", Offset = "0x2922C4", VA = "0x2922C4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x2922D8", Offset = "0x2922D8", VA = "0x2922D8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D64", Offset = "0x173D64")]
		private sealed class <ImportFromJSONByteFile>c__AnonStorey1
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string name;

			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x291810", Offset = "0x291810", VA = "0x291810")]
			public <ImportFromJSONByteFile>c__AnonStorey1()
			{
			}

			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x291DF8", Offset = "0x291DF8", VA = "0x291DF8")]
			internal bool <>m__0(FileInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected string m_recorderId;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected string m_fileName;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected string m_path;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ACRecPos> m_acRecPos;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17A9BC", Offset = "0x17A9BC")]
		[SerializeField]
		protected float m_timelinePosition;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float m_timeScale;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected bool m_allowSettingTransform;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		protected bool m_pauseOnEndOfRecording;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		protected bool m_recordingEnded;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int m_currentTimeFrame;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_currentTimeFrameLerp;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float m_totalCurrentTime;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_prevPosition;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_prevRotation;

		[Token(Token = "0x4000FDB")]
		public const string LOAD = "Load";

		[Token(Token = "0x4000FDC")]
		public const string READY = "Ready";

		[Token(Token = "0x4000FDD")]
		public const string PAUSE = "Pause";

		[Token(Token = "0x4000FDE")]
		public const string RESUME = "Resume";

		[Token(Token = "0x4000FDF")]
		public const string ERROR = "Error";

		[Token(Token = "0x4000FE0")]
		public const string END = "End";

		[Token(Token = "0x4000FE1")]
		public const string CONTINUE_STATE = "ContinueState";

		[Token(Token = "0x4000FE2")]
		public const string UNLOADED = "Unloaded";

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Fsm Fsm;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private RecorderStatesDO states;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int num;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private WWW www;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isWWWDoneLoading;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AA24", Offset = "0x17AA24")]
		private static FsmDelegateAction.FsmActionRoutine <>f__am$cache0;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AA34", Offset = "0x17AA34")]
		private static FsmDelegateAction.FsmActionRoutine <>f__am$cache1;

		[Token(Token = "0x1700030A")]
		public float TimelinePosition
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x28DBC0", Offset = "0x28DBC0", VA = "0x28DBC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030B")]
		public float TimeScale
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x28D79C", Offset = "0x28D79C", VA = "0x28D79C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030C")]
		public int CurrentTimeFrame
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x28D7A4", Offset = "0x28D7A4", VA = "0x28D7A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030D")]
		public float CurrentTimeFrameLerp
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x28D7AC", Offset = "0x28D7AC", VA = "0x28D7AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030E")]
		public float TotalCurrentTime
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x28DBC8", Offset = "0x28DBC8", VA = "0x28DBC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030F")]
		public float CurrentTimeInterval
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x28DBD0", Offset = "0x28DBD0", VA = "0x28DBD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000310")]
		public bool IsWWWDoneLoading
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x290A2C", Offset = "0x290A2C", VA = "0x290A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x28DA54", Offset = "0x28DA54", VA = "0x28DA54")]
		public RecordedObject()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x28DCDC", Offset = "0x28DCDC", VA = "0x28DCDC")]
		public void LoadRecordedPath()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x28DD58", Offset = "0x28DD58", VA = "0x28DD58")]
		public void FsmUpdate()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x28DD84", Offset = "0x28DD84", VA = "0x28DD84")]
		public void Resume()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x28DE00", Offset = "0x28DE00", VA = "0x28DE00")]
		public void Pause()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x28DE7C", Offset = "0x28DE7C", VA = "0x28DE7C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x28DEF8", Offset = "0x28DEF8", VA = "0x28DEF8")]
		public void Initialize(RecordedObjectDO data)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x28DF54", Offset = "0x28DF54", VA = "0x28DF54")]
		protected void SetPositionOnFrame(int frame, float lerpOnCurrentFrame)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x28E4E4", Offset = "0x28E4E4", VA = "0x28E4E4")]
		protected float GetIncrementTimePosition()
		{
			return default(float);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x28E624", Offset = "0x28E624", VA = "0x28E624")]
		protected void SetActualFramesFromTimelinePosition(float timelinePosition)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x28E7A8", Offset = "0x28E7A8", VA = "0x28E7A8")]
		protected float GetDestinationDirection(float referenceTimeFrameLerp, int referenceTimeFrame)
		{
			return default(float);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x28E880", Offset = "0x28E880", VA = "0x28E880")]
		protected void SetPlaybackTime(float time)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x28E8AC", Offset = "0x28E8AC", VA = "0x28E8AC")]
		private int GetTotalFrameTime(float time)
		{
			return default(int);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x28E9B4", Offset = "0x28E9B4", VA = "0x28E9B4")]
		private float GetTotalFrameLerp(float time)
		{
			return default(float);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x28EAC8", Offset = "0x28EAC8", VA = "0x28EAC8")]
		public float GetOffsettedTimeline(float durationOffset, float direction)
		{
			return default(float);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x28F084", Offset = "0x28F084", VA = "0x28F084")]
		private bool IsLowerBoundsFrame(float offset = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x28F0A8", Offset = "0x28F0A8", VA = "0x28F0A8")]
		private bool IsHigherBoundsFrame(float offset = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x28F15C", Offset = "0x28F15C", VA = "0x28F15C")]
		private bool IsLowerBoundsFrameLerp(float offset = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x28F190", Offset = "0x28F190", VA = "0x28F190")]
		private bool IsHigherBoundsFrameLerp(float offset = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x28F26C", Offset = "0x28F26C", VA = "0x28F26C")]
		private float GetRemainingLerpBasedOnDirection(float direction, float offsetLerp)
		{
			return default(float);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x28EC1C", Offset = "0x28EC1C", VA = "0x28EC1C")]
		protected int GetFrameFromOffsetLerp(float offsetLerp, float direction)
		{
			return default(int);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x28EE24", Offset = "0x28EE24", VA = "0x28EE24")]
		protected float GetFrameLerpFromOffsetLerp(float offsetLerp, float direction)
		{
			return default(float);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x28F34C", Offset = "0x28F34C", VA = "0x28F34C")]
		private int GetFrameOffset(ref float offset, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x28F294", Offset = "0x28F294", VA = "0x28F294")]
		private int GetFrameBasedOnBounds(float remainingOffset, int current)
		{
			return default(int);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x28F40C", Offset = "0x28F40C", VA = "0x28F40C")]
		public void PrepareFsm()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x28F6E4", Offset = "0x28F6E4", VA = "0x28F6E4")]
		private void StateDelegates(RecorderStatesDO states)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x28FE54", Offset = "0x28FE54", VA = "0x28FE54")]
		private void UnloadedState(FsmState state)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x28FFD8", Offset = "0x28FFD8", VA = "0x28FFD8")]
		private void LoadState(FsmState state)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x29011C", Offset = "0x29011C", VA = "0x29011C")]
		private void PausedState(FsmState state)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x2902A0", Offset = "0x2902A0", VA = "0x2902A0")]
		private void PlayedState(FsmState state)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x2905AC", Offset = "0x2905AC", VA = "0x2905AC")]
		private void CheckEndOfFrame()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x290470", Offset = "0x290470", VA = "0x290470")]
		private void StopedState(FsmState state)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x28F7A0", Offset = "0x28F7A0", VA = "0x28F7A0")]
		private void SetTransitions(RecorderStatesDO states)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x29084C", Offset = "0x29084C", VA = "0x29084C")]
		protected void ImportFromJSONStringFile(FsmState owner)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x290984", Offset = "0x290984", VA = "0x290984")]
		[DebuggerHidden]
		private IEnumerator _DownloadJson(string path, FsmState owner)
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x290A34", Offset = "0x290A34", VA = "0x290A34")]
		private void _GetAcRecPosCollectionFromJson(string jsonString, FsmState owner)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x290D98", Offset = "0x290D98", VA = "0x290D98")]
		protected void DebugCollectionContent(List<ACRecPos> recPos)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x291310", Offset = "0x291310", VA = "0x291310")]
		protected void ImportFromJSONByteFile()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x28D7B4", Offset = "0x28D7B4", VA = "0x28D7B4")]
		public string GetState()
		{
			return null;
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x291818", Offset = "0x291818", VA = "0x291818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181588", Offset = "0x181588")]
		private static void <UnloadedState>m__0(FsmState owner)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x29181C", Offset = "0x29181C", VA = "0x29181C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181598", Offset = "0x181598")]
		private void <LoadState>m__1(FsmState owner)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x291820", Offset = "0x291820", VA = "0x291820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1815A8", Offset = "0x1815A8")]
		private void <PausedState>m__2(FsmState owner)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x29182C", Offset = "0x29182C", VA = "0x29182C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1815B8", Offset = "0x1815B8")]
		private void <PausedState>m__3(FsmState owner)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x2919BC", Offset = "0x2919BC", VA = "0x2919BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1815C8", Offset = "0x1815C8")]
		private static void <PlayedState>m__4(FsmState owner)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x2919C0", Offset = "0x2919C0", VA = "0x2919C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1815D8", Offset = "0x1815D8")]
		private void <PlayedState>m__5(FsmState owner)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x291BB8", Offset = "0x291BB8", VA = "0x291BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1815E8", Offset = "0x1815E8")]
		private void <StopedState>m__6(FsmState owner)
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class RecorderStatesDO
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AA44", Offset = "0x17AA44")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AA44", Offset = "0x17AA44")]
		private FsmState <unloaded>k__BackingField;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AA78", Offset = "0x17AA78")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AA78", Offset = "0x17AA78")]
		private FsmState <load>k__BackingField;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AAAC", Offset = "0x17AAAC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AAAC", Offset = "0x17AAAC")]
		private FsmState <paused>k__BackingField;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AAE0", Offset = "0x17AAE0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AAE0", Offset = "0x17AAE0")]
		private FsmState <playing>k__BackingField;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AB14", Offset = "0x17AB14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AB14", Offset = "0x17AB14")]
		private FsmState <stopped>k__BackingField;

		[Token(Token = "0x17000311")]
		public FsmState unloaded
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x28FE4C", Offset = "0x28FE4C", VA = "0x28FE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1815F8", Offset = "0x1815F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x292390", Offset = "0x292390", VA = "0x292390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181608", Offset = "0x181608")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public FsmState load
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x28FFD0", Offset = "0x28FFD0", VA = "0x28FFD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181618", Offset = "0x181618")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x292398", Offset = "0x292398", VA = "0x292398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181628", Offset = "0x181628")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public FsmState paused
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x290114", Offset = "0x290114", VA = "0x290114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181638", Offset = "0x181638")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x2923A0", Offset = "0x2923A0", VA = "0x2923A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181648", Offset = "0x181648")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public FsmState playing
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x290298", Offset = "0x290298", VA = "0x290298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181658", Offset = "0x181658")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x2923A8", Offset = "0x2923A8", VA = "0x2923A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181668", Offset = "0x181668")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public FsmState stopped
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x290468", Offset = "0x290468", VA = "0x290468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181678", Offset = "0x181678")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x2923B0", Offset = "0x2923B0", VA = "0x2923B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181688", Offset = "0x181688")]
			set
			{
			}
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x28F564", Offset = "0x28F564", VA = "0x28F564")]
		public RecorderStatesDO()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x28F56C", Offset = "0x28F56C", VA = "0x28F56C")]
		public void AddStates(Fsm fsm)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class RecordedObjectDO
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AB48", Offset = "0x17AB48")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AB48", Offset = "0x17AB48")]
		private string <id>k__BackingField;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AB7C", Offset = "0x17AB7C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AB7C", Offset = "0x17AB7C")]
		private string <fileName>k__BackingField;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17ABB0", Offset = "0x17ABB0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17ABB0", Offset = "0x17ABB0")]
		private string <path>k__BackingField;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17ABE4", Offset = "0x17ABE4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17ABE4", Offset = "0x17ABE4")]
		private float <timeScale>k__BackingField;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AC18", Offset = "0x17AC18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AC18", Offset = "0x17AC18")]
		private bool <allowSettingTransform>k__BackingField;

		[Token(Token = "0x17000316")]
		public string id
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x28DF2C", Offset = "0x28DF2C", VA = "0x28DF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181698", Offset = "0x181698")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x292368", Offset = "0x292368", VA = "0x292368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1816A8", Offset = "0x1816A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public string fileName
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x28DF3C", Offset = "0x28DF3C", VA = "0x28DF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1816B8", Offset = "0x1816B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x292370", Offset = "0x292370", VA = "0x292370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1816C8", Offset = "0x1816C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public string path
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x28DF34", Offset = "0x28DF34", VA = "0x28DF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1816D8", Offset = "0x1816D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x292378", Offset = "0x292378", VA = "0x292378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1816E8", Offset = "0x1816E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public float timeScale
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x28DF44", Offset = "0x28DF44", VA = "0x28DF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1816F8", Offset = "0x1816F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x292380", Offset = "0x292380", VA = "0x292380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181708", Offset = "0x181708")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public bool allowSettingTransform
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x28DF4C", Offset = "0x28DF4C", VA = "0x28DF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181718", Offset = "0x181718")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x292388", Offset = "0x292388", VA = "0x292388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181728", Offset = "0x181728")]
			set
			{
			}
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x292360", Offset = "0x292360", VA = "0x292360")]
		public RecordedObjectDO()
		{
		}
	}
}
[Token(Token = "0x2000301")]
public class AvoidanceLogic : MonoBehaviour, IAvoidanceLogic
{
	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x42F548", Offset = "0x42F548", VA = "0x42F548")]
	public AvoidanceLogic()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x42F550", Offset = "0x42F550", VA = "0x42F550", Slot = "5")]
	public virtual void SetAvoidance(IRaceAircraft racerA, IRaceAircraft racerB, float targetDistance = 1f)
	{
	}
}
[Token(Token = "0x2000302")]
public interface IAvoidanceLogic
{
	[Token(Token = "0x60014FD")]
	void SetAvoidance(IRaceAircraft racerA, IRaceAircraft racerB, float targetDistance = 1f);
}
[Token(Token = "0x2000303")]
public class SimpleAvoidanceLogic : AvoidanceLogic
{
	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x2FCD18", Offset = "0x2FCD18", VA = "0x2FCD18")]
	public SimpleAvoidanceLogic()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x2FCD20", Offset = "0x2FCD20", VA = "0x2FCD20", Slot = "5")]
	public override void SetAvoidance(IRaceAircraft racerA, IRaceAircraft racerB, float targetDistance)
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x2FD15C", Offset = "0x2FD15C", VA = "0x2FD15C")]
	private float GetSquareOffset(Vector3 positionA, Vector3 positionB)
	{
		return default(float);
	}
}
[Token(Token = "0x2000304")]
public class AvoidanceManager : MonoBehaviour
{
	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AvoidanceLogic avoidanceLogic;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_forceDisableAvoidance;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[SerializeField]
	private bool m_allowAvoidance;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<AvoidanceProfileDO> avoidanceProfiles;

	[Token(Token = "0x1700031B")]
	public bool IsForceDisabledAvoidance
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x42F5E0", Offset = "0x42F5E0", VA = "0x42F5E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x42F554", Offset = "0x42F554", VA = "0x42F554")]
	public AvoidanceManager()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x42F5E8", Offset = "0x42F5E8", VA = "0x42F5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x42F5EC", Offset = "0x42F5EC", VA = "0x42F5EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x42F820", Offset = "0x42F820", VA = "0x42F820")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x42F60C", Offset = "0x42F60C", VA = "0x42F60C")]
	private void ProcessAvoidance()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x42F824", Offset = "0x42F824", VA = "0x42F824")]
	public void EnableAvoidance(bool value)
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x42F82C", Offset = "0x42F82C", VA = "0x42F82C")]
	public void ClearAvoidanceList()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x42F830", Offset = "0x42F830", VA = "0x42F830")]
	public void RemoveRacerToAvoid(IRaceAircraft racerA, IRaceAircraft racerB)
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x42F834", Offset = "0x42F834", VA = "0x42F834")]
	public void SetAvoidance(IRaceAircraft racerA, IRaceAircraft racerB, float targetDistance)
	{
	}
}
[Token(Token = "0x2000305")]
public class GunTriggerInput : MonoBehaviour
{
	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GunTriggerInput s_instance;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private InteractableInput m_grabInteractableInput;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InteractableHandInput m_grabRightInteractableInput;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private InteractableHandInput m_grabLeftInteractableInput;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_grabInput;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_prevGrabInputValue;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InteractableInput m_fireInteractableInput;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractableInput m_reloadInteractableInput;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject m_pipper;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GrabbableGun m_gun;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Transform m_gunMirror;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_mirrorTransformRoot;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_gunIsFloating;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_gunLocationTform;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_holdOffset;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_handHoldOffsetRift;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_handRotOffsetRift;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 m_handHoldOffsetMSMR;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 m_handRotOffsetMSMR;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isGunHeld;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_gunHeldTime;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_gunJustPickedUp;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private GameObject m_handsRoot;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TRACKED_OBJECT m_handedness;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static CONTROLLER m_currentController;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool m_holdToggle;

	[Token(Token = "0x1700031C")]
	public static GunTriggerInput Instance
	{
		[Token(Token = "0x600150C")]
		[Address(RVA = "0x33B930", Offset = "0x33B930", VA = "0x33B930")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031D")]
	public bool IsGunHeld
	{
		[Token(Token = "0x6001510")]
		[Address(RVA = "0x33C99C", Offset = "0x33C99C", VA = "0x33C99C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700031E")]
	public TRACKED_OBJECT Handedness
	{
		[Token(Token = "0x6001511")]
		[Address(RVA = "0x33C9A4", Offset = "0x33C9A4", VA = "0x33C9A4")]
		get
		{
			return default(TRACKED_OBJECT);
		}
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x33B7BC", Offset = "0x33B7BC", VA = "0x33B7BC")]
	public GunTriggerInput()
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x33B9BC", Offset = "0x33B9BC", VA = "0x33B9BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x33BD48", Offset = "0x33BD48", VA = "0x33BD48")]
	private void Update()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x33C90C", Offset = "0x33C90C", VA = "0x33C90C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x33BD6C", Offset = "0x33BD6C", VA = "0x33BD6C")]
	private void _CheckInput()
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x33C41C", Offset = "0x33C41C", VA = "0x33C41C")]
	private void _UpdateGunPosition()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x33CB4C", Offset = "0x33CB4C", VA = "0x33CB4C")]
	private void _UpdateHandedPosition(bool positionMirrorOnly)
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x33D000", Offset = "0x33D000", VA = "0x33D000")]
	private void _UpdateFloatingPosition()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x33C634", Offset = "0x33C634", VA = "0x33C634")]
	private void _UpdatePipperPosition()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x33BB40", Offset = "0x33BB40", VA = "0x33BB40")]
	private void _SetHandedness()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x33C9AC", Offset = "0x33C9AC", VA = "0x33C9AC")]
	private void _SetHandVisibility()
	{
	}
}
[Serializable]
[Token(Token = "0x2000306")]
public static class LevelDetails
{
	[Token(Token = "0x2000307")]
	public class LevelVars
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AD1C", Offset = "0x17AD1C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AD1C", Offset = "0x17AD1C")]
		private string <name>k__BackingField;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17AD50", Offset = "0x17AD50")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17AD50", Offset = "0x17AD50")]
		private int <payment>k__BackingField;

		[Token(Token = "0x1700031F")]
		public string name
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x46E4FC", Offset = "0x46E4FC", VA = "0x46E4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181738", Offset = "0x181738")]
			get
			{
				return null;
			}
			[Token(Token = "0x600151D")]
			[Address(RVA = "0x46E4EC", Offset = "0x46E4EC", VA = "0x46E4EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181748", Offset = "0x181748")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public int payment
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x46E504", Offset = "0x46E504", VA = "0x46E504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181758", Offset = "0x181758")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x46E4F4", Offset = "0x46E4F4", VA = "0x46E4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181768", Offset = "0x181768")]
			set
			{
			}
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x46E4E4", Offset = "0x46E4E4", VA = "0x46E4E4")]
		public LevelVars()
		{
		}
	}

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelVars[,,][] Info;
}
[Token(Token = "0x2000308")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	public static class IslandDetails
	{
		[Token(Token = "0x200030A")]
		public class IslandVars
		{
			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B0D0", Offset = "0x17B0D0")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17B0D0", Offset = "0x17B0D0")]
			private string <Name>k__BackingField;

			[Token(Token = "0x1700033A")]
			public string Name
			{
				[Token(Token = "0x60015A1")]
				[Address(RVA = "0xBC91A4", Offset = "0xBC91A4", VA = "0xBC91A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181868", Offset = "0x181868")]
				get
				{
					return null;
				}
				[Token(Token = "0x60015A2")]
				[Address(RVA = "0xBC919C", Offset = "0xBC919C", VA = "0xBC919C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181878", Offset = "0x181878")]
				set
				{
				}
			}

			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xBC9194", Offset = "0xBC9194", VA = "0xBC9194")]
			public IslandVars()
			{
			}
		}

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IslandVars[] Info;
	}

	[Token(Token = "0x200030B")]
	public static class OfficeDetails
	{
		[Token(Token = "0x200030C")]
		public class OfficeVars
		{
			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Name;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int OfficePrice;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VEHICLE_TYPE VehicleType;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float VehiclePrice;

			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xBC99EC", Offset = "0xBC99EC", VA = "0xBC99EC")]
			public OfficeVars()
			{
			}
		}

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OfficeVars[] Info;
	}

	[Serializable]
	[Token(Token = "0x200030D")]
	public class LevelTypeUnlockCondition
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LEVEL_TYPE levelType;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OFFICE_TYPE officeType;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VEHICLE_TYPE vehicleType;

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xBBD0C8", Offset = "0xBBD0C8", VA = "0xBBD0C8")]
		public LevelTypeUnlockCondition(LEVEL_TYPE levelType, OFFICE_TYPE officeType = OFFICE_TYPE.None, VEHICLE_TYPE vehicleType = VEHICLE_TYPE.None)
		{
		}
	}

	[Token(Token = "0x200030E")]
	public enum CameraState
	{
		[Token(Token = "0x40010B5")]
		None,
		[Token(Token = "0x40010B6")]
		Vehicle,
		[Token(Token = "0x40010B7")]
		Office,
		[Token(Token = "0x40010B8")]
		PauseBox,
		[Token(Token = "0x40010B9")]
		Crashing
	}

	[Serializable]
	[Token(Token = "0x200030F")]
	private class PlatformVolumePair
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PLATFORM platform;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] models;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float volume;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xBC9AB0", Offset = "0xBC9AB0", VA = "0xBC9AB0")]
		public PlatformVolumePair()
		{
		}
	}

	[Token(Token = "0x2000310")]
	public delegate void PauseDelegate(bool isPaused);

	[Token(Token = "0x2000311")]
	public enum SAMSUNGMODEL
	{
		[Token(Token = "0x40010BE")]
		Undetermined,
		[Token(Token = "0x40010BF")]
		Note4,
		[Token(Token = "0x40010C0")]
		Note5,
		[Token(Token = "0x40010C1")]
		Note7,
		[Token(Token = "0x40010C2")]
		Note8,
		[Token(Token = "0x40010C3")]
		S6,
		[Token(Token = "0x40010C4")]
		S7,
		[Token(Token = "0x40010C5")]
		S8,
		[Token(Token = "0x40010C6")]
		Go
	}

	[Token(Token = "0x2000312")]
	public enum DAYDREAMMODEL
	{
		[Token(Token = "0x40010C8")]
		Undetermined,
		[Token(Token = "0x40010C9")]
		Polaris
	}

	[Token(Token = "0x2000313")]
	public delegate void CameraStateChangeHandler(CameraState state);

	[Token(Token = "0x2000314")]
	public delegate void CameraMovedHandler();

	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D74", Offset = "0x173D74")]
	private sealed class <GetLevelTypeUnlockCondition>c__AnonStoreyD
	{
		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LEVEL_TYPE levelType;

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xBBD370", Offset = "0xBBD370", VA = "0xBBD370")]
		public <GetLevelTypeUnlockCondition>c__AnonStoreyD()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xBC692C", Offset = "0xBC692C", VA = "0xBC692C")]
		internal bool <>m__0(LevelTypeUnlockCondition x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D84", Offset = "0x173D84")]
	private sealed class <WaitToResetSky>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700051B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xBC6CC8", Offset = "0xBC6CC8", VA = "0xBC6CC8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xBC6CD0", Offset = "0xBC6CD0", VA = "0xBC6CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xBC0CCC", Offset = "0xBC0CCC", VA = "0xBC0CCC")]
		[DebuggerHidden]
		public <WaitToResetSky>c__Iterator0()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xBC6BDC", Offset = "0xBC6BDC", VA = "0xBC6BDC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xBC6CD8", Offset = "0xBC6CD8", VA = "0xBC6CD8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xBC6CEC", Offset = "0xBC6CEC", VA = "0xBC6CEC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173D94", Offset = "0x173D94")]
	private sealed class <_WaitForController>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string[] <gamePadNames>__0;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameManager $this;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700051D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0xBC77AC", Offset = "0xBC77AC", VA = "0xBC77AC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0xBC77B4", Offset = "0xBC77B4", VA = "0xBC77B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xBC1728", Offset = "0xBC1728", VA = "0xBC1728")]
		[DebuggerHidden]
		public <_WaitForController>c__Iterator1()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xBC7154", Offset = "0xBC7154", VA = "0xBC7154", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xBC77BC", Offset = "0xBC77BC", VA = "0xBC77BC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xBC77D0", Offset = "0xBC77D0", VA = "0xBC77D0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173DA4", Offset = "0x173DA4")]
	private sealed class <_WaitForGVRController>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700051F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xBC78DC", Offset = "0xBC78DC", VA = "0xBC78DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000520")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0xBC78E4", Offset = "0xBC78E4", VA = "0xBC78E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xBC29C8", Offset = "0xBC29C8", VA = "0xBC29C8")]
		[DebuggerHidden]
		public <_WaitForGVRController>c__Iterator2()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xBC7858", Offset = "0xBC7858", VA = "0xBC7858", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xBC78EC", Offset = "0xBC78EC", VA = "0xBC78EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xBC7900", Offset = "0xBC7900", VA = "0xBC7900", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200057E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173DB4", Offset = "0x173DB4")]
	private sealed class <_WaitForPlayerDataToLoad>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000521")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0xBC86B4", Offset = "0xBC86B4", VA = "0xBC86B4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000522")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025D2")]
			[Address(RVA = "0xBC86BC", Offset = "0xBC86BC", VA = "0xBC86BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xBC3158", Offset = "0xBC3158", VA = "0xBC3158")]
		[DebuggerHidden]
		public <_WaitForPlayerDataToLoad>c__Iterator3()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xBC85F4", Offset = "0xBC85F4", VA = "0xBC85F4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xBC86C4", Offset = "0xBC86C4", VA = "0xBC86C4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xBC86D8", Offset = "0xBC86D8", VA = "0xBC86D8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173DC4", Offset = "0x173DC4")]
	private sealed class <_WaitForLevelsToLoad>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000523")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0xBC8548", Offset = "0xBC8548", VA = "0xBC8548", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000524")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xBC8550", Offset = "0xBC8550", VA = "0xBC8550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xBC31E4", Offset = "0xBC31E4", VA = "0xBC31E4")]
		[DebuggerHidden]
		public <_WaitForLevelsToLoad>c__Iterator4()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xBC8348", Offset = "0xBC8348", VA = "0xBC8348", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xBC8558", Offset = "0xBC8558", VA = "0xBC8558", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xBC856C", Offset = "0xBC856C", VA = "0xBC856C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173DD4", Offset = "0x173DD4")]
	private sealed class <_WaitForIsLoadingPause>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000525")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025DD")]
			[Address(RVA = "0xBC80E0", Offset = "0xBC80E0", VA = "0xBC80E0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000526")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xBC80E8", Offset = "0xBC80E8", VA = "0xBC80E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xBC36CC", Offset = "0xBC36CC", VA = "0xBC36CC")]
		[DebuggerHidden]
		public <_WaitForIsLoadingPause>c__Iterator5()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xBC7FD0", Offset = "0xBC7FD0", VA = "0xBC7FD0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xBC80F0", Offset = "0xBC80F0", VA = "0xBC80F0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xBC8104", Offset = "0xBC8104", VA = "0xBC8104", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173DE4", Offset = "0x173DE4")]
	private sealed class <_WaitForGameStateManagerPause>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000527")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025E3")]
			[Address(RVA = "0xBC7D10", Offset = "0xBC7D10", VA = "0xBC7D10", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000528")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025E4")]
			[Address(RVA = "0xBC7D18", Offset = "0xBC7D18", VA = "0xBC7D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xBC3870", Offset = "0xBC3870", VA = "0xBC3870")]
		[DebuggerHidden]
		public <_WaitForGameStateManagerPause>c__Iterator6()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xBC7988", Offset = "0xBC7988", VA = "0xBC7988", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xBC7D20", Offset = "0xBC7D20", VA = "0xBC7D20", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xBC7D34", Offset = "0xBC7D34", VA = "0xBC7D34", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173DF4", Offset = "0x173DF4")]
	private sealed class <_WaitForIsLoadingUnpause>c__Iterator7 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000529")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xBC829C", Offset = "0xBC829C", VA = "0xBC829C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xBC82A4", Offset = "0xBC82A4", VA = "0xBC82A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xBC38FC", Offset = "0xBC38FC", VA = "0xBC38FC")]
		[DebuggerHidden]
		public <_WaitForIsLoadingUnpause>c__Iterator7()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xBC818C", Offset = "0xBC818C", VA = "0xBC818C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xBC82AC", Offset = "0xBC82AC", VA = "0xBC82AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xBC82C0", Offset = "0xBC82C0", VA = "0xBC82C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E04", Offset = "0x173E04")]
	private sealed class <_WaitForGameStateManagerUnpause>c__Iterator8 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700052B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xBC7F24", Offset = "0xBC7F24", VA = "0xBC7F24", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025F0")]
			[Address(RVA = "0xBC7F2C", Offset = "0xBC7F2C", VA = "0xBC7F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xBC3AA0", Offset = "0xBC3AA0", VA = "0xBC3AA0")]
		[DebuggerHidden]
		public <_WaitForGameStateManagerUnpause>c__Iterator8()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xBC7DBC", Offset = "0xBC7DBC", VA = "0xBC7DBC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xBC7F34", Offset = "0xBC7F34", VA = "0xBC7F34", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xBC7F48", Offset = "0xBC7F48", VA = "0xBC7F48", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E14", Offset = "0x173E14")]
	private sealed class <QuitApplication>c__Iterator9 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700052D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xBC6B30", Offset = "0xBC6B30", VA = "0xBC6B30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xBC6B38", Offset = "0xBC6B38", VA = "0xBC6B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xBC42C8", Offset = "0xBC42C8", VA = "0xBC42C8")]
		[DebuggerHidden]
		public <QuitApplication>c__Iterator9()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xBC6964", Offset = "0xBC6964", VA = "0xBC6964", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xBC6B40", Offset = "0xBC6B40", VA = "0xBC6B40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xBC6B54", Offset = "0xBC6B54", VA = "0xBC6B54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E24", Offset = "0x173E24")]
	private sealed class <_WaitForScreenFaderDownOffice>c__IteratorA : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700052F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60025FB")]
			[Address(RVA = "0xBC889C", Offset = "0xBC889C", VA = "0xBC889C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000530")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025FC")]
			[Address(RVA = "0xBC88A4", Offset = "0xBC88A4", VA = "0xBC88A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xBC4354", Offset = "0xBC4354", VA = "0xBC4354")]
		[DebuggerHidden]
		public <_WaitForScreenFaderDownOffice>c__IteratorA()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xBC8760", Offset = "0xBC8760", VA = "0xBC8760", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xBC88AC", Offset = "0xBC88AC", VA = "0xBC88AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xBC88C0", Offset = "0xBC88C0", VA = "0xBC88C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000586")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E34", Offset = "0x173E34")]
	private sealed class <_VrRecenter>c__IteratorB : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameManager $this;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000531")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xBC70A8", Offset = "0xBC70A8", VA = "0xBC70A8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000532")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xBC70B0", Offset = "0xBC70B0", VA = "0xBC70B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xBC4364", Offset = "0xBC4364", VA = "0xBC4364")]
		[DebuggerHidden]
		public <_VrRecenter>c__IteratorB()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xBC6D74", Offset = "0xBC6D74", VA = "0xBC6D74", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xBC70B8", Offset = "0xBC70B8", VA = "0xBC70B8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xBC70CC", Offset = "0xBC70CC", VA = "0xBC70CC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E44", Offset = "0x173E44")]
	private sealed class <DisableAlwaysLoaded>c__IteratorC : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Scene <inspectedScene>__0;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject[] <gameObjects>__0;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameObject[] $locvar0;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $locvar1;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal GameObject[] $locvar2;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar3;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal GameManager $this;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x17000533")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002607")]
			[Address(RVA = "0xBC6880", Offset = "0xBC6880", VA = "0xBC6880", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000534")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0xBC6888", Offset = "0xBC6888", VA = "0xBC6888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xBC5FA8", Offset = "0xBC5FA8", VA = "0xBC5FA8")]
		[DebuggerHidden]
		public <DisableAlwaysLoaded>c__IteratorC()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xBC6520", Offset = "0xBC6520", VA = "0xBC6520", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xBC6890", Offset = "0xBC6890", VA = "0xBC6890", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xBC68A4", Offset = "0xBC68A4", VA = "0xBC68A4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001015")]
	public const string APP_ID = "1798409083604479";

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public VisibilityByDLC.DLC EnabledDLC;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isPirate;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PLATFORM CurrentPlatform;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PLATFORM m_initialPlatform;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CONTROLLER CurrentController;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_questPlatform;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string GearVRName;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string GoogleName;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string AndroidName;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string DaydreamName;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string WaveName;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string PCName;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public string OculusName;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string QuestName;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public string GearVRBI;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string GoogleBI;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public string AndroidBI;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string DaydreamBI;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public string WaveBI;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string PCBI;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public string OculusBI;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string QuestBI;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool m_testLevel;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int[] m_testLevelNumber;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private bool m_testOffice;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private OFFICE_TYPE m_testOfficeNumber;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_skipLoadingRoom;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	private bool m_dontAllowGameSave;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	[SerializeField]
	private bool m_hasAllVehicles;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	[SerializeField]
	private bool m_clearPlayerPrefs;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool m_deleteSavedGame;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool m_hideCusorInEditor;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[SerializeField]
	private bool m_canChooseAnyJob;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[SerializeField]
	private bool m_enablePlayerDataCheats;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private int m_playerMoneyCheat;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool m_showFPS;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private Text m_fpsText;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Canvas m_debugCanvas;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private GameObject m_eventSystem;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_fpsFramesCount;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float m_fpsFramesTime;

	[Token(Token = "0x400103F")]
	private const float m_fpsUpdateInterval = 0.5f;

	[Token(Token = "0x4001040")]
	private const int m_fpsTarget = 60;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] m_medalPayment;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private List<LevelTypeUnlockCondition> m_levelUnlockCondition;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private GameObject[] m_vehiclePrefabs;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject[] m_staticVehiclePrefabs;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static LevelData s_lastLevelData;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LevelManager.JOB_COMPLETE_STATE s_lastJobCompleteState;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static LEVEL_TYPE s_lastLevelType;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LEVEL_TYPE s_lastLicenseSubtype;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Camera CameraObject;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform CameraTransform;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Transform CameraRoot;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform CameraMirror;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Transform CameraOrigin;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform VehicleTransform;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public AlwaysLoadedCameraHandeler AlwaysLoadedCameraHandeler;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AlwaysLoadedManager AlwaysLoadedManager;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Action<ControllerAircraft> ControllerAircraftLoaded;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public CrashManager CrashManager;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameStateManager GameStateManager;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public InputManager InputManager;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LanguageManager LanguageManager;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public LevelLoader LevelLoader;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LevelManager LevelManager;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public TrackedMirroredObjects TrackedObjects;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public OfficeController OfficeController;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public ScreenFader ScreenFader;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SiteBlocker SiteBlocker;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public StreamManager StreamManager;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public VehicleSetup VehicleSetup;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int moneyJustWon;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public PAUSE_STATE currentPausedState;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool TriggerPauseButton;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string currentPauseBoxScene;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public string currentAlwaysLoadedScene;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public CameraState currentCameraState;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Camera cameraMain;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject cameraObject;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public GameObject cameraPosition;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject cameraParent;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public GameObject vehicleObject;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject vehiclePosition;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public GameObject vehicleParent;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject cameraPositionVehicle;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private GameObject cameraPositionOffice;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject cameraPositionPauseBox;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public GameObject SunLight;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject pauseBoxAssembly;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool hideCusorInEditor;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool dontAllowGameSave;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	public bool debugPrintFPS;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
	public bool deleteSavedGame;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool disableAlwaysLoaded;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool nukePlayerPrefs;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	public bool skipLoadingRoom;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
	public bool forceNewGameOnLevelOver;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool newGameLoadsTestLevel;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	public bool testLevel;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float deltaTime;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float[] lastFrames;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int showFPSEveryNthFrame;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int frameCount;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int s_lastRunwayOffice;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int s_lastRunwayIsland;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int s_previousRunwayOffice;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int s_previousRunwayIsland;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AudioMixer m_masterMixer;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[SerializeField]
	private PlatformVolumePair[] m_platformVolumePairs;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private InteractableInput m_recenterInteractableInput;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[SerializeField]
	private InteractableInput m_recenterTooInteractableInput;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private InteractableInput m_backInteractableInput;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool m_isGamePaused;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[SerializeField]
	private Transform m_pauseScreen;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private Transform m_pauseScreenCenterRef;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[SerializeField]
	private float m_pauseScreenDistanceFromCam;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool m_isRecentering;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[SerializeField]
	private float m_recenterTime;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float s_minRecenterDelay;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float m_recenterDelayTime;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[SerializeField]
	private int m_fastCpuLevel;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private int m_fastGpuLevel;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[SerializeField]
	private float m_fastGearVRRenderScale;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private float m_fastDaydreamRenderScale;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[SerializeField]
	private int m_slowCpuLevel;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private int m_slowGpuLevel;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[SerializeField]
	private float m_slowGearVRRenderScale;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private float m_slowDaydreamRenderScale;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[SerializeField]
	private float m_slowMicrosoftMRRenderScale;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private float m_fastMicrosoftMRRenderScale;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public SAMSUNGMODEL SamsungModel;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public DAYDREAMMODEL DaydreamModel;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float startFPS;

	[Token(Token = "0x400109F")]
	public const string SAVE_GAME_NAME = "SaveGameName";

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool m_playerDataIsLoaded;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private PlayerData m_playerData;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string defaultLocalFileName;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[SerializeField]
	private Material m_defaultSkyboxMaterial;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject CrashParticles;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[SerializeField]
	private bool m_enableTutorialDebug;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private int m_currentTutorialProgress;

	[Token(Token = "0x17000321")]
	public bool IsPirate
	{
		[Token(Token = "0x6001521")]
		[Address(RVA = "0xBBD1A0", Offset = "0xBBD1A0", VA = "0xBBD1A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000322")]
	public bool TestLevel
	{
		[Token(Token = "0x6001522")]
		[Address(RVA = "0xBBD1A8", Offset = "0xBBD1A8", VA = "0xBBD1A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000323")]
	public int[] TestLevelNumber
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0xBBD1B0", Offset = "0xBBD1B0", VA = "0xBBD1B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000324")]
	public bool TestOffice
	{
		[Token(Token = "0x6001524")]
		[Address(RVA = "0xBBD1B8", Offset = "0xBBD1B8", VA = "0xBBD1B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000325")]
	public OFFICE_TYPE TestOfficeNumber
	{
		[Token(Token = "0x6001525")]
		[Address(RVA = "0xBBD1C0", Offset = "0xBBD1C0", VA = "0xBBD1C0")]
		get
		{
			return default(OFFICE_TYPE);
		}
	}

	[Token(Token = "0x17000326")]
	public bool SkipLoadingRoom
	{
		[Token(Token = "0x6001526")]
		[Address(RVA = "0xBBD1C8", Offset = "0xBBD1C8", VA = "0xBBD1C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000327")]
	public bool CanChooseAnyJob
	{
		[Token(Token = "0x6001527")]
		[Address(RVA = "0xBBD1D0", Offset = "0xBBD1D0", VA = "0xBBD1D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000328")]
	public bool MoneyCheatEnabled
	{
		[Token(Token = "0x6001528")]
		[Address(RVA = "0xBBD1D8", Offset = "0xBBD1D8", VA = "0xBBD1D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000329")]
	public static float[] MedalPayment
	{
		[Token(Token = "0x6001529")]
		[Address(RVA = "0xBBD1FC", Offset = "0xBBD1FC", VA = "0xBBD1FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032A")]
	public GameObject[] VehiclePrefabs
	{
		[Token(Token = "0x6001530")]
		[Address(RVA = "0xBBD99C", Offset = "0xBBD99C", VA = "0xBBD99C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032B")]
	public GameObject[] StaticVehiclePrefabs
	{
		[Token(Token = "0x6001531")]
		[Address(RVA = "0xBBD9A4", Offset = "0xBBD9A4", VA = "0xBBD9A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032C")]
	public LevelData LastLevelData
	{
		[Token(Token = "0x6001532")]
		[Address(RVA = "0xBBD9AC", Offset = "0xBBD9AC", VA = "0xBBD9AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032D")]
	public LevelManager.JOB_COMPLETE_STATE LastJobCompleteState
	{
		[Token(Token = "0x6001534")]
		[Address(RVA = "0xBBDAF4", Offset = "0xBBDAF4", VA = "0xBBDAF4")]
		get
		{
			return default(LevelManager.JOB_COMPLETE_STATE);
		}
	}

	[Token(Token = "0x1700032E")]
	public LEVEL_TYPE LastLevelType
	{
		[Token(Token = "0x6001535")]
		[Address(RVA = "0xBBDB80", Offset = "0xBBDB80", VA = "0xBBDB80")]
		get
		{
			return default(LEVEL_TYPE);
		}
	}

	[Token(Token = "0x1700032F")]
	public LEVEL_TYPE LastLicenseSubtype
	{
		[Token(Token = "0x6001536")]
		[Address(RVA = "0xBBDC0C", Offset = "0xBBDC0C", VA = "0xBBDC0C")]
		get
		{
			return default(LEVEL_TYPE);
		}
	}

	[Token(Token = "0x17000330")]
	public ControllerAircraft ControllerAircraft
	{
		[Token(Token = "0x6001537")]
		[Address(RVA = "0xBABB0C", Offset = "0xBABB0C", VA = "0xBABB0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001538")]
		[Address(RVA = "0xBBDC98", Offset = "0xBBDC98", VA = "0xBBDC98")]
		set
		{
		}
	}

	[Token(Token = "0x17000331")]
	public bool isControllerGamepad
	{
		[Token(Token = "0x6001539")]
		[Address(RVA = "0xBBDD58", Offset = "0xBBDD58", VA = "0xBBDD58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000332")]
	public bool isControllerGrabEnabled
	{
		[Token(Token = "0x600153A")]
		[Address(RVA = "0xBB3590", Offset = "0xBB3590", VA = "0xBB3590")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000333")]
	public static int LastRunwayOffice
	{
		[Token(Token = "0x600153C")]
		[Address(RVA = "0xBBDD7C", Offset = "0xBBDD7C", VA = "0xBBDD7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000334")]
	public static int LastRunwayIsland
	{
		[Token(Token = "0x600153E")]
		[Address(RVA = "0xBBDF70", Offset = "0xBBDF70", VA = "0xBBDF70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000335")]
	public static int PreviousRunwayOffice
	{
		[Token(Token = "0x6001540")]
		[Address(RVA = "0xBBE164", Offset = "0xBBE164", VA = "0xBBE164")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000336")]
	public static int PreviousRunwayIsland
	{
		[Token(Token = "0x6001542")]
		[Address(RVA = "0xBBE280", Offset = "0xBBE280", VA = "0xBBE280")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000337")]
	public bool IsRecentering
	{
		[Token(Token = "0x6001572")]
		[Address(RVA = "0xBC435C", Offset = "0xBC435C", VA = "0xBC435C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000338")]
	public bool PlayerDataIsLoaded
	{
		[Token(Token = "0x600157C")]
		[Address(RVA = "0xBC45C8", Offset = "0xBC45C8", VA = "0xBC45C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000339")]
	public PlayerData CurrentPlayerData
	{
		[Token(Token = "0x600157D")]
		[Address(RVA = "0xBB39F4", Offset = "0xBB39F4", VA = "0xBB39F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600157E")]
		[Address(RVA = "0xBC45D0", Offset = "0xBC45D0", VA = "0xBC45D0")]
		set
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event PauseDelegate OnGamePaused
	{
		[Token(Token = "0x6001567")]
		[Address(RVA = "0xBC3BDC", Offset = "0xBC3BDC", VA = "0xBC3BDC")]
		add
		{
		}
		[Token(Token = "0x6001568")]
		[Address(RVA = "0xBC3CE8", Offset = "0xBC3CE8", VA = "0xBC3CE8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event CameraStateChangeHandler OnCameraStateChange
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0xBC5AF4", Offset = "0xBC5AF4", VA = "0xBC5AF4")]
		add
		{
		}
		[Token(Token = "0x6001594")]
		[Address(RVA = "0xBC5C00", Offset = "0xBC5C00", VA = "0xBC5C00")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event CameraMovedHandler CameraMoved
	{
		[Token(Token = "0x6001595")]
		[Address(RVA = "0xBC5D0C", Offset = "0xBC5D0C", VA = "0xBC5D0C")]
		add
		{
		}
		[Token(Token = "0x6001596")]
		[Address(RVA = "0xBC5E18", Offset = "0xBC5E18", VA = "0xBC5E18")]
		remove
		{
		}
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xBBCA80", Offset = "0xBBCA80", VA = "0xBBCA80")]
	public GameManager()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xBBD288", Offset = "0xBBD288", VA = "0xBBD288")]
	public LevelTypeUnlockCondition GetLevelTypeUnlockCondition(LEVEL_TYPE levelType)
	{
		return null;
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xBBD378", Offset = "0xBBD378", VA = "0xBBD378")]
	public bool IsUsingAprropriateControlType(LEVEL_TYPE levelType)
	{
		return default(bool);
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xBBD3BC", Offset = "0xBBD3BC", VA = "0xBBD3BC")]
	public bool IsOfficeUnlocked(OFFICE_TYPE officeType)
	{
		return default(bool);
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xBBD3F0", Offset = "0xBBD3F0", VA = "0xBBD3F0")]
	public void UnlockOffice(OFFICE_TYPE officeType)
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xBBD8F0", Offset = "0xBBD8F0", VA = "0xBBD8F0")]
	public bool IsVehicleUnlocked(VEHICLE_TYPE vehicleType)
	{
		return default(bool);
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xBBD924", Offset = "0xBBD924", VA = "0xBBD924")]
	public void UnlockVehicle(VEHICLE_TYPE vehicleType)
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xBBDA38", Offset = "0xBBDA38", VA = "0xBBDA38")]
	public static void SetLastLevelData(LevelData newLevelData, LevelManager.JOB_COMPLETE_STATE newJobCompleteState, LEVEL_TYPE newLevelType, LEVEL_TYPE newLicenseSubtype)
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0xBAB8F4", Offset = "0xBAB8F4", VA = "0xBAB8F4")]
	public static GameManager Instance()
	{
		return null;
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xBBDE08", Offset = "0xBBDE08", VA = "0xBBDE08")]
	public static void SetLastRunwayOffice(int s)
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xBBDFFC", Offset = "0xBBDFFC", VA = "0xBBDFFC")]
	public static void SetLastRunwayIsland(int s)
	{
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xBBE1F0", Offset = "0xBBE1F0", VA = "0xBBE1F0")]
	public static void SetPreviousRunwayOffice(int s)
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xBBE30C", Offset = "0xBBE30C", VA = "0xBBE30C")]
	public static void SetPreviousRunwayIsland(int s)
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0xBBE39C", Offset = "0xBBE39C", VA = "0xBBE39C")]
	public static void ResetLastRunwayIslandOffice()
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0xBBE47C", Offset = "0xBBE47C", VA = "0xBBE47C")]
	private void _SetupMixerByPlatform()
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0xBBE6BC", Offset = "0xBBE6BC", VA = "0xBBE6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0xBBFE90", Offset = "0xBBFE90", VA = "0xBBFE90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0xBBFE94", Offset = "0xBBFE94", VA = "0xBBFE94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0xBBFE98", Offset = "0xBBFE98", VA = "0xBBFE98")]
	private void Start()
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xBC0AB0", Offset = "0xBC0AB0", VA = "0xBC0AB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xBC07D4", Offset = "0xBC07D4", VA = "0xBC07D4")]
	private void EnableFoveatedRendering()
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xBC0BB0", Offset = "0xBC0BB0", VA = "0xBC0BB0")]
	private void MountToUnpause()
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0xBC0BF8", Offset = "0xBC0BF8", VA = "0xBC0BF8")]
	private void UnmountToPause()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xBC0C40", Offset = "0xBC0C40", VA = "0xBC0C40")]
	public void ResetSky()
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xBC0C48", Offset = "0xBC0C48", VA = "0xBC0C48")]
	[DebuggerHidden]
	public IEnumerator WaitToResetSky()
	{
		return null;
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xBC0CD4", Offset = "0xBC0CD4", VA = "0xBC0CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xBBE9F8", Offset = "0xBBE9F8", VA = "0xBBE9F8")]
	private void _DetectPlatform()
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xBBEFF4", Offset = "0xBBEFF4", VA = "0xBBEFF4")]
	private void _InitCamera()
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xBBFC5C", Offset = "0xBBFC5C", VA = "0xBBFC5C")]
	private void _GetSavedGame()
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xBC06CC", Offset = "0xBC06CC", VA = "0xBC06CC")]
	[DebuggerHidden]
	private IEnumerator _WaitForController()
	{
		return null;
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xBC1730", Offset = "0xBC1730", VA = "0xBC1730")]
	public void RestartGameNoUserLoggedIn()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0xBC1764", Offset = "0xBC1764", VA = "0xBC1764")]
	private void _DetectController()
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xBC2944", Offset = "0xBC2944", VA = "0xBC2944")]
	[DebuggerHidden]
	private IEnumerator _WaitForGVRController()
	{
		return null;
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xBC29D0", Offset = "0xBC29D0", VA = "0xBC29D0")]
	private CONTROLLER _GetFoundController()
	{
		return default(CONTROLLER);
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0xBC0750", Offset = "0xBC0750", VA = "0xBC0750")]
	[DebuggerHidden]
	private IEnumerator _WaitForPlayerDataToLoad()
	{
		return null;
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0xBC3160", Offset = "0xBC3160", VA = "0xBC3160")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelsToLoad()
	{
		return null;
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0xBC31EC", Offset = "0xBC31EC", VA = "0xBC31EC")]
	private void _CheckRecenterInput()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0xBC34C0", Offset = "0xBC34C0", VA = "0xBC34C0")]
	private void _CheckBackInput()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xBC15B0", Offset = "0xBC15B0", VA = "0xBC15B0")]
	private void _CheckPauseInput()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xBC0C1C", Offset = "0xBC0C1C", VA = "0xBC0C1C")]
	private void _StartPauseSequence()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xBC3648", Offset = "0xBC3648", VA = "0xBC3648")]
	[DebuggerHidden]
	private IEnumerator _WaitForIsLoadingPause()
	{
		return null;
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xBC36D4", Offset = "0xBC36D4", VA = "0xBC36D4")]
	private void _PauseGame()
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xBC37EC", Offset = "0xBC37EC", VA = "0xBC37EC")]
	[DebuggerHidden]
	private IEnumerator _WaitForGameStateManagerPause()
	{
		return null;
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xBC0BD4", Offset = "0xBC0BD4", VA = "0xBC0BD4")]
	private void _StartUnpauseSequence()
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0xBC3878", Offset = "0xBC3878", VA = "0xBC3878")]
	[DebuggerHidden]
	private IEnumerator _WaitForIsLoadingUnpause()
	{
		return null;
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0xBC3904", Offset = "0xBC3904", VA = "0xBC3904")]
	private void _UnpauseGame()
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0xBC3A1C", Offset = "0xBC3A1C", VA = "0xBC3A1C")]
	[DebuggerHidden]
	private IEnumerator _WaitForGameStateManagerUnpause()
	{
		return null;
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xBC16D0", Offset = "0xBC16D0", VA = "0xBC16D0")]
	private void _UpdatePause()
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0xBC0954", Offset = "0xBC0954", VA = "0xBC0954")]
	private void _CreatePauseScreenCenterRef()
	{
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0xBC3DF4", Offset = "0xBC3DF4", VA = "0xBC3DF4")]
	private void _ActuallyCreatePauseScreenCenterRef()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0xBC3EC8", Offset = "0xBC3EC8", VA = "0xBC3EC8")]
	private void _ShowPauseMenu(bool isShowing)
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xBC3AA8", Offset = "0xBC3AA8", VA = "0xBC3AA8")]
	private void _UpdatePauseMenu()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xBC0958", Offset = "0xBC0958", VA = "0xBC0958")]
	private void _SubscribeGameStateChangePauseMenu()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xBC4234", Offset = "0xBC4234", VA = "0xBC4234")]
	private void _OnGameStateChange(GAME_STATE gameState)
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xBAD36C", Offset = "0xBAD36C", VA = "0xBAD36C")]
	public void ExitApplication(bool forceExit = false)
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xBC4244", Offset = "0xBC4244", VA = "0xBC4244")]
	[DebuggerHidden]
	private IEnumerator QuitApplication()
	{
		return null;
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xBC42D0", Offset = "0xBC42D0", VA = "0xBC42D0")]
	[DebuggerHidden]
	private IEnumerator _WaitForScreenFaderDownOffice()
	{
		return null;
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xBC343C", Offset = "0xBC343C", VA = "0xBC343C")]
	[DebuggerHidden]
	private IEnumerator _VrRecenter()
	{
		return null;
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xBC322C", Offset = "0xBC322C", VA = "0xBC322C")]
	private bool _IsRecenterCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xBC436C", Offset = "0xBC436C", VA = "0xBC436C")]
	private bool _CheckRecenterDelay()
	{
		return default(bool);
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xBC4440", Offset = "0xBC4440", VA = "0xBC4440")]
	public void SetRecenterDelay(float delay)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xBC4470", Offset = "0xBC4470", VA = "0xBC4470")]
	private bool _IsSlowDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xBBEC90", Offset = "0xBBEC90", VA = "0xBBEC90")]
	private SAMSUNGMODEL _GetSamsungDeviceType()
	{
		return default(SAMSUNGMODEL);
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xBBEC88", Offset = "0xBBEC88", VA = "0xBBEC88")]
	private DAYDREAMMODEL _GetDaydreamDeviceType()
	{
		return default(DAYDREAMMODEL);
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xBC4480", Offset = "0xBC4480", VA = "0xBC4480")]
	public void SetPerformanceLevel(bool isModePerformant)
	{
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0xBC0D18", Offset = "0xBC0D18", VA = "0xBC0D18")]
	private void _UpdateFPS()
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xBBD468", Offset = "0xBBD468", VA = "0xBBD468")]
	public void SaveGame(string fileName, [Optional] PlayerData data, bool isNewSave = false)
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xBC45D8", Offset = "0xBC45D8", VA = "0xBC45D8")]
	private PlayerData LoadLocalFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0xBC4EFC", Offset = "0xBC4EFC", VA = "0xBC4EFC")]
	private void onLoadOnlineComplete(string jsonData)
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0xBC4FA4", Offset = "0xBC4FA4", VA = "0xBC4FA4")]
	private void onLoadOnlineFailed(string error)
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0xBC1704", Offset = "0xBC1704", VA = "0xBC1704")]
	public void LoadGame(string fileName)
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0xBC4FA8", Offset = "0xBC4FA8", VA = "0xBC4FA8")]
	private void ProcessLoadFile(PlayerData data)
	{
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0xBC534C", Offset = "0xBC534C", VA = "0xBC534C")]
	private void _ApplyPlayerDataCheats()
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0xBC5388", Offset = "0xBC5388", VA = "0xBC5388")]
	public PlayerData EraseGame(string gameName)
	{
		return null;
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0xBC54F4", Offset = "0xBC54F4", VA = "0xBC54F4")]
	public static LevelData GetLevelData(PlayerData playerdata, int office, int vehicle, int level, int job)
	{
		return null;
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xBC554C", Offset = "0xBC554C", VA = "0xBC554C")]
	public static void SetLevelData(PlayerData playerdata, LevelData levelData, int office, int vehicle, int level, int job)
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xBC55AC", Offset = "0xBC55AC", VA = "0xBC55AC")]
	public static void ClearLastLevelData()
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xBC563C", Offset = "0xBC563C", VA = "0xBC563C")]
	public void ReplacePlayerData(PlayerData playerData)
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xBC5644", Offset = "0xBC5644", VA = "0xBC5644")]
	public void NotNewGame()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xBC5678", Offset = "0xBC5678", VA = "0xBC5678")]
	public bool IsUltralightTutorialFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xBC5748", Offset = "0xBC5748", VA = "0xBC5748")]
	public bool IsGliderTutorialFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xBC5818", Offset = "0xBC5818", VA = "0xBC5818")]
	public bool IsSportTutorialFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xBC58E8", Offset = "0xBC58E8", VA = "0xBC58E8")]
	public bool IsRacerTutorialFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xBC0C44", Offset = "0xBC0C44", VA = "0xBC0C44")]
	public void ResetSkybox()
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0xBC5AD8", Offset = "0xBC5AD8", VA = "0xBC5AD8")]
	private void _GetDefaultSkybox()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xBC59B8", Offset = "0xBC59B8", VA = "0xBC59B8")]
	private void _ResetSkybox()
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xBB101C", Offset = "0xBB101C", VA = "0xBB101C")]
	public Transform GetCameraTransform()
	{
		return null;
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0xBC03F4", Offset = "0xBC03F4", VA = "0xBC03F4")]
	private void _SetTutorialLevelData()
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xBC5F24", Offset = "0xBC5F24", VA = "0xBC5F24")]
	[DebuggerHidden]
	private IEnumerator DisableAlwaysLoaded()
	{
		return null;
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xBC0948", Offset = "0xBC0948", VA = "0xBC0948")]
	private void _StartDaydream()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xBC16D4", Offset = "0xBC16D4", VA = "0xBC16D4")]
	private void _UpdateDaydream()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xBC60A4", Offset = "0xBC60A4", VA = "0xBC60A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181848", Offset = "0x181848")]
	private void <Awake>m__0(Message msg)
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xBC621C", Offset = "0xBC621C", VA = "0xBC621C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181858", Offset = "0x181858")]
	private void <_InitCamera>m__1(Camera cam)
	{
	}
}
[Token(Token = "0x2000315")]
public enum GAME_STATE
{
	[Token(Token = "0x40010CB")]
	None = -1,
	[Token(Token = "0x40010CC")]
	Init,
	[Token(Token = "0x40010CD")]
	Loading,
	[Token(Token = "0x40010CE")]
	Loaded,
	[Token(Token = "0x40010CF")]
	LoadingDeck,
	[Token(Token = "0x40010D0")]
	Office,
	[Token(Token = "0x40010D1")]
	Island,
	[Token(Token = "0x40010D2")]
	Paused,
	[Token(Token = "0x40010D3")]
	Crashing,
	[Token(Token = "0x40010D4")]
	Previous
}
[Token(Token = "0x2000316")]
public enum PAUSE_STATE
{
	[Token(Token = "0x40010D6")]
	NotAllowed,
	[Token(Token = "0x40010D7")]
	Unpausing,
	[Token(Token = "0x40010D8")]
	Unpaused,
	[Token(Token = "0x40010D9")]
	Pausing,
	[Token(Token = "0x40010DA")]
	Paused
}
[Token(Token = "0x2000317")]
public enum PLATFORM
{
	[Token(Token = "0x40010DC")]
	Oculus,
	[Token(Token = "0x40010DD")]
	GearVR,
	[Token(Token = "0x40010DE")]
	MsMixedReality,
	[Token(Token = "0x40010DF")]
	Vive,
	[Token(Token = "0x40010E0")]
	Google,
	[Token(Token = "0x40010E1")]
	PC,
	[Token(Token = "0x40010E2")]
	Android,
	[Token(Token = "0x40010E3")]
	Daydream,
	[Token(Token = "0x40010E4")]
	Auto,
	[Token(Token = "0x40010E5")]
	Wave
}
[Token(Token = "0x2000318")]
public enum CONTROLLER
{
	[Token(Token = "0x40010E7")]
	Xbox,
	[Token(Token = "0x40010E8")]
	XbOne,
	[Token(Token = "0x40010E9")]
	MsTouch,
	[Token(Token = "0x40010EA")]
	Touch,
	[Token(Token = "0x40010EB")]
	GearVR,
	[Token(Token = "0x40010EC")]
	Daydream,
	[Token(Token = "0x40010ED")]
	PS4,
	[Token(Token = "0x40010EE")]
	Move,
	[Token(Token = "0x40010EF")]
	Desktop,
	[Token(Token = "0x40010F0")]
	Vive,
	[Token(Token = "0x40010F1")]
	Android,
	[Token(Token = "0x40010F2")]
	Cardboard,
	[Token(Token = "0x40010F3")]
	Auto,
	[Token(Token = "0x40010F4")]
	OculusGo,
	[Token(Token = "0x40010F5")]
	Wave
}
[Token(Token = "0x2000319")]
public enum ISLAND_TYPE
{
	[Token(Token = "0x40010F7")]
	None = -1,
	[Token(Token = "0x40010F8")]
	Island_01,
	[Token(Token = "0x40010F9")]
	Island_02,
	[Token(Token = "0x40010FA")]
	Island_03,
	[Token(Token = "0x40010FB")]
	Island_04
}
[Token(Token = "0x200031A")]
public enum OFFICE_TYPE
{
	[Token(Token = "0x40010FD")]
	None = -1,
	[Token(Token = "0x40010FE")]
	Office_01A,
	[Token(Token = "0x40010FF")]
	Office_01B,
	[Token(Token = "0x4001100")]
	Office_02A,
	[Token(Token = "0x4001101")]
	Office_02B,
	[Token(Token = "0x4001102")]
	Office_03A,
	[Token(Token = "0x4001103")]
	Office_03B,
	[Token(Token = "0x4001104")]
	Office_04A,
	[Token(Token = "0x4001105")]
	Office_04B
}
[Token(Token = "0x200031B")]
public enum VEHICLE_TYPE
{
	[Token(Token = "0x4001107")]
	None = -1,
	[Token(Token = "0x4001108")]
	Ultralight,
	[Token(Token = "0x4001109")]
	Glider,
	[Token(Token = "0x400110A")]
	Sport,
	[Token(Token = "0x400110B")]
	Racer
}
[Token(Token = "0x200031C")]
public enum LEVEL_TYPE
{
	[Token(Token = "0x400110D")]
	Office = -1,
	[Token(Token = "0x400110E")]
	License,
	[Token(Token = "0x400110F")]
	RingRush,
	[Token(Token = "0x4001110")]
	Delivery,
	[Token(Token = "0x4001111")]
	Emergency,
	[Token(Token = "0x4001112")]
	RingCourse,
	[Token(Token = "0x4001113")]
	BalloonRush,
	[Token(Token = "0x4001114")]
	PhotoOp,
	[Token(Token = "0x4001115")]
	BalloonCourse,
	[Token(Token = "0x4001116")]
	Race,
	[Token(Token = "0x4001117")]
	FreeFlight
}
[Token(Token = "0x200031D")]
public enum DIFFICULTY
{
	[Token(Token = "0x4001119")]
	Random = -1,
	[Token(Token = "0x400111A")]
	Easy,
	[Token(Token = "0x400111B")]
	Medium,
	[Token(Token = "0x400111C")]
	Hard
}
[Token(Token = "0x200031E")]
public enum MEDAL_TYPE
{
	[Token(Token = "0x400111E")]
	None = -1,
	[Token(Token = "0x400111F")]
	Gold,
	[Token(Token = "0x4001120")]
	Silver,
	[Token(Token = "0x4001121")]
	Bronze
}
[Token(Token = "0x200031F")]
public enum FLIGHT_CONTROL_TYPE
{
	[Token(Token = "0x4001123")]
	None,
	[Token(Token = "0x4001124")]
	Arcade,
	[Token(Token = "0x4001125")]
	Simulation
}
[Token(Token = "0x2000320")]
public class GameStateManager : MonoBehaviour
{
	[Token(Token = "0x2000321")]
	public enum TRANSITION_TYPE
	{
		[Token(Token = "0x4001133")]
		None = -1,
		[Token(Token = "0x4001134")]
		Fader,
		[Token(Token = "0x4001135")]
		Visor,
		[Token(Token = "0x4001136")]
		Default
	}

	[Token(Token = "0x2000322")]
	public delegate void OnSwitchScreenEvent(GAME_STATE gameState);

	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E54", Offset = "0x173E54")]
	private sealed class <_WaitForFaderDown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GAME_STATE gameState;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TransitionType transitionType;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameStateManager $this;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000535")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600260D")]
			[Address(RVA = "0xBCB51C", Offset = "0xBCB51C", VA = "0xBCB51C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000536")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600260E")]
			[Address(RVA = "0xBCB524", Offset = "0xBCB524", VA = "0xBCB524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xBCA000", Offset = "0xBCA000", VA = "0xBCA000")]
		[DebuggerHidden]
		public <_WaitForFaderDown>c__Iterator0()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xBCB388", Offset = "0xBCB388", VA = "0xBCB388", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xBCB52C", Offset = "0xBCB52C", VA = "0xBCB52C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xBCB540", Offset = "0xBCB540", VA = "0xBCB540", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E64", Offset = "0x173E64")]
	private sealed class <_SetGameState>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GAME_STATE gameState;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TransitionType transitionType;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool <enabled>__0;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal GameStateManager $this;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x17000537")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xBCB2DC", Offset = "0xBCB2DC", VA = "0xBCB2DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000538")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xBCB2E4", Offset = "0xBCB2E4", VA = "0xBCB2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xBCA458", Offset = "0xBCA458", VA = "0xBCA458")]
		[DebuggerHidden]
		public <_SetGameState>c__Iterator1()
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xBCAB0C", Offset = "0xBCAB0C", VA = "0xBCAB0C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xBCB2EC", Offset = "0xBCB2EC", VA = "0xBCB2EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xBCB300", Offset = "0xBCB300", VA = "0xBCB300", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Action<GAME_STATE, GAME_STATE> GameStateWillChange;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<GAME_STATE> GameStateChanged;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GAME_STATE m_gameState;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GAME_STATE m_previousGameState;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TRANSITION_TYPE CurrentTransitionType;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public LoadedOfficeManager LoadedOfficeManager;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public LoadedIslandManager LoadedIslandManager;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LoadedLevelManager LoadedLevelManager;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool WillChangeOffice;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_isChanging;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static GameManager m_gameManager;

	[Token(Token = "0x1700033B")]
	public GAME_STATE GameState
	{
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xBAC6A0", Offset = "0xBAC6A0", VA = "0xBAC6A0")]
		get
		{
			return default(GAME_STATE);
		}
	}

	[Token(Token = "0x1700033C")]
	public static bool IsChanging
	{
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xBC9B58", Offset = "0xBC9B58", VA = "0xBC9B58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000030")]
	public event OnSwitchScreenEvent SwitchScreenEvent
	{
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xBCA008", Offset = "0xBCA008", VA = "0xBCA008")]
		add
		{
		}
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xBCA114", Offset = "0xBCA114", VA = "0xBCA114")]
		remove
		{
		}
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xBC9B48", Offset = "0xBC9B48", VA = "0xBC9B48")]
	public GameStateManager()
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xBC9BBC", Offset = "0xBC9BBC", VA = "0xBC9BBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xBAC6A8", Offset = "0xBAC6A8", VA = "0xBAC6A8")]
	public void ChangeGameState(GAME_STATE gameState, [Optional] TransitionType transitionType)
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xBC9DE4", Offset = "0xBC9DE4", VA = "0xBC9DE4")]
	private void _TransitionScreenFaderDown(GAME_STATE gameState, [Optional] TransitionType transitionType)
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xBC9C74", Offset = "0xBC9C74", VA = "0xBC9C74")]
	[DebuggerHidden]
	private IEnumerator _WaitForFaderDown(GAME_STATE gameState, [Optional] TransitionType transitionType)
	{
		return null;
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xBCA220", Offset = "0xBCA220", VA = "0xBCA220")]
	private void _OnSwitchScreen(GAME_STATE gameState)
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xBC9D2C", Offset = "0xBC9D2C", VA = "0xBC9D2C")]
	[DebuggerHidden]
	private IEnumerator _SetGameState(GAME_STATE gameState, [Optional] TransitionType transitionType)
	{
		return null;
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xBCA460", Offset = "0xBCA460", VA = "0xBCA460")]
	private TransitionType _FinalizeGameState(GAME_STATE gameState, [Optional] TransitionType transitionType)
	{
		return null;
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xBCA9E8", Offset = "0xBCA9E8", VA = "0xBCA9E8")]
	private void _TransitionScreenFaderUp(TransitionType transitionType)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xBC9F10", Offset = "0xBC9F10", VA = "0xBC9F10")]
	private TransitionType _GetTransition(TransitionType transitionType)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000323")]
public class TransitionType
{
	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameStateManager.TRANSITION_TYPE TransitionOut;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float OutSpeed;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameStateManager.TRANSITION_TYPE TransitionIn;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float InSpeed;

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x37F900", Offset = "0x37F900", VA = "0x37F900")]
	public TransitionType(GameStateManager.TRANSITION_TYPE transitionTypeOut, float outSpeed, GameStateManager.TRANSITION_TYPE transitionTypeIn, float inSpeed)
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x37F958", Offset = "0x37F958", VA = "0x37F958")]
	public TransitionType(GameStateManager.TRANSITION_TYPE transitionType, float outSpeed, float inSpeed)
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x37F9AC", Offset = "0x37F9AC", VA = "0x37F9AC")]
	public TransitionType()
	{
	}
}
[Token(Token = "0x2000324")]
public class IslandController : MonoBehaviour
{
	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x5219DC", Offset = "0x5219DC", VA = "0x5219DC")]
	public IslandController()
	{
	}
}
[Token(Token = "0x2000325")]
public class IslandManager : MonoBehaviour
{
	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IslandManager s_instance;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private List<TriggerRunway> m_runways;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private BoxCollider m_bounds;

	[Token(Token = "0x1700033D")]
	public static IslandManager Instance
	{
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x5219EC", Offset = "0x5219EC", VA = "0x5219EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033E")]
	public int RunwayCount
	{
		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x521D08", Offset = "0x521D08", VA = "0x521D08")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700033F")]
	public BoxCollider Bounds
	{
		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x521D80", Offset = "0x521D80", VA = "0x521D80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x5219E4", Offset = "0x5219E4", VA = "0x5219E4")]
	public IslandManager()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x521A78", Offset = "0x521A78", VA = "0x521A78")]
	private void Start()
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x521B18", Offset = "0x521B18", VA = "0x521B18")]
	private void _FindRunways()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x521C4C", Offset = "0x521C4C", VA = "0x521C4C")]
	public TriggerRunway GetRunway(int index)
	{
		return null;
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x521BE4", Offset = "0x521BE4", VA = "0x521BE4")]
	private void _StartGetBounds()
	{
	}
}
[Token(Token = "0x2000326")]
public class LevelManager : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	private enum DELIVERY_STATE
	{
		[Token(Token = "0x40011BA")]
		None,
		[Token(Token = "0x40011BB")]
		Flying,
		[Token(Token = "0x40011BC")]
		Landed,
		[Token(Token = "0x40011BD")]
		Finished
	}

	[Token(Token = "0x2000328")]
	public delegate void ShowGameplayObjectsEventHandler(bool isActive);

	[Token(Token = "0x2000329")]
	public delegate void NotifyCallback(ControllerTablet.NoticeType noticeType, int score);

	[Token(Token = "0x200032A")]
	public enum JOB_COMPLETE_STATE
	{
		[Token(Token = "0x40011BF")]
		Abandon,
		[Token(Token = "0x40011C0")]
		Restart,
		[Token(Token = "0x40011C1")]
		Default,
		[Token(Token = "0x40011C2")]
		Win,
		[Token(Token = "0x40011C3")]
		Lose,
		[Token(Token = "0x40011C4")]
		Crashed,
		[Token(Token = "0x40011C5")]
		Timeout,
		[Token(Token = "0x40011C6")]
		NoLanding,
		[Token(Token = "0x40011C7")]
		Early,
		[Token(Token = "0x40011C8")]
		PackageLost,
		[Token(Token = "0x40011C9")]
		MissedBullsEye,
		[Token(Token = "0x40011CA")]
		BounceLanding,
		[Token(Token = "0x40011CB")]
		NotEnoughPoints,
		[Token(Token = "0x40011CC")]
		RaceLost
	}

	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E74", Offset = "0x173E74")]
	private sealed class <_WaitForVisorUp>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LevelManager $this;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000539")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002619")]
			[Address(RVA = "0x34F10C", Offset = "0x34F10C", VA = "0x34F10C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600261A")]
			[Address(RVA = "0x34F114", Offset = "0x34F114", VA = "0x34F114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x34EEE4", Offset = "0x34EEE4", VA = "0x34EEE4")]
		[DebuggerHidden]
		public <_WaitForVisorUp>c__Iterator0()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x34EEEC", Offset = "0x34EEEC", VA = "0x34EEEC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x34F11C", Offset = "0x34F11C", VA = "0x34F11C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x34F130", Offset = "0x34F130", VA = "0x34F130", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E84", Offset = "0x173E84")]
	private sealed class <_WaitForTakeOffMsg>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DialogManager dm;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LevelManager $this;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700053B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600261F")]
			[Address(RVA = "0x34EE38", Offset = "0x34EE38", VA = "0x34EE38", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0x34EE40", Offset = "0x34EE40", VA = "0x34EE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x34EBA8", Offset = "0x34EBA8", VA = "0x34EBA8")]
		[DebuggerHidden]
		public <_WaitForTakeOffMsg>c__Iterator1()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x34EBB0", Offset = "0x34EBB0", VA = "0x34EBB0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x34EE48", Offset = "0x34EE48", VA = "0x34EE48", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x34EE5C", Offset = "0x34EE5C", VA = "0x34EE5C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173E94", Offset = "0x173E94")]
	private sealed class <_WaitForControllerAircraft>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LevelManager $this;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700053D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002625")]
			[Address(RVA = "0x34EAFC", Offset = "0x34EAFC", VA = "0x34EAFC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002626")]
			[Address(RVA = "0x34EB04", Offset = "0x34EB04", VA = "0x34EB04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x34E9D0", Offset = "0x34E9D0", VA = "0x34E9D0")]
		[DebuggerHidden]
		public <_WaitForControllerAircraft>c__Iterator2()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x34E9D8", Offset = "0x34E9D8", VA = "0x34E9D8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x34EB0C", Offset = "0x34EB0C", VA = "0x34EB0C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x34EB20", Offset = "0x34EB20", VA = "0x34EB20", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173EA4", Offset = "0x173EA4")]
	private sealed class <_WaitForCompass2D>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LevelManager $this;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700053F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600262B")]
			[Address(RVA = "0x34E924", Offset = "0x34E924", VA = "0x34E924", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000540")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0x34E92C", Offset = "0x34E92C", VA = "0x34E92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x34E60C", Offset = "0x34E60C", VA = "0x34E60C")]
		[DebuggerHidden]
		public <_WaitForCompass2D>c__Iterator3()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x34E614", Offset = "0x34E614", VA = "0x34E614", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x34E934", Offset = "0x34E934", VA = "0x34E934", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x34E948", Offset = "0x34E948", VA = "0x34E948", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173EB4", Offset = "0x173EB4")]
	private sealed class <_DelayedCompleteState>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LevelManager $this;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000541")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002631")]
			[Address(RVA = "0x34E37C", Offset = "0x34E37C", VA = "0x34E37C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000542")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002632")]
			[Address(RVA = "0x34E384", Offset = "0x34E384", VA = "0x34E384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x34E280", Offset = "0x34E280", VA = "0x34E280")]
		[DebuggerHidden]
		public <_DelayedCompleteState>c__Iterator4()
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x34E288", Offset = "0x34E288", VA = "0x34E288", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x34E38C", Offset = "0x34E38C", VA = "0x34E38C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x34E3A0", Offset = "0x34E3A0", VA = "0x34E3A0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173EC4", Offset = "0x173EC4")]
	private sealed class <ScoreRace>c__AnonStorey5
	{
		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string aircraftId;

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x34DDE8", Offset = "0x34DDE8", VA = "0x34DDE8")]
		public <ScoreRace>c__AnonStorey5()
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x34DDF0", Offset = "0x34DDF0", VA = "0x34DDF0")]
		internal bool <>m__0(RacerDataDO x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173ED4", Offset = "0x173ED4")]
	private sealed class <UpdateRacerPosition>c__AnonStorey6
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RacerProgressDO racer;

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x34E0F0", Offset = "0x34E0F0", VA = "0x34E0F0")]
		public <UpdateRacerPosition>c__AnonStorey6()
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x34E0F8", Offset = "0x34E0F8", VA = "0x34E0F8")]
		internal bool <>m__0(RacerDataDO x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173EE4", Offset = "0x173EE4")]
	private sealed class <SetProgressByDistance>c__AnonStorey7
	{
		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RacerDataDO[] racerData;

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x34DEA0", Offset = "0x34DEA0", VA = "0x34DEA0")]
		public <SetProgressByDistance>c__AnonStorey7()
		{
		}
	}

	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173EF4", Offset = "0x173EF4")]
	private sealed class <SetProgressByDistance>c__AnonStorey8
	{
		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int i;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal <SetProgressByDistance>c__AnonStorey7 <>f__ref$7;

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x34DEA8", Offset = "0x34DEA8", VA = "0x34DEA8")]
		public <SetProgressByDistance>c__AnonStorey8()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x34DEB0", Offset = "0x34DEB0", VA = "0x34DEB0")]
		internal bool <>m__0(RacerProgressDO x)
		{
			return default(bool);
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x34DFD0", Offset = "0x34DFD0", VA = "0x34DFD0")]
		internal bool <>m__1(RacerProgressDO x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F04", Offset = "0x173F04")]
	private sealed class <_AssignProgress>c__AnonStorey9
	{
		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string id;

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x34E1C8", Offset = "0x34E1C8", VA = "0x34E1C8")]
		public <_AssignProgress>c__AnonStorey9()
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x34E1D0", Offset = "0x34E1D0", VA = "0x34E1D0")]
		internal bool <>m__0(RacerProgressDO x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F14", Offset = "0x173F14")]
	private sealed class <_GetRacerTransformByID>c__AnonStoreyA
	{
		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string id;

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x34E428", Offset = "0x34E428", VA = "0x34E428")]
		public <_GetRacerTransformByID>c__AnonStoreyA()
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x34E430", Offset = "0x34E430", VA = "0x34E430")]
		internal bool <>m__0(EnemyRacerAircraft x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F24", Offset = "0x173F24")]
	private sealed class <_SetProgressByRings>c__AnonStoreyB
	{
		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RacerDataDO[] racerData;

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x34E4E0", Offset = "0x34E4E0", VA = "0x34E4E0")]
		public <_SetProgressByRings>c__AnonStoreyB()
		{
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F34", Offset = "0x173F34")]
	private sealed class <_SetProgressByRings>c__AnonStoreyC
	{
		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int i;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal <_SetProgressByRings>c__AnonStoreyB <>f__ref$11;

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x34E4E8", Offset = "0x34E4E8", VA = "0x34E4E8")]
		public <_SetProgressByRings>c__AnonStoreyC()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x34E4F0", Offset = "0x34E4F0", VA = "0x34E4F0")]
		internal bool <>m__0(RacerProgressDO x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Action<bool> GamePaused;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_debugMode;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject m_buyLocations;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LevelData m_oldLevelData;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_secsTillTakeOffMsg;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameManager m_gameManager;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameStateManager m_gameStateManager;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GAME_STATE m_prevGameState;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ScreenFader m_screenFader;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LEVEL_TYPE m_levelType;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LEVEL_TYPE m_licenseSubtype;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private JOB_COMPLETE_STATE m_jobCompleteState;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_timeLimit;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_timeElapsed;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_actualTimeElapsed;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_isTimerPaused;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_debugTimeElapsed;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float m_debugTimeLeft;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float m_beepThresh;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_beepInterval;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float m_scoreForGold;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_scoreForSilver;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float m_scoreForBronze;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float m_scoreEarned;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private GameObject m_ringGroupObj;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_ringsTotal;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int m_ringsCollected;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_ringsMissed;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private GameObject m_balloonGroupObj;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BalloonGroup[] m_balloonGroups;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int m_balloonsTotal;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int m_balloonsPopped;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int m_balloonsMissed;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_packagesDelivered;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Transform m_gunPrefab;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool m_disablePackageSpawn;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private GameObject m_packagePrefab;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool m_testForBounceLanding;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private Transform m_landingWaypoint;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Compass2D m_compass2D;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_distanceFromWaypointThreshold;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_distanceFromWaypoint;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool m_scoreWasSet;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool m_hasTouchedGround;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private DELIVERY_STATE m_deliveryState;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private List<POCameraTarget> m_cameraTargets;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Sprite> m_cameraTargetSprites;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool m_debugTargets;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int m_photosTotal;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int m_photosTaken;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RacerDataDO[] m_racerData;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private RacerProgressDO[] m_racerProgress;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int m_totalEnemyRacer;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int m_enemyRacersInGame;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int m_currentPlayerPosition;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool m_raceEnded;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string m_playerRacerId;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool m_forceLoss;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private bool m_landingRequired;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	[SerializeField]
	private bool m_requiresSpecificRunway;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private TriggerLanding m_landingTrigger;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private bool m_forceMissionWin;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	[SerializeField]
	private bool m_forceMissionFail;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	[SerializeField]
	private bool m_isLevelCompleted;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	[SerializeField]
	private bool m_isLevelSuccess;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int m_moneyEarned;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private PlayerData m_sPlayerData;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private LevelData m_sLevelData;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int m_sCurrentOffice;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int m_sCurrentVehicle;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int m_sCurrentLevelType;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int m_sCurrentJob;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private bool m_enablePenalty;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private float m_penaltyAmount;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private List<TriggerRunway> m_runwaysLanded;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool m_isDeliveryRunway;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float m_stoppedSpeedThreshold;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float m_throttleDownThreshold;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private bool m_disableTakeOffDialog;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	[SerializeField]
	private bool m_useCustomTakeOffDialog;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private DialogContent m_customTakeOffDialog;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private DIFFICULTY m_difficulty;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private bool m_disableInstructedLandDialog;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	[SerializeField]
	private bool m_useCustomInstructedLandDialog;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private DialogContent m_customInstructedLandDialog;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	private bool m_showDebugDeliveryRange;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static LevelManager s_instance;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	public bool debugDrawDeliveryRangesAlways;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float stopDistanceForGold;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float stopDistanceForSilver;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float stopDistanceForBronze;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float timeToGetForGold;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float timeToGetForSilver;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float timeToGetForBronze;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int ringsToGetGold;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int ringsToGetSilver;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int ringsToGetBronze;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int balloonsToGetGold;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public int balloonsToGetSilver;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public int balloonsToGetBronze;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<POCameraTarget> cameraTargets;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public List<Sprite> cameraTargetSprites;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ControllerTablet.TABLET_STATE forceTabletState;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public JOB_COMPLETE_STATE jobCompleteState;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string levelToLoadOnComplete;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public bool scoreIncreased;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	public bool penaltyIncured;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float timeStoppedAt;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float timeToCompleteJob;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int numberPhotosTaken;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int numberOfCameraTargets;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float deliveryTouchdownDistance;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float lastLandingBonus;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int currentVehicle;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B450", Offset = "0x17B450")]
	private static Func<RacerDataDO, bool> <>f__am$cache0;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B460", Offset = "0x17B460")]
	private static Func<RacerDataDO, bool> <>f__am$cache1;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B470", Offset = "0x17B470")]
	private static Func<RacerDataDO, int> <>f__am$cache2;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B480", Offset = "0x17B480")]
	private static Func<RacerProgressDO, float> <>f__am$cache3;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B490", Offset = "0x17B490")]
	private static Func<int, int> <>f__am$cache4;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17B4A0", Offset = "0x17B4A0")]
	private static Func<RacerDataDO, int> <>f__am$cache5;

	[Token(Token = "0x17000340")]
	public static bool DebugMode
	{
		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x4704AC", Offset = "0x4704AC", VA = "0x4704AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000341")]
	public JOB_COMPLETE_STATE JobCompleteState
	{
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x471F3C", Offset = "0x471F3C", VA = "0x471F3C")]
		get
		{
			return default(JOB_COMPLETE_STATE);
		}
	}

	[Token(Token = "0x17000342")]
	public LEVEL_TYPE LevelType
	{
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x471F44", Offset = "0x471F44", VA = "0x471F44")]
		get
		{
			return default(LEVEL_TYPE);
		}
	}

	[Token(Token = "0x17000343")]
	public LEVEL_TYPE LicenseSubType
	{
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x471F4C", Offset = "0x471F4C", VA = "0x471F4C")]
		get
		{
			return default(LEVEL_TYPE);
		}
	}

	[Token(Token = "0x17000344")]
	private float _TimeElapsedPty
	{
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x471F64", Offset = "0x471F64", VA = "0x471F64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x471F6C", Offset = "0x471F6C", VA = "0x471F6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000345")]
	public float ActualTimeElapsed
	{
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x471F90", Offset = "0x471F90", VA = "0x471F90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000346")]
	public float TimeElapsed
	{
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x471F98", Offset = "0x471F98", VA = "0x471F98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000347")]
	public float TimeLeft
	{
		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x471FA0", Offset = "0x471FA0", VA = "0x471FA0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000348")]
	public float TimeDisplayed
	{
		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x471FC8", Offset = "0x471FC8", VA = "0x471FC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000349")]
	public float BeepThresh
	{
		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x47212C", Offset = "0x47212C", VA = "0x47212C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700034A")]
	public float BeepInterval
	{
		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x472134", Offset = "0x472134", VA = "0x472134")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700034B")]
	private float _scoreEarned
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x47213C", Offset = "0x47213C", VA = "0x47213C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x472144", Offset = "0x472144", VA = "0x472144")]
		set
		{
		}
	}

	[Token(Token = "0x1700034C")]
	public float ScoreEarned
	{
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x47216C", Offset = "0x47216C", VA = "0x47216C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700034D")]
	public float ScoreForGold
	{
		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x472174", Offset = "0x472174", VA = "0x472174")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700034E")]
	public float ScoreForSilver
	{
		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x47217C", Offset = "0x47217C", VA = "0x47217C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700034F")]
	public float ScoreForBronze
	{
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x472184", Offset = "0x472184", VA = "0x472184")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000350")]
	public GameObject RingGroup
	{
		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x472414", Offset = "0x472414", VA = "0x472414")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000351")]
	public int RingsTotal
	{
		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x47241C", Offset = "0x47241C", VA = "0x47241C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000352")]
	public int RingsCollected
	{
		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x472424", Offset = "0x472424", VA = "0x472424")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000353")]
	public int RingsMissed
	{
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x47242C", Offset = "0x47242C", VA = "0x47242C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000354")]
	public GameObject BalloonGroup
	{
		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x472434", Offset = "0x472434", VA = "0x472434")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000355")]
	public int BalloonsTotal
	{
		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x47243C", Offset = "0x47243C", VA = "0x47243C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000356")]
	public int BalloonsPopped
	{
		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x472444", Offset = "0x472444", VA = "0x472444")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000357")]
	public int BalloonsMissed
	{
		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x47244C", Offset = "0x47244C", VA = "0x47244C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000358")]
	public GameObject PackagePrefab
	{
		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x472454", Offset = "0x472454", VA = "0x472454")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000359")]
	public List<POCameraTarget> CameraTargets
	{
		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x47245C", Offset = "0x47245C", VA = "0x47245C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700035A")]
	public List<Sprite> CameraTargetSprites
	{
		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x472464", Offset = "0x472464", VA = "0x472464")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700035B")]
	public bool DebugTargets
	{
		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x47246C", Offset = "0x47246C", VA = "0x47246C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035C")]
	public int PhotosTotal
	{
		[Token(Token = "0x6001600")]
		[Address(RVA = "0x472474", Offset = "0x472474", VA = "0x472474")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700035D")]
	public int PhotosTaken
	{
		[Token(Token = "0x6001601")]
		[Address(RVA = "0x47247C", Offset = "0x47247C", VA = "0x47247C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700035E")]
	public RacerDataDO[] RacerData
	{
		[Token(Token = "0x6001602")]
		[Address(RVA = "0x472480", Offset = "0x472480", VA = "0x472480")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001603")]
		[Address(RVA = "0x472488", Offset = "0x472488", VA = "0x472488")]
		set
		{
		}
	}

	[Token(Token = "0x1700035F")]
	public RacerProgressDO[] RacerProgress
	{
		[Token(Token = "0x6001604")]
		[Address(RVA = "0x472490", Offset = "0x472490", VA = "0x472490")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001605")]
		[Address(RVA = "0x472498", Offset = "0x472498", VA = "0x472498")]
		set
		{
		}
	}

	[Token(Token = "0x17000360")]
	public int TotalEnemyRacer
	{
		[Token(Token = "0x6001606")]
		[Address(RVA = "0x4724A0", Offset = "0x4724A0", VA = "0x4724A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001607")]
		[Address(RVA = "0x4724A8", Offset = "0x4724A8", VA = "0x4724A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000361")]
	public int EnemyRacersInGame
	{
		[Token(Token = "0x6001608")]
		[Address(RVA = "0x4724B0", Offset = "0x4724B0", VA = "0x4724B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001609")]
		[Address(RVA = "0x4724B8", Offset = "0x4724B8", VA = "0x4724B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000362")]
	public int CurrentPlayerPosition
	{
		[Token(Token = "0x600160A")]
		[Address(RVA = "0x4724C0", Offset = "0x4724C0", VA = "0x4724C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600160B")]
		[Address(RVA = "0x4724C8", Offset = "0x4724C8", VA = "0x4724C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000363")]
	public bool RaceEnded
	{
		[Token(Token = "0x600160C")]
		[Address(RVA = "0x4724D0", Offset = "0x4724D0", VA = "0x4724D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000364")]
	public bool IsCloseToWaypoint
	{
		[Token(Token = "0x6001611")]
		[Address(RVA = "0x472894", Offset = "0x472894", VA = "0x472894")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000365")]
	public bool LandingRequired
	{
		[Token(Token = "0x600161F")]
		[Address(RVA = "0x473968", Offset = "0x473968", VA = "0x473968")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000366")]
	public bool ForceMissionWin
	{
		[Token(Token = "0x6001620")]
		[Address(RVA = "0x473970", Offset = "0x473970", VA = "0x473970")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000367")]
	public bool ForceMissionFail
	{
		[Token(Token = "0x6001621")]
		[Address(RVA = "0x473978", Offset = "0x473978", VA = "0x473978")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000368")]
	public TriggerLanding LandingTrigger
	{
		[Token(Token = "0x6001622")]
		[Address(RVA = "0x473980", Offset = "0x473980", VA = "0x473980")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000369")]
	public bool IsLevelCompleted
	{
		[Token(Token = "0x6001625")]
		[Address(RVA = "0x473D20", Offset = "0x473D20", VA = "0x473D20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036A")]
	public bool IsLevelSuccess
	{
		[Token(Token = "0x6001626")]
		[Address(RVA = "0x473D28", Offset = "0x473D28", VA = "0x473D28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036B")]
	public bool IsCrashed
	{
		[Token(Token = "0x6001627")]
		[Address(RVA = "0x473D30", Offset = "0x473D30", VA = "0x473D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036C")]
	public bool IsOnRunway
	{
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x473F84", Offset = "0x473F84", VA = "0x473F84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036D")]
	public bool IsOnDeliveryRunway
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x475A40", Offset = "0x475A40", VA = "0x475A40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036E")]
	public bool IsRunwayOwned
	{
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x47400C", Offset = "0x47400C", VA = "0x47400C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036F")]
	public int CurrentRunwayOfficeInt
	{
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x475A48", Offset = "0x475A48", VA = "0x475A48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000370")]
	public DIFFICULTY Difficulty
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0x475E34", Offset = "0x475E34", VA = "0x475E34")]
		get
		{
			return default(DIFFICULTY);
		}
	}

	[Token(Token = "0x17000371")]
	public bool DisableInstructedLandDialog
	{
		[Token(Token = "0x600168B")]
		[Address(RVA = "0x47973C", Offset = "0x47973C", VA = "0x47973C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000372")]
	public bool UseCustomInstructedLandDialog
	{
		[Token(Token = "0x600168C")]
		[Address(RVA = "0x479744", Offset = "0x479744", VA = "0x479744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000373")]
	public DialogContent CustomDialog
	{
		[Token(Token = "0x600168D")]
		[Address(RVA = "0x47974C", Offset = "0x47974C", VA = "0x47974C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000374")]
	public bool ShowDebugDeliveryRange
	{
		[Token(Token = "0x600168E")]
		[Address(RVA = "0x479754", Offset = "0x479754", VA = "0x479754")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000031")]
	public event ShowGameplayObjectsEventHandler OnShowGameplayObjects
	{
		[Token(Token = "0x600160F")]
		[Address(RVA = "0x47267C", Offset = "0x47267C", VA = "0x47267C")]
		add
		{
		}
		[Token(Token = "0x6001610")]
		[Address(RVA = "0x472788", Offset = "0x472788", VA = "0x472788")]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event NotifyCallback NotifyEvent
	{
		[Token(Token = "0x6001614")]
		[Address(RVA = "0x472D50", Offset = "0x472D50", VA = "0x472D50")]
		add
		{
		}
		[Token(Token = "0x6001615")]
		[Address(RVA = "0x472E5C", Offset = "0x472E5C", VA = "0x472E5C")]
		remove
		{
		}
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x470368", Offset = "0x470368", VA = "0x470368")]
	public LevelManager()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x470538", Offset = "0x470538", VA = "0x470538")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x47065C", Offset = "0x47065C", VA = "0x47065C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x470684", Offset = "0x470684", VA = "0x470684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x4706AC", Offset = "0x4706AC", VA = "0x4706AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x4706D4", Offset = "0x4706D4", VA = "0x4706D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x471114", Offset = "0x471114", VA = "0x471114")]
	private void _GetOldLevelData()
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x471090", Offset = "0x471090", VA = "0x471090")]
	[DebuggerHidden]
	private IEnumerator _WaitForVisorUp()
	{
		return null;
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x471230", Offset = "0x471230", VA = "0x471230")]
	[DebuggerHidden]
	private IEnumerator _WaitForTakeOffMsg(DialogManager dm)
	{
		return null;
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x4712D0", Offset = "0x4712D0", VA = "0x4712D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x470638", Offset = "0x470638", VA = "0x470638")]
	private void _GetControllerAircraft()
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x471EB8", Offset = "0x471EB8", VA = "0x471EB8")]
	[DebuggerHidden]
	private IEnumerator _WaitForControllerAircraft()
	{
		return null;
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x471F54", Offset = "0x471F54", VA = "0x471F54")]
	public void UpdateLicenseSubtypeEditorOnly()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x471F88", Offset = "0x471F88", VA = "0x471F88")]
	public void PauseTimer(bool isPaused)
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x471460", Offset = "0x471460", VA = "0x471460")]
	private void _UpdateTimer()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x47218C", Offset = "0x47218C", VA = "0x47218C")]
	private int _GetMoneyEarned(MEDAL_TYPE medalType, int currentOffice, int currentVehicle, int currentLevelType, int currentJob, LevelData ld, out int moneyClaimed)
	{
		return default(int);
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x4724D8", Offset = "0x4724D8", VA = "0x4724D8")]
	public void ShowGameplayObject(bool isShowing)
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x4724DC", Offset = "0x4724DC", VA = "0x4724DC")]
	private void _ShowGameplayObjects(bool isShowing)
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x4728B0", Offset = "0x4728B0", VA = "0x4728B0")]
	public void RingScore(int score)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x472D3C", Offset = "0x472D3C", VA = "0x472D3C")]
	private bool NotifyControllerTablet()
	{
		return default(bool);
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x472F68", Offset = "0x472F68", VA = "0x472F68")]
	public void MissRing([Optional] BalloonGroup bg)
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x473320", Offset = "0x473320", VA = "0x473320")]
	public void DeliverPackage(float distance)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x4733C0", Offset = "0x4733C0", VA = "0x4733C0")]
	public void BounceLanding()
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x47343C", Offset = "0x47343C", VA = "0x47343C")]
	public void ScoreBalloonRush()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x47351C", Offset = "0x47351C", VA = "0x47351C")]
	public void MissBalloonRush()
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x4735D0", Offset = "0x4735D0", VA = "0x4735D0")]
	public void AssessBalloonGroup(BalloonGroup balloonGroup)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x473730", Offset = "0x473730", VA = "0x473730")]
	public void ScoreBalloonCourse()
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x4737A8", Offset = "0x4737A8", VA = "0x4737A8")]
	public void UpdateRingTotalEditorOnly()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x473888", Offset = "0x473888", VA = "0x473888")]
	public void UpdateBalloonTotalEditorOnly()
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x473988", Offset = "0x473988", VA = "0x473988")]
	public void UpdateLandingEditorOnly()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x47399C", Offset = "0x47399C", VA = "0x47399C")]
	private bool _CheckForCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x473D44", Offset = "0x473D44", VA = "0x473D44")]
	public void UnmountHMD()
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x473D50", Offset = "0x473D50", VA = "0x473D50")]
	public void QuitLevel()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x474DC0", Offset = "0x474DC0", VA = "0x474DC0")]
	public void AbandonLevel()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x474EA0", Offset = "0x474EA0", VA = "0x474EA0")]
	public void CrashLevel()
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x474F5C", Offset = "0x474F5C", VA = "0x474F5C")]
	public void DEBUG_CompleteLevel()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x474FB0", Offset = "0x474FB0", VA = "0x474FB0")]
	public void CompleteLevel(bool isSuccess, bool forceQuit = false, bool forceResult = false, bool quickQuit = false)
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x47433C", Offset = "0x47433C", VA = "0x47433C")]
	private void _CompleteLevel(bool isSuccess, bool forceQuit = false, bool forceResult = false, bool abandoned = false, bool fromLanding = false)
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x475220", Offset = "0x475220", VA = "0x475220")]
	private void _RevertMoney(PlayerData currentPlayerData, int currentOffice, int currentVehicle, int currentLevelType, int currentJob, LevelData currentLevelData, LevelData previousLevelData)
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x4752B0", Offset = "0x4752B0", VA = "0x4752B0")]
	private void _OnSwitchScreenCallback(GAME_STATE gameState)
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x475478", Offset = "0x475478", VA = "0x475478")]
	public ISLAND_TYPE DetermineIslandFromOffice(OFFICE_TYPE officeType)
	{
		return default(ISLAND_TYPE);
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x47547C", Offset = "0x47547C", VA = "0x47547C")]
	private ISLAND_TYPE _DetermineIslandFromOffice(OFFICE_TYPE officeType)
	{
		return default(ISLAND_TYPE);
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x47575C", Offset = "0x47575C", VA = "0x47575C")]
	public MEDAL_TYPE GetMedal()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x474FFC", Offset = "0x474FFC", VA = "0x474FFC")]
	private MEDAL_TYPE _GetMedal()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x475994", Offset = "0x475994", VA = "0x475994")]
	private bool _HasReceivedBetterMedal(MEDAL_TYPE medalEarned, LevelData currentLevelData)
	{
		return default(bool);
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x4759E8", Offset = "0x4759E8", VA = "0x4759E8")]
	public void ScoreLandingBonus(float scoreEarned)
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x474170", Offset = "0x474170", VA = "0x474170")]
	private void _SetLastRunwayIslandOffice()
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x475B18", Offset = "0x475B18", VA = "0x475B18")]
	public void OnRunway(TriggerRunway triggerRunway, bool isDeliveryRunway = false)
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x475BA0", Offset = "0x475BA0", VA = "0x475BA0")]
	public void OffRunway(TriggerRunway triggerRunway, bool isDeliveryRunway = false)
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x471D18", Offset = "0x471D18", VA = "0x471D18")]
	private void _UpdateLanding()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x472008", Offset = "0x472008", VA = "0x472008")]
	public bool IsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x475C30", Offset = "0x475C30", VA = "0x475C30")]
	public bool IsAircraftThrottleOff()
	{
		return default(bool);
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x472A74", Offset = "0x472A74", VA = "0x472A74")]
	private void _ScoreRingRush()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x473164", Offset = "0x473164", VA = "0x473164")]
	private void _MissRingRush()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x470B6C", Offset = "0x470B6C", VA = "0x470B6C")]
	private void _StartRingRush()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x4716B0", Offset = "0x4716B0", VA = "0x4716B0")]
	private void _UpdateRingRush()
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x474FD4", Offset = "0x474FD4", VA = "0x474FD4")]
	private void _SucceedRingRush(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x475204", Offset = "0x475204", VA = "0x475204")]
	private void _FailRingRush(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x473BA0", Offset = "0x473BA0", VA = "0x473BA0")]
	private bool _CheckForCompletionRingRush()
	{
		return default(bool);
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x475760", Offset = "0x475760", VA = "0x475760")]
	private MEDAL_TYPE _GetMedalRingRush()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x472B24", Offset = "0x472B24", VA = "0x472B24")]
	private void _ScoreRingCourse(int score)
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x4731E8", Offset = "0x4731E8", VA = "0x4731E8")]
	private void _MissRingCourse()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x470C48", Offset = "0x470C48", VA = "0x470C48")]
	private void _StartRingCourse()
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x471748", Offset = "0x471748", VA = "0x471748")]
	private void _UpdateRingCourse()
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x474FD8", Offset = "0x474FD8", VA = "0x474FD8")]
	private void _SucceedRingCourse(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x475208", Offset = "0x475208", VA = "0x475208")]
	private void _FailRingCourse(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x473BBC", Offset = "0x473BBC", VA = "0x473BBC")]
	private bool _CheckForCompletionRingCourse()
	{
		return default(bool);
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x4757AC", Offset = "0x4757AC", VA = "0x4757AC")]
	private MEDAL_TYPE _GetMedalRingCourse()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x473330", Offset = "0x473330", VA = "0x473330")]
	private void _ScoreDelivery(float distance)
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x473404", Offset = "0x473404", VA = "0x473404")]
	private void _BounceDelivery()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x470D24", Offset = "0x470D24", VA = "0x470D24")]
	private void _StartDelivery()
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x475E3C", Offset = "0x475E3C", VA = "0x475E3C")]
	[DebuggerHidden]
	private IEnumerator _WaitForCompass2D()
	{
		return null;
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x475EC0", Offset = "0x475EC0", VA = "0x475EC0")]
	private void _SpawnPackages()
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x47174C", Offset = "0x47174C", VA = "0x47174C")]
	private void _UpdateDelivery()
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x474FDC", Offset = "0x474FDC", VA = "0x474FDC")]
	private void _SucceedDelivery(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x47520C", Offset = "0x47520C", VA = "0x47520C")]
	private void _FailDelivery(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x473BF4", Offset = "0x473BF4", VA = "0x473BF4")]
	private bool _CheckForCompletionDelivery()
	{
		return default(bool);
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x4757F8", Offset = "0x4757F8", VA = "0x4757F8")]
	private MEDAL_TYPE _GetMedalDelivery()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x47346C", Offset = "0x47346C", VA = "0x47346C")]
	private void _ScoreBalloonRush()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x47354C", Offset = "0x47354C", VA = "0x47354C")]
	private void _MissBalloonRush()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x470D64", Offset = "0x470D64", VA = "0x470D64")]
	private void _StartBalloonRush()
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x471AF0", Offset = "0x471AF0", VA = "0x471AF0")]
	private void _UpdateBalloonRush()
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x474FEC", Offset = "0x474FEC", VA = "0x474FEC")]
	private void _SucceedBalloonRush(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x475210", Offset = "0x475210", VA = "0x475210")]
	private void _FailBalloonRush(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x473C40", Offset = "0x473C40", VA = "0x473C40")]
	private bool _CheckForCompletionBalloonRush()
	{
		return default(bool);
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x475854", Offset = "0x475854", VA = "0x475854")]
	private MEDAL_TYPE _GetMedalBalloonRush()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x4735D4", Offset = "0x4735D4", VA = "0x4735D4")]
	private void _AssessBalloonGroup(BalloonGroup bg)
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x473778", Offset = "0x473778", VA = "0x473778")]
	private void _ScoreBalloonCourse()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x472C70", Offset = "0x472C70", VA = "0x472C70")]
	private void _ScoreRingBalloonCourse(int score)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x475FF8", Offset = "0x475FF8", VA = "0x475FF8")]
	private void _MissBalloonCourse(BalloonGroup bg)
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x47326C", Offset = "0x47326C", VA = "0x47326C")]
	private void _MissRingBalloonCourse([Optional] BalloonGroup bg)
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x470E40", Offset = "0x470E40", VA = "0x470E40")]
	private void _StartBalloonCourse()
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x471B88", Offset = "0x471B88", VA = "0x471B88")]
	private void _UpdateBalloonCourse()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x474FF0", Offset = "0x474FF0", VA = "0x474FF0")]
	private void _SucceedBalloonCourse(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x475214", Offset = "0x475214", VA = "0x475214")]
	private void _FailBalloonCourse(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x473C5C", Offset = "0x473C5C", VA = "0x473C5C")]
	private bool _CheckForCompletionBalloonCourse()
	{
		return default(bool);
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x4758A0", Offset = "0x4758A0", VA = "0x4758A0")]
	private MEDAL_TYPE _GetMedalBalloonCourse()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x475FFC", Offset = "0x475FFC", VA = "0x475FFC")]
	public void ScorePhoto(int numOfBalloons = 1, int scoreValue = 0, string scoreType = "balloon")
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x475938", Offset = "0x475938", VA = "0x475938")]
	private MEDAL_TYPE _GetMedalRace()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x47521C", Offset = "0x47521C", VA = "0x47521C")]
	private void _FailRace(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x473308", Offset = "0x473308", VA = "0x473308")]
	private void _MissRace()
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x476158", Offset = "0x476158", VA = "0x476158")]
	public void InitializeRace(string playerId)
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x473D04", Offset = "0x473D04", VA = "0x473D04")]
	private bool _CheckForCompletionRace()
	{
		return default(bool);
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x471CB8", Offset = "0x471CB8", VA = "0x471CB8")]
	private void _UpdateRace()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x4761DC", Offset = "0x4761DC", VA = "0x4761DC")]
	[DebuggerHidden]
	private IEnumerator _DelayedCompleteState()
	{
		return null;
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x476260", Offset = "0x476260", VA = "0x476260")]
	public void ScoreRace(string aircraftId, ScoreRing.RaceRingType ringType, int ringIndex)
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x476000", Offset = "0x476000", VA = "0x476000")]
	public void SetRaceEnd(RacerType racerType, bool forceDefeat = false)
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x474FF8", Offset = "0x474FF8", VA = "0x474FF8")]
	private void _SucceedRace(ref PlayerData currentPlayerData, ref LevelData newLevelData)
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x476168", Offset = "0x476168", VA = "0x476168")]
	private void _SetCompleteState()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x476784", Offset = "0x476784", VA = "0x476784")]
	public int GetPlayerPosition()
	{
		return default(int);
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x476928", Offset = "0x476928", VA = "0x476928")]
	public RacerDataDO GetPlayerData()
	{
		return null;
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x476AAC", Offset = "0x476AAC", VA = "0x476AAC")]
	public void UpdateRacerPosition()
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x476CD0", Offset = "0x476CD0", VA = "0x476CD0")]
	public void SetProgressByDistance(RingManager ringManager, EnemyRacerAircraft[] enemyRacers, PlayerRacerAircraft playerRacer)
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x477F1C", Offset = "0x477F1C", VA = "0x477F1C")]
	private RacerProgressDO _AssignProgress(string id, int position, float distance)
	{
		return null;
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x477DD0", Offset = "0x477DD0", VA = "0x477DD0")]
	private float _GetDistance(RacerDataDO racer, RingManager ringManager, EnemyRacerAircraft[] enemyRacers, PlayerRacerAircraft playerRacer)
	{
		return default(float);
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0x478074", Offset = "0x478074", VA = "0x478074")]
	private Transform _GetRacerTransformByID(string id, EnemyRacerAircraft[] enemyRacers, PlayerRacerAircraft playerRacer)
	{
		return null;
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x47825C", Offset = "0x47825C", VA = "0x47825C")]
	private void _SetProgressByRings()
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x478588", Offset = "0x478588", VA = "0x478588")]
	private void _StartFreeFlight()
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x471B8C", Offset = "0x471B8C", VA = "0x471B8C")]
	private void _UpdateFreeFlight()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x474FF4", Offset = "0x474FF4", VA = "0x474FF4")]
	private void _SucceedFreeFlight(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x475218", Offset = "0x475218", VA = "0x475218")]
	private void _FailFreeFlight(ref PlayerData currentPlayerData, ref LevelData currentLevelData)
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x473CB8", Offset = "0x473CB8", VA = "0x473CB8")]
	private bool _CheckForCompletionFreeFlight()
	{
		return default(bool);
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x4758EC", Offset = "0x4758EC", VA = "0x4758EC")]
	private MEDAL_TYPE _GetMedalFreeFlight()
	{
		return default(MEDAL_TYPE);
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x47858C", Offset = "0x47858C", VA = "0x47858C")]
	public static string GetMissionCompleteText(int desiredLine, GameManager gameManager, LanguageManager languageManager)
	{
		return null;
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x47947C", Offset = "0x47947C", VA = "0x47947C")]
	public static string GetMissionFailedText(int desiredLine, GameManager gameManager, LanguageManager languageManager)
	{
		return null;
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x47975C", Offset = "0x47975C", VA = "0x47975C")]
	public static LevelManager Instance()
	{
		return null;
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x4797E8", Offset = "0x4797E8", VA = "0x4797E8")]
	public bool isMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x4797F0", Offset = "0x4797F0", VA = "0x4797F0")]
	public void PenaltyIncured(string p, int a)
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x4797F4", Offset = "0x4797F4", VA = "0x4797F4")]
	public void EndLevel()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x4797F8", Offset = "0x4797F8", VA = "0x4797F8")]
	public void ShowGameplayObjects()
	{
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x4797FC", Offset = "0x4797FC", VA = "0x4797FC")]
	public void HideGameplayObjects()
	{
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x479800", Offset = "0x479800", VA = "0x479800")]
	public void ResetScoreIncrease(string scoreType)
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x479804", Offset = "0x479804", VA = "0x479804")]
	public void ResetPenalty(string s)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x479808", Offset = "0x479808", VA = "0x479808")]
	public ControllerTablet.TABLET_STATE GetTabletState(LEVEL_TYPE lt)
	{
		return default(ControllerTablet.TABLET_STATE);
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x479810", Offset = "0x479810", VA = "0x479810")]
	public ControllerTablet.TABLET_STATE GetEmergencyTabletState()
	{
		return default(ControllerTablet.TABLET_STATE);
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x479818", Offset = "0x479818", VA = "0x479818")]
	public bool IsPreviewingCourseMedal()
	{
		return default(bool);
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x479820", Offset = "0x479820", VA = "0x479820")]
	public void FindVehicleObjects()
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x479824", Offset = "0x479824", VA = "0x479824")]
	public void SetJobCompleteState(JOB_COMPLETE_STATE jcs)
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0x479828", Offset = "0x479828", VA = "0x479828")]
	public void SetTabletState(ControllerTablet.TABLET_STATE ts, bool force = false)
	{
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x479894", Offset = "0x479894", VA = "0x479894")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1818F8", Offset = "0x1818F8")]
	private static bool <GetPlayerPosition>m__0(RacerDataDO x)
	{
		return default(bool);
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x4798D0", Offset = "0x4798D0", VA = "0x4798D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181908", Offset = "0x181908")]
	private static bool <GetPlayerData>m__1(RacerDataDO x)
	{
		return default(bool);
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x47990C", Offset = "0x47990C", VA = "0x47990C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181918", Offset = "0x181918")]
	private static int <SetProgressByDistance>m__2(RacerDataDO x)
	{
		return default(int);
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x479938", Offset = "0x479938", VA = "0x479938")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181928", Offset = "0x181928")]
	private static float <SetProgressByDistance>m__3(RacerProgressDO x)
	{
		return default(float);
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x479964", Offset = "0x479964", VA = "0x479964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181938", Offset = "0x181938")]
	private static int <SetProgressByDistance>m__4(int x)
	{
		return default(int);
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x479968", Offset = "0x479968", VA = "0x479968")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181948", Offset = "0x181948")]
	private static int <_SetProgressByRings>m__5(RacerDataDO x)
	{
		return default(int);
	}
}
[Token(Token = "0x200032B")]
public class LoadedIslandManager : LoadedSceneManager
{
	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x3538B4", Offset = "0x3538B4", VA = "0x3538B4")]
	public LoadedIslandManager()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x35398C", Offset = "0x35398C", VA = "0x35398C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x353B94", Offset = "0x353B94", VA = "0x353B94", Slot = "6")]
	protected override void _InitSceneVars()
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x353D84", Offset = "0x353D84", VA = "0x353D84", Slot = "7")]
	protected override void _SetSceneVars()
	{
	}
}
[Token(Token = "0x200032C")]
public class LoadedLevelManager : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	public enum LOADED_LEVEL_STATE
	{
		[Token(Token = "0x40011DA")]
		Loading,
		[Token(Token = "0x40011DB")]
		Loaded,
		[Token(Token = "0x40011DC")]
		Hidden,
		[Token(Token = "0x40011DD")]
		Visible,
		[Token(Token = "0x40011DE")]
		Unloading,
		[Token(Token = "0x40011DF")]
		Unloaded
	}

	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F44", Offset = "0x173F44")]
	private sealed class <_WaitForUnload>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadedLevelManager $this;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000543")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002646")]
			[Address(RVA = "0x355400", Offset = "0x355400", VA = "0x355400", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000544")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0x355408", Offset = "0x355408", VA = "0x355408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x354E74", Offset = "0x354E74", VA = "0x354E74")]
		[DebuggerHidden]
		public <_WaitForUnload>c__Iterator0()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x3552AC", Offset = "0x3552AC", VA = "0x3552AC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x355410", Offset = "0x355410", VA = "0x355410", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x355424", Offset = "0x355424", VA = "0x355424", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F54", Offset = "0x173F54")]
	private sealed class <_WaitForLoad>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string sceneNameToLoad;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int[] levelVars;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LoadedLevelManager $this;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000545")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x355200", Offset = "0x355200", VA = "0x355200", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000546")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x355208", Offset = "0x355208", VA = "0x355208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x354F34", Offset = "0x354F34", VA = "0x354F34")]
		[DebuggerHidden]
		public <_WaitForLoad>c__Iterator1()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x354F40", Offset = "0x354F40", VA = "0x354F40", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x355210", Offset = "0x355210", VA = "0x355210", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x355224", Offset = "0x355224", VA = "0x355224", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private HashSet<GAME_STATE> m_isActiveOnGameState;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_setSceneActive;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[SerializeField]
	private bool m_setSceneAdditive;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LOADED_LEVEL_STATE m_currentSceneState;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_currentOffice;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_currentVehicle;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentJobType;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_currentJobLevel;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_currentScene;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AsyncOperation m_loaderAsync;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static PlayerData m_playerData;

	[Token(Token = "0x17000375")]
	public LOADED_LEVEL_STATE CurrentSceneState
	{
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x354CA4", Offset = "0x354CA4", VA = "0x354CA4")]
		get
		{
			return default(LOADED_LEVEL_STATE);
		}
	}

	[Token(Token = "0x17000376")]
	public Scene CurrentScene
	{
		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x354CAC", Offset = "0x354CAC", VA = "0x354CAC")]
		get
		{
			return default(Scene);
		}
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x353F10", Offset = "0x353F10", VA = "0x353F10")]
	public LoadedLevelManager()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x353FE0", Offset = "0x353FE0", VA = "0x353FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x354108", Offset = "0x354108", VA = "0x354108")]
	private void Update()
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x354B48", Offset = "0x354B48", VA = "0x354B48", Slot = "4")]
	protected virtual void _Awake()
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x3545F8", Offset = "0x3545F8", VA = "0x3545F8")]
	private void _ActivateScene(int office, int vehicle, int jobType, int jobLevel)
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x354CB4", Offset = "0x354CB4", VA = "0x354CB4")]
	private void _SetSceneActive(Scene currentScene, bool isActive)
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x354900", Offset = "0x354900", VA = "0x354900")]
	private void _UnloadScene(string sceneNameToUnload)
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x354DF0", Offset = "0x354DF0", VA = "0x354DF0")]
	[DebuggerHidden]
	private IEnumerator _WaitForUnload()
	{
		return null;
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x354D84", Offset = "0x354D84", VA = "0x354D84")]
	private void _LoadScene(string sceneNameToLoad, int[] levelVars)
	{
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x354E7C", Offset = "0x354E7C", VA = "0x354E7C")]
	[DebuggerHidden]
	private IEnumerator _WaitForLoad(string sceneNameToLoad, int[] levelVars)
	{
		return null;
	}
}
[Token(Token = "0x200032E")]
public class LoadedOfficeManager : LoadedSceneManager
{
	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x3554AC", Offset = "0x3554AC", VA = "0x3554AC")]
	public LoadedOfficeManager()
	{
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x3554B0", Offset = "0x3554B0", VA = "0x3554B0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x3555A0", Offset = "0x3555A0", VA = "0x3555A0", Slot = "6")]
	protected override void _InitSceneVars()
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x355784", Offset = "0x355784", VA = "0x355784", Slot = "7")]
	protected override void _SetSceneVars()
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x355910", Offset = "0x355910", VA = "0x355910", Slot = "8")]
	protected override void _RunAfterLoad()
	{
	}
}
[Token(Token = "0x200032F")]
public class LoadedSceneManager : MonoBehaviour
{
	[Token(Token = "0x2000330")]
	public enum LOADED_LEVEL_STATE
	{
		[Token(Token = "0x40011EC")]
		Loading,
		[Token(Token = "0x40011ED")]
		Loaded,
		[Token(Token = "0x40011EE")]
		Hidden,
		[Token(Token = "0x40011EF")]
		Visible,
		[Token(Token = "0x40011F0")]
		Unloading,
		[Token(Token = "0x40011F1")]
		Unloaded
	}

	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F64", Offset = "0x173F64")]
	private sealed class <_WaitForUnload>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadedSceneManager $this;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000547")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002652")]
			[Address(RVA = "0x3566B8", Offset = "0x3566B8", VA = "0x3566B8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000548")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002653")]
			[Address(RVA = "0x3566C0", Offset = "0x3566C0", VA = "0x3566C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x3562A0", Offset = "0x3562A0", VA = "0x3562A0")]
		[DebuggerHidden]
		public <_WaitForUnload>c__Iterator0()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x3565D4", Offset = "0x3565D4", VA = "0x3565D4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x3566C8", Offset = "0x3566C8", VA = "0x3566C8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x3566DC", Offset = "0x3566DC", VA = "0x3566DC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F74", Offset = "0x173F74")]
	private sealed class <_WaitForLoad>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string SceneNameBeingLoaded;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int playerDataSceneIndex;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LoadedSceneManager $this;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000549")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0x356528", Offset = "0x356528", VA = "0x356528", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002659")]
			[Address(RVA = "0x356530", Offset = "0x356530", VA = "0x356530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x356360", Offset = "0x356360", VA = "0x356360")]
		[DebuggerHidden]
		public <_WaitForLoad>c__Iterator1()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x356374", Offset = "0x356374", VA = "0x356374", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x356538", Offset = "0x356538", VA = "0x356538", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x35654C", Offset = "0x35654C", VA = "0x35654C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected HashSet<GAME_STATE> m_isActiveOnGameState;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_setSceneActive;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[SerializeField]
	private bool m_setSceneAdditive;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LOADED_LEVEL_STATE m_currentSceneState;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected string[] m_sceneNames;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int m_currentPlayerDataSceneIndex;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentSceneIndex;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Scene m_currentScene;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AsyncOperation m_loaderAsync;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static PlayerData m_playerData;

	[Token(Token = "0x17000377")]
	public LOADED_LEVEL_STATE CurrentSceneState
	{
		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x35599C", Offset = "0x35599C", VA = "0x35599C")]
		get
		{
			return default(LOADED_LEVEL_STATE);
		}
	}

	[Token(Token = "0x17000378")]
	public Scene CurrentScene
	{
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x3559A4", Offset = "0x3559A4", VA = "0x3559A4")]
		get
		{
			return default(Scene);
		}
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x3538B8", Offset = "0x3538B8", VA = "0x3538B8")]
	public LoadedSceneManager()
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x353AC0", Offset = "0x353AC0", VA = "0x353AC0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x3559AC", Offset = "0x3559AC", VA = "0x3559AC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x3559BC", Offset = "0x3559BC", VA = "0x3559BC", Slot = "6")]
	protected virtual void _InitSceneVars()
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x355AF4", Offset = "0x355AF4", VA = "0x355AF4", Slot = "7")]
	protected virtual void _SetSceneVars()
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x355C04", Offset = "0x355C04", VA = "0x355C04")]
	private void Update()
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x355E08", Offset = "0x355E08", VA = "0x355E08")]
	private void _ActivateScene(int requestedSceneIndex)
	{
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x355F34", Offset = "0x355F34", VA = "0x355F34")]
	private void _SetSceneActive(Scene scene, bool activeState)
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x355FDC", Offset = "0x355FDC", VA = "0x355FDC")]
	private void _UnloadScene(string SceneNameToUnload)
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x35621C", Offset = "0x35621C", VA = "0x35621C")]
	[DebuggerHidden]
	private IEnumerator _WaitForUnload()
	{
		return null;
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x3560F4", Offset = "0x3560F4", VA = "0x3560F4")]
	private void _LoadScene(string SceneNameToLoad, int playerDataSceneIndex)
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x3562A8", Offset = "0x3562A8", VA = "0x3562A8")]
	[DebuggerHidden]
	private IEnumerator _WaitForLoad(string SceneNameBeingLoaded, int playerDataSceneIndex)
	{
		return null;
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x356368", Offset = "0x356368", VA = "0x356368", Slot = "8")]
	protected virtual void _RunAfterLoad()
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x35636C", Offset = "0x35636C", VA = "0x35636C")]
	private void _SetCurrentSceneNumber(int index)
	{
	}
}
[Token(Token = "0x2000331")]
public class LoadingRoom : MonoBehaviour
{
	[Token(Token = "0x2000332")]
	public enum ROOM_STATE
	{
		[Token(Token = "0x4001219")]
		None,
		[Token(Token = "0x400121A")]
		Pirated,
		[Token(Token = "0x400121B")]
		WaitingOnController,
		[Token(Token = "0x400121C")]
		Recenter,
		[Token(Token = "0x400121D")]
		Recentered,
		[Token(Token = "0x400121E")]
		WearHelmet,
		[Token(Token = "0x400121F")]
		SaveComputer,
		[Token(Token = "0x4001220")]
		LoadNextLevel,
		[Token(Token = "0x4001221")]
		NotLoggedInXboxLive
	}

	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F84", Offset = "0x173F84")]
	private sealed class <WaitForLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadingRoom $this;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700054B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600265E")]
			[Address(RVA = "0x358B34", Offset = "0x358B34", VA = "0x358B34", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600265F")]
			[Address(RVA = "0x358B3C", Offset = "0x358B3C", VA = "0x358B3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x356F28", Offset = "0x356F28", VA = "0x356F28")]
		[DebuggerHidden]
		public <WaitForLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x358874", Offset = "0x358874", VA = "0x358874", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x358B44", Offset = "0x358B44", VA = "0x358B44", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x358B58", Offset = "0x358B58", VA = "0x358B58", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173F94", Offset = "0x173F94")]
	private sealed class <SkipLoadingRoom>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadingRoom $this;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700054D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002664")]
			[Address(RVA = "0x358500", Offset = "0x358500", VA = "0x358500", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002665")]
			[Address(RVA = "0x358508", Offset = "0x358508", VA = "0x358508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x356FB4", Offset = "0x356FB4", VA = "0x356FB4")]
		[DebuggerHidden]
		public <SkipLoadingRoom>c__Iterator1()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x3583D8", Offset = "0x3583D8", VA = "0x3583D8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x358510", Offset = "0x358510", VA = "0x358510", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x358524", Offset = "0x358524", VA = "0x358524", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173FA4", Offset = "0x173FA4")]
	private sealed class <_WaitForQuitNotOwned>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x1700054F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x358EF8", Offset = "0x358EF8", VA = "0x358EF8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000550")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600266B")]
			[Address(RVA = "0x358F00", Offset = "0x358F00", VA = "0x358F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x3575EC", Offset = "0x3575EC", VA = "0x3575EC")]
		[DebuggerHidden]
		public <_WaitForQuitNotOwned>c__Iterator2()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x358DCC", Offset = "0x358DCC", VA = "0x358DCC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x358F08", Offset = "0x358F08", VA = "0x358F08", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x358F1C", Offset = "0x358F1C", VA = "0x358F1C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173FB4", Offset = "0x173FB4")]
	private sealed class <WaitForVisorDown>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadingRoom $this;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000551")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0x358D20", Offset = "0x358D20", VA = "0x358D20", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000552")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002671")]
			[Address(RVA = "0x358D28", Offset = "0x358D28", VA = "0x358D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x357780", Offset = "0x357780", VA = "0x357780")]
		[DebuggerHidden]
		public <WaitForVisorDown>c__Iterator3()
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x358BE0", Offset = "0x358BE0", VA = "0x358BE0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x358D30", Offset = "0x358D30", VA = "0x358D30", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x358D44", Offset = "0x358D44", VA = "0x358D44", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173FC4", Offset = "0x173FC4")]
	private sealed class <WaitForFadeOut>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <frames>__0;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <time>__0;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <startFPS>__0;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal LoadingRoom $this;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x17000553")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002676")]
			[Address(RVA = "0x3587C8", Offset = "0x3587C8", VA = "0x3587C8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000554")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002677")]
			[Address(RVA = "0x3587D0", Offset = "0x3587D0", VA = "0x3587D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x358108", Offset = "0x358108", VA = "0x358108")]
		[DebuggerHidden]
		public <WaitForFadeOut>c__Iterator4()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x3585AC", Offset = "0x3585AC", VA = "0x3585AC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x3587D8", Offset = "0x3587D8", VA = "0x3587D8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x3587EC", Offset = "0x3587EC", VA = "0x3587EC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_blackRoomGroup;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject m_loadingRoomGroup;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_piratedGroup;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_notLoggedInXboxLive;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_waitingOnControllerGroup;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_recenterGroup;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject m_logoGroup;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_wearHelmetGroup;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_helmetGroup;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_xboxControllerGroup;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private GameObject m_ps4ControllerGroup;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_touchControllerGroup;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private GameObject m_gearVrControllerGroup;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_oculusGoControllerGroup;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private GameObject m_waveControllerGroup;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_daydreamControllerGroup;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private GameObject m_microsoftMRControllerGroup;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool m_useSaveComputer;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private GameObject m_saveComputerGroup;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private InteractableInput m_helmetInput;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private MoveObject m_helmetMover;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_WaitTime;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private LevelLoader m_levelLoader;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_forceLoad;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private TextMesh m_notOwnedOculus;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMesh m_waitingOnControllerTextA;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private TextMesh m_waitingOnControllerTextB;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMesh m_waitingOnControllerTextC;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private TextMesh m_recenterVrTextA;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMesh m_wearHelmetTextA;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private TextMesh m_wearHelmetTextB;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ROOM_STATE m_roomState;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool m_loadingStateReady;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ScreenFader m_screenFader;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LanguageManager m_languageManager;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static LoadingRoom m_loadingRoom;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine m_waitForQuitNotOwned;

	[Token(Token = "0x17000379")]
	public ROOM_STATE RoomState
	{
		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x35676C", Offset = "0x35676C", VA = "0x35676C")]
		get
		{
			return default(ROOM_STATE);
		}
	}

	[Token(Token = "0x1700037A")]
	public bool LoadingStateReady
	{
		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x35677C", Offset = "0x35677C", VA = "0x35677C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x356774", Offset = "0x356774", VA = "0x356774")]
		set
		{
		}
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x356764", Offset = "0x356764", VA = "0x356764")]
	public LoadingRoom()
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0x356784", Offset = "0x356784", VA = "0x356784")]
	public static LoadingRoom Instance()
	{
		return null;
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x35696C", Offset = "0x35696C", VA = "0x35696C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x356A6C", Offset = "0x356A6C", VA = "0x356A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x356EA4", Offset = "0x356EA4", VA = "0x356EA4")]
	[DebuggerHidden]
	private IEnumerator WaitForLoad()
	{
		return null;
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x356F30", Offset = "0x356F30", VA = "0x356F30")]
	[DebuggerHidden]
	private IEnumerator SkipLoadingRoom()
	{
		return null;
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x356FBC", Offset = "0x356FBC", VA = "0x356FBC")]
	public void ShowXboxNotLoggedInState()
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x356FC8", Offset = "0x356FC8", VA = "0x356FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x35719C", Offset = "0x35719C", VA = "0x35719C")]
	[DebuggerHidden]
	private IEnumerator _WaitForQuitNotOwned()
	{
		return null;
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x3575F4", Offset = "0x3575F4", VA = "0x3575F4")]
	public void TriggerLevelLoad()
	{
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x3576FC", Offset = "0x3576FC", VA = "0x3576FC")]
	[DebuggerHidden]
	private IEnumerator WaitForVisorDown()
	{
		return null;
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x357788", Offset = "0x357788", VA = "0x357788")]
	private void _SetGroupVisibility()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x357190", Offset = "0x357190", VA = "0x357190")]
	private void _NotOwnedState()
	{
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x357208", Offset = "0x357208", VA = "0x357208")]
	private void _WaitingOnControllerState()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x3572D0", Offset = "0x3572D0", VA = "0x3572D0")]
	private void _VrRecenterState()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x3572DC", Offset = "0x3572DC", VA = "0x3572DC")]
	private void _VrRecenteredState()
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x3574E4", Offset = "0x3574E4", VA = "0x3574E4")]
	private void _WearHelmetState()
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x35752C", Offset = "0x35752C", VA = "0x35752C")]
	private void _SaveComputerState()
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x3575E8", Offset = "0x3575E8", VA = "0x3575E8")]
	private void _NotLoggedInState()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x358084", Offset = "0x358084", VA = "0x358084")]
	[DebuggerHidden]
	private IEnumerator WaitForFadeOut()
	{
		return null;
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x358110", Offset = "0x358110", VA = "0x358110")]
	private void GetPlayerMoney()
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x358258", Offset = "0x358258", VA = "0x358258")]
	private void _BeginLoading()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x358284", Offset = "0x358284", VA = "0x358284")]
	private void SetCameraPositionUp()
	{
	}
}
[Token(Token = "0x2000333")]
public class MirroredInputReferenceController : MonoBehaviour
{
	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173FD4", Offset = "0x173FD4")]
	private sealed class <_WaitForControlsInCenter>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MirroredInputReferenceController $this;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000555")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x361A00", Offset = "0x361A00", VA = "0x361A00", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000556")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600267D")]
			[Address(RVA = "0x361A08", Offset = "0x361A08", VA = "0x361A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x36165C", Offset = "0x36165C", VA = "0x36165C")]
		[DebuggerHidden]
		public <_WaitForControlsInCenter>c__Iterator0()
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x36195C", Offset = "0x36195C", VA = "0x36195C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x361A10", Offset = "0x361A10", VA = "0x361A10", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x361A24", Offset = "0x361A24", VA = "0x361A24", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MirroredInputReferenceController s_instance;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MovementInteractionManager m_movementInteractionManager;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform m_aircraftControls;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private InputMeasurement6DOF m_fuelSwitchInputMeasurement;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputMeasurement6DOF m_magnetoInputMeasurement;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InputMeasurement6DOF m_ignitionInputMeasurement;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputMeasurement6DOF m_flapsInputMeasurement;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private InputMeasurement6DOF m_throttleInputMeasurement;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_fuelSwitchMirrorTransform;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Transform m_magnetoMirrorTransform;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_ignitionMirrorTransform;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Transform m_flapsMirrorTransform;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform m_throttleMirrorTransform;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private List<Transform> m_transformsToUpdate;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> m_mirrorTransformsToUpdate;

	[Token(Token = "0x1700037B")]
	public static MirroredInputReferenceController Instance
	{
		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x360844", Offset = "0x360844", VA = "0x360844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037C")]
	public Transform FuelSwitchMirrorTransform
	{
		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x361634", Offset = "0x361634", VA = "0x361634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037D")]
	public Transform MagnetoMirrorTransform
	{
		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x36163C", Offset = "0x36163C", VA = "0x36163C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037E")]
	public Transform IgnitionMirrorTransform
	{
		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x361644", Offset = "0x361644", VA = "0x361644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037F")]
	public Transform FlapsMirrorTransform
	{
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x36164C", Offset = "0x36164C", VA = "0x36164C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000380")]
	public Transform ThrottleMirrorTransform
	{
		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x361654", Offset = "0x361654", VA = "0x361654")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x36083C", Offset = "0x36083C", VA = "0x36083C")]
	public MirroredInputReferenceController()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x3608D0", Offset = "0x3608D0", VA = "0x3608D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x360E88", Offset = "0x360E88", VA = "0x360E88")]
	private void Start()
	{
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x360E8C", Offset = "0x360E8C", VA = "0x360E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x361468", Offset = "0x361468", VA = "0x361468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x361504", Offset = "0x361504", VA = "0x361504")]
	private void _DestroyMirrorObjects()
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x360E04", Offset = "0x360E04", VA = "0x360E04")]
	[DebuggerHidden]
	private IEnumerator _WaitForControlsInCenter()
	{
		return null;
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x360AA8", Offset = "0x360AA8", VA = "0x360AA8")]
	private void _CreateMirrorTransforms()
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x360E90", Offset = "0x360E90", VA = "0x360E90")]
	private void _UpdateMirrorTransformPositions()
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x36166C", Offset = "0x36166C", VA = "0x36166C")]
	private Transform _CreateMirror(Transform originalTransform)
	{
		return null;
	}
}
[Token(Token = "0x2000334")]
public class MovementInteractionManager : MonoBehaviour
{
	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173FE4", Offset = "0x173FE4")]
	private sealed class <WaitForInitialization>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MovementInteractionManager $this;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000557")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002682")]
			[Address(RVA = "0x36578C", Offset = "0x36578C", VA = "0x36578C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000558")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002683")]
			[Address(RVA = "0x365794", Offset = "0x365794", VA = "0x365794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x363D34", Offset = "0x363D34", VA = "0x363D34")]
		[DebuggerHidden]
		public <WaitForInitialization>c__Iterator0()
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x365668", Offset = "0x365668", VA = "0x365668", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x36579C", Offset = "0x36579C", VA = "0x36579C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x3657B0", Offset = "0x3657B0", VA = "0x3657B0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x173FF4", Offset = "0x173FF4")]
	private sealed class <DelayCenter>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MovementInteractionManager $this;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000559")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x3655BC", Offset = "0x3655BC", VA = "0x3655BC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002689")]
			[Address(RVA = "0x3655C4", Offset = "0x3655C4", VA = "0x3655C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x365290", Offset = "0x365290", VA = "0x365290")]
		[DebuggerHidden]
		public <DelayCenter>c__Iterator1()
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x3653F0", Offset = "0x3653F0", VA = "0x3653F0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x3655CC", Offset = "0x3655CC", VA = "0x3655CC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x3655E0", Offset = "0x3655E0", VA = "0x3655E0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MovementInteractionManager s_instance;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Action InitializeStartTransform;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform m_camera;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_cameraRoot;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_cameraMirror;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_mirrorRoot;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Transform m_aircraftControls;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_aircraftControlsOriginalPosition;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform m_aircraftCamOrigin;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_controlsIsInCenter;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Coroutine m_initializator;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_leftHand;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform m_leftHandMirror;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_rightHand;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform m_rightHandMirror;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SkinnedMeshRenderer m_leftHandRenderer;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private SkinnedMeshRenderer m_leftHandRendererMirror;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer m_rightHandRenderer;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private SkinnedMeshRenderer m_rightHandRendererMirror;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameManager m_gameManager;

	[Token(Token = "0x17000381")]
	public static MovementInteractionManager Instance
	{
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x360A3C", Offset = "0x360A3C", VA = "0x360A3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000382")]
	public Transform AircraftControls
	{
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x361664", Offset = "0x361664", VA = "0x361664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000383")]
	public Transform AircraftControlsOriginalPosition
	{
		[Token(Token = "0x6001700")]
		[Address(RVA = "0x361950", Offset = "0x361950", VA = "0x361950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000384")]
	public bool ControlIsInCenter
	{
		[Token(Token = "0x6001701")]
		[Address(RVA = "0x360AA0", Offset = "0x360AA0", VA = "0x360AA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000385")]
	public bool IsMirrorsEnabled
	{
		[Token(Token = "0x6001702")]
		[Address(RVA = "0x363914", Offset = "0x363914", VA = "0x363914")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x36390C", Offset = "0x36390C", VA = "0x36390C")]
	public MovementInteractionManager()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x36391C", Offset = "0x36391C", VA = "0x36391C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x363C88", Offset = "0x363C88", VA = "0x363C88")]
	private void Start()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x363CB0", Offset = "0x363CB0", VA = "0x363CB0")]
	[DebuggerHidden]
	private IEnumerator WaitForInitialization()
	{
		return null;
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0x363D3C", Offset = "0x363D3C", VA = "0x363D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0x363EA8", Offset = "0x363EA8", VA = "0x363EA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0x364204", Offset = "0x364204", VA = "0x364204")]
	private void _Initialize()
	{
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0x3639F8", Offset = "0x3639F8", VA = "0x3639F8")]
	private void AddListeners()
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x363F74", Offset = "0x363F74", VA = "0x363F74")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x364768", Offset = "0x364768", VA = "0x364768")]
	private void SetControlsToCenter()
	{
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x364CD8", Offset = "0x364CD8", VA = "0x364CD8")]
	private void ParentMirrorToObject(Transform obj, bool ofParent = false, bool resetTransform = true)
	{
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x364630", Offset = "0x364630", VA = "0x364630")]
	private void SwapHandRenderers(bool showMirrors)
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x364DFC", Offset = "0x364DFC", VA = "0x364DFC")]
	private void SwitchCullingMask(Camera camera1, Camera camera2)
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x364F30", Offset = "0x364F30", VA = "0x364F30")]
	private void SwitchFlags(Camera camera1, Camera camera2)
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x364BAC", Offset = "0x364BAC", VA = "0x364BAC")]
	private void ResetTransform(Transform obj)
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x364FC4", Offset = "0x364FC4", VA = "0x364FC4")]
	private void ReturnControlsToDefault()
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x36520C", Offset = "0x36520C", VA = "0x36520C")]
	[DebuggerHidden]
	private IEnumerator DelayCenter()
	{
		return null;
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x365298", Offset = "0x365298", VA = "0x365298")]
	public void OnAircraftLoaded(ControllerAircraft aircraftController)
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x3653D4", Offset = "0x3653D4", VA = "0x3653D4")]
	private void OnGameStateChanging(GAME_STATE prevGameState, GAME_STATE currentGameState)
	{
	}
}
[Token(Token = "0x2000335")]
public class ObjectPooler
{
	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<GameObject> pooledObjects;

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x3FA40C", Offset = "0x3FA40C", VA = "0x3FA40C")]
	public ObjectPooler()
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x3FA498", Offset = "0x3FA498", VA = "0x3FA498")]
	public void Init(GameObject objectToPool, int numberToPool, [Optional] Transform parent)
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x3FA61C", Offset = "0x3FA61C", VA = "0x3FA61C")]
	public void SetScene(Scene parentScene)
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x3FA6E8", Offset = "0x3FA6E8", VA = "0x3FA6E8")]
	public GameObject GetPooledObject(GameObject objectToPool, [Optional] Transform parent)
	{
		return null;
	}
}
[Token(Token = "0x2000336")]
public class OfficeController : MonoBehaviour
{
	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GAME_STATE m_lastGameState;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_officeCameraPositon;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_officeAssembly;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_activeIndicatorSim;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_activeIndicatorArcade;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_activeIndicatorUltralight;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject m_activeIndicatorGlider;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_activeIndicatorSport;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_activeIndicatorRacer;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_activeIndicatorNone;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private GameObject m_activeIndicatorClear;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_activeIndicatorComfortable;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private GameObject m_activeIndicatorWayward;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_activeIndicatorMtThompson;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private GameObject m_activeIndicatorParadiseCove;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_activeIndicatorFarmland;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private GameObject m_photoUltralight;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_photoGlider;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private GameObject m_photoSport;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_photoRacer;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private GameObject m_polaroidUltralight;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_polaroidGlider;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private GameObject m_polaroidSport;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject m_polaroidRacer;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private GameObject m_polaroidUltralightTrigger;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject m_polaroidGliderTrigger;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private GameObject m_polaroidSportTrigger;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject m_polaroidRacerTrigger;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Transform m_speakerPosTform;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ControllerComputer m_controllerComputer;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private AudioSource[] m_audioSources;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float m_audioFadeTime;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_currentAudioFadeTime;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_startVolume;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float m_finalVolume;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float m_currentVolume;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool s_isStart;

	[Token(Token = "0x17000386")]
	public ControllerComputer ControllerComputer
	{
		[Token(Token = "0x600171A")]
		[Address(RVA = "0x2ABA88", Offset = "0x2ABA88", VA = "0x2ABA88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x2ABA74", Offset = "0x2ABA74", VA = "0x2ABA74")]
	public OfficeController()
	{
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0x2ABA90", Offset = "0x2ABA90", VA = "0x2ABA90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0x2ABB84", Offset = "0x2ABB84", VA = "0x2ABB84")]
	private void Start()
	{
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0x2ABCD0", Offset = "0x2ABCD0", VA = "0x2ABCD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0x2ACFCC", Offset = "0x2ACFCC", VA = "0x2ACFCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600171F")]
	[Address(RVA = "0x2AD228", Offset = "0x2AD228", VA = "0x2AD228")]
	private void Update()
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0x2AD694", Offset = "0x2AD694", VA = "0x2AD694")]
	public void Init(bool initComputer = true, bool clearCurrentLevelVars = false)
	{
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0x2ABEE8", Offset = "0x2ABEE8", VA = "0x2ABEE8")]
	private void _InitOffice(bool initComputer = true, bool clearCurrentLevelVars = false)
	{
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0x2AD244", Offset = "0x2AD244", VA = "0x2AD244")]
	private void _UpdateCameraPosition()
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0x2AD698", Offset = "0x2AD698", VA = "0x2AD698")]
	public int GetIslandNumber(int office)
	{
		return default(int);
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0x2ABBA0", Offset = "0x2ABBA0", VA = "0x2ABBA0")]
	private void _GetAudioSources()
	{
	}

	[Token(Token = "0x6001725")]
	[Address(RVA = "0x2ABC3C", Offset = "0x2ABC3C", VA = "0x2ABC3C")]
	private void _InitAudioSources()
	{
	}

	[Token(Token = "0x6001726")]
	[Address(RVA = "0x2ABEA0", Offset = "0x2ABEA0", VA = "0x2ABEA0")]
	private void _StartFade(bool enabled, bool force = false)
	{
	}

	[Token(Token = "0x6001727")]
	[Address(RVA = "0x2AD09C", Offset = "0x2AD09C", VA = "0x2AD09C")]
	private void _SetVolume(float volume)
	{
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0x2AD52C", Offset = "0x2AD52C", VA = "0x2AD52C")]
	private void _UpdateAudioVolume()
	{
	}
}
[Token(Token = "0x2000337")]
public class PauseBoxController : MonoBehaviour
{
	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject officeCameraPositon;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject pauseBoxAssembly;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject currentSunLight;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PAUSE_STATE currentPausedState;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static PauseBoxController pauseBoxController;

	[Token(Token = "0x600172A")]
	[Address(RVA = "0x27AE1C", Offset = "0x27AE1C", VA = "0x27AE1C")]
	public PauseBoxController()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0x27AE2C", Offset = "0x27AE2C", VA = "0x27AE2C")]
	public static PauseBoxController Instance()
	{
		return null;
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0x27B014", Offset = "0x27B014", VA = "0x27B014")]
	private void Start()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0x27B0D0", Offset = "0x27B0D0", VA = "0x27B0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0x27B0D4", Offset = "0x27B0D4", VA = "0x27B0D4")]
	private void CheckForPause()
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x27B1B0", Offset = "0x27B1B0", VA = "0x27B1B0")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x27B280", Offset = "0x27B280", VA = "0x27B280")]
	public void UnpauseGame()
	{
	}
}
[Token(Token = "0x2000338")]
public static class LevelDebugData
{
	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool JSONOnlySave;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool SaveFullData;

	[Token(Token = "0x4001274")]
	public const int MaxJobsPerLevel = 7;
}
[Token(Token = "0x2000339")]
public class LevelData
{
	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool IsNew;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool IsPassed;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MEDAL_TYPE CurrentMedal;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float TimeAtEnd;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int MoneyClaimed;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeliveryTouchdownDistance;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int NumberPackagesGathered;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberRingsGathered;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int NumberBalloonsPopped;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int NumberPhotosTaken;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int NumberOfPlanesBeaten;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ScoreEarned;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int HighScore;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int PercentCompleted;

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x443964", Offset = "0x443964", VA = "0x443964")]
	public LevelData(LevelData src)
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x443B20", Offset = "0x443B20", VA = "0x443B20")]
	public LevelData()
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x443B3C", Offset = "0x443B3C", VA = "0x443B3C")]
	public string ToJSON()
	{
		return null;
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x443B40", Offset = "0x443B40", VA = "0x443B40")]
	public string Serialize()
	{
		return null;
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0x444284", Offset = "0x444284", VA = "0x444284")]
	public static string CreateSerializeKeyHelper()
	{
		return null;
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x444928", Offset = "0x444928", VA = "0x444928")]
	public static LevelData Deserialize(string incoming)
	{
		return null;
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x4450C8", Offset = "0x4450C8", VA = "0x4450C8")]
	public static void CreateLevelData(Dictionary<string, object> mainData, Dictionary<string, object> sourceData)
	{
	}
}
[Token(Token = "0x200033A")]
public class PlayerData
{
	[Token(Token = "0x2000341")]
	public enum TriggerTypes
	{
		[Token(Token = "0x40012D6")]
		Finishedtutorial01,
		[Token(Token = "0x40012D7")]
		Finishedtutorial01office1,
		[Token(Token = "0x40012D8")]
		Finishedtutorial01office2,
		[Token(Token = "0x40012D9")]
		Finishedtutorial01office3,
		[Token(Token = "0x40012DA")]
		Finishedtutorial01office4,
		[Token(Token = "0x40012DB")]
		Finishedtutorial01vehicle,
		[Token(Token = "0x40012DC")]
		Finishedtutorial01vehicle1,
		[Token(Token = "0x40012DD")]
		Finishedtutorial01vehicle2,
		[Token(Token = "0x40012DE")]
		Finishedtutorial02,
		[Token(Token = "0x40012DF")]
		Finishedtutorial02vehicle,
		[Token(Token = "0x40012E0")]
		Finishedtutorial02vehicle1,
		[Token(Token = "0x40012E1")]
		Finishedtutorial02vehicle2,
		[Token(Token = "0x40012E2")]
		Finishedtutorial02vehicle3,
		[Token(Token = "0x40012E3")]
		Finishedtutorial03,
		[Token(Token = "0x40012E4")]
		Finishedtutorial03vehicle,
		[Token(Token = "0x40012E5")]
		Finishedtutorial03vehicle1,
		[Token(Token = "0x40012E6")]
		Finishedtutorial03vehicle2,
		[Token(Token = "0x40012E7")]
		Finishedtutorial03vehicle3,
		[Token(Token = "0x40012E8")]
		Finishedtutorial04,
		[Token(Token = "0x40012E9")]
		Finishedtutorial04vehicle,
		[Token(Token = "0x40012EA")]
		Finishedtutorial04vehicle1,
		[Token(Token = "0x40012EB")]
		Finishedtutorial04vehicle2,
		[Token(Token = "0x40012EC")]
		Finishedtutorial04vehicle3,
		[Token(Token = "0x40012ED")]
		Finishedtutorial05,
		[Token(Token = "0x40012EE")]
		Finishedtutorial05vehicle,
		[Token(Token = "0x40012EF")]
		Finishedtutorial05vehicle1,
		[Token(Token = "0x40012F0")]
		Finishedtutorial05vehicle2,
		[Token(Token = "0x40012F1")]
		Finishedtutorial05vehicle3,
		[Token(Token = "0x40012F2")]
		Finishedtutorial05vehicle4,
		[Token(Token = "0x40012F3")]
		Finishedtutorial06,
		[Token(Token = "0x40012F4")]
		Finishedtutorial06vehicle,
		[Token(Token = "0x40012F5")]
		Finishedtutorial06vehicle1,
		[Token(Token = "0x40012F6")]
		Finishedtutorial06vehicle2,
		[Token(Token = "0x40012F7")]
		Finishedtutorial06vehicle3,
		[Token(Token = "0x40012F8")]
		Finishedtutorial06vehicle4,
		[Token(Token = "0x40012F9")]
		Finishedtutorial06vehicle5,
		[Token(Token = "0x40012FA")]
		Finishedglidertutorial01,
		[Token(Token = "0x40012FB")]
		Finishedglidertutorial01vehicle,
		[Token(Token = "0x40012FC")]
		Finishedglidertutorial01vehicle1,
		[Token(Token = "0x40012FD")]
		Finishedglidertutorial02,
		[Token(Token = "0x40012FE")]
		Finishedglidertutorial02vehicle,
		[Token(Token = "0x40012FF")]
		Finishedglidertutorial02vehicle1,
		[Token(Token = "0x4001300")]
		Finishedglidertutorial03,
		[Token(Token = "0x4001301")]
		Finishedglidertutorial03vehicle,
		[Token(Token = "0x4001302")]
		Finishedglidertutorial03vehicle1,
		[Token(Token = "0x4001303")]
		Finishedglidertutorial04,
		[Token(Token = "0x4001304")]
		Finishedglidertutorial04vehicle,
		[Token(Token = "0x4001305")]
		Finishedglidertutorial04vehicle1,
		[Token(Token = "0x4001306")]
		Finishedglidertutorial05,
		[Token(Token = "0x4001307")]
		Finishedglidertutorial05vehicle,
		[Token(Token = "0x4001308")]
		Finishedglidertutorial05vehicle1,
		[Token(Token = "0x4001309")]
		Finishedsporttutorial01,
		[Token(Token = "0x400130A")]
		Finishedsporttutorial01vehicle,
		[Token(Token = "0x400130B")]
		Finishedsporttutorial01vehicle1,
		[Token(Token = "0x400130C")]
		Finishedsporttutorial02,
		[Token(Token = "0x400130D")]
		Finishedsporttutorial02vehicle,
		[Token(Token = "0x400130E")]
		Finishedsporttutorial02vehicle1,
		[Token(Token = "0x400130F")]
		Finishedsporttutorial03,
		[Token(Token = "0x4001310")]
		Finishedsporttutorial03vehicle,
		[Token(Token = "0x4001311")]
		Finishedsporttutorial03vehicle1,
		[Token(Token = "0x4001312")]
		Finishedsporttutorial04,
		[Token(Token = "0x4001313")]
		Finishedsporttutorial04vehicle,
		[Token(Token = "0x4001314")]
		Finishedsporttutorial04vehicle1,
		[Token(Token = "0x4001315")]
		Finishedsporttutorial04vehicle2,
		[Token(Token = "0x4001316")]
		Finishedsporttutorial04vehicle3,
		[Token(Token = "0x4001317")]
		Finishedsporttutorial04vehicle4,
		[Token(Token = "0x4001318")]
		Finishedsporttutorial04vehicle5,
		[Token(Token = "0x4001319")]
		Finishedsporttutorial05,
		[Token(Token = "0x400131A")]
		Finishedsporttutorial05vehicle,
		[Token(Token = "0x400131B")]
		Finishedsporttutorial05vehicle1,
		[Token(Token = "0x400131C")]
		CanbuyWaywardIsleMain,
		[Token(Token = "0x400131D")]
		CanbuyVolcanoIsland,
		[Token(Token = "0x400131E")]
		FirstenterVolcanoIslandSatellite,
		[Token(Token = "0x400131F")]
		FirstenterVolcanoIslandMain,
		[Token(Token = "0x4001320")]
		CanbuyVolcanoIslandMain,
		[Token(Token = "0x4001321")]
		CanbuyParadiseCoveSatellite,
		[Token(Token = "0x4001322")]
		FirstenterParadiseCoveSatellite,
		[Token(Token = "0x4001323")]
		FirstenterParadiseCoveMain,
		[Token(Token = "0x4001324")]
		CanbuyParadiseCoveMain,
		[Token(Token = "0x4001325")]
		Canbuyglider,
		[Token(Token = "0x4001326")]
		Haspurchasedglider,
		[Token(Token = "0x4001327")]
		Canbuysport,
		[Token(Token = "0x4001328")]
		Haspurchasedsport,
		[Token(Token = "0x4001329")]
		Firstchangevehicle,
		[Token(Token = "0x400132A")]
		Finishedtutorial05vehicle6,
		[Token(Token = "0x400132B")]
		Finishedtutorial05vehicle7,
		[Token(Token = "0x400132C")]
		RingRush,
		[Token(Token = "0x400132D")]
		RingCourse,
		[Token(Token = "0x400132E")]
		BalloonPop,
		[Token(Token = "0x400132F")]
		BalloonCourse,
		[Token(Token = "0x4001330")]
		Delivery,
		[Token(Token = "0x4001331")]
		Emergency,
		[Token(Token = "0x4001332")]
		PhotoOpUltralight,
		[Token(Token = "0x4001333")]
		PhotoOpGlider,
		[Token(Token = "0x4001334")]
		PhotoOpSport,
		[Token(Token = "0x4001335")]
		TouchAndGo,
		[Token(Token = "0x4001336")]
		RingRushAnnouncement,
		[Token(Token = "0x4001337")]
		RingCourseAnnouncement,
		[Token(Token = "0x4001338")]
		BalloonPopAnnouncement,
		[Token(Token = "0x4001339")]
		BalloonCourseAnnouncement,
		[Token(Token = "0x400133A")]
		DeliveryAnnouncement,
		[Token(Token = "0x400133B")]
		EmergencyAnnouncement,
		[Token(Token = "0x400133C")]
		PhotoOpAnnouncement,
		[Token(Token = "0x400133D")]
		TouchandGoAnnouncement,
		[Token(Token = "0x400133E")]
		TutorialHandseenbefore,
		[Token(Token = "0x400133F")]
		FirstEnterMain,
		[Token(Token = "0x4001340")]
		XMissionsInOffice01BFreeFlight,
		[Token(Token = "0x4001341")]
		XMissionsInOffice01AReturn,
		[Token(Token = "0x4001342")]
		XMissionsInOffice02BReturn,
		[Token(Token = "0x4001343")]
		XMissionsInOffice02AReturn,
		[Token(Token = "0x4001344")]
		XMissionsInOffice03BReturn,
		[Token(Token = "0x4001345")]
		XMissionsInOffice03AReturn,
		[Token(Token = "0x4001346")]
		FirStPressKeyboard,
		[Token(Token = "0x4001347")]
		Finishedracertutorial01,
		[Token(Token = "0x4001348")]
		Finishedracertutorial01vehicle,
		[Token(Token = "0x4001349")]
		Finishedracertutorial01vehicle1,
		[Token(Token = "0x400134A")]
		Finishedracertutorial02,
		[Token(Token = "0x400134B")]
		Finishedracertutorial02vehicle,
		[Token(Token = "0x400134C")]
		Finishedracertutorial02vehicle1,
		[Token(Token = "0x400134D")]
		Finishedracertutorial03,
		[Token(Token = "0x400134E")]
		Finishedracertutorial03vehicle,
		[Token(Token = "0x400134F")]
		Finishedracertutorial03vehicle1,
		[Token(Token = "0x4001350")]
		Finishedracertutorial04,
		[Token(Token = "0x4001351")]
		Finishedracertutorial04vehicle,
		[Token(Token = "0x4001352")]
		Finishedracertutorial04vehicle1,
		[Token(Token = "0x4001353")]
		Finishedracertutorial05,
		[Token(Token = "0x4001354")]
		Finishedracertutorial05vehicle,
		[Token(Token = "0x4001355")]
		Finishedracertutorial05vehicle1,
		[Token(Token = "0x4001356")]
		CanbuyBozenburgIslandSatellite,
		[Token(Token = "0x4001357")]
		CanbuyBozenburgIslandMain,
		[Token(Token = "0x4001358")]
		FirstenterBozenburgIslandSatellite,
		[Token(Token = "0x4001359")]
		FirstenterBozenburgIslandMain,
		[Token(Token = "0x400135A")]
		Canbuyracer,
		[Token(Token = "0x400135B")]
		Haspurchasedracer,
		[Token(Token = "0x400135C")]
		RaceAnnouncement
	}

	[Token(Token = "0x4001283")]
	public const int SaveVersionNumber = 12;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SiteBlocker.MODE ComfortSetting;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int FlightControlType;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Language;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int CurrentIsland;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CurrentOffice;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CurrentVehicle;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int CurrentLevelType;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int CurrentJob;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool NewGame;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int RingsPassedThrough;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PhotosTaken;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int BalloonsPopped;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int PackagesGathered;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int Money;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, object> _data;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Dictionary<string, object> _levelData;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, object> _triggers;

	[Token(Token = "0x17000387")]
	public string GameName
	{
		[Token(Token = "0x600173A")]
		[Address(RVA = "0x27CE28", Offset = "0x27CE28", VA = "0x27CE28")]
		get
		{
			return null;
		}
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x27CE90", Offset = "0x27CE90", VA = "0x27CE90")]
		set
		{
		}
	}

	[Token(Token = "0x17000388")]
	public int VersionNumber
	{
		[Token(Token = "0x600173C")]
		[Address(RVA = "0x27CF20", Offset = "0x27CF20", VA = "0x27CF20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x27CF8C", Offset = "0x27CF8C", VA = "0x27CF8C")]
		set
		{
		}
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0x27CD6C", Offset = "0x27CD6C", VA = "0x27CD6C")]
	public PlayerData()
	{
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0x27D044", Offset = "0x27D044", VA = "0x27D044")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x181A18", Offset = "0x181A18")]
	public bool GetTrigger(int trigger)
	{
		return default(bool);
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x27D048", Offset = "0x27D048", VA = "0x27D048")]
	public bool GetTrigger(TriggerTypes trigger)
	{
		return default(bool);
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x27D12C", Offset = "0x27D12C", VA = "0x27D12C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x181A4C", Offset = "0x181A4C")]
	public void SetTrigger(int trigger, bool set = true)
	{
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x27D130", Offset = "0x27D130", VA = "0x27D130")]
	public void SetTrigger(TriggerTypes trigger, bool set = true)
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x27D244", Offset = "0x27D244", VA = "0x27D244")]
	public void SetTriggerIfDoesntExist(TriggerTypes trigger, bool set = true)
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x27D390", Offset = "0x27D390", VA = "0x27D390")]
	public bool IsOfficeOwned(OFFICE_TYPE office)
	{
		return default(bool);
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0x27D4C0", Offset = "0x27D4C0", VA = "0x27D4C0")]
	public void OwnOffice(OFFICE_TYPE office, bool setOwned)
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x27D624", Offset = "0x27D624", VA = "0x27D624")]
	public bool IsVehicleOwned(VEHICLE_TYPE vehicle)
	{
		return default(bool);
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x27D754", Offset = "0x27D754", VA = "0x27D754")]
	public void OwnVehicle(VEHICLE_TYPE vehicle, bool setOwned)
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x27D8B8", Offset = "0x27D8B8", VA = "0x27D8B8")]
	public bool IsOfficeUnlocked(OFFICE_TYPE office)
	{
		return default(bool);
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x27D9E8", Offset = "0x27D9E8", VA = "0x27D9E8")]
	public void UnlockOffice(OFFICE_TYPE office, bool setUnlocked)
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0x27DB4C", Offset = "0x27DB4C", VA = "0x27DB4C")]
	public bool IsVehicleUnlocked(VEHICLE_TYPE vehicle)
	{
		return default(bool);
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0x27DC7C", Offset = "0x27DC7C", VA = "0x27DC7C")]
	public void UnlockVehicle(VEHICLE_TYPE vehicle, bool setUnlocked)
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0x27DDE0", Offset = "0x27DDE0", VA = "0x27DDE0")]
	public void SetLevelData(int office, int vehicle, int level, int job, LevelData levelData)
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x27E0B4", Offset = "0x27E0B4", VA = "0x27E0B4")]
	public bool LevelDataExists(int office, int vehicle, int level, int job)
	{
		return default(bool);
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x27E380", Offset = "0x27E380", VA = "0x27E380")]
	public LevelData GetLevelData(int office, int vehicle, int level, int job)
	{
		return null;
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x27E7AC", Offset = "0x27E7AC", VA = "0x27E7AC")]
	public string GetLevelName(int office, int vehicle, int level, int job)
	{
		return null;
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x27E920", Offset = "0x27E920", VA = "0x27E920")]
	public string GetLevelName(string key)
	{
		return null;
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x27EB7C", Offset = "0x27EB7C", VA = "0x27EB7C")]
	public void CountMedals(ref int gold, ref int silver, ref int bronze)
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x27EE28", Offset = "0x27EE28", VA = "0x27EE28")]
	public int CountMoney()
	{
		return default(int);
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x2801C8", Offset = "0x2801C8", VA = "0x2801C8")]
	public bool AreAllOfficesOwned()
	{
		return default(bool);
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x280410", Offset = "0x280410", VA = "0x280410")]
	public bool CheckGoldInAllJobs()
	{
		return default(bool);
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0x2807C0", Offset = "0x2807C0", VA = "0x2807C0")]
	public bool CheckGoldInOneNonLicenseJob()
	{
		return default(bool);
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0x280AEC", Offset = "0x280AEC", VA = "0x280AEC")]
	public float GetBronzeOrBetterPercentOfJobs()
	{
		return default(float);
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x281070", Offset = "0x281070", VA = "0x281070")]
	public string Serialize()
	{
		return null;
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x281ECC", Offset = "0x281ECC", VA = "0x281ECC")]
	public static PlayerData Deserialize(string incoming)
	{
		return null;
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x2826F8", Offset = "0x2826F8", VA = "0x2826F8")]
	public static PlayerData BuildNewPlayerData(PlayerData data)
	{
		return null;
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x283058", Offset = "0x283058", VA = "0x283058")]
	public static bool SaveGameToJSON(string saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x283768", Offset = "0x283768", VA = "0x283768")]
	public static bool ConvertGameFromJSON(string saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x283BBC", Offset = "0x283BBC", VA = "0x283BBC")]
	public void DebugTriggers()
	{
	}
}
[Token(Token = "0x200033B")]
public class RaceRecorderManager : MonoBehaviour
{
	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public RaceConfig racePlaybackConfig;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17B980", Offset = "0x17B980")]
	[SerializeField]
	private bool allowPlayback;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[SerializeField]
	private bool allowRecording;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17B9C0", Offset = "0x17B9C0")]
	[SerializeField]
	public KeyCode forceEndRecordingKey;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool pauseOnRecordingPlaybackStop;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17BA00", Offset = "0x17BA00")]
	[SerializeField]
	private BaseDataPathType basePath;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useTriggers;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool canRepeatRecording;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool isStart;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17BA60", Offset = "0x17BA60")]
	[SerializeField]
	private string recorderBaseName;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string recorderDirectory;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17BAA0", Offset = "0x17BAA0")]
	[SerializeField]
	private AircraftRecorder recorder;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AircraftRecPlayer playerRecorder;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private GenericTrigger startTrigger;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GenericTrigger endTrigger;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17BB00", Offset = "0x17BB00")]
	[SerializeField]
	private bool enableEndRecordingOnCrash;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _recordingStarted;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool _recordingEnded;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool _alreadyRecorded;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_playerAircraft;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private EnemyRacerAircraft[] _racers;

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x28B7C8", Offset = "0x28B7C8", VA = "0x28B7C8")]
	public RaceRecorderManager()
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x28B870", Offset = "0x28B870", VA = "0x28B870")]
	private void Start()
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x28BBF0", Offset = "0x28BBF0", VA = "0x28BBF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x28BC40", Offset = "0x28BC40", VA = "0x28BC40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x28BA90", Offset = "0x28BA90", VA = "0x28BA90")]
	private void AddAdditionalSettingsListeners()
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x28BEB0", Offset = "0x28BEB0", VA = "0x28BEB0")]
	private void RemoveAdditionalSettingsListeners()
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x28BC5C", Offset = "0x28BC5C", VA = "0x28BC5C")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x28B8A4", Offset = "0x28B8A4", VA = "0x28B8A4")]
	public void Initialize(Transform playerAircraft, bool useExistingTriggers = true)
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x28C5A8", Offset = "0x28C5A8", VA = "0x28C5A8")]
	private void InitializePlayback()
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x28BBF4", Offset = "0x28BBF4", VA = "0x28BBF4")]
	private void ProcessForceStopRecording()
	{
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x28C78C", Offset = "0x28C78C", VA = "0x28C78C")]
	private void StartPlayback()
	{
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x28C8C4", Offset = "0x28C8C4", VA = "0x28C8C4")]
	private void PausePlayback()
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x28C9C8", Offset = "0x28C9C8", VA = "0x28C9C8")]
	private void StopPlayback()
	{
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x28C778", Offset = "0x28C778", VA = "0x28C778")]
	private void EndPlayback()
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x28C290", Offset = "0x28C290", VA = "0x28C290")]
	private void InitializeValues()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x28C2A0", Offset = "0x28C2A0", VA = "0x28C2A0")]
	private void ListenForTriggers()
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x28C010", Offset = "0x28C010", VA = "0x28C010")]
	private void GetAircraft()
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x28CB0C", Offset = "0x28CB0C", VA = "0x28CB0C")]
	public void StartRecording(bool overrideExisting = false)
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x28CD00", Offset = "0x28CD00", VA = "0x28CD00")]
	public void StopRecording()
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x28CE44", Offset = "0x28CE44", VA = "0x28CE44")]
	public void ExportRecording()
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x28C680", Offset = "0x28C680", VA = "0x28C680")]
	private void EndRecordingAndExport()
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x28CEF8", Offset = "0x28CEF8", VA = "0x28CEF8")]
	private bool IsPlayer(Transform obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x28D040", Offset = "0x28D040", VA = "0x28D040")]
	private void SetRingTrigger(ControllerAircraft controller)
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0x28D2C8", Offset = "0x28D2C8", VA = "0x28D2C8")]
	private void OnAircraftAssigned(ControllerAircraft aircraftController)
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0x28D4AC", Offset = "0x28D4AC", VA = "0x28D4AC")]
	private void OnStartRecording(Transform obj)
	{
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0x28D4F4", Offset = "0x28D4F4", VA = "0x28D4F4")]
	private void OnStopRecording(Transform obj)
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0x28D538", Offset = "0x28D538", VA = "0x28D538")]
	private void OnPlaneCrash()
	{
	}
}
[Token(Token = "0x200033C")]
public class SetGameState : MonoBehaviour
{
	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174004", Offset = "0x174004")]
	private sealed class <_WaitForGameState>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GAME_STATE gameState;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SetGameState $this;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700055B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600268E")]
			[Address(RVA = "0x2FBF18", Offset = "0x2FBF18", VA = "0x2FBF18", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600268F")]
			[Address(RVA = "0x2FBF20", Offset = "0x2FBF20", VA = "0x2FBF20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x2FBDF4", Offset = "0x2FBDF4", VA = "0x2FBDF4")]
		[DebuggerHidden]
		public <_WaitForGameState>c__Iterator0()
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x2FBDFC", Offset = "0x2FBDFC", VA = "0x2FBDFC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x2FBF28", Offset = "0x2FBF28", VA = "0x2FBF28", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x2FBF3C", Offset = "0x2FBF3C", VA = "0x2FBF3C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GAME_STATE m_gameState;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GAME_STATE m_waitForGameState;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x2FAD2C", Offset = "0x2FAD2C", VA = "0x2FAD2C")]
	public SetGameState()
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x2FAD3C", Offset = "0x2FAD3C", VA = "0x2FAD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x2FAE08", Offset = "0x2FAE08", VA = "0x2FAE08")]
	[DebuggerHidden]
	private IEnumerator _WaitForGameState(GAME_STATE gameState)
	{
		return null;
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0x2FAEA8", Offset = "0x2FAEA8", VA = "0x2FAEA8")]
	private void _SetGameState(GAME_STATE gameState)
	{
	}
}
[Token(Token = "0x200033D")]
public class StaticVehicleManager : MonoBehaviour
{
	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174014", Offset = "0x174014")]
	private sealed class <_SpawnVehicle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform <location>__0;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal StaticVehicleManager $this;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700055D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002694")]
			[Address(RVA = "0x2C30BC", Offset = "0x2C30BC", VA = "0x2C30BC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002695")]
			[Address(RVA = "0x2C30C4", Offset = "0x2C30C4", VA = "0x2C30C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x2C2D70", Offset = "0x2C2D70", VA = "0x2C2D70")]
		[DebuggerHidden]
		public <_SpawnVehicle>c__Iterator0()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x2C2D78", Offset = "0x2C2D78", VA = "0x2C2D78", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x2C30CC", Offset = "0x2C30CC", VA = "0x2C30CC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x2C30E0", Offset = "0x2C30E0", VA = "0x2C30E0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_staticVehiclePosition;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_vehicleIsLoading;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject m_vehicleObject;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_loadedVehicle;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x600177B")]
	[Address(RVA = "0x2C2A44", Offset = "0x2C2A44", VA = "0x2C2A44")]
	public StaticVehicleManager()
	{
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0x2C2A54", Offset = "0x2C2A54", VA = "0x2C2A54")]
	private void Start()
	{
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0x2C2AE8", Offset = "0x2C2AE8", VA = "0x2C2AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0x2C2BF4", Offset = "0x2C2BF4", VA = "0x2C2BF4")]
	private void _UpdateStaticVehicle()
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x2C2CEC", Offset = "0x2C2CEC", VA = "0x2C2CEC")]
	[DebuggerHidden]
	private IEnumerator _SpawnVehicle()
	{
		return null;
	}
}
[Token(Token = "0x200033E")]
public class TriggerLanding : MonoBehaviour
{
	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174024", Offset = "0x174024")]
	private sealed class <WaitForAllLevelsLoaded>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TriggerLanding $this;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700055F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600269A")]
			[Address(RVA = "0x38246C", Offset = "0x38246C", VA = "0x38246C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000560")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0x382474", Offset = "0x382474", VA = "0x382474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x3803FC", Offset = "0x3803FC", VA = "0x3803FC")]
		[DebuggerHidden]
		public <WaitForAllLevelsLoaded>c__Iterator0()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x381D90", Offset = "0x381D90", VA = "0x381D90", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x38247C", Offset = "0x38247C", VA = "0x38247C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x382490", Offset = "0x382490", VA = "0x382490", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x17BB60", Offset = "0x17BB60")]
	public int pointsForGold;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int pointsForSilver;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int pointsForBronze;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x17BB9C", Offset = "0x17BB9C")]
	public float goldRadius;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float silverRadius;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bronzeRadius;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x17BBD8", Offset = "0x17BBD8")]
	public GameObject[] activationTargets;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _lastScore;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _withinRange;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager _gameManager;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelManager _levelManager;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Collider _collider;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _collisionObjectName;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_isTriggerDeactivated;

	[Token(Token = "0x17000389")]
	public bool scoreStillAvailable
	{
		[Token(Token = "0x6001781")]
		[Address(RVA = "0x380064", Offset = "0x380064", VA = "0x380064")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038A")]
	public int getLastScoreObtained
	{
		[Token(Token = "0x6001782")]
		[Address(RVA = "0x380090", Offset = "0x380090", VA = "0x380090")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700038B")]
	public bool IsTriggerDeactivated
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0x380B3C", Offset = "0x380B3C", VA = "0x380B3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x37FF9C", Offset = "0x37FF9C", VA = "0x37FF9C")]
	public TriggerLanding()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x380098", Offset = "0x380098", VA = "0x380098")]
	private void Start()
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0x380384", Offset = "0x380384", VA = "0x380384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x380300", Offset = "0x380300", VA = "0x380300")]
	[DebuggerHidden]
	private IEnumerator WaitForAllLevelsLoaded()
	{
		return null;
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x380404", Offset = "0x380404", VA = "0x380404")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x38016C", Offset = "0x38016C", VA = "0x38016C")]
	private void OnReset()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x380840", Offset = "0x380840", VA = "0x380840")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x3808FC", Offset = "0x3808FC", VA = "0x3808FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x3809B8", Offset = "0x3809B8", VA = "0x3809B8")]
	private void OnVehicleTakeOff()
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x3809BC", Offset = "0x3809BC", VA = "0x3809BC")]
	private void OnShowLandTarget()
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x380B44", Offset = "0x380B44", VA = "0x380B44")]
	private void DeactivateTrigger()
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x380CCC", Offset = "0x380CCC", VA = "0x380CCC")]
	private void OnVehicleLand()
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x3815F0", Offset = "0x3815F0", VA = "0x3815F0")]
	private void PlaySuccessRingClip(MEDAL_TYPE medal)
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x381908", Offset = "0x381908", VA = "0x381908")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x381D8C", Offset = "0x381D8C", VA = "0x381D8C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x381AE4", Offset = "0x381AE4", VA = "0x381AE4")]
	private void EditorDrawDeliveryRanges()
	{
	}
}
[Token(Token = "0x200033F")]
public enum IslandsRunways
{
	[Token(Token = "0x40012C1")]
	None = -1,
	[Token(Token = "0x40012C2")]
	Delivery,
	[Token(Token = "0x40012C3")]
	Island01_Main,
	[Token(Token = "0x40012C4")]
	Island01_Island,
	[Token(Token = "0x40012C5")]
	Island02_Main,
	[Token(Token = "0x40012C6")]
	Island02_Island,
	[Token(Token = "0x40012C7")]
	Island03_Main,
	[Token(Token = "0x40012C8")]
	Island03_Island,
	[Token(Token = "0x40012C9")]
	Island04_Main,
	[Token(Token = "0x40012CA")]
	Island04_Island
}
[Token(Token = "0x2000340")]
public class TriggerRunway : MonoBehaviour
{
	[Token(Token = "0x20005A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174034", Offset = "0x174034")]
	private sealed class <WaitForAllLevelsLoaded>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TriggerRunway $this;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000561")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x383CFC", Offset = "0x383CFC", VA = "0x383CFC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000562")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x383D04", Offset = "0x383D04", VA = "0x383D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x3829B0", Offset = "0x3829B0", VA = "0x3829B0")]
		[DebuggerHidden]
		public <WaitForAllLevelsLoaded>c__Iterator0()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x383B1C", Offset = "0x383B1C", VA = "0x383B1C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x383D0C", Offset = "0x383D0C", VA = "0x383D0C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x383D20", Offset = "0x383D20", VA = "0x383D20", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OFFICE_TYPE officeType;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject buyIcon;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Collider m_Collider;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider m_collisionCollider;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool inTrigger;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool m_reInitIslandTrigger;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string debugTriggerCollider;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LevelManager _levelManager;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_hasBeenInitialized;

	[Token(Token = "0x1700038C")]
	public bool ReInitIslandTrigger
	{
		[Token(Token = "0x6001794")]
		[Address(RVA = "0x3825C0", Offset = "0x3825C0", VA = "0x3825C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001795")]
		[Address(RVA = "0x3825C8", Offset = "0x3825C8", VA = "0x3825C8")]
		set
		{
		}
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x382518", Offset = "0x382518", VA = "0x382518")]
	public TriggerRunway()
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x3825D0", Offset = "0x3825D0", VA = "0x3825D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x382684", Offset = "0x382684", VA = "0x382684")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x382818", Offset = "0x382818", VA = "0x382818")]
	private void Start()
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x38297C", Offset = "0x38297C", VA = "0x38297C")]
	private void Update()
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x3828F8", Offset = "0x3828F8", VA = "0x3828F8")]
	[DebuggerHidden]
	private IEnumerator WaitForAllLevelsLoaded()
	{
		return null;
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x3829B8", Offset = "0x3829B8", VA = "0x3829B8")]
	private void Init()
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x3829DC", Offset = "0x3829DC", VA = "0x3829DC")]
	private void InitRunwayCollisionCollider()
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x382C3C", Offset = "0x382C3C", VA = "0x382C3C")]
	private void _SetRunwayCollisionCollider(ControllerAircraft controllerAircraft)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x382688", Offset = "0x382688", VA = "0x382688")]
	private void InitBuyIcons()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x382DE4", Offset = "0x382DE4", VA = "0x382DE4")]
	private bool _IsInTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x382F1C", Offset = "0x382F1C", VA = "0x382F1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x3831C0", Offset = "0x3831C0", VA = "0x3831C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x3833F0", Offset = "0x3833F0", VA = "0x3833F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x3839F8", Offset = "0x3839F8", VA = "0x3839F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x3835D8", Offset = "0x3835D8", VA = "0x3835D8")]
	private void EditorDrawDeliveryRanges(LevelManager levelManager)
	{
	}
}
[Token(Token = "0x2000342")]
public class VehicleSetup : MonoBehaviour
{
	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174044", Offset = "0x174044")]
	private sealed class <_WaitForLevelManagerGunSetup>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VehicleSetup $this;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000563")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x737BF4", Offset = "0x737BF4", VA = "0x737BF4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000564")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x737BFC", Offset = "0x737BFC", VA = "0x737BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x737A28", Offset = "0x737A28", VA = "0x737A28")]
		[DebuggerHidden]
		public <_WaitForLevelManagerGunSetup>c__Iterator0()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x737A30", Offset = "0x737A30", VA = "0x737A30", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x737C04", Offset = "0x737C04", VA = "0x737C04", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x737C18", Offset = "0x737C18", VA = "0x737C18", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_vehiclePosition;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_engineIsRunning;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_fuelInSeconds;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17BC58", Offset = "0x17BC58")]
	private float m_throttleAmount;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_currentKnots;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_launchVehicle;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ForceTableToMission;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform m_vehicleTransform;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_gunObj;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_gunModel;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x1700038D")]
	public bool EngineIsRunning
	{
		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x390E34", Offset = "0x390E34", VA = "0x390E34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038E")]
	public float FuelInSeconds
	{
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x390E3C", Offset = "0x390E3C", VA = "0x390E3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700038F")]
	public float ThrottleAmount
	{
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x390E44", Offset = "0x390E44", VA = "0x390E44")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x390E20", Offset = "0x390E20", VA = "0x390E20")]
	public VehicleSetup()
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x390E4C", Offset = "0x390E4C", VA = "0x390E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x390F9C", Offset = "0x390F9C", VA = "0x390F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x390FB0", Offset = "0x390FB0", VA = "0x390FB0")]
	private void _InitVehicle()
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x391C14", Offset = "0x391C14", VA = "0x391C14")]
	private void _SetupVehicle()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x391864", Offset = "0x391864", VA = "0x391864")]
	private void _SetupSpeakers()
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x39207C", Offset = "0x39207C", VA = "0x39207C")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManagerGunSetup()
	{
		return null;
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x392100", Offset = "0x392100", VA = "0x392100")]
	private void _ShowGunObject()
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x3924FC", Offset = "0x3924FC", VA = "0x3924FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x3919D4", Offset = "0x3919D4", VA = "0x3919D4")]
	private void OnAircraftAssigned(ControllerAircraft aircraftController)
	{
	}
}
[Token(Token = "0x2000343")]
public class AircraftPositions : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000344")]
	public class AircraftPosition
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform Position;

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x422148", Offset = "0x422148", VA = "0x422148")]
		public AircraftPosition()
		{
		}
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x422138", Offset = "0x422138", VA = "0x422138")]
	public AircraftPositions()
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x422140", Offset = "0x422140", VA = "0x422140", Slot = "4")]
	public virtual Transform GetAircraftPosition(int type)
	{
		return null;
	}
}
[Token(Token = "0x2000345")]
public class AircraftPositionsOffice : AircraftPositions
{
	[Serializable]
	[Token(Token = "0x2000346")]
	public class AircraftPositionOffice : AircraftPosition
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public OFFICE_TYPE Type;

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x422374", Offset = "0x422374", VA = "0x422374")]
		public AircraftPositionOffice()
		{
		}
	}

	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174054", Offset = "0x174054")]
	private sealed class <GetAircraftPosition>c__AnonStorey0
	{
		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int type;

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x422334", Offset = "0x422334", VA = "0x422334")]
		public <GetAircraftPosition>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x42233C", Offset = "0x42233C", VA = "0x42233C")]
		internal bool <>m__0(AircraftPositionOffice x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AircraftPositionOffice[] m_aircraftPositions;

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x422150", Offset = "0x422150", VA = "0x422150")]
	public AircraftPositionsOffice()
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x422158", Offset = "0x422158", VA = "0x422158", Slot = "4")]
	public override Transform GetAircraftPosition(int type)
	{
		return null;
	}
}
[Token(Token = "0x2000347")]
public class Balloon : MonoBehaviour, IProjectileTarget, IRevealable
{
	[Token(Token = "0x2000348")]
	public enum AwakeState
	{
		[Token(Token = "0x400138D")]
		active,
		[Token(Token = "0x400138E")]
		hidden
	}

	[Token(Token = "0x2000349")]
	public enum BALLOON_AUDIO_TYPE
	{
		[Token(Token = "0x4001390")]
		BigBalloon,
		[Token(Token = "0x4001391")]
		MediumBalloon,
		[Token(Token = "0x4001392")]
		SmallBalloon
	}

	[Token(Token = "0x200034A")]
	public delegate void BalloonEvent(Balloon balloon);

	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174064", Offset = "0x174064")]
	private sealed class <_WaitForLevelManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000565")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x43A1AC", Offset = "0x43A1AC", VA = "0x43A1AC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000566")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x43A1B4", Offset = "0x43A1B4", VA = "0x43A1B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x438418", Offset = "0x438418", VA = "0x438418")]
		[DebuggerHidden]
		public <_WaitForLevelManager>c__Iterator0()
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x43A05C", Offset = "0x43A05C", VA = "0x43A05C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x43A1BC", Offset = "0x43A1BC", VA = "0x43A1BC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x43A1D0", Offset = "0x43A1D0", VA = "0x43A1D0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_enableResize;

	[Token(Token = "0x400136D")]
	private const float MAX_SIZE = 1f;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 m_startSize;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_sourceSize;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_targetSize;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_initialScale;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_finalScale;

	[Token(Token = "0x4001373")]
	private const float REVEAL_TIME = 0.05f;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_elapsedRevealTime;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer m_renderer;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private AudioSource m_source;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip m_popInSound;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private AudioClip m_popOutSound;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_willPlayAudio;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public AwakeState currentState;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] objectsToShow;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float popMagnitude;

	[Token(Token = "0x400137E")]
	private const int scoreValueOnPop = 1;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_isPoppable;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_materialIndex;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelManager levelManager;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private DefaultAudioManager defaultAudio;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isShot;

	[Token(Token = "0x4001385")]
	private const float MAX_SCALE_PARTICLE = 5f;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private BALLOON_AUDIO_TYPE m_balloonAudioType;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private AudioMixerGroup m_audioMixerGroup;

	[Token(Token = "0x4001388")]
	private const float GAIN = 8f;

	[Token(Token = "0x4001389")]
	private const float MIN_AUDIO_DISTANCE = 20f;

	[Token(Token = "0x400138A")]
	private const float MAX_AUDIO_DISTANCE = 100f;

	[Token(Token = "0x14000033")]
	public event BalloonEvent BalloonShotEvent
	{
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x438608", Offset = "0x438608", VA = "0x438608")]
		add
		{
		}
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x438714", Offset = "0x438714", VA = "0x438714")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public event BalloonEvent OnDestroyEvent
	{
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x439E2C", Offset = "0x439E2C", VA = "0x439E2C")]
		add
		{
		}
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x439F38", Offset = "0x439F38", VA = "0x439F38")]
		remove
		{
		}
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x437118", Offset = "0x437118", VA = "0x437118")]
	public Balloon()
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x4371FC", Offset = "0x4371FC", VA = "0x4371FC", Slot = "4")]
	public void Hit()
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x437330", Offset = "0x437330", VA = "0x437330")]
	private void _UpdateReveal()
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x437C54", Offset = "0x437C54", VA = "0x437C54")]
	public void RevealBalloon(bool immediately = false, bool willPlayAudio = true)
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x437C7C", Offset = "0x437C7C", VA = "0x437C7C", Slot = "5")]
	public void _Reveal(bool immediately)
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x437F00", Offset = "0x437F00", VA = "0x437F00")]
	public void HideBalloon(bool immediately = false, bool willPlayAudio = true)
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x437F24", Offset = "0x437F24", VA = "0x437F24", Slot = "6")]
	public void _Hide(bool immediately)
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x4381C0", Offset = "0x4381C0", VA = "0x4381C0")]
	public void SetMaterialIndex(int index)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x4381C8", Offset = "0x4381C8", VA = "0x4381C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x4383AC", Offset = "0x4383AC", VA = "0x4383AC")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManager()
	{
		return null;
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x438420", Offset = "0x438420", VA = "0x438420")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x438568", Offset = "0x438568", VA = "0x438568")]
	private void Update()
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x43856C", Offset = "0x43856C", VA = "0x43856C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x43857C", Offset = "0x43857C", VA = "0x43857C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x437200", Offset = "0x437200", VA = "0x437200")]
	private void ShootObject([Optional] Collider other)
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x438820", Offset = "0x438820", VA = "0x438820", Slot = "7")]
	protected virtual void _OnBalloonShot()
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x4384F0", Offset = "0x4384F0", VA = "0x4384F0")]
	private void PopBalloon()
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x438FC0", Offset = "0x438FC0", VA = "0x438FC0")]
	private GameObject _SpawnParticles()
	{
		return null;
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x439670", Offset = "0x439670", VA = "0x439670")]
	private void _ModifyParticlesScaleAndSpeed(GameObject particles)
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0x4392B0", Offset = "0x4392B0", VA = "0x4392B0")]
	private void _PlayPopSound(Transform parent)
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0x437B44", Offset = "0x437B44", VA = "0x437B44")]
	private AudioSource _AddAudioSource(GameObject audioObj)
	{
		return null;
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0x439A58", Offset = "0x439A58", VA = "0x439A58")]
	private void _SetUpAudioSource(AudioSource audioSource)
	{
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0x437BD0", Offset = "0x437BD0", VA = "0x437BD0")]
	private ONSPAudioSource _AddONSPAudioSource(GameObject audioObj)
	{
		return null;
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0x439D20", Offset = "0x439D20", VA = "0x439D20")]
	private void _SetUpONSPAudioSource(ONSPAudioSource onspAudioSource)
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x438BF4", Offset = "0x438BF4", VA = "0x438BF4")]
	private void HideAndShowObjects()
	{
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x43A044", Offset = "0x43A044", VA = "0x43A044", Slot = "8")]
	protected virtual void _OnDestroy()
	{
	}
}
[Token(Token = "0x200034B")]
public class BalloonGroup : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	public delegate void BalloonGroupEvent(BalloonGroup target);

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_revealUpdateEnabled;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_willReveal;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_currentBalloonIndex;

	[Token(Token = "0x4001397")]
	private const float MAX_REVEAL_TIME = 0.05f;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_revealTime;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_elapsedRevealTime;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_lifeTimeOverride;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_lifeTime;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_lifeTimeEnabled;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_elapsedLifeTime;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Balloon[] m_balloons;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_enablePenalty;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_balloonsPopped;

	[Token(Token = "0x17000390")]
	public bool WillReveal
	{
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x43A770", Offset = "0x43A770", VA = "0x43A770")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000391")]
	public bool LifeTimeOverride
	{
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x43AA90", Offset = "0x43AA90", VA = "0x43AA90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000392")]
	public int BalloonCount
	{
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x43B620", Offset = "0x43B620", VA = "0x43B620")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000393")]
	public int BalloonsPopped
	{
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x43B788", Offset = "0x43B788", VA = "0x43B788")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000394")]
	public int BalloonsMissed
	{
		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x43B790", Offset = "0x43B790", VA = "0x43B790")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000035")]
	public event BalloonGroupEvent OnLifetimeEndSuccessEvent
	{
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x43AE10", Offset = "0x43AE10", VA = "0x43AE10")]
		add
		{
		}
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x43AF1C", Offset = "0x43AF1C", VA = "0x43AF1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public event BalloonGroupEvent OnLifetimeEndFailEvent
	{
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x43B028", Offset = "0x43B028", VA = "0x43B028")]
		add
		{
		}
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x43B134", Offset = "0x43B134", VA = "0x43B134")]
		remove
		{
		}
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x43A2A4", Offset = "0x43A2A4", VA = "0x43A2A4")]
	public BalloonGroup()
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x43A2AC", Offset = "0x43A2AC", VA = "0x43A2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x43A3E0", Offset = "0x43A3E0", VA = "0x43A3E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x43A2C8", Offset = "0x43A2C8", VA = "0x43A2C8")]
	private void _StartPaused()
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x43A698", Offset = "0x43A698", VA = "0x43A698")]
	private bool _IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x43A778", Offset = "0x43A778", VA = "0x43A778")]
	public void Reveal(bool isRevealed, bool immediately = false)
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x43A9CC", Offset = "0x43A9CC", VA = "0x43A9CC")]
	private void _RevealBalloon(Balloon balloon, bool willReveal)
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x43A3FC", Offset = "0x43A3FC", VA = "0x43A3FC")]
	private void _UpdateReveal()
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x43AA98", Offset = "0x43AA98", VA = "0x43AA98")]
	public void CalculateLifeTime(Transform nextRing)
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x43ACDC", Offset = "0x43ACDC", VA = "0x43ACDC")]
	public void SetLifeTime(float lifeTime)
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x43ACE4", Offset = "0x43ACE4", VA = "0x43ACE4")]
	public void StartLifeTime()
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0x43ACF8", Offset = "0x43ACF8", VA = "0x43ACF8")]
	public void StopLifeTime()
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0x43ABEC", Offset = "0x43ABEC", VA = "0x43ABEC")]
	private float _GetDistance(Transform nextRing)
	{
		return default(float);
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x43A5F4", Offset = "0x43A5F4", VA = "0x43A5F4")]
	private void _UpdateLifeTime()
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0x43AD04", Offset = "0x43AD04", VA = "0x43AD04")]
	private void _EndLifeTime(bool isSuccess)
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x43AE0C", Offset = "0x43AE0C", VA = "0x43AE0C")]
	public void EndLifeTime(bool isSuccess)
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x43B240", Offset = "0x43B240", VA = "0x43B240", Slot = "4")]
	protected virtual void _OnLifetimeEnd(bool isSuccess)
	{
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x43A34C", Offset = "0x43A34C", VA = "0x43A34C")]
	private void _GetBalloons()
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x43B644", Offset = "0x43B644", VA = "0x43B644")]
	public void SetPenaltyEnabled(bool isEnabled)
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x43B680", Offset = "0x43B680", VA = "0x43B680")]
	private void _SetupBalloonPenalty()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x43B7C0", Offset = "0x43B7C0", VA = "0x43B7C0")]
	private void _BalloonShotCallback(Balloon balloon)
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x43B894", Offset = "0x43B894", VA = "0x43B894")]
	private void _EndLevelImmediately()
	{
	}
}
[Token(Token = "0x200034D")]
public class BalloonGroupTrigger : MonoBehaviour, ITrigger
{
	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ScoreRing m_scoreRing;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BalloonGroup m_balloonGroup;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool LifetimeEnabled;

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0x43B8EC", Offset = "0x43B8EC", VA = "0x43B8EC")]
	public BalloonGroupTrigger()
	{
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x43B8F4", Offset = "0x43B8F4", VA = "0x43B8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x43BBF4", Offset = "0x43BBF4", VA = "0x43BBF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0x43BBF8", Offset = "0x43BBF8", VA = "0x43BBF8", Slot = "4")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0x43BCE0", Offset = "0x43BCE0", VA = "0x43BCE0", Slot = "5")]
	public void Untrigger()
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0x43B9C0", Offset = "0x43B9C0", VA = "0x43B9C0")]
	private void _InitScoreRing()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0x43BA6C", Offset = "0x43BA6C", VA = "0x43BA6C")]
	private void _InitBalloonGroup()
	{
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0x43BBFC", Offset = "0x43BBFC", VA = "0x43BBFC")]
	private void _TriggerBalloonGroup()
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0x43BCE4", Offset = "0x43BCE4", VA = "0x43BCE4")]
	private void _UntriggerBalloonGroup()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0x43BD98", Offset = "0x43BD98", VA = "0x43BD98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181AE0", Offset = "0x181AE0")]
	private void <_InitBalloonGroup>m__0()
	{
	}
}
[Token(Token = "0x200034E")]
public interface ITrigger
{
	[Token(Token = "0x6001807")]
	void Trigger();

	[Token(Token = "0x6001808")]
	void Untrigger();
}
[Token(Token = "0x200034F")]
public class BalloonManager : MonoBehaviour
{
	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BalloonManager s_instance;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<Balloon> m_balloons;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<GameObject> m_balloonObjs;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<MeshRenderer> m_balloonRenderers;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Material> m_balloonMaterials;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_balloonParticlesPrefab;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Material> m_balloonParticleMaterials;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_revealTime;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_balloonBlowUpTime;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private List<BalloonGroup> m_balloonGroups;

	[Token(Token = "0x17000395")]
	public static BalloonManager Instance
	{
		[Token(Token = "0x600180A")]
		[Address(RVA = "0x437AB0", Offset = "0x437AB0", VA = "0x437AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000396")]
	public GameObject BalloonParticles
	{
		[Token(Token = "0x6001811")]
		[Address(RVA = "0x439578", Offset = "0x439578", VA = "0x439578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000397")]
	public float RevealTime
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0x437B3C", Offset = "0x437B3C", VA = "0x437B3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000398")]
	public float BalloonBlowUpTime
	{
		[Token(Token = "0x6001814")]
		[Address(RVA = "0x43C57C", Offset = "0x43C57C", VA = "0x43C57C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x43BDC4", Offset = "0x43BDC4", VA = "0x43BDC4")]
	public BalloonManager()
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x43BF14", Offset = "0x43BF14", VA = "0x43BF14")]
	private void _SetSingletonInstance()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x43BFA4", Offset = "0x43BFA4", VA = "0x43BFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x43C324", Offset = "0x43C324", VA = "0x43C324")]
	public int GetBalloonCount()
	{
		return default(int);
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x43C050", Offset = "0x43C050", VA = "0x43C050")]
	private void _GetBalloons()
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0x43C320", Offset = "0x43C320", VA = "0x43C320")]
	private void _SetupBalloonColorsAndParticles()
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x43C398", Offset = "0x43C398", VA = "0x43C398")]
	private void _RandomizeColor()
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x439580", Offset = "0x439580", VA = "0x439580")]
	public Material GetBalloonParticleMaterial(int index)
	{
		return null;
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0x43C584", Offset = "0x43C584", VA = "0x43C584")]
	public BalloonGroup GetBalloonGroup(int index)
	{
		return null;
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0x43C640", Offset = "0x43C640", VA = "0x43C640")]
	public int GetBalloonGroupCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0x43BFD0", Offset = "0x43BFD0", VA = "0x43BFD0")]
	private void _GetBalloonGroups()
	{
	}
}
[Token(Token = "0x2000350")]
public class Confetti : MonoBehaviour
{
	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ParticleSystem m_particles;

	[Token(Token = "0x6001819")]
	[Address(RVA = "0x30E6D4", Offset = "0x30E6D4", VA = "0x30E6D4")]
	public Confetti()
	{
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x30E6DC", Offset = "0x30E6DC", VA = "0x30E6DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x30E744", Offset = "0x30E744", VA = "0x30E744")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000351")]
public interface IRevealable
{
	[Token(Token = "0x600181C")]
	void _Reveal(bool immediately);

	[Token(Token = "0x600181D")]
	void _Hide(bool immediately);
}
[Token(Token = "0x2000352")]
public class POCamera : MonoBehaviour
{
	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static POCamera s_instance;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_isInit;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LevelManager m_levelManager;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameManager m_gameManager;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TabletInput m_tabletInput;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private StickInput m_stickInput;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ControllerTablet m_controllerTablet;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isCameraOn;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool m_isGrabbed;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera m_camera;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<POCameraTarget> Targets;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<POCameraTarget> m_targetsLeft;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private POCameraTarget m_nextTarget;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private POCameraTarget m_targetInFocus;

	[Token(Token = "0x40013BF")]
	private const string PO_CAMERA_NAME = "POCameraPos";

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private InputController m_rightIC;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputController m_leftIC;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private HandednessId m_handednessId;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_isPhotoBtnPressed;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_currentCameraTarget;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource m_audioSource;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private AudioMixerGroup m_audioMixer;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip m_cameraSFX;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private AudioClip m_successSFX;

	[Token(Token = "0x17000399")]
	public static POCamera Instance
	{
		[Token(Token = "0x600181F")]
		[Address(RVA = "0x275C38", Offset = "0x275C38", VA = "0x275C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700039A")]
	public bool IsInit
	{
		[Token(Token = "0x6001820")]
		[Address(RVA = "0x275CC4", Offset = "0x275CC4", VA = "0x275CC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039B")]
	public bool IsCameraOn
	{
		[Token(Token = "0x6001826")]
		[Address(RVA = "0x276C24", Offset = "0x276C24", VA = "0x276C24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039C")]
	public bool IsGrabbed
	{
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x276C2C", Offset = "0x276C2C", VA = "0x276C2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039D")]
	public POCameraTarget TargetInFocus
	{
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x276F94", Offset = "0x276F94", VA = "0x276F94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700039E")]
	public POCameraTarget CurrentTargetPicture
	{
		[Token(Token = "0x6001830")]
		[Address(RVA = "0x276F9C", Offset = "0x276F9C", VA = "0x276F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700039F")]
	public bool CurrentTargetHasLOS
	{
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x276FA4", Offset = "0x276FA4", VA = "0x276FA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A0")]
	public bool CurrentTargetInRange
	{
		[Token(Token = "0x6001832")]
		[Address(RVA = "0x277064", Offset = "0x277064", VA = "0x277064")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A1")]
	public int CurrentTargetLOSHighOrLow
	{
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x277328", Offset = "0x277328", VA = "0x277328")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170003A2")]
	public int CurrentTargetHighOrLow
	{
		[Token(Token = "0x6001834")]
		[Address(RVA = "0x277850", Offset = "0x277850", VA = "0x277850")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x275BA4", Offset = "0x275BA4", VA = "0x275BA4")]
	public POCamera()
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x275CCC", Offset = "0x275CCC", VA = "0x275CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0x276654", Offset = "0x276654", VA = "0x276654")]
	private void Update()
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x275E74", Offset = "0x275E74", VA = "0x275E74")]
	private void _GetLevelManager()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x275DAC", Offset = "0x275DAC", VA = "0x275DAC")]
	private void _GetGameManager()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x2766B8", Offset = "0x2766B8", VA = "0x2766B8")]
	private void _UpdatePhotoOpTablet()
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x276C34", Offset = "0x276C34", VA = "0x276C34")]
	public void ToggleCamera(bool isEnabled)
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x276C3C", Offset = "0x276C3C", VA = "0x276C3C")]
	public void ToggleGrabbedOn()
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x276C50", Offset = "0x276C50", VA = "0x276C50")]
	public void ToggleGrabbedOff()
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x276C48", Offset = "0x276C48", VA = "0x276C48")]
	public void ToggleGrabbed(bool isEnabled)
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x276BEC", Offset = "0x276BEC", VA = "0x276BEC")]
	private void _UpdateCameraState()
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x276F90", Offset = "0x276F90", VA = "0x276F90")]
	public void InitTargets()
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x276398", Offset = "0x276398", VA = "0x276398")]
	private void _InitTargets()
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0x276020", Offset = "0x276020", VA = "0x276020")]
	private void _InitCamera()
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0x2760DC", Offset = "0x2760DC", VA = "0x2760DC")]
	private void _InitTabletInput()
	{
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0x277BCC", Offset = "0x277BCC", VA = "0x277BCC")]
	private void OnGrabCallback()
	{
	}

	[Token(Token = "0x6001838")]
	[Address(RVA = "0x277BD8", Offset = "0x277BD8", VA = "0x277BD8")]
	private void OnReleaseCallback()
	{
	}

	[Token(Token = "0x6001839")]
	[Address(RVA = "0x277910", Offset = "0x277910", VA = "0x277910")]
	private void _PositionCamera()
	{
	}

	[Token(Token = "0x600183A")]
	[Address(RVA = "0x276750", Offset = "0x276750", VA = "0x276750")]
	private void _UpdateCameraTargets()
	{
	}

	[Token(Token = "0x600183B")]
	[Address(RVA = "0x277E40", Offset = "0x277E40", VA = "0x277E40")]
	public static float SquaredDistance(Vector3 obj, Vector3 other)
	{
		return default(float);
	}

	[Token(Token = "0x600183C")]
	[Address(RVA = "0x277C60", Offset = "0x277C60", VA = "0x277C60")]
	private POCameraTarget _GetNearerTarget(POCameraTarget target1, POCameraTarget target2)
	{
		return null;
	}

	[Token(Token = "0x600183D")]
	[Address(RVA = "0x276C5C", Offset = "0x276C5C", VA = "0x276C5C")]
	private void _DetermineHandedness()
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0x276A40", Offset = "0x276A40", VA = "0x276A40")]
	private void _UpdatePictureTaking()
	{
	}

	[Token(Token = "0x600183F")]
	[Address(RVA = "0x277E80", Offset = "0x277E80", VA = "0x277E80")]
	private void _TakePicture()
	{
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0x2787FC", Offset = "0x2787FC", VA = "0x2787FC")]
	public void GamepadTakePicture()
	{
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0x278190", Offset = "0x278190", VA = "0x278190")]
	private void _ScorePicture()
	{
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0x275F3C", Offset = "0x275F3C", VA = "0x275F3C")]
	private void _InitAudio()
	{
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0x277EB8", Offset = "0x277EB8", VA = "0x277EB8")]
	private void _PlayAudio()
	{
	}
}
[Token(Token = "0x2000353")]
public class POCameraTarget : MonoBehaviour
{
	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Collider colliderConstraint;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_distanceRequired;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_minDistance;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool distanceOnlyXZ;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Bounds m_bounds;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _vehicleLayer;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _collisionObjectName;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private POCameraTargetTrigger _targetTrigger;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _inCollider;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool showDebugPosition;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private GameObject _debugHelper;

	[Token(Token = "0x170003A3")]
	public float DistanceRequired
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x279494", Offset = "0x279494", VA = "0x279494")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003A4")]
	public float MinDistance
	{
		[Token(Token = "0x600184B")]
		[Address(RVA = "0x27949C", Offset = "0x27949C", VA = "0x27949C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0x278804", Offset = "0x278804", VA = "0x278804")]
	public POCameraTarget()
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0x2788AC", Offset = "0x2788AC", VA = "0x2788AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0x278C18", Offset = "0x278C18", VA = "0x278C18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0x278D08", Offset = "0x278D08", VA = "0x278D08")]
	private void OnVehicleTakeOff()
	{
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0x278E14", Offset = "0x278E14", VA = "0x278E14")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0x2794A4", Offset = "0x2794A4", VA = "0x2794A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0x278B48", Offset = "0x278B48", VA = "0x278B48")]
	private void _InitBounds()
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0x277BE4", Offset = "0x277BE4", VA = "0x277BE4")]
	public bool IsInFocus(Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0x279944", Offset = "0x279944", VA = "0x279944")]
	public bool IsWithinCamera(Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0x277198", Offset = "0x277198", VA = "0x277198")]
	public bool IsWithinRange(Vector3 otherPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0x277280", Offset = "0x277280", VA = "0x277280")]
	public bool InColliderConstraint()
	{
		return default(bool);
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0x277060", Offset = "0x277060", VA = "0x277060")]
	public bool HasLOS(Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0x27742C", Offset = "0x27742C", VA = "0x27742C")]
	public int GetLOSTooHighOrLow(Camera camera, bool computeByDistance = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0x279870", Offset = "0x279870", VA = "0x279870")]
	private bool _IsWithinCamera(Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0x279948", Offset = "0x279948", VA = "0x279948")]
	public void HandleTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0x279ADC", Offset = "0x279ADC", VA = "0x279ADC")]
	public void HandleTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0x279C70", Offset = "0x279C70", VA = "0x279C70")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x2000354")]
public class POCameraTargetTrigger : MonoBehaviour
{
	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public POCameraTarget cameraTarget;

	[Token(Token = "0x6001858")]
	[Address(RVA = "0x27A8A0", Offset = "0x27A8A0", VA = "0x27A8A0")]
	public POCameraTargetTrigger()
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0x27A8A8", Offset = "0x27A8A8", VA = "0x27A8A8")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x27A960", Offset = "0x27A960", VA = "0x27A960")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}
}
[Token(Token = "0x2000355")]
public class POCameraTargetTester : MonoBehaviour
{
	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174074", Offset = "0x174074")]
	private sealed class <_SetupCameraTargets>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<POCameraTarget>.Enumerator $locvar0;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal POCameraTargetTester $this;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x17000567")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x27A7F4", Offset = "0x27A7F4", VA = "0x27A7F4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000568")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x27A7FC", Offset = "0x27A7FC", VA = "0x27A7FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x27A3CC", Offset = "0x27A3CC", VA = "0x27A3CC")]
		[DebuggerHidden]
		public <_SetupCameraTargets>c__Iterator0()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x27A3D4", Offset = "0x27A3D4", VA = "0x27A3D4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x27A804", Offset = "0x27A804", VA = "0x27A804", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x27A818", Offset = "0x27A818", VA = "0x27A818", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private POCamera m_poCamera;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private POCameraTarget m_targetInFocus;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private POCameraTarget m_lastTargetInFocus;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer m_rendererInFocus;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_distance;

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x279EB4", Offset = "0x279EB4", VA = "0x279EB4")]
	public POCameraTargetTester()
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0x279EBC", Offset = "0x279EBC", VA = "0x279EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x279FD4", Offset = "0x279FD4", VA = "0x279FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600185E")]
	[Address(RVA = "0x279EE8", Offset = "0x279EE8", VA = "0x279EE8")]
	private void _GetPOCamera()
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0x279F50", Offset = "0x279F50", VA = "0x279F50")]
	[DebuggerHidden]
	private IEnumerator _SetupCameraTargets()
	{
		return null;
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0x279FD8", Offset = "0x279FD8", VA = "0x279FD8")]
	private void _UpdateTarget()
	{
	}
}
[Token(Token = "0x2000356")]
public class FiringMechanism1 : MonoBehaviour
{
	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private StickInput m_stickInput;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GunSingle m_gun1;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GunSingle m_gun2;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent FireEvt;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InputController m_fireInputControllerR;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputController m_fireInputControllerL;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isTriggerHeld;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool m_isFiring;

	[Token(Token = "0x6001861")]
	[Address(RVA = "0xBB1F14", Offset = "0xBB1F14", VA = "0xBB1F14")]
	public FiringMechanism1()
	{
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0xBB1FA8", Offset = "0xBB1FA8", VA = "0xBB1FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0xBB1FAC", Offset = "0xBB1FAC", VA = "0xBB1FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0xBB214C", Offset = "0xBB214C", VA = "0xBB214C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0xBB1FB0", Offset = "0xBB1FB0", VA = "0xBB1FB0")]
	private void _UpdateFire()
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0xBB2150", Offset = "0xBB2150", VA = "0xBB2150")]
	private void _FixedUpdateFire()
	{
	}
}
[Token(Token = "0x2000357")]
public class FiringMechanism2 : MonoBehaviour
{
	[Token(Token = "0x2000358")]
	private enum FIRING_SEQUENCE
	{
		[Token(Token = "0x40013F0")]
		None,
		[Token(Token = "0x40013F1")]
		FiringGun1,
		[Token(Token = "0x40013F2")]
		FiringGun2,
		[Token(Token = "0x40013F3")]
		Cooldown
	}

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_gunsObject;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GunSingle m_gun1;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GunSingle m_gun2;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private UnityEvent FireEvt1;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent FireEvt2;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isTriggerHeld;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool m_isNextFireCycleQueued;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FIRING_SEQUENCE m_firingSequence;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_timeToShootGun2;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_elapsedTimeToShootGun2;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_cooldownTime;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_elapsedCooldownTime;

	[Token(Token = "0x6001867")]
	[Address(RVA = "0xBB2194", Offset = "0xBB2194", VA = "0xBB2194")]
	public FiringMechanism2()
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0xBB21AC", Offset = "0xBB21AC", VA = "0xBB21AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0xBB22F8", Offset = "0xBB22F8", VA = "0xBB22F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0xBB2578", Offset = "0xBB2578", VA = "0xBB2578")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0xBB231C", Offset = "0xBB231C", VA = "0xBB231C")]
	private bool _IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0xBB23CC", Offset = "0xBB23CC", VA = "0xBB23CC")]
	private void _UpdateFire()
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0xBB259C", Offset = "0xBB259C", VA = "0xBB259C")]
	private void _FixedUpdateFire()
	{
	}
}
[Token(Token = "0x2000359")]
public class GunBase : MonoBehaviour, IGun
{
	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<AudioClip> m_audioClips;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Transform m_objectPoolParent;

	[Token(Token = "0x600186E")]
	[Address(RVA = "0x33A934", Offset = "0x33A934", VA = "0x33A934")]
	public GunBase()
	{
	}

	[Token(Token = "0x600186F")]
	[Address(RVA = "0x33A9C0", Offset = "0x33A9C0", VA = "0x33A9C0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001870")]
	[Address(RVA = "0x33AAC4", Offset = "0x33AAC4", VA = "0x33AAC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001871")]
	[Address(RVA = "0x33AAC8", Offset = "0x33AAC8", VA = "0x33AAC8")]
	private void _PlayFireAudio()
	{
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0x33A9C4", Offset = "0x33A9C4", VA = "0x33A9C4")]
	private void _CreateObjectPoolParent()
	{
	}

	[Token(Token = "0x6001873")]
	[Address(RVA = "0x33AC3C", Offset = "0x33AC3C", VA = "0x33AC3C", Slot = "6")]
	protected virtual void _Fire()
	{
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0x33ACD8", Offset = "0x33ACD8", VA = "0x33ACD8", Slot = "4")]
	public void Fire()
	{
	}
}
[Token(Token = "0x200035A")]
public class GunSingle : GunBase
{
	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool m_updateSelfFire;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private InputController m_fireInputController;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isFiring;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private ObjectPooler m_pooler;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_weaponMuzzle;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_bulletInstance;

	[Token(Token = "0x6001875")]
	[Address(RVA = "0x33AD04", Offset = "0x33AD04", VA = "0x33AD04")]
	public GunSingle()
	{
	}

	[Token(Token = "0x6001876")]
	[Address(RVA = "0x33ADA8", Offset = "0x33ADA8", VA = "0x33ADA8")]
	private new void Start()
	{
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0x33ADAC", Offset = "0x33ADAC", VA = "0x33ADAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0x33ADB4", Offset = "0x33ADB4", VA = "0x33ADB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0x33ADB0", Offset = "0x33ADB0", VA = "0x33ADB0")]
	private void _UpdateFireInput()
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0x33ADEC", Offset = "0x33ADEC", VA = "0x33ADEC")]
	private void _FixedUpdateFire()
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0x33AE24", Offset = "0x33AE24", VA = "0x33AE24", Slot = "6")]
	protected override void _Fire()
	{
	}
}
[Token(Token = "0x200035B")]
public class HitscanProjectile : Projectile
{
	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer m_lineRenderer;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_duration;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_elapsedTime;

	[Token(Token = "0x600187C")]
	[Address(RVA = "0x507720", Offset = "0x507720", VA = "0x507720")]
	public HitscanProjectile()
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0x507730", Offset = "0x507730", VA = "0x507730", Slot = "6")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0x507734", Offset = "0x507734", VA = "0x507734", Slot = "7")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0x507794", Offset = "0x507794", VA = "0x507794", Slot = "8")]
	protected override void _FixedUpdate()
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0x507738", Offset = "0x507738", VA = "0x507738")]
	private void _UpdateDuration()
	{
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0x507798", Offset = "0x507798", VA = "0x507798", Slot = "10")]
	public override void Fire(Vector3 pos, Vector3 dir)
	{
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0x507CAC", Offset = "0x507CAC", VA = "0x507CAC", Slot = "11")]
	protected override void _EnableObject(bool isEnabled)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0x507948", Offset = "0x507948", VA = "0x507948")]
	private void _DrawTracer(RaycastHit hit)
	{
	}
}
[Token(Token = "0x200035C")]
public interface IGun
{
	[Token(Token = "0x6001884")]
	void Fire();
}
[Token(Token = "0x200035D")]
public interface IProjectile
{
	[Token(Token = "0x6001885")]
	void Fire(Transform tform);

	[Token(Token = "0x6001886")]
	void Fire(Vector3 pos, Vector3 dir);
}
[Token(Token = "0x200035E")]
public interface IProjectileTarget
{
	[Token(Token = "0x6001887")]
	void Hit();
}
[Token(Token = "0x200035F")]
public class Projectile : MonoBehaviour, IProjectile
{
	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	protected LayerMask m_hitLayer;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	protected float m_maxDistance;

	[Token(Token = "0x6001888")]
	[Address(RVA = "0x285610", Offset = "0x285610", VA = "0x285610")]
	public Projectile()
	{
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0x285648", Offset = "0x285648", VA = "0x285648")]
	private void Start()
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0x2856F4", Offset = "0x2856F4", VA = "0x2856F4", Slot = "6")]
	protected virtual void _Start()
	{
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0x28577C", Offset = "0x28577C", VA = "0x28577C")]
	private void Update()
	{
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0x2857FC", Offset = "0x2857FC", VA = "0x2857FC", Slot = "7")]
	protected virtual void _Update()
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x285884", Offset = "0x285884", VA = "0x285884")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x2858B4", Offset = "0x2858B4", VA = "0x2858B4", Slot = "8")]
	protected virtual void _FixedUpdate()
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x285670", Offset = "0x285670", VA = "0x285670")]
	private void _StartPause()
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x2857AC", Offset = "0x2857AC", VA = "0x2857AC")]
	private bool _IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x28593C", Offset = "0x28593C", VA = "0x28593C", Slot = "9")]
	public virtual void Fire(Transform obj)
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0x2859D8", Offset = "0x2859D8", VA = "0x2859D8", Slot = "10")]
	public virtual void Fire(Vector3 pos, Vector3 dir)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0x2859EC", Offset = "0x2859EC", VA = "0x2859EC", Slot = "11")]
	protected virtual void _EnableObject(bool isEnabled)
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x285A28", Offset = "0x285A28", VA = "0x285A28", Slot = "12")]
	protected virtual void _CheckHitTarget(RaycastHit hit)
	{
	}
}
[Token(Token = "0x2000360")]
public class SimulatedProjectile : Projectile
{
	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer m_lineRenderer;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_lineRenderEnableDelay;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_lineRenderEnableElapsed;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_rayLength;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_speed;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_nextOrigin;

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x2BCDC4", Offset = "0x2BCDC4", VA = "0x2BCDC4")]
	public SimulatedProjectile()
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x2BCE80", Offset = "0x2BCE80", VA = "0x2BCE80", Slot = "6")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x2BCF40", Offset = "0x2BCF40", VA = "0x2BCF40", Slot = "7")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0x2BCF44", Offset = "0x2BCF44", VA = "0x2BCF44", Slot = "8")]
	protected override void _FixedUpdate()
	{
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0x2BCF48", Offset = "0x2BCF48", VA = "0x2BCF48")]
	public void _UpdateBullet()
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0x2BD7A0", Offset = "0x2BD7A0", VA = "0x2BD7A0")]
	private void _UpdateLineRenderer()
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0x2BCE88", Offset = "0x2BCE88", VA = "0x2BCE88")]
	private void _ShowLineRenderer(bool isShowing)
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0x2BD7F0", Offset = "0x2BD7F0", VA = "0x2BD7F0", Slot = "10")]
	public override void Fire(Vector3 pos, Vector3 dir)
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0x2BD83C", Offset = "0x2BD83C", VA = "0x2BD83C", Slot = "11")]
	protected override void _EnableObject(bool isEnabled)
	{
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x2BD420", Offset = "0x2BD420", VA = "0x2BD420")]
	private void _DrawTracer(RaycastHit hit, Vector3 destination)
	{
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0x2BD8D8", Offset = "0x2BD8D8", VA = "0x2BD8D8")]
	private void _DrawTracer(Vector3 origin, Vector3 destination)
	{
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0x2BD600", Offset = "0x2BD600", VA = "0x2BD600")]
	private void _CalculatDistTravelled(RaycastHit hit, Vector3 destination)
	{
	}
}
[Token(Token = "0x2000361")]
public class RingManager : MonoBehaviour
{
	[Token(Token = "0x2000362")]
	public enum RING_MODE
	{
		[Token(Token = "0x4001427")]
		RingRush,
		[Token(Token = "0x4001428")]
		RingCourse,
		[Token(Token = "0x4001429")]
		BalloonCourse,
		[Token(Token = "0x400142A")]
		Race
	}

	[Token(Token = "0x2000363")]
	public enum NMR_Type
	{
		[Token(Token = "0x400142C")]
		All,
		[Token(Token = "0x400142D")]
		BySize
	}

	[Serializable]
	[Token(Token = "0x2000364")]
	public class NearMissRadius
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ScoreRing.RING_SIZE RingSize;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Radius;

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x2DECE0", Offset = "0x2DECE0", VA = "0x2DECE0")]
		public NearMissRadius()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000365")]
	public class AircraftSpeed
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VEHICLE_TYPE Vehicle;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AverageSpeed;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x2DBE98", Offset = "0x2DBE98", VA = "0x2DBE98")]
		public AircraftSpeed()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000366")]
	public class RingAudio
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ScoreRing.RING_SIZE RingSize;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AudioClip RingAudioClip;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x2DECF4", Offset = "0x2DECF4", VA = "0x2DECF4")]
		public RingAudio()
		{
		}
	}

	[Token(Token = "0x20005AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174084", Offset = "0x174084")]
	private sealed class <DelayedStartup>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LevelManager <levelManager>__0;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal RingManager $this;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000569")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x2DEB5C", Offset = "0x2DEB5C", VA = "0x2DEB5C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0x2DEB64", Offset = "0x2DEB64", VA = "0x2DEB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x2DC1B8", Offset = "0x2DC1B8", VA = "0x2DC1B8")]
		[DebuggerHidden]
		public <DelayedStartup>c__Iterator0()
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x2DE794", Offset = "0x2DE794", VA = "0x2DE794", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x2DEB6C", Offset = "0x2DEB6C", VA = "0x2DEB6C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x2DEB80", Offset = "0x2DEB80", VA = "0x2DEB80", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174094", Offset = "0x174094")]
	private sealed class <_SetUpRingRush>c__AnonStorey1
	{
		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ScoreRing ring;

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x2DE1E0", Offset = "0x2DE1E0", VA = "0x2DE1E0")]
		public <_SetUpRingRush>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x2DEC94", Offset = "0x2DEC94", VA = "0x2DEC94")]
		internal bool <>m__0(NearMissRadius x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1740A4", Offset = "0x1740A4")]
	private sealed class <GetAverageSpeed>c__AnonStorey2
	{
		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal VEHICLE_TYPE vehicle;

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x2DE524", Offset = "0x2DE524", VA = "0x2DE524")]
		public <GetAverageSpeed>c__AnonStorey2()
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x2DEC08", Offset = "0x2DEC08", VA = "0x2DEC08")]
		internal bool <>m__0(AircraftSpeed x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1740B4", Offset = "0x1740B4")]
	private sealed class <_SetUpRingAudio>c__AnonStorey3
	{
		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ScoreRing ring;

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x2DE780", Offset = "0x2DE780", VA = "0x2DE780")]
		public <_SetUpRingAudio>c__AnonStorey3()
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x2DEC40", Offset = "0x2DEC40", VA = "0x2DEC40")]
		internal bool <>m__0(RingAudio x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static RingManager s_instance;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject _targetHelper;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Ray _raycastRay;

	[Token(Token = "0x400140D")]
	private const float _raycastDist = 150f;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_manageFailTime;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_failTime;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isAutoRaceRingTypeAssign;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private RING_MODE m_ringMode;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_setRingsManually;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private ScoreRing[] m_rings;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_enableRaceRecorder;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool m_removeRaceColliderOnTrigger;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[SerializeField]
	private bool m_rrEnableNearMiss;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private NMR_Type m_rrNearMissRadiusType;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_rrNearMissRadius;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private NearMissRadius[] m_rrNearMissRadii;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int m_rcShowActive;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private int m_rcShowInactive;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_rcNearMissRadius;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool m_isLifetimeEnabled;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int m_bcShowActive;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private int m_bcShowInactive;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float m_bcNearMissRadius;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private AircraftSpeed[] m_aircraftSpeeds;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float m_rNearMissRadius;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_setCustomRingSFX;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private RingAudio[] m_ringSuccessAudios;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private AudioClip m_ringFailClip;

	[Token(Token = "0x170003A5")]
	public static RingManager Instance
	{
		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x2DBEA0", Offset = "0x2DBEA0", VA = "0x2DBEA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003A6")]
	public int numActiveRings
	{
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x2DE31C", Offset = "0x2DE31C", VA = "0x2DE31C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0x2DBB10", Offset = "0x2DBB10", VA = "0x2DBB10")]
	public RingManager()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x2DBF2C", Offset = "0x2DBF2C", VA = "0x2DBF2C")]
	private void _SetInstance()
	{
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x2DBFBC", Offset = "0x2DBFBC", VA = "0x2DBFBC")]
	private void _RemoveInstance()
	{
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x2DC04C", Offset = "0x2DC04C", VA = "0x2DC04C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0x2DC110", Offset = "0x2DC110", VA = "0x2DC110")]
	private void Start()
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0x2DC134", Offset = "0x2DC134", VA = "0x2DC134")]
	[DebuggerHidden]
	private IEnumerator DelayedStartup()
	{
		return null;
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0x2DC1C0", Offset = "0x2DC1C0", VA = "0x2DC1C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x2DC914", Offset = "0x2DC914", VA = "0x2DC914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0x2DC918", Offset = "0x2DC918", VA = "0x2DC918")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x2DC91C", Offset = "0x2DC91C", VA = "0x2DC91C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0x2DC920", Offset = "0x2DC920", VA = "0x2DC920")]
	private void _GetRings()
	{
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0x2DCA08", Offset = "0x2DCA08", VA = "0x2DCA08")]
	private void _SetUpRings()
	{
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0x2DDD3C", Offset = "0x2DDD3C", VA = "0x2DDD3C")]
	public void UpdateRingDots()
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0x2DDEE0", Offset = "0x2DDEE0", VA = "0x2DDEE0")]
	private void SetUpBasicRingCourse(ScoreRing ring, int index)
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0x2DCD34", Offset = "0x2DCD34", VA = "0x2DCD34")]
	private void _SetUpRingRush(ScoreRing ring)
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x2DD1A8", Offset = "0x2DD1A8", VA = "0x2DD1A8")]
	private void _SetUpRingCourse(ScoreRing ring, int index)
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x2DD510", Offset = "0x2DD510", VA = "0x2DD510")]
	private void _SetUpBalloonCourse(ScoreRing ring, int index)
	{
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0x2DE428", Offset = "0x2DE428", VA = "0x2DE428")]
	public float GetAverageSpeed(VEHICLE_TYPE vehicle)
	{
		return default(float);
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0x2DE52C", Offset = "0x2DE52C", VA = "0x2DE52C")]
	public Vector3 GetRingPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0x2DDA44", Offset = "0x2DDA44", VA = "0x2DDA44")]
	private void _SetUpRaceMode(ScoreRing ring, int index, int totalLength)
	{
	}

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0x2DDB58", Offset = "0x2DDB58", VA = "0x2DDB58")]
	private void _SetUpRingAudio(ScoreRing ring)
	{
	}
}
[Token(Token = "0x2000367")]
public class ScoreRing : MonoBehaviour
{
	[Token(Token = "0x2000368")]
	public enum AwakeState
	{
		[Token(Token = "0x4001477")]
		active,
		[Token(Token = "0x4001478")]
		inactive,
		[Token(Token = "0x4001479")]
		hidden
	}

	[Token(Token = "0x2000369")]
	public enum RaceRingType
	{
		[Token(Token = "0x400147B")]
		Start,
		[Token(Token = "0x400147C")]
		Mid,
		[Token(Token = "0x400147D")]
		End
	}

	[Token(Token = "0x200036A")]
	private enum SCORE_METHOD
	{
		[Token(Token = "0x400147F")]
		Analog,
		[Token(Token = "0x4001480")]
		Digital
	}

	[Token(Token = "0x200036B")]
	public enum RING_SIZE
	{
		[Token(Token = "0x4001482")]
		Big,
		[Token(Token = "0x4001483")]
		Medium,
		[Token(Token = "0x4001484")]
		Small,
		[Token(Token = "0x4001485")]
		Tiny
	}

	[Token(Token = "0x200036C")]
	public enum NEAR_MISS_TYPE
	{
		[Token(Token = "0x4001487")]
		Keep,
		[Token(Token = "0x4001488")]
		Remove
	}

	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1740C4", Offset = "0x1740C4")]
	private sealed class <_WaitForLevelManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ScoreRing $this;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700056B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x2F61A4", Offset = "0x2F61A4", VA = "0x2F61A4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x2F61AC", Offset = "0x2F61AC", VA = "0x2F61AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x2F1DD8", Offset = "0x2F1DD8", VA = "0x2F1DD8")]
		[DebuggerHidden]
		public <_WaitForLevelManager>c__Iterator0()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x2F6058", Offset = "0x2F6058", VA = "0x2F6058", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x2F61B4", Offset = "0x2F61B4", VA = "0x2F61B4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x2F61C8", Offset = "0x2F61C8", VA = "0x2F61C8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1740D4", Offset = "0x1740D4")]
	private sealed class <WaitForCameraTransform>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ScoreRing $this;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700056D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x2F5FAC", Offset = "0x2F5FAC", VA = "0x2F5FAC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026CD")]
			[Address(RVA = "0x2F5FB4", Offset = "0x2F5FB4", VA = "0x2F5FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x2F2AA4", Offset = "0x2F2AA4", VA = "0x2F2AA4")]
		[DebuggerHidden]
		public <WaitForCameraTransform>c__Iterator1()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x2F5E5C", Offset = "0x2F5E5C", VA = "0x2F5E5C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x2F5FBC", Offset = "0x2F5FBC", VA = "0x2F5FBC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x2F5FD0", Offset = "0x2F5FD0", VA = "0x2F5FD0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1740E4", Offset = "0x1740E4")]
	private sealed class <HideAndShowRings>c__AnonStorey2
	{
		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int i;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ScoreRing $this;

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x2F4B04", Offset = "0x2F4B04", VA = "0x2F4B04")]
		public <HideAndShowRings>c__AnonStorey2()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x2F5B50", Offset = "0x2F5B50", VA = "0x2F5B50")]
		internal bool <>m__0(KeyValuePair<GameObject, ScoreRing> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1740F4", Offset = "0x1740F4")]
	private sealed class <HideAndShowRings>c__AnonStorey3
	{
		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int i;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ScoreRing $this;

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x2F4B0C", Offset = "0x2F4B0C", VA = "0x2F4B0C")]
		public <HideAndShowRings>c__AnonStorey3()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x2F5C54", Offset = "0x2F5C54", VA = "0x2F5C54")]
		internal bool <>m__0(KeyValuePair<GameObject, ScoreRing> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174104", Offset = "0x174104")]
	private sealed class <HideAndShowRings>c__AnonStorey4
	{
		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int i;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ScoreRing $this;

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x2F4B14", Offset = "0x2F4B14", VA = "0x2F4B14")]
		public <HideAndShowRings>c__AnonStorey4()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x2F5D58", Offset = "0x2F5D58", VA = "0x2F5D58")]
		internal bool <>m__0(KeyValuePair<GameObject, ScoreRing> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool useCustomRingSetup;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] activeRingsToShow;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] inactiveRingsToShow;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] ringsToHide;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Dictionary<GameObject, ScoreRing> activeRingsToShowSR;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<GameObject, ScoreRing> inactiveRingsToShowSR;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Dictionary<GameObject, ScoreRing> ringsToHideSR;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AwakeState currentState;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public RaceRingType ringPointType;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int raceIndex;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool ringPassed;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericTrigger raceRingTrigger;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private string raceRingTriggerID;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int scoreValue;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float startFadeRange;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float endFadeRange;

	[Token(Token = "0x4001444")]
	public const string collisionObjectName = "Ring Test Crosshair";

	[Token(Token = "0x4001445")]
	public const string LayerNameForComparison = "VehicleObject";

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private GameObject m_activeGlow;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_ringRunActive;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private GameObject m_ringRunInactive;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_ringRushActive;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private GameObject m_ringRushInactive;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_ringActive;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private GameObject m_ringInactive;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform cameraTransform;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaceManager raceManager;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static GameManager gameManager;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LevelManager levelManager;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private SCORE_METHOD currentScoreMethod;

	[Token(Token = "0x4001452")]
	private const float maxAlpha = 1f;

	[Token(Token = "0x4001453")]
	private const float minAlpha = 0f;

	[Token(Token = "0x4001454")]
	private const float minPointScale = 0.25f;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly string[] ringColor;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Collider targetCollider;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] colliderSizeLarge;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float[] colliderSizeMedium;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float colliderSizeSmall;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private DefaultAudioManager defaultAudioManager;

	[Token(Token = "0x400145B")]
	private const float RING_VISUAL_SWITCH_DISTANCE = 150f;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float m_ringVisualSwitchDistance;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float m_failTime;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_elapsedTimeDisable;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_timerEnable;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool m_cameraEnteredCollider;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 hitLocation;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool m_isSuccess;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool debugHitTest;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private RING_SIZE m_ringSize;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public AudioSource RingAudioSource;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool m_overrideRingManagerSFX;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioClip RingSuccessSFX;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip RingFailSFX;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool ApplyNearMiss;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public NEAR_MISS_TYPE NearMissType;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool m_nearMissEnabled;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	public bool removeRaceColliderOnTrigger;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
	public bool UseCustomNearMissRadius;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float NearMissRadius;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float m_prevDot;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float m_currDot;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool m_isDotPositive;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool m_failSequenceStarted;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool m_isInside;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent RingSuccess;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public UnityEvent RingFail;

	[Token(Token = "0x170003A7")]
	public GameObject ActiveGlow
	{
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x2F173C", Offset = "0x2F173C", VA = "0x2F173C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003A8")]
	public GameObject RingActive
	{
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x2F1744", Offset = "0x2F1744", VA = "0x2F1744")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003A9")]
	public GameObject RingInactive
	{
		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x2F174C", Offset = "0x2F174C", VA = "0x2F174C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003AA")]
	public float FailTime
	{
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x2F3560", Offset = "0x2F3560", VA = "0x2F3560")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x2DE778", Offset = "0x2DE778", VA = "0x2DE778")]
		set
		{
		}
	}

	[Token(Token = "0x170003AB")]
	public RING_SIZE RingSize
	{
		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x2DEC8C", Offset = "0x2DEC8C", VA = "0x2DEC8C")]
		get
		{
			return default(RING_SIZE);
		}
	}

	[Token(Token = "0x170003AC")]
	public bool OverrideRingManagerSFX
	{
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x2DE788", Offset = "0x2DE788", VA = "0x2DE788")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003AD")]
	public bool NearMissEnabled
	{
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x2F4F04", Offset = "0x2F4F04", VA = "0x2F4F04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x2F2E50", Offset = "0x2F2E50", VA = "0x2F2E50")]
		set
		{
		}
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0x2F12D4", Offset = "0x2F12D4", VA = "0x2F12D4")]
	public ScoreRing()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0x2F1754", Offset = "0x2F1754", VA = "0x2F1754")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0x2F1948", Offset = "0x2F1948", VA = "0x2F1948")]
	private void InitializeLevel()
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0x2F18C4", Offset = "0x2F18C4", VA = "0x2F18C4")]
	[DebuggerHidden]
	private IEnumerator _WaitForLevelManager()
	{
		return null;
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0x2F1DE0", Offset = "0x2F1DE0", VA = "0x2F1DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0x2F22E8", Offset = "0x2F22E8", VA = "0x2F22E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0x2F23B4", Offset = "0x2F23B4", VA = "0x2F23B4")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0x2F1C14", Offset = "0x2F1C14", VA = "0x2F1C14")]
	private void InitializeRaceTriggers()
	{
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0x2F25C4", Offset = "0x2F25C4", VA = "0x2F25C4")]
	private void UpdateRace(Transform collidedObject)
	{
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0x2F1E88", Offset = "0x2F1E88", VA = "0x2F1E88")]
	[DebuggerHidden]
	private IEnumerator WaitForCameraTransform()
	{
		return null;
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0x2DE1E8", Offset = "0x2DE1E8", VA = "0x2DE1E8")]
	public void RefreshRingState()
	{
	}

	[Token(Token = "0x60018CA")]
	[Address(RVA = "0x2F2AAC", Offset = "0x2F2AAC", VA = "0x2F2AAC")]
	public void SetRingElementActivity(bool activity, bool glowActive, bool hidden = false)
	{
	}

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0x2F3020", Offset = "0x2F3020", VA = "0x2F3020")]
	private void SetRingElementActivity(GameObject obj, bool activity, bool glowActive, bool hidden = false)
	{
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0x2F3114", Offset = "0x2F3114", VA = "0x2F3114")]
	private void Update()
	{
	}

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0x2F3154", Offset = "0x2F3154", VA = "0x2F3154")]
	private void _UpdateRingVisual()
	{
	}

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0x2F3568", Offset = "0x2F3568", VA = "0x2F3568")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60018D1")]
	[Address(RVA = "0x2F3670", Offset = "0x2F3670", VA = "0x2F3670")]
	private void HitTriggerSet(Transform hitObject)
	{
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0x2F36C8", Offset = "0x2F36C8", VA = "0x2F36C8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0x2F37B4", Offset = "0x2F37B4", VA = "0x2F37B4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0x2F39D0", Offset = "0x2F39D0", VA = "0x2F39D0")]
	private void _CalculateTieredScore(out int score, out int hitTier)
	{
	}

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0x2F4A0C", Offset = "0x2F4A0C", VA = "0x2F4A0C")]
	private void _ShowRing(bool isShowing)
	{
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0x2F4A40", Offset = "0x2F4A40", VA = "0x2F4A40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0x2DE1DC", Offset = "0x2DE1DC", VA = "0x2DE1DC")]
	public void UpdateScoreRings()
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0x2F1F0C", Offset = "0x2F1F0C", VA = "0x2F1F0C")]
	private void _GetScoreRings()
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0x2F3F14", Offset = "0x2F3F14", VA = "0x2F3F14")]
	private void HideAndShowRings()
	{
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0x2F4930", Offset = "0x2F4930", VA = "0x2F4930")]
	private void _PlaySuccessRingClip(bool playTinyRingClip)
	{
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0x2F4C38", Offset = "0x2F4C38", VA = "0x2F4C38")]
	private void _PlayDefaultSuccessRingClip()
	{
	}

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0x2F4D60", Offset = "0x2F4D60", VA = "0x2F4D60")]
	private void _PlayFailRingClip()
	{
	}

	[Token(Token = "0x60018DF")]
	[Address(RVA = "0x2F4E08", Offset = "0x2F4E08", VA = "0x2F4E08")]
	private void _PlayDefaultFailRingClip()
	{
	}

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0x2F4B1C", Offset = "0x2F4B1C", VA = "0x2F4B1C")]
	private void _PlayAudio(AudioClip clip)
	{
	}

	[Token(Token = "0x60018E3")]
	[Address(RVA = "0x2DDEDC", Offset = "0x2DDEDC", VA = "0x2DDEDC")]
	public void UpdateRingDots()
	{
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0x2F4F0C", Offset = "0x2F4F0C", VA = "0x2F4F0C")]
	private void _UpdateRingDots()
	{
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0x2F5134", Offset = "0x2F5134", VA = "0x2F5134")]
	private void _CameraMovedCallback()
	{
	}

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0x2F2EFC", Offset = "0x2F2EFC", VA = "0x2F2EFC")]
	private void _InitializeNearMiss()
	{
	}

	[Token(Token = "0x60018E7")]
	[Address(RVA = "0x2F3138", Offset = "0x2F3138", VA = "0x2F3138")]
	private void _UpdateNearMiss()
	{
	}

	[Token(Token = "0x60018E8")]
	[Address(RVA = "0x2F5498", Offset = "0x2F5498", VA = "0x2F5498")]
	private void _UpdateNearMissTimer()
	{
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0x2F5780", Offset = "0x2F5780", VA = "0x2F5780")]
	private void _DetectNearMiss()
	{
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0x2F5B24", Offset = "0x2F5B24", VA = "0x2F5B24", Slot = "4")]
	protected virtual void _OnRingSuccess()
	{
	}

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0x2F5B38", Offset = "0x2F5B38", VA = "0x2F5B38", Slot = "5")]
	protected virtual void _OnRingFail()
	{
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0x2F5B4C", Offset = "0x2F5B4C", VA = "0x2F5B4C")]
	private void OnRaceTriggerExit(Transform collidedObject)
	{
	}
}
[Token(Token = "0x200036D")]
public class Waypoint : MonoBehaviour
{
	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public UnityEvent OnLandEvt;

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0x7384C4", Offset = "0x7384C4", VA = "0x7384C4")]
	public Waypoint()
	{
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0x7384CC", Offset = "0x7384CC", VA = "0x7384CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0x7384D0", Offset = "0x7384D0", VA = "0x7384D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0x7384D4", Offset = "0x7384D4", VA = "0x7384D4")]
	private void _UpdateWaypoint()
	{
	}
}
[Token(Token = "0x200036E")]
public class WaypointManager : MonoBehaviour
{
	[Token(Token = "0x60018F1")]
	[Address(RVA = "0x7384D8", Offset = "0x7384D8", VA = "0x7384D8")]
	public WaypointManager()
	{
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0x7384E0", Offset = "0x7384E0", VA = "0x7384E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0x7384E4", Offset = "0x7384E4", VA = "0x7384E4")]
	private void Update()
	{
	}
}
namespace TrackedInput
{
	[Token(Token = "0x200036F")]
	public class GrabbedMeasureAngle : GrabbedMeasurement
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrackRotation m_TrackRotation;

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x3704E8", Offset = "0x3704E8", VA = "0x3704E8")]
		public GrabbedMeasureAngle()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x3705C4", Offset = "0x3705C4", VA = "0x3705C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x370674", Offset = "0x370674", VA = "0x370674", Slot = "9")]
		protected override float _GetTranslation()
		{
			return default(float);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x37076C", Offset = "0x37076C", VA = "0x37076C", Slot = "8")]
		protected override float _UpdateDisengadged(float lastValue)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000370")]
	public class GrabbedMeasurement : InputMeasurement
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InteractableHandInput m_grabbedInput;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected Grabbable m_grabbable;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InteractableHandInput m_interactableHandInput;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private GenericInputHanded[] m_genericInputHandeds;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_touchOrigin;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_distanceToDrop;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x370590", Offset = "0x370590", VA = "0x370590")]
		public GrabbedMeasurement()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x3709CC", Offset = "0x3709CC", VA = "0x3709CC", Slot = "5")]
		protected override void CheckOnAwake()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x370B90", Offset = "0x370B90", VA = "0x370B90", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x371AD8", Offset = "0x371AD8", VA = "0x371AD8")]
		private bool _IsHandClose()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x371F1C", Offset = "0x371F1C", VA = "0x371F1C")]
		private void _ResetGrabberPosition()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class GrabbedMeasurementNoGrabbable : InputMeasurement
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InteractableHandInput m_interactableHandInput;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GenericInputHanded m_genericInputLeft;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GenericInputHanded m_genericInputRight;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Transform m_touchOrigin;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_distanceToDrop;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x371FE0", Offset = "0x371FE0", VA = "0x371FE0")]
		public GrabbedMeasurementNoGrabbable()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x372014", Offset = "0x372014", VA = "0x372014", Slot = "5")]
		protected override void CheckOnAwake()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x3721BC", Offset = "0x3721BC", VA = "0x3721BC", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x372558", Offset = "0x372558", VA = "0x372558")]
		private bool _IsHandClose()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000372")]
	public class GrabbedMeasureTriangle : GrabbedMeasurement
	{
		[Token(Token = "0x2000373")]
		private enum GRABBED_STATE
		{
			[Token(Token = "0x400149C")]
			Grabbed,
			[Token(Token = "0x400149D")]
			Held,
			[Token(Token = "0x400149E")]
			Dropped,
			[Token(Token = "0x400149F")]
			Idle
		}

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_measurementOrigin;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 m_measureOrigin;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GRABBED_STATE m_grabbedState;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private TrackRotation m_TrackRotation;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private INTERACTION_STATE m_lastInteractionState;

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x3707D4", Offset = "0x3707D4", VA = "0x3707D4")]
		public GrabbedMeasureTriangle()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x3708D0", Offset = "0x3708D0", VA = "0x3708D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x3708DC", Offset = "0x3708DC", VA = "0x3708DC", Slot = "5")]
		protected override void CheckOnAwake()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x370B74", Offset = "0x370B74", VA = "0x370B74", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x371168", Offset = "0x371168", VA = "0x371168", Slot = "9")]
		protected override float _GetTranslation()
		{
			return default(float);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x370FDC", Offset = "0x370FDC", VA = "0x370FDC")]
		private void _UpdateState()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x371A58", Offset = "0x371A58", VA = "0x371A58", Slot = "8")]
		protected override float _UpdateDisengadged(float lastValue)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000374")]
	public class GrabMeasureDistance : GrabMeasurement
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_measureScale;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_initialPosition;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion m_initialRotation;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform m_handTransform;

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x2D4484", Offset = "0x2D4484", VA = "0x2D4484")]
		public GrabMeasureDistance()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x2D4608", Offset = "0x2D4608", VA = "0x2D4608", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x2D468C", Offset = "0x2D468C", VA = "0x2D468C", Slot = "9")]
		protected override float _GetTranslation()
		{
			return default(float);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x2D4834", Offset = "0x2D4834", VA = "0x2D4834", Slot = "22")]
		protected virtual void _UseTranslation(float translateDistance)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x2D4838", Offset = "0x2D4838", VA = "0x2D4838", Slot = "17")]
		protected override void _ToggelInteraction([Optional] Collider other)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x2D4BCC", Offset = "0x2D4BCC", VA = "0x2D4BCC", Slot = "23")]
		protected virtual Transform _GetHand(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x2D4BD4", Offset = "0x2D4BD4", VA = "0x2D4BD4", Slot = "8")]
		protected override float _UpdateDisengadged(float translation)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000375")]
	public class GrabMeasureDistanceUW : GrabMeasureDistance, IInputMeasurementUW
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private InputMeasurementTypeUW m_inputMeasurementType;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MirroredInputReferenceController m_mirroredInputReferenceController;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool m_useHaptics;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HAPTIC_IMPULSE_GROUP_TYPE m_hapticImpluseGroup;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private HapticInput m_hapticInput;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x2D4C74", Offset = "0x2D4C74", VA = "0x2D4C74")]
		public GrabMeasureDistanceUW()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x2D4D04", Offset = "0x2D4D04", VA = "0x2D4D04", Slot = "21")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x2D4F4C", Offset = "0x2D4F4C", VA = "0x2D4F4C", Slot = "24")]
		public InputMeasurementTypeUW GetInputMeasurementType()
		{
			return default(InputMeasurementTypeUW);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x2D4F54", Offset = "0x2D4F54", VA = "0x2D4F54", Slot = "13")]
		protected override void _AddInputMeasurement()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x2D51FC", Offset = "0x2D51FC", VA = "0x2D51FC", Slot = "14")]
		protected override void _RemoveInputMeasurement()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x2D4DA4", Offset = "0x2D4DA4", VA = "0x2D4DA4")]
		private void _InitHapticInput()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x2D5428", Offset = "0x2D5428", VA = "0x2D5428", Slot = "20")]
		protected override void _UpdateHaptics(float output, TRACKED_OBJECT hand)
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class GrabMeasurement : InputMeasurement6DOF
	{
		[Token(Token = "0x2000377")]
		private enum COLLISION_METHOD
		{
			[Token(Token = "0x40014B2")]
			Finger,
			[Token(Token = "0x40014B3")]
			Hand
		}

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private COLLISION_METHOD m_collisionMethod;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_isBeingUsed;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Collider m_currentCollider;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private TRACKED_OBJECT m_handedness;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Collider m_onCollider;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private InteractableHandInput m_interactableHandInput;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private HandPose m_grabHandPose;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private TrackedHand m_trackedHand;

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x2D457C", Offset = "0x2D457C", VA = "0x2D457C")]
		public GrabMeasurement()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x2D69A0", Offset = "0x2D69A0", VA = "0x2D69A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x2D69A8", Offset = "0x2D69A8", VA = "0x2D69A8", Slot = "5")]
		protected override void CheckOnAwake()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x2D6A1C", Offset = "0x2D6A1C", VA = "0x2D6A1C", Slot = "10")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x2D6C34", Offset = "0x2D6C34", VA = "0x2D6C34", Slot = "11")]
		protected override void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x2D6CE0", Offset = "0x2D6CE0", VA = "0x2D6CE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x2D49B4", Offset = "0x2D49B4", VA = "0x2D49B4", Slot = "17")]
		protected virtual void _ToggelInteraction([Optional] Collider other)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x2D6D38", Offset = "0x2D6D38", VA = "0x2D6D38", Slot = "18")]
		protected virtual void _UpdateHandPoseOverride()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x2D6E38", Offset = "0x2D6E38", VA = "0x2D6E38", Slot = "19")]
		protected virtual TrackedHand _FindTrackedHand(Transform other)
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x2D6F78", Offset = "0x2D6F78", VA = "0x2D6F78", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x2D71DC", Offset = "0x2D71DC", VA = "0x2D71DC", Slot = "20")]
		protected virtual void _UpdateHaptics(float output, TRACKED_OBJECT hand)
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class GrabMeasureRotation : GrabMeasurement
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_measureScale;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_initialPosition;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion m_initialRotation;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TrackRotation m_trackRotation;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Transform m_handTransform;

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x2D5470", Offset = "0x2D5470", VA = "0x2D5470")]
		public GrabMeasureRotation()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x2D558C", Offset = "0x2D558C", VA = "0x2D558C", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x2D5610", Offset = "0x2D5610", VA = "0x2D5610", Slot = "9")]
		protected override float _GetTranslation()
		{
			return default(float);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x2D5C0C", Offset = "0x2D5C0C", VA = "0x2D5C0C", Slot = "17")]
		protected override void _ToggelInteraction([Optional] Collider other)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x2D5D5C", Offset = "0x2D5D5C", VA = "0x2D5D5C", Slot = "22")]
		protected virtual Transform _GetHand(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x2D5EA8", Offset = "0x2D5EA8", VA = "0x2D5EA8", Slot = "8")]
		protected override float _UpdateDisengadged(float translation)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000379")]
	public class GrabMeasureRotationUW : GrabMeasureRotation, IInputMeasurementUW
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private InputMeasurementTypeUW m_inputMeasurementType;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private MirroredInputReferenceController m_mirroredInputReferenceController;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_useHaptics;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private HAPTIC_IMPULSE_GROUP_TYPE m_hapticImpluseGroup;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HapticInput m_hapticInput;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x2D60A8", Offset = "0x2D60A8", VA = "0x2D60A8")]
		public GrabMeasureRotationUW()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x2D6138", Offset = "0x2D6138", VA = "0x2D6138", Slot = "21")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x2D61C4", Offset = "0x2D61C4", VA = "0x2D61C4", Slot = "23")]
		public InputMeasurementTypeUW GetInputMeasurementType()
		{
			return default(InputMeasurementTypeUW);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x2D61CC", Offset = "0x2D61CC", VA = "0x2D61CC", Slot = "13")]
		protected override void _AddInputMeasurement()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x2D6574", Offset = "0x2D6574", VA = "0x2D6574", Slot = "14")]
		protected override void _RemoveInputMeasurement()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x2D67B0", Offset = "0x2D67B0", VA = "0x2D67B0")]
		private void _InitHapticInput()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x2D6958", Offset = "0x2D6958", VA = "0x2D6958", Slot = "20")]
		protected override void _UpdateHaptics(float output, TRACKED_OBJECT hand)
		{
		}
	}
}
[Token(Token = "0x200037A")]
public interface IInputMeasurementUW
{
	[Token(Token = "0x600192E")]
	InputMeasurementTypeUW GetInputMeasurementType();
}
[Token(Token = "0x200037B")]
public enum InputMeasurementTypeUW
{
	[Token(Token = "0x40014BF")]
	Fuel,
	[Token(Token = "0x40014C0")]
	Magneto,
	[Token(Token = "0x40014C1")]
	Ignition,
	[Token(Token = "0x40014C2")]
	Flaps,
	[Token(Token = "0x40014C3")]
	FlightStick,
	[Token(Token = "0x40014C4")]
	Throttle,
	[Token(Token = "0x40014C5")]
	None
}
namespace TrackedInput
{
	[Token(Token = "0x200037C")]
	public class InputMeasurement : MonoBehaviour
	{
		[Token(Token = "0x200037D")]
		public enum MEASUREMENT_AXIS
		{
			[Token(Token = "0x40014D5")]
			X,
			[Token(Token = "0x40014D6")]
			Y,
			[Token(Token = "0x40014D7")]
			Z,
			[Token(Token = "0x40014D8")]
			Distance
		}

		[Token(Token = "0x200037E")]
		public enum INTERACTION_STATE
		{
			[Token(Token = "0x40014DA")]
			Active,
			[Token(Token = "0x40014DB")]
			Transitioning,
			[Token(Token = "0x40014DC")]
			Stationary
		}

		[Token(Token = "0x200037F")]
		public enum CENTERING_METHOD
		{
			[Token(Token = "0x40014DE")]
			Fixed,
			[Token(Token = "0x40014DF")]
			Lerp
		}

		[Token(Token = "0x2000380")]
		public enum ROUNDING_DIRECTION
		{
			[Token(Token = "0x40014E1")]
			Up,
			[Token(Token = "0x40014E2")]
			Closest,
			[Token(Token = "0x40014E3")]
			Down
		}

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected MEASUREMENT_AXIS m_measurementAxis;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected Transform m_measurenemtObject;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected INTERACTION_STATE m_interactionState;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CENTERING_METHOD m_centeringMethod;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_centeringSpeed;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_inputIncrements;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ROUNDING_DIRECTION m_roundingDirection;

		[Token(Token = "0x40014CD")]
		private const float SWITCH_TOLARANCE = 0.1f;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_increment;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_lastTranslationValue;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float m_currentTranslationValue;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected float m_inputRange;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected InteractableInput m_interactableOutput;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private GameManager m_gameManager;

		[Token(Token = "0x170003AE")]
		public InteractableInput InteractableOutput
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x37686C", Offset = "0x37686C", VA = "0x37686C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x371AAC", Offset = "0x371AAC", VA = "0x371AAC")]
		public InputMeasurement()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x376874", Offset = "0x376874", VA = "0x376874")]
		protected void _StartPause()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x3768F8", Offset = "0x3768F8", VA = "0x3768F8")]
		protected bool _IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x376948", Offset = "0x376948", VA = "0x376948", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x376C04", Offset = "0x376C04", VA = "0x376C04", Slot = "5")]
		protected virtual void CheckOnAwake()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x376C08", Offset = "0x376C08", VA = "0x376C08")]
		public void SetTranslationValue(float value)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x376B10", Offset = "0x376B10", VA = "0x376B10")]
		public void InitOutput(float output)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x376C4C", Offset = "0x376C4C", VA = "0x376C4C", Slot = "6")]
		protected virtual void _SetInput(float value)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x376C88", Offset = "0x376C88", VA = "0x376C88", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x371D5C", Offset = "0x371D5C", VA = "0x371D5C")]
		protected float _UpdateMotion(float translation)
		{
			return default(float);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x3707C0", Offset = "0x3707C0", VA = "0x3707C0", Slot = "8")]
		protected virtual float _UpdateDisengadged(float translation)
		{
			return default(float);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x371D6C", Offset = "0x371D6C", VA = "0x371D6C")]
		protected float _UpdateTransitioning(float currentOutput)
		{
			return default(float);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x376D94", Offset = "0x376D94", VA = "0x376D94", Slot = "9")]
		protected virtual float _GetTranslation()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000381")]
	public class InputMeasurement6DOF : InputMeasurement
	{
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_interactableWhileBusy;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected Transform m_referencePosition;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Transform m_referenceMirrorPosition;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static List<Transform> s_inputMeasurementInRange;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected InteractableHandInput m_interactableHandOutput;

		[Token(Token = "0x170003AF")]
		public Transform ReferencePosition
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x376E94", Offset = "0x376E94", VA = "0x376E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		public static List<Transform> InputMeasurementInRange
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x376EA4", Offset = "0x376EA4", VA = "0x376EA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x376D9C", Offset = "0x376D9C", VA = "0x376D9C")]
		public InputMeasurement6DOF()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x376DC8", Offset = "0x376DC8", VA = "0x376DC8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x376E60", Offset = "0x376E60", VA = "0x376E60", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x376E64", Offset = "0x376E64", VA = "0x376E64", Slot = "10")]
		protected virtual void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x376E74", Offset = "0x376E74", VA = "0x376E74", Slot = "11")]
		protected virtual void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x376E84", Offset = "0x376E84", VA = "0x376E84", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x376E9C", Offset = "0x376E9C", VA = "0x376E9C")]
		public void SetReferenceMirrorPosition(Transform referenceMirrorPosition)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x376F30", Offset = "0x376F30", VA = "0x376F30", Slot = "13")]
		protected virtual void _AddInputMeasurement()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x3770F8", Offset = "0x3770F8", VA = "0x3770F8", Slot = "14")]
		protected virtual void _RemoveInputMeasurement()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x377244", Offset = "0x377244", VA = "0x377244", Slot = "6")]
		protected override void _SetInput(float value)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x377330", Offset = "0x377330", VA = "0x377330", Slot = "15")]
		protected virtual void _SetInput(float value, TRACKED_OBJECT handedness)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x377410", Offset = "0x377410", VA = "0x377410")]
		public Transform GetNearestInputMeasurement(Transform referenceTransform)
		{
			return null;
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x37790C", Offset = "0x37790C", VA = "0x37790C")]
		public void ClearInputMeasurementInRange()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x3779C0", Offset = "0x3779C0", VA = "0x3779C0")]
		public Transform PickUpInput(Transform referenceTransform)
		{
			return null;
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x3779C4", Offset = "0x3779C4", VA = "0x3779C4", Slot = "16")]
		protected virtual bool _IsCorrectInput(Transform input)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000382")]
public class InputTrigger : MonoBehaviour
{
	[Token(Token = "0x2000383")]
	public enum TRIGGER_METHOD
	{
		[Token(Token = "0x40014F7")]
		Ridgidbody,
		[Token(Token = "0x40014F8")]
		Collider,
		[Token(Token = "0x40014F9")]
		Hand,
		[Token(Token = "0x40014FA")]
		IndexFinger,
		[Token(Token = "0x40014FB")]
		Tag,
		[Token(Token = "0x40014FC")]
		Layer,
		[Token(Token = "0x40014FD")]
		Name
	}

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TRIGGER_METHOD m_triggerMethod;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_desiredOutput;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_transitionDuration;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isBeingUsed;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractableHandInput m_interactableHandInput;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Collider m_currentCollider;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TRACKED_OBJECT m_currentTrackedObject;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Rigidbody m_requiredRigidbody;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider m_requiredCollider;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private string m_requiredTag;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask m_requiredLayer;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private string m_requiredName;

	[Token(Token = "0x170003B1")]
	public float DesiredOutput
	{
		[Token(Token = "0x6001950")]
		[Address(RVA = "0x518B38", Offset = "0x518B38", VA = "0x518B38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001951")]
		[Address(RVA = "0x518B40", Offset = "0x518B40", VA = "0x518B40")]
		set
		{
		}
	}

	[Token(Token = "0x170003B2")]
	public Rigidbody RequiredRigidbody
	{
		[Token(Token = "0x6001952")]
		[Address(RVA = "0x518C4C", Offset = "0x518C4C", VA = "0x518C4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001953")]
		[Address(RVA = "0x518C54", Offset = "0x518C54", VA = "0x518C54")]
		set
		{
		}
	}

	[Token(Token = "0x170003B3")]
	public Collider RequiredCollider
	{
		[Token(Token = "0x6001954")]
		[Address(RVA = "0x518C5C", Offset = "0x518C5C", VA = "0x518C5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001955")]
		[Address(RVA = "0x518C64", Offset = "0x518C64", VA = "0x518C64")]
		set
		{
		}
	}

	[Token(Token = "0x170003B4")]
	public string RequiredTag
	{
		[Token(Token = "0x6001956")]
		[Address(RVA = "0x518C6C", Offset = "0x518C6C", VA = "0x518C6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001957")]
		[Address(RVA = "0x518C74", Offset = "0x518C74", VA = "0x518C74")]
		set
		{
		}
	}

	[Token(Token = "0x170003B5")]
	public LayerMask RequiredLayer
	{
		[Token(Token = "0x6001958")]
		[Address(RVA = "0x518C7C", Offset = "0x518C7C", VA = "0x518C7C")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6001959")]
		[Address(RVA = "0x518C84", Offset = "0x518C84", VA = "0x518C84")]
		set
		{
		}
	}

	[Token(Token = "0x170003B6")]
	public string RequiredName
	{
		[Token(Token = "0x600195A")]
		[Address(RVA = "0x518C8C", Offset = "0x518C8C", VA = "0x518C8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600195B")]
		[Address(RVA = "0x518C94", Offset = "0x518C94", VA = "0x518C94")]
		set
		{
		}
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0x518B28", Offset = "0x518B28", VA = "0x518B28")]
	public InputTrigger()
	{
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0x518C9C", Offset = "0x518C9C", VA = "0x518C9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0x519160", Offset = "0x519160", VA = "0x519160")]
	private void Start()
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0x519194", Offset = "0x519194", VA = "0x519194")]
	private void Update()
	{
	}

	[Token(Token = "0x600195F")]
	[Address(RVA = "0x519540", Offset = "0x519540", VA = "0x519540")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0x519888", Offset = "0x519888", VA = "0x519888")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0x51992C", Offset = "0x51992C", VA = "0x51992C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0x5193EC", Offset = "0x5193EC", VA = "0x5193EC")]
	protected void _ToggelInteraction([Optional] Collider other)
	{
	}
}
namespace TrackedInput
{
	[Token(Token = "0x2000384")]
	public class TouchMeasureDistance : TouchMeasurement
	{
		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_measureScaler;

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x377B30", Offset = "0x377B30", VA = "0x377B30")]
		public TouchMeasureDistance()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x377C30", Offset = "0x377C30", VA = "0x377C30", Slot = "18")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x377EAC", Offset = "0x377EAC", VA = "0x377EAC", Slot = "9")]
		protected override float _GetTranslation()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000385")]
	public class TouchMeasureDistanceUW : TouchMeasureDistance, IInputMeasurementUW
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InputMeasurementTypeUW m_inputMeasurementType;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private MirroredInputReferenceController m_mirroredInputReferenceController;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool m_useHaptics;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private HAPTIC_IMPULSE_GROUP_TYPE m_hapticImpluseGroup;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HapticInput m_hapticInput;

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x37806C", Offset = "0x37806C", VA = "0x37806C")]
		public TouchMeasureDistanceUW()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x37811C", Offset = "0x37811C", VA = "0x37811C", Slot = "18")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x3781A8", Offset = "0x3781A8", VA = "0x3781A8", Slot = "19")]
		public InputMeasurementTypeUW GetInputMeasurementType()
		{
			return default(InputMeasurementTypeUW);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x3781B0", Offset = "0x3781B0", VA = "0x3781B0", Slot = "13")]
		protected override void _AddInputMeasurement()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x378458", Offset = "0x378458", VA = "0x378458", Slot = "14")]
		protected override void _RemoveInputMeasurement()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x378684", Offset = "0x378684", VA = "0x378684")]
		private void _InitHapticInput()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x3788A4", Offset = "0x3788A4", VA = "0x3788A4", Slot = "17")]
		protected override void _UpdateHaptics(float output, TRACKED_OBJECT hand)
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class TouchMeasurement : InputMeasurement6DOF
	{
		[Token(Token = "0x2000387")]
		private enum COLLISION_METHOD
		{
			[Token(Token = "0x400150B")]
			Finger,
			[Token(Token = "0x400150C")]
			Hand
		}

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private COLLISION_METHOD m_collisionMethod;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_trimTranslationAtExtent;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_isBeingUsed;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Collider m_currentCollider;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 m_measureOrigin;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TRACKED_OBJECT m_handedness;

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x377B3C", Offset = "0x377B3C", VA = "0x377B3C")]
		public TouchMeasurement()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x3788E8", Offset = "0x3788E8", VA = "0x3788E8", Slot = "5")]
		protected override void CheckOnAwake()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x378A6C", Offset = "0x378A6C", VA = "0x378A6C", Slot = "10")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x378F08", Offset = "0x378F08", VA = "0x378F08", Slot = "11")]
		protected override void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x378FC0", Offset = "0x378FC0", VA = "0x378FC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x378C90", Offset = "0x378C90", VA = "0x378C90")]
		protected void _ToggelInteraction([Optional] Collider other)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x379008", Offset = "0x379008", VA = "0x379008", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x3791F4", Offset = "0x3791F4", VA = "0x3791F4")]
		private float _TrimTranslationAtExtent(float translation)
		{
			return default(float);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x37988C", Offset = "0x37988C", VA = "0x37988C", Slot = "17")]
		protected virtual void _UpdateHaptics(float currentOutput, TRACKED_OBJECT hand)
		{
		}
	}
}
[Token(Token = "0x2000388")]
public class AnimateOnInput : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	public enum ANIMATION_METHOD
	{
		[Token(Token = "0x4001523")]
		Kinimatic,
		[Token(Token = "0x4001524")]
		Animation,
		[Token(Token = "0x4001525")]
		Wheel
	}

	[Token(Token = "0x200038A")]
	public enum ANIM_TYPES
	{
		[Token(Token = "0x4001527")]
		Position,
		[Token(Token = "0x4001528")]
		Rotation,
		[Token(Token = "0x4001529")]
		Scale
	}

	[Token(Token = "0x200038B")]
	public enum INPUT_METHOD
	{
		[Token(Token = "0x400152B")]
		Direct,
		[Token(Token = "0x400152C")]
		Toggle
	}

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_objectToAnimate;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ANIMATION_METHOD m_animationMethod;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AnimateObject m_animateObject;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_isToggeled;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_useCurrentPose;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 m_animStartPose;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 m_animOffsetPose;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Easing.EASING_TYPE m_easingMethod;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_lastInput;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private ANIM_TYPES m_animType;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private WheelCollider m_wheelCollider;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_maxSteerAngle;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform m_interactableInputTrans;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Transform m_interactableOutputTrans;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected IInteractableInput m_interactableInput;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected IInteractableInput m_interactableOutput;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private INPUT_METHOD m_inputMethod;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float[] m_toggleLevels;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_currentLevelIndex;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool m_enableNotches;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int[] m_notchLevels;

	[Token(Token = "0x170003B7")]
	private float _CurrentIndex
	{
		[Token(Token = "0x6001977")]
		[Address(RVA = "0x42A6D8", Offset = "0x42A6D8", VA = "0x42A6D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0x42A598", Offset = "0x42A598", VA = "0x42A598")]
	public AnimateOnInput()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0x42A720", Offset = "0x42A720", VA = "0x42A720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0x42B13C", Offset = "0x42B13C", VA = "0x42B13C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0x42B140", Offset = "0x42B140", VA = "0x42B140")]
	public void IntiStartingState()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0x42B790", Offset = "0x42B790", VA = "0x42B790")]
	private void Update()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0x42AA14", Offset = "0x42AA14", VA = "0x42AA14")]
	private void _InitKinimaticPoses()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x42B168", Offset = "0x42B168", VA = "0x42B168")]
	private void _InitKinimaticStartState()
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0x42B7B8", Offset = "0x42B7B8", VA = "0x42B7B8")]
	private void _UpdateKinimatic()
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0x42BEE0", Offset = "0x42BEE0", VA = "0x42BEE0")]
	private void _AdvanceKinimaticAnimation(float input)
	{
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0x42C11C", Offset = "0x42C11C", VA = "0x42C11C")]
	private float _DetermineNotchValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0x42C118", Offset = "0x42C118", VA = "0x42C118")]
	private void _UpdateNotchValue(float value)
	{
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0x42B400", Offset = "0x42B400", VA = "0x42B400")]
	private void _InitAnimationStartState()
	{
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0x42BAD0", Offset = "0x42BAD0", VA = "0x42BAD0")]
	private void _UpdateAnimation()
	{
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0x42C2E8", Offset = "0x42C2E8", VA = "0x42C2E8")]
	private void _AnimUpdateOutput()
	{
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0x42B500", Offset = "0x42B500", VA = "0x42B500")]
	private void _InitWheelStartState()
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0x42BCC0", Offset = "0x42BCC0", VA = "0x42BCC0")]
	private void _UpdateWheel()
	{
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0x42C4E8", Offset = "0x42C4E8", VA = "0x42C4E8")]
	private void _AdvanceWheelCollider(float input)
	{
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0x42C538", Offset = "0x42C538", VA = "0x42C538")]
	private void _AdvanceWheelPosition()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0x42ADB4", Offset = "0x42ADB4", VA = "0x42ADB4")]
	private static WheelCollider _FindWheelCollider(WheelCollider wheelCollider, Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0x42C6CC", Offset = "0x42C6CC", VA = "0x42C6CC")]
	private static WheelCollider[] _FindWheelColliders(WheelCollider[] wheelColliders, Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0x42C964", Offset = "0x42C964", VA = "0x42C964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181B30", Offset = "0x181B30")]
	private float <_InitKinimaticStartState>m__0(float n)
	{
		return default(float);
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0x42CA8C", Offset = "0x42CA8C", VA = "0x42CA8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181B40", Offset = "0x181B40")]
	private float <_InitWheelStartState>m__1(float n)
	{
		return default(float);
	}
}
[Token(Token = "0x200038C")]
public class AnimateOnInputAdvanced : AnimateOnInput
{
	[Token(Token = "0x600198D")]
	[Address(RVA = "0x42CBB4", Offset = "0x42CBB4", VA = "0x42CBB4")]
	public AnimateOnInputAdvanced()
	{
	}
}
namespace BPG.Platform
{
	[Token(Token = "0x200038D")]
	public class ArmModel3DOF : ArmModelBase
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 m_elbowRestPosition;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_wristRestPosition;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_controllerRestPosition;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_armExtensionOffset;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17C750", Offset = "0x17C750")]
		public float m_elbowBendRatio;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17C768", Offset = "0x17C768")]
		public float m_fadeControllerOffset;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17C784", Offset = "0x17C784")]
		public float m_fadeDistanceFromHeadForward;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17C7A0", Offset = "0x17C7A0")]
		public float m_fadeDistanceFromHeadSide;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17C7BC", Offset = "0x17C7BC")]
		public float m_tooltipMinDistanceFromFace;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17C7DC", Offset = "0x17C7DC")]
		public int m_tooltipMaxAngleFromCamera;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_isLockedToNeck;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IPlatformHelper m_platformHelper;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private IPlatformInputHelper m_platformInputHelper;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 m_neckPosition;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 m_elbowPosition;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Quaternion m_elbowRotation;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 m_wristPosition;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Quaternion m_wristRotation;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 m_controllerPosition;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Quaternion m_controllerRotation;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float m_controllerAlpha;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float m_tooltipAlpha;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Vector3 m_handedMultiplier;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected Vector3 m_torsoDirection;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Quaternion m_torsoRotation;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 DEFAULT_ELBOW_REST_POSITION;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3 DEFAULT_WRIST_REST_POSITION;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector3 DEFAULT_CONTROLLER_REST_POSITION;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly Vector3 DEFAULT_ARM_EXTENSION_OFFSET;

		[Token(Token = "0x400154A")]
		public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly Vector3 SHOULDER_POSITION;

		[Token(Token = "0x400154C")]
		protected const float MIN_EXTENSION_ANGLE = 7f;

		[Token(Token = "0x400154D")]
		protected const float MAX_EXTENSION_ANGLE = 60f;

		[Token(Token = "0x400154E")]
		protected const float EXTENSION_WEIGHT = 0.4f;

		[Token(Token = "0x400154F")]
		protected const float DELTA_ALPHA = 4f;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly Vector3 NECK_OFFSET;

		[Token(Token = "0x170003B8")]
		public override Vector3 ControllerPositionFromHead
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x4342B8", Offset = "0x4342B8", VA = "0x4342B8", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B9")]
		public override Quaternion ControllerRotationFromHead
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x4342CC", Offset = "0x4342CC", VA = "0x4342CC", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170003BA")]
		public override float ControllerAlpha
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x4342DC", Offset = "0x4342DC", VA = "0x4342DC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BB")]
		public override float TooltipAlpha
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x4342E4", Offset = "0x4342E4", VA = "0x4342E4", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BC")]
		public Vector3 NeckPosition
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x4342EC", Offset = "0x4342EC", VA = "0x4342EC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003BD")]
		public Vector3 ShoulderPosition
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x434300", Offset = "0x434300", VA = "0x434300")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003BE")]
		public Vector3 ElbowPosition
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x4344B0", Offset = "0x4344B0", VA = "0x4344B0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003BF")]
		public Quaternion ElbowRotation
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x4344C4", Offset = "0x4344C4", VA = "0x4344C4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170003C0")]
		public Vector3 WristPosition
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x4344D4", Offset = "0x4344D4", VA = "0x4344D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003C1")]
		public Quaternion WristRotation
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x4344E8", Offset = "0x4344E8", VA = "0x4344E8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x434064", Offset = "0x434064", VA = "0x434064")]
		public ArmModel3DOF()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x4341A8", Offset = "0x4341A8", VA = "0x4341A8", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x4342A4", Offset = "0x4342A4", VA = "0x4342A4", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x4342B4", Offset = "0x4342B4", VA = "0x4342B4", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x4344F8", Offset = "0x4344F8", VA = "0x4344F8", Slot = "11")]
		protected virtual void _GetPlatform()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x434594", Offset = "0x434594", VA = "0x434594", Slot = "12")]
		protected virtual void _OnControllerInputUpdated()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x434624", Offset = "0x434624", VA = "0x434624", Slot = "13")]
		protected virtual void _UpdateHandedness()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x434730", Offset = "0x434730", VA = "0x434730", Slot = "14")]
		protected virtual void _UpdateTorsoDirection(bool forceImmediate)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x434B40", Offset = "0x434B40", VA = "0x434B40", Slot = "15")]
		protected virtual void _UpdateNeckPosition()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x434CB0", Offset = "0x434CB0", VA = "0x434CB0", Slot = "16")]
		protected virtual Vector3 ApplyInverseNeckModel(Vector3 headPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x434F1C", Offset = "0x434F1C", VA = "0x434F1C", Slot = "17")]
		protected virtual void _ApplyArmModel()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x43532C", Offset = "0x43532C", VA = "0x43532C", Slot = "18")]
		protected virtual void SetUntransformedJointPositions()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x435058", Offset = "0x435058", VA = "0x435058")]
		protected void GetControllerRotation(out Quaternion rotation, out Quaternion xyRotation, out float xAngle)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x43546C", Offset = "0x43546C", VA = "0x43546C", Slot = "19")]
		protected virtual float CalculateExtensionRatio(float xAngle)
		{
			return default(float);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x435514", Offset = "0x435514", VA = "0x435514", Slot = "20")]
		protected virtual void ApplyExtensionOffset(float extensionRatio)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x435634", Offset = "0x435634", VA = "0x435634", Slot = "21")]
		protected virtual Quaternion CalculateLerpRotation(Quaternion xyRotation, float extensionRatio)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x4357C8", Offset = "0x4357C8", VA = "0x4357C8", Slot = "22")]
		protected virtual void _UpdateTransparency()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x435DCC", Offset = "0x435DCC", VA = "0x435DCC", Slot = "23")]
		protected virtual void CalculateFinalJointRotations(Quaternion controllerOrientation, Quaternion xyRotation, Quaternion lerpRotation)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x435FA0", Offset = "0x435FA0", VA = "0x435FA0", Slot = "24")]
		protected virtual void ApplyRotationToJoints()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x436184", Offset = "0x436184", VA = "0x436184", Slot = "25")]
		protected virtual void _ShowDebugGizmos()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class ArmModel3DOFDaydream : ArmModel3DOF
	{
		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x4367B0", Offset = "0x4367B0", VA = "0x4367B0")]
		public ArmModel3DOFDaydream()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x436830", Offset = "0x436830", VA = "0x436830", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x4368D0", Offset = "0x4368D0", VA = "0x4368D0", Slot = "9")]
		protected sealed override void Update()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x4368D4", Offset = "0x4368D4", VA = "0x4368D4", Slot = "10")]
		protected override void OnDisable()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public abstract class ArmModelBase : MonoBehaviour
	{
		[Token(Token = "0x170003C2")]
		public abstract Vector3 ControllerPositionFromHead
		{
			[Token(Token = "0x60019B2")]
			get;
		}

		[Token(Token = "0x170003C3")]
		public abstract Quaternion ControllerRotationFromHead
		{
			[Token(Token = "0x60019B3")]
			get;
		}

		[Token(Token = "0x170003C4")]
		public abstract float ControllerAlpha
		{
			[Token(Token = "0x60019B4")]
			get;
		}

		[Token(Token = "0x170003C5")]
		public abstract float TooltipAlpha
		{
			[Token(Token = "0x60019B5")]
			get;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x4341A0", Offset = "0x4341A0", VA = "0x4341A0")]
		protected ArmModelBase()
		{
		}
	}
}
[Token(Token = "0x2000390")]
public class CanvasInput : MonoBehaviour
{
	[Token(Token = "0x2000391")]
	public enum CANVAS_ACTION
	{
		[Token(Token = "0x400155B")]
		None = -1,
		[Token(Token = "0x400155C")]
		Abutton,
		[Token(Token = "0x400155D")]
		Bbutton,
		[Token(Token = "0x400155E")]
		Next,
		[Token(Token = "0x400155F")]
		Previous
	}

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private CANVAS_ACTION m_canvasAction;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_buttonType;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private ICanvasInput m_canvasInput;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractableInput m_activateInteractableInput;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InteractableInput m_rolloverInteractableInput;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_rolloverObject;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private List<AudioClip> m_audioClips;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip m_audioClip;

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0x3035AC", Offset = "0x3035AC", VA = "0x3035AC")]
	public CanvasInput()
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0x303640", Offset = "0x303640", VA = "0x303640")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0x303B7C", Offset = "0x303B7C", VA = "0x303B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0x3040B8", Offset = "0x3040B8", VA = "0x3040B8")]
	private AudioClip _GetAudioClip()
	{
		return null;
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0x304368", Offset = "0x304368", VA = "0x304368")]
	private void _PlayAudio(AudioClip clip)
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0x30382C", Offset = "0x30382C", VA = "0x30382C")]
	public static ICanvasInput FindICanvasInput(Transform transform, ICanvasInput iCanvasInput)
	{
		return null;
	}
}
[Token(Token = "0x2000392")]
public interface ICanvasInput
{
	[Token(Token = "0x60019BC")]
	void OnButtonA();

	[Token(Token = "0x60019BD")]
	void OnButtonB(bool isDirect = true);

	[Token(Token = "0x60019BE")]
	void OnButtonX();

	[Token(Token = "0x60019BF")]
	void OnButtonY();

	[Token(Token = "0x60019C0")]
	void OnButtonLB();

	[Token(Token = "0x60019C1")]
	void OnButtonRB();

	[Token(Token = "0x60019C2")]
	void OnClick(string buttonType);

	[Token(Token = "0x60019C3")]
	void OnPointerEnter(string buttonType);

	[Token(Token = "0x60019C4")]
	void OnPointerExit(string buttonType);

	[Token(Token = "0x60019C5")]
	AudioSource GetAudioSource();
}
[Token(Token = "0x2000393")]
public class DaydreamController : GameController
{
	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractableInput m_visibilityInteractableInput;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 m_inactiveOffset;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 m_positionScaler;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GvrBaseArmModel m_gvrArmModel;

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0x3B06A4", Offset = "0x3B06A4", VA = "0x3B06A4")]
	public DaydreamController()
	{
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0x3B0764", Offset = "0x3B0764", VA = "0x3B0764", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0x3B0874", Offset = "0x3B0874", VA = "0x3B0874")]
	private void Start()
	{
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0x3B0878", Offset = "0x3B0878", VA = "0x3B0878")]
	public void PropagateArmModel()
	{
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0x3B09F0", Offset = "0x3B09F0", VA = "0x3B09F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0x3B0ABC", Offset = "0x3B0ABC", VA = "0x3B0ABC")]
	private new void _SetpointerState(InteractableRaycaster.POINTER_STYLE pointerStyle)
	{
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0x3B0A98", Offset = "0x3B0A98", VA = "0x3B0A98")]
	private bool _IsControllerConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0x3B0B40", Offset = "0x3B0B40", VA = "0x3B0B40", Slot = "7")]
	protected override void _UpdateControllerPose()
	{
	}
}
[Token(Token = "0x2000394")]
public class DialControllerInput : InteractableControllerInput
{
	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_buttonInput;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_travelLastFrame;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float m_inputSpeed;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject m_selectedIndicator;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool m_isInput;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool InitComplete;

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0x3BFAF0", Offset = "0x3BFAF0", VA = "0x3BFAF0")]
	public DialControllerInput()
	{
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0x3BFB00", Offset = "0x3BFB00", VA = "0x3BFB00", Slot = "4")]
	protected override void _Awake()
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0x3BFB3C", Offset = "0x3BFB3C", VA = "0x3BFB3C", Slot = "5")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0x3BFD4C", Offset = "0x3BFD4C", VA = "0x3BFD4C", Slot = "6")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0x3C00D4", Offset = "0x3C00D4", VA = "0x3C00D4")]
	private void _OnInputStopped()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0x3C00D8", Offset = "0x3C00D8", VA = "0x3C00D8")]
	private void _AdjustDistance()
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0x3C019C", Offset = "0x3C019C", VA = "0x3C019C")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0x3C01CC", Offset = "0x3C01CC", VA = "0x3C01CC")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0x3C01FC", Offset = "0x3C01FC", VA = "0x3C01FC")]
	public void OnButtonAHeld()
	{
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0x3C0238", Offset = "0x3C0238", VA = "0x3C0238")]
	public void OnButtonB()
	{
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0x3C0268", Offset = "0x3C0268", VA = "0x3C0268")]
	public void OnButtonBHeld()
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0x3C02A8", Offset = "0x3C02A8", VA = "0x3C02A8")]
	private void _CustomResetVisualHaptics()
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0x3C02E0", Offset = "0x3C02E0", VA = "0x3C02E0")]
	public void InitAsOff()
	{
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0x3BFB60", Offset = "0x3BFB60", VA = "0x3BFB60")]
	public void InitAsOn()
	{
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0x3BFB68", Offset = "0x3BFB68", VA = "0x3BFB68")]
	public void InitAsValue(float input)
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000395")]
	public class DialTouchInput : GrabbableTouchInput
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_lastAngle;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_fullRotations;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_travelLastFrame;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 m_initialPosition;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion m_initialRotation;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool InitComplete;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_sqrDistanceBeforeCancel;

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x2B1E5C", Offset = "0x2B1E5C", VA = "0x2B1E5C")]
		public DialTouchInput()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x2B1EE4", Offset = "0x2B1EE4", VA = "0x2B1EE4", Slot = "8")]
		protected override void _Awake()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x2B23AC", Offset = "0x2B23AC", VA = "0x2B23AC", Slot = "9")]
		protected override void _Start()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x2B25BC", Offset = "0x2B25BC", VA = "0x2B25BC", Slot = "10")]
		protected override void _Update()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x2B2C70", Offset = "0x2B2C70", VA = "0x2B2C70", Slot = "11")]
		protected override void _OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x2B2C80", Offset = "0x2B2C80", VA = "0x2B2C80")]
		private void _ResetAngle()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x2B2C90", Offset = "0x2B2C90", VA = "0x2B2C90", Slot = "12")]
		protected override void _OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x2B2C94", Offset = "0x2B2C94", VA = "0x2B2C94")]
		private void _AdjustDistance()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x2B2D60", Offset = "0x2B2D60", VA = "0x2B2D60", Slot = "13")]
		protected override void _OnDestroy()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x2B3038", Offset = "0x2B3038", VA = "0x2B3038")]
		private void StartGrabHandler(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x2B3084", Offset = "0x2B3084", VA = "0x2B3084")]
		private void EndGrabHandler(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x2B31B4", Offset = "0x2B31B4", VA = "0x2B31B4")]
		private void _CustomResetVisualHaptics()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x2B31EC", Offset = "0x2B31EC", VA = "0x2B31EC")]
		public void InitAsOff()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x2B23D0", Offset = "0x2B23D0", VA = "0x2B23D0")]
		public void InitAsOn()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x2B23D8", Offset = "0x2B23D8", VA = "0x2B23D8")]
		public void InitAsValue(float input)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x2B31F4", Offset = "0x2B31F4", VA = "0x2B31F4", Slot = "17")]
		protected override void _OnStartGrab(EventArgs e)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x2B322C", Offset = "0x2B322C", VA = "0x2B322C", Slot = "18")]
		protected override void _OnGrabbing(EventArgs e)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x2B3264", Offset = "0x2B3264", VA = "0x2B3264", Slot = "19")]
		protected override void _OnEndGrab(EventArgs e)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x2B329C", Offset = "0x2B329C", VA = "0x2B329C", Slot = "20")]
		protected override void _OnIdleGrab(EventArgs e)
		{
		}
	}
}
[Token(Token = "0x2000396")]
public class FlightStickInput : MonoBehaviour
{
	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private InteractableInputXYZ m_aileronInteractiveInput;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InteractableInputXYZ m_elevatorInteractiveInput;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17C908", Offset = "0x17C908")]
	[SerializeField]
	private Transform m_grabStickController;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackedInput.Grabbable m_grabbableStick;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17C948", Offset = "0x17C948")]
	[SerializeField]
	private Vector3 m_aileronOffset;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 m_elevatorOffset;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector2 m_multiplier;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17C998", Offset = "0x17C998")]
	[SerializeField]
	private float m_normalizedRange;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector2 m_aileronLimit;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector2 m_elevatorLimit;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AnimationCurve m_motionCurve;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private InputManager.Vector m_vectorPointer;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17CA08", Offset = "0x17CA08")]
	[SerializeField]
	private CONTROLLER[] m_validControllers;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 m_originalGrabPosition;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion m_originalGrabRotation;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InputController m_inputControllerX;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private InputController m_inputControllerZ;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_hasReset;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private GenericInputFilter m_filterX;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GenericInputFilter m_filterZ;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private Transform m_flightStickBase;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform m_flightStick;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 baseOffset;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 stickOffset;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform correctedTargetPositionX;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform correctedTargetPositionZ;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float maxRotationX;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float rotationRangeX;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float minRotationX;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float maxRotationZ;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float rotationRangeZ;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float minRotationZ;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector2 normalizedInput;

	[Token(Token = "0x170003C6")]
	public Vector2 GetInput
	{
		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xBB44A8", Offset = "0xBB44A8", VA = "0xBB44A8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170003C7")]
	public float GetInputX
	{
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xBB44BC", Offset = "0xBB44BC", VA = "0xBB44BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003C8")]
	public float GetInputZ
	{
		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xBB44C4", Offset = "0xBB44C4", VA = "0xBB44C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60019F0")]
	[Address(RVA = "0xBB4274", Offset = "0xBB4274", VA = "0xBB4274")]
	public FlightStickInput()
	{
	}

	[Token(Token = "0x60019F4")]
	[Address(RVA = "0xBB44CC", Offset = "0xBB44CC", VA = "0xBB44CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60019F5")]
	[Address(RVA = "0xBB4518", Offset = "0xBB4518", VA = "0xBB4518")]
	private void Update()
	{
	}

	[Token(Token = "0x60019F6")]
	[Address(RVA = "0xBB44D0", Offset = "0xBB44D0", VA = "0xBB44D0")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60019F7")]
	[Address(RVA = "0xBB4AD4", Offset = "0xBB4AD4", VA = "0xBB4AD4")]
	private void InitializeGenericInput()
	{
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0xBB4C9C", Offset = "0xBB4C9C", VA = "0xBB4C9C")]
	private void InitializeInputControllers()
	{
	}

	[Token(Token = "0x60019F9")]
	[Address(RVA = "0xBB5038", Offset = "0xBB5038", VA = "0xBB5038")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0xBB4898", Offset = "0xBB4898", VA = "0xBB4898")]
	private void _AddListeners()
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0xBB503C", Offset = "0xBB503C", VA = "0xBB503C")]
	private void _RemoveListeners()
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0xBB46F8", Offset = "0xBB46F8", VA = "0xBB46F8")]
	private bool _IsNeeded()
	{
		return default(bool);
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0xBB47F0", Offset = "0xBB47F0", VA = "0xBB47F0")]
	private void _CleanUp()
	{
	}

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0xBB49CC", Offset = "0xBB49CC", VA = "0xBB49CC")]
	private void _SetGrabInitialTransform()
	{
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0xBB4600", Offset = "0xBB4600", VA = "0xBB4600")]
	private void _ProcessReset()
	{
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0xBB46DC", Offset = "0xBB46DC", VA = "0xBB46DC")]
	private void _ProcessGrabbing()
	{
	}

	[Token(Token = "0x6001A01")]
	[Address(RVA = "0xBB5890", Offset = "0xBB5890", VA = "0xBB5890")]
	private Vector3 FilterX()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0xBB5B50", Offset = "0xBB5B50", VA = "0xBB5B50")]
	private Vector3 FilterZ()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0xBB5170", Offset = "0xBB5170", VA = "0xBB5170")]
	private void PositionStick()
	{
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0xBB54EC", Offset = "0xBB54EC", VA = "0xBB54EC")]
	private void CheckForOverThrow()
	{
	}

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0xBB5C34", Offset = "0xBB5C34", VA = "0xBB5C34")]
	private void SetInput()
	{
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0xBB5EEC", Offset = "0xBB5EEC", VA = "0xBB5EEC")]
	private void OnInitializeStartTransform()
	{
	}
}
[Token(Token = "0x2000397")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174114", Offset = "0x174114")]
	private sealed class <_CheckForController>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool <controllerFound>__0;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal List<CONTROLLER>.Enumerator $locvar0;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal GameController $this;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x1700056F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xBBC9D4", Offset = "0xBBC9D4", VA = "0xBBC9D4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000570")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0xBBC9DC", Offset = "0xBBC9DC", VA = "0xBBC9DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xBBC014", Offset = "0xBBC014", VA = "0xBBC014")]
		[DebuggerHidden]
		public <_CheckForController>c__Iterator0()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xBBC390", Offset = "0xBBC390", VA = "0xBBC390", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xBBC9E4", Offset = "0xBBC9E4", VA = "0xBBC9E4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xBBC9F8", Offset = "0xBBC9F8", VA = "0xBBC9F8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private LoadingRoom m_loadingroom;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<CONTROLLER> m_ControllersToCheck;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	protected GameObject m_controllerModel;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject m_controllerParent;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected Transform m_raycasterLazerOrigin;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected static InteractableRaycaster m_interactableRaycaster;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GAME_STATE m_lastGameState;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool m_isInitalized;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x6001A07")]
	[Address(RVA = "0xBBBB44", Offset = "0xBBBB44", VA = "0xBBBB44")]
	public GameController()
	{
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0xBBBB54", Offset = "0xBBBB54", VA = "0xBBBB54", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0xBBBDF0", Offset = "0xBBBDF0", VA = "0xBBBDF0")]
	protected void UpdateController()
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0xBBBE14", Offset = "0xBBBE14", VA = "0xBBBE14")]
	protected void _UpdateRayOrigin(bool forceRayHandheld = false)
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0xBBBD6C", Offset = "0xBBBD6C", VA = "0xBBBD6C")]
	[DebuggerHidden]
	private IEnumerator _CheckForController()
	{
		return null;
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0xBBC01C", Offset = "0xBBC01C", VA = "0xBBC01C", Slot = "5")]
	protected virtual void _OnControllerFound()
	{
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0xBBC020", Offset = "0xBBC020", VA = "0xBBC020")]
	protected void _SetPointerStyle()
	{
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0xBBC2CC", Offset = "0xBBC2CC", VA = "0xBBC2CC", Slot = "6")]
	protected virtual InteractableRaycaster.POINTER_STYLE GetPointerStyle(GAME_STATE gameState)
	{
		return default(InteractableRaycaster.POINTER_STYLE);
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0xBBC1CC", Offset = "0xBBC1CC", VA = "0xBBC1CC")]
	protected void UpdateStateAndTargets()
	{
	}

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0xBBBF90", Offset = "0xBBBF90", VA = "0xBBBF90")]
	protected void _SetpointerState(InteractableRaycaster.POINTER_STYLE pointerStyle)
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0xBBC2DC", Offset = "0xBBC2DC", VA = "0xBBC2DC", Slot = "7")]
	protected virtual void _UpdateControllerPose()
	{
	}
}
[Token(Token = "0x2000398")]
public class GamePadController : GameController
{
	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractableInput m_visibilityInteractableInput;

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0xBC9AB8", Offset = "0xBC9AB8", VA = "0xBC9AB8")]
	public GamePadController()
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0xBC9AC8", Offset = "0xBC9AC8", VA = "0xBC9AC8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0xBC9AF8", Offset = "0xBC9AF8", VA = "0xBC9AF8")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x2000399")]
public class GearVrController : GameController
{
	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractableInput m_visibilityInteractableInput;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 m_inactiveOffset;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 m_positionScaler;

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0xBCB684", Offset = "0xBCB684", VA = "0xBCB684")]
	public GearVrController()
	{
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0xBCB74C", Offset = "0xBCB74C", VA = "0xBCB74C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0xBCB77C", Offset = "0xBCB77C", VA = "0xBCB77C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0xBCB8A8", Offset = "0xBCB8A8", VA = "0xBCB8A8")]
	private new void _SetpointerState(InteractableRaycaster.POINTER_STYLE pointerStyle)
	{
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0xBCB92C", Offset = "0xBCB92C", VA = "0xBCB92C", Slot = "7")]
	protected override void _UpdateControllerPose()
	{
	}
}
[Token(Token = "0x200039A")]
public class GenericInput : MonoBehaviour
{
	[Token(Token = "0x200039B")]
	public enum INPUT_TYPE
	{
		[Token(Token = "0x40015B5")]
		Analog,
		[Token(Token = "0x40015B6")]
		Digital
	}

	[Token(Token = "0x200039C")]
	public enum BUTTON_INPUT_METHOD
	{
		[Token(Token = "0x40015B8")]
		Down,
		[Token(Token = "0x40015B9")]
		DelayedDown,
		[Token(Token = "0x40015BA")]
		Pressed,
		[Token(Token = "0x40015BB")]
		DelayedPressed,
		[Token(Token = "0x40015BC")]
		Up,
		[Token(Token = "0x40015BD")]
		DelayedUp,
		[Token(Token = "0x40015BE")]
		Toggeled
	}

	[Token(Token = "0x200039D")]
	public enum GAZE_REQUIREMENT
	{
		[Token(Token = "0x40015C0")]
		Exempt = -1,
		[Token(Token = "0x40015C1")]
		GazedObject,
		[Token(Token = "0x40015C2")]
		PointerActive,
		[Token(Token = "0x40015C3")]
		PointerInactive,
		[Token(Token = "0x40015C4")]
		InactiveOnGaze,
		[Token(Token = "0x40015C5")]
		ActiveOnGaze
	}

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float m_delayTime;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_timeStop;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_delayedPressStart;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[SerializeField]
	private bool m_delayedPressRelease;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	private bool m_lastPressState;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	[SerializeField]
	private bool m_positiveDurringDelay;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_gazedLastLateUpdate;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected CONTROLLER[] m_controllers;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected INPUT_TYPE m_inputType;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected BUTTON_INPUT_METHOD m_buttonInputMethod;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GAZE_REQUIREMENT m_gazeRequirement;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected InteractableRaycaster m_interactableRaycaster;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputController InputController;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Transform m_interactableInputTrans;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected IInteractableInput m_interactableInput;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float m_lastInput;

	[Token(Token = "0x170003C9")]
	public CONTROLLER[] Controllers
	{
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xBCBDA8", Offset = "0xBCBDA8", VA = "0xBCBDA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xBCBDB0", Offset = "0xBCBDB0", VA = "0xBCBDB0")]
		set
		{
		}
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0xBCBCFC", Offset = "0xBCBCFC", VA = "0xBCBCFC")]
	public GenericInput()
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0xBCBDB8", Offset = "0xBCBDB8", VA = "0xBCBDB8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0xBCC2B0", Offset = "0xBCC2B0", VA = "0xBCC2B0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0xBCC3A4", Offset = "0xBCC3A4", VA = "0xBCC3A4")]
	private bool _CheckActiveController()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0xBCC528", Offset = "0xBCC528", VA = "0xBCC528")]
	public void ForceSetInput(float input)
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0xBCC580", Offset = "0xBCC580", VA = "0xBCC580", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0xBCC85C", Offset = "0xBCC85C", VA = "0xBCC85C")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0xBCC868", Offset = "0xBCC868", VA = "0xBCC868", Slot = "7")]
	protected virtual void ForceInputZero()
	{
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0xBCC914", Offset = "0xBCC914", VA = "0xBCC914", Slot = "8")]
	protected virtual void _InputAdvance(bool forceInputZero)
	{
	}

	[Token(Token = "0x6001A25")]
	[Address(RVA = "0xBCCC18", Offset = "0xBCCC18", VA = "0xBCCC18")]
	private void _SetDelayedPressState()
	{
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0xBCCD2C", Offset = "0xBCCD2C", VA = "0xBCCD2C")]
	private void _SetDelayedUpState()
	{
	}

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0xBCCE08", Offset = "0xBCCE08", VA = "0xBCCE08", Slot = "9")]
	protected virtual void _SetInput(float input)
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0xBCCEE8", Offset = "0xBCCEE8", VA = "0xBCCEE8", Slot = "10")]
	protected virtual void _SetInput(bool input)
	{
	}
}
[Token(Token = "0x200039E")]
public class GenericInputAdvanced : GenericInput
{
	[Token(Token = "0x200039F")]
	public enum FILTER_TYPE
	{
		[Token(Token = "0x40015CB")]
		None = -1,
		[Token(Token = "0x40015CC")]
		InputOnAndActive,
		[Token(Token = "0x40015CD")]
		InputOffOrInactive,
		[Token(Token = "0x40015CE")]
		InteractableRaycasterActive,
		[Token(Token = "0x40015CF")]
		InteractableRaycasterInactive
	}

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FILTER_TYPE m_filterMethod;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private InteractableInput[] m_interactableInputs;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_useGenericInputFilter;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private GenericInputFilter m_genericInputFilter;

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0xBCCFC8", Offset = "0xBCCFC8", VA = "0xBCCFC8")]
	public GenericInputAdvanced()
	{
	}

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0xBCCFD4", Offset = "0xBCCFD4", VA = "0xBCCFD4", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0xBCD010", Offset = "0xBCD010", VA = "0xBCD010", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0xBCD104", Offset = "0xBCD104", VA = "0xBCD104")]
	private bool _IsOtherInputActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0xBCD1B8", Offset = "0xBCD1B8", VA = "0xBCD1B8", Slot = "9")]
	protected override void _SetInput(float input)
	{
	}
}
[Serializable]
[Token(Token = "0x20003A0")]
public class GenericInputFilter
{
	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private float m_offsetInput;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_inputIsRotation;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool m_normalizeInput;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_normalizeRange;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_clampInput;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Easing.EASING_TYPE m_easingMethod;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector2 m_inputRange;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_clampingRange;

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0xBB4448", Offset = "0xBB4448", VA = "0xBB4448")]
	public GenericInputFilter()
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0xBB4DC8", Offset = "0xBB4DC8", VA = "0xBB4DC8")]
	public void InitValues(GenericInputFilterDO data)
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0xBB4EA8", Offset = "0xBB4EA8", VA = "0xBB4EA8")]
	public void Init()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0xBB5974", Offset = "0xBB5974", VA = "0xBB5974")]
	public float ProcessInputAdvanced(float input, bool useOffset = true)
	{
		return default(float);
	}
}
[Token(Token = "0x20003A1")]
public class GenericInputFilterDO
{
	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CC48", Offset = "0x17CC48")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CC48", Offset = "0x17CC48")]
	private float <offsetInput>k__BackingField;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CC7C", Offset = "0x17CC7C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CC7C", Offset = "0x17CC7C")]
	private bool <inputIsRotation>k__BackingField;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CCB0", Offset = "0x17CCB0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CCB0", Offset = "0x17CCB0")]
	private bool <normalizeInput>k__BackingField;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CCE4", Offset = "0x17CCE4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CCE4", Offset = "0x17CCE4")]
	private float <normalizeRange>k__BackingField;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CD18", Offset = "0x17CD18")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CD18", Offset = "0x17CD18")]
	private bool <clampInput>k__BackingField;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CD4C", Offset = "0x17CD4C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CD4C", Offset = "0x17CD4C")]
	private Easing.EASING_TYPE <easingMethod>k__BackingField;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17CD80", Offset = "0x17CD80")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17CD80", Offset = "0x17CD80")]
	private Vector2 <inputRange>k__BackingField;

	[Token(Token = "0x170003CA")]
	public float offsetInput
	{
		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xBCD20C", Offset = "0xBCD20C", VA = "0xBCD20C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181B60", Offset = "0x181B60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xBB4DB8", Offset = "0xBB4DB8", VA = "0xBB4DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181B70", Offset = "0x181B70")]
		set
		{
		}
	}

	[Token(Token = "0x170003CB")]
	public bool inputIsRotation
	{
		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xBCD214", Offset = "0xBCD214", VA = "0xBCD214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181B80", Offset = "0x181B80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xBB4D94", Offset = "0xBB4D94", VA = "0xBB4D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181B90", Offset = "0x181B90")]
		set
		{
		}
	}

	[Token(Token = "0x170003CC")]
	public bool normalizeInput
	{
		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xBCD21C", Offset = "0xBCD21C", VA = "0xBCD21C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181BA0", Offset = "0x181BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xBB4DA8", Offset = "0xBB4DA8", VA = "0xBB4DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181BB0", Offset = "0x181BB0")]
		set
		{
		}
	}

	[Token(Token = "0x170003CD")]
	public float normalizeRange
	{
		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xBCD224", Offset = "0xBCD224", VA = "0xBCD224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181BC0", Offset = "0x181BC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xBB4DB0", Offset = "0xBB4DB0", VA = "0xBB4DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181BD0", Offset = "0x181BD0")]
		set
		{
		}
	}

	[Token(Token = "0x170003CE")]
	public bool clampInput
	{
		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xBCD22C", Offset = "0xBCD22C", VA = "0xBCD22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181BE0", Offset = "0x181BE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xBB4D8C", Offset = "0xBB4D8C", VA = "0xBB4D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181BF0", Offset = "0x181BF0")]
		set
		{
		}
	}

	[Token(Token = "0x170003CF")]
	public Easing.EASING_TYPE easingMethod
	{
		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xBCD234", Offset = "0xBCD234", VA = "0xBCD234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181C00", Offset = "0x181C00")]
		get
		{
			return default(Easing.EASING_TYPE);
		}
		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xBB4DC0", Offset = "0xBB4DC0", VA = "0xBB4DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181C10", Offset = "0x181C10")]
		set
		{
		}
	}

	[Token(Token = "0x170003D0")]
	public Vector2 inputRange
	{
		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xBCD23C", Offset = "0xBCD23C", VA = "0xBCD23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181C20", Offset = "0x181C20")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xBB4D9C", Offset = "0xBB4D9C", VA = "0xBB4D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181C30", Offset = "0x181C30")]
		set
		{
		}
	}

	[Token(Token = "0x6001A32")]
	[Address(RVA = "0xBB4D84", Offset = "0xBB4D84", VA = "0xBB4D84")]
	public GenericInputFilterDO()
	{
	}
}
[Token(Token = "0x20003A2")]
public class GenericInputHanded : GenericInput
{
	[Token(Token = "0x20003A3")]
	public enum PRESSED_METHOD
	{
		[Token(Token = "0x40015F2")]
		Down,
		[Token(Token = "0x40015F3")]
		Pressed
	}

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TRACKED_OBJECT m_requiredHand;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TRACKED_OBJECT m_currentHand;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TRACKED_OBJECT m_lastHand;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool m_handCollisionRequired;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_leftHandInTrigger;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool m_rightHandInTrigger;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Tracked6DOFController m_trackedController;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool m_roundInput;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_roundTreshhold;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private PRESSED_METHOD m_pressedMethod;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_isPressed;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_isPressedInput;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_enableLocked;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private InteractableHandInput m_interactableHandInput;

	[Token(Token = "0x40015ED")]
	private const string LEFT_HAND_TAG = "HandLeft";

	[Token(Token = "0x40015EE")]
	private const string RIGHT_HAND_TAG = "HandRight";

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform m_handTransform;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_disableReleaseOnExitWhenGrabbed;

	[Token(Token = "0x170003D1")]
	public bool LeftHandInTrigger
	{
		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xBCD27C", Offset = "0xBCD27C", VA = "0xBCD27C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003D2")]
	public bool RightHandInTrigger
	{
		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xBCD284", Offset = "0xBCD284", VA = "0xBCD284")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0xBCD250", Offset = "0xBCD250", VA = "0xBCD250")]
	public GenericInputHanded()
	{
	}

	[Token(Token = "0x6001A44")]
	[Address(RVA = "0xBCD28C", Offset = "0xBCD28C", VA = "0xBCD28C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001A45")]
	[Address(RVA = "0xBCD3B8", Offset = "0xBCD3B8", VA = "0xBCD3B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0xBCD3CC", Offset = "0xBCD3CC", VA = "0xBCD3CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0xBCD4B0", Offset = "0xBCD4B0", VA = "0xBCD4B0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001A48")]
	[Address(RVA = "0xBCD4F8", Offset = "0xBCD4F8", VA = "0xBCD4F8", Slot = "8")]
	protected override void _InputAdvance(bool forceInputZero)
	{
	}

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0xBCD5D8", Offset = "0xBCD5D8", VA = "0xBCD5D8", Slot = "7")]
	protected override void ForceInputZero()
	{
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0xBCD5E4", Offset = "0xBCD5E4", VA = "0xBCD5E4", Slot = "10")]
	protected override void _SetInput(bool input)
	{
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0xBCD834", Offset = "0xBCD834", VA = "0xBCD834", Slot = "9")]
	protected override void _SetInput(float input)
	{
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0xBCD7B8", Offset = "0xBCD7B8", VA = "0xBCD7B8")]
	private bool _SetHandInCollision(bool zeroInput)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0xBCDA44", Offset = "0xBCDA44", VA = "0xBCDA44")]
	private void OnTriggerEnter(Collider Other)
	{
	}

	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0xBCDE5C", Offset = "0xBCDE5C", VA = "0xBCDE5C")]
	private void OnTriggerExit(Collider Other)
	{
	}
}
[Token(Token = "0x20003A4")]
public class GenericInputPassThrough : MonoBehaviour
{
	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private CONTROLLER[] m_controllers;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private InteractableInput m_interactableOutput;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractableInput m_interactablePrerequisite;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private InteractableHandInput m_interactableHandPrerequisite;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_requireSpecificHand;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private TRACKED_OBJECT m_requiredHand;

	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0xBCE17C", Offset = "0xBCE17C", VA = "0xBCE17C")]
	public GenericInputPassThrough()
	{
	}

	[Token(Token = "0x6001A50")]
	[Address(RVA = "0xBCE1F0", Offset = "0xBCE1F0", VA = "0xBCE1F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0xBCE4A4", Offset = "0xBCE4A4", VA = "0xBCE4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0xBCE648", Offset = "0xBCE648", VA = "0xBCE648")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0xBCE4A8", Offset = "0xBCE4A8", VA = "0xBCE4A8")]
	private bool _CheckActiveController()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003A5")]
public class TargetSpeed
{
	[Token(Token = "0x20003A6")]
	public enum COLLIDER_POSITION
	{
		[Token(Token = "0x4001608")]
		InFront,
		[Token(Token = "0x4001609")]
		Behind,
		[Token(Token = "0x400160A")]
		OutOfRange
	}

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private COLLIDER_POSITION m_colliderPosition;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float m_inRangeDistance;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_currentDistance;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_currentPlaybackSpeed;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_idealPlayBackSpeed;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_maxSpeedDeviation;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_playbackVelocity;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_coolDownTime;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_minPlayBackSpeed;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_maxPlayBackSpeed;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_idealTime;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_actualTime;

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0x2CB06C", Offset = "0x2CB06C", VA = "0x2CB06C")]
	public TargetSpeed()
	{
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0x2CB09C", Offset = "0x2CB09C", VA = "0x2CB09C")]
	public void InitPlayer()
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0x2CB0C0", Offset = "0x2CB0C0", VA = "0x2CB0C0")]
	public float ActualTime(float currentTime)
	{
		return default(float);
	}

	[Token(Token = "0x6001A57")]
	[Address(RVA = "0x2CB100", Offset = "0x2CB100", VA = "0x2CB100")]
	private float UpdateAvoidance()
	{
		return default(float);
	}

	[Token(Token = "0x6001A58")]
	[Address(RVA = "0x2CB404", Offset = "0x2CB404", VA = "0x2CB404")]
	private COLLIDER_POSITION _UpdateColliderPosition()
	{
		return default(COLLIDER_POSITION);
	}

	[Token(Token = "0x6001A59")]
	[Address(RVA = "0x2CB3F4", Offset = "0x2CB3F4", VA = "0x2CB3F4")]
	private float _UpdateIdealTime()
	{
		return default(float);
	}

	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0x2CB3FC", Offset = "0x2CB3FC", VA = "0x2CB3FC")]
	private float _UpdateActualTime()
	{
		return default(float);
	}
}
[Token(Token = "0x20003A7")]
public class GenericInputXYZ : MonoBehaviour
{
	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private CONTROLLER[] m_controllers;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GenericInput.GAZE_REQUIREMENT m_gazeRequirement;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_gazedLastLateUpdate;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected InteractableRaycaster m_interactableRaycaster;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public InputController InputControllerX;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputController InputControllerY;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public InputController InputControllerZ;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractableInputXYZ m_interactableInputXYZ;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 m_offset;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_lastInput;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_useGenericInputFilter;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GenericInputFilter m_genericInputFilter;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x170003D3")]
	public CONTROLLER[] Controllers
	{
		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xBCE8CC", Offset = "0xBCE8CC", VA = "0xBCE8CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xBCE8D4", Offset = "0xBCE8D4", VA = "0xBCE8D4")]
		set
		{
		}
	}

	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0xBCE7B0", Offset = "0xBCE7B0", VA = "0xBCE7B0")]
	public GenericInputXYZ()
	{
	}

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0xBCE8DC", Offset = "0xBCE8DC", VA = "0xBCE8DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0xBCEC14", Offset = "0xBCEC14", VA = "0xBCEC14")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A60")]
	[Address(RVA = "0xBCEC54", Offset = "0xBCEC54", VA = "0xBCEC54")]
	private void _CheckActiveController()
	{
	}

	[Token(Token = "0x6001A61")]
	[Address(RVA = "0xBCEDDC", Offset = "0xBCEDDC", VA = "0xBCEDDC")]
	public void ForceSetInput(float input, InteractableInputXYZ.Axis axis = InteractableInputXYZ.Axis.None)
	{
	}

	[Token(Token = "0x6001A62")]
	[Address(RVA = "0xBCEF58", Offset = "0xBCEF58", VA = "0xBCEF58")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A63")]
	[Address(RVA = "0xBCF47C", Offset = "0xBCF47C", VA = "0xBCF47C")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6001A64")]
	[Address(RVA = "0xBCF188", Offset = "0xBCF188", VA = "0xBCF188")]
	private void _InputAdvance(bool forceInputZero)
	{
	}
}
[Token(Token = "0x20003A8")]
public class GenericTouchInput : MonoBehaviour
{
	[Token(Token = "0x20003A9")]
	public enum TRANSLATION_METHOD
	{
		[Token(Token = "0x4001629")]
		Position,
		[Token(Token = "0x400162A")]
		Rotation
	}

	[Token(Token = "0x20003AA")]
	public enum TRANSLATION_AXIS
	{
		[Token(Token = "0x400162C")]
		X,
		[Token(Token = "0x400162D")]
		Y,
		[Token(Token = "0x400162E")]
		Z,
		[Token(Token = "0x400162F")]
		Distance,
		[Token(Token = "0x4001630")]
		SquareDistance
	}

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TRACKED_OBJECT m_requiredHand;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform m_trackedTransform;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform m_lastTrackedTransform;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CONTROLLER[] m_controllers;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private TRANSLATION_METHOD m_translationMethod;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TRANSLATION_AXIS m_translationAxis;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_currentTranslation;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_lastTranslation;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_inputTranslationScaler;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_invertOutput;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool m_clampInput;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float[] m_inputRange;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform m_interactableInputTrans;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected IInteractableInput m_interactableInput;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InteractableHandInput m_prerequisiteInput;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001A65")]
	[Address(RVA = "0x327D28", Offset = "0x327D28", VA = "0x327D28")]
	public GenericTouchInput()
	{
	}

	[Token(Token = "0x6001A66")]
	[Address(RVA = "0x327E94", Offset = "0x327E94", VA = "0x327E94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A67")]
	[Address(RVA = "0x3280E4", Offset = "0x3280E4", VA = "0x3280E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A68")]
	[Address(RVA = "0x3280E8", Offset = "0x3280E8", VA = "0x3280E8")]
	private bool _CheckActiveController()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A69")]
	[Address(RVA = "0x32826C", Offset = "0x32826C", VA = "0x32826C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0x3286F8", Offset = "0x3286F8", VA = "0x3286F8")]
	private Vector3 _GetTranslation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x328500", Offset = "0x328500", VA = "0x328500")]
	private void _GetHandTransform()
	{
	}

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0x3288E8", Offset = "0x3288E8", VA = "0x3288E8")]
	private void _UpdateInteraction()
	{
	}
}
[Token(Token = "0x20003AB")]
public class GoController : GameController
{
	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractableInput m_visibilityInteractableInput;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 m_inactiveOffset;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 m_positionScaler;

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0x329848", Offset = "0x329848", VA = "0x329848")]
	public GoController()
	{
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0x329908", Offset = "0x329908", VA = "0x329908", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0x32993C", Offset = "0x32993C", VA = "0x32993C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0x329A6C", Offset = "0x329A6C", VA = "0x329A6C")]
	private new void _SetpointerState(InteractableRaycaster.POINTER_STYLE pointerStyle)
	{
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0x329AF0", Offset = "0x329AF0", VA = "0x329AF0", Slot = "7")]
	protected override void _UpdateControllerPose()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x20003AC")]
	public class GrabbableTouchInput : InteractableTouchInput
	{
		[Token(Token = "0x20003AD")]
		protected enum GRAB_STATE
		{
			[Token(Token = "0x400163F")]
			Idle,
			[Token(Token = "0x4001640")]
			Start,
			[Token(Token = "0x4001641")]
			Grabbing,
			[Token(Token = "0x4001642")]
			End
		}

		[Token(Token = "0x20003AE")]
		protected delegate void GrabEventHandler(object sender, EventArgs e);

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_useHaptics;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public HapticInput HapticInput;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected TouchInput.Hands m_currentGrabHand;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected GRAB_STATE m_grabState;

		[Token(Token = "0x14000037")]
		protected event GrabEventHandler StartGrab
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x2B2184", Offset = "0x2B2184", VA = "0x2B2184")]
			add
			{
			}
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x2B2E20", Offset = "0x2B2E20", VA = "0x2B2E20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		protected event GrabEventHandler Grabbing
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x2B5280", Offset = "0x2B5280", VA = "0x2B5280")]
			add
			{
			}
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x2B538C", Offset = "0x2B538C", VA = "0x2B538C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		protected event GrabEventHandler EndGrab
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x2B2290", Offset = "0x2B2290", VA = "0x2B2290")]
			add
			{
			}
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x2B2F2C", Offset = "0x2B2F2C", VA = "0x2B2F2C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		protected event GrabEventHandler IdleGrab
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x2B5498", Offset = "0x2B5498", VA = "0x2B5498")]
			add
			{
			}
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x2B55A4", Offset = "0x2B55A4", VA = "0x2B55A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x2B1E60", Offset = "0x2B1E60", VA = "0x2B1E60")]
		public GrabbableTouchInput()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x2B20B8", Offset = "0x2B20B8", VA = "0x2B20B8", Slot = "8")]
		protected override void _Awake()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x2B2BC8", Offset = "0x2B2BC8", VA = "0x2B2BC8", Slot = "10")]
		protected override void _Update()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x2B4EE4", Offset = "0x2B4EE4", VA = "0x2B4EE4")]
		private void _InitHapticInput(HapticImpluseGroup hig)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x2B4FA4", Offset = "0x2B4FA4", VA = "0x2B4FA4")]
		private void _UpdateHaptics(float input, TRACKED_OBJECT hand)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x2B4ED4", Offset = "0x2B4ED4", VA = "0x2B4ED4")]
		private void _UpdateGrab()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x2B4FEC", Offset = "0x2B4FEC", VA = "0x2B4FEC")]
		private void _UpdateGrabState()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x2B5240", Offset = "0x2B5240", VA = "0x2B5240")]
		private void _SetGrabHandedness(bool setToHand)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x2B3210", Offset = "0x2B3210", VA = "0x2B3210", Slot = "17")]
		protected virtual void _OnStartGrab(EventArgs e)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x2B3248", Offset = "0x2B3248", VA = "0x2B3248", Slot = "18")]
		protected virtual void _OnGrabbing(EventArgs e)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x2B3280", Offset = "0x2B3280", VA = "0x2B3280", Slot = "19")]
		protected virtual void _OnEndGrab(EventArgs e)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x2B32B8", Offset = "0x2B32B8", VA = "0x2B32B8", Slot = "20")]
		protected virtual void _OnIdleGrab(EventArgs e)
		{
		}
	}
}
[Token(Token = "0x20003AF")]
public interface IInteractableInput
{
	[Token(Token = "0x6001A8A")]
	bool IsEnabled();

	[Token(Token = "0x6001A8B")]
	bool GetBoolInput();

	[Token(Token = "0x6001A8C")]
	float GetFloatInput();

	[Token(Token = "0x6001A8D")]
	void SetInput(float input);

	[Token(Token = "0x6001A8E")]
	void SetInput(bool input);

	[Token(Token = "0x6001A8F")]
	Transform GetTransform();

	[Token(Token = "0x6001A90")]
	void ForceInput(bool input);
}
[Serializable]
[Token(Token = "0x20003B0")]
public class InputController
{
	[Token(Token = "0x20003B1")]
	public enum RECENTER_METHOD
	{
		[Token(Token = "0x4001660")]
		Exempt = -1,
		[Token(Token = "0x4001661")]
		Proportional,
		[Token(Token = "0x4001662")]
		Smoothed
	}

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool Invert;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool IsComplex;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public bool IsProportional;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public bool IsBidirectional;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float InputSmoothTime;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17D094", Offset = "0x17D094")]
	public float InputSpeed;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17D0B0", Offset = "0x17D0B0")]
	public float InputRampTime;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17D0C8", Offset = "0x17D0C8")]
	public float InputAcceleration;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17D0E0", Offset = "0x17D0E0")]
	public float InputDeceleration;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RECENTER_METHOD RecenterMethod;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AnimationCurve MotionCurve;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputManager.Vector VectorPointer;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public InputManager.Axis AxisPointer;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputManager.Button ButtonPointerPositive;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public InputManager.Button ButtonPointerNegative;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Deadzone;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_currentVectorInput;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool EnableDebug;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_lastInput;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_inputSmoothVelocity;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_inputAccelerationTime;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_currentInput;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_lastGPCRefresh;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_buttonPressedLastFrame;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool m_buttonWasPressedThisFrame;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool m_buttonWasReleasedThisFrame;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_delayedInputStartTime;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_isDelayedButton;

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0x508388", Offset = "0x508388", VA = "0x508388")]
	public InputController()
	{
	}

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0x508490", Offset = "0x508490", VA = "0x508490")]
	public Vector3 GetVector(Transform currentTransform, Vector3 rotOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0x5086C8", Offset = "0x5086C8", VA = "0x5086C8")]
	public bool GetDigitalAxis(float threshhold = 0.75f)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0x508A84", Offset = "0x508A84", VA = "0x508A84")]
	public float GetAxisInput()
	{
		return default(float);
	}

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0x508DE4", Offset = "0x508DE4", VA = "0x508DE4")]
	public float GetAxisInput(CONTROLLER currentController)
	{
		return default(float);
	}

	[Token(Token = "0x6001A96")]
	[Address(RVA = "0x5092B0", Offset = "0x5092B0", VA = "0x5092B0")]
	public static float FilterMsTouchTrigger(InputManager.Axis axis, float input)
	{
		return default(float);
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0x509200", Offset = "0x509200", VA = "0x509200")]
	private static float FilterXboxTrigger()
	{
		return default(float);
	}

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0x508C64", Offset = "0x508C64", VA = "0x508C64")]
	private float FinalizeGetInput(float inputValue, bool checkButtons)
	{
		return default(float);
	}

	[Token(Token = "0x6001A99")]
	[Address(RVA = "0x5093A0", Offset = "0x5093A0", VA = "0x5093A0")]
	private float CheckButtons(float inputValue)
	{
		return default(float);
	}

	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0x509EB8", Offset = "0x509EB8", VA = "0x509EB8")]
	public float GetAnalogButton()
	{
		return default(float);
	}

	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0x509F80", Offset = "0x509F80", VA = "0x509F80")]
	public bool GetButton(bool getPositive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0x50A0C4", Offset = "0x50A0C4", VA = "0x50A0C4")]
	public bool GetButtonPressed(bool getPositive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0x50A0FC", Offset = "0x50A0FC", VA = "0x50A0FC")]
	public bool GetButtonReleased(bool getPositive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0x50A134", Offset = "0x50A134", VA = "0x50A134")]
	public bool GetDelayedButtonDown(float duration)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0x50A1EC", Offset = "0x50A1EC", VA = "0x50A1EC")]
	public bool GetDelayedButtonPressed(float duration)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x50A268", Offset = "0x50A268", VA = "0x50A268")]
	public bool GetDelayedButtonUp(float duration, bool positiveDurringDelay = false, bool pollButtton = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x50950C", Offset = "0x50950C", VA = "0x50950C")]
	private float UpdateInput(float inputValue)
	{
		return default(float);
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x50A324", Offset = "0x50A324", VA = "0x50A324")]
	public void SetCurrentInput(float inputAmount)
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x50A32C", Offset = "0x50A32C", VA = "0x50A32C")]
	public void SetCurrentInput(Vector3 inputAmount)
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0x50A338", Offset = "0x50A338", VA = "0x50A338")]
	public void ResetInputAcceleration()
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0x50A34C", Offset = "0x50A34C", VA = "0x50A34C")]
	public float OverrideInput(float input)
	{
		return default(float);
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x50A354", Offset = "0x50A354", VA = "0x50A354")]
	public float OverrideInput(bool input)
	{
		return default(float);
	}

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x50A3A0", Offset = "0x50A3A0", VA = "0x50A3A0")]
	public static InputController CopyInputControllerSettings(InputController source, InputController target)
	{
		return null;
	}
}
[Token(Token = "0x20003B2")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20003B3")]
	public enum Vector
	{
		[Token(Token = "0x4001682")]
		None = -1,
		[Token(Token = "0x4001683")]
		Rotation,
		[Token(Token = "0x4001684")]
		Position,
		[Token(Token = "0x4001685")]
		Max
	}

	[Token(Token = "0x20003B4")]
	public enum Axis
	{
		[Token(Token = "0x4001687")]
		None = -1,
		[Token(Token = "0x4001688")]
		LeftXAxis,
		[Token(Token = "0x4001689")]
		LeftYAxis,
		[Token(Token = "0x400168A")]
		LeftTrigger,
		[Token(Token = "0x400168B")]
		RightTrigger,
		[Token(Token = "0x400168C")]
		RightXAxis,
		[Token(Token = "0x400168D")]
		RightYAxis,
		[Token(Token = "0x400168E")]
		DPadXAxis,
		[Token(Token = "0x400168F")]
		DPadYAxis,
		[Token(Token = "0x4001690")]
		SecondaryLeftTrigger,
		[Token(Token = "0x4001691")]
		SecondaryRightTrigger,
		[Token(Token = "0x4001692")]
		Max
	}

	[Token(Token = "0x20003B5")]
	public enum Button
	{
		[Token(Token = "0x4001694")]
		None = -1,
		[Token(Token = "0x4001695")]
		A,
		[Token(Token = "0x4001696")]
		B,
		[Token(Token = "0x4001697")]
		X,
		[Token(Token = "0x4001698")]
		Y,
		[Token(Token = "0x4001699")]
		LeftShoulder,
		[Token(Token = "0x400169A")]
		RightShoulder,
		[Token(Token = "0x400169B")]
		Back,
		[Token(Token = "0x400169C")]
		Start,
		[Token(Token = "0x400169D")]
		LeftStick,
		[Token(Token = "0x400169E")]
		RightStick,
		[Token(Token = "0x400169F")]
		Up,
		[Token(Token = "0x40016A0")]
		Down,
		[Token(Token = "0x40016A1")]
		Left,
		[Token(Token = "0x40016A2")]
		Right,
		[Token(Token = "0x40016A3")]
		BtnBack,
		[Token(Token = "0x40016A4")]
		BtnNext,
		[Token(Token = "0x40016A5")]
		Break,
		[Token(Token = "0x40016A6")]
		ActionLeft,
		[Token(Token = "0x40016A7")]
		ActionRight,
		[Token(Token = "0x40016A8")]
		Max
	}

	[Token(Token = "0x20003B6")]
	private enum DIRECTION
	{
		[Token(Token = "0x40016AA")]
		None = -1,
		[Token(Token = "0x40016AB")]
		Up,
		[Token(Token = "0x40016AC")]
		Down,
		[Token(Token = "0x40016AD")]
		Left,
		[Token(Token = "0x40016AE")]
		Right
	}

	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174124", Offset = "0x174124")]
	private sealed class <GetGearVRControllerButton>c__AnonStorey0
	{
		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DIRECTION dpadDirection;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool bAllowed;

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x50FCF4", Offset = "0x50FCF4", VA = "0x50FCF4")]
		public <GetGearVRControllerButton>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x5187F8", Offset = "0x5187F8", VA = "0x5187F8")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174134", Offset = "0x174134")]
	private sealed class <GetDaydreamControllerButton>c__AnonStorey1
	{
		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DIRECTION dpadDirection;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool bAllowed;

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x5100B8", Offset = "0x5100B8", VA = "0x5100B8")]
		public <GetDaydreamControllerButton>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x5184E8", Offset = "0x5184E8", VA = "0x5184E8")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] AndroidAxisNames;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static string[] AndroidButtonNames;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] DesktopAxisNames;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static string[] DesktopButtonNames;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string[] GearVRAxisNames;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static string[] GearVRButtonNames;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[] NullAxisNames;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static string[] NullButtonNames;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string[] DaydreamAxisNames;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static string[] DaydreamButtonNames;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string[] XboxAxisNames;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static string[] XboxButtonNames;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string[] XbOneAxisNames;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static string[] XbOneButtonNames;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string[] MsTouchAxisNames;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static string[] MsTouchButtonNames;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int[] DefaultButtonIds;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static string[] AxisNames;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string[] ButtonNames;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static CONTROLLER currentController;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static PLATFORM currentPlatform;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static GvrBaseArmModel m_gvrArmModel;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static ArmModelBase m_waveArmModel;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static float ThreshTouchGrab;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float ThreshTouchDirection;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject[] m_inputObjects;

	[Token(Token = "0x400167D")]
	private const float m_dPadThreshhold = 0.1f;

	[Token(Token = "0x400167E")]
	private const float m_dPadBThreshold = 0.5f;

	[Token(Token = "0x400167F")]
	private const float m_dPadThreshholdLateralShift = 0.5f;

	[Token(Token = "0x4001680")]
	private const float m_dPadDaydreamThreshold = 0.25f;

	[Token(Token = "0x170003D4")]
	public static GvrBaseArmModel GvrArmModel
	{
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x50A5E0", Offset = "0x50A5E0", VA = "0x50A5E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D5")]
	public static ArmModelBase WaveArmModel
	{
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x50A6FC", Offset = "0x50A6FC", VA = "0x50A6FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0x50A56C", Offset = "0x50A56C", VA = "0x50A56C")]
	public InputManager()
	{
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x50A66C", Offset = "0x50A66C", VA = "0x50A66C")]
	public static void SetGvrArmModel(GvrBaseArmModel model)
	{
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x50A788", Offset = "0x50A788", VA = "0x50A788")]
	public static void SetWaveArmModel(ArmModelBase model)
	{
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x50A818", Offset = "0x50A818", VA = "0x50A818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x50B078", Offset = "0x50B078", VA = "0x50B078")]
	private void CheckQuestInput()
	{
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x50B4C0", Offset = "0x50B4C0", VA = "0x50B4C0")]
	public void VisualTest()
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0x50CE10", Offset = "0x50CE10", VA = "0x50CE10")]
	public static void AxisTest()
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0x50DC30", Offset = "0x50DC30", VA = "0x50DC30")]
	public static void TestButtons()
	{
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0x50A8C0", Offset = "0x50A8C0", VA = "0x50A8C0")]
	public void InitInput(PLATFORM platformToInit = PLATFORM.PC, CONTROLLER controllerToInit = CONTROLLER.Desktop)
	{
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0x50E940", Offset = "0x50E940", VA = "0x50E940")]
	public static void SetOverrideToMicrosoft6DOF()
	{
	}

	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0x50E820", Offset = "0x50E820", VA = "0x50E820")]
	private static void SetAxisNames(string[] axisNames)
	{
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0x50E8B0", Offset = "0x50E8B0", VA = "0x50E8B0")]
	private static void SetButtonNames(string[] buttonNames)
	{
	}

	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0x50E9EC", Offset = "0x50E9EC", VA = "0x50E9EC")]
	public static bool GetTouchButton(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0x508F74", Offset = "0x508F74", VA = "0x508F74")]
	public static float GetTouchAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x50F250", Offset = "0x50F250", VA = "0x50F250")]
	private static bool GetGamePadButton(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x50F480", Offset = "0x50F480", VA = "0x50F480")]
	private static float GetGamePadAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x50F808", Offset = "0x50F808", VA = "0x50F808")]
	private static float GetMsTouchAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x50F8D4", Offset = "0x50F8D4", VA = "0x50F8D4")]
	private static bool GetMsTouchButton(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x50F9A0", Offset = "0x50F9A0", VA = "0x50F9A0")]
	private static bool GetGearVRControllerButton(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0x50FCFC", Offset = "0x50FCFC", VA = "0x50FCFC")]
	private static float GetGearVRControllerAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0x50FE88", Offset = "0x50FE88", VA = "0x50FE88")]
	private static bool GetDaydreamControllerButton(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0x5100C0", Offset = "0x5100C0", VA = "0x5100C0")]
	private static float GetDaydreamControllerAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0x510118", Offset = "0x510118", VA = "0x510118")]
	private static bool GetWaveControllerButton(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0x510120", Offset = "0x510120", VA = "0x510120")]
	private static float GetWaveControllerAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0x5085E4", Offset = "0x5085E4", VA = "0x5085E4")]
	public static Vector3 GetVector(Vector vector, Transform currentTransform, bool enableDebug = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0x5101AC", Offset = "0x5101AC", VA = "0x5101AC")]
	public static Vector3 GetVector(Vector vector, Transform currentTransform, Vector3 rotOffset, bool enableDebug = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0x508858", Offset = "0x508858", VA = "0x508858")]
	public static float GetAxis(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x5117E4", Offset = "0x5117E4", VA = "0x5117E4")]
	public static float GetAxis(Axis axis, bool enableDebug)
	{
		return default(float);
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x509B0C", Offset = "0x509B0C", VA = "0x509B0C")]
	public static bool GetButton(Button button)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003B7")]
public class InteractableControllerInput : MonoBehaviour
{
	[Token(Token = "0x20003B8")]
	public enum INPUT_STATE
	{
		[Token(Token = "0x40016C1")]
		ExtentStart,
		[Token(Token = "0x40016C2")]
		Middle,
		[Token(Token = "0x40016C3")]
		ExtentStop
	}

	[Token(Token = "0x20003B9")]
	private enum DEVICE_MOVEMENT_TYPE
	{
		[Token(Token = "0x40016C5")]
		Translate,
		[Token(Token = "0x40016C6")]
		Rotate
	}

	[Token(Token = "0x20003BA")]
	public delegate void DeviceEventHandler();

	[Token(Token = "0x40016AF")]
	protected const float MAX_PERCENT_TO_SNAP = 0.015f;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public INPUT_STATE StartingInputState;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected INPUT_STATE m_currnetInputState;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected INPUT_STATE m_lastInputState;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17D108", Offset = "0x17D108")]
	public float StartInputValue;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool m_isBidirectional;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DEVICE_MOVEMENT_TYPE m_inputMovementType;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected Transform m_visualMesh;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float m_rangeOfMotion;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17D160", Offset = "0x17D160")]
	[SerializeField]
	private float m_returnSpeed;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Vector3 m_motionVector;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 m_startPosition;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_currDistance;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_prevDistance;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected InteractableInput m_interactableInput;

	[Token(Token = "0x1400003B")]
	public event DeviceEventHandler DeviceOnEvent
	{
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x51A8BC", Offset = "0x51A8BC", VA = "0x51A8BC")]
		add
		{
		}
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x51A9C8", Offset = "0x51A9C8", VA = "0x51A9C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public event DeviceEventHandler DeviceOffEvent
	{
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x51AAD4", Offset = "0x51AAD4", VA = "0x51AAD4")]
		add
		{
		}
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x51ABE0", Offset = "0x51ABE0", VA = "0x51ABE0")]
		remove
		{
		}
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x519E64", Offset = "0x519E64", VA = "0x519E64")]
	public InteractableControllerInput()
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x519F38", Offset = "0x519F38", VA = "0x519F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x519FF8", Offset = "0x519FF8", VA = "0x519FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x51A008", Offset = "0x51A008", VA = "0x51A008")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x51A018", Offset = "0x51A018", VA = "0x51A018")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0x51A028", Offset = "0x51A028", VA = "0x51A028", Slot = "4")]
	protected virtual void _Awake()
	{
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0x51A0B4", Offset = "0x51A0B4", VA = "0x51A0B4", Slot = "5")]
	protected virtual void _Start()
	{
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0x51A140", Offset = "0x51A140", VA = "0x51A140", Slot = "6")]
	protected virtual void _Update()
	{
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0x51A1CC", Offset = "0x51A1CC", VA = "0x51A1CC", Slot = "7")]
	protected virtual void _OnDestroy()
	{
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0x51A258", Offset = "0x51A258", VA = "0x51A258")]
	protected void _SetInputToIdle()
	{
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0x51A4F8", Offset = "0x51A4F8", VA = "0x51A4F8", Slot = "8")]
	protected virtual void _AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0x51A28C", Offset = "0x51A28C", VA = "0x51A28C")]
	private void _ResetVisualHapticsOnIdle()
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0x51A6C8", Offset = "0x51A6C8", VA = "0x51A6C8")]
	protected void _SetGuageState(INPUT_STATE inputState)
	{
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0x51A770", Offset = "0x51A770", VA = "0x51A770")]
	protected void _SetGuageState(float currentDistance)
	{
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0x51A724", Offset = "0x51A724", VA = "0x51A724")]
	private void _SwitchGuageState(INPUT_STATE currentGuageState)
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x51ACEC", Offset = "0x51ACEC", VA = "0x51ACEC", Slot = "9")]
	protected virtual void _OnDeviceOn()
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0x51AF10", Offset = "0x51AF10", VA = "0x51AF10", Slot = "10")]
	protected virtual void _OnDeviceOff()
	{
	}
}
[Token(Token = "0x20003BB")]
public class InteractableHandInput : InteractableInput
{
	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private TRACKED_OBJECT m_lastHandInteraction;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TRACKED_OBJECT m_currentFrameHand;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform m_lastHandTransform;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_currentFrameTransform;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_useHaptics;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HAPTIC_IMPULSE_GROUP_TYPE m_hapticImpluseGroup;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private HapticInput m_hapticInput;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InteractableInput m_hapticInputToFollow;

	[Token(Token = "0x170003D6")]
	public TRACKED_OBJECT CurrentHand
	{
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x51B008", Offset = "0x51B008", VA = "0x51B008")]
		get
		{
			return default(TRACKED_OBJECT);
		}
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x51B02C", Offset = "0x51B02C", VA = "0x51B02C")]
		set
		{
		}
	}

	[Token(Token = "0x170003D7")]
	public Transform CurrentHandTransform
	{
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x51B048", Offset = "0x51B048", VA = "0x51B048")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x51B064", Offset = "0x51B064", VA = "0x51B064")]
		set
		{
		}
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0x51AF70", Offset = "0x51AF70", VA = "0x51AF70")]
	public InteractableHandInput()
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x51B108", Offset = "0x51B108", VA = "0x51B108")]
	public void DropHand()
	{
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x51B114", Offset = "0x51B114", VA = "0x51B114")]
	public void Start()
	{
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x51B368", Offset = "0x51B368", VA = "0x51B368")]
	public void SetInput(float input, TRACKED_OBJECT hand, Transform handTransform)
	{
	}

	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0x51B508", Offset = "0x51B508", VA = "0x51B508")]
	public void SetInput(bool input, TRACKED_OBJECT hand, Transform handTransform)
	{
	}

	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0x51B6A0", Offset = "0x51B6A0", VA = "0x51B6A0", Slot = "11")]
	public override void SetInput(float input, TRACKED_OBJECT handedness = TRACKED_OBJECT.None)
	{
	}

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0x51B958", Offset = "0x51B958", VA = "0x51B958", Slot = "13")]
	public override void SetInput(bool input, TRACKED_OBJECT handedness = TRACKED_OBJECT.None)
	{
	}

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0x51B124", Offset = "0x51B124", VA = "0x51B124")]
	private void _InitHapticInput()
	{
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x51B8EC", Offset = "0x51B8EC", VA = "0x51B8EC")]
	private void _UpdateHaptics(float input, TRACKED_OBJECT hand)
	{
	}
}
[Token(Token = "0x20003BC")]
public class InteractableHandInteraction : MonoBehaviour
{
	[Token(Token = "0x20003BD")]
	private enum INTERACTION_RESULT
	{
		[Token(Token = "0x40016D7")]
		True,
		[Token(Token = "0x40016D8")]
		False
	}

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TRACKED_OBJECT m_requiredHand;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_leftHandInTrigger;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_rightHandInTrigger;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private INTERACTION_RESULT m_interactionResult;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_interactableInputTrans;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private IInteractableInput m_interactableInput;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_wasCollided;

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x51BB48", Offset = "0x51BB48", VA = "0x51BB48")]
	public InteractableHandInteraction()
	{
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x51BB58", Offset = "0x51BB58", VA = "0x51BB58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x51C010", Offset = "0x51C010", VA = "0x51C010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x51C01C", Offset = "0x51C01C", VA = "0x51C01C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x51C124", Offset = "0x51C124", VA = "0x51C124")]
	private bool _IsHandInCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0x51C148", Offset = "0x51C148", VA = "0x51C148")]
	private void OnTriggerEnter(Collider Other)
	{
	}

	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0x51C2DC", Offset = "0x51C2DC", VA = "0x51C2DC")]
	private void OnTriggerExit(Collider Other)
	{
	}
}
[Token(Token = "0x20003BE")]
public class InteractableInput : MonoBehaviour, IInteractableInput
{
	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float m_analogInputValue;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	protected bool m_acceptMutilpleInputs;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected int m_lastFrameUpdate;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_lastFrameOutput;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float m_currentFrameAnalogInput;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_lastFrameAnalogInput;

	[Token(Token = "0x170003D8")]
	protected float m_analogInput
	{
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x51B024", Offset = "0x51B024", VA = "0x51B024")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x51C458", Offset = "0x51C458", VA = "0x51C458")]
		set
		{
		}
	}

	[Token(Token = "0x170003D9")]
	public bool AcceptMutilpleInputs
	{
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x51C460", Offset = "0x51C460", VA = "0x51C460")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003DA")]
	public bool BoolInput
	{
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x51C468", Offset = "0x51C468", VA = "0x51C468")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003DB")]
	public float FloatInput
	{
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x51B8E4", Offset = "0x51B8E4", VA = "0x51B8E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0x51B000", Offset = "0x51B000", VA = "0x51B000")]
	public InteractableInput()
	{
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x519E48", Offset = "0x519E48", VA = "0x519E48", Slot = "5")]
	public bool GetBoolInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x51C484", Offset = "0x51C484", VA = "0x51C484")]
	private bool _GetBoolInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x51918C", Offset = "0x51918C", VA = "0x51918C", Slot = "6")]
	public float GetFloatInput()
	{
		return default(float);
	}

	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x51C4A0", Offset = "0x51C4A0", VA = "0x51C4A0")]
	private float _GetFloatInput()
	{
		return default(float);
	}

	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0x51C4A8", Offset = "0x51C4A8", VA = "0x51C4A8", Slot = "10")]
	public void ForceInput(bool input)
	{
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x51C500", Offset = "0x51C500", VA = "0x51C500", Slot = "11")]
	public virtual void SetInput(float input, TRACKED_OBJECT trackedObject = TRACKED_OBJECT.None)
	{
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x51B7FC", Offset = "0x51B7FC", VA = "0x51B7FC", Slot = "12")]
	public virtual void SetInput(float input)
	{
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x51C510", Offset = "0x51C510", VA = "0x51C510", Slot = "13")]
	public virtual void SetInput(bool input, TRACKED_OBJECT trackedObject = TRACKED_OBJECT.None)
	{
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x51BAB4", Offset = "0x51BAB4", VA = "0x51BAB4", Slot = "14")]
	public virtual void SetInput(bool input)
	{
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x51C520", Offset = "0x51C520", VA = "0x51C520", Slot = "4")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x51C528", Offset = "0x51C528", VA = "0x51C528", Slot = "9")]
	public Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x518D4C", Offset = "0x518D4C", VA = "0x518D4C")]
	public static InteractableInput FindInteractableInput(Transform transform, InteractableInput interactableInput)
	{
		return null;
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x51BCC0", Offset = "0x51BCC0", VA = "0x51BCC0")]
	public static IInteractableInput FindIInteractableInput(Transform transform, IInteractableInput iInteractableInput)
	{
		return null;
	}
}
[Token(Token = "0x20003BF")]
public class InteractableInputIncrement : MonoBehaviour, IInteractableInput
{
	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float m_indexingTime;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_invertIndexTime;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_iInteractableInputTrans;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IInteractableInput m_iInteractableInput;

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x51E4AC", Offset = "0x51E4AC", VA = "0x51E4AC")]
	public InteractableInputIncrement()
	{
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x51E4BC", Offset = "0x51E4BC", VA = "0x51E4BC", Slot = "4")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x51E4C4", Offset = "0x51E4C4", VA = "0x51E4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0x51E664", Offset = "0x51E664", VA = "0x51E664", Slot = "5")]
	public bool GetBoolInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0x51E73C", Offset = "0x51E73C", VA = "0x51E73C", Slot = "6")]
	public float GetFloatInput()
	{
		return default(float);
	}

	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0x51E814", Offset = "0x51E814", VA = "0x51E814", Slot = "10")]
	public void ForceInput(bool input)
	{
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0x51E8F4", Offset = "0x51E8F4", VA = "0x51E8F4", Slot = "7")]
	public void SetInput(float input)
	{
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0x51EAC8", Offset = "0x51EAC8", VA = "0x51EAC8", Slot = "8")]
	public void SetInput(bool input)
	{
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0x51ECA8", Offset = "0x51ECA8", VA = "0x51ECA8", Slot = "9")]
	public Transform GetTransform()
	{
		return null;
	}
}
[Token(Token = "0x20003C0")]
public class InteractableInputXYZ : MonoBehaviour, IInteractableInput
{
	[Token(Token = "0x20003C1")]
	public enum Axis
	{
		[Token(Token = "0x40016E6")]
		None = -1,
		[Token(Token = "0x40016E7")]
		X,
		[Token(Token = "0x40016E8")]
		Y,
		[Token(Token = "0x40016E9")]
		Z
	}

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Vector3 m_vectorInput;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Axis m_defaultSingleAxis;

	[Token(Token = "0x170003DC")]
	public Axis DefaultSingleAxis
	{
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x51ECEC", Offset = "0x51ECEC", VA = "0x51ECEC")]
		get
		{
			return default(Axis);
		}
	}

	[Token(Token = "0x170003DD")]
	public Vector3 VectorInput
	{
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x51ECF4", Offset = "0x51ECF4", VA = "0x51ECF4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170003DE")]
	public float FloatInput
	{
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x51ED1C", Offset = "0x51ED1C", VA = "0x51ED1C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003DF")]
	public bool BoolInput
	{
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x51EDAC", Offset = "0x51EDAC", VA = "0x51EDAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003E0")]
	public float FloatInputX
	{
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x51EEA4", Offset = "0x51EEA4", VA = "0x51EEA4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003E1")]
	public float FloatInputY
	{
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x51EEF0", Offset = "0x51EEF0", VA = "0x51EEF0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003E2")]
	public float FloatInputZ
	{
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x51EEF8", Offset = "0x51EEF8", VA = "0x51EEF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0x51ECDC", Offset = "0x51ECDC", VA = "0x51ECDC")]
	public InteractableInputXYZ()
	{
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0x51EF00", Offset = "0x51EF00", VA = "0x51EF00", Slot = "10")]
	public void ForceInput(bool input)
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0x51EFE8", Offset = "0x51EFE8", VA = "0x51EFE8")]
	public void SetInput(Vector3 input)
	{
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x51EFF4", Offset = "0x51EFF4", VA = "0x51EFF4")]
	public void SetInput(float input, Axis axis)
	{
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x51ED08", Offset = "0x51ED08", VA = "0x51ED08")]
	private Vector3 _GetVectorInput()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x51EEAC", Offset = "0x51EEAC", VA = "0x51EEAC")]
	private float _GetFloatInput(Axis axis)
	{
		return default(float);
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x51F02C", Offset = "0x51F02C", VA = "0x51F02C", Slot = "5")]
	public bool GetBoolInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x51EDB0", Offset = "0x51EDB0", VA = "0x51EDB0")]
	private bool _GetBoolInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x51F030", Offset = "0x51F030", VA = "0x51F030", Slot = "6")]
	public float GetFloatInput()
	{
		return default(float);
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x51ED64", Offset = "0x51ED64", VA = "0x51ED64")]
	private float _GetFloatInput()
	{
		return default(float);
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0x51F078", Offset = "0x51F078", VA = "0x51F078", Slot = "7")]
	public void SetInput(float input)
	{
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0x51F0B4", Offset = "0x51F0B4", VA = "0x51F0B4", Slot = "8")]
	public void SetInput(bool input)
	{
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0x51F11C", Offset = "0x51F11C", VA = "0x51F11C", Slot = "4")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x51F124", Offset = "0x51F124", VA = "0x51F124", Slot = "9")]
	public Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x51F158", Offset = "0x51F158", VA = "0x51F158")]
	public static InteractableInputXYZ FindInteractableInputXYZ(Transform transform, InteractableInputXYZ interactableInputXYZ)
	{
		return null;
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x51F56C", Offset = "0x51F56C", VA = "0x51F56C")]
	public static IInteractableInput FindIInteractableInput(Transform transform, IInteractableInput iInteractableInput)
	{
		return null;
	}
}
[Token(Token = "0x20003C2")]
public class InteractableRaycaster : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003C3")]
	private class PointerState
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CROSSHAIR_MODE CrossHairMode;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform RaycastOrigin;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool UseLineRenderer;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool UseRaycastCollisionMarker;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool UseRaycastNoCollisionMarker;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool UseRaycastDepthMarker;

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x51F718", Offset = "0x51F718", VA = "0x51F718")]
		public PointerState()
		{
		}
	}

	[Token(Token = "0x20003C4")]
	public enum POINTER_STYLE
	{
		[Token(Token = "0x4001713")]
		None,
		[Token(Token = "0x4001714")]
		Handheld,
		[Token(Token = "0x4001715")]
		GazeBased
	}

	[Token(Token = "0x20003C5")]
	public enum CROSSHAIR_MODE
	{
		[Token(Token = "0x4001717")]
		Passive,
		[Token(Token = "0x4001718")]
		Active
	}

	[Token(Token = "0x20005B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174144", Offset = "0x174144")]
	private sealed class <_UpdateCrossHair>c__AnonStorey0
	{
		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RaycastHit hit;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal GameObject hitObject;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal InteractableRaycaster $this;

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x52069C", Offset = "0x52069C", VA = "0x52069C")]
		public <_UpdateCrossHair>c__AnonStorey0()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x521288", Offset = "0x521288", VA = "0x521288")]
		internal void <>m__0()
		{
		}
	}

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public POINTER_STYLE PointerStyle;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private PointerState m_handHeldPointer;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private PointerState m_gazeBasedPointer;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CROSSHAIR_MODE m_mode;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask m_raycastMask;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isGazing;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject m_lastGameObject;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_scaleAtDistance;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_offsetFromObjects;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_fixedDepth;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_rayDistance;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_rotateWithCamera;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_markerScale;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform m_raycastOrigin;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_useRaycastCollisionMarker;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_raycastCollisionMarker;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_raycastCollisionMarkerScale;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_useRaycastNoCollisionMarker;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private GameObject m_raycastNoCollisionMarker;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_raycastNoCollisionMarkerScale;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_useRaycastDepthMarker;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject m_raycastDepthMarker;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 m_raycastDepthMarkerScale;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool m_useLineRenderer;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private Material m_beamMaterial;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer m_lineRenderer;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private bool m_checkForInput;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public InputController InputButtonA;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public InputController InputButtonB;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public InputController InputButtonX;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public InputController InputButtonY;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InputController InputButtonLB;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public InputController InputButtonRB;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x170003E3")]
	public bool IsGazing
	{
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x51F740", Offset = "0x51F740", VA = "0x51F740")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0x51F570", Offset = "0x51F570", VA = "0x51F570")]
	public InteractableRaycaster()
	{
	}

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0x51F748", Offset = "0x51F748", VA = "0x51F748")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0x51F9D8", Offset = "0x51F9D8", VA = "0x51F9D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0x51FBE8", Offset = "0x51FBE8", VA = "0x51FBE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0x520468", Offset = "0x520468", VA = "0x520468")]
	public void SetRayCastOrigin(POINTER_STYLE pointerStyle, Transform transform, bool forceRayHandheld = false)
	{
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0x5204C0", Offset = "0x5204C0", VA = "0x5204C0")]
	public void SetRayCasterType(POINTER_STYLE pointerStyle)
	{
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0x51FE74", Offset = "0x51FE74", VA = "0x51FE74")]
	private void _DisableRenderers()
	{
	}

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x52014C", Offset = "0x52014C", VA = "0x52014C")]
	private void _UpdateCrossHair()
	{
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x5208E8", Offset = "0x5208E8", VA = "0x5208E8")]
	private RaycastHit _CastRay()
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x520CF8", Offset = "0x520CF8", VA = "0x520CF8")]
	private void _PlaceRaycastMarker(GameObject marker, Vector3 hitPosition, float hitDistance)
	{
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x521124", Offset = "0x521124", VA = "0x521124")]
	private void _DrawLineRenderer(Vector3 toPosition)
	{
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x5206A4", Offset = "0x5206A4", VA = "0x5206A4")]
	private string _CheckForButton()
	{
		return null;
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x520060", Offset = "0x520060", VA = "0x520060")]
	private void _DeactivateUnhitHitObject([Optional] GameObject currentHitObject)
	{
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x52120C", Offset = "0x52120C", VA = "0x52120C")]
	private void _DeactivateGazeObject(GameObject currentGameObject)
	{
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0x5208E0", Offset = "0x5208E0", VA = "0x5208E0")]
	private void _SaveLastGameObject(GameObject gameObjectToStore)
	{
	}
}
[Token(Token = "0x20003C6")]
public class InteractableRaycasterInteraction : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	private enum INTERACTION_METHOD
	{
		[Token(Token = "0x4001720")]
		OnGaze,
		[Token(Token = "0x4001721")]
		PointerActive
	}

	[Token(Token = "0x20003C8")]
	private enum GAZE_RESULT
	{
		[Token(Token = "0x4001723")]
		True,
		[Token(Token = "0x4001724")]
		False
	}

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private INTERACTION_METHOD m_gazeMethod;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GAZE_RESULT m_gazeResult;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_interactableInputTrans;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IInteractableInput m_interactableInput;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_wasGazed;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractableRaycaster m_interactableRaycaster;

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0x5213AC", Offset = "0x5213AC", VA = "0x5213AC")]
	public InteractableRaycasterInteraction()
	{
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x5213B4", Offset = "0x5213B4", VA = "0x5213B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x521598", Offset = "0x521598", VA = "0x521598")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x521850", Offset = "0x521850", VA = "0x521850")]
	public void OnGaze()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x20003C9")]
	public class InteractableTouchInput : Grabbable
	{
		[Token(Token = "0x20003CA")]
		public enum INPUT_STATE
		{
			[Token(Token = "0x400173F")]
			ExtentStart,
			[Token(Token = "0x4001740")]
			Middle,
			[Token(Token = "0x4001741")]
			ExtentStop
		}

		[Token(Token = "0x20003CB")]
		protected enum INPUT_DIRECTION
		{
			[Token(Token = "0x4001743")]
			X,
			[Token(Token = "0x4001744")]
			Y,
			[Token(Token = "0x4001745")]
			Z
		}

		[Token(Token = "0x20003CC")]
		private enum DEVICE_MOVEMENT_TYPE
		{
			[Token(Token = "0x4001747")]
			Translate,
			[Token(Token = "0x4001748")]
			Rotate
		}

		[Token(Token = "0x20003CD")]
		public delegate void DeviceEventHandler();

		[Token(Token = "0x4001725")]
		protected const float MAX_PERCENT_TO_SNAP = 0.015f;

		[Token(Token = "0x4001726")]
		protected const float MAX_GRABBABLE_DISTANCE = 0.1f;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public INPUT_STATE StartingInputState;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected INPUT_STATE m_currnetInputState;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected INPUT_STATE m_lastInputState;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17D450", Offset = "0x17D450")]
		public float StartInputValue;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected INPUT_DIRECTION m_inputDirection;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool m_isBidirectional;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected TouchInput.Hands m_currentHand;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform m_touchHand;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Collider m_touchCollider;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector3 m_startTouch;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected bool m_isTouched;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DEVICE_MOVEMENT_TYPE m_inputMovementType;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected Transform m_visualMesh;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected float m_rangeOfMotion;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17D4B8", Offset = "0x17D4B8")]
		[SerializeField]
		private float m_returnSpeed;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Vector3 m_motionVector;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3 m_startPosition;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float m_currDistance;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float m_prevDistance;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected bool m_isGrabbable;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		protected InteractableInput m_interactableInput;

		[Token(Token = "0x1400003D")]
		public event DeviceEventHandler DeviceOnEvent
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x270B58", Offset = "0x270B58", VA = "0x270B58")]
			add
			{
			}
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x270C64", Offset = "0x270C64", VA = "0x270C64")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event DeviceEventHandler DeviceOffEvent
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x270D70", Offset = "0x270D70", VA = "0x270D70")]
			add
			{
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x270E7C", Offset = "0x270E7C", VA = "0x270E7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x26FA94", Offset = "0x26FA94", VA = "0x26FA94")]
		public InteractableTouchInput()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x26FB8C", Offset = "0x26FB8C", VA = "0x26FB8C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x26FC64", Offset = "0x26FC64", VA = "0x26FC64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x26FC74", Offset = "0x26FC74", VA = "0x26FC74")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x26FC84", Offset = "0x26FC84", VA = "0x26FC84", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x26FDA0", Offset = "0x26FDA0", VA = "0x26FDA0")]
		protected void _StartInteract(GameObject obj)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x26FFFC", Offset = "0x26FFFC", VA = "0x26FFFC", Slot = "7")]
		protected virtual void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x2700DC", Offset = "0x2700DC", VA = "0x2700DC")]
		protected void _ResetTouch()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x27017C", Offset = "0x27017C", VA = "0x27017C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x2701A8", Offset = "0x2701A8", VA = "0x2701A8", Slot = "8")]
		protected virtual void _Awake()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x270234", Offset = "0x270234", VA = "0x270234", Slot = "9")]
		protected virtual void _Start()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x2702C0", Offset = "0x2702C0", VA = "0x2702C0", Slot = "10")]
		protected virtual void _Update()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x27034C", Offset = "0x27034C", VA = "0x27034C", Slot = "11")]
		protected virtual void _OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x2703D8", Offset = "0x2703D8", VA = "0x2703D8", Slot = "12")]
		protected virtual void _OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x270464", Offset = "0x270464", VA = "0x270464", Slot = "13")]
		protected virtual void _OnDestroy()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x26FEC4", Offset = "0x26FEC4", VA = "0x26FEC4")]
		private void _SetHandedness(GameObject col)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x2704F0", Offset = "0x2704F0", VA = "0x2704F0")]
		protected void _SetInputToIdle()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x270794", Offset = "0x270794", VA = "0x270794", Slot = "14")]
		protected virtual void _AdjustCurrentDistance()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x270524", Offset = "0x270524", VA = "0x270524")]
		private void _ResetVisualHapticsOnIdle()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x270964", Offset = "0x270964", VA = "0x270964")]
		protected void _SetGuageState(INPUT_STATE inputState)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x270A0C", Offset = "0x270A0C", VA = "0x270A0C")]
		protected void _SetGuageState(float currentDistance)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x2709C0", Offset = "0x2709C0", VA = "0x2709C0")]
		private void _SwitchGuageState(INPUT_STATE currentGuageState)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x270F88", Offset = "0x270F88", VA = "0x270F88", Slot = "15")]
		protected virtual void _OnDeviceOn()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x2711AC", Offset = "0x2711AC", VA = "0x2711AC", Slot = "16")]
		protected virtual void _OnDeviceOff()
		{
		}
	}
}
[Token(Token = "0x20003CE")]
public class LookController : MonoBehaviour
{
	[Token(Token = "0x20003CF")]
	public enum LOOK_TYPE
	{
		[Token(Token = "0x4001758")]
		Rotation,
		[Token(Token = "0x4001759")]
		Position
	}

	[Token(Token = "0x20005B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174154", Offset = "0x174154")]
	private sealed class <_WaitForController>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LookController $this;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000571")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x35A24C", Offset = "0x35A24C", VA = "0x35A24C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000572")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x35A254", Offset = "0x35A254", VA = "0x35A254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x3599B4", Offset = "0x3599B4", VA = "0x3599B4")]
		[DebuggerHidden]
		public <_WaitForController>c__Iterator0()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x35A130", Offset = "0x35A130", VA = "0x35A130", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x35A25C", Offset = "0x35A25C", VA = "0x35A25C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x35A270", Offset = "0x35A270", VA = "0x35A270", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_targetObject;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_activeLastFrame;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_lastInputX;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_lastInputY;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_lastInputXYZ;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LOOK_TYPE m_lookType;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private InteractableInput m_interactableInputX;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InteractableInput m_interactableInputY;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private InteractableInputXYZ m_interactableInputXYZ;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 m_motionScaler;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector2 m_rotationRange;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 m_originalOrentation;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private CONTROLLER[] m_validControllers;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LookController lookController;

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0x359560", Offset = "0x359560", VA = "0x359560")]
	public LookController()
	{
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0x359680", Offset = "0x359680", VA = "0x359680")]
	public static LookController Instance()
	{
		return null;
	}

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0x359878", Offset = "0x359878", VA = "0x359878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0x359930", Offset = "0x359930", VA = "0x359930")]
	[DebuggerHidden]
	private IEnumerator _WaitForController()
	{
		return null;
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0x3599BC", Offset = "0x3599BC", VA = "0x3599BC")]
	private void _CheckForValidController()
	{
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0x359AEC", Offset = "0x359AEC", VA = "0x359AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0x359BA4", Offset = "0x359BA4", VA = "0x359BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x359C48", Offset = "0x359C48", VA = "0x359C48")]
	private void _UpdateXY()
	{
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0x359E9C", Offset = "0x359E9C", VA = "0x359E9C")]
	private void _UpdateXYZ()
	{
	}
}
[Token(Token = "0x20003D0")]
public class MouseLookController : MonoBehaviour
{
	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string mouseInputX;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string mouseInputY;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector2 rotationRange;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotationSpeed;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dampingTime;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool autoZeroVerticalOnMobile;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool autoZeroHorizontalOnMobile;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool relative;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_TargetAngles;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_FollowAngles;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_FollowVelocity;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion m_OriginalRotation;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MouseLookController mouseLookController;

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x361EBC", Offset = "0x361EBC", VA = "0x361EBC")]
	public MouseLookController()
	{
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x361FDC", Offset = "0x361FDC", VA = "0x361FDC")]
	public static MouseLookController Instance()
	{
		return null;
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x3621D4", Offset = "0x3621D4", VA = "0x3621D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x36222C", Offset = "0x36222C", VA = "0x36222C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20003D1")]
public class MRTouchController : Tracked6DOFController
{
	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0x35A2F8", Offset = "0x35A2F8", VA = "0x35A2F8")]
	public MRTouchController()
	{
	}
}
[Token(Token = "0x20003D2")]
public class OculusTouchController : Tracked6DOFController
{
	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private HandHeldObject m_handHeldObject;

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0x2AB368", Offset = "0x2AB368", VA = "0x2AB368")]
	public OculusTouchController()
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0x2AB3E4", Offset = "0x2AB3E4", VA = "0x2AB3E4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0x2AB41C", Offset = "0x2AB41C", VA = "0x2AB41C", Slot = "9")]
	protected override void _EnableRay(bool isEnabled)
	{
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0x2AB458", Offset = "0x2AB458", VA = "0x2AB458", Slot = "7")]
	protected override void _UpdateControllerPose()
	{
	}
}
[Token(Token = "0x20003D3")]
public class OculusTouchControllerUltrawings : OculusTouchController
{
	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0x2AB4D4", Offset = "0x2AB4D4", VA = "0x2AB4D4")]
	public OculusTouchControllerUltrawings()
	{
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0x2AB4D8", Offset = "0x2AB4D8", VA = "0x2AB4D8", Slot = "7")]
	protected override void _UpdateControllerPose()
	{
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0x2AB61C", Offset = "0x2AB61C", VA = "0x2AB61C", Slot = "10")]
	protected override void _UpdatePointerFinger()
	{
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0x2AB748", Offset = "0x2AB748", VA = "0x2AB748", Slot = "8")]
	protected override void _ShowLaser()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0x2AB894", Offset = "0x2AB894", VA = "0x2AB894", Slot = "11")]
	protected override void _SetLaserType()
	{
	}
}
[Token(Token = "0x20003D4")]
public class OnInputController : MonoBehaviour
{
	[Token(Token = "0x20003D5")]
	public enum INTERACTION_RESULT
	{
		[Token(Token = "0x4001775")]
		Enable,
		[Token(Token = "0x4001776")]
		Disable,
		[Token(Token = "0x4001777")]
		SetGameState,
		[Token(Token = "0x4001778")]
		SetSimMode,
		[Token(Token = "0x4001779")]
		SetSiteBlocker,
		[Token(Token = "0x400177A")]
		SetVehicleActive,
		[Token(Token = "0x400177B")]
		SetGotoIsland
	}

	[Token(Token = "0x20003D6")]
	public enum INTERACTION_REQUISITE
	{
		[Token(Token = "0x400177D")]
		EnableDisable,
		[Token(Token = "0x400177E")]
		OnlyEnable,
		[Token(Token = "0x400177F")]
		OnlyDisable
	}

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private INTERACTION_RESULT m_interactionResult;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GAME_STATE m_validGameState;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private FLIGHT_CONTROL_TYPE m_validSimMode;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SiteBlocker.MODE m_validSiteBlockMode;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private VEHICLE_TYPE m_validVehicle;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ISLAND_TYPE m_validIsland;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private INTERACTION_REQUISITE m_interactionRequisite;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_enabledWhenFading;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_target;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_interactableInputTrans;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private IInteractableInput m_interactableInput;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0x2ADDA4", Offset = "0x2ADDA4", VA = "0x2ADDA4")]
	public OnInputController()
	{
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0x2ADDCC", Offset = "0x2ADDCC", VA = "0x2ADDCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x2ADF84", Offset = "0x2ADF84", VA = "0x2ADF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x2AE028", Offset = "0x2AE028", VA = "0x2AE028")]
	private void Update()
	{
	}
}
[Token(Token = "0x20003D7")]
public class StateInput : MonoBehaviour
{
	[Token(Token = "0x20003D8")]
	public enum STATE_CHECK
	{
		[Token(Token = "0x4001787")]
		IsActive,
		[Token(Token = "0x4001788")]
		GameState
	}

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private STATE_CHECK m_stateCheck;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject m_objectToCheck;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GAME_STATE m_requiredGameState;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_invertOutput;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InteractableInput m_inputToEffect;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameManager m_gameManager;

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x2C111C", Offset = "0x2C111C", VA = "0x2C111C")]
	public StateInput()
	{
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0x2C112C", Offset = "0x2C112C", VA = "0x2C112C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0x2C11CC", Offset = "0x2C11CC", VA = "0x2C11CC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20003D9")]
public class Tracked6DOFController : GameController
{
	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174164", Offset = "0x174164")]
	private sealed class <_WaitToInitialize>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Tracked6DOFController $this;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000573")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x2D2DD0", Offset = "0x2D2DD0", VA = "0x2D2DD0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000574")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x2D2DD8", Offset = "0x2D2DD8", VA = "0x2D2DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x2D2608", Offset = "0x2D2608", VA = "0x2D2608")]
		[DebuggerHidden]
		public <_WaitToInitialize>c__Iterator0()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x2D2BBC", Offset = "0x2D2BBC", VA = "0x2D2BBC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x2D2DE0", Offset = "0x2D2DE0", VA = "0x2D2DE0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x2D2DF4", Offset = "0x2D2DF4", VA = "0x2D2DF4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected InteractableInput m_visibilityInteractableInput;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected InteractableInput m_indexInputLeft;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected InteractableInput m_indexInputRight;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Transform m_leftHandRayOrigin;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform m_rightHandRayOrigin;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Transform m_leftHandMirrorRayOrigin;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform m_rightHandMirrorRayOrigin;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected Vector3 m_inactiveOffset;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_initializer;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected TRACKED_OBJECT m_handedness;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected TRACKED_OBJECT m_previousHandedness;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private GAME_STATE m_prevoiusGameState;

	[Token(Token = "0x170003E4")]
	public TRACKED_OBJECT Handedness
	{
		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x2D2464", Offset = "0x2D2464", VA = "0x2D2464")]
		get
		{
			return default(TRACKED_OBJECT);
		}
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x2D23A8", Offset = "0x2D23A8", VA = "0x2D23A8")]
	public Tracked6DOFController()
	{
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x2D246C", Offset = "0x2D246C", VA = "0x2D246C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x2D2584", Offset = "0x2D2584", VA = "0x2D2584")]
	[DebuggerHidden]
	private IEnumerator _WaitToInitialize()
	{
		return null;
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0x2D2610", Offset = "0x2D2610", VA = "0x2D2610")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B80")]
	[Address(RVA = "0x2D2894", Offset = "0x2D2894", VA = "0x2D2894", Slot = "8")]
	protected virtual void _ShowLaser()
	{
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0x2D28CC", Offset = "0x2D28CC", VA = "0x2D28CC", Slot = "9")]
	protected virtual void _EnableRay(bool isEnabled)
	{
	}

	[Token(Token = "0x6001B82")]
	[Address(RVA = "0x2D28D0", Offset = "0x2D28D0", VA = "0x2D28D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0x2D28E4", Offset = "0x2D28E4", VA = "0x2D28E4", Slot = "10")]
	protected virtual void _UpdatePointerFinger()
	{
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0x2D2750", Offset = "0x2D2750", VA = "0x2D2750")]
	protected bool _IsRayEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x2D2974", Offset = "0x2D2974", VA = "0x2D2974", Slot = "6")]
	protected override InteractableRaycaster.POINTER_STYLE GetPointerStyle(GAME_STATE gameState)
	{
		return default(InteractableRaycaster.POINTER_STYLE);
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x2D297C", Offset = "0x2D297C", VA = "0x2D297C", Slot = "11")]
	protected virtual void _SetLaserType()
	{
	}
}
namespace TrackedInput
{
	[Serializable]
	[Token(Token = "0x20003DA")]
	public class HandHeldObject
	{
		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GameObject m_heldObject;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private HandPose m_handPose;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MovementInteractionManager m_movementInteractionManager;

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x375250", Offset = "0x375250", VA = "0x375250")]
		public HandHeldObject()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x375258", Offset = "0x375258", VA = "0x375258")]
		public void Init()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x37551C", Offset = "0x37551C", VA = "0x37551C")]
		public void Update(TRACKED_OBJECT currentHand, float indexInput = 0f)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x3755B0", Offset = "0x3755B0", VA = "0x3755B0")]
		private void _SetHeldPose(TRACKED_OBJECT currentHand, float indexInput, bool useMirror)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public struct GrabbableGrabMsg
	{
		[Token(Token = "0x4001798")]
		public const string MsgNameGrabBegin = "OnGrabBegin";

		[Token(Token = "0x4001799")]
		public const string MsgNameGrabEnd = "OnGrabEnd";

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grabbable Sender;
	}
	[Token(Token = "0x20003DC")]
	public struct GrabbableOverlapMsg
	{
		[Token(Token = "0x400179B")]
		public const string MsgNameOverlapBegin = "OnOverlapBegin";

		[Token(Token = "0x400179C")]
		public const string MsgNameOverlapEnd = "OnOverlapEnd";

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grabbable Sender;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public TrackedHand Hand;
	}
	[Token(Token = "0x20003DD")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private InteractableHandInput m_interactableHandInput;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected bool m_allowOffhandGrab;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		protected bool m_snapPosition;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[SerializeField]
		protected bool m_snapOrientation;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected Transform m_snapOffset;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Collider[] m_grabPoints;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool m_grabbedKinematic;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Collider m_grabbedCollider;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Grabber m_grabbedBy;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TrackedHand m_overlapHand;

		[Token(Token = "0x170003E5")]
		public bool AllowOffhandGrab
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x2D71F0", Offset = "0x2D71F0", VA = "0x2D71F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E6")]
		public bool IsGrabbed
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x2D71F8", Offset = "0x2D71F8", VA = "0x2D71F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E7")]
		public bool SnapPosition
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x2D7284", Offset = "0x2D7284", VA = "0x2D7284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E8")]
		public bool SnapOrientation
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x2D728C", Offset = "0x2D728C", VA = "0x2D728C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		public Transform SnapOffset
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x2D7294", Offset = "0x2D7294", VA = "0x2D7294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		public Grabber GrabbedBy
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x2D729C", Offset = "0x2D729C", VA = "0x2D729C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		public Transform GrabbedTransform
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x2D72A4", Offset = "0x2D72A4", VA = "0x2D72A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		public Rigidbody GrabbedRigidbody
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x2D72D0", Offset = "0x2D72D0", VA = "0x2D72D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		public Collider[] GrabPoints
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x2D72FC", Offset = "0x2D72FC", VA = "0x2D72FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x2D71E0", Offset = "0x2D71E0", VA = "0x2D71E0")]
		public Grabbable()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x2D7304", Offset = "0x2D7304", VA = "0x2D7304", Slot = "4")]
		public virtual void GrabBegin(Grabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x2D74FC", Offset = "0x2D74FC", VA = "0x2D74FC", Slot = "5")]
		public virtual void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x2D76E4", Offset = "0x2D76E4", VA = "0x2D76E4")]
		public void OverlapBegin(TrackedHand hand)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x2D7778", Offset = "0x2D7778", VA = "0x2D7778")]
		public void OverlapEnd(TrackedHand hand)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x2D7810", Offset = "0x2D7810", VA = "0x2D7810", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x2D7AB0", Offset = "0x2D7AB0", VA = "0x2D7AB0", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x2D7B38", Offset = "0x2D7B38", VA = "0x2D7B38", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x2D74A8", Offset = "0x2D74A8", VA = "0x2D74A8")]
		private void _SendMsg(string msgName, object msg)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class GrabbableTrigger : MonoBehaviour
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Grabbable m_grabbable;

		[Token(Token = "0x170003EE")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x3703F0", Offset = "0x3703F0", VA = "0x3703F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x3703E8", Offset = "0x3703E8", VA = "0x3703E8")]
		public GrabbableTrigger()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x3703F8", Offset = "0x3703F8", VA = "0x3703F8")]
		public void SetGrabbable(Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x172C6C", Offset = "0x172C6C")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float grabBegin;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float grabEnd;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected bool m_parentHeldObject;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform m_gripTransform;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected Transform m_gripBone;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Collider[] m_grabVolumes;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected TrackedHand m_trackedHand;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Transform m_parentTransform;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected bool m_grabVolumeEnabled;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 m_lastPos;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion m_lastRot;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion m_anchorOffsetRotation;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 m_anchorOffsetPosition;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float m_thisFlex;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Grabbable m_grabbedObj;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 m_grabbedObjectPosOff;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Quaternion m_grabbedObjectRotOff;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Dictionary<Grabbable, int> m_grabCandidates;

		[Token(Token = "0x170003EF")]
		public Transform GripTransform
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x371FD8", Offset = "0x371FD8", VA = "0x371FD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		public Transform GripBone
		{
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x372670", Offset = "0x372670", VA = "0x372670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		public TrackedHand TrackedHand
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x372678", Offset = "0x372678", VA = "0x372678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public Grabbable GrabbedObject
		{
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x372680", Offset = "0x372680", VA = "0x372680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x3725C4", Offset = "0x3725C4", VA = "0x3725C4")]
		public Grabber()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x371C2C", Offset = "0x371C2C", VA = "0x371C2C")]
		public void ForceRelease([Optional] Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x372AD0", Offset = "0x372AD0", VA = "0x372AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x372BC4", Offset = "0x372BC4", VA = "0x372BC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x372EF8", Offset = "0x372EF8", VA = "0x372EF8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x373AD8", Offset = "0x373AD8", VA = "0x373AD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x373B74", Offset = "0x373B74", VA = "0x373B74")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x373DA4", Offset = "0x373DA4", VA = "0x373DA4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x373A04", Offset = "0x373A04", VA = "0x373A04")]
		protected void CheckForGrabOrRelease(float prevFlex)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x373F64", Offset = "0x373F64", VA = "0x373F64")]
		protected void GrabBegin()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x373498", Offset = "0x373498", VA = "0x373498")]
		protected void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x372688", Offset = "0x372688", VA = "0x372688")]
		protected void GrabEnd()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x375178", Offset = "0x375178", VA = "0x375178")]
		protected void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x374BB0", Offset = "0x374BB0", VA = "0x374BB0")]
		protected void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x374CE4", Offset = "0x374CE4", VA = "0x374CE4")]
		protected void OffhandGrabbed(Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public enum HAND_POSE_ID
	{
		[Token(Token = "0x40017BD")]
		Default,
		[Token(Token = "0x40017BE")]
		Generic,
		[Token(Token = "0x40017BF")]
		PingPongBall,
		[Token(Token = "0x40017C0")]
		GunDart,
		[Token(Token = "0x40017C1")]
		Centered,
		[Token(Token = "0x40017C2")]
		Postit,
		[Token(Token = "0x40017C3")]
		Controller,
		[Token(Token = "0x40017C4")]
		LazerPointer
	}
	[Token(Token = "0x20003E1")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private HAND_POSE_ID m_poseId;

		[Token(Token = "0x170003F3")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0x375B0C", Offset = "0x375B0C", VA = "0x375B0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F4")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x375B14", Offset = "0x375B14", VA = "0x375B14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F5")]
		public HAND_POSE_ID PoseId
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0x375B1C", Offset = "0x375B1C", VA = "0x375B1C")]
			get
			{
				return default(HAND_POSE_ID);
			}
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x375B04", Offset = "0x375B04", VA = "0x375B04")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public enum HAPTIC_IMPULSE
	{
		[Token(Token = "0x40017C9")]
		Overlap
	}
	[Token(Token = "0x20003E3")]
	public enum HAPTIC_IMPULSE_GROUP_TYPE
	{
		[Token(Token = "0x40017CB")]
		Trigger,
		[Token(Token = "0x40017CC")]
		Cylinder,
		[Token(Token = "0x40017CD")]
		Dial,
		[Token(Token = "0x40017CE")]
		Lever,
		[Token(Token = "0x40017CF")]
		Yoke,
		[Token(Token = "0x40017D0")]
		Flaps,
		[Token(Token = "0x40017D1")]
		Throttle,
		[Token(Token = "0x40017D2")]
		Switch,
		[Token(Token = "0x40017D3")]
		Button,
		[Token(Token = "0x40017D4")]
		Knob
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public struct HapticImpluseGroup
	{
		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Easing.EASING_TYPE EasingMethod;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float NotchGap;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HapticImpluse NotchStart;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HapticImpluse Extent;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticImpluse NotchEnd;

		[Token(Token = "0x170003F6")]
		public static HapticImpluseGroup Identity
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x375F10", Offset = "0x375F10", VA = "0x375F10")]
			get
			{
				return default(HapticImpluseGroup);
			}
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1C4B98", Offset = "0x1C4B98", VA = "0x1C4B98")]
		public HapticImpluseGroup(Easing.EASING_TYPE easingMethod, float notchGap, HapticImpluse notchStart, HapticImpluse extent, HapticImpluse notchEnd)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1C4BF0", Offset = "0x1C4BF0", VA = "0x1C4BF0")]
		public HapticImpluseGroup(float notchGap, HapticImpluse notchStart, HapticImpluse extent, HapticImpluse notchEnd)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E5")]
	public struct HapticImpluse
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Amplitude;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Frequency;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Duration;

		[Token(Token = "0x170003F7")]
		public static HapticImpluse Zero
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0x375E18", Offset = "0x375E18", VA = "0x375E18")]
			get
			{
				return default(HapticImpluse);
			}
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1C4B40", Offset = "0x1C4B40", VA = "0x1C4B40")]
		public HapticImpluse(float amplitude, float frequency, float duration)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x375C74", Offset = "0x375C74", VA = "0x375C74")]
		public static bool operator ==(HapticImpluse x, HapticImpluse y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x375CC4", Offset = "0x375CC4", VA = "0x375CC4")]
		public static bool operator !=(HapticImpluse x, HapticImpluse y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1C4B4C", Offset = "0x1C4B4C", VA = "0x1C4B4C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1C4B54", Offset = "0x1C4B54", VA = "0x1C4B54", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1C4B5C", Offset = "0x1C4B5C", VA = "0x1C4B5C")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x375E64", Offset = "0x375E64", VA = "0x375E64")]
		public static HapticImpluse ToHapticImpulse(Vector3 vector)
		{
			return default(HapticImpluse);
		}
	}
	[Token(Token = "0x20003E6")]
	[DisallowMultipleComponent]
	public class Tracked6DOF : MonoBehaviour
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public HapticImpluse HapticOverlap;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public HapticImpluseGroup HapticTrigger;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public HapticImpluseGroup HapticCylinder;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public HapticImpluseGroup HapticDial;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public HapticImpluseGroup HapticLever;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public HapticImpluseGroup HapticYoke;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public HapticImpluseGroup HapticFlaps;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public HapticImpluseGroup HapticThrottle;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		public HapticImpluseGroup HapticSwitch;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public HapticImpluseGroup HapticButton;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[HideInInspector]
		public HapticImpluseGroup HapticKnob;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected int m_lastAdvancedFrame;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		protected TrackedObjects m_trackedObjects;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected float m_hapticDurationLeft;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		protected float m_hapticStartTimeLeft;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private InteractableInput PointerLeft;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private InteractableInput ThumbLeft;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private InteractableInput FlexLeft;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private InteractableInput PinchLeft;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected float m_hapticDurationRight;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		protected float m_hapticStartTimeRight;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private InteractableInput PointerRight;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private InteractableInput ThumbRight;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private InteractableInput FlexRight;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private InteractableInput PinchRight;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GameManager m_gameManager;

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x37991C", Offset = "0x37991C", VA = "0x37991C")]
		public Tracked6DOF()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x37993C", Offset = "0x37993C", VA = "0x37993C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x379B8C", Offset = "0x379B8C", VA = "0x379B8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x379CD8", Offset = "0x379CD8", VA = "0x379CD8", Slot = "5")]
		protected virtual void _SetHapticImpluse()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x37A038", Offset = "0x37A038", VA = "0x37A038", Slot = "6")]
		public virtual void AdvanceInput()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x37A268", Offset = "0x37A268", VA = "0x37A268", Slot = "7")]
		public virtual TrackedPose GetPose(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x37A35C", Offset = "0x37A35C", VA = "0x37A35C", Slot = "8")]
		public virtual TrackedPose GetVelocity(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x37A36C", Offset = "0x37A36C", VA = "0x37A36C", Slot = "9")]
		public virtual void PlayHapticEvent(HapticImpluse hapticImpulse, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x37A3B0", Offset = "0x37A3B0", VA = "0x37A3B0", Slot = "10")]
		public virtual void HapticAdvance(TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x37A3F4", Offset = "0x37A3F4", VA = "0x37A3F4")]
		private void _UpdateHaptics(ref float startTime, float duration, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x3787F8", Offset = "0x3787F8", VA = "0x3787F8")]
		public HapticImpluseGroup GetHapticImpluseGroup(HAPTIC_IMPULSE_GROUP_TYPE hIGT)
		{
			return default(HapticImpluseGroup);
		}
	}
	[Token(Token = "0x20003E7")]
	[DisallowMultipleComponent]
	public class TrackedGamepad : Tracked6DOF
	{
		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x37A480", Offset = "0x37A480", VA = "0x37A480")]
		public TrackedGamepad()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x37A4A0", Offset = "0x37A4A0", VA = "0x37A4A0", Slot = "6")]
		public override void AdvanceInput()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x172D04", Offset = "0x172D04")]
	public class TrackedHand : MonoBehaviour
	{
		[Token(Token = "0x40017F7")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40017F8")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40017F9")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40017FA")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40017FB")]
		public const string ANIM_PARAM_NAME_PINCH = "Pinch";

		[Token(Token = "0x40017FC")]
		public const string ANIM_PARAM_NAME_ACTIVEPOSE = "PoseActive";

		[Token(Token = "0x40017FD")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40017FE")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40017FF")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001800")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001801")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001802")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001803")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TRACKED_OBJECT Handedness;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected HandPose m_grabPose;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private HandPose m_overrideHandPose;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] m_colliders;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabber m_grabber;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_animParamIndexPinch;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_animParamIndexActivePose;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isPointing;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_pointBlend;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HandPoseMask m_handPoseMask;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_overrideHandPoseMask;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TrackedObjects TrackedObjects;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_indexCollider;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_indexCollisionEnabled;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_indexCollisionScaleCurrent;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17D988", Offset = "0x17D988")]
		private static Func<Collider, bool> <>f__am$cache0;

		[Token(Token = "0x170003F8")]
		public Animator Animator
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x37A7F0", Offset = "0x37A7F0", VA = "0x37A7F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F9")]
		public HandPose DefaultGrabPose
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x37A7F8", Offset = "0x37A7F8", VA = "0x37A7F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		public HandPose GrabPose
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x37A800", Offset = "0x37A800", VA = "0x37A800")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		public HandPose OverrideHandPose
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x375AB4", Offset = "0x375AB4", VA = "0x375AB4")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public Grabber Grabber
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x37A808", Offset = "0x37A808", VA = "0x37A808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		public float PointBlend
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x37A810", Offset = "0x37A810", VA = "0x37A810")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FE")]
		public float ThumbsUpBlend
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x37A818", Offset = "0x37A818", VA = "0x37A818")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FF")]
		public HandPoseMask HandPoseMask
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x37A820", Offset = "0x37A820", VA = "0x37A820")]
			get
			{
				return default(HandPoseMask);
			}
		}

		[Token(Token = "0x17000400")]
		public HandPoseMask OverrideHandPoseMask
		{
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x375AD4", Offset = "0x375AD4", VA = "0x375AD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x37A7B8", Offset = "0x37A7B8", VA = "0x37A7B8")]
		public TrackedHand()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x37A838", Offset = "0x37A838", VA = "0x37A838")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x37A9B8", Offset = "0x37A9B8", VA = "0x37A9B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x37ACC8", Offset = "0x37ACC8", VA = "0x37ACC8")]
		private bool HasColliders()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x37AF50", Offset = "0x37AF50", VA = "0x37AF50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x37A83C", Offset = "0x37A83C", VA = "0x37A83C")]
		private void _SetUpHand()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x37B36C", Offset = "0x37B36C", VA = "0x37B36C")]
		private HandPoseMask _CompositeHandPoseMasks(HandPoseMask baseMask, HandPoseMask overlayMask)
		{
			return default(HandPoseMask);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x37B468", Offset = "0x37B468", VA = "0x37B468")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x37BA94", Offset = "0x37BA94", VA = "0x37BA94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x37B4F0", Offset = "0x37B4F0", VA = "0x37B4F0")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x37B654", Offset = "0x37B654", VA = "0x37B654")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x37ACEC", Offset = "0x37ACEC", VA = "0x37ACEC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x37B5B0", Offset = "0x37B5B0", VA = "0x37B5B0")]
		private void IndexCollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x37BE04", Offset = "0x37BE04", VA = "0x37BE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x181C60", Offset = "0x181C60")]
		private static bool <Start>m__0(Collider childCollider)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E9")]
	public class TrackedHandMirror : MonoBehaviour
	{
		[Token(Token = "0x400181E")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400181F")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001820")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001821")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TRACKED_OBJECT Handedness;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_pointBlend;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private HandPoseMask m_handPoseMask;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TrackedHand m_handParent;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Transform m_gripTransform;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Transform m_gripBone;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_indexCollider;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_indexCollisionEnabled;

		[Token(Token = "0x17000401")]
		public Transform GripTransform
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x37BE58", Offset = "0x37BE58", VA = "0x37BE58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		public Transform GripBone
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x375AFC", Offset = "0x375AFC", VA = "0x375AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x37BE34", Offset = "0x37BE34", VA = "0x37BE34")]
		public TrackedHandMirror()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x37BE60", Offset = "0x37BE60", VA = "0x37BE60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x37C050", Offset = "0x37C050", VA = "0x37C050")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x37C0E4", Offset = "0x37C0E4", VA = "0x37C0E4")]
		private void UpdateAnimStates()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	[DisallowMultipleComponent]
	public class TrackedMirroredObjects : TrackedObjects
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform mirrorRoot;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private TrackedHandMirror leftHandMirror;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TrackedHandMirror rightHandMirror;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private SkinnedMeshRenderer leftHandRenderer;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SkinnedMeshRenderer rightHandRenderer;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private SkinnedMeshRenderer leftHandRendererMirror;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private SkinnedMeshRenderer rightHandRendererMirror;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Transform MirrorRoot;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static TrackedHandMirror LeftHandMirror;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TrackedHandMirror RightHandMirror;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static SkinnedMeshRenderer LeftHandRenderer;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SkinnedMeshRenderer RightHandRenderer;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static SkinnedMeshRenderer LeftHandRendererMirror;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static SkinnedMeshRenderer RightHandRendererMirror;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x37CE00", Offset = "0x37CE00", VA = "0x37CE00")]
		public TrackedMirroredObjects()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x37CE9C", Offset = "0x37CE9C", VA = "0x37CE9C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x37D27C", Offset = "0x37D27C", VA = "0x37D27C", Slot = "5")]
		protected override void _SetControllerVariables()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	[DisallowMultipleComponent]
	public class TrackedMSTouch : Tracked6DOF
	{
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x37C318", Offset = "0x37C318", VA = "0x37C318")]
		public TrackedMSTouch()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x37C338", Offset = "0x37C338", VA = "0x37C338", Slot = "5")]
		protected override void _SetHapticImpluse()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x37C698", Offset = "0x37C698", VA = "0x37C698", Slot = "6")]
		public override void AdvanceInput()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x37C9AC", Offset = "0x37C9AC", VA = "0x37C9AC", Slot = "7")]
		public override TrackedPose GetPose(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x37CBA8", Offset = "0x37CBA8", VA = "0x37CBA8", Slot = "8")]
		public override TrackedPose GetVelocity(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x37CDBC", Offset = "0x37CDBC", VA = "0x37CDBC", Slot = "9")]
		public override void PlayHapticEvent(HapticImpluse hapticImpulse, TRACKED_OBJECT trackedObject)
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public enum TRACKED_OBJECT
	{
		[Token(Token = "0x400183F")]
		LeftHand,
		[Token(Token = "0x4001840")]
		RightHand,
		[Token(Token = "0x4001841")]
		None
	}
	[Token(Token = "0x20003ED")]
	public enum POSE
	{
		[Token(Token = "0x4001843")]
		Pointer,
		[Token(Token = "0x4001844")]
		Thumb,
		[Token(Token = "0x4001845")]
		Flex,
		[Token(Token = "0x4001846")]
		Pinch
	}
	[Token(Token = "0x20003EE")]
	[DisallowMultipleComponent]
	public class TrackedObjects : MonoBehaviour
	{
		[Token(Token = "0x20003EF")]
		public enum CONTROLLERS
		{
			[Token(Token = "0x4001861")]
			Hands,
			[Token(Token = "0x4001862")]
			Controllers,
			[Token(Token = "0x4001863")]
			None
		}

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CONTROLLERS CurrentControllers;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TrackedHand leftHand;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject leftController;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static GameObject LeftController;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TrackedHand LeftHand;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Grabber LeftGrabber;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InteractableInput PointerLeft;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableInput ThumbLeft;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public InteractableInput FlexLeft;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableInput PinchLeft;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TrackedHand rightHand;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject rightController;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GameObject RightController;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static TrackedHand RightHand;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Grabber RightGrabber;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public InteractableInput PointerRight;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractableInput ThumbRight;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public InteractableInput FlexRight;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractableInput PinchRight;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public TrackedPose HandPoseLeft;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public TrackedPose HandPoseRight;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public TrackedPose HandVelocityLeft;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public TrackedPose HandVelocityRight;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Tracked6DOF m_tracked6DOF;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		protected CONTROLLERS m_defaultControllers;

		[Token(Token = "0x17000403")]
		public static Tracked6DOF Tracked6DOF
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x373A4C", Offset = "0x373A4C", VA = "0x373A4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x37CE8C", Offset = "0x37CE8C", VA = "0x37CE8C")]
		public TrackedObjects()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x37D478", Offset = "0x37D478", VA = "0x37D478", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x37D338", Offset = "0x37D338", VA = "0x37D338", Slot = "5")]
		protected virtual void _SetControllerVariables()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x37D538", Offset = "0x37D538", VA = "0x37D538")]
		public void InitTrackedTrackedObjects(CONTROLLERS controllersToShow)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x37CFC8", Offset = "0x37CFC8", VA = "0x37CFC8")]
		public void SetVisibility(CONTROLLERS controllersToShow)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x37D548", Offset = "0x37D548", VA = "0x37D548")]
		private void _RemoveTrackedObjects()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x379AFC", Offset = "0x379AFC", VA = "0x379AFC")]
		public void SetTracked6DOF(Tracked6DOF tracked6DOF)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x3738BC", Offset = "0x3738BC", VA = "0x3738BC")]
		public float GetPosedFloat(POSE pose, TRACKED_OBJECT trackedObject)
		{
			return default(float);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x37338C", Offset = "0x37338C", VA = "0x37338C")]
		public TrackedPose GetTrackedPose(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x37D6F8", Offset = "0x37D6F8", VA = "0x37D6F8")]
		public void SetTrackedPose(TrackedPose pose, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x37D744", Offset = "0x37D744", VA = "0x37D744")]
		public void SetTrackedPose(Vector3 position, Vector3 eulerAngles, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x37CB5C", Offset = "0x37CB5C", VA = "0x37CB5C")]
		public void SetTrackedPose(Vector3 position, Quaternion orientation, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x37B158", Offset = "0x37B158", VA = "0x37B158")]
		public HandPoseMask GetHandPoseMask(TRACKED_OBJECT trackedObject)
		{
			return default(HandPoseMask);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x374F74", Offset = "0x374F74", VA = "0x374F74")]
		public TrackedPose GetTrackedVelocity(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x37D840", Offset = "0x37D840", VA = "0x37D840")]
		public void SetTrackedVelocity(TrackedPose pose, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x37CCC0", Offset = "0x37CCC0", VA = "0x37CCC0")]
		public void SetTrackedVelocity(Vector3 velocity, Vector3 angularVelocity, TRACKED_OBJECT trackedObject)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x37D88C", Offset = "0x37D88C", VA = "0x37D88C")]
		public void SetTrackedVelocity(Vector3 velocity, Quaternion angularVelocity, TRACKED_OBJECT trackedObject)
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public static class Extensions
	{
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x2D2E7C", Offset = "0x2D2E7C", VA = "0x2D2E7C")]
		internal static TrackedPose ToTrackedPose(this Transform t, bool isLocal = false)
		{
			return default(TrackedPose);
		}
	}
	[Serializable]
	[Token(Token = "0x20003F1")]
	public struct TrackedPose
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Orientation;

		[Token(Token = "0x17000404")]
		public static TrackedPose identity
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x37A278", Offset = "0x37A278", VA = "0x37A278")]
			get
			{
				return default(TrackedPose);
			}
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x37D940", Offset = "0x37D940", VA = "0x37D940")]
		public static bool operator ==(TrackedPose x, TrackedPose y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x37DA80", Offset = "0x37DA80", VA = "0x37DA80")]
		public static bool operator !=(TrackedPose x, TrackedPose y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x374DEC", Offset = "0x374DEC", VA = "0x374DEC")]
		public static TrackedPose operator *(TrackedPose lhs, TrackedPose rhs)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x1C4C48", Offset = "0x1C4C48", VA = "0x1C4C48", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1C4C50", Offset = "0x1C4C50", VA = "0x1C4C50", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1C4C80", Offset = "0x1C4C80", VA = "0x1C4C80")]
		public TrackedPose Inverse()
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1C4C94", Offset = "0x1C4C94", VA = "0x1C4C94")]
		internal TrackedPose flipZ()
		{
			return default(TrackedPose);
		}
	}
	[Serializable]
	[Token(Token = "0x20003F2")]
	public struct HandPoseMask
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Index;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Thumb;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Flex;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Pinch;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Active;

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1C4B00", Offset = "0x1C4B00", VA = "0x1C4B00")]
		public HandPoseMask(float index, float thumb, float flex, float pinch, float active)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1C4B1C", Offset = "0x1C4B1C", VA = "0x1C4B1C")]
		public void SetHandPoseMask(float index, float thumb, float flex, float pinch, float active)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1C4B38", Offset = "0x1C4B38", VA = "0x1C4B38")]
		public float[] GetHandPoseMaskArray()
		{
			return null;
		}
	}
	[Token(Token = "0x20003F3")]
	[DisallowMultipleComponent]
	public class TrackedTouch : Tracked6DOF
	{
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x37DC40", Offset = "0x37DC40", VA = "0x37DC40")]
		public TrackedTouch()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x37DC60", Offset = "0x37DC60", VA = "0x37DC60", Slot = "5")]
		protected override void _SetHapticImpluse()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x37DFC0", Offset = "0x37DFC0", VA = "0x37DFC0", Slot = "6")]
		public override void AdvanceInput()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x37E2F8", Offset = "0x37E2F8", VA = "0x37E2F8", Slot = "7")]
		public override TrackedPose GetPose(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x37E4A8", Offset = "0x37E4A8", VA = "0x37E4A8", Slot = "8")]
		public override TrackedPose GetVelocity(TRACKED_OBJECT trackedObject)
		{
			return default(TrackedPose);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x37E654", Offset = "0x37E654", VA = "0x37E654", Slot = "9")]
		public override void PlayHapticEvent(HapticImpluse hapticImpulse, TRACKED_OBJECT trackedObject)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class TrackedVelocity : MonoBehaviour
	{
		[Token(Token = "0x20003F5")]
		private static class Const
		{
			[Token(Token = "0x4001875")]
			public const float WindowTime = 1f / 90f;

			[Token(Token = "0x4001876")]
			public const float WindowEpsilon = 0.0001f;

			[Token(Token = "0x4001877")]
			public const float LinearSpeedWindow = 4f / 45f;

			[Token(Token = "0x4001878")]
			public const float LinearVelocityWindow = 2f / 45f;

			[Token(Token = "0x4001879")]
			public const float AngularVelocityWindow = 1f / 45f;

			[Token(Token = "0x400187A")]
			public const int MaxSamples = 45;
		}

		[Token(Token = "0x20003F6")]
		private struct Sample
		{
			[Token(Token = "0x400187B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Time;

			[Token(Token = "0x400187C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float LinearSpeed;

			[Token(Token = "0x400187D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 LinearVelocity;

			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 AngularVelocity;
		}

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_showGizmos;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_index;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_count;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Sample[] m_samples;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_position;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion m_rotation;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_frameLinearVelocity;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_frameAngularVelocity;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_trackedLinearVelocity;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_trackedAngularVelocity;

		[Token(Token = "0x17000405")]
		public Vector3 FrameAngularVelocity
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x37E8E4", Offset = "0x37E8E4", VA = "0x37E8E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000406")]
		public Vector3 FrameLinearVelocity
		{
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x37E8F8", Offset = "0x37E8F8", VA = "0x37E8F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000407")]
		public Vector3 TrackedAngularVelocity
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x37E90C", Offset = "0x37E90C", VA = "0x37E90C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000408")]
		public Vector3 TrackedLinearVelocity
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x37E920", Offset = "0x37E920", VA = "0x37E920")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x37E758", Offset = "0x37E758", VA = "0x37E758")]
		public TrackedVelocity()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x37E934", Offset = "0x37E934", VA = "0x37E934")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x37E9CC", Offset = "0x37E9CC", VA = "0x37E9CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x37F59C", Offset = "0x37F59C", VA = "0x37F59C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x37EC90", Offset = "0x37EC90", VA = "0x37EC90")]
		private Vector3 DeltaRotation(Quaternion final, Quaternion initial)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x37EDF8", Offset = "0x37EDF8", VA = "0x37EDF8")]
		private void AddSample(Vector3 deltaPosition, Vector3 deltaRotation)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x37F630", Offset = "0x37F630", VA = "0x37F630")]
		private int Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x37F6D0", Offset = "0x37F6D0", VA = "0x37F6D0")]
		private int IndexPrev(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x37F6E0", Offset = "0x37F6E0", VA = "0x37F6E0")]
		private bool IsSampleValid(int index, float windowSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x37F398", Offset = "0x37F398", VA = "0x37F398")]
		private Vector3 ComputeAverageAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x37F060", Offset = "0x37F060", VA = "0x37F060")]
		private Vector3 ComputeAverageLinearVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x37F264", Offset = "0x37F264", VA = "0x37F264")]
		private float ComputeMaxLinearSpeed()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003F7")]
	public enum GRAB_STATE
	{
		[Token(Token = "0x4001880")]
		Idle,
		[Token(Token = "0x4001881")]
		StartGrab,
		[Token(Token = "0x4001882")]
		Grabbed,
		[Token(Token = "0x4001883")]
		Dropped
	}
	[Token(Token = "0x20003F8")]
	public class TrackGrabbedHand
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private GRAB_STATE m_currentGrabState;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TRACKED_OBJECT m_currentHand;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_isGrabbed;

		[Token(Token = "0x17000409")]
		public GRAB_STATE GrabState
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x3798A0", Offset = "0x3798A0", VA = "0x3798A0")]
			get
			{
				return default(GRAB_STATE);
			}
		}

		[Token(Token = "0x1700040A")]
		public TRACKED_OBJECT Hand
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x3798A8", Offset = "0x3798A8", VA = "0x3798A8")]
			get
			{
				return default(TRACKED_OBJECT);
			}
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x379890", Offset = "0x379890", VA = "0x379890")]
		public TrackGrabbedHand()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x3798B0", Offset = "0x3798B0", VA = "0x3798B0")]
		public void Update(InteractableHandInput ihInput)
		{
		}
	}
}
[Token(Token = "0x20003F9")]
public class LevelLoader : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	public enum LOAD_TYPE
	{
		[Token(Token = "0x4001896")]
		Fresh,
		[Token(Token = "0x4001897")]
		OnlyNew,
		[Token(Token = "0x4001898")]
		Overlap
	}

	[Token(Token = "0x20003FB")]
	private enum LEVEL_LOADING_STATUS
	{
		[Token(Token = "0x400189A")]
		Unloaded,
		[Token(Token = "0x400189B")]
		Loading,
		[Token(Token = "0x400189C")]
		Loaded
	}

	[Token(Token = "0x20005BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174174", Offset = "0x174174")]
	private sealed class <_WaitToInit>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float initWaitTime;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LevelLoader $this;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000575")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x4702BC", Offset = "0x4702BC", VA = "0x4702BC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000576")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0x4702C4", Offset = "0x4702C4", VA = "0x4702C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x46EA64", Offset = "0x46EA64", VA = "0x46EA64")]
		[DebuggerHidden]
		public <_WaitToInit>c__Iterator0()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x4701D0", Offset = "0x4701D0", VA = "0x4701D0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x4702CC", Offset = "0x4702CC", VA = "0x4702CC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x4702E0", Offset = "0x4702E0", VA = "0x4702E0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174184", Offset = "0x174184")]
	private sealed class <_FinishLoadingAfterTime>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float timeToWait;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LevelLoader $this;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000577")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x46FD1C", Offset = "0x46FD1C", VA = "0x46FD1C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000578")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x46FD24", Offset = "0x46FD24", VA = "0x46FD24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x46F708", Offset = "0x46F708", VA = "0x46F708")]
		[DebuggerHidden]
		public <_FinishLoadingAfterTime>c__Iterator1()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x46FAD8", Offset = "0x46FAD8", VA = "0x46FAD8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x46FD2C", Offset = "0x46FD2C", VA = "0x46FD2C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x46FD40", Offset = "0x46FD40", VA = "0x46FD40", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174194", Offset = "0x174194")]
	private sealed class <_LoadLevel>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int sceneToLoad;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal AsyncOperation <loadingStatus>__1;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal AsyncOperation <loadingStatus>__2;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal LevelLoader $this;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x17000579")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x470124", Offset = "0x470124", VA = "0x470124", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x47012C", Offset = "0x47012C", VA = "0x47012C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x46F710", Offset = "0x46F710", VA = "0x46F710")]
		[DebuggerHidden]
		public <_LoadLevel>c__Iterator2()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x46FDC8", Offset = "0x46FDC8", VA = "0x46FDC8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x470134", Offset = "0x470134", VA = "0x470134", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x470148", Offset = "0x470148", VA = "0x470148", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool loadImmediatly;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float initWaitTime;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool initWaitComplete;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float finishWaitTime;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LOAD_TYPE LoadingMethod;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] ScenesToLoad;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool[] IsActiveScene;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool[] SetToVisible;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool[] m_sceneEnabledState;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_sceneInitializing;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool m_unusedScenesPurged;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool m_thisSceneIsKept;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private LEVEL_LOADING_STATUS[] CurrentLevelLoadingStatus;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x46E50C", Offset = "0x46E50C", VA = "0x46E50C")]
	public LevelLoader()
	{
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x46E520", Offset = "0x46E520", VA = "0x46E520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x46E5D8", Offset = "0x46E5D8", VA = "0x46E5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x46E5E8", Offset = "0x46E5E8", VA = "0x46E5E8")]
	public void StartLoad()
	{
	}

	[Token(Token = "0x6001C32")]
	[Address(RVA = "0x46E7FC", Offset = "0x46E7FC", VA = "0x46E7FC")]
	private void _CheckForPermatureDestruction()
	{
	}

	[Token(Token = "0x6001C33")]
	[Address(RVA = "0x46E9B8", Offset = "0x46E9B8", VA = "0x46E9B8")]
	[DebuggerHidden]
	private IEnumerator _WaitToInit(float initWaitTime)
	{
		return null;
	}

	[Token(Token = "0x6001C34")]
	[Address(RVA = "0x46EA6C", Offset = "0x46EA6C", VA = "0x46EA6C")]
	public string GetInitalActiveScene()
	{
		return null;
	}

	[Token(Token = "0x6001C35")]
	[Address(RVA = "0x46EBEC", Offset = "0x46EBEC", VA = "0x46EBEC")]
	public void _LoadLevel()
	{
	}

	[Token(Token = "0x6001C36")]
	[Address(RVA = "0x46ED24", Offset = "0x46ED24", VA = "0x46ED24")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C37")]
	[Address(RVA = "0x46ED74", Offset = "0x46ED74", VA = "0x46ED74")]
	private void _UnloadUnneededScenes()
	{
	}

	[Token(Token = "0x6001C38")]
	[Address(RVA = "0x46F0F8", Offset = "0x46F0F8", VA = "0x46F0F8")]
	private void _LoadInit()
	{
	}

	[Token(Token = "0x6001C39")]
	[Address(RVA = "0x46F65C", Offset = "0x46F65C", VA = "0x46F65C")]
	[DebuggerHidden]
	private IEnumerator _FinishLoadingAfterTime(float timeToWait)
	{
		return null;
	}

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0x46F5BC", Offset = "0x46F5BC", VA = "0x46F5BC")]
	[DebuggerHidden]
	private IEnumerator _LoadLevel(int sceneToLoad)
	{
		return null;
	}

	[Token(Token = "0x6001C3B")]
	[Address(RVA = "0x46F718", Offset = "0x46F718", VA = "0x46F718")]
	private void _SetSceneActive(int sceneNumber)
	{
	}

	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0x46F3A0", Offset = "0x46F3A0", VA = "0x46F3A0")]
	private bool _CheckForLoadedScene(int sceneIndexToCheckFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0x46F770", Offset = "0x46F770", VA = "0x46F770")]
	public void SetSceneEnabled(string sceneName, bool setEnabled, bool setActive)
	{
	}

	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0x46F948", Offset = "0x46F948", VA = "0x46F948")]
	private void _SetSceneEnabled(int sceneToShow, bool enabled)
	{
	}
}
[Token(Token = "0x20003FC")]
public class LoadOnLoad : MonoBehaviour
{
	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1741A4", Offset = "0x1741A4")]
	private sealed class <WaitForActiveScene>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Scene sceneToWaitFor;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LoadOnLoad $this;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700057B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002702")]
			[Address(RVA = "0x3532F4", Offset = "0x3532F4", VA = "0x3532F4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002703")]
			[Address(RVA = "0x3532FC", Offset = "0x3532FC", VA = "0x3532FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x3531B0", Offset = "0x3531B0", VA = "0x3531B0")]
		[DebuggerHidden]
		public <WaitForActiveScene>c__Iterator0()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x353260", Offset = "0x353260", VA = "0x353260", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x353304", Offset = "0x353304", VA = "0x353304", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x353318", Offset = "0x353318", VA = "0x353318", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1741B4", Offset = "0x1741B4")]
	private sealed class <WaitForLoading>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int levelNumber;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal AsyncOperation <loadingStatus>__1;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LoadOnLoad $this;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x1700057D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002708")]
			[Address(RVA = "0x353808", Offset = "0x353808", VA = "0x353808", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002709")]
			[Address(RVA = "0x353810", Offset = "0x353810", VA = "0x353810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x353258", Offset = "0x353258", VA = "0x353258")]
		[DebuggerHidden]
		public <WaitForLoading>c__Iterator1()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x3533A0", Offset = "0x3533A0", VA = "0x3533A0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x353818", Offset = "0x353818", VA = "0x353818", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x35382C", Offset = "0x35382C", VA = "0x35382C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_unloadSceneOnLoad;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool m_loadImmediate;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_minTimeInLevel;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private string[] m_levelNamesToLoad;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int m_sceneToBeSetAsActive;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_LoadAsync;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool m_LoadAdditive;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_CurrentLevelLoading;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Scene m_CurrentActiveScene;

	[Token(Token = "0x6001C3F")]
	[Address(RVA = "0x352F54", Offset = "0x352F54", VA = "0x352F54")]
	public LoadOnLoad()
	{
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x352F64", Offset = "0x352F64", VA = "0x352F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0x352FBC", Offset = "0x352FBC", VA = "0x352FBC")]
	public void BeginLoading()
	{
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0x352FC4", Offset = "0x352FC4", VA = "0x352FC4")]
	private void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0x353110", Offset = "0x353110", VA = "0x353110")]
	[DebuggerHidden]
	private IEnumerator WaitForActiveScene(Scene sceneToWaitFor)
	{
		return null;
	}

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0x353074", Offset = "0x353074", VA = "0x353074")]
	private void StartLoading(int levelNumber)
	{
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0x3531B8", Offset = "0x3531B8", VA = "0x3531B8")]
	[DebuggerHidden]
	private IEnumerator WaitForLoading(int levelNumber)
	{
		return null;
	}
}
namespace Platform
{
	[Token(Token = "0x20003FD")]
	public static class OculusManager
	{
		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1741C4", Offset = "0x1741C4")]
		private sealed class <InitPlatform>c__AnonStorey0
		{
			[Token(Token = "0x4002453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal bool isPirate;

			[Token(Token = "0x600270C")]
			[Address(RVA = "0x27CB50", Offset = "0x27CB50", VA = "0x27CB50")]
			public <InitPlatform>c__AnonStorey0()
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0x27CB58", Offset = "0x27CB58", VA = "0x27CB58")]
			internal void <>m__0(Message msg)
			{
			}
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x27BC70", Offset = "0x27BC70", VA = "0x27BC70")]
		public static bool GetAnyTouchButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x27C330", Offset = "0x27C330", VA = "0x27C330")]
		public static bool GetAnyGamePadButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x27C6F4", Offset = "0x27C6F4", VA = "0x27C6F4")]
		public static bool GetAnyGearVRControllerButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x27C8DC", Offset = "0x27C8DC", VA = "0x27C8DC")]
		public static bool InitPlatform(string appID)
		{
			return default(bool);
		}
	}
}
namespace BPG.Platform
{
	[Token(Token = "0x20003FE")]
	public class DaydreamPlatformHelper : MonoBehaviour, IPlatformHelper
	{
		[Token(Token = "0x1700040B")]
		public Vector3 GetHeadPosition
		{
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0x436974", Offset = "0x436974", VA = "0x436974", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700040C")]
		public Quaternion GetHeadRotation
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x436988", Offset = "0x436988", VA = "0x436988", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700040D")]
		public Vector3 GetHeadForward
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0x43699C", Offset = "0x43699C", VA = "0x43699C", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x43696C", Offset = "0x43696C", VA = "0x43696C")]
		public DaydreamPlatformHelper()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class DaydreamPlatformInputHelper : MonoBehaviour, IPlatformInputHelper
	{
		[Token(Token = "0x1700040E")]
		public Vector3 ControllerPosition
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x4369B8", Offset = "0x4369B8", VA = "0x4369B8", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700040F")]
		public Quaternion ControllerRotation
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x436A3C", Offset = "0x436A3C", VA = "0x436A3C", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000410")]
		public Vector3 Gyro
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x436A50", Offset = "0x436A50", VA = "0x436A50", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000411")]
		public bool Recentered
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x436A64", Offset = "0x436A64", VA = "0x436A64", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000412")]
		public Handedness Handedness
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x436A6C", Offset = "0x436A6C", VA = "0x436A6C", Slot = "8")]
			get
			{
				return default(Handedness);
			}
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x4369B0", Offset = "0x4369B0", VA = "0x4369B0")]
		public DaydreamPlatformInputHelper()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public interface IPlatformHelper
	{
		[Token(Token = "0x17000413")]
		Vector3 GetHeadPosition
		{
			[Token(Token = "0x6001C54")]
			get;
		}

		[Token(Token = "0x17000414")]
		Quaternion GetHeadRotation
		{
			[Token(Token = "0x6001C55")]
			get;
		}

		[Token(Token = "0x17000415")]
		Vector3 GetHeadForward
		{
			[Token(Token = "0x6001C56")]
			get;
		}
	}
}
[Token(Token = "0x2000401")]
public enum Handedness
{
	[Token(Token = "0x40018A7")]
	Error = -1,
	[Token(Token = "0x40018A8")]
	Left,
	[Token(Token = "0x40018A9")]
	Right
}
namespace BPG.Platform
{
	[Token(Token = "0x2000402")]
	public interface IPlatformInputHelper
	{
		[Token(Token = "0x17000416")]
		Vector3 ControllerPosition
		{
			[Token(Token = "0x6001C57")]
			get;
		}

		[Token(Token = "0x17000417")]
		Quaternion ControllerRotation
		{
			[Token(Token = "0x6001C58")]
			get;
		}

		[Token(Token = "0x17000418")]
		Vector3 Gyro
		{
			[Token(Token = "0x6001C59")]
			get;
		}

		[Token(Token = "0x17000419")]
		bool Recentered
		{
			[Token(Token = "0x6001C5A")]
			get;
		}

		[Token(Token = "0x1700041A")]
		Handedness Handedness
		{
			[Token(Token = "0x6001C5B")]
			get;
		}
	}
}
[Token(Token = "0x2000403")]
public class QualityDetector : MonoBehaviour
{
	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int CPULevel;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int GPULevel;

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x286274", Offset = "0x286274", VA = "0x286274")]
	public QualityDetector()
	{
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0x286288", Offset = "0x286288", VA = "0x286288")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0x286348", Offset = "0x286348", VA = "0x286348")]
	public static bool isSlowDevice()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000404")]
public class AvatarController : MonoBehaviour
{
	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float m_moveSpeed;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_normalSpeed;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_sprintSpeed;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_doubleTapTimeToSprint;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_doubleTapTime;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KeyCode m_lastKey;

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0x42ECEC", Offset = "0x42ECEC", VA = "0x42ECEC")]
	public AvatarController()
	{
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x42ED10", Offset = "0x42ED10", VA = "0x42ED10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0x42ED28", Offset = "0x42ED28", VA = "0x42ED28")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C62")]
	[Address(RVA = "0x42ED1C", Offset = "0x42ED1C", VA = "0x42ED1C")]
	private void _InitializeMovement()
	{
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x42ED2C", Offset = "0x42ED2C", VA = "0x42ED2C")]
	private void _UpdateMovement()
	{
	}

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0x42F514", Offset = "0x42F514", VA = "0x42F514")]
	private void _CheckSprint(KeyCode key)
	{
	}
}
[Token(Token = "0x2000405")]
public class ButtonTestScript : MonoBehaviour
{
	[Token(Token = "0x20005C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1741D4", Offset = "0x1741D4")]
	private sealed class <WaitForLevelsToLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x1700057F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x441A8C", Offset = "0x441A8C", VA = "0x441A8C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000580")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x441A94", Offset = "0x441A94", VA = "0x441A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x4416C4", Offset = "0x4416C4", VA = "0x4416C4")]
		[DebuggerHidden]
		public <WaitForLevelsToLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x441970", Offset = "0x441970", VA = "0x441970", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x441A9C", Offset = "0x441A9C", VA = "0x441A9C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x441AB0", Offset = "0x441AB0", VA = "0x441AB0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x6001C65")]
	[Address(RVA = "0x44162C", Offset = "0x44162C", VA = "0x44162C")]
	public ButtonTestScript()
	{
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x441634", Offset = "0x441634", VA = "0x441634")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x441658", Offset = "0x441658", VA = "0x441658")]
	[DebuggerHidden]
	private IEnumerator WaitForLevelsToLoad()
	{
		return null;
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0x4416CC", Offset = "0x4416CC", VA = "0x4416CC")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0x4417AC", Offset = "0x4417AC", VA = "0x4417AC")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0x44188C", Offset = "0x44188C", VA = "0x44188C")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0x44196C", Offset = "0x44196C", VA = "0x44196C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000406")]
public class CanvasTester : MonoBehaviour
{
	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Canvas canvas;

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0x304514", Offset = "0x304514", VA = "0x304514")]
	public CanvasTester()
	{
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0x30451C", Offset = "0x30451C", VA = "0x30451C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x304520", Offset = "0x304520", VA = "0x304520")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000407")]
public class EventSystemTester : MonoBehaviour
{
	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EventSystem eventSystem;

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0xBAB498", Offset = "0xBAB498", VA = "0xBAB498")]
	public EventSystemTester()
	{
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0xBAB4A0", Offset = "0xBAB4A0", VA = "0xBAB4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0xBAB4A4", Offset = "0xBAB4A4", VA = "0xBAB4A4")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000408")]
public class HideScreenFader : MonoBehaviour
{
	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1741E4", Offset = "0x1741E4")]
	private sealed class <WaitForLevelsToLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000581")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002716")]
			[Address(RVA = "0x507674", Offset = "0x507674", VA = "0x507674", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000582")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002717")]
			[Address(RVA = "0x50767C", Offset = "0x50767C", VA = "0x50767C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x507550", Offset = "0x507550", VA = "0x507550")]
		[DebuggerHidden]
		public <WaitForLevelsToLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x507558", Offset = "0x507558", VA = "0x507558", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x507684", Offset = "0x507684", VA = "0x507684", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x507698", Offset = "0x507698", VA = "0x507698", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScreenFader screenFader;

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x5074B8", Offset = "0x5074B8", VA = "0x5074B8")]
	public HideScreenFader()
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x5074C0", Offset = "0x5074C0", VA = "0x5074C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x5074E4", Offset = "0x5074E4", VA = "0x5074E4")]
	[DebuggerHidden]
	private IEnumerator WaitForLevelsToLoad()
	{
		return null;
	}
}
[Token(Token = "0x2000409")]
public class HMDTest : MonoBehaviour
{
	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x505FE8", Offset = "0x505FE8", VA = "0x505FE8")]
	public HMDTest()
	{
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x505FF0", Offset = "0x505FF0", VA = "0x505FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x5060F0", Offset = "0x5060F0", VA = "0x5060F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0x5061F0", Offset = "0x5061F0", VA = "0x5061F0")]
	private void _RandomizeRotation()
	{
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0x5062B4", Offset = "0x5062B4", VA = "0x5062B4")]
	private void _RandomizeColor()
	{
	}
}
[Token(Token = "0x200040A")]
public class OnGameState : MonoBehaviour
{
	[Token(Token = "0x200040B")]
	public enum INTERACTION_RESULT
	{
		[Token(Token = "0x40018BB")]
		Enable,
		[Token(Token = "0x40018BC")]
		Disable
	}

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private INTERACTION_RESULT m_interactionResult;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GAME_STATE m_validGameState;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_enabledWhenFading;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_target;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x2ADAF4", Offset = "0x2ADAF4", VA = "0x2ADAF4")]
	public OnGameState()
	{
	}

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x2ADB0C", Offset = "0x2ADB0C", VA = "0x2ADB0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x2ADBA0", Offset = "0x2ADBA0", VA = "0x2ADBA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x2ADC44", Offset = "0x2ADC44", VA = "0x2ADC44")]
	private void Update()
	{
	}
}
[Token(Token = "0x200040C")]
public class PositionTest : MonoBehaviour
{
	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform trans;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rigidbody riBdy;

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x285000", Offset = "0x285000", VA = "0x285000")]
	public PositionTest()
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x285008", Offset = "0x285008", VA = "0x285008")]
	private void Update()
	{
	}
}
[Token(Token = "0x200040D")]
public class ReturnTest : ResetObject
{
	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x2DB808", Offset = "0x2DB808", VA = "0x2DB808")]
	public ReturnTest()
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x2DB810", Offset = "0x2DB810", VA = "0x2DB810", Slot = "5")]
	protected override void _Return()
	{
	}
}
[Token(Token = "0x200040E")]
public class RaceStatusTool : MonoBehaviour
{
	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private RecordedObject m_recorderObject;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AircraftRecorderFSMHandler m_fsmHandler;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private IRaceAircraft m_raceAircraft;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17DB88", Offset = "0x17DB88")]
	[SerializeField]
	private bool m_isAvoiding;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17DBB8", Offset = "0x17DBB8")]
	[SerializeField]
	private float m_fsmTimeScale;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_recorderTimeScale;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x17DBF8", Offset = "0x17DBF8")]
	[SerializeField]
	private string m_recorderState;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string m_planeState;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_currentFrame;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_currentFrameLerp;

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x28D57C", Offset = "0x28D57C", VA = "0x28D57C")]
	public RaceStatusTool()
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x28D584", Offset = "0x28D584", VA = "0x28D584")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x28D588", Offset = "0x28D588", VA = "0x28D588")]
	public void Initialize(RecordedObject recordedObject, AircraftRecorderFSMHandler fsmHandler, IRaceAircraft raceAircraft)
	{
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x28D594", Offset = "0x28D594", VA = "0x28D594")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x28D598", Offset = "0x28D598", VA = "0x28D598")]
	private void ProcessRaceStatus()
	{
	}
}
[Token(Token = "0x200040F")]
public static class ArrayExtensions
{
	[Token(Token = "0x6001C87")]
	public static void CopyTo<T>(this T[] origin, T[] target)
	{
	}

	[Token(Token = "0x6001C88")]
	public static void CopyTo<T>(this T[] origin, T[] target, T padding)
	{
	}
}
[Token(Token = "0x2000410")]
public class AssignLightmapToShader : MonoBehaviour
{
	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_useLightMapUVs;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Renderer m_thisRenderer;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Material m_newMaterial;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture m_lightmapTexture;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_fogDistanceScalar;

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x42DE18", Offset = "0x42DE18", VA = "0x42DE18")]
	public AssignLightmapToShader()
	{
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0x42DE2C", Offset = "0x42DE2C", VA = "0x42DE2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0x42E308", Offset = "0x42E308", VA = "0x42E308")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000411")]
public class CantLeaveBounds : MonoBehaviour
{
	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1741F4", Offset = "0x1741F4")]
	private sealed class <_WaitForEventManager>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CantLeaveBounds $this;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000583")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600271C")]
			[Address(RVA = "0x303404", Offset = "0x303404", VA = "0x303404", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000584")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600271D")]
			[Address(RVA = "0x30340C", Offset = "0x30340C", VA = "0x30340C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x3032A0", Offset = "0x3032A0", VA = "0x3032A0")]
		[DebuggerHidden]
		public <_WaitForEventManager>c__Iterator0()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x3032A8", Offset = "0x3032A8", VA = "0x3032A8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x303414", Offset = "0x303414", VA = "0x303414", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x303428", Offset = "0x303428", VA = "0x303428", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_isOverridden;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17DCB8", Offset = "0x17DCB8")]
	private Transform m_transformOverride;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Vector3 m_positionOverride;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_transform;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17DD2C", Offset = "0x17DD2C")]
	public bool UseRoot;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxCollider OutsideBounds;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_isOutsideBounds;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool m_prevIsOutsideBounds;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool m_justWentOutsideBounds;

	[Token(Token = "0x40018D8")]
	private const float WARNING_DELAY_INTERVAL = 10f;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_warningDelayElapsed;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_canWarnDelay;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventManager m_eventManager;

	[Token(Token = "0x1700041B")]
	public Transform TransformOverride
	{
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x30304C", Offset = "0x30304C", VA = "0x30304C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x303054", Offset = "0x303054", VA = "0x303054")]
		set
		{
		}
	}

	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0x302104", Offset = "0x302104", VA = "0x302104")]
	public CantLeaveBounds()
	{
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0x3021B0", Offset = "0x3021B0", VA = "0x3021B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0x3022F8", Offset = "0x3022F8", VA = "0x3022F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x3023A0", Offset = "0x3023A0", VA = "0x3023A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x302738", Offset = "0x302738", VA = "0x302738")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x30303C", Offset = "0x30303C", VA = "0x30303C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x303040", Offset = "0x303040", VA = "0x303040")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0x303044", Offset = "0x303044", VA = "0x303044")]
	public void SetOverride(bool isOverridden)
	{
	}

	[Token(Token = "0x6001C94")]
	[Address(RVA = "0x302250", Offset = "0x302250", VA = "0x302250")]
	private void _AwakeTransform()
	{
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0x302408", Offset = "0x302408", VA = "0x302408")]
	private void _UpdateJustWentOutside()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0x3026D4", Offset = "0x3026D4", VA = "0x3026D4")]
	private void _UpdateWarningDelay()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0x30273C", Offset = "0x30273C", VA = "0x30273C")]
	private void _FixedUpdateOutsideBounds()
	{
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0x303060", Offset = "0x303060", VA = "0x303060")]
	private void _OnTriggerEnterOutsideBounds(Collider col)
	{
	}

	[Token(Token = "0x6001C9B")]
	[Address(RVA = "0x303180", Offset = "0x303180", VA = "0x303180")]
	private void _OnTriggerExitOutsideBounds(Collider col)
	{
	}

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0x30231C", Offset = "0x30231C", VA = "0x30231C")]
	[DebuggerHidden]
	private IEnumerator _WaitForEventManager()
	{
		return null;
	}
}
[Token(Token = "0x2000412")]
public class ChangeCullingMask : MonoBehaviour
{
	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Light m_targetLight;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string[] m_layersToAdd;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private string[] m_layersToSubtract;

	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0x308518", Offset = "0x308518", VA = "0x308518")]
	public ChangeCullingMask()
	{
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0x308520", Offset = "0x308520", VA = "0x308520")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000413")]
public class ChangeLayer : MonoBehaviour
{
	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject[] m_objectsToEffect;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_layer;

	[Token(Token = "0x6001C9F")]
	[Address(RVA = "0x308CF8", Offset = "0x308CF8", VA = "0x308CF8")]
	public ChangeLayer()
	{
	}

	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0x308D00", Offset = "0x308D00", VA = "0x308D00")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000414")]
public static class DebugExtension
{
	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0x3B0F0C", Offset = "0x3B0F0C", VA = "0x3B0F0C")]
	public static void DebugPoint(Vector3 position, Color color, float scale = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0x3B1294", Offset = "0x3B1294", VA = "0x3B1294")]
	public static void DebugPoint(Vector3 position, float scale = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA3")]
	[Address(RVA = "0x3B12F4", Offset = "0x3B12F4", VA = "0x3B12F4")]
	public static void DebugBounds(Bounds bounds, Color color, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA4")]
	[Address(RVA = "0x3B1AF0", Offset = "0x3B1AF0", VA = "0x3B1AF0")]
	public static void DebugBounds(Bounds bounds, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0x3B1B74", Offset = "0x3B1B74", VA = "0x3B1B74")]
	public static void DebugLocalCube(Transform transform, Vector3 size, Color color, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0x3B2578", Offset = "0x3B2578", VA = "0x3B2578")]
	public static void DebugLocalCube(Transform transform, Vector3 size, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0x3B25F8", Offset = "0x3B25F8", VA = "0x3B25F8")]
	public static void DebugLocalCube(Matrix4x4 space, Vector3 size, Color color, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0x3B2F64", Offset = "0x3B2F64", VA = "0x3B2F64")]
	public static void DebugLocalCube(Matrix4x4 space, Vector3 size, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CA9")]
	[Address(RVA = "0x3B304C", Offset = "0x3B304C", VA = "0x3B304C")]
	public static void DebugCircle(Vector3 position, Vector3 up, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0x3B357C", Offset = "0x3B357C", VA = "0x3B357C")]
	public static void DebugCircle(Vector3 position, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0x3B3670", Offset = "0x3B3670", VA = "0x3B3670")]
	public static void DebugCircle(Vector3 position, Vector3 up, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x3B36FC", Offset = "0x3B36FC", VA = "0x3B36FC")]
	public static void DebugCircle(Vector3 position, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0x3B37F4", Offset = "0x3B37F4", VA = "0x3B37F4")]
	public static void DebugWireSphere(Vector3 position, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0x3B3BE8", Offset = "0x3B3BE8", VA = "0x3B3BE8")]
	public static void DebugWireSphere(Vector3 position, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0x3B3C48", Offset = "0x3B3C48", VA = "0x3B3C48")]
	public static void DebugCylinder(Vector3 start, Vector3 end, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0x3B451C", Offset = "0x3B451C", VA = "0x3B451C")]
	public static void DebugCylinder(Vector3 start, Vector3 end, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0x3B45A8", Offset = "0x3B45A8", VA = "0x3B45A8")]
	public static void DebugCone(Vector3 position, Vector3 direction, Color color, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x3B4E3C", Offset = "0x3B4E3C", VA = "0x3B4E3C")]
	public static void DebugCone(Vector3 position, Vector3 direction, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0x3B4EC8", Offset = "0x3B4EC8", VA = "0x3B4EC8")]
	public static void DebugCone(Vector3 position, Color color, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0x3B4FBC", Offset = "0x3B4FBC", VA = "0x3B4FBC")]
	public static void DebugCone(Vector3 position, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0x3B50B4", Offset = "0x3B50B4", VA = "0x3B50B4")]
	public static void DebugArrow(Vector3 position, Vector3 direction, Color color, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x3B529C", Offset = "0x3B529C", VA = "0x3B529C")]
	public static void DebugArrow(Vector3 position, Vector3 direction, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0x3B5320", Offset = "0x3B5320", VA = "0x3B5320")]
	public static void DebugCapsule(Vector3 start, Vector3 end, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB8")]
	[Address(RVA = "0x3B65A4", Offset = "0x3B65A4", VA = "0x3B65A4")]
	public static void DebugCapsule(Vector3 start, Vector3 end, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6001CB9")]
	[Address(RVA = "0x3B6630", Offset = "0x3B6630", VA = "0x3B6630")]
	public static void DrawPoint(Vector3 position, Color color, float scale = 1f)
	{
	}

	[Token(Token = "0x6001CBA")]
	[Address(RVA = "0x3B6928", Offset = "0x3B6928", VA = "0x3B6928")]
	public static void DrawPoint(Vector3 position, float scale = 1f)
	{
	}

	[Token(Token = "0x6001CBB")]
	[Address(RVA = "0x3B6978", Offset = "0x3B6978", VA = "0x3B6978")]
	public static void DrawBounds(Bounds bounds, Color color)
	{
	}

	[Token(Token = "0x6001CBC")]
	[Address(RVA = "0x3B702C", Offset = "0x3B702C", VA = "0x3B702C")]
	public static void DrawBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x6001CBD")]
	[Address(RVA = "0x3B7094", Offset = "0x3B7094", VA = "0x3B7094")]
	public static void DrawLocalCube(Transform transform, Vector3 size, Color color, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6001CBE")]
	[Address(RVA = "0x3B78DC", Offset = "0x3B78DC", VA = "0x3B78DC")]
	public static void DrawLocalCube(Transform transform, Vector3 size, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0x3B7950", Offset = "0x3B7950", VA = "0x3B7950")]
	public static void DrawLocalCube(Matrix4x4 space, Vector3 size, Color color, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0x3B8168", Offset = "0x3B8168", VA = "0x3B8168")]
	public static void DrawLocalCube(Matrix4x4 space, Vector3 size, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x3B8248", Offset = "0x3B8248", VA = "0x3B8248")]
	public static void DrawCircle(Vector3 position, Vector3 up, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CC2")]
	[Address(RVA = "0x3B8820", Offset = "0x3B8820", VA = "0x3B8820")]
	public static void DrawCircle(Vector3 position, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x3B8904", Offset = "0x3B8904", VA = "0x3B8904")]
	public static void DrawCircle(Vector3 position, Vector3 up, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x3B8964", Offset = "0x3B8964", VA = "0x3B8964")]
	public static void DrawCircle(Vector3 position, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x3B8A44", Offset = "0x3B8A44", VA = "0x3B8A44")]
	public static void DrawCylinder(Vector3 start, Vector3 end, Color color, float radius = 1f, bool innerLines = true)
	{
	}

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x3B91C8", Offset = "0x3B91C8", VA = "0x3B91C8")]
	public static void DrawCylinder(Vector3 start, Vector3 end, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x3B924C", Offset = "0x3B924C", VA = "0x3B924C")]
	public static void DrawCone(Vector3 position, Vector3 direction, Color color, float angle = 45f)
	{
	}

	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0x3B9A04", Offset = "0x3B9A04", VA = "0x3B9A04")]
	public static void DrawArc(Vector3 position, Vector3 direction, Vector3 up, Color color, float angle, float distance, int iterations = 1)
	{
	}

	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0x3BA4AC", Offset = "0x3BA4AC", VA = "0x3BA4AC")]
	public static void DrawCone(Vector3 position, Vector3 direction, float angle = 45f)
	{
	}

	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0x3BA528", Offset = "0x3BA528", VA = "0x3BA528")]
	public static void DrawCone(Vector3 position, Color color, float angle = 45f)
	{
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x3BA60C", Offset = "0x3BA60C", VA = "0x3BA60C")]
	public static void DrawCone(Vector3 position, float angle = 45f)
	{
	}

	[Token(Token = "0x6001CCC")]
	[Address(RVA = "0x3BA6EC", Offset = "0x3BA6EC", VA = "0x3BA6EC")]
	public static void DrawArrow(Vector3 position, Vector3 direction, Color color)
	{
	}

	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0x3BA894", Offset = "0x3BA894", VA = "0x3BA894")]
	public static void DrawArrow(Vector3 position, Vector3 direction)
	{
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x3BA8FC", Offset = "0x3BA8FC", VA = "0x3BA8FC")]
	public static void DrawCapsule(Vector3 start, Vector3 end, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x3BB92C", Offset = "0x3BB92C", VA = "0x3BB92C")]
	public static void DrawCapsule(Vector3 start, Vector3 end, float radius = 1f)
	{
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x3BB9A8", Offset = "0x3BB9A8", VA = "0x3BB9A8")]
	public static string MethodsOfObject(object obj, bool includeInfo = false)
	{
		return null;
	}

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0x3BBBB8", Offset = "0x3BBBB8", VA = "0x3BBBB8")]
	public static string MethodsOfType(Type type, bool includeInfo = false)
	{
		return null;
	}
}
[Token(Token = "0x2000415")]
public static class DictionaryExtensions
{
	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0x3C3204", Offset = "0x3C3204", VA = "0x3C3204")]
	public static string getString(this Dictionary<string, object> obj, string key)
	{
		return null;
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0x3C37A4", Offset = "0x3C37A4", VA = "0x3C37A4")]
	public static Vector3 getVector3(this Dictionary<string, object> obj, string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0x3C38B8", Offset = "0x3C38B8", VA = "0x3C38B8")]
	public static Dictionary<string, object> Params(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0x3C3D5C", Offset = "0x3C3D5C", VA = "0x3C3D5C")]
	public static Dictionary<string, object> AsDictionary(this object obj)
	{
		return null;
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0x3C3310", Offset = "0x3C3310", VA = "0x3C3310")]
	public static string AsString(this object obj)
	{
		return null;
	}

	[Token(Token = "0x6001CD7")]
	public static T getVal<T>(this Dictionary<string, object> obj, string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x3C3E54", Offset = "0x3C3E54", VA = "0x3C3E54")]
	public static int getInt(this Dictionary<string, object> obj, string key, bool roundFloatsUp = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x3C3F28", Offset = "0x3C3F28", VA = "0x3C3F28")]
	public static int AsInt(this object obj, bool roundFloatsUp = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x3C439C", Offset = "0x3C439C", VA = "0x3C439C")]
	public static uint AsUInt(this object obj, bool roundFloatsUp = false)
	{
		return default(uint);
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x3C4780", Offset = "0x3C4780", VA = "0x3C4780")]
	public static float AsFloat(this object obj)
	{
		return default(float);
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0x3C4BB0", Offset = "0x3C4BB0", VA = "0x3C4BB0")]
	public static ulong AsULong(this object obj, bool roundFloatsUp = false)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0x3C5094", Offset = "0x3C5094", VA = "0x3C5094")]
	public static uint getUint(this Dictionary<string, object> obj, string key, bool roundFloatsUp = false)
	{
		return default(uint);
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x3C515C", Offset = "0x3C515C", VA = "0x3C515C")]
	public static double getDouble(this Dictionary<string, object> obj, string key)
	{
		return default(double);
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x3C560C", Offset = "0x3C560C", VA = "0x3C560C")]
	public static float getFloat(this Dictionary<string, object> obj, string key)
	{
		return default(float);
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x3C5AC0", Offset = "0x3C5AC0", VA = "0x3C5AC0")]
	public static List<object> AsList(this object objListCandidate)
	{
		return null;
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x3C5C00", Offset = "0x3C5C00", VA = "0x3C5C00")]
	public static List<object> getList(this Dictionary<string, object> obj, string key)
	{
		return null;
	}

	[Token(Token = "0x6001CE2")]
	public static List<T> getList<T>(this Dictionary<string, object> obj, string key)
	{
		return null;
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x3C5DF0", Offset = "0x3C5DF0", VA = "0x3C5DF0")]
	public static List<string> getStringList(this Dictionary<string, object> obj, string key)
	{
		return null;
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x3C6190", Offset = "0x3C6190", VA = "0x3C6190")]
	public static Dictionary<string, object> getDictionary(this Dictionary<string, object> obj, string key)
	{
		return null;
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x3C6390", Offset = "0x3C6390", VA = "0x3C6390")]
	public static Dictionary<string, object> getDictionaryFromJSON(string json)
	{
		return null;
	}
}
[Token(Token = "0x2000416")]
public class DisableAtRange : MonoBehaviour
{
	[Token(Token = "0x2000417")]
	public enum MEASURE_METHOD
	{
		[Token(Token = "0x40018E9")]
		Camera,
		[Token(Token = "0x40018EA")]
		Hands,
		[Token(Token = "0x40018EB")]
		Objects
	}

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_affectedObject;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private MEASURE_METHOD m_measureMethod;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform[] m_measureObjects;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_sqrDistance;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool advanceVisibility;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x1700041C")]
	public Transform AffectedObject
	{
		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x3C64BC", Offset = "0x3C64BC", VA = "0x3C64BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700041D")]
	public MEASURE_METHOD MeasureMethod
	{
		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x3C64C4", Offset = "0x3C64C4", VA = "0x3C64C4")]
		get
		{
			return default(MEASURE_METHOD);
		}
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x3C64A0", Offset = "0x3C64A0", VA = "0x3C64A0")]
	public DisableAtRange()
	{
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0x3C64CC", Offset = "0x3C64CC", VA = "0x3C64CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x3C6570", Offset = "0x3C6570", VA = "0x3C6570")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x3C6A4C", Offset = "0x3C6A4C", VA = "0x3C6A4C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000418")]
public class EditorChangeObject : MonoBehaviour
{
	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0x3CBE54", Offset = "0x3CBE54", VA = "0x3CBE54")]
	public EditorChangeObject()
	{
	}
}
[Token(Token = "0x2000419")]
public class EnableOnGameMode : MonoBehaviour
{
	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_enabledOnGameMode;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private List<LEVEL_TYPE> m_levelType;

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x3CBE5C", Offset = "0x3CBE5C", VA = "0x3CBE5C")]
	public EnableOnGameMode()
	{
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0x3CBEE8", Offset = "0x3CBEE8", VA = "0x3CBEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x3CC208", Offset = "0x3CC208", VA = "0x3CC208")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x3CBF74", Offset = "0x3CBF74", VA = "0x3CBF74")]
	private void _EnableOnGameMode()
	{
	}
}
[Token(Token = "0x200041A")]
public class FadeAtRange : MonoBehaviour
{
	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform cameraTransform;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool isNearFade;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float startNearFadeRange;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float endNearFadeRange;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isFarFade;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startFarFadeRange;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endFarFadeRange;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useTintColor;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string colorString;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material materialToFade;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color materialColor;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0xBB0D30", Offset = "0xBB0D30", VA = "0xBB0D30")]
	public FadeAtRange()
	{
	}

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0xBB0DD4", Offset = "0xBB0DD4", VA = "0xBB0DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0xBB1198", Offset = "0xBB1198", VA = "0xBB1198")]
	private void Update()
	{
	}
}
[Token(Token = "0x200041B")]
public class IconMover : MonoBehaviour
{
	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool isBobing;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float bobHeight;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float bobCycleTime;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 bobAxis;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initalPositon;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 offsetPositon;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float moveStartTime;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRotating;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float degreesPerSec;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isMoveingToPosition;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform thisTransform;

	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0x507CFC", Offset = "0x507CFC", VA = "0x507CFC")]
	public IconMover()
	{
	}

	[Token(Token = "0x6001CF5")]
	[Address(RVA = "0x507D24", Offset = "0x507D24", VA = "0x507D24")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x507EB0", Offset = "0x507EB0", VA = "0x507EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x507EE4", Offset = "0x507EE4", VA = "0x507EE4")]
	private void RotateObject()
	{
	}

	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x508074", Offset = "0x508074", VA = "0x508074")]
	private void BobObject()
	{
	}
}
[Token(Token = "0x200041C")]
public class InitLODLighting : MonoBehaviour
{
	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject rootObject;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] meshContains;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool initStaticFlags;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] lodLightingIsStatic;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool initPreserveUVs;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] lodPreserveUVs;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool initLightMapScale;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] lodLightMapScale;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool initShadows;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShadowCastingMode[] castShadowsSetting;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool initLayer;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] layerName;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool checkCollider;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool initProbes;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LightProbeUsage[] lightProbeSetting;

	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x50821C", Offset = "0x50821C", VA = "0x50821C")]
	public InitLODLighting()
	{
	}
}
[Token(Token = "0x200041D")]
public class InitLODRanges : MonoBehaviour
{
	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] TargetGameObjectGroups;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DisableLODs;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float[] TwoLODs;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] ThreeLODs;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float[] FourLODs;

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x508224", Offset = "0x508224", VA = "0x508224")]
	public InitLODRanges()
	{
	}
}
[Token(Token = "0x200041E")]
public static class ListExtensions
{
	[Token(Token = "0x6001CFB")]
	public static void Scramble<T>(this List<T> objList, int scrambleIterations)
	{
	}

	[Token(Token = "0x6001CFC")]
	public static void PrintListContents<T>(this List<T> objList)
	{
	}

	[Token(Token = "0x6001CFD")]
	public static string DebugListContents<T>(this List<T> objList)
	{
		return null;
	}
}
[Token(Token = "0x200041F")]
public class LookAtObject : MonoBehaviour
{
	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform targetOrCamera;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useYOnly;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0x3592C8", Offset = "0x3592C8", VA = "0x3592C8")]
	public LookAtObject()
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0x3592D0", Offset = "0x3592D0", VA = "0x3592D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D00")]
	[Address(RVA = "0x3593E8", Offset = "0x3593E8", VA = "0x3593E8")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000420")]
public class MaterialSwapper : MonoBehaviour
{
	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material newPS4Material;

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0x35A418", Offset = "0x35A418", VA = "0x35A418")]
	public MaterialSwapper()
	{
	}
}
[Token(Token = "0x2000421")]
public static class MathExtensions
{
	[Token(Token = "0x6001D02")]
	[Address(RVA = "0x35A420", Offset = "0x35A420", VA = "0x35A420")]
	public static float SmoothEasing(float value, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0x35A45C", Offset = "0x35A45C", VA = "0x35A45C")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6001D04")]
	[Address(RVA = "0x35A528", Offset = "0x35A528", VA = "0x35A528")]
	public static int Wrap(int value, int low, int high)
	{
		return default(int);
	}

	[Token(Token = "0x6001D05")]
	[Address(RVA = "0x35A598", Offset = "0x35A598", VA = "0x35A598")]
	public static float HashRandom(string input, float range)
	{
		return default(float);
	}

	[Token(Token = "0x6001D06")]
	[Address(RVA = "0x35A614", Offset = "0x35A614", VA = "0x35A614")]
	public static bool RandomChance(float percent)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D07")]
	[Address(RVA = "0x35A66C", Offset = "0x35A66C", VA = "0x35A66C")]
	public static bool RandomChance(int percent)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D08")]
	[Address(RVA = "0x35A69C", Offset = "0x35A69C", VA = "0x35A69C")]
	public static int RandomRangeWeighted(int[] weights)
	{
		return default(int);
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0x35A840", Offset = "0x35A840", VA = "0x35A840")]
	public static int RangeInclusive(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0x35A854", Offset = "0x35A854", VA = "0x35A854")]
	public static int RangeInclusive(int min, int max, int exclude)
	{
		return default(int);
	}

	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0x35A894", Offset = "0x35A894", VA = "0x35A894")]
	public static float ApproachValue(float current, float desired, float delta, out bool reached)
	{
		return default(float);
	}

	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0x35A8EC", Offset = "0x35A8EC", VA = "0x35A8EC")]
	public static int RandomNoRepeat(int min, int max, int noRepeat)
	{
		return default(int);
	}

	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0x35A92C", Offset = "0x35A92C", VA = "0x35A92C")]
	public static float Remap(this float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6001D0E")]
	[Address(RVA = "0x35A960", Offset = "0x35A960", VA = "0x35A960")]
	public static Vector3[] FindCircleIntersectionsXZ(Vector2 p1, float r1, Vector2 p2, float r2)
	{
		return null;
	}

	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0x35AA7C", Offset = "0x35AA7C", VA = "0x35AA7C")]
	public static Vector3[] FindCircleAndLineIntersectionsXZ(float M, float B, Vector3 center, float radius)
	{
		return null;
	}

	[Token(Token = "0x6001D10")]
	[Address(RVA = "0x35AD30", Offset = "0x35AD30", VA = "0x35AD30")]
	public static float[] SolveQuadraticFormula(float a, float b, float c)
	{
		return null;
	}
}
[Token(Token = "0x2000422")]
public class MeshReplacer : MonoBehaviour
{
	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string groupName;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] meshContains;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] replacementMesh;

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0x35AEA4", Offset = "0x35AEA4", VA = "0x35AEA4")]
	public MeshReplacer()
	{
	}
}
[Token(Token = "0x2000423")]
public class ObjectFollower : MonoBehaviour
{
	[Token(Token = "0x2000424")]
	public enum FOLLOW_TYPE
	{
		[Token(Token = "0x4001926")]
		Position,
		[Token(Token = "0x4001927")]
		Rotation,
		[Token(Token = "0x4001928")]
		PositonRotation,
		[Token(Token = "0x4001929")]
		Scale,
		[Token(Token = "0x400192A")]
		All
	}

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FOLLOW_TYPE FollowType;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform Parent;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform m_Child;

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0x3FA160", Offset = "0x3FA160", VA = "0x3FA160")]
	public ObjectFollower()
	{
	}

	[Token(Token = "0x6001D13")]
	[Address(RVA = "0x3FA170", Offset = "0x3FA170", VA = "0x3FA170")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0x3FA18C", Offset = "0x3FA18C", VA = "0x3FA18C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000425")]
public class PerPlatformMaterial : MonoBehaviour
{
	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material[] PS4Materials;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material[] currentMaterials;

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0x27B378", Offset = "0x27B378", VA = "0x27B378")]
	public PerPlatformMaterial()
	{
	}

	[Token(Token = "0x6001D16")]
	[Address(RVA = "0x27B380", Offset = "0x27B380", VA = "0x27B380")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0x27B6C8", Offset = "0x27B6C8", VA = "0x27B6C8")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000426")]
public class PlatformEnable : MonoBehaviour
{
	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool enableEditor;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool enablePC;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool enableIPhone;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool enableAndroid;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enableWebGL;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool enableVita;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool enablePS4;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] targetGameObjects;

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0x27CBA4", Offset = "0x27CBA4", VA = "0x27CBA4")]
	public PlatformEnable()
	{
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0x27CBC8", Offset = "0x27CBC8", VA = "0x27CBC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0x27CD68", Offset = "0x27CD68", VA = "0x27CD68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0x27CBCC", Offset = "0x27CBCC", VA = "0x27CBCC")]
	public void Evaluate()
	{
	}
}
[Token(Token = "0x2000427")]
public class RandomOneChild : MonoBehaviour
{
	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_oneChildActive;

	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0x28D930", Offset = "0x28D930", VA = "0x28D930")]
	public RandomOneChild()
	{
	}

	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0x28D940", Offset = "0x28D940", VA = "0x28D940")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000428")]
public static class SaveTextureFormats
{
	[Token(Token = "0x2000429")]
	public class ThreadWorker
	{
		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] bytes;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string filename;

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x2EF7F0", Offset = "0x2EF7F0", VA = "0x2EF7F0")]
		public ThreadWorker()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x2F0794", Offset = "0x2F0794", VA = "0x2F0794")]
		public void ThreadMethod()
		{
		}
	}

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Dictionary<string, object>> _tempFilesToProcess;

	[Token(Token = "0x6001D1E")]
	[Address(RVA = "0x2EF1D4", Offset = "0x2EF1D4", VA = "0x2EF1D4")]
	public static bool WriteIntermittentPNG(Texture2D tex, Texture2D watermark, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0x2EF7F8", Offset = "0x2EF7F8", VA = "0x2EF7F8")]
	private static Texture2D ProcessWatermark(Texture2D background, Texture2D watermark)
	{
		return null;
	}

	[Token(Token = "0x6001D20")]
	[Address(RVA = "0x2EFC18", Offset = "0x2EFC18", VA = "0x2EFC18")]
	public static void ProcessIntermittentPNGs()
	{
	}

	[Token(Token = "0x6001D21")]
	[Address(RVA = "0x2F067C", Offset = "0x2F067C", VA = "0x2F067C")]
	public static bool WriteJPG(ref Texture2D tex, string filename)
	{
		return default(bool);
	}
}
[Token(Token = "0x200042A")]
public class SceneController : MonoBehaviour
{
	[Token(Token = "0x200042B")]
	public delegate void SceneEventHandler();

	[Token(Token = "0x1400003F")]
	public event SceneEventHandler SceneEnable
	{
		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x2F0940", Offset = "0x2F0940", VA = "0x2F0940")]
		add
		{
		}
		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x2F0A4C", Offset = "0x2F0A4C", VA = "0x2F0A4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000040")]
	public event SceneEventHandler SceneDisable
	{
		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x2F0B58", Offset = "0x2F0B58", VA = "0x2F0B58")]
		add
		{
		}
		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x2F0C64", Offset = "0x2F0C64", VA = "0x2F0C64")]
		remove
		{
		}
	}

	[Token(Token = "0x6001D25")]
	[Address(RVA = "0x2F0878", Offset = "0x2F0878", VA = "0x2F0878")]
	public SceneController()
	{
	}

	[Token(Token = "0x6001D26")]
	[Address(RVA = "0x2F0880", Offset = "0x2F0880", VA = "0x2F0880")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D27")]
	[Address(RVA = "0x2F0884", Offset = "0x2F0884", VA = "0x2F0884")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D28")]
	[Address(RVA = "0x2F0888", Offset = "0x2F0888", VA = "0x2F0888")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D29")]
	[Address(RVA = "0x2F088C", Offset = "0x2F088C", VA = "0x2F088C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0x2F0930", Offset = "0x2F0930", VA = "0x2F0930")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0x2F0D70", Offset = "0x2F0D70", VA = "0x2F0D70", Slot = "4")]
	protected virtual void _OnSceneEnable()
	{
	}

	[Token(Token = "0x6001D30")]
	[Address(RVA = "0x2F1074", Offset = "0x2F1074", VA = "0x2F1074", Slot = "5")]
	protected virtual void _OnSceneDisable()
	{
	}
}
[Token(Token = "0x200042C")]
public class SceneManagerPrefabHack : MonoBehaviour
{
	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] AirfoilDescriptions;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Aerofoil[] Airfoils;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem groundCrashParticleSystem;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneManagerPrefabHack sceneManagerPrefabHack;

	[Token(Token = "0x6001D35")]
	[Address(RVA = "0x2F10D4", Offset = "0x2F10D4", VA = "0x2F10D4")]
	public SceneManagerPrefabHack()
	{
	}

	[Token(Token = "0x6001D36")]
	[Address(RVA = "0x2F10DC", Offset = "0x2F10DC", VA = "0x2F10DC")]
	public static SceneManagerPrefabHack Instance()
	{
		return null;
	}
}
[Token(Token = "0x200042D")]
public static class StringExtensions
{
	[Token(Token = "0x6001D37")]
	[Address(RVA = "0x2C6E20", Offset = "0x2C6E20", VA = "0x2C6E20")]
	public static string SubstringAtChar(this string obj, char search)
	{
		return null;
	}

	[Token(Token = "0x6001D38")]
	[Address(RVA = "0x2C6F10", Offset = "0x2C6F10", VA = "0x2C6F10")]
	public static string SubstringAfterChar(this string obj, char search)
	{
		return null;
	}

	[Token(Token = "0x6001D39")]
	[Address(RVA = "0x2C6FAC", Offset = "0x2C6FAC", VA = "0x2C6FAC")]
	public static string SubstringAfterLastChar(this string obj, char search)
	{
		return null;
	}

	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0x2C7048", Offset = "0x2C7048", VA = "0x2C7048")]
	public static string UnescapeXML(this string s)
	{
		return null;
	}

	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0x2C7214", Offset = "0x2C7214", VA = "0x2C7214")]
	public static int CalculateMD5HashSum(this string input)
	{
		return default(int);
	}

	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0x2C736C", Offset = "0x2C736C", VA = "0x2C736C")]
	public static string CalculateMD5Hash(this string input)
	{
		return null;
	}

	[Token(Token = "0x6001D3D")]
	[Address(RVA = "0x2C7560", Offset = "0x2C7560", VA = "0x2C7560")]
	public static string FindStringStartingWith(string[] candidates, string header, string fallback)
	{
		return null;
	}

	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0x2C76F0", Offset = "0x2C76F0", VA = "0x2C76F0")]
	public static bool CaseInsensitiveContains(this string text, string value, StringComparison stringComparison = StringComparison.CurrentCultureIgnoreCase)
	{
		return default(bool);
	}
}
[Token(Token = "0x200042E")]
public class TextureAnimator
{
	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int uvAnimationTileX;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int uvAnimationTileY;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material materialToAnimate;

	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0x2CB40C", Offset = "0x2CB40C", VA = "0x2CB40C")]
	public TextureAnimator()
	{
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0x2CB420", Offset = "0x2CB420", VA = "0x2CB420")]
	private void Update(int frameToPlay)
	{
	}
}
[Token(Token = "0x200042F")]
public class TransferLightmap : MonoBehaviour
{
	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Renderer sourceObject;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer targetObject;

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0x37F77C", Offset = "0x37F77C", VA = "0x37F77C")]
	public TransferLightmap()
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0x37F784", Offset = "0x37F784", VA = "0x37F784")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000430")]
public class TreePlanter : MonoBehaviour
{
	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool m_placeTrees;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject m_treesRoot;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] m_treesNameContains;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_treesPrefabs;

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0x37F9D0", Offset = "0x37F9D0", VA = "0x37F9D0")]
	public TreePlanter()
	{
	}
}
[Token(Token = "0x2000431")]
public class Unparent : MonoBehaviour
{
	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_targetGameObject;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_newParent;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_keepScene;

	[Token(Token = "0x6001D44")]
	[Address(RVA = "0x38C3E4", Offset = "0x38C3E4", VA = "0x38C3E4")]
	public Unparent()
	{
	}

	[Token(Token = "0x6001D45")]
	[Address(RVA = "0x38C3F4", Offset = "0x38C3F4", VA = "0x38C3F4")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000432")]
public static class VectorExtensions
{
	[Token(Token = "0x6001D46")]
	[Address(RVA = "0x38D7A0", Offset = "0x38D7A0", VA = "0x38D7A0")]
	public static Vector3 StringToVec3(this string vectorAsString)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D47")]
	[Address(RVA = "0x38DA78", Offset = "0x38DA78", VA = "0x38DA78")]
	public static string Vec3ToString(this Vector3 obj)
	{
		return null;
	}

	[Token(Token = "0x6001D48")]
	[Address(RVA = "0x38DB70", Offset = "0x38DB70", VA = "0x38DB70")]
	public static string QuaternionToString(this Quaternion obj)
	{
		return null;
	}

	[Token(Token = "0x6001D49")]
	[Address(RVA = "0x38DE04", Offset = "0x38DE04", VA = "0x38DE04")]
	public static Quaternion StringToQuaternion(this string quaternionAsString)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001D4A")]
	[Address(RVA = "0x38E11C", Offset = "0x38E11C", VA = "0x38E11C")]
	public static Vector3 ClampRange(this Vector3 obj, Vector3 min, Vector3 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D4B")]
	[Address(RVA = "0x38E1A4", Offset = "0x38E1A4", VA = "0x38E1A4")]
	public static float SquaredDistance(this Vector3 obj, Vector3 other)
	{
		return default(float);
	}

	[Token(Token = "0x6001D4C")]
	[Address(RVA = "0x38E1E4", Offset = "0x38E1E4", VA = "0x38E1E4")]
	public static float SquaredDistanceXY(this Vector3 obj, Vector3 other)
	{
		return default(float);
	}

	[Token(Token = "0x6001D4D")]
	[Address(RVA = "0x3815C4", Offset = "0x3815C4", VA = "0x3815C4")]
	public static float SquaredDistanceXZ(this Vector3 obj, Vector3 other)
	{
		return default(float);
	}

	[Token(Token = "0x6001D4E")]
	[Address(RVA = "0x38E210", Offset = "0x38E210", VA = "0x38E210")]
	public static float DistanceXZ(this Vector3 obj, Vector3 other)
	{
		return default(float);
	}

	[Token(Token = "0x6001D4F")]
	[Address(RVA = "0x38E2E0", Offset = "0x38E2E0", VA = "0x38E2E0")]
	public static float SquaredDistance(this Vector2 obj, Vector2 other)
	{
		return default(float);
	}

	[Token(Token = "0x6001D50")]
	[Address(RVA = "0x38E30C", Offset = "0x38E30C", VA = "0x38E30C")]
	public static Vector3 Scale(this Vector3 obj, float scale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D51")]
	[Address(RVA = "0x38E338", Offset = "0x38E338", VA = "0x38E338")]
	public static bool Approximately(this Vector3 obj, Vector3 other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D52")]
	[Address(RVA = "0x38E464", Offset = "0x38E464", VA = "0x38E464")]
	public static bool Approximately(this Vector3 obj, Vector3 other, float tolerance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D53")]
	[Address(RVA = "0x38E5B4", Offset = "0x38E5B4", VA = "0x38E5B4")]
	public static bool ApproximatelyXZ(this Vector3 obj, Vector3 other, float tolerance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D54")]
	[Address(RVA = "0x38E6B0", Offset = "0x38E6B0", VA = "0x38E6B0")]
	public static bool Approximately(this Vector2 obj, Vector3 other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D55")]
	[Address(RVA = "0x38E790", Offset = "0x38E790", VA = "0x38E790")]
	public static bool IsNotZero(this Vector3 obj, float epsilon = 1E-05f)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D56")]
	[Address(RVA = "0x38E7E8", Offset = "0x38E7E8", VA = "0x38E7E8")]
	public static Vector3 RandomRange(this Vector3 obj, float xRandomRange, float yRandomRange, float zRandomRange)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D57")]
	[Address(RVA = "0x38E8B8", Offset = "0x38E8B8", VA = "0x38E8B8")]
	public static Vector3 RandomRange(float xRandomRange, float yRandomRange, float zRandomRange)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D58")]
	[Address(RVA = "0x38E980", Offset = "0x38E980", VA = "0x38E980")]
	public static Vector3 RandomPos(this Bounds obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D59")]
	[Address(RVA = "0x38EAD8", Offset = "0x38EAD8", VA = "0x38EAD8")]
	public static bool Contains(this Bounds obj, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0x38EBFC", Offset = "0x38EBFC", VA = "0x38EBFC")]
	public static bool ContainsXZ(this Bounds obj, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D5B")]
	[Address(RVA = "0x38ECD0", Offset = "0x38ECD0", VA = "0x38ECD0")]
	public static Vector3 BoundsClamp(this Bounds obj, Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0x38EE4C", Offset = "0x38EE4C", VA = "0x38EE4C")]
	public static bool ColliderContainsXZ(this Vector3 pos, Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0x38F1F8", Offset = "0x38F1F8", VA = "0x38F1F8")]
	public static bool ColliderContainsXZ(this Vector3 pos, BoxCollider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0x38F5D0", Offset = "0x38F5D0", VA = "0x38F5D0")]
	public static bool ColliderContainsXZ(this Vector3 pos, SphereCollider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0x38F790", Offset = "0x38F790", VA = "0x38F790")]
	public static Vector3 ClampToColliderXZ(this Vector3 pos, Collider collider)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D60")]
	[Address(RVA = "0x38FB4C", Offset = "0x38FB4C", VA = "0x38FB4C")]
	public static Vector3 ClampToColliderXZ(this Vector3 pos, BoxCollider collider)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D61")]
	[Address(RVA = "0x3901AC", Offset = "0x3901AC", VA = "0x3901AC")]
	public static Vector3 ClampToColliderXZ(this Vector3 pos, SphereCollider collider)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D62")]
	[Address(RVA = "0x39058C", Offset = "0x39058C", VA = "0x39058C")]
	public static float NormalizeWithLength(ref Vector3 obj)
	{
		return default(float);
	}

	[Token(Token = "0x6001D63")]
	[Address(RVA = "0x39036C", Offset = "0x39036C", VA = "0x39036C")]
	public static Vector3 ClosestPointOnLineSegment(Vector3 A, Vector3 B, Vector3 P, out float T)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D64")]
	[Address(RVA = "0x3906C8", Offset = "0x3906C8", VA = "0x3906C8")]
	public static Vector2 ClosestPointOnLineSegment(Vector2 A, Vector2 B, Vector2 P)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001D65")]
	[Address(RVA = "0x390890", Offset = "0x390890", VA = "0x390890")]
	public static Vector3 Midpoint(Vector3 A, Vector3 B)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D66")]
	[Address(RVA = "0x3908FC", Offset = "0x3908FC", VA = "0x3908FC")]
	public static Vector3 DeltaAngle(this Vector3 eulerA, Vector3 eulerB)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D67")]
	[Address(RVA = "0x390A00", Offset = "0x390A00", VA = "0x390A00")]
	public static void ClampAngle(ref Vector3 angle)
	{
	}

	[Token(Token = "0x6001D68")]
	[Address(RVA = "0x390AB4", Offset = "0x390AB4", VA = "0x390AB4")]
	public static void ClampAngle(ref Vector2 angle)
	{
	}

	[Token(Token = "0x6001D69")]
	[Address(RVA = "0x390B34", Offset = "0x390B34", VA = "0x390B34")]
	public static float GetAngle(Vector2 fromVector2, Vector2 toVector2)
	{
		return default(float);
	}

	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0x390C48", Offset = "0x390C48", VA = "0x390C48")]
	public static Vector3 Average(this Vector3[] vectors)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000433")]
public class VrRecenter : MonoBehaviour
{
	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0x738420", Offset = "0x738420", VA = "0x738420")]
	public VrRecenter()
	{
	}

	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0x738428", Offset = "0x738428", VA = "0x738428")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000434")]
public class ButtonDeviceInput : DeviceInput
{
	[Token(Token = "0x2000435")]
	public enum BUTTON_TYPE
	{
		[Token(Token = "0x4001950")]
		Normal
	}

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BUTTON_TYPE ButtonType;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_lastDistance;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool InvertDirection;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_distanceMoved;

	[Token(Token = "0x1700041E")]
	public float DistanceMoved
	{
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x440A34", Offset = "0x440A34", VA = "0x440A34")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001D6D")]
	[Address(RVA = "0x440474", Offset = "0x440474", VA = "0x440474")]
	public ButtonDeviceInput()
	{
	}

	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0x44047C", Offset = "0x44047C", VA = "0x44047C", Slot = "6")]
	protected override void _Awake()
	{
	}

	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0x440480", Offset = "0x440480", VA = "0x440480", Slot = "7")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x6001D70")]
	[Address(RVA = "0x440484", Offset = "0x440484", VA = "0x440484", Slot = "8")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001D71")]
	[Address(RVA = "0x440874", Offset = "0x440874", VA = "0x440874", Slot = "9")]
	protected override void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001D72")]
	[Address(RVA = "0x440878", Offset = "0x440878", VA = "0x440878", Slot = "10")]
	protected override void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001D73")]
	[Address(RVA = "0x440940", Offset = "0x440940", VA = "0x440940", Slot = "11")]
	protected override void _OnDestroy()
	{
	}

	[Token(Token = "0x6001D74")]
	[Address(RVA = "0x440944", Offset = "0x440944", VA = "0x440944", Slot = "12")]
	protected override void _AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001D75")]
	[Address(RVA = "0x440A24", Offset = "0x440A24", VA = "0x440A24", Slot = "13")]
	protected override void _CustomResetVisualHaptics()
	{
	}

	[Token(Token = "0x6001D76")]
	[Address(RVA = "0x440A2C", Offset = "0x440A2C", VA = "0x440A2C", Slot = "15")]
	public override void InitAsOff()
	{
	}

	[Token(Token = "0x6001D77")]
	[Address(RVA = "0x440A30", Offset = "0x440A30", VA = "0x440A30", Slot = "14")]
	public override void InitAsOn()
	{
	}

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0x440A3C", Offset = "0x440A3C", VA = "0x440A3C")]
	public void SetDistanceMoved(float distanceMoved)
	{
	}

	[Token(Token = "0x6001D7A")]
	[Address(RVA = "0x440758", Offset = "0x440758", VA = "0x440758")]
	private void _GetDistanceMoved()
	{
	}
}
[Token(Token = "0x2000436")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x172E2C", Offset = "0x172E2C")]
public class ButtonInput : MonoBehaviour
{
	[Token(Token = "0x2000437")]
	public enum ButtonType
	{
		[Token(Token = "0x4001969")]
		Normal
	}

	[Token(Token = "0x2000438")]
	public enum ButtonDirection
	{
		[Token(Token = "0x400196B")]
		X,
		[Token(Token = "0x400196C")]
		Y,
		[Token(Token = "0x400196D")]
		Z
	}

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ButtonType buttonType;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DashGuage.GuageState startingGuageState;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private DashGuage.GuageState currentGuageState;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DashGuage.GuageState lastGuageState;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DashGuage dashGuageToSet;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonDirection buttonDirection;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 directionVector;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool invertDirection;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private TouchInput.Hands currentHand;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform touchHand;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Collider touchCollider;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startTouch;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isTouched;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform buttonVisual;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxDistance;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float buttonDistanceThreshhold;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxTravel;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float distanceReturnSpeed;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 buttonTravelAxis;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 buttonStartPosition;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastDistance;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentDistance;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float previousDistance;

	[Token(Token = "0x6001D7B")]
	[Address(RVA = "0x440A48", Offset = "0x440A48", VA = "0x440A48")]
	public ButtonInput()
	{
	}

	[Token(Token = "0x6001D7C")]
	[Address(RVA = "0x440B78", Offset = "0x440B78", VA = "0x440B78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D7D")]
	[Address(RVA = "0x440C08", Offset = "0x440C08", VA = "0x440C08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001D7E")]
	[Address(RVA = "0x440DD8", Offset = "0x440DD8", VA = "0x440DD8")]
	private void SetHandedNess(Collider other)
	{
	}

	[Token(Token = "0x6001D7F")]
	[Address(RVA = "0x440E9C", Offset = "0x440E9C", VA = "0x440E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D80")]
	[Address(RVA = "0x4412BC", Offset = "0x4412BC", VA = "0x4412BC")]
	private float GetDistanceMoved()
	{
		return default(float);
	}

	[Token(Token = "0x6001D81")]
	[Address(RVA = "0x44112C", Offset = "0x44112C", VA = "0x44112C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001D82")]
	[Address(RVA = "0x4413D4", Offset = "0x4413D4", VA = "0x4413D4")]
	private void SetButtonToIdle()
	{
	}

	[Token(Token = "0x6001D83")]
	[Address(RVA = "0x4413FC", Offset = "0x4413FC", VA = "0x4413FC")]
	private void AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001D84")]
	[Address(RVA = "0x4414DC", Offset = "0x4414DC", VA = "0x4414DC")]
	private void AdjustVisualHaltics()
	{
	}

	[Token(Token = "0x6001D85")]
	[Address(RVA = "0x441610", Offset = "0x441610", VA = "0x441610")]
	private void setGuageState(DashGuage.GuageState state)
	{
	}

	[Token(Token = "0x6001D86")]
	[Address(RVA = "0x441624", Offset = "0x441624", VA = "0x441624")]
	public void InitAsOn()
	{
	}

	[Token(Token = "0x6001D87")]
	[Address(RVA = "0x441628", Offset = "0x441628", VA = "0x441628")]
	public void InitAsOff()
	{
	}
}
[Token(Token = "0x2000439")]
public class DeviceInput : OvrTouch.Hands.Grabbable
{
	[Token(Token = "0x200043A")]
	public enum DEVICE_DIRECTION
	{
		[Token(Token = "0x400198C")]
		X,
		[Token(Token = "0x400198D")]
		Y,
		[Token(Token = "0x400198E")]
		Z
	}

	[Token(Token = "0x200043B")]
	public enum DEVICE_MOVEMENT_TYPE
	{
		[Token(Token = "0x4001990")]
		Translate,
		[Token(Token = "0x4001991")]
		Rotate
	}

	[Token(Token = "0x200043C")]
	public delegate void DeviceEventHandler();

	[Token(Token = "0x400196E")]
	protected const float MAX_DISTANCE_PERCENT_TO_SNAP = 0.015f;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public DashGuage DashGuageToSet;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DashGuage.GuageState StartingGuageState;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected DashGuage.GuageState m_currentGuageState;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected DashGuage.GuageState m_lastGuageState;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public DEVICE_DIRECTION DeviceDirection;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsBidirectional;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_directionVector;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected TouchInput.Hands m_currentHand;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Transform m_touchFinger;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Transform m_touchHand;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Collider m_touchCollider;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Vector3 m_startTouch;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected bool m_isTouched;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DEVICE_MOVEMENT_TYPE DeviceMovementType;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Transform DeviceVisual;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MaxDistance;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float DistanceToSwitchThreshold;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float MaxTravel;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float DeviceReturnSpeed;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 DefaultAxis;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 m_startPosition;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected float m_startPositionNum;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float m_currDistance;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float m_prevDistance;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	protected bool m_isGrabbable;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	protected bool m_isDeviceOverridden;

	[Token(Token = "0x1700041F")]
	public Transform TouchFinger
	{
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x3BE3F8", Offset = "0x3BE3F8", VA = "0x3BE3F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000420")]
	public Vector3 StartTouch
	{
		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x3BE408", Offset = "0x3BE408", VA = "0x3BE408")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000421")]
	public bool IsTouched
	{
		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x3BE428", Offset = "0x3BE428", VA = "0x3BE428")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000041")]
	public event DeviceEventHandler DeviceOnEvent
	{
		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x3BF43C", Offset = "0x3BF43C", VA = "0x3BF43C")]
		add
		{
		}
		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x3BF548", Offset = "0x3BF548", VA = "0x3BF548")]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public event DeviceEventHandler DeviceOffEvent
	{
		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x3BF654", Offset = "0x3BF654", VA = "0x3BF654")]
		add
		{
		}
		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x3BF760", Offset = "0x3BF760", VA = "0x3BF760")]
		remove
		{
		}
	}

	[Token(Token = "0x6001D88")]
	[Address(RVA = "0x3BE2FC", Offset = "0x3BE2FC", VA = "0x3BE2FC")]
	public DeviceInput()
	{
	}

	[Token(Token = "0x6001D8A")]
	[Address(RVA = "0x3BE400", Offset = "0x3BE400", VA = "0x3BE400")]
	public void SetTouchFinger(Transform touchFinger)
	{
	}

	[Token(Token = "0x6001D8C")]
	[Address(RVA = "0x3BE41C", Offset = "0x3BE41C", VA = "0x3BE41C")]
	public void SetStartTouch(Vector3 startTouch)
	{
	}

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0x3BE430", Offset = "0x3BE430", VA = "0x3BE430", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0x3BE54C", Offset = "0x3BE54C", VA = "0x3BE54C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D90")]
	[Address(RVA = "0x3BE55C", Offset = "0x3BE55C", VA = "0x3BE55C")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001D91")]
	[Address(RVA = "0x3BE588", Offset = "0x3BE588", VA = "0x3BE588")]
	protected void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001D92")]
	[Address(RVA = "0x3BE6F0", Offset = "0x3BE6F0", VA = "0x3BE6F0")]
	protected void _StartInteract(GameObject obj)
	{
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0x3BE958", Offset = "0x3BE958", VA = "0x3BE958")]
	protected void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0x3BEA78", Offset = "0x3BEA78", VA = "0x3BEA78")]
	public void ResetTouch()
	{
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0x3BEB18", Offset = "0x3BEB18", VA = "0x3BEB18", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001D96")]
	[Address(RVA = "0x3BEB44", Offset = "0x3BEB44", VA = "0x3BEB44")]
	public void SetDeviceOverridden(bool isDeviceOverridden)
	{
	}

	[Token(Token = "0x6001D97")]
	[Address(RVA = "0x3BE578", Offset = "0x3BE578", VA = "0x3BE578")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6001D98")]
	[Address(RVA = "0x3BE690", Offset = "0x3BE690", VA = "0x3BE690")]
	public void CallOnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001D99")]
	[Address(RVA = "0x3BEA48", Offset = "0x3BEA48", VA = "0x3BEA48")]
	public void CallOnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001D9A")]
	[Address(RVA = "0x3BEB4C", Offset = "0x3BEB4C", VA = "0x3BEB4C", Slot = "6")]
	protected virtual void _Awake()
	{
	}

	[Token(Token = "0x6001D9B")]
	[Address(RVA = "0x3BEBD8", Offset = "0x3BEBD8", VA = "0x3BEBD8", Slot = "7")]
	protected virtual void _Start()
	{
	}

	[Token(Token = "0x6001D9C")]
	[Address(RVA = "0x3BEC64", Offset = "0x3BEC64", VA = "0x3BEC64", Slot = "8")]
	protected virtual void _Update()
	{
	}

	[Token(Token = "0x6001D9D")]
	[Address(RVA = "0x3BECF0", Offset = "0x3BECF0", VA = "0x3BECF0", Slot = "9")]
	protected virtual void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001D9E")]
	[Address(RVA = "0x3BED7C", Offset = "0x3BED7C", VA = "0x3BED7C", Slot = "10")]
	protected virtual void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001D9F")]
	[Address(RVA = "0x3BEE08", Offset = "0x3BEE08", VA = "0x3BEE08", Slot = "11")]
	protected virtual void _OnDestroy()
	{
	}

	[Token(Token = "0x6001DA0")]
	[Address(RVA = "0x3BEE94", Offset = "0x3BEE94", VA = "0x3BEE94")]
	public void SetHandedness(GameObject obj)
	{
	}

	[Token(Token = "0x6001DA1")]
	[Address(RVA = "0x3BE820", Offset = "0x3BE820", VA = "0x3BE820")]
	private void _SetHandedness(GameObject col)
	{
	}

	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0x3BEE98", Offset = "0x3BEE98", VA = "0x3BEE98")]
	protected void _SetDeviceToIdle()
	{
	}

	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0x3BF0F0", Offset = "0x3BF0F0", VA = "0x3BF0F0", Slot = "12")]
	protected virtual void _AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0x3BF2B0", Offset = "0x3BF2B0", VA = "0x3BF2B0", Slot = "13")]
	protected virtual void _CustomResetVisualHaptics()
	{
	}

	[Token(Token = "0x6001DA5")]
	[Address(RVA = "0x3BEECC", Offset = "0x3BEECC", VA = "0x3BEECC")]
	private void _ResetVisualHapticsOnIdle()
	{
	}

	[Token(Token = "0x6001DA6")]
	[Address(RVA = "0x3BF2B4", Offset = "0x3BF2B4", VA = "0x3BF2B4")]
	protected void _SetGuageState(DashGuage.GuageState gs)
	{
	}

	[Token(Token = "0x6001DA7")]
	[Address(RVA = "0x3BF35C", Offset = "0x3BF35C", VA = "0x3BF35C")]
	protected void _SetGuageState(float currentDistance)
	{
	}

	[Token(Token = "0x6001DA8")]
	[Address(RVA = "0x3BF310", Offset = "0x3BF310", VA = "0x3BF310")]
	private void _SwitchGuageState(DashGuage.GuageState currentGuageState)
	{
	}

	[Token(Token = "0x6001DA9")]
	[Address(RVA = "0x3BF434", Offset = "0x3BF434", VA = "0x3BF434", Slot = "14")]
	public virtual void InitAsOn()
	{
	}

	[Token(Token = "0x6001DAA")]
	[Address(RVA = "0x3BF438", Offset = "0x3BF438", VA = "0x3BF438", Slot = "15")]
	public virtual void InitAsOff()
	{
	}

	[Token(Token = "0x6001DAF")]
	[Address(RVA = "0x3BF86C", Offset = "0x3BF86C", VA = "0x3BF86C", Slot = "16")]
	protected virtual void _OnDeviceOn()
	{
	}

	[Token(Token = "0x6001DB0")]
	[Address(RVA = "0x3BFA90", Offset = "0x3BFA90", VA = "0x3BFA90", Slot = "17")]
	protected virtual void _OnDeviceOff()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x200043D")]
	public class FlapsInput : GrabbableExtended
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Transform leverVisual;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControlStick ControlStickUsed;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LeverInput LeverInput;

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x2B32D4", Offset = "0x2B32D4", VA = "0x2B32D4")]
		public FlapsInput()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x2B3378", Offset = "0x2B3378", VA = "0x2B3378")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x2B3528", Offset = "0x2B3528", VA = "0x2B3528", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x2B3A34", Offset = "0x2B3A34", VA = "0x2B3A34", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x2B3658", Offset = "0x2B3658", VA = "0x2B3658")]
		private void SetGrabbed()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x2B37FC", Offset = "0x2B37FC", VA = "0x2B37FC")]
		private void SetDropped()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x2B38C8", Offset = "0x2B38C8", VA = "0x2B38C8")]
		private void SetIdle()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x2B3488", Offset = "0x2B3488", VA = "0x2B3488")]
		private void _SubscribeToOnDropEvent()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x2B3B74", Offset = "0x2B3B74", VA = "0x2B3B74")]
		private void _UnsubscribeFromOnDropEvent()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x2B3C14", Offset = "0x2B3C14", VA = "0x2B3C14")]
		private void _OnDropHandler()
		{
		}
	}
}
[Token(Token = "0x200043E")]
public class GrabbableDeviceInput : DeviceInput
{
	[Token(Token = "0x200043F")]
	protected enum GRAB_STATE
	{
		[Token(Token = "0x400199C")]
		Idle,
		[Token(Token = "0x400199D")]
		Start,
		[Token(Token = "0x400199E")]
		Grabbing,
		[Token(Token = "0x400199F")]
		End
	}

	[Token(Token = "0x2000440")]
	protected delegate void GrabEventHandler(object sender, EventArgs e);

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected TouchInput.Hands m_currentGrabHand;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected GRAB_STATE m_grabState;

	[Token(Token = "0x14000043")]
	protected event GrabEventHandler StartGrab
	{
		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x3338BC", Offset = "0x3338BC", VA = "0x3338BC")]
		add
		{
		}
		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x3339C8", Offset = "0x3339C8", VA = "0x3339C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000044")]
	protected event GrabEventHandler Grabbing
	{
		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x333AD4", Offset = "0x333AD4", VA = "0x333AD4")]
		add
		{
		}
		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x333BE0", Offset = "0x333BE0", VA = "0x333BE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000045")]
	protected event GrabEventHandler EndGrab
	{
		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x333CEC", Offset = "0x333CEC", VA = "0x333CEC")]
		add
		{
		}
		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x333DF8", Offset = "0x333DF8", VA = "0x333DF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000046")]
	protected event GrabEventHandler IdleGrab
	{
		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x333F04", Offset = "0x333F04", VA = "0x333F04")]
		add
		{
		}
		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x334010", Offset = "0x334010", VA = "0x334010")]
		remove
		{
		}
	}

	[Token(Token = "0x6001DBF")]
	[Address(RVA = "0x3335EC", Offset = "0x3335EC", VA = "0x3335EC")]
	public GrabbableDeviceInput()
	{
	}

	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0x3335FC", Offset = "0x3335FC", VA = "0x3335FC", Slot = "6")]
	protected override void _Awake()
	{
	}

	[Token(Token = "0x6001DC1")]
	[Address(RVA = "0x333600", Offset = "0x333600", VA = "0x333600", Slot = "8")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001DC2")]
	[Address(RVA = "0x333610", Offset = "0x333610", VA = "0x333610")]
	private void _UpdateGrab()
	{
	}

	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0x333620", Offset = "0x333620", VA = "0x333620")]
	private void _UpdateGrabState()
	{
	}

	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0x333868", Offset = "0x333868", VA = "0x333868")]
	private void _SetGrabHandedness(bool setToHand)
	{
	}

	[Token(Token = "0x6001DCD")]
	[Address(RVA = "0x33411C", Offset = "0x33411C", VA = "0x33411C", Slot = "18")]
	protected virtual void _OnStartGrab(EventArgs e)
	{
	}

	[Token(Token = "0x6001DCE")]
	[Address(RVA = "0x334514", Offset = "0x334514", VA = "0x334514", Slot = "19")]
	protected virtual void _OnGrabbing(EventArgs e)
	{
	}

	[Token(Token = "0x6001DCF")]
	[Address(RVA = "0x334530", Offset = "0x334530", VA = "0x334530", Slot = "20")]
	protected virtual void _OnEndGrab(EventArgs e)
	{
	}

	[Token(Token = "0x6001DD0")]
	[Address(RVA = "0x33454C", Offset = "0x33454C", VA = "0x33454C", Slot = "21")]
	protected virtual void _OnIdleGrab(EventArgs e)
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000441")]
	public class GrabbableExtended : Grabbable
	{
		[Token(Token = "0x2000442")]
		protected enum GrabState
		{
			[Token(Token = "0x40019A3")]
			Idle,
			[Token(Token = "0x40019A4")]
			StartGrab,
			[Token(Token = "0x40019A5")]
			Grabbed,
			[Token(Token = "0x40019A6")]
			Dropped
		}

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected GrabState currentGrabState;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TouchInput.Hands m_currentHand;

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x2B3360", Offset = "0x2B3360", VA = "0x2B3360")]
		public GrabbableExtended()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x2B35AC", Offset = "0x2B35AC", VA = "0x2B35AC", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x2B48A4", Offset = "0x2B48A4", VA = "0x2B48A4")]
		private void SetHandedness(bool setToHand)
		{
		}
	}
}
namespace TrackedInput
{
	[Token(Token = "0x2000443")]
	public class GrabbableGun : MonoBehaviour
	{
		[Token(Token = "0x2000444")]
		public enum DROP_TYPE
		{
			[Token(Token = "0x40019DE")]
			Kinematic,
			[Token(Token = "0x40019DF")]
			Simulate,
			[Token(Token = "0x40019E0")]
			Teleport
		}

		[Token(Token = "0x2000445")]
		public enum TriggerTravelType
		{
			[Token(Token = "0x40019E2")]
			Rotation,
			[Token(Token = "0x40019E3")]
			Position
		}

		[Token(Token = "0x2000446")]
		private enum WARP_HOME_PHASE
		{
			[Token(Token = "0x40019E5")]
			Shrink,
			[Token(Token = "0x40019E6")]
			Grow,
			[Token(Token = "0x40019E7")]
			Idle
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174204", Offset = "0x174204")]
		private sealed class <QueMuzzleFlash>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal GrabbableGun $this;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x17000585")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002722")]
				[Address(RVA = "0x2DB758", Offset = "0x2DB758", VA = "0x2DB758", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002723")]
				[Address(RVA = "0x2DB760", Offset = "0x2DB760", VA = "0x2DB760", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0x2DAF10", Offset = "0x2DAF10", VA = "0x2DAF10")]
			[DebuggerHidden]
			public <QueMuzzleFlash>c__Iterator0()
			{
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0x2DB4B0", Offset = "0x2DB4B0", VA = "0x2DB4B0", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0x2DB768", Offset = "0x2DB768", VA = "0x2DB768", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x2DB77C", Offset = "0x2DB77C", VA = "0x2DB77C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174214", Offset = "0x174214")]
		private sealed class <PlayHapticSequence>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float duration;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float <currentTime>__0;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal GrabbableGun $this;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal object $current;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x17000587")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002728")]
				[Address(RVA = "0x2DB404", Offset = "0x2DB404", VA = "0x2DB404", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002729")]
				[Address(RVA = "0x2DB40C", Offset = "0x2DB40C", VA = "0x2DB40C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x2DB234", Offset = "0x2DB234", VA = "0x2DB234")]
			[DebuggerHidden]
			public <PlayHapticSequence>c__Iterator1()
			{
			}

			[Token(Token = "0x6002727")]
			[Address(RVA = "0x2DB23C", Offset = "0x2DB23C", VA = "0x2DB23C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600272A")]
			[Address(RVA = "0x2DB414", Offset = "0x2DB414", VA = "0x2DB414", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600272B")]
			[Address(RVA = "0x2DB428", Offset = "0x2DB428", VA = "0x2DB428", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public DROP_TYPE DropType;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Origin;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 m_originPos;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_originEuler;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool triggerPressed;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool reloadPressed;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private bool _chamberOpen;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform trigger;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxTriggerTravel;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 triggerInputMask;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 triggerInitialOrentation;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TriggerTravelType triggerTravelType;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int currentBullet;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int maxBullets;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastRotation;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastDeceleration;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float zeroDecelerationLerpTime;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float decelerationScaler;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Transform weaponMuzzel;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject muzzleFlash;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ObjectPooler objectPooler;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject projectile;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Transform projectileParent;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int simutaniousProjectiles;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _forceWarp;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioSource audioSourceFire;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public AudioSource audioSourceReload;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip[] soundFire;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public AudioClip soundFireFail;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip soundOpenChamber;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public AudioClip soundReload;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float volumeRange;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private WARP_HOME_PHASE m_isWarpingHome;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_warpHomeEndTime;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public MoveObject m_moveObjectShrink;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public MoveObject m_moveObjectGrow;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Animator animator;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_isFloatingGun;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private InteractableHandInput m_grabInteractableHandInput;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TrackGrabbedHand m_trackGrabbedHand;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public InteractableInput m_grabInteractableInput;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public InteractableInput m_fireInteractableInput;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public InteractableInput m_reloadInteractableInput;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public InteractableInput m_releaseInteractableInput;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private TRACKED_OBJECT m_currentHand;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform cylinderArm;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public HapticInput hapticTriggerInput;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public HapticInput hapticCylinderInput;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameManager m_gameManager;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static GrabbableGun grabbableGun;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Rigidbody m_rootRB;

		[Token(Token = "0x40019DA")]
		private const float PREDICTED_FRAMES = 1.8f;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_isFiring;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float lastCylinderRotation;

		[Token(Token = "0x17000422")]
		public int CurrentBullet
		{
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x2D7D64", Offset = "0x2D7D64", VA = "0x2D7D64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000423")]
		public int MaxBullets
		{
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x2D7D6C", Offset = "0x2D7D6C", VA = "0x2D7D6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000424")]
		public TrackGrabbedHand TrackGrabbedHand
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x2D7D74", Offset = "0x2D7D74", VA = "0x2D7D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		public TRACKED_OBJECT CurrentHand
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x2D7D7C", Offset = "0x2D7D7C", VA = "0x2D7D7C")]
			get
			{
				return default(TRACKED_OBJECT);
			}
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x2D7D84", Offset = "0x2D7D84", VA = "0x2D7D84")]
			set
			{
			}
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x2D7BF0", Offset = "0x2D7BF0", VA = "0x2D7BF0")]
		public GrabbableGun()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x2D7D8C", Offset = "0x2D7D8C", VA = "0x2D7D8C")]
		public static GrabbableGun Instance()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x2D7FE0", Offset = "0x2D7FE0", VA = "0x2D7FE0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x2D848C", Offset = "0x2D848C", VA = "0x2D848C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x2D8C88", Offset = "0x2D8C88", VA = "0x2D8C88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x2D96D4", Offset = "0x2D96D4", VA = "0x2D96D4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x2D8FBC", Offset = "0x2D8FBC", VA = "0x2D8FBC")]
		private bool _IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x2DA390", Offset = "0x2DA390", VA = "0x2DA390")]
		public void GamepadFireControl(float inputFire, float inputReload)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x2DA7D4", Offset = "0x2DA7D4", VA = "0x2DA7D4")]
		public void GamepadDropGun()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x2DA860", Offset = "0x2DA860", VA = "0x2DA860")]
		public void GamepadPickupGun()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x2D9D88", Offset = "0x2D9D88", VA = "0x2D9D88")]
		private void _CheckWarpHomeState()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x2DA9B8", Offset = "0x2DA9B8", VA = "0x2DA9B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x2DA284", Offset = "0x2DA284", VA = "0x2DA284")]
		private void checkInputRelease(float inputRelease)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x2D9E54", Offset = "0x2D9E54", VA = "0x2D9E54")]
		private void checkInputReload(float inputReload)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x2D9E90", Offset = "0x2D9E90", VA = "0x2D9E90")]
		private void checkInputFire(float inputFire)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x2DADD8", Offset = "0x2DADD8", VA = "0x2DADD8")]
		private void FireGun()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x2D905C", Offset = "0x2D905C", VA = "0x2D905C")]
		private void FireGun(Vector3 predictedMovement, Vector3 predictedRotation)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x2DAE8C", Offset = "0x2DAE8C", VA = "0x2DAE8C")]
		[DebuggerHidden]
		private IEnumerator QueMuzzleFlash()
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x2DAF18", Offset = "0x2DAF18", VA = "0x2DAF18")]
		private void DryFire()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x2DA3F8", Offset = "0x2DA3F8", VA = "0x2DA3F8")]
		private void OpenChamber()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x2DAA9C", Offset = "0x2DAA9C", VA = "0x2DAA9C")]
		private void TrackCylinderHaptics()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x2DA2A8", Offset = "0x2DA2A8", VA = "0x2DA2A8")]
		private void WarpGunHome()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x2DA7E0", Offset = "0x2DA7E0", VA = "0x2DA7E0")]
		private void _ShrinkGun()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x2DB000", Offset = "0x2DB000", VA = "0x2DB000")]
		private void _MoveGunToHolster()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x2DA90C", Offset = "0x2DA90C", VA = "0x2DA90C")]
		private void _GrowGun()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x2DA990", Offset = "0x2DA990", VA = "0x2DA990")]
		private void _CompleteDropGunEffect()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x2DA86C", Offset = "0x2DA86C", VA = "0x2DA86C")]
		private void _CancleGunDropEfect()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x2DB188", Offset = "0x2DB188", VA = "0x2DB188")]
		[DebuggerHidden]
		private IEnumerator PlayHapticSequence(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x2DABEC", Offset = "0x2DABEC", VA = "0x2DABEC")]
		private void TrackAngularDeceleration()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x2DA63C", Offset = "0x2DA63C", VA = "0x2DA63C")]
		private void CompleteReload()
		{
		}
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000447")]
	public class GrabbableLever : GrabbableExtended
	{
		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Transform leverVisual;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControlStick ControlStickUsed;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LeverInput LeverInput;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x2B48EC", Offset = "0x2B48EC", VA = "0x2B48EC")]
		public GrabbableLever()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x2B4978", Offset = "0x2B4978", VA = "0x2B4978")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x2B4A80", Offset = "0x2B4A80", VA = "0x2B4A80", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x2B4AF4", Offset = "0x2B4AF4", VA = "0x2B4AF4")]
		private void SetGrabbed()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x2B4C98", Offset = "0x2B4C98", VA = "0x2B4C98")]
		private void SetDropped()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x2B4D68", Offset = "0x2B4D68", VA = "0x2B4D68")]
		private void SetIdle()
		{
		}
	}
}
[Token(Token = "0x2000448")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x172E9C", Offset = "0x172E9C")]
public class GrabbableProp : OvrTouch.Hands.Grabbable
{
	[Token(Token = "0x2000449")]
	public delegate void GrabbablePropEventHandler(GrabbableProp sender, EventArgs e);

	[Token(Token = "0x200044A")]
	private enum RETURN_CONDITION
	{
		[Token(Token = "0x4001A0F")]
		Velocity,
		[Token(Token = "0x4001A10")]
		Time,
		[Token(Token = "0x4001A11")]
		Both
	}

	[Token(Token = "0x200044B")]
	public delegate void PropMoveHandler();

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_propModel;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Rigidbody m_propModelRBOverride;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody m_propModelRB;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_returnAfterTime;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_initPos;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_initRot;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_itemBoundGameObj;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<Collider> m_itemBounds;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RETURN_CONDITION m_returnCondition;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float m_secondsBeforeReturn;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_secondsElapsed;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private bool m_returnOnSceneEnable;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[SerializeField]
	private bool m_forceReturnChildren;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform[] m_children;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3[] m_childrenLPosition;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] m_childrenLEulerAngle;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private HingeJoint[] m_childrenHinges;

	[Token(Token = "0x4001A03")]
	private const float DFLT_SPRING_FORCE = 5000f;

	[Token(Token = "0x4001A04")]
	private const float DFLT_SLERP_SPRING_FORCE = 100f;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ConfigurableJoint m_configurableJoint;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private bool m_willCreateJoint;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float m_translateSpringForce;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float m_rotationSpringForce;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool m_springForceScalesWithMass;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float m_springForceToMassRatio;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float m_springDamper;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool m_overrideJointSettings;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float m_distanceToDisjoint;

	[Token(Token = "0x17000426")]
	public Rigidbody Rigidbody
	{
		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x336130", Offset = "0x336130", VA = "0x336130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000047")]
	public event GrabbablePropEventHandler GrabHasBegun
	{
		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x3351C8", Offset = "0x3351C8", VA = "0x3351C8")]
		add
		{
		}
		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x3352D4", Offset = "0x3352D4", VA = "0x3352D4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000048")]
	public event GrabbablePropEventHandler GrabHasEnded
	{
		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x3353E0", Offset = "0x3353E0", VA = "0x3353E0")]
		add
		{
		}
		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x3354EC", Offset = "0x3354EC", VA = "0x3354EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public event GrabbablePropEventHandler OverlapHasBegun
	{
		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x3355F8", Offset = "0x3355F8", VA = "0x3355F8")]
		add
		{
		}
		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x335704", Offset = "0x335704", VA = "0x335704")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004A")]
	public event GrabbablePropEventHandler OverlapHasEnded
	{
		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x335810", Offset = "0x335810", VA = "0x335810")]
		add
		{
		}
		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x33591C", Offset = "0x33591C", VA = "0x33591C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public event PropMoveHandler MovePropEvent
	{
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x337694", Offset = "0x337694", VA = "0x337694")]
		add
		{
		}
		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x3377A0", Offset = "0x3377A0", VA = "0x3377A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public event PropMoveHandler ReturnPropEvent
	{
		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x3378AC", Offset = "0x3378AC", VA = "0x3378AC")]
		add
		{
		}
		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x3379B8", Offset = "0x3379B8", VA = "0x3379B8")]
		remove
		{
		}
	}

	[Token(Token = "0x6001E01")]
	[Address(RVA = "0x3345C0", Offset = "0x3345C0", VA = "0x3345C0")]
	public GrabbableProp()
	{
	}

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x334704", Offset = "0x334704", VA = "0x334704", Slot = "4")]
	protected sealed override void Awake()
	{
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x3349A8", Offset = "0x3349A8", VA = "0x3349A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E04")]
	[Address(RVA = "0x3349B8", Offset = "0x3349B8", VA = "0x3349B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E05")]
	[Address(RVA = "0x334DCC", Offset = "0x334DCC", VA = "0x334DCC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001E06")]
	[Address(RVA = "0x334FE0", Offset = "0x334FE0", VA = "0x334FE0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001E07")]
	[Address(RVA = "0x334FF0", Offset = "0x334FF0", VA = "0x334FF0")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001E08")]
	[Address(RVA = "0x335000", Offset = "0x335000", VA = "0x335000", Slot = "5")]
	protected sealed override void OnDestroy()
	{
	}

	[Token(Token = "0x6001E09")]
	[Address(RVA = "0x33502C", Offset = "0x33502C", VA = "0x33502C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0x3350D8", Offset = "0x3350D8", VA = "0x3350D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x335A28", Offset = "0x335A28", VA = "0x335A28")]
	private void OnGrabBegin(OvrTouch.Hands.GrabbableGrabMsg msg)
	{
	}

	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x335AE0", Offset = "0x335AE0", VA = "0x335AE0", Slot = "6")]
	protected virtual void _OnGrabHasBegun(GrabbableProp sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x335ED0", Offset = "0x335ED0", VA = "0x335ED0")]
	private void OnGrabEnd(OvrTouch.Hands.GrabbableGrabMsg msg)
	{
	}

	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x335F78", Offset = "0x335F78", VA = "0x335F78", Slot = "7")]
	protected virtual void _OnGrabHasEnded(GrabbableProp sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x335F8C", Offset = "0x335F8C", VA = "0x335F8C")]
	private void OnOverlapBegin(OvrTouch.Hands.GrabbableOverlapMsg msg)
	{
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x336038", Offset = "0x336038", VA = "0x336038", Slot = "8")]
	protected virtual void _OnOverlapHasBegun(GrabbableProp sender, GPOverlapEventArgs e)
	{
	}

	[Token(Token = "0x6001E19")]
	[Address(RVA = "0x33604C", Offset = "0x33604C", VA = "0x33604C")]
	private void OnOverlapEnd(OvrTouch.Hands.GrabbableOverlapMsg msg)
	{
	}

	[Token(Token = "0x6001E1A")]
	[Address(RVA = "0x3360F8", Offset = "0x3360F8", VA = "0x3360F8", Slot = "9")]
	protected virtual void _OnOverlapHasEnded(GrabbableProp sender, GPOverlapEventArgs e)
	{
	}

	[Token(Token = "0x6001E1B")]
	[Address(RVA = "0x33610C", Offset = "0x33610C", VA = "0x33610C", Slot = "10")]
	protected virtual void _Awake()
	{
	}

	[Token(Token = "0x6001E1C")]
	[Address(RVA = "0x336110", Offset = "0x336110", VA = "0x336110", Slot = "11")]
	protected virtual void _Start()
	{
	}

	[Token(Token = "0x6001E1D")]
	[Address(RVA = "0x336114", Offset = "0x336114", VA = "0x336114", Slot = "12")]
	protected virtual void _Update()
	{
	}

	[Token(Token = "0x6001E1E")]
	[Address(RVA = "0x336118", Offset = "0x336118", VA = "0x336118", Slot = "13")]
	protected virtual void _FixedUpdate()
	{
	}

	[Token(Token = "0x6001E1F")]
	[Address(RVA = "0x33611C", Offset = "0x33611C", VA = "0x33611C", Slot = "14")]
	protected virtual void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001E20")]
	[Address(RVA = "0x336120", Offset = "0x336120", VA = "0x336120", Slot = "15")]
	protected virtual void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001E21")]
	[Address(RVA = "0x336124", Offset = "0x336124", VA = "0x336124", Slot = "16")]
	protected virtual void _OnDestroy()
	{
	}

	[Token(Token = "0x6001E22")]
	[Address(RVA = "0x336128", Offset = "0x336128", VA = "0x336128", Slot = "17")]
	protected virtual void _OnEnable()
	{
	}

	[Token(Token = "0x6001E23")]
	[Address(RVA = "0x33612C", Offset = "0x33612C", VA = "0x33612C", Slot = "18")]
	protected virtual void _OnDisable()
	{
	}

	[Token(Token = "0x6001E25")]
	[Address(RVA = "0x334738", Offset = "0x334738", VA = "0x334738")]
	private void _Initialize()
	{
	}

	[Token(Token = "0x6001E26")]
	[Address(RVA = "0x334DF4", Offset = "0x334DF4", VA = "0x334DF4")]
	private void _FixedUpdatePropModel()
	{
	}

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x336138", Offset = "0x336138", VA = "0x336138")]
	private void _GetInitialPositionAndRotation()
	{
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x3349F4", Offset = "0x3349F4", VA = "0x3349F4")]
	private void _UpdateReturn()
	{
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x337274", Offset = "0x337274", VA = "0x337274")]
	private void _ReturnOnKeyPress()
	{
	}

	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x336804", Offset = "0x336804", VA = "0x336804")]
	private void _InitializeBounds()
	{
	}

	[Token(Token = "0x6001E2B")]
	[Address(RVA = "0x336F28", Offset = "0x336F28", VA = "0x336F28")]
	private void _UpdateReturnAfterLeavingBounds()
	{
	}

	[Token(Token = "0x6001E2C")]
	[Address(RVA = "0x337640", Offset = "0x337640", VA = "0x337640")]
	private bool _IsOutOfBoundsForTooLong()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E2D")]
	[Address(RVA = "0x3373F4", Offset = "0x3373F4", VA = "0x3373F4")]
	private bool _IsOutOfBoundsAndStopped()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E32")]
	[Address(RVA = "0x337AC4", Offset = "0x337AC4", VA = "0x337AC4")]
	public void ForceMoveProp([Optional] Vector3? position, [Optional] Vector3? eulerAngles)
	{
	}

	[Token(Token = "0x6001E33")]
	[Address(RVA = "0x3372CC", Offset = "0x3372CC", VA = "0x3372CC")]
	public void MoveProp([Optional] Vector3? position, [Optional] Vector3? eulerAngles)
	{
	}

	[Token(Token = "0x6001E34")]
	[Address(RVA = "0x337BF4", Offset = "0x337BF4", VA = "0x337BF4")]
	private void _SetPropLocation([Optional] Vector3? position, [Optional] Vector3? eulerAngles)
	{
	}

	[Token(Token = "0x6001E35")]
	[Address(RVA = "0x338780", Offset = "0x338780", VA = "0x338780", Slot = "19")]
	protected virtual void _OnMoveProp()
	{
	}

	[Token(Token = "0x6001E36")]
	[Address(RVA = "0x3389A4", Offset = "0x3389A4", VA = "0x3389A4", Slot = "20")]
	protected virtual void _OnReturnProp()
	{
	}

	[Token(Token = "0x6001E37")]
	[Address(RVA = "0x335090", Offset = "0x335090", VA = "0x335090")]
	private void _OnEnableReturnProp()
	{
	}

	[Token(Token = "0x6001E38")]
	[Address(RVA = "0x33697C", Offset = "0x33697C", VA = "0x33697C")]
	private void _InitializeJoint()
	{
	}

	[Token(Token = "0x6001E39")]
	[Address(RVA = "0x334A04", Offset = "0x334A04", VA = "0x334A04")]
	private void _UpdateJointCheck()
	{
	}

	[Token(Token = "0x6001E3A")]
	[Address(RVA = "0x3389B8", Offset = "0x3389B8", VA = "0x3389B8")]
	private void _ResetJointAnchor()
	{
	}

	[Token(Token = "0x6001E3B")]
	[Address(RVA = "0x338A9C", Offset = "0x338A9C", VA = "0x338A9C")]
	public void MoveTo(Vector3 position)
	{
	}

	[Token(Token = "0x6001E3C")]
	[Address(RVA = "0x338B48", Offset = "0x338B48", VA = "0x338B48")]
	public void RotateTo(Vector3 eulerAngles)
	{
	}

	[Token(Token = "0x6001E3D")]
	[Address(RVA = "0x338BF4", Offset = "0x338BF4", VA = "0x338BF4")]
	public void SetActive(bool isActive)
	{
	}
}
[Token(Token = "0x200044C")]
public class GPOverlapEventArgs : EventArgs
{
	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public new static GPOverlapEventArgs Empty;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E268", Offset = "0x17E268")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17E268", Offset = "0x17E268")]
	private Hand <Hand>k__BackingField;

	[Token(Token = "0x17000427")]
	public Hand Hand
	{
		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xBBB9CC", Offset = "0xBBB9CC", VA = "0xBBB9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1820E0", Offset = "0x1820E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xBBB9D4", Offset = "0xBBB9D4", VA = "0xBBB9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1820F0", Offset = "0x1820F0")]
		set
		{
		}
	}

	[Token(Token = "0x6001E46")]
	[Address(RVA = "0xBBB948", Offset = "0xBBB948", VA = "0xBBB948")]
	public GPOverlapEventArgs()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x200044D")]
	public class GrabbableTrigger : GrabbableExtended
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 initalPosition;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion initalRotation;

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x2B5AD0", Offset = "0x2B5AD0", VA = "0x2B5AD0")]
		public GrabbableTrigger()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x2B5AE8", Offset = "0x2B5AE8", VA = "0x2B5AE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x2B5BF4", Offset = "0x2B5BF4", VA = "0x2B5BF4")]
		private new void Update()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x2B5C1C", Offset = "0x2B5C1C", VA = "0x2B5C1C")]
		private void SetDropped()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x2B5D3C", Offset = "0x2B5D3C", VA = "0x2B5D3C")]
		private void SetIdle()
		{
		}
	}
}
namespace TrackedInput
{
	[Serializable]
	[Token(Token = "0x200044E")]
	public class HapticInput
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_atExtent;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool m_useExtentStart;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool m_useExtentEnd;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_lastNotch;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_updateTime;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private HapticImpluseGroup m_hapticImpluseGroup;

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x375F28", Offset = "0x375F28", VA = "0x375F28")]
		public HapticInput()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x375F48", Offset = "0x375F48", VA = "0x375F48")]
		public void InitHapticInput(HapticImpluseGroup hIG, bool useExtentStart = true, bool useExtentEnd = true)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x375FB0", Offset = "0x375FB0", VA = "0x375FB0")]
		public void PlayHapticNotch(float currentInput, TRACKED_OBJECT currentHand)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x376404", Offset = "0x376404", VA = "0x376404")]
		private void _ResetState()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x376418", Offset = "0x376418", VA = "0x376418")]
		public void PlayHapticNotch(HapticImpluse hapticImpluse, TRACKED_OBJECT currentHand)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x3764E4", Offset = "0x3764E4", VA = "0x3764E4")]
		public void PlayHapticDoubleRamp(float currentInput, TRACKED_OBJECT currentHand)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x3764FC", Offset = "0x3764FC", VA = "0x3764FC")]
		public void PlayHaptic(float currentInput, TRACKED_OBJECT currentHand)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x376698", Offset = "0x376698", VA = "0x376698")]
		public void PlayHaptic(HapticImpluse hapticImpluse, TRACKED_OBJECT currentHand)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x376764", Offset = "0x376764", VA = "0x376764")]
		public void PlayExtentReached(TRACKED_OBJECT currentHand)
		{
		}
	}
}
[Token(Token = "0x200044F")]
public class KnobDeviceInput : GrabbableDeviceInput
{
	[Token(Token = "0x2000450")]
	public enum STARTING_POSITION
	{
		[Token(Token = "0x4001A24")]
		Left,
		[Token(Token = "0x4001A25")]
		Transitioning,
		[Token(Token = "0x4001A26")]
		Right
	}

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public STARTING_POSITION StartingPosition;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_lastAngle;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int m_fullRotations;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_travelLastFrame;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 m_initialPosition;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Quaternion m_initialRotation;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17E29C", Offset = "0x17E29C")]
	[SerializeField]
	private float m_maxDistanceBeforeCancel;

	[Token(Token = "0x6001E57")]
	[Address(RVA = "0x521F04", Offset = "0x521F04", VA = "0x521F04")]
	public KnobDeviceInput()
	{
	}

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0x521F0C", Offset = "0x521F0C", VA = "0x521F0C", Slot = "6")]
	protected override void _Awake()
	{
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x522114", Offset = "0x522114", VA = "0x522114", Slot = "7")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x522118", Offset = "0x522118", VA = "0x522118", Slot = "8")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x522750", Offset = "0x522750", VA = "0x522750", Slot = "9")]
	protected override void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x522760", Offset = "0x522760", VA = "0x522760")]
	private void _ResetAngle()
	{
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x522770", Offset = "0x522770", VA = "0x522770", Slot = "10")]
	protected override void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x522774", Offset = "0x522774", VA = "0x522774")]
	private void _AdjustDistance()
	{
	}

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x522840", Offset = "0x522840", VA = "0x522840", Slot = "11")]
	protected override void _OnDestroy()
	{
	}

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x522910", Offset = "0x522910", VA = "0x522910")]
	private void StartGrabHandler(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x522968", Offset = "0x522968", VA = "0x522968")]
	private void EndGrabHandler(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x522ABC", Offset = "0x522ABC", VA = "0x522ABC", Slot = "12")]
	protected override void _AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x522AC4", Offset = "0x522AC4", VA = "0x522AC4", Slot = "13")]
	protected override void _CustomResetVisualHaptics()
	{
	}

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x522AFC", Offset = "0x522AFC", VA = "0x522AFC", Slot = "15")]
	public override void InitAsOff()
	{
	}

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x522C60", Offset = "0x522C60", VA = "0x522C60", Slot = "14")]
	public override void InitAsOn()
	{
	}

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x522DC4", Offset = "0x522DC4", VA = "0x522DC4", Slot = "18")]
	protected override void _OnStartGrab(EventArgs e)
	{
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x522DCC", Offset = "0x522DCC", VA = "0x522DCC", Slot = "19")]
	protected override void _OnGrabbing(EventArgs e)
	{
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x522DD4", Offset = "0x522DD4", VA = "0x522DD4", Slot = "20")]
	protected override void _OnEndGrab(EventArgs e)
	{
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0x522DDC", Offset = "0x522DDC", VA = "0x522DDC", Slot = "21")]
	protected override void _OnIdleGrab(EventArgs e)
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x172F14", Offset = "0x172F14")]
	public class KnobInput : GrabbableExtended
	{
		[Token(Token = "0x2000452")]
		public enum KnobPosition
		{
			[Token(Token = "0x4001A3A")]
			Right,
			[Token(Token = "0x4001A3B")]
			Transitioning,
			[Token(Token = "0x4001A3C")]
			Left
		}

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KnobPosition startingPosition;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DashGuage.GuageState startingGuageState;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private DashGuage.GuageState currentGuageState;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DashGuage.GuageState lastGuageState;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public DashGuage dashGuageToSet;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxRotation;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float switchDegreeThreshhold;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentRotation;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float previousRotation;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform knobVisual;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float rotationReturnSpeed;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 knobRotationAxis;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lastKnobRotation;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 knobStartRotation;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 knobEndRotation;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 initalPosition;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion initalRotation;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private TouchInput.Hands lastHand;

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x27120C", Offset = "0x27120C", VA = "0x27120C")]
		public KnobInput()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x271290", Offset = "0x271290", VA = "0x271290")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x271414", Offset = "0x271414", VA = "0x271414", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x2714AC", Offset = "0x2714AC", VA = "0x2714AC")]
		private void SetGrabStart()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x2714B8", Offset = "0x2714B8", VA = "0x2714B8")]
		private void SetGrabbed()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x271764", Offset = "0x271764", VA = "0x271764")]
		private void SetDropped()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x271940", Offset = "0x271940", VA = "0x271940")]
		private void SetIdle()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x2719D8", Offset = "0x2719D8", VA = "0x2719D8")]
		private void SetKnobIdleRotation()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x271A00", Offset = "0x271A00", VA = "0x271A00")]
		private void AdjustCurrentDistance()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x271B28", Offset = "0x271B28", VA = "0x271B28")]
		private void AdjustVisualHaltics()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x271978", Offset = "0x271978", VA = "0x271978")]
		private void SetGuageState(float currentRotation)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x271C78", Offset = "0x271C78", VA = "0x271C78")]
		public void InitAsOn()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x271DE0", Offset = "0x271DE0", VA = "0x271DE0")]
		public void InitAsOff()
		{
		}
	}
}
[Serializable]
[Token(Token = "0x2000453")]
public class LeverInput : TouchInput
{
	[Token(Token = "0x2000454")]
	public enum LeverPosition
	{
		[Token(Token = "0x4001A49")]
		Up,
		[Token(Token = "0x4001A4A")]
		Middle,
		[Token(Token = "0x4001A4B")]
		Down
	}

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform correctedTargetPositionX;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform lever;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LeverPosition startingPosition;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LeverPosition currentPosition;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private LeverPosition previousPosition;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 baseRotation;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rotationRange;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float maxRotation;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float minRotation;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float normalizedInput;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InputManager inputManager;

	[Token(Token = "0x17000428")]
	public float GetInput
	{
		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x34F868", Offset = "0x34F868", VA = "0x34F868")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001E77")]
	[Address(RVA = "0x34F7BC", Offset = "0x34F7BC", VA = "0x34F7BC")]
	public LeverInput()
	{
	}

	[Token(Token = "0x6001E79")]
	[Address(RVA = "0x34F870", Offset = "0x34F870", VA = "0x34F870")]
	public void InitLeverInput()
	{
	}

	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0x34FA24", Offset = "0x34FA24", VA = "0x34FA24")]
	public void Update()
	{
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x34FF58", Offset = "0x34FF58", VA = "0x34FF58")]
	public void InitAtPosition(float input)
	{
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x34FA74", Offset = "0x34FA74", VA = "0x34FA74")]
	private void PositionLever()
	{
	}

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0x34FF60", Offset = "0x34FF60", VA = "0x34FF60")]
	public void SetLeverPosition(float currentInput)
	{
	}

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x34FC4C", Offset = "0x34FC4C", VA = "0x34FC4C")]
	private void CheckForOverThrow()
	{
	}

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0x34FDFC", Offset = "0x34FDFC", VA = "0x34FDFC")]
	private float SetInput()
	{
		return default(float);
	}
}
[Token(Token = "0x2000455")]
public class RemoveCrossHair : MonoBehaviour
{
	[Token(Token = "0x20005C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174224", Offset = "0x174224")]
	private sealed class <_WaitForController>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x17000589")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600272E")]
			[Address(RVA = "0x293AAC", Offset = "0x293AAC", VA = "0x293AAC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600272F")]
			[Address(RVA = "0x293AB4", Offset = "0x293AB4", VA = "0x293AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x2939E0", Offset = "0x2939E0", VA = "0x2939E0")]
		[DebuggerHidden]
		public <_WaitForController>c__Iterator0()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x2939E8", Offset = "0x2939E8", VA = "0x2939E8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x293ABC", Offset = "0x293ABC", VA = "0x293ABC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x293AD0", Offset = "0x293AD0", VA = "0x293AD0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameManager gameManager;

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0x2938C0", Offset = "0x2938C0", VA = "0x2938C0")]
	public RemoveCrossHair()
	{
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0x2938C8", Offset = "0x2938C8", VA = "0x2938C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0x293974", Offset = "0x293974", VA = "0x293974")]
	[DebuggerHidden]
	private IEnumerator _WaitForController()
	{
		return null;
	}
}
[Token(Token = "0x2000456")]
public class SetOverrideTagLayer : MonoBehaviour
{
	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string tagName;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string layerName;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool setOnlyOnce;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool _hasBeenSet;

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0x2FBFC4", Offset = "0x2FBFC4", VA = "0x2FBFC4")]
	public SetOverrideTagLayer()
	{
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0x2FBFD4", Offset = "0x2FBFD4", VA = "0x2FBFD4")]
	private void OnEnable()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000457")]
	public class StickInput : Grabbable
	{
		[Token(Token = "0x2000458")]
		private enum GrabState
		{
			[Token(Token = "0x4001A6E")]
			Idle,
			[Token(Token = "0x4001A6F")]
			Grabbed,
			[Token(Token = "0x4001A70")]
			Dropped
		}

		[Token(Token = "0x2000459")]
		private enum StickPosition
		{
			[Token(Token = "0x4001A72")]
			Extended,
			[Token(Token = "0x4001A73")]
			Middle
		}

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Transform flightStickBase;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform flightStick;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 baseOffset;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Vector3 stickOffset;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Transform correctedTargetPositionX;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform correctedTargetPositionZ;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxRotationX;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotationRangeX;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float minRotationX;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxRotationZ;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationRangeZ;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float minRotationZ;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 normalizedInput;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 baseAileronRotation;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 baseElevatorRotation;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ControlStick AileronControlStickUsed;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ControlStick ElevatorControlStickUsed;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private GrabState currentGrabState;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TouchInput touchInput;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private StickPosition startingElevatorPosition;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private StickPosition currentElevatorPosition;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private StickPosition previousElevatorPosition;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StickPosition startingAileronPosition;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private StickPosition currentAileronPosition;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private StickPosition previousAileronPosition;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public TouchInput.Hands currentHand;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool invertSteerableWheel;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static InputManager inputManager;

		[Token(Token = "0x17000429")]
		public Vector2 GetInput
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x271FD0", Offset = "0x271FD0", VA = "0x271FD0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700042A")]
		public float GetInputX
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x271FE4", Offset = "0x271FE4", VA = "0x271FE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700042B")]
		public float GetInputZ
		{
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x271FEC", Offset = "0x271FEC", VA = "0x271FEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x271F48", Offset = "0x271F48", VA = "0x271F48")]
		public StickInput()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x271FF4", Offset = "0x271FF4", VA = "0x271FF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x272564", Offset = "0x272564", VA = "0x272564")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x272568", Offset = "0x272568", VA = "0x272568")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x2726C0", Offset = "0x2726C0", VA = "0x2726C0", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x2726E0", Offset = "0x2726E0", VA = "0x2726E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x272BAC", Offset = "0x272BAC", VA = "0x272BAC")]
		private void PositionStick()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x272F5C", Offset = "0x272F5C", VA = "0x272F5C")]
		private void CheckForOverThrow()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x273300", Offset = "0x273300", VA = "0x273300")]
		private void SetInput()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x2735B8", Offset = "0x2735B8", VA = "0x2735B8")]
		public void SetAileronPosition(float currentInput)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x27365C", Offset = "0x27365C", VA = "0x27365C")]
		public void SetElevatorPosition(float currentInput)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x272410", Offset = "0x272410", VA = "0x272410")]
		private void _SubscribeToOnSceneChange()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x27256C", Offset = "0x27256C", VA = "0x27256C")]
		private void _UnsubscribeFromOnSceneChange()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x273700", Offset = "0x273700", VA = "0x273700")]
		private void _OnCameraStateChangeCallback(GameManager.CameraState state)
		{
		}
	}
}
[Token(Token = "0x200045A")]
public class SwitchDeviceInput : DeviceInput
{
	[Token(Token = "0x200045B")]
	public enum STARTING_POSITION
	{
		[Token(Token = "0x4001A77")]
		Up,
		[Token(Token = "0x4001A78")]
		Down,
		[Token(Token = "0x4001A79")]
		Transitioning
	}

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public STARTING_POSITION StartingPosition;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_lastDistance;

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0x2C77A0", Offset = "0x2C77A0", VA = "0x2C77A0")]
	public SwitchDeviceInput()
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0x2C77B0", Offset = "0x2C77B0", VA = "0x2C77B0", Slot = "6")]
	protected override void _Awake()
	{
	}

	[Token(Token = "0x6001E98")]
	[Address(RVA = "0x2C77B4", Offset = "0x2C77B4", VA = "0x2C77B4", Slot = "7")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x6001E99")]
	[Address(RVA = "0x2C77B8", Offset = "0x2C77B8", VA = "0x2C77B8", Slot = "8")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0x2C7B90", Offset = "0x2C7B90", VA = "0x2C7B90", Slot = "9")]
	protected override void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0x2C7C60", Offset = "0x2C7C60", VA = "0x2C7C60", Slot = "10")]
	protected override void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0x2C7D08", Offset = "0x2C7D08", VA = "0x2C7D08", Slot = "11")]
	protected override void _OnDestroy()
	{
	}

	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0x2C7D0C", Offset = "0x2C7D0C", VA = "0x2C7D0C", Slot = "12")]
	protected override void _AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0x2C7D14", Offset = "0x2C7D14", VA = "0x2C7D14", Slot = "13")]
	protected override void _CustomResetVisualHaptics()
	{
	}

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0x2C7D40", Offset = "0x2C7D40", VA = "0x2C7D40", Slot = "15")]
	public override void InitAsOff()
	{
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0x2C7EA8", Offset = "0x2C7EA8", VA = "0x2C7EA8", Slot = "14")]
	public override void InitAsOn()
	{
	}
}
[Token(Token = "0x200045C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x172F7C", Offset = "0x172F7C")]
public class SwitchInput : MonoBehaviour
{
	[Token(Token = "0x200045D")]
	public enum SwitchPosition
	{
		[Token(Token = "0x4001A91")]
		Up,
		[Token(Token = "0x4001A92")]
		Transitioning,
		[Token(Token = "0x4001A93")]
		Down
	}

	[Token(Token = "0x200045E")]
	public enum SwitchDirection
	{
		[Token(Token = "0x4001A95")]
		X,
		[Token(Token = "0x4001A96")]
		Y,
		[Token(Token = "0x4001A97")]
		Z
	}

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SwitchPosition startingPosition;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DashGuage.GuageState startingGuageState;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private DashGuage.GuageState currentGuageState;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DashGuage.GuageState lastGuageState;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DashGuage dashGuageToSet;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchDirection switchDirection;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 directionVector;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TouchInput.Hands currentHand;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform touchFinger;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider touchCollider;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startTouch;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTouched;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Transform switchVisual;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxDistance;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float switchDistanceThreshhold;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxRotation;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float distanceReturnSpeed;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 switchRotationAxis;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 switchStartRotation;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastDistance;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currentDistance;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float previousDistance;

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0x2C8010", Offset = "0x2C8010", VA = "0x2C8010")]
	public SwitchInput()
	{
	}

	[Token(Token = "0x6001EA2")]
	[Address(RVA = "0x2C8140", Offset = "0x2C8140", VA = "0x2C8140")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EA3")]
	[Address(RVA = "0x2C81D0", Offset = "0x2C81D0", VA = "0x2C81D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001EA4")]
	[Address(RVA = "0x2C83BC", Offset = "0x2C83BC", VA = "0x2C83BC")]
	private void SetHandedNess(Collider other)
	{
	}

	[Token(Token = "0x6001EA5")]
	[Address(RVA = "0x2C8480", Offset = "0x2C8480", VA = "0x2C8480")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EA6")]
	[Address(RVA = "0x2C882C", Offset = "0x2C882C", VA = "0x2C882C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001EA7")]
	[Address(RVA = "0x2C8A1C", Offset = "0x2C8A1C", VA = "0x2C8A1C")]
	private void SetSwitchToIdle()
	{
	}

	[Token(Token = "0x6001EA8")]
	[Address(RVA = "0x2C8A44", Offset = "0x2C8A44", VA = "0x2C8A44")]
	private void AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001EA9")]
	[Address(RVA = "0x2C8B70", Offset = "0x2C8B70", VA = "0x2C8B70")]
	private void AdjustVisualHaltics()
	{
	}

	[Token(Token = "0x6001EAA")]
	[Address(RVA = "0x2C89BC", Offset = "0x2C89BC", VA = "0x2C89BC")]
	private void SetGuageState(float currentRot)
	{
	}

	[Token(Token = "0x6001EAB")]
	[Address(RVA = "0x2C8CD0", Offset = "0x2C8CD0", VA = "0x2C8CD0")]
	public void InitAsOn()
	{
	}

	[Token(Token = "0x6001EAC")]
	[Address(RVA = "0x2C8E38", Offset = "0x2C8E38", VA = "0x2C8E38")]
	public void InitAsOff()
	{
	}
}
[Token(Token = "0x200045F")]
public class TabletButton : MonoBehaviour
{
	[Token(Token = "0x2000460")]
	public enum InteractionType
	{
		[Token(Token = "0x4001AA9")]
		None = -1,
		[Token(Token = "0x4001AAA")]
		A,
		[Token(Token = "0x4001AAB")]
		B,
		[Token(Token = "0x4001AAC")]
		X,
		[Token(Token = "0x4001AAD")]
		Y,
		[Token(Token = "0x4001AAE")]
		LB,
		[Token(Token = "0x4001AAF")]
		RB,
		[Token(Token = "0x4001AB0")]
		Gaze,
		[Token(Token = "0x4001AB1")]
		OnGaze,
		[Token(Token = "0x4001AB2")]
		OffGaze
	}

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private CanvasTrigger canvasTrigger;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InteractionType currentInteractionType;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 hapticButton;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 hapticGaze;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private TouchInput.Hands currentHand;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InputManager inputManager;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject toFollowAwaken;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Collider triggerCollider;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_enableTrigger;

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool m_preventDoubleTaps;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<Collider> m_collidedTriggers;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float awakeTime;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float awakeDelay;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider m_lastCollider;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_scanDistanceFromButton;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_elapsedTimeOutside;

	[Token(Token = "0x6001EAD")]
	[Address(RVA = "0x2C8FA0", Offset = "0x2C8FA0", VA = "0x2C8FA0")]
	public TabletButton()
	{
	}

	[Token(Token = "0x6001EAE")]
	[Address(RVA = "0x2C90D0", Offset = "0x2C90D0", VA = "0x2C90D0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001EAF")]
	[Address(RVA = "0x2C935C", Offset = "0x2C935C", VA = "0x2C935C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001EB0")]
	[Address(RVA = "0x2C93B0", Offset = "0x2C93B0", VA = "0x2C93B0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001EB1")]
	[Address(RVA = "0x2C93B4", Offset = "0x2C93B4", VA = "0x2C93B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EB2")]
	[Address(RVA = "0x2C9604", Offset = "0x2C9604", VA = "0x2C9604")]
	private void _UpdateFinger()
	{
	}

	[Token(Token = "0x6001EB3")]
	[Address(RVA = "0x2C9960", Offset = "0x2C9960", VA = "0x2C9960")]
	private void _OnTriggerEnterFinger(Collider other)
	{
	}

	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0x2C9A98", Offset = "0x2C9A98", VA = "0x2C9A98")]
	private void _OnTriggerExitFinger(Collider other)
	{
	}

	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0x2C9BCC", Offset = "0x2C9BCC", VA = "0x2C9BCC")]
	private bool IsClick()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0x2C9440", Offset = "0x2C9440", VA = "0x2C9440")]
	private void _UpdateTriggerEnabled()
	{
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0x2C9C48", Offset = "0x2C9C48", VA = "0x2C9C48")]
	private void OnOverlapBegin(object msg)
	{
	}

	[Token(Token = "0x6001EB8")]
	[Address(RVA = "0x2C9DB8", Offset = "0x2C9DB8", VA = "0x2C9DB8")]
	private void OnOverlapEnd(object msg)
	{
	}

	[Token(Token = "0x6001EB9")]
	[Address(RVA = "0x2C9E24", Offset = "0x2C9E24", VA = "0x2C9E24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001EBA")]
	[Address(RVA = "0x2CA4B0", Offset = "0x2CA4B0", VA = "0x2CA4B0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0x2CA198", Offset = "0x2CA198", VA = "0x2CA198")]
	private void SetHandedNess(Collider other)
	{
	}

	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0x2CA60C", Offset = "0x2CA60C", VA = "0x2CA60C")]
	private void ResetHandedNess()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000461")]
	public class TabletInput : GrabbableExtended
	{
		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 initalPosition;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion initalRotation;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnGrabEvt;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public UnityEvent OnReleaseEvt;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x2737C8", Offset = "0x2737C8", VA = "0x2737C8")]
		public TabletInput()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x2737D0", Offset = "0x2737D0", VA = "0x2737D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x273908", Offset = "0x273908", VA = "0x273908", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x273964", Offset = "0x273964", VA = "0x273964")]
		private void SetTriggerHand()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x273968", Offset = "0x273968", VA = "0x273968")]
		private void SetGrabbed()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x273AB0", Offset = "0x273AB0", VA = "0x273AB0")]
		public void GamepadPickupTablet()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x273ABC", Offset = "0x273ABC", VA = "0x273ABC")]
		public void GamepadDropTablet()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x27396C", Offset = "0x27396C", VA = "0x27396C")]
		private void SetDropped()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x273AAC", Offset = "0x273AAC", VA = "0x273AAC")]
		private void SetIdle()
		{
		}
	}
}
[Token(Token = "0x2000462")]
public class TabletWaker : MonoBehaviour
{
	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TabletButton tabletButton;

	[Token(Token = "0x6001EC6")]
	[Address(RVA = "0x2CAFA0", Offset = "0x2CAFA0", VA = "0x2CAFA0")]
	public TabletWaker()
	{
	}

	[Token(Token = "0x6001EC7")]
	[Address(RVA = "0x2CAFA8", Offset = "0x2CAFA8", VA = "0x2CAFA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001EC8")]
	[Address(RVA = "0x2CB058", Offset = "0x2CB058", VA = "0x2CB058")]
	private void OnDisable()
	{
	}
}
namespace OvrTouch.Hands
{
	[Token(Token = "0x2000463")]
	public class ThrottleInput : GrabbableExtended
	{
		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Transform leverVisual;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControlStick ControlStickUsed;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LeverInput LeverInput;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ThrottleInput throttleInput;

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x273AC8", Offset = "0x273AC8", VA = "0x273AC8")]
		public ThrottleInput()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x273B44", Offset = "0x273B44", VA = "0x273B44")]
		public static ThrottleInput Instance()
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x273BA8", Offset = "0x273BA8", VA = "0x273BA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x273D70", Offset = "0x273D70", VA = "0x273D70")]
		public void InitAtPosition(float input)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x273F78", Offset = "0x273F78", VA = "0x273F78", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x27423C", Offset = "0x27423C", VA = "0x27423C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x273DD4", Offset = "0x273DD4", VA = "0x273DD4")]
		private void SetGrabbed()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x274000", Offset = "0x274000", VA = "0x274000")]
		private void SetDropped()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x2740D0", Offset = "0x2740D0", VA = "0x2740D0")]
		private void SetIdle()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x273CD0", Offset = "0x273CD0", VA = "0x273CD0")]
		private void _SubscribeToOnDropEvent()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x27425C", Offset = "0x27425C", VA = "0x27425C")]
		private void _UnsubscribeFromOnDropEvent()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x2742FC", Offset = "0x2742FC", VA = "0x2742FC")]
		private void _OnDropHandler()
		{
		}
	}
}
[Serializable]
[Token(Token = "0x2000464")]
public class TouchInput
{
	[Token(Token = "0x2000465")]
	public enum Hands
	{
		[Token(Token = "0x4001AC6")]
		Left,
		[Token(Token = "0x4001AC7")]
		Right,
		[Token(Token = "0x4001AC8")]
		Neither,
		[Token(Token = "0x4001AC9")]
		Either,
		[Token(Token = "0x4001ACA")]
		Both
	}

	[Token(Token = "0x2000466")]
	public delegate void GrabEventHandler();

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject followTrigger;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform followTarget;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform touchOrigin;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float dropDistance;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hands currentHand;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 gripCenter;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isGrabbed;

	[Token(Token = "0x1400004D")]
	public event GrabEventHandler OnGrabEvent
	{
		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x2D0FC0", Offset = "0x2D0FC0", VA = "0x2D0FC0")]
		add
		{
		}
		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x2D10CC", Offset = "0x2D10CC", VA = "0x2D10CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400004E")]
	public event GrabEventHandler OnDropEvent
	{
		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x2D11D8", Offset = "0x2D11D8", VA = "0x2D11D8")]
		add
		{
		}
		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x2D12E4", Offset = "0x2D12E4", VA = "0x2D12E4")]
		remove
		{
		}
	}

	[Token(Token = "0x6001ED5")]
	[Address(RVA = "0x2D0FAC", Offset = "0x2D0FAC", VA = "0x2D0FAC")]
	public TouchInput()
	{
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x2D13F0", Offset = "0x2D13F0", VA = "0x2D13F0")]
	public void CheckForDrop()
	{
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x2D1724", Offset = "0x2D1724", VA = "0x2D1724")]
	public void CheckForGrab()
	{
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0x2D1848", Offset = "0x2D1848", VA = "0x2D1848")]
	public void ResetOnDrop()
	{
	}
}
[Token(Token = "0x2000467")]
public class TouchVisibility : MonoBehaviour
{
	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] touchObjects;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] nonTouchObjects;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x2D1998", Offset = "0x2D1998", VA = "0x2D1998")]
	public TouchVisibility()
	{
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x2D19A0", Offset = "0x2D19A0", VA = "0x2D19A0")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000468")]
public class TwistDeviceInput : DeviceInput
{
	[Token(Token = "0x2000469")]
	public enum STARTING_POSITION
	{
		[Token(Token = "0x4001AD3")]
		Left,
		[Token(Token = "0x4001AD4")]
		Transitioning,
		[Token(Token = "0x4001AD5")]
		Right
	}

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public STARTING_POSITION StartingPosition;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_lastAngle;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int m_fullRotations;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_travelLastFrame;

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0x383DA8", Offset = "0x383DA8", VA = "0x383DA8")]
	public TwistDeviceInput()
	{
	}

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0x383DB0", Offset = "0x383DB0", VA = "0x383DB0", Slot = "6")]
	protected override void _Awake()
	{
	}

	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0x383DB4", Offset = "0x383DB4", VA = "0x383DB4", Slot = "7")]
	protected override void _Start()
	{
	}

	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0x383DB8", Offset = "0x383DB8", VA = "0x383DB8", Slot = "8")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0x384178", Offset = "0x384178", VA = "0x384178", Slot = "9")]
	protected override void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001EE8")]
	[Address(RVA = "0x384188", Offset = "0x384188", VA = "0x384188", Slot = "10")]
	protected override void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001EE9")]
	[Address(RVA = "0x38423C", Offset = "0x38423C", VA = "0x38423C", Slot = "12")]
	protected override void _AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001EEA")]
	[Address(RVA = "0x384244", Offset = "0x384244", VA = "0x384244", Slot = "13")]
	protected override void _CustomResetVisualHaptics()
	{
	}

	[Token(Token = "0x6001EEB")]
	[Address(RVA = "0x384270", Offset = "0x384270", VA = "0x384270", Slot = "15")]
	public override void InitAsOff()
	{
	}

	[Token(Token = "0x6001EEC")]
	[Address(RVA = "0x3843D4", Offset = "0x3843D4", VA = "0x3843D4", Slot = "14")]
	public override void InitAsOn()
	{
	}
}
[Token(Token = "0x200046A")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x172FEC", Offset = "0x172FEC")]
public class TwistInput : MonoBehaviour
{
	[Token(Token = "0x200046B")]
	public enum SwitchPosition
	{
		[Token(Token = "0x4001AEF")]
		Left,
		[Token(Token = "0x4001AF0")]
		Transitioning,
		[Token(Token = "0x4001AF1")]
		Right
	}

	[Token(Token = "0x200046C")]
	public enum SwitchDirection
	{
		[Token(Token = "0x4001AF3")]
		X,
		[Token(Token = "0x4001AF4")]
		Y,
		[Token(Token = "0x4001AF5")]
		Z
	}

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SwitchPosition startingPosition;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DashGuage.GuageState startingGuageState;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private DashGuage.GuageState currentGuageState;

	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DashGuage.GuageState lastGuageState;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DashGuage dashGuageToSet;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchDirection switchDirection;

	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 directionVector;

	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TouchInput.Hands currentHand;

	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform touchFinger;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider touchCollider;

	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startTouch;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTouched;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Transform switchVisual;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxInput;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float switchInputThreshhold;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxTravel;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float travelLastFrame;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float inputReturnSpeed;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 switchInputAxis;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 switchStartInput;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float input;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float storedInput;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int fullRotations;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastAngle;

	[Token(Token = "0x6001EED")]
	[Address(RVA = "0x384538", Offset = "0x384538", VA = "0x384538")]
	public TwistInput()
	{
	}

	[Token(Token = "0x6001EEE")]
	[Address(RVA = "0x384670", Offset = "0x384670", VA = "0x384670")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EEF")]
	[Address(RVA = "0x384700", Offset = "0x384700", VA = "0x384700")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001EF0")]
	[Address(RVA = "0x3848BC", Offset = "0x3848BC", VA = "0x3848BC")]
	private void SetHandedNess(Collider other)
	{
	}

	[Token(Token = "0x6001EF1")]
	[Address(RVA = "0x384980", Offset = "0x384980", VA = "0x384980")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0x384D14", Offset = "0x384D14", VA = "0x384D14")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0x384F10", Offset = "0x384F10", VA = "0x384F10")]
	private void SetSwitchToIdle()
	{
	}

	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0x384F38", Offset = "0x384F38", VA = "0x384F38")]
	private void AdjustCurrentDistance()
	{
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0x385064", Offset = "0x385064", VA = "0x385064")]
	private void AdjustVisualHaltics()
	{
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0x384EB0", Offset = "0x384EB0", VA = "0x384EB0")]
	private void SetGuageState(float currentRot)
	{
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0x3851C4", Offset = "0x3851C4", VA = "0x3851C4")]
	public void InitAsOn()
	{
	}

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0x385328", Offset = "0x385328", VA = "0x385328")]
	public void InitAsOff()
	{
	}
}
namespace TouchExtended.Hands
{
	[Token(Token = "0x200046D")]
	public interface IHand
	{
		[Token(Token = "0x6001EF9")]
		List<Collider> GetGrabVolumes();

		[Token(Token = "0x6001EFA")]
		List<Collider> GetColliders();
	}
}
[Token(Token = "0x200046E")]
public class StaticButtonDeviceInputClone : StaticDeviceInputClone
{
	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonDeviceInput m_buttonDeviceInput;

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0x2C129C", Offset = "0x2C129C", VA = "0x2C129C")]
	public StaticButtonDeviceInputClone()
	{
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0x2C1344", Offset = "0x2C1344", VA = "0x2C1344", Slot = "7")]
	protected override void _SetDeviceInput(DeviceInput deviceInput)
	{
	}

	[Token(Token = "0x6001EFD")]
	[Address(RVA = "0x2C13E0", Offset = "0x2C13E0", VA = "0x2C13E0")]
	private void _UpdateButtonDeviceInput()
	{
	}

	[Token(Token = "0x6001EFE")]
	[Address(RVA = "0x2C15F4", Offset = "0x2C15F4", VA = "0x2C15F4", Slot = "4")]
	protected override void _Update()
	{
	}

	[Token(Token = "0x6001EFF")]
	[Address(RVA = "0x2C15F8", Offset = "0x2C15F8", VA = "0x2C15F8", Slot = "5")]
	protected override void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001F00")]
	[Address(RVA = "0x2C1600", Offset = "0x2C1600", VA = "0x2C1600", Slot = "6")]
	protected override void _OnTriggerExit(Collider col)
	{
	}
}
[Token(Token = "0x200046F")]
public class StaticDeviceInputClone : MonoBehaviour
{
	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DeviceInput m_deviceInput;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Transform m_touchFinger;

	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Vector3 m_startTouch;

	[Token(Token = "0x6001F01")]
	[Address(RVA = "0x2C12A0", Offset = "0x2C12A0", VA = "0x2C12A0")]
	public StaticDeviceInputClone()
	{
	}

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0x2C1608", Offset = "0x2C1608", VA = "0x2C1608")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F03")]
	[Address(RVA = "0x2C160C", Offset = "0x2C160C", VA = "0x2C160C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F04")]
	[Address(RVA = "0x2C16D0", Offset = "0x2C16D0", VA = "0x2C16D0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001F05")]
	[Address(RVA = "0x2C1DDC", Offset = "0x2C1DDC", VA = "0x2C1DDC")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001F06")]
	[Address(RVA = "0x2C2038", Offset = "0x2C2038", VA = "0x2C2038", Slot = "4")]
	protected virtual void _Update()
	{
	}

	[Token(Token = "0x6001F07")]
	[Address(RVA = "0x2C15FC", Offset = "0x2C15FC", VA = "0x2C15FC", Slot = "5")]
	protected virtual void _OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001F08")]
	[Address(RVA = "0x2C1604", Offset = "0x2C1604", VA = "0x2C1604", Slot = "6")]
	protected virtual void _OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001F09")]
	[Address(RVA = "0x2C203C", Offset = "0x2C203C", VA = "0x2C203C")]
	public void SetDeviceInput(DeviceInput deviceInput)
	{
	}

	[Token(Token = "0x6001F0A")]
	[Address(RVA = "0x2C208C", Offset = "0x2C208C", VA = "0x2C208C", Slot = "7")]
	protected virtual void _SetDeviceInput(DeviceInput deviceInput)
	{
	}

	[Token(Token = "0x6001F0B")]
	[Address(RVA = "0x2C1BC8", Offset = "0x2C1BC8", VA = "0x2C1BC8")]
	protected void _SetStaticHand(Collider col)
	{
	}

	[Token(Token = "0x6001F0C")]
	[Address(RVA = "0x2C1F98", Offset = "0x2C1F98", VA = "0x2C1F98")]
	private void _RemoveStaticHand()
	{
	}
}
namespace TouchExtended.Hands
{
	[Token(Token = "0x2000470")]
	public class StaticGrabbableClone : MonoBehaviour
	{
		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private OvrTouch.Hands.Grabbable m_grabbable;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GrabPoint m_grabPoint;

		[Token(Token = "0x1700042C")]
		public OvrTouch.Hands.Grabbable Grabbable
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x2CF65C", Offset = "0x2CF65C", VA = "0x2CF65C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		public GrabPoint GrabPoint
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x2CF664", Offset = "0x2CF664", VA = "0x2CF664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x2CF654", Offset = "0x2CF654", VA = "0x2CF654")]
		public StaticGrabbableClone()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x2CF368", Offset = "0x2CF368", VA = "0x2CF368")]
		public void SetGrabbable(OvrTouch.Hands.Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x2CF370", Offset = "0x2CF370", VA = "0x2CF370")]
		public void SetGrabPoint(GrabPoint grabPoint)
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class StaticHand : Hand, IHand
	{
		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174234", Offset = "0x174234")]
		private sealed class <_WaitForStaticModel>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal StaticHand $this;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x1700058B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6002734")]
				[Address(RVA = "0x2D0F00", Offset = "0x2D0F00", VA = "0x2D0F00", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002735")]
				[Address(RVA = "0x2D0F08", Offset = "0x2D0F08", VA = "0x2D0F08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002732")]
			[Address(RVA = "0x2D0D00", Offset = "0x2D0D00", VA = "0x2D0D00")]
			[DebuggerHidden]
			public <_WaitForStaticModel>c__Iterator0()
			{
			}

			[Token(Token = "0x6002733")]
			[Address(RVA = "0x2D0D98", Offset = "0x2D0D98", VA = "0x2D0D98", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002736")]
			[Address(RVA = "0x2D0F10", Offset = "0x2D0F10", VA = "0x2D0F10", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0x2D0F24", Offset = "0x2D0F24", VA = "0x2D0F24", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private StaticManager m_staticManager;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform s_parent;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private StaticHandClone m_staticHandClone;

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x2CF66C", Offset = "0x2CF66C", VA = "0x2CF66C")]
		public StaticHand()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x2CF6F0", Offset = "0x2CF6F0", VA = "0x2CF6F0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x2CF7D4", Offset = "0x2CF7D4", VA = "0x2CF7D4", Slot = "5")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x2CF7DC", Offset = "0x2CF7DC", VA = "0x2CF7DC", Slot = "6")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x2CF710", Offset = "0x2CF710", VA = "0x2CF710")]
		private void _SetStartingManager()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x2CF7E4", Offset = "0x2CF7E4", VA = "0x2CF7E4")]
		private void CloneParent()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x2CF948", Offset = "0x2CF948", VA = "0x2CF948", Slot = "11")]
		public List<Collider> GetGrabVolumes()
		{
			return null;
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x2CF9AC", Offset = "0x2CF9AC", VA = "0x2CF9AC", Slot = "12")]
		public List<Collider> GetColliders()
		{
			return null;
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x2CFA10", Offset = "0x2CFA10", VA = "0x2CFA10")]
		private void _NormalGrabBegin()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x2D0018", Offset = "0x2D0018", VA = "0x2D0018")]
		private void _StaticGrabBegin()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x2D0398", Offset = "0x2D0398", VA = "0x2D0398", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x2D049C", Offset = "0x2D049C", VA = "0x2D049C", Slot = "8")]
		protected override void GrabbableGrab(OvrTouch.Hands.Grabbable grabbable, GrabPoint grabPoint)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x2D0678", Offset = "0x2D0678", VA = "0x2D0678", Slot = "9")]
		protected override void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x2D06F8", Offset = "0x2D06F8", VA = "0x2D06F8", Slot = "10")]
		protected override void OffhandGrabbed(OvrTouch.Hands.Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x2D0888", Offset = "0x2D0888", VA = "0x2D0888")]
		public void WaitForStaticModel()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x2CDCC8", Offset = "0x2CDCC8", VA = "0x2CDCC8")]
		public void GetStaticHandClone()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x2D0930", Offset = "0x2D0930", VA = "0x2D0930")]
		private void _GetStaticHandClone()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x2D08AC", Offset = "0x2D08AC", VA = "0x2D08AC")]
		[DebuggerHidden]
		private IEnumerator _WaitForStaticModel()
		{
			return null;
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x2CDCCC", Offset = "0x2CDCCC", VA = "0x2CDCCC")]
		public void RemoveStaticHandClone()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x2D0D08", Offset = "0x2D0D08", VA = "0x2D0D08")]
		private void _RemoveStaticHandClone()
		{
		}
	}
}
[Token(Token = "0x2000472")]
public class StaticHandClone : MonoBehaviour
{
	[Token(Token = "0x4001AFF")]
	private const string GRAB_VOLUME_BIG = "GrabVolumeBig_Clone";

	[Token(Token = "0x4001B00")]
	private const string GRAB_VOLUME_SMALL = "GrabVolumeSmall_Clone";

	[Token(Token = "0x4001B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private CapsuleCollider m_grabVolumeBig;

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CapsuleCollider m_grabVolumeSmall;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private StaticManager m_staticManager;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_grabbableTransformClone;

	[Token(Token = "0x1700042E")]
	public Transform GrabbableTransformClone
	{
		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x2C2350", Offset = "0x2C2350", VA = "0x2C2350")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001F27")]
	[Address(RVA = "0x2C2090", Offset = "0x2C2090", VA = "0x2C2090")]
	public StaticHandClone()
	{
	}

	[Token(Token = "0x6001F28")]
	[Address(RVA = "0x2C2098", Offset = "0x2C2098", VA = "0x2C2098")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0x2C2248", Offset = "0x2C2248", VA = "0x2C2248")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0x2C224C", Offset = "0x2C224C", VA = "0x2C224C")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0x2C2280", Offset = "0x2C2280", VA = "0x2C2280")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0x2C209C", Offset = "0x2C209C", VA = "0x2C209C")]
	private void _FindGrabVolume()
	{
	}

	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0x2C228C", Offset = "0x2C228C", VA = "0x2C228C")]
	private void _GetStaticManager()
	{
	}

	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0x2C2850", Offset = "0x2C2850", VA = "0x2C2850")]
	public bool IsGrabbingTransform(Transform grabbableTransform)
	{
		return default(bool);
	}
}
namespace TouchExtended.Base
{
	[Token(Token = "0x2000473")]
	public class StaticManager : MonoBehaviour
	{
		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174244", Offset = "0x174244")]
		private sealed class <GetRef>c__AnonStorey0
		{
			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Transform x;

			[Token(Token = "0x6002738")]
			[Address(RVA = "0x2CD7A4", Offset = "0x2CD7A4", VA = "0x2CD7A4")]
			public <GetRef>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6002739")]
			[Address(RVA = "0x2CF59C", Offset = "0x2CF59C", VA = "0x2CF59C")]
			internal bool <>m__0(KeyValuePair<Transform, Transform> item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174254", Offset = "0x174254")]
		private sealed class <CheckIfGrabbed>c__AnonStorey1
		{
			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Transform tformRef;

			[Token(Token = "0x600273A")]
			[Address(RVA = "0x2CF4D8", Offset = "0x2CF4D8", VA = "0x2CF4D8")]
			public <CheckIfGrabbed>c__AnonStorey1()
			{
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0x2CF4E4", Offset = "0x2CF4E4", VA = "0x2CF4E4")]
			internal bool <>m__0(KeyValuePair<Transform, Transform> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticManager s_instance;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_hasCreatedStaticModel;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_staticParentRef;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform m_staticParentCopy;

		[Token(Token = "0x4001B09")]
		private const string CAMERA_OVR_NAME = "Camera_OVR";

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Transform, Transform> m_otherTforms;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Dictionary<Collider, Collider> m_colliders;

		[Token(Token = "0x4001B0C")]
		private const string TRIGGERS_NAME = "Triggers";

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_triggersCopy;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private List<StaticGrabbableClone> m_staticGrabbableCloneList;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<StaticDeviceInputClone> m_staticDeviceInputCloneList;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Transform m_gunTformClone;

		[Token(Token = "0x1700042F")]
		public static StaticManager Instance
		{
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x2C19B4", Offset = "0x2C19B4", VA = "0x2C19B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000430")]
		public bool HasCreatedStaticModel
		{
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x2CD17C", Offset = "0x2CD17C", VA = "0x2CD17C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000431")]
		public List<StaticGrabbableClone> StaticGrabbableCloneList
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x2C2848", Offset = "0x2C2848", VA = "0x2C2848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000432")]
		public List<StaticDeviceInputClone> StaticButtonDeviceInputCloneList
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x2CF360", Offset = "0x2CF360", VA = "0x2CF360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x2CC630", Offset = "0x2CC630", VA = "0x2CC630")]
		public StaticManager()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x2CC758", Offset = "0x2CC758", VA = "0x2CC758")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x2CC7E8", Offset = "0x2CC7E8", VA = "0x2CC7E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x2CD184", Offset = "0x2CD184", VA = "0x2CD184")]
		public void CreateStaticModel()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x2CD388", Offset = "0x2CD388", VA = "0x2CD388")]
		public void RemoveStaticModel()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x2CD504", Offset = "0x2CD504", VA = "0x2CD504")]
		public void RemoveHandClones()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x2CD6B0", Offset = "0x2CD6B0", VA = "0x2CD6B0")]
		public void SetStaticParentRef(Transform staticParent)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x2C2940", Offset = "0x2C2940", VA = "0x2C2940")]
		public bool IsTransformPair(Transform x, Transform y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x2CD6B8", Offset = "0x2CD6B8", VA = "0x2CD6B8")]
		public Transform GetClone(Transform x)
		{
			return null;
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x2C1A40", Offset = "0x2C1A40", VA = "0x2C1A40")]
		public Transform GetRef(Transform x)
		{
			return null;
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x2CD7AC", Offset = "0x2CD7AC", VA = "0x2CD7AC")]
		public void CreateStaticGun(Transform gunTformRef)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x2CD188", Offset = "0x2CD188", VA = "0x2CD188")]
		private void _CreateStaticModel()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x2CD38C", Offset = "0x2CD38C", VA = "0x2CD38C")]
		private void _RemoveStaticModel()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x2CD508", Offset = "0x2CD508", VA = "0x2CD508")]
		private void _RemoveHandClones()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x2CD91C", Offset = "0x2CD91C", VA = "0x2CD91C")]
		private void _CreateCameraOVR()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x2CDAF8", Offset = "0x2CDAF8", VA = "0x2CDAF8")]
		private void _CreateTriggers()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x2CDCD0", Offset = "0x2CDCD0", VA = "0x2CDCD0")]
		private Transform _CreateTransformCopy(Transform tformRef, [Optional] Dictionary<Transform, Transform> dictToUse, bool includeColliders = false)
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x2CC7EC", Offset = "0x2CC7EC", VA = "0x2CC7EC")]
		private void _UpdateTransformToUpdate()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x2CF378", Offset = "0x2CF378", VA = "0x2CF378")]
		public bool CheckIfGrabbed(Transform tformRef, Transform tformCopy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x2CD7B0", Offset = "0x2CD7B0", VA = "0x2CD7B0")]
		private void _CreateStaticGun(Transform gunTformRef)
		{
		}
	}
}
[Token(Token = "0x2000474")]
public class BankManager : MonoBehaviour
{
	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TextMesh m_moneyText;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_incrementDelay;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_amountToIncrement;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float currentMoney;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastUpDate;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0x43C6E8", Offset = "0x43C6E8", VA = "0x43C6E8")]
	public BankManager()
	{
	}

	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0x43C708", Offset = "0x43C708", VA = "0x43C708")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0x43CCEC", Offset = "0x43CCEC", VA = "0x43CCEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0x43C890", Offset = "0x43C890", VA = "0x43C890")]
	private string formatMoney(float money)
	{
		return null;
	}
}
[Token(Token = "0x2000475")]
public class CameraReset : MonoBehaviour
{
	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Camera currentCamera;

	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0x302024", Offset = "0x302024", VA = "0x302024")]
	public CameraReset()
	{
	}

	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0x30202C", Offset = "0x30202C", VA = "0x30202C")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000476")]
public class CanvasCameraAssigner : MonoBehaviour
{
	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0x3034B0", Offset = "0x3034B0", VA = "0x3034B0")]
	public CanvasCameraAssigner()
	{
	}

	[Token(Token = "0x6001F50")]
	[Address(RVA = "0x3034B8", Offset = "0x3034B8", VA = "0x3034B8")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000477")]
public class CanvasTrigger : MonoBehaviour
{
	[Token(Token = "0x2000478")]
	public enum CanvasType
	{
		[Token(Token = "0x4001B20")]
		None = -1,
		[Token(Token = "0x4001B21")]
		Computer,
		[Token(Token = "0x4001B22")]
		PauseComputer,
		[Token(Token = "0x4001B23")]
		Tablet
	}

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string buttonType;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CanvasType currentCanvasType;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ControllerComputer m_controllerComputer;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ControllerTablet m_controllerTablet;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ControllerPauseComputer m_controllerPauseComputer;

	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private List<AudioClip> m_audioClips;

	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip m_audioClip;

	[Token(Token = "0x17000433")]
	private static ControllerComputer controllerComputer
	{
		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x3048C8", Offset = "0x3048C8", VA = "0x3048C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x304B84", Offset = "0x304B84", VA = "0x304B84")]
		set
		{
		}
	}

	[Token(Token = "0x17000434")]
	private static ControllerTablet controllerTablet
	{
		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x304BE8", Offset = "0x304BE8", VA = "0x304BE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x304CF0", Offset = "0x304CF0", VA = "0x304CF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000435")]
	private static ControllerPauseComputer controllerPauseComputer
	{
		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x304D54", Offset = "0x304D54", VA = "0x304D54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x304E30", Offset = "0x304E30", VA = "0x304E30")]
		set
		{
		}
	}

	[Token(Token = "0x6001F51")]
	[Address(RVA = "0x304834", Offset = "0x304834", VA = "0x304834")]
	public CanvasTrigger()
	{
	}

	[Token(Token = "0x6001F58")]
	[Address(RVA = "0x304E94", Offset = "0x304E94", VA = "0x304E94")]
	public void Start()
	{
	}

	[Token(Token = "0x6001F59")]
	[Address(RVA = "0x3050A8", Offset = "0x3050A8", VA = "0x3050A8")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0x305AF4", Offset = "0x305AF4", VA = "0x305AF4")]
	public void OnButtonB()
	{
	}

	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0x305D24", Offset = "0x305D24", VA = "0x305D24")]
	public void OnButtonX()
	{
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x305E48", Offset = "0x305E48", VA = "0x305E48")]
	public void OnButtonY()
	{
	}

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x305F6C", Offset = "0x305F6C", VA = "0x305F6C")]
	public void OnButtonLB()
	{
	}

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0x306170", Offset = "0x306170", VA = "0x306170")]
	public void OnButtonRB()
	{
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0x306374", Offset = "0x306374", VA = "0x306374")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6001F60")]
	[Address(RVA = "0x30644C", Offset = "0x30644C", VA = "0x30644C")]
	public void OffGaze()
	{
	}

	[Token(Token = "0x6001F61")]
	[Address(RVA = "0x305664", Offset = "0x305664", VA = "0x305664")]
	private AudioClip _GetAudioClip()
	{
		return null;
	}

	[Token(Token = "0x6001F62")]
	[Address(RVA = "0x305914", Offset = "0x305914", VA = "0x305914")]
	private void _PlayAudio(AudioClip clip)
	{
	}
}
[Token(Token = "0x2000479")]
public class ComfortSettingSelectable : MonoBehaviour, IGrabbablePropSelectable
{
	[Token(Token = "0x200047A")]
	private enum ERROR_TYPE
	{
		[Token(Token = "0x4001B28")]
		MissingSetComfortTrigger
	}

	[Token(Token = "0x4001B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SetComfortTrigger m_setComfortTrigger;

	[Token(Token = "0x4001B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_anchor;

	[Token(Token = "0x4001B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private BoxCollider m_boxCollider;

	[Token(Token = "0x17000436")]
	public SetComfortTrigger SetComfortTrigger
	{
		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x309D78", Offset = "0x309D78", VA = "0x309D78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0x3097E0", Offset = "0x3097E0", VA = "0x3097E0")]
	public ComfortSettingSelectable()
	{
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0x3097E8", Offset = "0x3097E8", VA = "0x3097E8")]
	private string _GetErrorMsg(ERROR_TYPE e)
	{
		return null;
	}

	[Token(Token = "0x6001F65")]
	[Address(RVA = "0x309890", Offset = "0x309890", VA = "0x309890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F66")]
	[Address(RVA = "0x309D70", Offset = "0x309D70", VA = "0x309D70")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F67")]
	[Address(RVA = "0x309D74", Offset = "0x309D74", VA = "0x309D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F69")]
	[Address(RVA = "0x309958", Offset = "0x309958", VA = "0x309958")]
	private void _GetSetComfortTrigger()
	{
	}

	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0x309D80", Offset = "0x309D80", VA = "0x309D80", Slot = "4")]
	public void Select(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0x30A37C", Offset = "0x30A37C", VA = "0x30A37C", Slot = "5")]
	public void Reselect(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0x30A694", Offset = "0x30A694", VA = "0x30A694", Slot = "6")]
	public void Unselect(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0x30A71C", Offset = "0x30A71C", VA = "0x30A71C", Slot = "7")]
	public void Initialize(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0x30AC50", Offset = "0x30AC50", VA = "0x30AC50", Slot = "9")]
	public bool IsActiveSelectable()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0x30AD30", Offset = "0x30AD30", VA = "0x30AD30", Slot = "8")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6001F70")]
	[Address(RVA = "0x3098AC", Offset = "0x3098AC", VA = "0x3098AC")]
	private void _GetBoxCollider()
	{
	}

	[Token(Token = "0x6001F71")]
	[Address(RVA = "0x30A1C8", Offset = "0x30A1C8", VA = "0x30A1C8")]
	private void _RepositionAnchor(Vector3 selectorPosition)
	{
	}
}
[Token(Token = "0x200047B")]
public class ComputerTrigger : MonoBehaviour
{
	[Token(Token = "0x4001B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject selected;

	[Token(Token = "0x4001B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ControllerSaveComputer targetComputer;

	[Token(Token = "0x6001F72")]
	[Address(RVA = "0x30DFE0", Offset = "0x30DFE0", VA = "0x30DFE0")]
	public ComputerTrigger()
	{
	}

	[Token(Token = "0x6001F73")]
	[Address(RVA = "0x30DFE8", Offset = "0x30DFE8", VA = "0x30DFE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F74")]
	[Address(RVA = "0x30E01C", Offset = "0x30E01C", VA = "0x30E01C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F75")]
	[Address(RVA = "0x30E110", Offset = "0x30E110", VA = "0x30E110")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6001F76")]
	[Address(RVA = "0x30E4A8", Offset = "0x30E4A8", VA = "0x30E4A8")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6001F77")]
	[Address(RVA = "0x30DFEC", Offset = "0x30DFEC", VA = "0x30DFEC")]
	public void OffGaze()
	{
	}
}
[Token(Token = "0x200047C")]
public class ControllerComputer : MonoBehaviour, ICanvasInput
{
	[Token(Token = "0x200047D")]
	public class PageIndicator
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E42C", Offset = "0x17E42C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17E42C", Offset = "0x17E42C")]
		private GameObject <on>k__BackingField;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E460", Offset = "0x17E460")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x17E460", Offset = "0x17E460")]
		private GameObject <off>k__BackingField;

		[Token(Token = "0x1700043A")]
		public GameObject on
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x31C950", Offset = "0x31C950", VA = "0x31C950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182130", Offset = "0x182130")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x31C940", Offset = "0x31C940", VA = "0x31C940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182140", Offset = "0x182140")]
			set
			{
			}
		}

		[Token(Token = "0x1700043B")]
		public GameObject off
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x31C958", Offset = "0x31C958", VA = "0x31C958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182150", Offset = "0x182150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x31C948", Offset = "0x31C948", VA = "0x31C948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182160", Offset = "0x182160")]
			set
			{
			}
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x31C938", Offset = "0x31C938", VA = "0x31C938")]
		public PageIndicator()
		{
		}
	}

	[Token(Token = "0x200047E")]
	public class JobChoice
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string JobName;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject JobGroup;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ActiveIcon;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject InactiveIcon;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject JobTriggerButton;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Text JobUIText;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int NumberOfJobs;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ActiveJob;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int JobPage;

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x31C854", Offset = "0x31C854", VA = "0x31C854")]
		public JobChoice(string JN, GameObject JG, GameObject AI, GameObject II, GameObject JTB, Text JT, int NOJ, int AJ, int JP)
		{
		}
	}

	[Token(Token = "0x200047F")]
	public enum MenuScreens
	{
		[Token(Token = "0x4001BBA")]
		None = -1,
		[Token(Token = "0x4001BBB")]
		Crashed,
		[Token(Token = "0x4001BBC")]
		Crash,
		[Token(Token = "0x4001BBD")]
		Completed,
		[Token(Token = "0x4001BBE")]
		Complete,
		[Token(Token = "0x4001BBF")]
		Failed,
		[Token(Token = "0x4001BC0")]
		Fail,
		[Token(Token = "0x4001BC1")]
		FreeFlight,
		[Token(Token = "0x4001BC2")]
		Login,
		[Token(Token = "0x4001BC3")]
		JobShop,
		[Token(Token = "0x4001BC4")]
		Shop,
		[Token(Token = "0x4001BC5")]
		JobChoice,
		[Token(Token = "0x4001BC6")]
		JobFolder,
		[Token(Token = "0x4001BC7")]
		Touch,
		[Token(Token = "0x4001BC8")]
		WearHelmet,
		[Token(Token = "0x4001BC9")]
		GotoIsland,
		[Token(Token = "0x4001BCA")]
		Exit
	}

	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174264", Offset = "0x174264")]
	private sealed class <_WaitForScreenFadeToPlayUnlockDialogs>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EventManager <em>__0;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal LEVEL_TYPE levelType;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700058D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600273E")]
			[Address(RVA = "0x325B30", Offset = "0x325B30", VA = "0x325B30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0x325B38", Offset = "0x325B38", VA = "0x325B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x31C928", Offset = "0x31C928", VA = "0x31C928")]
		[DebuggerHidden]
		public <_WaitForScreenFadeToPlayUnlockDialogs>c__Iterator0()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x3259A8", Offset = "0x3259A8", VA = "0x3259A8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x325B40", Offset = "0x325B40", VA = "0x325B40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x325B54", Offset = "0x325B54", VA = "0x325B54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int SelectedIsland;

	[Token(Token = "0x4001B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int SelectedLevelType;

	[Token(Token = "0x4001B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int SelectedJobNumber;

	[Token(Token = "0x4001B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JobChoice[] jobChoices;

	[Token(Token = "0x4001B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentJobChoicePage;

	[Token(Token = "0x4001B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfJobChoicePages;

	[Token(Token = "0x4001B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int currentJobFolder;

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string currentJobType;

	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numberOfJobTypes;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject backButton;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Text backText;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject homeButton;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Text homeText;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject nextButton;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Text nextText;

	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PageIndicator[] pageIndicators;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject pageIndicator1On;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject pageIndicator1Off;

	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject pageIndicator2On;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject pageIndicator2Off;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject pageIndicator3On;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject pageIndicator3Off;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject pageIndicator4On;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject pageIndicator4Off;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject loginScreen;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject loginTriggerGroup;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject exitTriggerGroup;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite desktopUtralightSprite;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Sprite desktopGliderSprite;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite desktopSportSprite;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Sprite desktopRacerSprite;

	[Token(Token = "0x4001B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text loginText;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Text exitText;

	[Token(Token = "0x4001B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text loginVehicleText;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public GameObject crashedScreen;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image crashedImage;

	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Sprite[] crashedSprites;

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int numberOfHeadlines;

	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Text headlineText;

	[Token(Token = "0x4001B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text crashedContinueText;

	[Token(Token = "0x4001B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject completeScreen;

	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text completeJobText;

	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Text completeDetailsIText;

	[Token(Token = "0x4001B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text completeDetailsAText;

	[Token(Token = "0x4001B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Text completeDetailsBText;

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text completeDetails1Text;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Text completeDetails2Text;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text completeDetails3Text;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Text completeRewardText;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text completeContinueText;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public GameObject completeGoldIcon;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject completeSilverIcon;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject completeBronzeIcon;

	[Token(Token = "0x4001B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject failScreen;

	[Token(Token = "0x4001B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Text failJobText;

	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text failDetailsAText;

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Text failContinueText;

	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject freeFlightScreen;

	[Token(Token = "0x4001B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Text freeFlightText;

	[Token(Token = "0x4001B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text freeFlightContinueText;

	[Token(Token = "0x4001B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public GameObject freeFlightAlert;

	[Token(Token = "0x4001B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject freeFlightAccept;

	[Token(Token = "0x4001B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public GameObject freeFlightCancel;

	[Token(Token = "0x4001B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject shopJobScreen;

	[Token(Token = "0x4001B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public GameObject jobGroup;

	[Token(Token = "0x4001B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text jobText;

	[Token(Token = "0x4001B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private RectTransform jobGroupRectTransform;

	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject shopGroup;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Text shopText;

	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RectTransform shopGroupRectTransform;

	[Token(Token = "0x4001B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public GameObject jobChoiceScreen;

	[Token(Token = "0x4001B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject[] jobChoiceGroup;

	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public GameObject[] jobIconsActiveGroup;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject[] jobIconsInactiveGroup;

	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public GameObject[] jobChoiceNewIcons;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject[] jobChoiceTriggerButtons;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Text[] jobChoiceText;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Dictionary<string, int> jobChoiceDictionary;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public GameObject jobFolderScreen;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text missionNameText;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Text missionCountText;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text missionDesctiptionAText;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Text missionRewardText;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text missionDesctiptionBText;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public GameObject polaroidMissionImage;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject polaroidVehicleImage;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public GameObject postitGroup;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Image postitImage;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Sprite postitGold;

	[Token(Token = "0x4001B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Sprite postitSilver;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Sprite postitBronze;

	[Token(Token = "0x4001B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject acceptJobButton;

	[Token(Token = "0x4001B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Text acceptJobText;

	[Token(Token = "0x4001B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Sprite[] polaroidMissions;

	[Token(Token = "0x4001B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Sprite[] polaroidVehicles;

	[Token(Token = "0x4001B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ControllerOwnedAircraft controllerOwnedAircraft;

	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public GameObject shopScreen;

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject shopIcon;

	[Token(Token = "0x4001B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public GameObject shopIconInactive;

	[Token(Token = "0x4001B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite shopGlider;

	[Token(Token = "0x4001B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public Sprite shopSport;

	[Token(Token = "0x4001B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite shopRacer;

	[Token(Token = "0x4001B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public Text purchaseText;

	[Token(Token = "0x4001B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Text purchaseDescriptionTitle;

	[Token(Token = "0x4001B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public Text purchaseDescriptionLine1;

	[Token(Token = "0x4001B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Text purchaseDescriptionLine2;

	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public Text purchaseDescriptionPrice;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject wearScreen;

	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public Text wearText;

	[Token(Token = "0x4001B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Text wearHomeText;

	[Token(Token = "0x4001B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private ISLAND_TYPE islandType;

	[Token(Token = "0x4001B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject islandScreen;

	[Token(Token = "0x4001B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public GameObject islandWayward;

	[Token(Token = "0x4001B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject islandMtThompson;

	[Token(Token = "0x4001B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public GameObject islandParadiseCove;

	[Token(Token = "0x4001B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject islandFarmland;

	[Token(Token = "0x4001B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Text islandText;

	[Token(Token = "0x4001BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Text islandHomeText;

	[Token(Token = "0x4001BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public GameObject touchScreen;

	[Token(Token = "0x4001BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Text touchText;

	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public Text touchContinueText;

	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool overrideScreenState;

	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	[SerializeField]
	private MenuScreens currentMenu;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private MenuScreens lastMenu;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private string lastJobFolder;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static LanguageManager languageManager;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ControllerComputer controllerComputer;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int m_completedMissionsInLevel;

	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E41C", Offset = "0x17E41C")]
	private static Dictionary<string, int> <>f__switch$map0;

	[Token(Token = "0x17000437")]
	public MenuScreens CurrentMenu
	{
		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x317B84", Offset = "0x317B84", VA = "0x317B84")]
		get
		{
			return default(MenuScreens);
		}
	}

	[Token(Token = "0x17000438")]
	public AudioSource AudioSource
	{
		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x3064F4", Offset = "0x3064F4", VA = "0x3064F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000439")]
	public int CompletedMissionsInLevel
	{
		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x31C930", Offset = "0x31C930", VA = "0x31C930")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001F78")]
	[Address(RVA = "0x317AC4", Offset = "0x317AC4", VA = "0x317AC4")]
	public ControllerComputer()
	{
	}

	[Token(Token = "0x6001F7A")]
	[Address(RVA = "0x30499C", Offset = "0x30499C", VA = "0x30499C")]
	public static ControllerComputer Instance()
	{
		return null;
	}

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0x317B8C", Offset = "0x317B8C", VA = "0x317B8C", Slot = "13")]
	public AudioSource GetAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0x317B94", Offset = "0x317B94", VA = "0x317B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0x317D14", Offset = "0x317D14", VA = "0x317D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F7F")]
	[Address(RVA = "0x31B3F0", Offset = "0x31B3F0", VA = "0x31B3F0")]
	public void Init(bool clearCurrentLevelVars = false)
	{
	}

	[Token(Token = "0x6001F80")]
	[Address(RVA = "0x318420", Offset = "0x318420", VA = "0x318420")]
	private void LocalizeText()
	{
	}

	[Token(Token = "0x6001F81")]
	[Address(RVA = "0x31C110", Offset = "0x31C110", VA = "0x31C110")]
	private int GetNumberOfJobsCompleted()
	{
		return default(int);
	}

	[Token(Token = "0x6001F82")]
	[Address(RVA = "0x31C228", Offset = "0x31C228", VA = "0x31C228")]
	public void InitJobs()
	{
	}

	[Token(Token = "0x6001F83")]
	[Address(RVA = "0x319850", Offset = "0x319850", VA = "0x319850")]
	private void _InitJobs()
	{
	}

	[Token(Token = "0x6001F84")]
	[Address(RVA = "0x31C8A4", Offset = "0x31C8A4", VA = "0x31C8A4")]
	[DebuggerHidden]
	private IEnumerator _WaitForScreenFadeToPlayUnlockDialogs(LEVEL_TYPE levelType)
	{
		return null;
	}

	[Token(Token = "0x6001F86")]
	[Address(RVA = "0x31AB0C", Offset = "0x31AB0C", VA = "0x31AB0C")]
	private void InitPageIndicators()
	{
	}

	[Token(Token = "0x6001F87")]
	[Address(RVA = "0x31BE38", Offset = "0x31BE38", VA = "0x31BE38")]
	private void InitNewIndicators()
	{
	}

	[Token(Token = "0x6001F88")]
	[Address(RVA = "0x31C22C", Offset = "0x31C22C", VA = "0x31C22C")]
	private int GetNumberOfJobs(LEVEL_TYPE levelType)
	{
		return default(int);
	}

	[Token(Token = "0x6001F89")]
	[Address(RVA = "0x31B04C", Offset = "0x31B04C", VA = "0x31B04C")]
	private int GetActiveJob(LEVEL_TYPE levelType, bool capValue)
	{
		return default(int);
	}

	[Token(Token = "0x6001F8A")]
	[Address(RVA = "0x31C960", Offset = "0x31C960", VA = "0x31C960", Slot = "4")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0x305C24", Offset = "0x305C24", VA = "0x305C24", Slot = "5")]
	public void OnButtonB(bool isDirect = true)
	{
	}

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0x305E44", Offset = "0x305E44", VA = "0x305E44", Slot = "6")]
	public void OnButtonX()
	{
	}

	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0x305F68", Offset = "0x305F68", VA = "0x305F68", Slot = "7")]
	public void OnButtonY()
	{
	}

	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0x306098", Offset = "0x306098", VA = "0x306098", Slot = "8")]
	public void OnButtonLB()
	{
	}

	[Token(Token = "0x6001F8F")]
	[Address(RVA = "0x30629C", Offset = "0x30629C", VA = "0x30629C", Slot = "9")]
	public void OnButtonRB()
	{
	}

	[Token(Token = "0x6001F90")]
	[Address(RVA = "0x31BE0C", Offset = "0x31BE0C", VA = "0x31BE0C")]
	private void GotoLoginScreen(bool clearCurrentLevelVars = false)
	{
	}

	[Token(Token = "0x6001F91")]
	[Address(RVA = "0x31C964", Offset = "0x31C964", VA = "0x31C964")]
	private void GoToPrevoiusScreen(bool clearCurrentLevelVars)
	{
	}

	[Token(Token = "0x6001F92")]
	[Address(RVA = "0x31B728", Offset = "0x31B728", VA = "0x31B728")]
	private void SetLastJobFolder()
	{
	}

	[Token(Token = "0x6001F93")]
	[Address(RVA = "0x320FBC", Offset = "0x320FBC", VA = "0x320FBC")]
	private void SetCrashedActive()
	{
	}

	[Token(Token = "0x6001F94")]
	[Address(RVA = "0x3215C8", Offset = "0x3215C8", VA = "0x3215C8")]
	private void SetCompletedActive()
	{
	}

	[Token(Token = "0x6001F95")]
	[Address(RVA = "0x32299C", Offset = "0x32299C", VA = "0x32299C")]
	private void SetFailedActive()
	{
	}

	[Token(Token = "0x6001F96")]
	[Address(RVA = "0x322A7C", Offset = "0x322A7C", VA = "0x322A7C")]
	private void SetTouchActive()
	{
	}

	[Token(Token = "0x6001F97")]
	[Address(RVA = "0x322A9C", Offset = "0x322A9C", VA = "0x322A9C")]
	private void SetLoginActive()
	{
	}

	[Token(Token = "0x6001F98")]
	[Address(RVA = "0x322AE4", Offset = "0x322AE4", VA = "0x322AE4")]
	private void SetExitGameActive()
	{
	}

	[Token(Token = "0x6001F99")]
	[Address(RVA = "0x322BBC", Offset = "0x322BBC", VA = "0x322BBC")]
	private void SetFreeFlightActive()
	{
	}

	[Token(Token = "0x6001F9A")]
	[Address(RVA = "0x322CB0", Offset = "0x322CB0", VA = "0x322CB0")]
	private void SetJobShopActive()
	{
	}

	[Token(Token = "0x6001F9B")]
	[Address(RVA = "0x31CCC0", Offset = "0x31CCC0", VA = "0x31CCC0")]
	private void SetJobChoiceActive(string initType)
	{
	}

	[Token(Token = "0x6001F9C")]
	[Address(RVA = "0x323330", Offset = "0x323330", VA = "0x323330")]
	private void SetShopActive()
	{
	}

	[Token(Token = "0x6001F9D")]
	[Address(RVA = "0x3237AC", Offset = "0x3237AC", VA = "0x3237AC")]
	private void PurchaseAircraft()
	{
	}

	[Token(Token = "0x6001F9E")]
	[Address(RVA = "0x31D2C4", Offset = "0x31D2C4", VA = "0x31D2C4")]
	private void SetJobFolderActive(string jobType, string initType)
	{
	}

	[Token(Token = "0x6001F9F")]
	[Address(RVA = "0x324210", Offset = "0x324210", VA = "0x324210")]
	private void SetWearHelmetActive()
	{
	}

	[Token(Token = "0x6001FA0")]
	[Address(RVA = "0x3242B4", Offset = "0x3242B4", VA = "0x3242B4")]
	private void SetGotoIslandActive()
	{
	}

	[Token(Token = "0x6001FA1")]
	[Address(RVA = "0x321194", Offset = "0x321194", VA = "0x321194")]
	private void ActivateDeactivate(MenuScreens menuScreen)
	{
	}

	[Token(Token = "0x6001FA2")]
	[Address(RVA = "0x32142C", Offset = "0x32142C", VA = "0x32142C")]
	private void SetCoreInactive()
	{
	}

	[Token(Token = "0x6001FA3")]
	[Address(RVA = "0x318148", Offset = "0x318148", VA = "0x318148")]
	private void SetLevel([Optional] int? island, [Optional] int? level, int job = 0)
	{
	}

	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0x324670", Offset = "0x324670", VA = "0x324670")]
	public void GotoIsland(ISLAND_TYPE it)
	{
	}

	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0x305248", Offset = "0x305248", VA = "0x305248", Slot = "10")]
	public void OnClick(string buttonType)
	{
	}

	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0x3246DC", Offset = "0x3246DC", VA = "0x3246DC")]
	private void SetScreen(string buttonType)
	{
	}

	[Token(Token = "0x6001FA7")]
	[Address(RVA = "0x320D00", Offset = "0x320D00", VA = "0x320D00")]
	private void SwitchToMenu(MenuScreens menu, string jobFolderType)
	{
	}

	[Token(Token = "0x6001FA8")]
	[Address(RVA = "0x306448", Offset = "0x306448", VA = "0x306448", Slot = "11")]
	public void OnPointerEnter(string buttonType)
	{
	}

	[Token(Token = "0x6001FA9")]
	[Address(RVA = "0x3064F0", Offset = "0x3064F0", VA = "0x3064F0", Slot = "12")]
	public void OnPointerExit(string buttonType)
	{
	}
}
[Token(Token = "0x2000480")]
public class ControllerDiskShredder : MonoBehaviour
{
	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Collider[] m_diskColliders;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ControllerSaveDisk[] m_saveDiskControllers;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform diskShredPosition;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool[] m_disksInsertedIntoShredder;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private DashGuage m_dashGuage;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerSaveComputer targetComputer;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ShredderTrigger shredderTrigger;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ButtonDeviceInput deviceInput;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ControllerSaveDisk m_heldDisk;

	[Token(Token = "0x1700043C")]
	public ControllerSaveDisk heldDisk
	{
		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x32673C", Offset = "0x32673C", VA = "0x32673C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x326744", Offset = "0x326744", VA = "0x326744")]
		set
		{
		}
	}

	[Token(Token = "0x6001FB0")]
	[Address(RVA = "0x325BDC", Offset = "0x325BDC", VA = "0x325BDC")]
	public ControllerDiskShredder()
	{
	}

	[Token(Token = "0x6001FB1")]
	[Address(RVA = "0x325BE4", Offset = "0x325BE4", VA = "0x325BE4")]
	private void _PlayAudio(AudioClip clip)
	{
	}

	[Token(Token = "0x6001FB2")]
	[Address(RVA = "0x325CBC", Offset = "0x325CBC", VA = "0x325CBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001FB3")]
	[Address(RVA = "0x3260BC", Offset = "0x3260BC", VA = "0x3260BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0x326124", Offset = "0x326124", VA = "0x326124")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0x326214", Offset = "0x326214", VA = "0x326214")]
	private void Update()
	{
	}

	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0x326994", Offset = "0x326994", VA = "0x326994")]
	public void ShredDisk()
	{
	}

	[Token(Token = "0x6001FB9")]
	[Address(RVA = "0x32636C", Offset = "0x32636C", VA = "0x32636C")]
	private void _ShredDisk(int diskIndex)
	{
	}

	[Token(Token = "0x6001FBA")]
	[Address(RVA = "0x326B28", Offset = "0x326B28", VA = "0x326B28")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001FBB")]
	[Address(RVA = "0x326C80", Offset = "0x326C80", VA = "0x326C80")]
	private void OnTriggerExit(Collider collider)
	{
	}
}
[Token(Token = "0x2000481")]
public class ControllerFloppyDisk : MonoBehaviour
{
	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] Disks;

	[Token(Token = "0x6001FBC")]
	[Address(RVA = "0x327304", Offset = "0x327304", VA = "0x327304")]
	public ControllerFloppyDisk()
	{
	}

	[Token(Token = "0x6001FBD")]
	[Address(RVA = "0x32730C", Offset = "0x32730C", VA = "0x32730C")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000482")]
public class ControllerOwnedAircraft : MonoBehaviour
{
	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] m_VechiclePostIts;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6001FBE")]
	[Address(RVA = "0x327C7C", Offset = "0x327C7C", VA = "0x327C7C")]
	public ControllerOwnedAircraft()
	{
	}

	[Token(Token = "0x6001FBF")]
	[Address(RVA = "0x327C84", Offset = "0x327C84", VA = "0x327C84")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FC0")]
	[Address(RVA = "0x323F04", Offset = "0x323F04", VA = "0x323F04")]
	public void _InitOwnedAircraft(int activateAircraftAtIndex)
	{
	}
}
[Token(Token = "0x2000483")]
public class ControllerPauseComputer : MonoBehaviour
{
	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174274", Offset = "0x174274")]
	private sealed class <WaitForVisorDown>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal EventManager <em>__0;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ControllerPauseComputer $this;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700058F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002744")]
			[Address(RVA = "0x3937E8", Offset = "0x3937E8", VA = "0x3937E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000590")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0x3937F0", Offset = "0x3937F0", VA = "0x3937F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x3933D4", Offset = "0x3933D4", VA = "0x3933D4")]
		[DebuggerHidden]
		public <WaitForVisorDown>c__Iterator0()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x39362C", Offset = "0x39362C", VA = "0x39362C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x3937F8", Offset = "0x3937F8", VA = "0x3937F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x39380C", Offset = "0x39380C", VA = "0x39380C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject pauseScreen;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject abandonGroup;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject abandonTrigger;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject abandonActiveIcon;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject abandonInactiveIcon;

	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject abandonRolloverButtonIcon;

	[Token(Token = "0x4001BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Text abandonUIText;

	[Token(Token = "0x4001BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject retryGroup;

	[Token(Token = "0x4001BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject retryTrigger;

	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject retryActiveIcon;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject retryInactiveIcon;

	[Token(Token = "0x4001BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject retryRolloverButtonIcon;

	[Token(Token = "0x4001BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Text retryUIText;

	[Token(Token = "0x4001BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4001BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Sprite desktopUtralightSprite;

	[Token(Token = "0x4001BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite desktopGliderSprite;

	[Token(Token = "0x4001BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Sprite desktopSportSprite;

	[Token(Token = "0x4001BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite desktopRacerSprite;

	[Token(Token = "0x4001BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4001BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static LanguageManager languageManager;

	[Token(Token = "0x4001BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ScreenFader screenFader;

	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static PauseBoxController pauseBoxController;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CrashManager crashManager;

	[Token(Token = "0x4001BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static ControllerPauseComputer controllerPauseComputer;

	[Token(Token = "0x1700043D")]
	public AudioSource AudioSource
	{
		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x392558", Offset = "0x392558", VA = "0x392558")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001FC1")]
	[Address(RVA = "0x392550", Offset = "0x392550", VA = "0x392550")]
	public ControllerPauseComputer()
	{
	}

	[Token(Token = "0x6001FC3")]
	[Address(RVA = "0x392560", Offset = "0x392560", VA = "0x392560")]
	public static ControllerPauseComputer Instance()
	{
		return null;
	}

	[Token(Token = "0x6001FC4")]
	[Address(RVA = "0x392748", Offset = "0x392748", VA = "0x392748")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FC5")]
	[Address(RVA = "0x392B48", Offset = "0x392B48", VA = "0x392B48")]
	public void Init()
	{
	}

	[Token(Token = "0x6001FC6")]
	[Address(RVA = "0x392878", Offset = "0x392878", VA = "0x392878")]
	private void SetUIText()
	{
	}

	[Token(Token = "0x6001FC7")]
	[Address(RVA = "0x392FF4", Offset = "0x392FF4", VA = "0x392FF4")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6001FC8")]
	[Address(RVA = "0x392FF8", Offset = "0x392FF8", VA = "0x392FF8")]
	public void OnButtonB()
	{
	}

	[Token(Token = "0x6001FC9")]
	[Address(RVA = "0x392FFC", Offset = "0x392FFC", VA = "0x392FFC")]
	public void OnButtonX()
	{
	}

	[Token(Token = "0x6001FCA")]
	[Address(RVA = "0x393000", Offset = "0x393000", VA = "0x393000")]
	public void OnButtonY()
	{
	}

	[Token(Token = "0x6001FCB")]
	[Address(RVA = "0x393004", Offset = "0x393004", VA = "0x393004")]
	public void OnButtonLB()
	{
	}

	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0x393008", Offset = "0x393008", VA = "0x393008")]
	public void OnButtonRB()
	{
	}

	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0x3929AC", Offset = "0x3929AC", VA = "0x3929AC")]
	private void SetPauseActive()
	{
	}

	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0x39300C", Offset = "0x39300C", VA = "0x39300C")]
	public void OnClick(string buttonType)
	{
	}

	[Token(Token = "0x6001FCF")]
	[Address(RVA = "0x393010", Offset = "0x393010", VA = "0x393010")]
	private void ExitLevel()
	{
	}

	[Token(Token = "0x6001FD0")]
	[Address(RVA = "0x393350", Offset = "0x393350", VA = "0x393350")]
	[DebuggerHidden]
	private IEnumerator WaitForVisorDown()
	{
		return null;
	}

	[Token(Token = "0x6001FD1")]
	[Address(RVA = "0x3933DC", Offset = "0x3933DC", VA = "0x3933DC")]
	public void OnPointerEnter(string buttonType)
	{
	}

	[Token(Token = "0x6001FD2")]
	[Address(RVA = "0x393504", Offset = "0x393504", VA = "0x393504")]
	public void OnPointerExit(string buttonType)
	{
	}
}
[Token(Token = "0x2000484")]
public class ControllerSaveComputer : MonoBehaviour
{
	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174284", Offset = "0x174284")]
	private sealed class <WaitForLoadingRoom>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ControllerSaveComputer $this;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000591")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600274A")]
			[Address(RVA = "0x395B10", Offset = "0x395B10", VA = "0x395B10", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000592")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600274B")]
			[Address(RVA = "0x395B18", Offset = "0x395B18", VA = "0x395B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x393C84", Offset = "0x393C84", VA = "0x393C84")]
		[DebuggerHidden]
		public <WaitForLoadingRoom>c__Iterator0()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x3959EC", Offset = "0x3959EC", VA = "0x3959EC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x395B20", Offset = "0x395B20", VA = "0x395B20", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x395B34", Offset = "0x395B34", VA = "0x395B34", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174294", Offset = "0x174294")]
	private sealed class <_SetPercentComplete>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <percentComplete>__0;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <timeToWait>__0;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <goldValue>__0;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <silverValue>__0;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <bronzeValue>__0;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <numberOfGold>__0;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <numberOfSilver>__0;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int <numberOfBronze>__0;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int numberOfLevels;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float <valueOfLevels>__0;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal ControllerSaveComputer $this;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal object $current;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x17000593")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002750")]
			[Address(RVA = "0x395E90", Offset = "0x395E90", VA = "0x395E90", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0x395E98", Offset = "0x395E98", VA = "0x395E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x39538C", Offset = "0x39538C", VA = "0x39538C")]
		[DebuggerHidden]
		public <_SetPercentComplete>c__Iterator1()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x395BC0", Offset = "0x395BC0", VA = "0x395BC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x395EA0", Offset = "0x395EA0", VA = "0x395EA0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x395EB4", Offset = "0x395EB4", VA = "0x395EB4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] Disks;

	[Token(Token = "0x4001BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Text m_percentText;

	[Token(Token = "0x4001BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_floppyIconRed;

	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_floppyIconGreen;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_floppyIconBlue;

	[Token(Token = "0x4001BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_floppyIconYellow;

	[Token(Token = "0x4001BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject m_currentDisk;

	[Token(Token = "0x4001BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ControllerSaveDisk m_heldDisk;

	[Token(Token = "0x4001BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform _targetDiskLocation;

	[Token(Token = "0x4001BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_numberOfLevels;

	[Token(Token = "0x4001BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private InteractableInput InteractableInput;

	[Token(Token = "0x4001BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4001BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_hasInsertedDisk;

	[Token(Token = "0x1700043E")]
	public GameObject getCurrentDisk
	{
		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x3938A4", Offset = "0x3938A4", VA = "0x3938A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700043F")]
	public Transform getTargetDiskLocation
	{
		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x3938AC", Offset = "0x3938AC", VA = "0x3938AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000440")]
	public ControllerSaveDisk heldDisk
	{
		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x3947CC", Offset = "0x3947CC", VA = "0x3947CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x3947D4", Offset = "0x3947D4", VA = "0x3947D4")]
		set
		{
		}
	}

	[Token(Token = "0x6001FD3")]
	[Address(RVA = "0x393894", Offset = "0x393894", VA = "0x393894")]
	public ControllerSaveComputer()
	{
	}

	[Token(Token = "0x6001FD6")]
	[Address(RVA = "0x3938B4", Offset = "0x3938B4", VA = "0x3938B4")]
	private void _PlayAudio(AudioClip clip)
	{
	}

	[Token(Token = "0x6001FD7")]
	[Address(RVA = "0x39398C", Offset = "0x39398C", VA = "0x39398C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001FD8")]
	[Address(RVA = "0x393AFC", Offset = "0x393AFC", VA = "0x393AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FD9")]
	[Address(RVA = "0x393C00", Offset = "0x393C00", VA = "0x393C00")]
	[DebuggerHidden]
	private IEnumerator WaitForLoadingRoom()
	{
		return null;
	}

	[Token(Token = "0x6001FDA")]
	[Address(RVA = "0x393C8C", Offset = "0x393C8C", VA = "0x393C8C")]
	private void Init()
	{
	}

	[Token(Token = "0x6001FDD")]
	[Address(RVA = "0x3944F0", Offset = "0x3944F0", VA = "0x3944F0")]
	public void SetCurrentDisk(ControllerSaveDisk targetDisk)
	{
	}

	[Token(Token = "0x6001FDE")]
	[Address(RVA = "0x39518C", Offset = "0x39518C", VA = "0x39518C")]
	public void LoadSaveGame(string saveGameName)
	{
	}

	[Token(Token = "0x6001FDF")]
	[Address(RVA = "0x394C84", Offset = "0x394C84", VA = "0x394C84")]
	public void UpdateScreen([Optional] string overrideInfoName)
	{
	}

	[Token(Token = "0x6001FE0")]
	[Address(RVA = "0x393E30", Offset = "0x393E30", VA = "0x393E30")]
	private int _GetNumberOfLevels()
	{
		return default(int);
	}

	[Token(Token = "0x6001FE1")]
	[Address(RVA = "0x3952EC", Offset = "0x3952EC", VA = "0x3952EC")]
	[DebuggerHidden]
	private IEnumerator _SetPercentComplete(int numberOfLevels)
	{
		return null;
	}

	[Token(Token = "0x6001FE2")]
	[Address(RVA = "0x395394", Offset = "0x395394", VA = "0x395394")]
	private void _CountMedals(out int numberOfGold, out int numberOfSilver, out int numberOfBronze, int currentGold, int currentSilver, int currnetBronze)
	{
	}

	[Token(Token = "0x6001FE3")]
	[Address(RVA = "0x39546C", Offset = "0x39546C", VA = "0x39546C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000485")]
public class ControllerSaveDisk : MonoBehaviour
{
	[Token(Token = "0x2000486")]
	private enum GRAB_STATE
	{
		[Token(Token = "0x4001C1C")]
		Idle,
		[Token(Token = "0x4001C1D")]
		Grabbed,
		[Token(Token = "0x4001C1E")]
		Held,
		[Token(Token = "0x4001C1F")]
		Dropped
	}

	[Token(Token = "0x2000487")]
	private enum MOVE_TYPE
	{
		[Token(Token = "0x4001C21")]
		Moving,
		[Token(Token = "0x4001C22")]
		ScaleDown,
		[Token(Token = "0x4001C23")]
		ScaleUp,
		[Token(Token = "0x4001C24")]
		Idle
	}

	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1742A4", Offset = "0x1742A4")]
	private sealed class <UpdateNextFrame>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ControllerSaveDisk $this;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000595")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002756")]
			[Address(RVA = "0x397EC0", Offset = "0x397EC0", VA = "0x397EC0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000596")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002757")]
			[Address(RVA = "0x397EC8", Offset = "0x397EC8", VA = "0x397EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x3971BC", Offset = "0x3971BC", VA = "0x3971BC")]
		[DebuggerHidden]
		public <UpdateNextFrame>c__Iterator0()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x397D88", Offset = "0x397D88", VA = "0x397D88", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x397ED0", Offset = "0x397ED0", VA = "0x397ED0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x397EE4", Offset = "0x397EE4", VA = "0x397EE4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GRAB_STATE m_currentGrabState;

	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_diskGhost;

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_diskGrabbable;

	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_diskdriveLocation;

	[Token(Token = "0x4001C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Transform m_diskEjectLocation;

	[Token(Token = "0x4001C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ControllerDiskShredder m_shredder;

	[Token(Token = "0x4001C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string m_saveGameName;

	[Token(Token = "0x4001C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerSaveDisk[] m_otherDisks;

	[Token(Token = "0x4001C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private ControllerSaveComputer m_computer;

	[Token(Token = "0x4001C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MoveObject m_moveObject;

	[Token(Token = "0x4001C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GrabbableProp m_grabbableProp;

	[Token(Token = "0x4001C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_diskHomePos;

	[Token(Token = "0x4001C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_diskHomeRot;

	[Token(Token = "0x4001C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _overrideHome;

	[Token(Token = "0x4001C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _overrideHomePos;

	[Token(Token = "0x4001C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _overrideHomeRot;

	[Token(Token = "0x4001C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public DisketteTrigger diskTrigger;

	[Token(Token = "0x4001C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool IsInShredder;

	[Token(Token = "0x4001C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Rigidbody m_grabbableRB;

	[Token(Token = "0x4001C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody m_ghostRB;

	[Token(Token = "0x4001C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float insertDiskTimer;

	[Token(Token = "0x4001C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float distanceToDriveInsert;

	[Token(Token = "0x4001C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float distanceToShredderInsert;

	[Token(Token = "0x4001C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MOVE_TYPE m_warpMoveState;

	[Token(Token = "0x4001C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool m_isCurrent;

	[Token(Token = "0x4001C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool m_isHeld;

	[Token(Token = "0x4001C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool m_forceDiskToDrive;

	[Token(Token = "0x4001C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource m_audioSource;

	[Token(Token = "0x17000441")]
	private Vector3 getHomePos
	{
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x396054", Offset = "0x396054", VA = "0x396054")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000442")]
	private Vector3 getHomeRot
	{
		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x396090", Offset = "0x396090", VA = "0x396090")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001FE4")]
	[Address(RVA = "0x395F3C", Offset = "0x395F3C", VA = "0x395F3C")]
	public ControllerSaveDisk()
	{
	}

	[Token(Token = "0x6001FE7")]
	[Address(RVA = "0x3960CC", Offset = "0x3960CC", VA = "0x3960CC")]
	public void SetHomeOverride(bool enable, Vector3 pos, Vector3 rot)
	{
	}

	[Token(Token = "0x6001FE8")]
	[Address(RVA = "0x3960FC", Offset = "0x3960FC", VA = "0x3960FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001FE9")]
	[Address(RVA = "0x39647C", Offset = "0x39647C", VA = "0x39647C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FEA")]
	[Address(RVA = "0x3965B0", Offset = "0x3965B0", VA = "0x3965B0")]
	private void _SetupAudioSource()
	{
	}

	[Token(Token = "0x6001FEB")]
	[Address(RVA = "0x396740", Offset = "0x396740", VA = "0x396740")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001FEC")]
	[Address(RVA = "0x3967E8", Offset = "0x3967E8", VA = "0x3967E8")]
	private void OnReturnPropEvent()
	{
	}

	[Token(Token = "0x6001FED")]
	[Address(RVA = "0x39692C", Offset = "0x39692C", VA = "0x39692C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001FEE")]
	[Address(RVA = "0x394FD0", Offset = "0x394FD0", VA = "0x394FD0")]
	public void InitAsActive()
	{
	}

	[Token(Token = "0x6001FEF")]
	[Address(RVA = "0x396948", Offset = "0x396948", VA = "0x396948")]
	private void _SetGrabState()
	{
	}

	[Token(Token = "0x6001FF0")]
	[Address(RVA = "0x397138", Offset = "0x397138", VA = "0x397138")]
	[DebuggerHidden]
	private IEnumerator UpdateNextFrame()
	{
		return null;
	}

	[Token(Token = "0x6001FF1")]
	[Address(RVA = "0x396D54", Offset = "0x396D54", VA = "0x396D54")]
	private void _CheckMoveWarp()
	{
	}

	[Token(Token = "0x6001FF2")]
	[Address(RVA = "0x397410", Offset = "0x397410", VA = "0x397410")]
	private void _LerpDiskToDrive(float distance)
	{
	}

	[Token(Token = "0x6001FF3")]
	[Address(RVA = "0x394A18", Offset = "0x394A18", VA = "0x394A18")]
	public void MoveDiskHome()
	{
	}

	[Token(Token = "0x6001FF4")]
	[Address(RVA = "0x394C3C", Offset = "0x394C3C", VA = "0x394C3C")]
	public void SetHeld(bool enabled)
	{
	}

	[Token(Token = "0x6001FF5")]
	[Address(RVA = "0x3955D8", Offset = "0x3955D8", VA = "0x3955D8")]
	public void MoveDiskToCamera(Camera targetCamera, Transform targetAimAt)
	{
	}

	[Token(Token = "0x6001FF6")]
	[Address(RVA = "0x3971C4", Offset = "0x3971C4", VA = "0x3971C4")]
	private void _MoveDiskToDrive()
	{
	}

	[Token(Token = "0x6001FF7")]
	[Address(RVA = "0x397718", Offset = "0x397718", VA = "0x397718")]
	public void MoveToShredder(Transform trans)
	{
	}

	[Token(Token = "0x6001FF8")]
	[Address(RVA = "0x397C0C", Offset = "0x397C0C", VA = "0x397C0C")]
	public void MoveOnShred(bool isCurrentlyInDrive)
	{
	}

	[Token(Token = "0x6001FF9")]
	[Address(RVA = "0x397AD8", Offset = "0x397AD8", VA = "0x397AD8")]
	private void _SetDiskLoaded()
	{
	}

	[Token(Token = "0x6001FFA")]
	[Address(RVA = "0x397CB0", Offset = "0x397CB0", VA = "0x397CB0")]
	private void _PlayAudio(AudioClip clip)
	{
	}
}
[Token(Token = "0x2000488")]
public class ControllerTablet : MonoBehaviour, ICanvasInput
{
	[Token(Token = "0x2000489")]
	private enum CameraDir
	{
		[Token(Token = "0x4001D27")]
		BACK,
		[Token(Token = "0x4001D28")]
		FRONT
	}

	[Token(Token = "0x200048A")]
	public enum TABLET_STATE
	{
		[Token(Token = "0x4001D2A")]
		None = -1,
		[Token(Token = "0x4001D2B")]
		Startup,
		[Token(Token = "0x4001D2C")]
		OnRunwayRolling,
		[Token(Token = "0x4001D2D")]
		OnRunwayStopped,
		[Token(Token = "0x4001D2E")]
		Stopped,
		[Token(Token = "0x4001D2F")]
		TopActive,
		[Token(Token = "0x4001D30")]
		TopActiveOnly,
		[Token(Token = "0x4001D31")]
		BottomActive,
		[Token(Token = "0x4001D32")]
		Purchase,
		[Token(Token = "0x4001D33")]
		RingRush,
		[Token(Token = "0x4001D34")]
		BalloonRush,
		[Token(Token = "0x4001D35")]
		BalloonCourse,
		[Token(Token = "0x4001D36")]
		RingCourse,
		[Token(Token = "0x4001D37")]
		Delivery,
		[Token(Token = "0x4001D38")]
		TimedFlight,
		[Token(Token = "0x4001D39")]
		FreeFlight,
		[Token(Token = "0x4001D3A")]
		Takeoff,
		[Token(Token = "0x4001D3B")]
		Waypoint,
		[Token(Token = "0x4001D3C")]
		Land,
		[Token(Token = "0x4001D3D")]
		MissionOver,
		[Token(Token = "0x4001D3E")]
		MissionComplete,
		[Token(Token = "0x4001D3F")]
		MissionCompletePreview,
		[Token(Token = "0x4001D40")]
		MissionIncomplete,
		[Token(Token = "0x4001D41")]
		PackageLost,
		[Token(Token = "0x4001D42")]
		Bounced,
		[Token(Token = "0x4001D43")]
		Crashed,
		[Token(Token = "0x4001D44")]
		Pass,
		[Token(Token = "0x4001D45")]
		PhotoOp,
		[Token(Token = "0x4001D46")]
		PhotoOpCamera,
		[Token(Token = "0x4001D47")]
		Race
	}

	[Token(Token = "0x200048B")]
	public enum NoticeType
	{
		[Token(Token = "0x4001D49")]
		NONE,
		[Token(Token = "0x4001D4A")]
		RING_SCORED,
		[Token(Token = "0x4001D4B")]
		RING_MISSED,
		[Token(Token = "0x4001D4C")]
		BALLOON_SCORED,
		[Token(Token = "0x4001D4D")]
		BALLOON_MISSED,
		[Token(Token = "0x4001D4E")]
		PHOTO_TAKEN,
		[Token(Token = "0x4001D4F")]
		LANDING_TARGET
	}

	[Token(Token = "0x200048C")]
	public enum PHOTO_OP_CAMERA_STATE
	{
		[Token(Token = "0x4001D51")]
		None,
		[Token(Token = "0x4001D52")]
		TakingPicture,
		[Token(Token = "0x4001D53")]
		TookPicture
	}

	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1742B4", Offset = "0x1742B4")]
	private sealed class <SaveWatermarkImage>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <nextImageID>__0;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Texture2D background;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Texture2D watermark;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal ControllerTablet $this;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x17000597")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x3A8534", Offset = "0x3A8534", VA = "0x3A8534", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000598")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x3A853C", Offset = "0x3A853C", VA = "0x3A853C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x3A65C4", Offset = "0x3A65C4", VA = "0x3A65C4")]
		[DebuggerHidden]
		public <SaveWatermarkImage>c__Iterator0()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x3A82FC", Offset = "0x3A82FC", VA = "0x3A82FC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x3A8544", Offset = "0x3A8544", VA = "0x3A8544", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x3A8558", Offset = "0x3A8558", VA = "0x3A8558", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_showTutorialhands;

	[Token(Token = "0x4001C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool m_showTutorialcards;

	[Token(Token = "0x4001C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject startupScreen;

	[Token(Token = "0x4001C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject startupFuel;

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startupFuelTutorial;

	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject startupFuelHand;

	[Token(Token = "0x4001C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] startupFuelImages;

	[Token(Token = "0x4001C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject startupMagneto;

	[Token(Token = "0x4001C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject startupMagnetoTutorial;

	[Token(Token = "0x4001C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject startupMagnetoHand;

	[Token(Token = "0x4001C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] startupMagnetoImages;

	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject startupIgnition;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject startupIgnitionTutorial;

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject startupIgnitionHand;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] startupIgnitionImages;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject startupThrottle;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject startupThrottleHand;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject startupThrottleTutorialGearVR;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject startupThrottleTutorialOculusGo;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject startupThrottleTutorialWave;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject startupThrottleTutorialDaydream;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject startupThrottleTutorialXbox;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite[] startupThrottleImages;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Text startupText;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentFrameCounter;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float animationFrameTime;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float timeBetweenAnimFrames;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject homeScreen;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject homeTrigger;

	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GameObject homeButtonActive;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject homeButtonInactive;

	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GameObject homeButtonRollover;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text homeButtonText;

	[Token(Token = "0x4001C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameObject refuelTrigger;

	[Token(Token = "0x4001C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject refuelButtonActive;

	[Token(Token = "0x4001C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public GameObject refuelButtonInactive;

	[Token(Token = "0x4001C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject refuelButtonRollover;

	[Token(Token = "0x4001C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Text refuelButtonText;

	[Token(Token = "0x4001C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject purchaseScreen;

	[Token(Token = "0x4001C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public GameObject purchaseTrigger;

	[Token(Token = "0x4001C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject purchaseIconActive;

	[Token(Token = "0x4001C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject purchaseIconInactive;

	[Token(Token = "0x4001C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text purchaseText;

	[Token(Token = "0x4001C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public GameObject buyIconActive;

	[Token(Token = "0x4001C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject buyIconInactive;

	[Token(Token = "0x4001C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public GameObject buyButtonRollOver;

	[Token(Token = "0x4001C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject buyButtonActiveGreen;

	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public GameObject buyButtonActiveRed;

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text buyButtonText;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public GameObject noticeScreen;

	[Token(Token = "0x4001C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject alertIcon;

	[Token(Token = "0x4001C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public GameObject timeIcon;

	[Token(Token = "0x4001C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject cameraIcon;

	[Token(Token = "0x4001C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject distanceIcon;

	[Token(Token = "0x4001C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject balloonPopIcon;

	[Token(Token = "0x4001C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject balloonsIcon;

	[Token(Token = "0x4001C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject ringYellowIcon;

	[Token(Token = "0x4001C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public GameObject ringRedIcon;

	[Token(Token = "0x4001C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ringBlueIcon;

	[Token(Token = "0x4001C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public GameObject ringBlackIcon;

	[Token(Token = "0x4001C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject ringWhiteIcon;

	[Token(Token = "0x4001C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public GameObject ringBullseyeIcon;

	[Token(Token = "0x4001C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text noticeText;

	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Text inspectorText;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject timmedScreen;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public GameObject timmedMedalGold;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject timmedMedalGoldInactive;

	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public GameObject timmedLandGold;

	[Token(Token = "0x4001C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject timmedLandGoldInactive;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public GameObject timmedGold;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text timmedGoldText;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public GameObject timmedMedalSilver;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject timmedMedalSilverInactive;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public GameObject timmedLandSilver;

	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject timmedLandSilverInactive;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public GameObject timmedSilver;

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text timmedSilverText;

	[Token(Token = "0x4001C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public GameObject timmedMedalBronze;

	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject timmedMedalBronzeInactive;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public GameObject timmedLandBronze;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject timmedLandBronzeInactive;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public GameObject timmedBronze;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text timmedBronzeText;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public GameObject ringCourseGold;

	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject ringCourseSilver;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public GameObject ringCourseBronze;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject deliveryGold;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public GameObject deliverySilver;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject deliveryBronze;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public GameObject balloonCourseGold;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject balloonCourseSilver;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public GameObject balloonCourseBronze;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int timmedRingsGatheredCounter;

	[Token(Token = "0x4001C82")]
	private const float NOTICE_TIME = 3f;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float currentNoticeTime;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject raceScreen;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public GameObject firstPlaceGroup;

	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject secondPlaceGroup;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public GameObject thirdPlaceGroup;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject fourthPlaceGroup;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public GameObject rushScreen;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject medalGold;

	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public GameObject medalGoldInactive;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject landGold;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public GameObject landGoldInactive;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject ringsCaughtGold;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public GameObject ringsSlashGold;

	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject ringsNeededGold;

	[Token(Token = "0x4001C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public Text ringsNeededGoldText;

	[Token(Token = "0x4001C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Text ringsCaughtGoldText;

	[Token(Token = "0x4001C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public GameObject medalSilver;

	[Token(Token = "0x4001C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject medalSilverInactive;

	[Token(Token = "0x4001C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public GameObject landSilver;

	[Token(Token = "0x4001C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject landSilverInactive;

	[Token(Token = "0x4001C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public GameObject ringsCaughtSilver;

	[Token(Token = "0x4001C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject ringsSlashSilver;

	[Token(Token = "0x4001C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public GameObject ringsNeededSilver;

	[Token(Token = "0x4001C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Text ringsNeededSilverText;

	[Token(Token = "0x4001C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Text ringsCaughtSilverText;

	[Token(Token = "0x4001C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject medalBronze;

	[Token(Token = "0x4001C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public GameObject medalBronzeInactive;

	[Token(Token = "0x4001C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject landBronze;

	[Token(Token = "0x4001C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public GameObject landBronzeInactive;

	[Token(Token = "0x4001CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject ringsCaughtBronze;

	[Token(Token = "0x4001CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public GameObject ringsSlashBronze;

	[Token(Token = "0x4001CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject ringsNeededBronze;

	[Token(Token = "0x4001CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public Text ringsNeededBronzeText;

	[Token(Token = "0x4001CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Text ringsCaughtBronzeText;

	[Token(Token = "0x4001CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int balloonsGatheredCounter;

	[Token(Token = "0x4001CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject balloonGold;

	[Token(Token = "0x4001CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public GameObject balloonSilver;

	[Token(Token = "0x4001CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject balloonBronze;

	[Token(Token = "0x4001CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int ringsGatheredCounter;

	[Token(Token = "0x4001CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject ringRushGold;

	[Token(Token = "0x4001CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public GameObject ringRushSilver;

	[Token(Token = "0x4001CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject ringRushBronze;

	[Token(Token = "0x4001CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public GameObject photoOpCameraScreen;

	[Token(Token = "0x4001CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Camera photoOpCamera;

	[Token(Token = "0x4001CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public GameObject rotateCamera;

	[Token(Token = "0x4001CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject rotateCameraButtonRollover;

	[Token(Token = "0x4001CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public Transform posCameraBack;

	[Token(Token = "0x4001CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Transform posCameraFront;

	[Token(Token = "0x4001CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public GameObject photoOpScreen;

	[Token(Token = "0x4001CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject toggleCameraButtonToCamera;

	[Token(Token = "0x4001CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public GameObject toggleCameraButtonToInfo;

	[Token(Token = "0x4001CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject toggleCameraButtonToSelfie;

	[Token(Token = "0x4001CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public GameObject toggleCameraButtonRollover;

	[Token(Token = "0x4001CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject toggleCameraButtonBackRollover;

	[Token(Token = "0x4001CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public GameObject toggleCameraButtonTrigger;

	[Token(Token = "0x4001CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject toggleCameraButtonBackTrigger;

	[Token(Token = "0x4001CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public GameObject imagePhotoOpPicture;

	[Token(Token = "0x4001CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject iconPhotoOpCamera;

	[Token(Token = "0x4001CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public GameObject iconPhotoOpLand;

	[Token(Token = "0x4001CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject iconPhotoOpBronze;

	[Token(Token = "0x4001CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public GameObject iconPhotoOpSilver;

	[Token(Token = "0x4001CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject iconPhotoOpGold;

	[Token(Token = "0x4001CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public Text textPhotoOpTime;

	[Token(Token = "0x4001CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Text textPhotoOpSwap;

	[Token(Token = "0x4001CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public Text textPhotoOpSwap2;

	[Token(Token = "0x4001CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject photoOpRangeGreen;

	[Token(Token = "0x4001CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public GameObject photoOpRangeYellow;

	[Token(Token = "0x4001CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject photoOpRangeRed;

	[Token(Token = "0x4001CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public GameObject photoOpRangeToLow;

	[Token(Token = "0x4001CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject photoOpRangeToHigh;

	[Token(Token = "0x4001CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public int maxScreenshots;

	[Token(Token = "0x4001CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private CameraDir cameraDir;

	[Token(Token = "0x4001CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public GameObject screenPerformAction;

	[Token(Token = "0x4001CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject waypointIcon;

	[Token(Token = "0x4001CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public GameObject landIcon;

	[Token(Token = "0x4001CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject landIconSmallGroup;

	[Token(Token = "0x4001CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public Text landPointsText;

	[Token(Token = "0x4001CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject takeoffIcon;

	[Token(Token = "0x4001CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public Text actionText;

	[Token(Token = "0x4001CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject screenMissionComplete;

	[Token(Token = "0x4001CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public GameObject completeIcon;

	[Token(Token = "0x4001CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject incompleteIcon;

	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public GameObject medalGoldIcon;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject medalSilverIcon;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public GameObject medalBronzeIcon;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject exitTrigger;

	[Token(Token = "0x4001CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public GameObject exitButtonActive;

	[Token(Token = "0x4001CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject exitButtonInactive;

	[Token(Token = "0x4001CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public GameObject exitButtonRollover;

	[Token(Token = "0x4001CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Text exitText;

	[Token(Token = "0x4001CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public Text missionCompleteText;

	[Token(Token = "0x4001CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject screenTimedFlight;

	[Token(Token = "0x4001CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public GameObject timedFlightGold;

	[Token(Token = "0x4001CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public GameObject timedFlightGoldInactive;

	[Token(Token = "0x4001CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public GameObject timedFlightLandGold;

	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public GameObject timedFlightLandGoldInactive;

	[Token(Token = "0x4001CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public Text timedFlightTimeNeededGoldText;

	[Token(Token = "0x4001CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject timedFlightSilver;

	[Token(Token = "0x4001CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public GameObject timedFlightSilverInactive;

	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject timedFlightLandSilver;

	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public GameObject timedFlightLandSilverInactive;

	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Text timedFlightTimeNeededSilverText;

	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public GameObject timedFlightBronze;

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject timedFlightBronzeInactive;

	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public GameObject timedFlightLandBronze;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject timedFlightLandBronzeInactive;

	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public Text timedFlightTimeNeededBronzeText;

	[Token(Token = "0x4001CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject timmerScreen;

	[Token(Token = "0x4001CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public Text timmerText;

	[Token(Token = "0x4001CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public GameObject crashedScreen;

	[Token(Token = "0x4001CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public Text crashedText;

	[Token(Token = "0x4001CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4001CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public TABLET_STATE currentTabletState;

	[Token(Token = "0x4001CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public TABLET_STATE desiredTabletState;

	[Token(Token = "0x4001CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private TABLET_STATE m_previousTabletState;

	[Token(Token = "0x4001CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool isOnRunway;

	[Token(Token = "0x4001CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	private bool homeButtonLookedAt;

	[Token(Token = "0x4001CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34A")]
	private bool homeButtonUsed;

	[Token(Token = "0x4001CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34B")]
	private bool refuelButtonLookedAt;

	[Token(Token = "0x4001CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private bool refuelButtonUsed;

	[Token(Token = "0x4001CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34D")]
	private bool tabletIsInteractive;

	[Token(Token = "0x4001CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ControllerAircraft ControllerAircraft;

	[Token(Token = "0x4001CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static VehicleSetup vehicleSetup;

	[Token(Token = "0x4001CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LevelManager levelManager;

	[Token(Token = "0x4001CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static CrashManager crashManager;

	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LanguageManager languageManager;

	[Token(Token = "0x4001D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static ControllerTablet controllerTablet;

	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ControllerTablet m_controllerTablet;

	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private TABLET_STATE m_currentTabletState;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private GameManager m_gameManager;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private LevelManager m_levelManager;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private CrashManager m_crashManager;

	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	private VehicleSetup m_vehicleSetup;

	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private LanguageManager m_languageManager;

	[Token(Token = "0x4001D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private bool m_inStartUp;

	[Token(Token = "0x4001D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TABLET_STATE m_prevTabletState;

	[Token(Token = "0x4001D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	private bool m_showNotice;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private NoticeType m_noticeType;

	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private int m_scoreReceived;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private MEDAL_TYPE m_prevMedalType;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private bool m_hasPlayedDeliveryLandDialog;

	[Token(Token = "0x4001D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private string m_prevScreenToEnable;

	[Token(Token = "0x4001D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	public bool OverrideInitialTabletState;

	[Token(Token = "0x4001D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public PHOTO_OP_CAMERA_STATE PhotoOpCameraState;

	[Token(Token = "0x4001D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	[SerializeField]
	private float m_photoOpStateTransitionTime;

	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private float m_elapsedPhotoOpStateTransitionTime;

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private RenderTexture currentActiveRT;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[SerializeField]
	private float m_framesSkipped;

	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private float m_elapsedFramesSkipped;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private HandednessId handednessID;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	[SerializeField]
	private InputController m_rightIC;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	[SerializeField]
	private InputController m_leftIC;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private bool m_isPhotoOpPressed;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public Texture2D poImageTexture;

	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	public Texture2D photoOpOverlay;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public bool SavePhotoOpToDisk;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	private int penaltyIncrease;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private string penaltyType;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	private int scoreIncrease;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private string scoreType;

	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	private float m_beepIntervalTrack;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E5C4", Offset = "0x17E5C4")]
	private static Dictionary<string, int> <>f__switch$map1;

	[Token(Token = "0x17000443")]
	public AudioSource AudioSource
	{
		[Token(Token = "0x6002003")]
		[Address(RVA = "0x3980CC", Offset = "0x3980CC", VA = "0x3980CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000444")]
	public bool TabletIsInteractive
	{
		[Token(Token = "0x6002006")]
		[Address(RVA = "0x398418", Offset = "0x398418", VA = "0x398418")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FFB")]
	[Address(RVA = "0x397F6C", Offset = "0x397F6C", VA = "0x397F6C")]
	public ControllerTablet()
	{
	}

	[Token(Token = "0x6001FFC")]
	[Address(RVA = "0x3980AC", Offset = "0x3980AC", VA = "0x3980AC", Slot = "4")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6001FFD")]
	[Address(RVA = "0x3980B0", Offset = "0x3980B0", VA = "0x3980B0", Slot = "5")]
	public void OnButtonB(bool isDirect = true)
	{
	}

	[Token(Token = "0x6001FFE")]
	[Address(RVA = "0x3980B4", Offset = "0x3980B4", VA = "0x3980B4", Slot = "6")]
	public void OnButtonX()
	{
	}

	[Token(Token = "0x6001FFF")]
	[Address(RVA = "0x3980B8", Offset = "0x3980B8", VA = "0x3980B8", Slot = "7")]
	public void OnButtonY()
	{
	}

	[Token(Token = "0x6002000")]
	[Address(RVA = "0x3980BC", Offset = "0x3980BC", VA = "0x3980BC", Slot = "8")]
	public void OnButtonLB()
	{
	}

	[Token(Token = "0x6002001")]
	[Address(RVA = "0x3980C0", Offset = "0x3980C0", VA = "0x3980C0", Slot = "9")]
	public void OnButtonRB()
	{
	}

	[Token(Token = "0x6002002")]
	[Address(RVA = "0x3980C4", Offset = "0x3980C4", VA = "0x3980C4", Slot = "13")]
	public AudioSource GetAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6002004")]
	[Address(RVA = "0x3980D4", Offset = "0x3980D4", VA = "0x3980D4")]
	private void _PlayMedalAudio(MEDAL_TYPE medalType)
	{
	}

	[Token(Token = "0x6002005")]
	[Address(RVA = "0x3982A8", Offset = "0x3982A8", VA = "0x3982A8")]
	private void _PlayPurchaseAudio()
	{
	}

	[Token(Token = "0x6002007")]
	[Address(RVA = "0x398420", Offset = "0x398420", VA = "0x398420")]
	public static ControllerTablet Instance()
	{
		return null;
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0x3984AC", Offset = "0x3984AC", VA = "0x3984AC")]
	public static ControllerTablet Instance(bool isControllerRequired)
	{
		return null;
	}

	[Token(Token = "0x6002009")]
	[Address(RVA = "0x398730", Offset = "0x398730", VA = "0x398730")]
	private void Start()
	{
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0x398A40", Offset = "0x398A40", VA = "0x398A40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600200B")]
	[Address(RVA = "0x398B74", Offset = "0x398B74", VA = "0x398B74")]
	private void LocalizeText()
	{
	}

	[Token(Token = "0x600200C")]
	[Address(RVA = "0x398ECC", Offset = "0x398ECC", VA = "0x398ECC")]
	private void SetTutorialCards()
	{
	}

	[Token(Token = "0x600200D")]
	[Address(RVA = "0x398734", Offset = "0x398734", VA = "0x398734")]
	private void _StartControllerTablet()
	{
	}

	[Token(Token = "0x600200E")]
	[Address(RVA = "0x3993F8", Offset = "0x3993F8", VA = "0x3993F8")]
	private void _DetermineInitialTabletState()
	{
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0x3994A0", Offset = "0x3994A0", VA = "0x3994A0")]
	private void _UpdateControllerTablet()
	{
	}

	[Token(Token = "0x6002010")]
	[Address(RVA = "0x399548", Offset = "0x399548", VA = "0x399548")]
	private void _UpdateControllerTabletTime()
	{
	}

	[Token(Token = "0x6002011")]
	[Address(RVA = "0x39954C", Offset = "0x39954C", VA = "0x39954C")]
	private void _UpdateControllerTabletState()
	{
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0x39BFC8", Offset = "0x39BFC8", VA = "0x39BFC8")]
	public void ShowNotice(NoticeType noticeType, int scoreReceived = 0)
	{
	}

	[Token(Token = "0x6002013")]
	[Address(RVA = "0x39BFE4", Offset = "0x39BFE4", VA = "0x39BFE4")]
	private void _ShowNotice(NoticeType noticeType, int scoreReceived = 0)
	{
	}

	[Token(Token = "0x6002014")]
	[Address(RVA = "0x39A00C", Offset = "0x39A00C", VA = "0x39A00C")]
	private void _UpdateCheckForNotice()
	{
	}

	[Token(Token = "0x6002015")]
	[Address(RVA = "0x39AE60", Offset = "0x39AE60", VA = "0x39AE60")]
	private void _PlayInstructedLandDialog(bool forcePlay = false)
	{
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0x39BE3C", Offset = "0x39BE3C", VA = "0x39BE3C")]
	private void _ShowLevelTypeScreen()
	{
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0x399C58", Offset = "0x399C58", VA = "0x399C58")]
	private void _UpdateMedalAudio()
	{
	}

	[Token(Token = "0x6002018")]
	[Address(RVA = "0x399FE4", Offset = "0x399FE4", VA = "0x399FE4")]
	private void _UpdateStartup()
	{
	}

	[Token(Token = "0x6002019")]
	[Address(RVA = "0x39D5E8", Offset = "0x39D5E8", VA = "0x39D5E8")]
	private bool _CheckForEngineStart()
	{
		return default(bool);
	}

	[Token(Token = "0x600201A")]
	[Address(RVA = "0x39D264", Offset = "0x39D264", VA = "0x39D264")]
	private void _UpdateRingRush()
	{
	}

	[Token(Token = "0x600201B")]
	[Address(RVA = "0x39D268", Offset = "0x39D268", VA = "0x39D268")]
	private void _UpdateRingCourse()
	{
	}

	[Token(Token = "0x600201C")]
	[Address(RVA = "0x39D26C", Offset = "0x39D26C", VA = "0x39D26C")]
	private void _UpdateBalloonRush()
	{
	}

	[Token(Token = "0x600201D")]
	[Address(RVA = "0x39D33C", Offset = "0x39D33C", VA = "0x39D33C")]
	private void _UpdateRace()
	{
	}

	[Token(Token = "0x600201E")]
	[Address(RVA = "0x39D270", Offset = "0x39D270", VA = "0x39D270")]
	private void _UpdateBalloonCourse()
	{
	}

	[Token(Token = "0x600201F")]
	[Address(RVA = "0x39D274", Offset = "0x39D274", VA = "0x39D274")]
	private void _UpdateDelivery()
	{
	}

	[Token(Token = "0x6002020")]
	[Address(RVA = "0x39D340", Offset = "0x39D340", VA = "0x39D340")]
	private void _UpdateTimedFlight()
	{
	}

	[Token(Token = "0x6002021")]
	[Address(RVA = "0x39D344", Offset = "0x39D344", VA = "0x39D344")]
	private void _UpdateFreeFlight()
	{
	}

	[Token(Token = "0x6002022")]
	[Address(RVA = "0x3A2FDC", Offset = "0x3A2FDC", VA = "0x3A2FDC")]
	private void _UpdateLand()
	{
	}

	[Token(Token = "0x6002023")]
	[Address(RVA = "0x3A2FE4", Offset = "0x3A2FE4", VA = "0x3A2FE4")]
	private void _UpdateCrashed()
	{
	}

	[Token(Token = "0x6002024")]
	[Address(RVA = "0x3A2FE8", Offset = "0x3A2FE8", VA = "0x3A2FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6002025")]
	[Address(RVA = "0x3A2FEC", Offset = "0x3A2FEC", VA = "0x3A2FEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6002026")]
	[Address(RVA = "0x3A2FF0", Offset = "0x3A2FF0", VA = "0x3A2FF0")]
	private void EnableDisable(string screenToEnable)
	{
	}

	[Token(Token = "0x6002027")]
	[Address(RVA = "0x3A3DF8", Offset = "0x3A3DF8", VA = "0x3A3DF8")]
	private void UpdateTablet()
	{
	}

	[Token(Token = "0x6002028")]
	[Address(RVA = "0x3A5200", Offset = "0x3A5200", VA = "0x3A5200")]
	public void OnRunway()
	{
	}

	[Token(Token = "0x6002029")]
	[Address(RVA = "0x39D34C", Offset = "0x39D34C", VA = "0x39D34C")]
	private void SetTabletToStartUp()
	{
	}

	[Token(Token = "0x600202A")]
	[Address(RVA = "0x3A5528", Offset = "0x3A5528", VA = "0x3A5528")]
	private void SetStartupState(int startUpScreen)
	{
	}

	[Token(Token = "0x600202B")]
	[Address(RVA = "0x39B704", Offset = "0x39B704", VA = "0x39B704")]
	private void SetTabletToRunway(bool state)
	{
	}

	[Token(Token = "0x600202C")]
	[Address(RVA = "0x39B8D4", Offset = "0x39B8D4", VA = "0x39B8D4")]
	private void SetTabletToPurchase()
	{
	}

	[Token(Token = "0x600202D")]
	[Address(RVA = "0x399ECC", Offset = "0x399ECC", VA = "0x399ECC")]
	private void SetTabletToStopped()
	{
	}

	[Token(Token = "0x600202E")]
	[Address(RVA = "0x3A405C", Offset = "0x3A405C", VA = "0x3A405C")]
	private void SetTabletToGaze(string activeTrigger)
	{
	}

	[Token(Token = "0x600202F")]
	[Address(RVA = "0x3A2720", Offset = "0x3A2720", VA = "0x3A2720")]
	private void SetTabletToTimedFlight()
	{
	}

	[Token(Token = "0x6002030")]
	[Address(RVA = "0x39E800", Offset = "0x39E800", VA = "0x39E800")]
	private void SetTabletToRingCourse()
	{
	}

	[Token(Token = "0x6002031")]
	[Address(RVA = "0x3A5EB8", Offset = "0x3A5EB8", VA = "0x3A5EB8")]
	private void _UpdateCameraRender()
	{
	}

	[Token(Token = "0x6002032")]
	[Address(RVA = "0x3A623C", Offset = "0x3A623C", VA = "0x3A623C")]
	private void _TakePictureTexture()
	{
	}

	[Token(Token = "0x6002033")]
	[Address(RVA = "0x3A650C", Offset = "0x3A650C", VA = "0x3A650C")]
	[DebuggerHidden]
	private IEnumerator SaveWatermarkImage(Texture2D background, Texture2D watermark, int startX, int startY)
	{
		return null;
	}

	[Token(Token = "0x6002034")]
	[Address(RVA = "0x3A4590", Offset = "0x3A4590", VA = "0x3A4590")]
	private void SetTabletToPhotoOp()
	{
	}

	[Token(Token = "0x6002035")]
	[Address(RVA = "0x3A4374", Offset = "0x3A4374", VA = "0x3A4374")]
	private void SetTabletToPhotoOpCamera()
	{
	}

	[Token(Token = "0x6002036")]
	[Address(RVA = "0x3A08C8", Offset = "0x3A08C8", VA = "0x3A08C8")]
	private void SetTabletToBalloonCourse()
	{
	}

	[Token(Token = "0x6002037")]
	[Address(RVA = "0x39C000", Offset = "0x39C000", VA = "0x39C000")]
	private void SetTabletToNotice(NoticeType noticeType, int value = 10)
	{
	}

	[Token(Token = "0x6002038")]
	[Address(RVA = "0x39D784", Offset = "0x39D784", VA = "0x39D784")]
	private void SetTabletToRingRush()
	{
	}

	[Token(Token = "0x6002039")]
	[Address(RVA = "0x39F6EC", Offset = "0x39F6EC", VA = "0x39F6EC")]
	private void SetTabletToBalloonRush()
	{
	}

	[Token(Token = "0x600203A")]
	[Address(RVA = "0x3A1854", Offset = "0x3A1854", VA = "0x3A1854")]
	private void SetTabletToDelivery()
	{
	}

	[Token(Token = "0x600203B")]
	[Address(RVA = "0x3A074C", Offset = "0x3A074C", VA = "0x3A074C")]
	private void SetTabletToRace()
	{
	}

	[Token(Token = "0x600203C")]
	[Address(RVA = "0x3A65CC", Offset = "0x3A65CC", VA = "0x3A65CC")]
	private void _SetGroupPlacingActivity()
	{
	}

	[Token(Token = "0x600203D")]
	[Address(RVA = "0x39B5F8", Offset = "0x39B5F8", VA = "0x39B5F8")]
	private void SetTabletToCrashed()
	{
	}

	[Token(Token = "0x600203E")]
	[Address(RVA = "0x39B12C", Offset = "0x39B12C", VA = "0x39B12C")]
	private void SetTabletToAction(TABLET_STATE actionRequest)
	{
	}

	[Token(Token = "0x600203F")]
	[Address(RVA = "0x39A07C", Offset = "0x39A07C", VA = "0x39A07C")]
	private void SetTabletToMission(TABLET_STATE actionRequest)
	{
	}

	[Token(Token = "0x6002040")]
	[Address(RVA = "0x39B65C", Offset = "0x39B65C", VA = "0x39B65C")]
	private bool IsPlayerOwnOffice()
	{
		return default(bool);
	}

	[Token(Token = "0x6002041")]
	[Address(RVA = "0x3A5D78", Offset = "0x3A5D78", VA = "0x3A5D78")]
	private bool IsHaveMoneyForOffice()
	{
		return default(bool);
	}

	[Token(Token = "0x6002042")]
	[Address(RVA = "0x3A6AA0", Offset = "0x3A6AA0", VA = "0x3A6AA0")]
	private void BuyOffice()
	{
	}

	[Token(Token = "0x6002043")]
	[Address(RVA = "0x399DD8", Offset = "0x399DD8", VA = "0x399DD8")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x6002044")]
	[Address(RVA = "0x3A7240", Offset = "0x3A7240", VA = "0x3A7240")]
	private void _UpdateLowTimer()
	{
	}

	[Token(Token = "0x6002045")]
	[Address(RVA = "0x3A5C90", Offset = "0x3A5C90", VA = "0x3A5C90")]
	private void GetImageFrame()
	{
	}

	[Token(Token = "0x6002046")]
	[Address(RVA = "0x3A75D0", Offset = "0x3A75D0", VA = "0x3A75D0")]
	public void ChangePhotoOpTargetImage(Sprite nextImageSprite)
	{
	}

	[Token(Token = "0x6002047")]
	[Address(RVA = "0x3A76F8", Offset = "0x3A76F8", VA = "0x3A76F8")]
	private void RefuelAircraft()
	{
	}

	[Token(Token = "0x6002048")]
	[Address(RVA = "0x3A7788", Offset = "0x3A7788", VA = "0x3A7788")]
	private void _ToggleCamera()
	{
	}

	[Token(Token = "0x6002049")]
	[Address(RVA = "0x3A7894", Offset = "0x3A7894", VA = "0x3A7894")]
	public void RotateCamera()
	{
	}

	[Token(Token = "0x600204A")]
	[Address(RVA = "0x3A7898", Offset = "0x3A7898", VA = "0x3A7898")]
	private void _RotateCamera()
	{
	}

	[Token(Token = "0x600204B")]
	[Address(RVA = "0x3A520C", Offset = "0x3A520C", VA = "0x3A520C")]
	private string GetFuelState()
	{
		return null;
	}

	[Token(Token = "0x600204C")]
	[Address(RVA = "0x3A67D4", Offset = "0x3A67D4", VA = "0x3A67D4", Slot = "10")]
	public void OnClick(string buttonType)
	{
	}

	[Token(Token = "0x600204D")]
	[Address(RVA = "0x3A7BA0", Offset = "0x3A7BA0", VA = "0x3A7BA0", Slot = "11")]
	public void OnPointerEnter(string buttonType)
	{
	}

	[Token(Token = "0x600204E")]
	[Address(RVA = "0x3A7F4C", Offset = "0x3A7F4C", VA = "0x3A7F4C", Slot = "12")]
	public void OnPointerExit(string buttonType)
	{
	}
}
[Token(Token = "0x200048D")]
public class ControllerVolume : MonoBehaviour
{
	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1742C4", Offset = "0x1742C4")]
	private sealed class <SetVolumeAfterFrame>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GenericInput[] $locvar0;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GenericInput[] $locvar2;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $locvar3;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ControllerVolume $this;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x17000599")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002762")]
			[Address(RVA = "0x3AAF3C", Offset = "0x3AAF3C", VA = "0x3AAF3C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002763")]
			[Address(RVA = "0x3AAF44", Offset = "0x3AAF44", VA = "0x3AAF44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x3AA8C4", Offset = "0x3AA8C4", VA = "0x3AA8C4")]
		[DebuggerHidden]
		public <SetVolumeAfterFrame>c__Iterator0()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x3AAC78", Offset = "0x3AAC78", VA = "0x3AAC78", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x3AAF4C", Offset = "0x3AAF4C", VA = "0x3AAF4C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x3AAF60", Offset = "0x3AAF60", VA = "0x3AAF60", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private InteractableInput m_effectsInput;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InteractableInput m_musicInput;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GenericInput[] m_genericEffectsInputs;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GenericInput[] m_genericMusicInputs;

	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_effectsVolume;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_musicVolume;

	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_dialogVolume;

	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioMixer m_masterMixer;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float x;

	[Token(Token = "0x6002050")]
	[Address(RVA = "0x3AA45C", Offset = "0x3AA45C", VA = "0x3AA45C")]
	public ControllerVolume()
	{
	}

	[Token(Token = "0x6002051")]
	[Address(RVA = "0x3AA464", Offset = "0x3AA464", VA = "0x3AA464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002052")]
	[Address(RVA = "0x3AA81C", Offset = "0x3AA81C", VA = "0x3AA81C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002053")]
	[Address(RVA = "0x3AA840", Offset = "0x3AA840", VA = "0x3AA840")]
	[DebuggerHidden]
	private IEnumerator SetVolumeAfterFrame()
	{
		return null;
	}

	[Token(Token = "0x6002054")]
	[Address(RVA = "0x3AA8CC", Offset = "0x3AA8CC", VA = "0x3AA8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6002055")]
	[Address(RVA = "0x3AAAD8", Offset = "0x3AAAD8", VA = "0x3AAAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6002056")]
	[Address(RVA = "0x3AA8F0", Offset = "0x3AA8F0", VA = "0x3AA8F0")]
	private void _SetVolume(float ev, float dv, float mv)
	{
	}
}
[Token(Token = "0x200048E")]
public class CrosshairTrigger : MonoBehaviour
{
	[Token(Token = "0x4001D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DashGuage dashGuage;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private DashGuageIgnitionMagneto dashGuageIgnitionMagneto;

	[Token(Token = "0x6002057")]
	[Address(RVA = "0x3AEF64", Offset = "0x3AEF64", VA = "0x3AEF64")]
	public CrosshairTrigger()
	{
	}

	[Token(Token = "0x6002058")]
	[Address(RVA = "0x3AEF6C", Offset = "0x3AEF6C", VA = "0x3AEF6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002059")]
	[Address(RVA = "0x3AF078", Offset = "0x3AF078", VA = "0x3AF078")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x600205A")]
	[Address(RVA = "0x3AF2AC", Offset = "0x3AF2AC", VA = "0x3AF2AC")]
	public void OnButtonAHeld()
	{
	}
}
[Token(Token = "0x200048F")]
public class DisableIndexController : MonoBehaviour
{
	[Token(Token = "0x600205B")]
	[Address(RVA = "0x3C6B28", Offset = "0x3C6B28", VA = "0x3C6B28")]
	public DisableIndexController()
	{
	}

	[Token(Token = "0x600205C")]
	[Address(RVA = "0x3C6B30", Offset = "0x3C6B30", VA = "0x3C6B30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600205D")]
	[Address(RVA = "0x3C6F60", Offset = "0x3C6F60", VA = "0x3C6F60")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x2000490")]
public class DisketteTrigger : MonoBehaviour
{
	[Token(Token = "0x4001D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject selected;

	[Token(Token = "0x4001D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ControllerSaveComputer targetComputer;

	[Token(Token = "0x4001D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ControllerSaveDisk targetDisk;

	[Token(Token = "0x4001D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _ignoreLayer;

	[Token(Token = "0x4001D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _collisionLayer;

	[Token(Token = "0x4001D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbableProp _grabbableProp;

	[Token(Token = "0x600205E")]
	[Address(RVA = "0x3C72FC", Offset = "0x3C72FC", VA = "0x3C72FC")]
	public DisketteTrigger()
	{
	}

	[Token(Token = "0x600205F")]
	[Address(RVA = "0x3C7304", Offset = "0x3C7304", VA = "0x3C7304")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002060")]
	[Address(RVA = "0x3C7438", Offset = "0x3C7438", VA = "0x3C7438")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002061")]
	[Address(RVA = "0x3C75DC", Offset = "0x3C75DC", VA = "0x3C75DC")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6002062")]
	[Address(RVA = "0x3C74EC", Offset = "0x3C74EC", VA = "0x3C74EC")]
	public void EnableTrigger(bool enable)
	{
	}

	[Token(Token = "0x6002063")]
	[Address(RVA = "0x3C772C", Offset = "0x3C772C", VA = "0x3C772C")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6002064")]
	[Address(RVA = "0x3C7408", Offset = "0x3C7408", VA = "0x3C7408")]
	public void OffGaze()
	{
	}
}
[Token(Token = "0x2000491")]
public class ExitGameTrigger : MonoBehaviour
{
	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1742D4", Offset = "0x1742D4")]
	private sealed class <WaitForFadeOut>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x1700059B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002768")]
			[Address(RVA = "0xBAD420", Offset = "0xBAD420", VA = "0xBAD420", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002769")]
			[Address(RVA = "0xBAD428", Offset = "0xBAD428", VA = "0xBAD428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xBAD1A8", Offset = "0xBAD1A8", VA = "0xBAD1A8")]
		[DebuggerHidden]
		public <WaitForFadeOut>c__Iterator0()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xBAD268", Offset = "0xBAD268", VA = "0xBAD268", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xBAD430", Offset = "0xBAD430", VA = "0xBAD430", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xBAD444", Offset = "0xBAD444", VA = "0xBAD444", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int progressMeterSpeed;

	[Token(Token = "0x4001D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject selected;

	[Token(Token = "0x4001D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject progressMeter;

	[Token(Token = "0x4001D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool gameIsExiting;

	[Token(Token = "0x4001D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x4001D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ScreenFader screenFader;

	[Token(Token = "0x4001D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CrashManager crashManager;

	[Token(Token = "0x4001D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static ExitGameTrigger exitGameTrigger;

	[Token(Token = "0x6002065")]
	[Address(RVA = "0xBABE4C", Offset = "0xBABE4C", VA = "0xBABE4C")]
	public ExitGameTrigger()
	{
	}

	[Token(Token = "0x6002066")]
	[Address(RVA = "0xBABE5C", Offset = "0xBABE5C", VA = "0xBABE5C")]
	public static ExitGameTrigger Instance()
	{
		return null;
	}

	[Token(Token = "0x6002067")]
	[Address(RVA = "0xBAC044", Offset = "0xBAC044", VA = "0xBAC044")]
	private void Start()
	{
	}

	[Token(Token = "0x6002068")]
	[Address(RVA = "0xBAC0E8", Offset = "0xBAC0E8", VA = "0xBAC0E8")]
	public void Init()
	{
	}

	[Token(Token = "0x6002069")]
	[Address(RVA = "0xBAC184", Offset = "0xBAC184", VA = "0xBAC184")]
	public void Update()
	{
	}

	[Token(Token = "0x600206A")]
	[Address(RVA = "0xBAC498", Offset = "0xBAC498", VA = "0xBAC498")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x600206B")]
	[Address(RVA = "0xBAD13C", Offset = "0xBAD13C", VA = "0xBAD13C")]
	[DebuggerHidden]
	private IEnumerator WaitForFadeOut()
	{
		return null;
	}

	[Token(Token = "0x600206C")]
	[Address(RVA = "0xBAD1B0", Offset = "0xBAD1B0", VA = "0xBAD1B0")]
	public void OnGaze()
	{
	}
}
[Token(Token = "0x2000492")]
public class FlightControlsSelectable : MonoBehaviour, IGrabbablePropSelectable
{
	[Token(Token = "0x2000493")]
	private enum ERROR_TYPE
	{
		[Token(Token = "0x4001D72")]
		MissingSetFlightControls
	}

	[Token(Token = "0x4001D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_anchor;

	[Token(Token = "0x4001D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private BoxCollider m_boxCollider;

	[Token(Token = "0x4001D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SetFlightControls m_setFlightControls;

	[Token(Token = "0x17000445")]
	public SetFlightControls SetFlightControls
	{
		[Token(Token = "0x6002074")]
		[Address(RVA = "0xBB3588", Offset = "0xBB3588", VA = "0xBB3588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600206D")]
	[Address(RVA = "0xBB2E2C", Offset = "0xBB2E2C", VA = "0xBB2E2C")]
	public FlightControlsSelectable()
	{
	}

	[Token(Token = "0x600206E")]
	[Address(RVA = "0xBB2E34", Offset = "0xBB2E34", VA = "0xBB2E34")]
	private string _GetErrorMsg(ERROR_TYPE e)
	{
		return null;
	}

	[Token(Token = "0x600206F")]
	[Address(RVA = "0xBB2EDC", Offset = "0xBB2EDC", VA = "0xBB2EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002070")]
	[Address(RVA = "0xBB33C0", Offset = "0xBB33C0", VA = "0xBB33C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6002071")]
	[Address(RVA = "0xBB33C4", Offset = "0xBB33C4", VA = "0xBB33C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6002072")]
	[Address(RVA = "0xBB2EF8", Offset = "0xBB2EF8", VA = "0xBB2EF8")]
	private void _GetBoxCollider()
	{
	}

	[Token(Token = "0x6002073")]
	[Address(RVA = "0xBB33C8", Offset = "0xBB33C8", VA = "0xBB33C8")]
	private void _RepositionAnchor(Vector3 selectorPosition)
	{
	}

	[Token(Token = "0x6002075")]
	[Address(RVA = "0xBB2FA4", Offset = "0xBB2FA4", VA = "0xBB2FA4")]
	private void _GetSetFlightControls()
	{
	}

	[Token(Token = "0x6002076")]
	[Address(RVA = "0xBB35A8", Offset = "0xBB35A8", VA = "0xBB35A8", Slot = "7")]
	public void Initialize(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x6002077")]
	[Address(RVA = "0xBB39FC", Offset = "0xBB39FC", VA = "0xBB39FC", Slot = "9")]
	public bool IsActiveSelectable()
	{
		return default(bool);
	}

	[Token(Token = "0x6002078")]
	[Address(RVA = "0xBB3AD4", Offset = "0xBB3AD4", VA = "0xBB3AD4", Slot = "4")]
	public void Select(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x6002079")]
	[Address(RVA = "0xBB3F3C", Offset = "0xBB3F3C", VA = "0xBB3F3C", Slot = "5")]
	public void Reselect(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x600207A")]
	[Address(RVA = "0xBB4268", Offset = "0xBB4268", VA = "0xBB4268", Slot = "6")]
	public void Unselect(GrabbablePropSelector selector, params string[] args)
	{
	}

	[Token(Token = "0x600207B")]
	[Address(RVA = "0xBB426C", Offset = "0xBB426C", VA = "0xBB426C", Slot = "8")]
	public Collider GetCollider()
	{
		return null;
	}
}
[Token(Token = "0x2000494")]
public class GrabbablePropSelector : MonoBehaviour
{
	[Token(Token = "0x2000495")]
	private enum ERROR_TYPE
	{
		[Token(Token = "0x4001D7E")]
		MissingGrabbable,
		[Token(Token = "0x4001D7F")]
		MissingGrabbableOverride
	}

	[Token(Token = "0x2000496")]
	private enum WARNING_TYPE
	{
		[Token(Token = "0x4001D81")]
		WillOverrideGrabbableProp
	}

	[Token(Token = "0x2000497")]
	private enum SELECT_MODE
	{
		[Token(Token = "0x4001D83")]
		RADIO_BTN,
		[Token(Token = "0x4001D84")]
		CHECKBOX
	}

	[Token(Token = "0x4001D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected GrabbableProp m_grabbableProp;

	[Token(Token = "0x4001D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17E644", Offset = "0x17E644")]
	private bool m_hasSeparateGrabbableProp;

	[Token(Token = "0x4001D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17E68C", Offset = "0x17E68C")]
	private GrabbableProp m_grabbablePropOverride;

	[Token(Token = "0x4001D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SELECT_MODE m_selectMode;

	[Token(Token = "0x4001D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject m_selectableObj;

	[Token(Token = "0x4001D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected IGrabbablePropSelectable m_selectable;

	[Token(Token = "0x4001D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected IGrabbablePropSelectable m_prevSelectable;

	[Token(Token = "0x4001D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> m_selectableObjs;

	[Token(Token = "0x4001D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected List<IGrabbablePropSelectable> m_selectables;

	[Token(Token = "0x4001D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E714", Offset = "0x17E714")]
	private static Func<IGrabbablePropSelectable, bool> <>f__am$cache0;

	[Token(Token = "0x17000446")]
	public GrabbableProp GrabbableProp
	{
		[Token(Token = "0x6002084")]
		[Address(RVA = "0x33992C", Offset = "0x33992C", VA = "0x33992C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000447")]
	public List<IGrabbablePropSelectable> SelectablesList
	{
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x339A64", Offset = "0x339A64", VA = "0x339A64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600207C")]
	[Address(RVA = "0x338D80", Offset = "0x338D80", VA = "0x338D80")]
	public GrabbablePropSelector()
	{
	}

	[Token(Token = "0x600207D")]
	[Address(RVA = "0x338D88", Offset = "0x338D88", VA = "0x338D88")]
	private string _GetErrorMsg(ERROR_TYPE e)
	{
		return null;
	}

	[Token(Token = "0x600207E")]
	[Address(RVA = "0x338E48", Offset = "0x338E48", VA = "0x338E48")]
	private string _GetWarningMsg(WARNING_TYPE e)
	{
		return null;
	}

	[Token(Token = "0x600207F")]
	[Address(RVA = "0x338EF0", Offset = "0x338EF0", VA = "0x338EF0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6002080")]
	[Address(RVA = "0x3396B8", Offset = "0x3396B8", VA = "0x3396B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6002081")]
	[Address(RVA = "0x3397F0", Offset = "0x3397F0", VA = "0x3397F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002082")]
	[Address(RVA = "0x339924", Offset = "0x339924", VA = "0x339924")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002083")]
	[Address(RVA = "0x339928", Offset = "0x339928", VA = "0x339928")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002085")]
	[Address(RVA = "0x338F14", Offset = "0x338F14", VA = "0x338F14")]
	private void _Initialize()
	{
	}

	[Token(Token = "0x6002086")]
	[Address(RVA = "0x3392A0", Offset = "0x3392A0", VA = "0x3392A0")]
	private void _SubscribeToGPEvents()
	{
	}

	[Token(Token = "0x6002087")]
	[Address(RVA = "0x3397F4", Offset = "0x3397F4", VA = "0x3397F4")]
	private void _UnsubscribeToGPEvents()
	{
	}

	[Token(Token = "0x6002088")]
	[Address(RVA = "0x339934", Offset = "0x339934", VA = "0x339934", Slot = "5")]
	protected virtual void _OnGrabBeginHandler(GrabbableProp sender, EventArgs e)
	{
	}

	[Token(Token = "0x6002089")]
	[Address(RVA = "0x339A6C", Offset = "0x339A6C", VA = "0x339A6C", Slot = "6")]
	protected virtual void _OnGrabEndHandler(GrabbableProp sender, EventArgs e)
	{
	}

	[Token(Token = "0x600208B")]
	[Address(RVA = "0x3393D0", Offset = "0x3393D0", VA = "0x3393D0")]
	private void _GetSelectables()
	{
	}

	[Token(Token = "0x600208C")]
	[Address(RVA = "0x339DB4", Offset = "0x339DB4", VA = "0x339DB4")]
	private IGrabbablePropSelectable _GetSelectedSelectable()
	{
		return null;
	}

	[Token(Token = "0x600208D")]
	[Address(RVA = "0x339E64", Offset = "0x339E64", VA = "0x339E64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1821E0", Offset = "0x1821E0")]
	private static bool <_OnGrabBeginHandler>m__0(IGrabbablePropSelectable x)
	{
		return default(bool);
	}

	[Token(Token = "0x600208E")]
	[Address(RVA = "0x339F38", Offset = "0x339F38", VA = "0x339F38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1821F0", Offset = "0x1821F0")]
	private bool <_GetSelectedSelectable>m__1(IGrabbablePropSelectable x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000498")]
public class GUIBlack : MonoBehaviour
{
	[Token(Token = "0x4001D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture aTexture;

	[Token(Token = "0x600208F")]
	[Address(RVA = "0xBBB9DC", Offset = "0xBBB9DC", VA = "0xBBB9DC")]
	public GUIBlack()
	{
	}

	[Token(Token = "0x6002090")]
	[Address(RVA = "0xBBB9E4", Offset = "0xBBB9E4", VA = "0xBBB9E4")]
	private void OnGUI()
	{
	}
}
[Token(Token = "0x2000499")]
public class GunTrigger : MonoBehaviour
{
	[Token(Token = "0x4001D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GrabbableGun gunInstance;

	[Token(Token = "0x4001D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 holdOffset;

	[Token(Token = "0x4001D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Transform _cameraTransform;

	[Token(Token = "0x4001D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _holdingGun;

	[Token(Token = "0x4001D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private InteractableInput m_fireInteractableInput;

	[Token(Token = "0x4001D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractableInput m_reloadInteractableInput;

	[Token(Token = "0x6002091")]
	[Address(RVA = "0x33B184", Offset = "0x33B184", VA = "0x33B184")]
	public GunTrigger()
	{
	}

	[Token(Token = "0x6002092")]
	[Address(RVA = "0x33B1EC", Offset = "0x33B1EC", VA = "0x33B1EC")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6002093")]
	[Address(RVA = "0x33B2C0", Offset = "0x33B2C0", VA = "0x33B2C0")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6002094")]
	[Address(RVA = "0x33B2FC", Offset = "0x33B2FC", VA = "0x33B2FC")]
	private void Update()
	{
	}
}
[Token(Token = "0x200049A")]
public class InstructionManager : MonoBehaviour
{
	[Token(Token = "0x4001D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject[] m_objectsToDisable;

	[Token(Token = "0x4001D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool[] m_objectIsActive;

	[Token(Token = "0x4001D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Image m_imageToShow;

	[Token(Token = "0x4001D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite[] m_spritesToShow;

	[Token(Token = "0x4001D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_currentSpriteIndex;

	[Token(Token = "0x4001D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x4001D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isPressed;

	[Token(Token = "0x6002095")]
	[Address(RVA = "0x519948", Offset = "0x519948", VA = "0x519948")]
	public InstructionManager()
	{
	}

	[Token(Token = "0x6002096")]
	[Address(RVA = "0x519950", Offset = "0x519950", VA = "0x519950")]
	private void Start()
	{
	}

	[Token(Token = "0x6002097")]
	[Address(RVA = "0x519B20", Offset = "0x519B20", VA = "0x519B20")]
	private void Update()
	{
	}

	[Token(Token = "0x6002098")]
	[Address(RVA = "0x519A90", Offset = "0x519A90", VA = "0x519A90")]
	private void _ProgressInput()
	{
	}

	[Token(Token = "0x6002099")]
	[Address(RVA = "0x519C00", Offset = "0x519C00", VA = "0x519C00")]
	private void _DisplayImage(Sprite sprite)
	{
	}

	[Token(Token = "0x600209A")]
	[Address(RVA = "0x519D00", Offset = "0x519D00", VA = "0x519D00")]
	private void _HideImage()
	{
	}

	[Token(Token = "0x600209B")]
	[Address(RVA = "0x519B24", Offset = "0x519B24", VA = "0x519B24")]
	private void _CheckInteractableInput()
	{
	}
}
[Token(Token = "0x200049B")]
public class ButtonTextureAssigner : MonoBehaviour
{
	[Token(Token = "0x4001D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject[] m_aButtons;

	[Token(Token = "0x4001D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject[] m_bButtons;

	[Token(Token = "0x4001D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject[] m_xButtons;

	[Token(Token = "0x4001D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] m_yButtons;

	[Token(Token = "0x4001D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject[] m_lbButtons;

	[Token(Token = "0x4001D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] m_rbButtons;

	[Token(Token = "0x4001D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject[] m_ltButtons;

	[Token(Token = "0x4001D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] m_rtButtons;

	[Token(Token = "0x4001D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject[] m_newButtons;

	[Token(Token = "0x4001D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] m_timmers;

	[Token(Token = "0x4001D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Sprite[] m_touchTextures;

	[Token(Token = "0x4001D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite[] m_xBoxTextures;

	[Token(Token = "0x4001D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Sprite[] m_ps4Textures;

	[Token(Token = "0x600209C")]
	[Address(RVA = "0x3017C4", Offset = "0x3017C4", VA = "0x3017C4")]
	public ButtonTextureAssigner()
	{
	}

	[Token(Token = "0x600209D")]
	[Address(RVA = "0x301858", Offset = "0x301858", VA = "0x301858")]
	private void Awake()
	{
	}

	[Token(Token = "0x600209E")]
	[Address(RVA = "0x301E94", Offset = "0x301E94", VA = "0x301E94")]
	private void _AssignSprite(GameObject go, Sprite sprite)
	{
	}
}
[Token(Token = "0x200049C")]
public interface IGrabbablePropSelectable
{
	[Token(Token = "0x600209F")]
	void Select(GrabbablePropSelector selector, params string[] args);

	[Token(Token = "0x60020A0")]
	void Reselect(GrabbablePropSelector selector, params string[] args);

	[Token(Token = "0x60020A1")]
	void Unselect(GrabbablePropSelector selector, params string[] args);

	[Token(Token = "0x60020A2")]
	void Initialize(GrabbablePropSelector selector, params string[] args);

	[Token(Token = "0x60020A3")]
	Collider GetCollider();

	[Token(Token = "0x60020A4")]
	bool IsActiveSelectable();
}
[Token(Token = "0x200049D")]
public class LanguageManager : MonoBehaviour
{
	[Token(Token = "0x4001DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Action LanguageLoaded;

	[Token(Token = "0x4001DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_useSystemLanguage;

	[Token(Token = "0x4001DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private SystemLanguage[] m_supportedLanguages;

	[Token(Token = "0x4001DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_forceLanguage;

	[Token(Token = "0x4001DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private SystemLanguage m_forcedLanguage;

	[Token(Token = "0x4001DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private XmlDocument mainDoc;

	[Token(Token = "0x4001DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private XmlElement root;

	[Token(Token = "0x4001DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string languagePath;

	[Token(Token = "0x4001DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string[] languageFiles;

	[Token(Token = "0x4001DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SystemLanguage loadedLanguage;

	[Token(Token = "0x4001DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Dictionary<string, string> _cache;

	[Token(Token = "0x4001DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isLanguageLoaded;

	[Token(Token = "0x4001DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager languageManager;

	[Token(Token = "0x17000448")]
	public SystemLanguage LoadedLanguage
	{
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x442C28", Offset = "0x442C28", VA = "0x442C28")]
		get
		{
			return default(SystemLanguage);
		}
	}

	[Token(Token = "0x17000449")]
	public bool IsLanguageLoaded
	{
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x442C30", Offset = "0x442C30", VA = "0x442C30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60020A5")]
	[Address(RVA = "0x442AF4", Offset = "0x442AF4", VA = "0x442AF4")]
	public LanguageManager()
	{
	}

	[Token(Token = "0x60020A8")]
	[Address(RVA = "0x442C38", Offset = "0x442C38", VA = "0x442C38")]
	public static LanguageManager Instance()
	{
		return null;
	}

	[Token(Token = "0x60020A9")]
	[Address(RVA = "0x442E30", Offset = "0x442E30", VA = "0x442E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020AA")]
	[Address(RVA = "0x442EC8", Offset = "0x442EC8", VA = "0x442EC8")]
	public void LoadLanguage(string language)
	{
	}

	[Token(Token = "0x60020AB")]
	[Address(RVA = "0x443040", Offset = "0x443040", VA = "0x443040")]
	public void LoadLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x60020AC")]
	[Address(RVA = "0x4433C4", Offset = "0x4433C4", VA = "0x4433C4")]
	private bool _IsLanguageSupported(SystemLanguage language)
	{
		return default(bool);
	}

	[Token(Token = "0x60020AD")]
	[Address(RVA = "0x443430", Offset = "0x443430", VA = "0x443430")]
	public bool _LoadLanguage(SystemLanguage language)
	{
		return default(bool);
	}

	[Token(Token = "0x60020AE")]
	[Address(RVA = "0x443794", Offset = "0x443794", VA = "0x443794")]
	public string Get(string path)
	{
		return null;
	}
}
[Token(Token = "0x200049E")]
public class LocalizeTextMesh : MonoBehaviour
{
	[Token(Token = "0x4001DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private string stringToLoad;

	[Token(Token = "0x4001DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager languageManager;

	[Token(Token = "0x60020AF")]
	[Address(RVA = "0x358FA4", Offset = "0x358FA4", VA = "0x358FA4")]
	public LocalizeTextMesh()
	{
	}

	[Token(Token = "0x60020B0")]
	[Address(RVA = "0x359044", Offset = "0x359044", VA = "0x359044")]
	private void Awake()
	{
	}
}
[Token(Token = "0x200049F")]
public class MoveObjectTrigger : MoveObject
{
	[Token(Token = "0x20004A0")]
	private enum TRIGGER_METHOD
	{
		[Token(Token = "0x4001DB3")]
		OnEnter,
		[Token(Token = "0x4001DB4")]
		OnExit
	}

	[Token(Token = "0x20004A1")]
	private enum MOVE_VISIBILITY
	{
		[Token(Token = "0x4001DB6")]
		Always,
		[Token(Token = "0x4001DB7")]
		OnMove
	}

	[Token(Token = "0x4001DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TRIGGER_METHOD m_triggerMethod;

	[Token(Token = "0x4001DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private MOVE_VISIBILITY m_moveVisibility;

	[Token(Token = "0x4001DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider triggerCollider;

	[Token(Token = "0x60020B1")]
	[Address(RVA = "0x36365C", Offset = "0x36365C", VA = "0x36365C")]
	public MoveObjectTrigger()
	{
	}

	[Token(Token = "0x60020B2")]
	[Address(RVA = "0x363660", Offset = "0x363660", VA = "0x363660", Slot = "4")]
	protected sealed override void Awake()
	{
	}

	[Token(Token = "0x60020B3")]
	[Address(RVA = "0x363740", Offset = "0x363740", VA = "0x363740", Slot = "5")]
	protected sealed override void Update()
	{
	}

	[Token(Token = "0x60020B4")]
	[Address(RVA = "0x3637B0", Offset = "0x3637B0", VA = "0x3637B0")]
	private void OnTriggerEnter(Collider other)
	{
	}
}
[Token(Token = "0x20004A2")]
public class PostItSelector : GrabbablePropSelector
{
	[Token(Token = "0x4001DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17E8C4", Offset = "0x17E8C4")]
	private static Func<IGrabbablePropSelectable, bool> <>f__am$cache0;

	[Token(Token = "0x60020B5")]
	[Address(RVA = "0x2851A0", Offset = "0x2851A0", VA = "0x2851A0")]
	public PostItSelector()
	{
	}

	[Token(Token = "0x60020B6")]
	[Address(RVA = "0x2851A8", Offset = "0x2851A8", VA = "0x2851A8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60020B7")]
	[Address(RVA = "0x2852DC", Offset = "0x2852DC", VA = "0x2852DC")]
	private void _ReturnPropCallback()
	{
	}

	[Token(Token = "0x60020B8")]
	[Address(RVA = "0x2854D4", Offset = "0x2854D4", VA = "0x2854D4", Slot = "6")]
	protected override void _OnGrabEndHandler(GrabbableProp sender, EventArgs e)
	{
	}

	[Token(Token = "0x60020B9")]
	[Address(RVA = "0x28553C", Offset = "0x28553C", VA = "0x28553C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182200", Offset = "0x182200")]
	private static bool <_ReturnPropCallback>m__0(IGrabbablePropSelectable x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20004A3")]
public class SavePercentage : MonoBehaviour
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1742E4", Offset = "0x1742E4")]
	private sealed class <_SetPercentComplete>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <percentComplete>__0;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <timeToWait>__0;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <goldValue>__0;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <silverValue>__0;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <bronzeValue>__0;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <numberOfGold>__0;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <numberOfSilver>__0;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int <numberOfBronze>__0;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int numberOfLevels;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float <valueOfLevels>__0;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal SavePercentage $this;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal object $current;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x1700059D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600276E")]
			[Address(RVA = "0x2EF128", Offset = "0x2EF128", VA = "0x2EF128", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600276F")]
			[Address(RVA = "0x2EF130", Offset = "0x2EF130", VA = "0x2EF130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x2EECDC", Offset = "0x2EECDC", VA = "0x2EECDC")]
		[DebuggerHidden]
		public <_SetPercentComplete>c__Iterator0()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x2EEE58", Offset = "0x2EEE58", VA = "0x2EEE58", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x2EF138", Offset = "0x2EF138", VA = "0x2EF138", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x2EF14C", Offset = "0x2EF14C", VA = "0x2EF14C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TextMesh m_percentText;

	[Token(Token = "0x4001DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_numberOfLevels;

	[Token(Token = "0x4001DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameManager m_gameManager;

	[Token(Token = "0x60020BA")]
	[Address(RVA = "0x2EE3D4", Offset = "0x2EE3D4", VA = "0x2EE3D4")]
	public SavePercentage()
	{
	}

	[Token(Token = "0x60020BB")]
	[Address(RVA = "0x2EE3E4", Offset = "0x2EE3E4", VA = "0x2EE3E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60020BC")]
	[Address(RVA = "0x2EE470", Offset = "0x2EE470", VA = "0x2EE470")]
	private void _Init()
	{
	}

	[Token(Token = "0x60020BD")]
	[Address(RVA = "0x2EEBE0", Offset = "0x2EEBE0", VA = "0x2EEBE0")]
	public void UpdatePercent()
	{
	}

	[Token(Token = "0x60020BE")]
	[Address(RVA = "0x2EECA8", Offset = "0x2EECA8", VA = "0x2EECA8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60020BF")]
	[Address(RVA = "0x2EE4A4", Offset = "0x2EE4A4", VA = "0x2EE4A4")]
	private int _GetNumberOfLevels()
	{
		return default(int);
	}

	[Token(Token = "0x60020C0")]
	[Address(RVA = "0x2EEC08", Offset = "0x2EEC08", VA = "0x2EEC08")]
	[DebuggerHidden]
	private IEnumerator _SetPercentComplete(int numberOfLevels)
	{
		return null;
	}

	[Token(Token = "0x60020C1")]
	[Address(RVA = "0x2EECE4", Offset = "0x2EECE4", VA = "0x2EECE4")]
	private void _CountMedals(out int numberOfGold, out int numberOfSilver, out int numberOfBronze, int currentGold, int currentSilver, int currnetBronze)
	{
	}
}
[Token(Token = "0x20004A4")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x20004A5")]
	public enum FADER_STATE
	{
		[Token(Token = "0x4001DD3")]
		FadedIn,
		[Token(Token = "0x4001DD4")]
		FadingOut,
		[Token(Token = "0x4001DD5")]
		FadedOut,
		[Token(Token = "0x4001DD6")]
		FadingIn,
		[Token(Token = "0x4001DD7")]
		VisorDown,
		[Token(Token = "0x4001DD8")]
		VisorTransitionUp,
		[Token(Token = "0x4001DD9")]
		VisorUp,
		[Token(Token = "0x4001DDA")]
		VisorTransitionDown
	}

	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1742F4", Offset = "0x1742F4")]
	private sealed class <_TransitionUp>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float transitionTime;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <easedTime>__1;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal ScreenFader $this;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x1700059F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002774")]
			[Address(RVA = "0x2F8778", Offset = "0x2F8778", VA = "0x2F8778", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002775")]
			[Address(RVA = "0x2F8780", Offset = "0x2F8780", VA = "0x2F8780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x2F76D8", Offset = "0x2F76D8", VA = "0x2F76D8")]
		[DebuggerHidden]
		public <_TransitionUp>c__Iterator0()
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x2F84A8", Offset = "0x2F84A8", VA = "0x2F84A8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x2F8788", Offset = "0x2F8788", VA = "0x2F8788", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x2F879C", Offset = "0x2F879C", VA = "0x2F879C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174304", Offset = "0x174304")]
	private sealed class <_TransitionDown>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float transitionTime;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <easedTime>__1;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal ScreenFader $this;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170005A1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600277A")]
			[Address(RVA = "0x2F83FC", Offset = "0x2F83FC", VA = "0x2F83FC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600277B")]
			[Address(RVA = "0x2F8404", Offset = "0x2F8404", VA = "0x2F8404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x2F76E0", Offset = "0x2F76E0", VA = "0x2F76E0")]
		[DebuggerHidden]
		public <_TransitionDown>c__Iterator1()
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x2F8194", Offset = "0x2F8194", VA = "0x2F8194", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x2F840C", Offset = "0x2F840C", VA = "0x2F840C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x2F8420", Offset = "0x2F8420", VA = "0x2F8420", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174314", Offset = "0x174314")]
	private sealed class <_FadeIn>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float fadeTime;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal ScreenFader $this;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170005A3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002780")]
			[Address(RVA = "0x2F7E00", Offset = "0x2F7E00", VA = "0x2F7E00", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002781")]
			[Address(RVA = "0x2F7E08", Offset = "0x2F7E08", VA = "0x2F7E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x2F76E8", Offset = "0x2F76E8", VA = "0x2F76E8")]
		[DebuggerHidden]
		public <_FadeIn>c__Iterator2()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x2F7B98", Offset = "0x2F7B98", VA = "0x2F7B98", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x2F7E10", Offset = "0x2F7E10", VA = "0x2F7E10", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x2F7E24", Offset = "0x2F7E24", VA = "0x2F7E24", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174324", Offset = "0x174324")]
	private sealed class <_FadeOut>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <elapsedTime>__0;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float fadeTime;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal ScreenFader $this;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170005A5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x2F80E8", Offset = "0x2F80E8", VA = "0x2F80E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x2F80F0", Offset = "0x2F80F0", VA = "0x2F80F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x2F76F0", Offset = "0x2F76F0", VA = "0x2F76F0")]
		[DebuggerHidden]
		public <_FadeOut>c__Iterator3()
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x2F7EAC", Offset = "0x2F7EAC", VA = "0x2F7EAC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x2F80F8", Offset = "0x2F80F8", VA = "0x2F80F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x2F810C", Offset = "0x2F810C", VA = "0x2F810C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4001DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioClip m_visorUpClip;

	[Token(Token = "0x4001DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioClip m_visorDownClip;

	[Token(Token = "0x4001DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FADER_STATE m_currentFadeState;

	[Token(Token = "0x4001DC0")]
	public const float FADE_SPEED = 2f;

	[Token(Token = "0x4001DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Material m_fadeMaterial;

	[Token(Token = "0x4001DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color m_fadeColor;

	[Token(Token = "0x4001DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color m_fadedColor;

	[Token(Token = "0x4001DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color m_currentFadedColor;

	[Token(Token = "0x4001DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_drawFade;

	[Token(Token = "0x4001DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_useUIFader;

	[Token(Token = "0x4001DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Image m_uiImage;

	[Token(Token = "0x4001DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_visor;

	[Token(Token = "0x4001DC9")]
	public const float VISOR_SPEED = 0.5f;

	[Token(Token = "0x4001DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool m_isPosedUp;

	[Token(Token = "0x4001DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector3 m_visorUpEuler;

	[Token(Token = "0x4001DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private Vector3 m_visorDownEuler;

	[Token(Token = "0x4001DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isTransitioning;

	[Token(Token = "0x4001DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private YieldInstruction m_fadeInstruction;

	[Token(Token = "0x4001DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScreenFader screenFader;

	[Token(Token = "0x4001DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_muteVisorUpVolume;

	[Token(Token = "0x4001DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_previousVisorUpVolume;

	[Token(Token = "0x1700044A")]
	public FADER_STATE CurrentFadeState
	{
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x2F6318", Offset = "0x2F6318", VA = "0x2F6318")]
		get
		{
			return default(FADER_STATE);
		}
	}

	[Token(Token = "0x1700044B")]
	public bool IsUpdating
	{
		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x2F6320", Offset = "0x2F6320", VA = "0x2F6320")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700044C")]
	public bool IsActive
	{
		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x2F6350", Offset = "0x2F6350", VA = "0x2F6350")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60020C2")]
	[Address(RVA = "0x2F6250", Offset = "0x2F6250", VA = "0x2F6250")]
	public ScreenFader()
	{
	}

	[Token(Token = "0x60020C6")]
	[Address(RVA = "0x2F637C", Offset = "0x2F637C", VA = "0x2F637C")]
	public static ScreenFader Instance()
	{
		return null;
	}

	[Token(Token = "0x60020C7")]
	[Address(RVA = "0x2F65D0", Offset = "0x2F65D0", VA = "0x2F65D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020C8")]
	[Address(RVA = "0x2F6A78", Offset = "0x2F6A78", VA = "0x2F6A78")]
	private void Start()
	{
	}

	[Token(Token = "0x60020C9")]
	[Address(RVA = "0x2F6B78", Offset = "0x2F6B78", VA = "0x2F6B78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60020CA")]
	[Address(RVA = "0x2F6D54", Offset = "0x2F6D54", VA = "0x2F6D54")]
	private void _MountHMD()
	{
	}

	[Token(Token = "0x60020CB")]
	[Address(RVA = "0x2F6D60", Offset = "0x2F6D60", VA = "0x2F6D60")]
	private void _UnmountHMD()
	{
	}

	[Token(Token = "0x60020CC")]
	[Address(RVA = "0x2F6D6C", Offset = "0x2F6D6C", VA = "0x2F6D6C")]
	public void FadeOut(float fadeTime = 2f)
	{
	}

	[Token(Token = "0x60020CD")]
	[Address(RVA = "0x2F6EC8", Offset = "0x2F6EC8", VA = "0x2F6EC8")]
	public void FadeIn(float fadeTime = 2f)
	{
	}

	[Token(Token = "0x60020CE")]
	[Address(RVA = "0x2F7018", Offset = "0x2F7018", VA = "0x2F7018")]
	public void VisorDown(float transitionTime = 0.5f)
	{
	}

	[Token(Token = "0x60020CF")]
	[Address(RVA = "0x2F7338", Offset = "0x2F7338", VA = "0x2F7338")]
	public void VisorUp(float transitionTime = 0.5f)
	{
	}

	[Token(Token = "0x60020D0")]
	[Address(RVA = "0x2F762C", Offset = "0x2F762C", VA = "0x2F762C")]
	[DebuggerHidden]
	private IEnumerator _TransitionUp(float transitionTime)
	{
		return null;
	}

	[Token(Token = "0x60020D1")]
	[Address(RVA = "0x2F728C", Offset = "0x2F728C", VA = "0x2F728C")]
	[DebuggerHidden]
	private IEnumerator _TransitionDown(float transitionTime)
	{
		return null;
	}

	[Token(Token = "0x60020D2")]
	[Address(RVA = "0x2F6F6C", Offset = "0x2F6F6C", VA = "0x2F6F6C")]
	[DebuggerHidden]
	private IEnumerator _FadeIn(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60020D3")]
	[Address(RVA = "0x2F6E1C", Offset = "0x2F6E1C", VA = "0x2F6E1C")]
	[DebuggerHidden]
	private IEnumerator _FadeOut(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60020D4")]
	[Address(RVA = "0x2F723C", Offset = "0x2F723C", VA = "0x2F723C")]
	public void SetVisorDown()
	{
	}

	[Token(Token = "0x60020D5")]
	[Address(RVA = "0x2F755C", Offset = "0x2F755C", VA = "0x2F755C")]
	public void SetVisorUp()
	{
	}

	[Token(Token = "0x60020D6")]
	[Address(RVA = "0x2F7894", Offset = "0x2F7894", VA = "0x2F7894")]
	public void SetVisorRotation(float input)
	{
	}

	[Token(Token = "0x60020D7")]
	[Address(RVA = "0x2F6DE8", Offset = "0x2F6DE8", VA = "0x2F6DE8")]
	public void SetFadedOut()
	{
	}

	[Token(Token = "0x60020D8")]
	[Address(RVA = "0x2F6F4C", Offset = "0x2F6F4C", VA = "0x2F6F4C")]
	public void SetFadedIn()
	{
	}

	[Token(Token = "0x60020D9")]
	[Address(RVA = "0x2F78D8", Offset = "0x2F78D8", VA = "0x2F78D8")]
	public void SetFadeColor(Color color)
	{
	}

	[Token(Token = "0x60020DA")]
	[Address(RVA = "0x2F78E8", Offset = "0x2F78E8", VA = "0x2F78E8")]
	public void ResetFadeColor()
	{
	}

	[Token(Token = "0x60020DB")]
	[Address(RVA = "0x2F76F8", Offset = "0x2F76F8", VA = "0x2F76F8")]
	private void _AdvanceVisorPosition(float nTime)
	{
	}

	[Token(Token = "0x60020DC")]
	[Address(RVA = "0x2F79CC", Offset = "0x2F79CC", VA = "0x2F79CC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60020DD")]
	[Address(RVA = "0x2F7B20", Offset = "0x2F7B20", VA = "0x2F7B20")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004A6")]
public class SetComfortTrigger : MonoBehaviour
{
	[Token(Token = "0x4001DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Selected;

	[Token(Token = "0x4001DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject IsCurrentIndicator;

	[Token(Token = "0x4001DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SiteBlocker.MODE currentComfortType;

	[Token(Token = "0x4001DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameManager gameManager;

	[Token(Token = "0x4001DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool WillShowIndicator;

	[Token(Token = "0x4001DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbablePropSelector m_grabbablePropSelector;

	[Token(Token = "0x4001DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isHighlighted;

	[Token(Token = "0x60020DE")]
	[Address(RVA = "0x2F8C04", Offset = "0x2F8C04", VA = "0x2F8C04")]
	public SetComfortTrigger()
	{
	}

	[Token(Token = "0x60020DF")]
	[Address(RVA = "0x2F8C1C", Offset = "0x2F8C1C", VA = "0x2F8C1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020E0")]
	[Address(RVA = "0x2F8C74", Offset = "0x2F8C74", VA = "0x2F8C74")]
	private void Start()
	{
	}

	[Token(Token = "0x60020E1")]
	[Address(RVA = "0x2F8CF8", Offset = "0x2F8CF8", VA = "0x2F8CF8")]
	public void Update()
	{
	}

	[Token(Token = "0x60020E2")]
	[Address(RVA = "0x2F8DE4", Offset = "0x2F8DE4", VA = "0x2F8DE4")]
	public void SetSelector(GrabbablePropSelector selector)
	{
	}

	[Token(Token = "0x60020E3")]
	[Address(RVA = "0x2F8DEC", Offset = "0x2F8DEC", VA = "0x2F8DEC")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x60020E4")]
	[Address(RVA = "0x2F99AC", Offset = "0x2F99AC", VA = "0x2F99AC")]
	public void SetAsActiveComfortTrigger(bool showIndicator = false)
	{
	}

	[Token(Token = "0x60020E5")]
	[Address(RVA = "0x2FA364", Offset = "0x2FA364", VA = "0x2FA364")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x60020E6")]
	[Address(RVA = "0x2FA458", Offset = "0x2FA458", VA = "0x2FA458")]
	public void OffGaze()
	{
	}

	[Token(Token = "0x60020E7")]
	[Address(RVA = "0x2F8D40", Offset = "0x2F8D40", VA = "0x2F8D40")]
	private void initActiveIndicator()
	{
	}

	[Token(Token = "0x60020E8")]
	[Address(RVA = "0x2FA45C", Offset = "0x2FA45C", VA = "0x2FA45C")]
	public void Highlight(bool isHighlighted)
	{
	}
}
[Token(Token = "0x20004A7")]
public class SetFlightControls : MonoBehaviour
{
	[Token(Token = "0x4001DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4001DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private FLIGHT_CONTROL_TYPE m_flightControlType;

	[Token(Token = "0x4001DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_controllerHighlight;

	[Token(Token = "0x4001DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_controllerSelector;

	[Token(Token = "0x4001DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_willShowIndicator;

	[Token(Token = "0x4001DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbablePropSelector m_grabbablePropSelector;

	[Token(Token = "0x1700044D")]
	public FLIGHT_CONTROL_TYPE FlightControlType
	{
		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x2FA7AC", Offset = "0x2FA7AC", VA = "0x2FA7AC")]
		get
		{
			return default(FLIGHT_CONTROL_TYPE);
		}
	}

	[Token(Token = "0x1700044E")]
	public GameObject ControllerSelector
	{
		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x2FA7B4", Offset = "0x2FA7B4", VA = "0x2FA7B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020E9")]
	[Address(RVA = "0x2FA464", Offset = "0x2FA464", VA = "0x2FA464")]
	public SetFlightControls()
	{
	}

	[Token(Token = "0x60020EA")]
	[Address(RVA = "0x2FA474", Offset = "0x2FA474", VA = "0x2FA474")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020EB")]
	[Address(RVA = "0x2FA49C", Offset = "0x2FA49C", VA = "0x2FA49C")]
	private void Start()
	{
	}

	[Token(Token = "0x60020EC")]
	[Address(RVA = "0x2FA4A0", Offset = "0x2FA4A0", VA = "0x2FA4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60020ED")]
	[Address(RVA = "0x2FA478", Offset = "0x2FA478", VA = "0x2FA478")]
	private void _Initialize()
	{
	}

	[Token(Token = "0x60020EE")]
	[Address(RVA = "0x2FA60C", Offset = "0x2FA60C", VA = "0x2FA60C")]
	private void _SetHiddenOnAwake()
	{
	}

	[Token(Token = "0x60020F1")]
	[Address(RVA = "0x2FA664", Offset = "0x2FA664", VA = "0x2FA664")]
	private void _GetGameManager()
	{
	}

	[Token(Token = "0x60020F2")]
	[Address(RVA = "0x2FA6E8", Offset = "0x2FA6E8", VA = "0x2FA6E8")]
	private void _LoadFlightControls()
	{
	}

	[Token(Token = "0x60020F3")]
	[Address(RVA = "0x2FA7BC", Offset = "0x2FA7BC", VA = "0x2FA7BC")]
	private void _SetupFlightControls(FLIGHT_CONTROL_TYPE currentControlType)
	{
	}

	[Token(Token = "0x60020F4")]
	[Address(RVA = "0x2FA7C0", Offset = "0x2FA7C0", VA = "0x2FA7C0")]
	public void ShowIndicator(bool isShowing)
	{
	}

	[Token(Token = "0x60020F5")]
	[Address(RVA = "0x2FA7C8", Offset = "0x2FA7C8", VA = "0x2FA7C8")]
	public void SetSelector(GrabbablePropSelector selector)
	{
	}

	[Token(Token = "0x60020F6")]
	[Address(RVA = "0x2FA7D0", Offset = "0x2FA7D0", VA = "0x2FA7D0")]
	public void Select()
	{
	}

	[Token(Token = "0x60020F7")]
	[Address(RVA = "0x2FA4A4", Offset = "0x2FA4A4", VA = "0x2FA4A4")]
	private void _UpdateSelector()
	{
	}

	[Token(Token = "0x60020F8")]
	[Address(RVA = "0x2FAA1C", Offset = "0x2FAA1C", VA = "0x2FAA1C")]
	private void OnGaze()
	{
	}

	[Token(Token = "0x60020F9")]
	[Address(RVA = "0x2FAB1C", Offset = "0x2FAB1C", VA = "0x2FAB1C")]
	private void OffGaze()
	{
	}

	[Token(Token = "0x60020FA")]
	[Address(RVA = "0x2FAB24", Offset = "0x2FAB24", VA = "0x2FAB24")]
	private void OnButtonA()
	{
	}

	[Token(Token = "0x60020FB")]
	[Address(RVA = "0x2FAA24", Offset = "0x2FAA24", VA = "0x2FAA24")]
	private void _Highlight(bool isHighlighted)
	{
	}
}
[Token(Token = "0x20004A8")]
public class ShredderTrigger : MonoBehaviour
{
	[Token(Token = "0x4001DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject selected;

	[Token(Token = "0x4001DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ControllerSaveComputer targetComputer;

	[Token(Token = "0x4001DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ControllerDiskShredder targetShredder;

	[Token(Token = "0x60020FC")]
	[Address(RVA = "0x2FC6B8", Offset = "0x2FC6B8", VA = "0x2FC6B8")]
	public ShredderTrigger()
	{
	}

	[Token(Token = "0x60020FD")]
	[Address(RVA = "0x2FC6C0", Offset = "0x2FC6C0", VA = "0x2FC6C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020FE")]
	[Address(RVA = "0x2FC6F4", Offset = "0x2FC6F4", VA = "0x2FC6F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020FF")]
	[Address(RVA = "0x2FC7E8", Offset = "0x2FC7E8", VA = "0x2FC7E8")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6002100")]
	[Address(RVA = "0x2FC934", Offset = "0x2FC934", VA = "0x2FC934")]
	public void LockDiskInShredder(ControllerSaveDisk disk)
	{
	}

	[Token(Token = "0x6002101")]
	[Address(RVA = "0x2FCA1C", Offset = "0x2FCA1C", VA = "0x2FCA1C")]
	public void OnButtonB()
	{
	}

	[Token(Token = "0x6002102")]
	[Address(RVA = "0x2FCB80", Offset = "0x2FCB80", VA = "0x2FCB80")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6002103")]
	[Address(RVA = "0x2FC6C4", Offset = "0x2FC6C4", VA = "0x2FC6C4")]
	public void OffGaze()
	{
	}
}
[Token(Token = "0x20004A9")]
public class TabletTrigger : MonoBehaviour
{
	[Token(Token = "0x4001DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TabletInput tabletInstance;

	[Token(Token = "0x4001DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 holdOffset;

	[Token(Token = "0x4001DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 lookOffset;

	[Token(Token = "0x4001DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _cameraTransform;

	[Token(Token = "0x4001DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform _tabletTransform;

	[Token(Token = "0x4001DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _holdingTablet;

	[Token(Token = "0x4001DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float pictureTriggered;

	[Token(Token = "0x4001DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InteractableInput m_takePhotoInteractableInput;

	[Token(Token = "0x4001DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private InteractableInput m_dropCameraInteractableInput;

	[Token(Token = "0x6002104")]
	[Address(RVA = "0x2CA618", Offset = "0x2CA618", VA = "0x2CA618")]
	public TabletTrigger()
	{
	}

	[Token(Token = "0x6002105")]
	[Address(RVA = "0x2CA6B4", Offset = "0x2CA6B4", VA = "0x2CA6B4")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6002106")]
	[Address(RVA = "0x2CA90C", Offset = "0x2CA90C", VA = "0x2CA90C")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6002107")]
	[Address(RVA = "0x2CA948", Offset = "0x2CA948", VA = "0x2CA948")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004AA")]
public class TriggerHelmetTrigger : MonoBehaviour
{
	[Token(Token = "0x4001DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string sceneToLoad;

	[Token(Token = "0x4001DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int progressMeterSpeed;

	[Token(Token = "0x4001DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject selected;

	[Token(Token = "0x4001DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject progressMeter;

	[Token(Token = "0x4001DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LoadingRoom m_loadingRoom;

	[Token(Token = "0x4001DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool levelIsLoading;

	[Token(Token = "0x4001DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TriggerHelmetTrigger m_triggerHelmetTrigger;

	[Token(Token = "0x6002108")]
	[Address(RVA = "0x37F9D8", Offset = "0x37F9D8", VA = "0x37F9D8")]
	public TriggerHelmetTrigger()
	{
	}

	[Token(Token = "0x6002109")]
	[Address(RVA = "0x37F9E8", Offset = "0x37F9E8", VA = "0x37F9E8")]
	public static TriggerHelmetTrigger Instance()
	{
		return null;
	}

	[Token(Token = "0x600210A")]
	[Address(RVA = "0x37FBE0", Offset = "0x37FBE0", VA = "0x37FBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600210B")]
	[Address(RVA = "0x37FBE4", Offset = "0x37FBE4", VA = "0x37FBE4")]
	private void InitTrigger()
	{
	}

	[Token(Token = "0x600210C")]
	[Address(RVA = "0x37FC44", Offset = "0x37FC44", VA = "0x37FC44")]
	public void Update()
	{
	}

	[Token(Token = "0x600210D")]
	[Address(RVA = "0x37FF28", Offset = "0x37FF28", VA = "0x37FF28")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x600210E")]
	[Address(RVA = "0x37FF68", Offset = "0x37FF68", VA = "0x37FF68")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x600210F")]
	[Address(RVA = "0x37FF98", Offset = "0x37FF98", VA = "0x37FF98")]
	public void OffGaze()
	{
	}
}
[Token(Token = "0x20004AB")]
public class UnpauseTrigger : MonoBehaviour
{
	[Token(Token = "0x4001DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int progressMeterSpeed;

	[Token(Token = "0x4001DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject selected;

	[Token(Token = "0x4001DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject progressMeter;

	[Token(Token = "0x4001DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isUnpausing;

	[Token(Token = "0x4001DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameManager gameManager;

	[Token(Token = "0x6002110")]
	[Address(RVA = "0x38C668", Offset = "0x38C668", VA = "0x38C668")]
	public UnpauseTrigger()
	{
	}

	[Token(Token = "0x6002111")]
	[Address(RVA = "0x38C678", Offset = "0x38C678", VA = "0x38C678")]
	private void Start()
	{
	}

	[Token(Token = "0x6002112")]
	[Address(RVA = "0x38C6FC", Offset = "0x38C6FC", VA = "0x38C6FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002113")]
	[Address(RVA = "0x38C708", Offset = "0x38C708", VA = "0x38C708")]
	private void Update()
	{
	}

	[Token(Token = "0x6002114")]
	[Address(RVA = "0x38C9D4", Offset = "0x38C9D4", VA = "0x38C9D4")]
	public void OnButtonA()
	{
	}

	[Token(Token = "0x6002115")]
	[Address(RVA = "0x38C9FC", Offset = "0x38C9FC", VA = "0x38C9FC")]
	public void OnGaze()
	{
	}

	[Token(Token = "0x6002116")]
	[Address(RVA = "0x38CA38", Offset = "0x38CA38", VA = "0x38CA38")]
	public void OffGaze()
	{
	}
}
[Token(Token = "0x20004AC")]
public class AircraftAttachment : MonoBehaviour
{
	[Token(Token = "0x4001E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool m_controllable;

	[Token(Token = "0x6002117")]
	[Address(RVA = "0x4220DC", Offset = "0x4220DC", VA = "0x4220DC")]
	public AircraftAttachment()
	{
	}

	[Token(Token = "0x6002118")]
	[Address(RVA = "0x4220E4", Offset = "0x4220E4", VA = "0x4220E4")]
	public void SetControllable(bool enable)
	{
	}
}
[Token(Token = "0x20004AD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x17305C", Offset = "0x17305C")]
public class AircraftCamera : MonoBehaviour
{
	[Token(Token = "0x4001E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool CameraActive;

	[Token(Token = "0x6002119")]
	[Address(RVA = "0x4220F4", Offset = "0x4220F4", VA = "0x4220F4")]
	public AircraftCamera()
	{
	}

	[Token(Token = "0x600211A")]
	[Address(RVA = "0x4220FC", Offset = "0x4220FC", VA = "0x4220FC")]
	public void SetCameraActive(bool active)
	{
	}

	[Token(Token = "0x600211B")]
	[Address(RVA = "0x422130", Offset = "0x422130", VA = "0x422130", Slot = "4")]
	protected virtual void OnCameraEnabled()
	{
	}

	[Token(Token = "0x600211C")]
	[Address(RVA = "0x422134", Offset = "0x422134", VA = "0x422134", Slot = "5")]
	protected virtual void OnCameraDisabled()
	{
	}
}
[Token(Token = "0x20004AE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1730A4", Offset = "0x1730A4")]
public class ArtificalHorizon : MonoBehaviour
{
	[Token(Token = "0x4001E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform artificalHorizon;

	[Token(Token = "0x4001E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform root;

	[Token(Token = "0x4001E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float xCorrection;

	[Token(Token = "0x600211D")]
	[Address(RVA = "0x42D0B4", Offset = "0x42D0B4", VA = "0x42D0B4")]
	public ArtificalHorizon()
	{
	}

	[Token(Token = "0x600211E")]
	[Address(RVA = "0x42D0BC", Offset = "0x42D0BC", VA = "0x42D0BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600211F")]
	[Address(RVA = "0x42D0F0", Offset = "0x42D0F0", VA = "0x42D0F0")]
	public void Update()
	{
	}
}
[Token(Token = "0x20004AF")]
public class Compass2D : MonoBehaviour
{
	[Token(Token = "0x4001E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_compassElement;

	[Token(Token = "0x4001E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_compassDirectionIndicator;

	[Token(Token = "0x4001E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_waypoint;

	[Token(Token = "0x4001E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Compass2D m_compass2D;

	[Token(Token = "0x1700044F")]
	public Transform Waypoint
	{
		[Token(Token = "0x6002121")]
		[Address(RVA = "0x30D914", Offset = "0x30D914", VA = "0x30D914")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002120")]
	[Address(RVA = "0x30D90C", Offset = "0x30D90C", VA = "0x30D90C")]
	public Compass2D()
	{
	}

	[Token(Token = "0x6002122")]
	[Address(RVA = "0x30D91C", Offset = "0x30D91C", VA = "0x30D91C")]
	public static Compass2D Instance()
	{
		return null;
	}

	[Token(Token = "0x6002123")]
	[Address(RVA = "0x30DB14", Offset = "0x30DB14", VA = "0x30DB14")]
	private void Update()
	{
	}

	[Token(Token = "0x6002124")]
	[Address(RVA = "0x30DF74", Offset = "0x30DF74", VA = "0x30DF74")]
	public void SetWayPoint([Optional] Transform waypoint)
	{
	}
}
[Token(Token = "0x20004B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1730F4", Offset = "0x1730F4")]
public class ControlStick : MonoBehaviour
{
	[Token(Token = "0x4001E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform ControlTransform;

	[Token(Token = "0x4001E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useTouchInput;

	[Token(Token = "0x4001E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool overrideInput;

	[Token(Token = "0x4001E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float inputOverride;

	[Token(Token = "0x4001E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputController ControllerAxis;

	[Token(Token = "0x4001E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxDeflectionDegrees;

	[Token(Token = "0x4001E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 ControlAxis;

	[Token(Token = "0x4001E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 InitialRotation;

	[Token(Token = "0x4001E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CurrentDeflection;

	[Token(Token = "0x6002125")]
	[Address(RVA = "0x310D20", Offset = "0x310D20", VA = "0x310D20")]
	public ControlStick()
	{
	}

	[Token(Token = "0x6002126")]
	[Address(RVA = "0x310E2C", Offset = "0x310E2C", VA = "0x310E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6002127")]
	[Address(RVA = "0x310EA0", Offset = "0x310EA0", VA = "0x310EA0")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004B1")]
public class ControlStickInput : AircraftAttachment
{
	[Token(Token = "0x4001E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ControlStick ControlStickUsed;

	[Token(Token = "0x4001E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool InvertControlStickInput;

	[Token(Token = "0x4001E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool InvertControlStickCenterLerp;

	[Token(Token = "0x4001E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool UseTouchAsController;

	[Token(Token = "0x4001E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool InvertTouchAsController;

	[Token(Token = "0x4001E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AlternateTouchInput;

	[Token(Token = "0x4001E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public InputController PrimaryControllerAxis;

	[Token(Token = "0x4001E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputController SecondaryControllerAxis;

	[Token(Token = "0x4001E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public InputManager.Axis TouchAxisA;

	[Token(Token = "0x4001E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputManager.Axis TouchAxisB;

	[Token(Token = "0x4001E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool InvertTouchInput;

	[Token(Token = "0x4001E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float input;

	[Token(Token = "0x4001E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected CONTROLLER currentController;

	[Token(Token = "0x4001E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x6002128")]
	[Address(RVA = "0x311088", Offset = "0x311088", VA = "0x311088")]
	public ControlStickInput()
	{
	}

	[Token(Token = "0x6002129")]
	[Address(RVA = "0x311128", Offset = "0x311128", VA = "0x311128", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600212A")]
	[Address(RVA = "0x311440", Offset = "0x311440", VA = "0x311440")]
	protected float GetInput()
	{
		return default(float);
	}
}
[Token(Token = "0x20004B2")]
public class NeedleInstrument : MonoBehaviour
{
	[Token(Token = "0x20004B3")]
	public enum INSTRUMENT_SOURCE
	{
		[Token(Token = "0x4001E2A")]
		AirspeedKnots,
		[Token(Token = "0x4001E2B")]
		AltitudeThousandsFeet,
		[Token(Token = "0x4001E2C")]
		AltitudeHundredsFeet,
		[Token(Token = "0x4001E2D")]
		RateOfClimbFPM,
		[Token(Token = "0x4001E2E")]
		EngineRPM,
		[Token(Token = "0x4001E2F")]
		Heading,
		[Token(Token = "0x4001E30")]
		Bank
	}

	[Token(Token = "0x4001E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private INSTRUMENT_SOURCE m_source;

	[Token(Token = "0x4001E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject m_needle;

	[Token(Token = "0x4001E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_minValue;

	[Token(Token = "0x4001E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_maxValue;

	[Token(Token = "0x4001E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_minAngleDegrees;

	[Token(Token = "0x4001E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_maxAngleDegrees;

	[Token(Token = "0x4001E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 m_rotationAxis;

	[Token(Token = "0x4001E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion InitialRotation;

	[Token(Token = "0x4001E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerAircraft ParentAircraft;

	[Token(Token = "0x600212B")]
	[Address(RVA = "0x365D08", Offset = "0x365D08", VA = "0x365D08")]
	public NeedleInstrument()
	{
	}

	[Token(Token = "0x600212C")]
	[Address(RVA = "0x365E00", Offset = "0x365E00", VA = "0x365E00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600212D")]
	[Address(RVA = "0x365F54", Offset = "0x365F54", VA = "0x365F54")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004B4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x173140", Offset = "0x173140")]
public class RudderPedal : MonoBehaviour
{
	[Token(Token = "0x4001E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 TranslateAxis;

	[Token(Token = "0x4001E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeflectionMeters;

	[Token(Token = "0x4001E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public InputController Controller;

	[Token(Token = "0x4001E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 InitialPosition;

	[Token(Token = "0x600212E")]
	[Address(RVA = "0x2E322C", Offset = "0x2E322C", VA = "0x2E322C")]
	public RudderPedal()
	{
	}

	[Token(Token = "0x600212F")]
	[Address(RVA = "0x2E3318", Offset = "0x2E3318", VA = "0x2E3318")]
	private void Start()
	{
	}

	[Token(Token = "0x6002130")]
	[Address(RVA = "0x2E3374", Offset = "0x2E3374", VA = "0x2E3374")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004B5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x17318C", Offset = "0x17318C")]
public class Yoke : AircraftAttachment
{
	[Token(Token = "0x4001E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float MaxPitchTranslationMeters;

	[Token(Token = "0x4001E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MaxRollDeflectionDegrees;

	[Token(Token = "0x4001E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 PitchAxis;

	[Token(Token = "0x4001E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RollAxis;

	[Token(Token = "0x4001E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public InputController PitchController;

	[Token(Token = "0x4001E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public InputController RollController;

	[Token(Token = "0x4001E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 InitialPosition;

	[Token(Token = "0x4001E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion InitialRotation;

	[Token(Token = "0x6002131")]
	[Address(RVA = "0x73DE7C", Offset = "0x73DE7C", VA = "0x73DE7C")]
	public Yoke()
	{
	}

	[Token(Token = "0x6002132")]
	[Address(RVA = "0x73E030", Offset = "0x73E030", VA = "0x73E030")]
	private void Start()
	{
	}

	[Token(Token = "0x6002133")]
	[Address(RVA = "0x73E0E4", Offset = "0x73E0E4", VA = "0x73E0E4")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004B6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1731D0", Offset = "0x1731D0")]
public class Aerofoil : MonoBehaviour
{
	[Token(Token = "0x4001E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve CL;

	[Token(Token = "0x4001E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve CD;

	[Token(Token = "0x4001E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnimationCurve CM;

	[Token(Token = "0x6002134")]
	[Address(RVA = "0x420CE8", Offset = "0x420CE8", VA = "0x420CE8")]
	public Aerofoil()
	{
	}
}
[Token(Token = "0x20004B7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x173218", Offset = "0x173218")]
public class CenterOfGravity : AircraftAttachment
{
	[Token(Token = "0x4001E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Rigidbody Parent;

	[Token(Token = "0x6002135")]
	[Address(RVA = "0x308248", Offset = "0x308248", VA = "0x308248")]
	public CenterOfGravity()
	{
	}

	[Token(Token = "0x6002136")]
	[Address(RVA = "0x308250", Offset = "0x308250", VA = "0x308250")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002137")]
	[Address(RVA = "0x308340", Offset = "0x308340", VA = "0x308340")]
	private void _UpdateCoG()
	{
	}

	[Token(Token = "0x6002138")]
	[Address(RVA = "0x30849C", Offset = "0x30849C", VA = "0x30849C")]
	public void OnDrawGizmos()
	{
	}
}
[Token(Token = "0x20004B8")]
public class ControlSurface : AircraftAttachment
{
	[Token(Token = "0x4001E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float MaxDeflectionDegrees;

	[Token(Token = "0x4001E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float RootHingeDistanceFromTrailingEdge;

	[Token(Token = "0x4001E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TipHingeDistanceFromTrailingEdge;

	[Token(Token = "0x4001E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool[] AffectedSections;

	[Token(Token = "0x4001E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x4001E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 ModelRotationAxis;

	[Token(Token = "0x4001E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ModelRotationProportion;

	[Token(Token = "0x4001E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_invertMirrorInput;

	[Token(Token = "0x4001E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool m_hasTrim;

	[Token(Token = "0x4001E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[SerializeField]
	private bool m_trimScalesOnKnifeEdge;

	[Token(Token = "0x4001E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_trimLowSpeed;

	[Token(Token = "0x4001E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_trimHighSpeed;

	[Token(Token = "0x4001E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_deflectionLow;

	[Token(Token = "0x4001E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_deflectionHigh;

	[Token(Token = "0x4001E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_currentDeflectionTrim;

	[Token(Token = "0x4001E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion m_initialModelRotation;

	[Token(Token = "0x4001E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private MirrorWing m_mirrorWing;

	[Token(Token = "0x4001E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ControlSurface MirroredControlSurface;

	[Token(Token = "0x4001E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float CurrentDeflection;

	[Token(Token = "0x4001E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool ControlInputOverride;

	[Token(Token = "0x4001E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float ControlInputOverrideValue;

	[Token(Token = "0x4001E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x17000450")]
	public InteractableInput InteractableInput
	{
		[Token(Token = "0x600213A")]
		[Address(RVA = "0x30F024", Offset = "0x30F024", VA = "0x30F024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000451")]
	public float CurrentDeflectionWithTrim
	{
		[Token(Token = "0x600213B")]
		[Address(RVA = "0x31193C", Offset = "0x31193C", VA = "0x31193C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6002139")]
	[Address(RVA = "0x31182C", Offset = "0x31182C", VA = "0x31182C")]
	public ControlSurface()
	{
	}

	[Token(Token = "0x600213C")]
	[Address(RVA = "0x311950", Offset = "0x311950", VA = "0x311950")]
	private void Start()
	{
	}

	[Token(Token = "0x600213D")]
	[Address(RVA = "0x311C58", Offset = "0x311C58", VA = "0x311C58")]
	public void Update()
	{
	}

	[Token(Token = "0x600213E")]
	[Address(RVA = "0x311EF0", Offset = "0x311EF0", VA = "0x311EF0")]
	public void updateTrimDeflection()
	{
	}

	[Token(Token = "0x600213F")]
	[Address(RVA = "0x312190", Offset = "0x312190", VA = "0x312190")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6002140")]
	[Address(RVA = "0x312194", Offset = "0x312194", VA = "0x312194")]
	private void ClampEditorValues()
	{
	}
}
[Token(Token = "0x20004B9")]
public class DragModifier : MonoBehaviour
{
	[Token(Token = "0x4001E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private ControlSurface m_controlSurface;

	[Token(Token = "0x4001E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_additionalSurfaceDrag;

	[Token(Token = "0x4001E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 m_dragSpeedRange;

	[Token(Token = "0x4001E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_ridgidBody;

	[Token(Token = "0x4001E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_initialDrag;

	[Token(Token = "0x6002141")]
	[Address(RVA = "0x3C87D0", Offset = "0x3C87D0", VA = "0x3C87D0")]
	public DragModifier()
	{
	}

	[Token(Token = "0x6002142")]
	[Address(RVA = "0x3C8834", Offset = "0x3C8834", VA = "0x3C8834")]
	private void Start()
	{
	}

	[Token(Token = "0x6002143")]
	[Address(RVA = "0x3C8D08", Offset = "0x3C8D08", VA = "0x3C8D08")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004BA")]
public class Engine : AircraftAttachment
{
	[Token(Token = "0x20004BB")]
	public enum ENGINE_STATE
	{
		[Token(Token = "0x4001E7C")]
		Off,
		[Token(Token = "0x4001E7D")]
		Starting,
		[Token(Token = "0x4001E7E")]
		On,
		[Token(Token = "0x4001E7F")]
		Stopping
	}

	[Token(Token = "0x4001E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected ENGINE_STATE m_currentEngineState;

	[Token(Token = "0x4001E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected float m_currentDeflection;

	[Token(Token = "0x4001E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Rigidbody m_ridgidBody;

	[Token(Token = "0x4001E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Transform m_animatedEngineTrans;

	[Token(Token = "0x4001E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 m_animatedTransformVector;

	[Token(Token = "0x4001E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject[] m_animatedGameObjects;

	[Token(Token = "0x4001E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17EB94", Offset = "0x17EB94")]
	private float m_transitionStart;

	[Token(Token = "0x4001E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x17EBCC", Offset = "0x17EBCC")]
	private float m_transitionEnd;

	[Token(Token = "0x4001E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_transitionState;

	[Token(Token = "0x4001E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_engineStartTime;

	[Token(Token = "0x4001E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_currentEngineRPM;

	[Token(Token = "0x4001E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float m_maxEngineRPM;

	[Token(Token = "0x4001E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_desiredEngineRPM;

	[Token(Token = "0x4001E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected float m_idleEngineRPM;

	[Token(Token = "0x4001E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float m_engineLerpRPM;

	[Token(Token = "0x4001E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float m_forceAtMaxEngineRPM;

	[Token(Token = "0x4001E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve m_forceAppliedVSAirspeedKTS;

	[Token(Token = "0x4001E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Vector3 m_vectoredThrust;

	[Token(Token = "0x4001E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_torque;

	[Token(Token = "0x4001E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	protected float m_maxWheelTorque;

	[Token(Token = "0x4001E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float m_desiredWheelTorque;

	[Token(Token = "0x4001E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private WheelCollider[] m_aircraftWheels;

	[Token(Token = "0x4001E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected float m_rpmToAddPerKTOfSpeed;

	[Token(Token = "0x4001E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	protected float m_rpmForMaxAudioThrottle;

	[Token(Token = "0x4001E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float m_normalizedAudioThrottle;

	[Token(Token = "0x4001E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected InteractableInput m_interactableInput;

	[Token(Token = "0x4001E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x4001E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Engine engine;

	[Token(Token = "0x17000452")]
	public ENGINE_STATE CurrentEngineState
	{
		[Token(Token = "0x6002145")]
		[Address(RVA = "0x3CF6C4", Offset = "0x3CF6C4", VA = "0x3CF6C4")]
		get
		{
			return default(ENGINE_STATE);
		}
		[Token(Token = "0x6002146")]
		[Address(RVA = "0x3CF6CC", Offset = "0x3CF6CC", VA = "0x3CF6CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000453")]
	public float CurrentDeflection
	{
		[Token(Token = "0x6002147")]
		[Address(RVA = "0x3CF6D4", Offset = "0x3CF6D4", VA = "0x3CF6D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000454")]
	public float EngineStartTime
	{
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x3CF6DC", Offset = "0x3CF6DC", VA = "0x3CF6DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002149")]
		[Address(RVA = "0x3CF6E4", Offset = "0x3CF6E4", VA = "0x3CF6E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000455")]
	public float CurrentEngineRPM
	{
		[Token(Token = "0x600214A")]
		[Address(RVA = "0x3CF6EC", Offset = "0x3CF6EC", VA = "0x3CF6EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000456")]
	public float MaxEngineRPM
	{
		[Token(Token = "0x600214B")]
		[Address(RVA = "0x3CF6F4", Offset = "0x3CF6F4", VA = "0x3CF6F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000457")]
	public AnimationCurve ForceAppliedVSAirspeedKTS
	{
		[Token(Token = "0x600214C")]
		[Address(RVA = "0x3CF6FC", Offset = "0x3CF6FC", VA = "0x3CF6FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600214D")]
		[Address(RVA = "0x3CF704", Offset = "0x3CF704", VA = "0x3CF704")]
		set
		{
		}
	}

	[Token(Token = "0x17000458")]
	public Vector3 VectoredThrust
	{
		[Token(Token = "0x600214E")]
		[Address(RVA = "0x3CF70C", Offset = "0x3CF70C", VA = "0x3CF70C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000459")]
	public float NormalizedAudioThrottle
	{
		[Token(Token = "0x600214F")]
		[Address(RVA = "0x3CF720", Offset = "0x3CF720", VA = "0x3CF720")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002150")]
		[Address(RVA = "0x3CF728", Offset = "0x3CF728", VA = "0x3CF728")]
		set
		{
		}
	}

	[Token(Token = "0x1700045A")]
	public InteractableInput InteractableInput
	{
		[Token(Token = "0x6002151")]
		[Address(RVA = "0x3CF730", Offset = "0x3CF730", VA = "0x3CF730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002144")]
	[Address(RVA = "0x3CF5A0", Offset = "0x3CF5A0", VA = "0x3CF5A0")]
	public Engine()
	{
	}

	[Token(Token = "0x6002152")]
	[Address(RVA = "0x3CF738", Offset = "0x3CF738", VA = "0x3CF738")]
	public static Engine Instance()
	{
		return null;
	}

	[Token(Token = "0x6002153")]
	[Address(RVA = "0x3CF920", Offset = "0x3CF920", VA = "0x3CF920", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6002154")]
	[Address(RVA = "0x3CF9D4", Offset = "0x3CF9D4", VA = "0x3CF9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6002155")]
	[Address(RVA = "0x3CFC04", Offset = "0x3CFC04", VA = "0x3CFC04", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6002156")]
	[Address(RVA = "0x3D0094", Offset = "0x3D0094", VA = "0x3D0094")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6002157")]
	[Address(RVA = "0x3D0420", Offset = "0x3D0420", VA = "0x3D0420")]
	public void InitAsOn()
	{
	}

	[Token(Token = "0x6002158")]
	[Address(RVA = "0x3D042C", Offset = "0x3D042C", VA = "0x3D042C")]
	public void InitAsOff()
	{
	}

	[Token(Token = "0x6002159")]
	[Address(RVA = "0x3CFCF4", Offset = "0x3CFCF4", VA = "0x3CFCF4")]
	private void _SetAudioThrottle()
	{
	}

	[Token(Token = "0x600215A")]
	[Address(RVA = "0x3CFDD4", Offset = "0x3CFDD4", VA = "0x3CFDD4")]
	private void _SetAnimatedAdvance()
	{
	}

	[Token(Token = "0x600215B")]
	[Address(RVA = "0x3D0438", Offset = "0x3D0438", VA = "0x3D0438")]
	public static Engine FindEngine(Transform transform, Engine engine)
	{
		return null;
	}

	[Token(Token = "0x600215C")]
	[Address(RVA = "0x3D084C", Offset = "0x3D084C", VA = "0x3D084C")]
	public void OnDrawGizmos()
	{
	}
}
[Token(Token = "0x20004BC")]
public class EngineCombustion : Engine
{
	[Token(Token = "0x600215D")]
	[Address(RVA = "0x3D4888", Offset = "0x3D4888", VA = "0x3D4888")]
	public EngineCombustion()
	{
	}

	[Token(Token = "0x600215E")]
	[Address(RVA = "0x3D488C", Offset = "0x3D488C", VA = "0x3D488C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600215F")]
	[Address(RVA = "0x3D49D8", Offset = "0x3D49D8", VA = "0x3D49D8")]
	private void UpdateDeflection()
	{
	}

	[Token(Token = "0x6002160")]
	[Address(RVA = "0x3D4A28", Offset = "0x3D4A28", VA = "0x3D4A28")]
	private void UpdateOff()
	{
	}

	[Token(Token = "0x6002161")]
	[Address(RVA = "0x3D4A38", Offset = "0x3D4A38", VA = "0x3D4A38")]
	private void UpdateStarting()
	{
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0x3D4A4C", Offset = "0x3D4A4C", VA = "0x3D4A4C")]
	private void UpdateOn()
	{
	}

	[Token(Token = "0x6002163")]
	[Address(RVA = "0x3D4AC4", Offset = "0x3D4AC4", VA = "0x3D4AC4")]
	private void UpdateStopping()
	{
	}
}
[Token(Token = "0x20004BD")]
public class EngineRocket : Engine
{
	[Token(Token = "0x4001E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_rocketStartTime;

	[Token(Token = "0x4001E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float m_rocketBurnTime;

	[Token(Token = "0x4001E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private InteractableInput m_ignitionGuage;

	[Token(Token = "0x4001E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private InteractableInput m_fuelGuage;

	[Token(Token = "0x4001E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private InteractableInput m_magnetoGuage;

	[Token(Token = "0x4001E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_isRocketOn;

	[Token(Token = "0x4001E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool m_isRocketStarted;

	[Token(Token = "0x4001E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public UnityEvent OnFirstIgniteRocket;

	[Token(Token = "0x4001E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent OnIgniteRocket;

	[Token(Token = "0x4001E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public UnityFloatEvent OnRocketUpdate;

	[Token(Token = "0x4001E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityEvent OnRocketOff;

	[Token(Token = "0x4001E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public UnityEvent OnRocketFail;

	[Token(Token = "0x6002164")]
	[Address(RVA = "0x3D4AD0", Offset = "0x3D4AD0", VA = "0x3D4AD0")]
	public EngineRocket()
	{
	}

	[Token(Token = "0x6002165")]
	[Address(RVA = "0x3D4AEC", Offset = "0x3D4AEC", VA = "0x3D4AEC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002166")]
	[Address(RVA = "0x3D4B80", Offset = "0x3D4B80", VA = "0x3D4B80", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6002167")]
	[Address(RVA = "0x3D4CE0", Offset = "0x3D4CE0", VA = "0x3D4CE0")]
	private void UpdateDeflection()
	{
	}

	[Token(Token = "0x6002168")]
	[Address(RVA = "0x3D512C", Offset = "0x3D512C", VA = "0x3D512C")]
	private void UpdateOff()
	{
	}

	[Token(Token = "0x6002169")]
	[Address(RVA = "0x3D513C", Offset = "0x3D513C", VA = "0x3D513C")]
	private void UpdateOn()
	{
	}
}
[Token(Token = "0x20004BE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x173268", Offset = "0x173268")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x173268", Offset = "0x173268")]
public class GroundEffect : AircraftAttachment
{
	[Token(Token = "0x4001E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve CLHeightVsChord;

	[Token(Token = "0x4001E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnimationCurve CDHeightVsSpan;

	[Token(Token = "0x4001E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RayCastAxis;

	[Token(Token = "0x4001E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask RayCastLayers;

	[Token(Token = "0x4001E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Wingspan;

	[Token(Token = "0x600216A")]
	[Address(RVA = "0x33A0B0", Offset = "0x33A0B0", VA = "0x33A0B0")]
	public GroundEffect()
	{
	}

	[Token(Token = "0x600216B")]
	[Address(RVA = "0x33A12C", Offset = "0x33A12C", VA = "0x33A12C")]
	public void Start()
	{
	}

	[Token(Token = "0x600216C")]
	[Address(RVA = "0x33A138", Offset = "0x33A138", VA = "0x33A138")]
	public void GetGroundEffectCoefficients(Vector3 PointA, Vector3 PointB, Vector3 PointC, Vector3 PointD, out float clMultiplier, out float cdMultiplier)
	{
	}
}
[Token(Token = "0x20004BF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x173320", Offset = "0x173320")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x173320", Offset = "0x173320")]
public class PropWash : AircraftAttachment
{
	[Token(Token = "0x4001E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool[] AffectedSections;

	[Token(Token = "0x4001E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Engine PropWashSource;

	[Token(Token = "0x4001E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PropWashStrength;

	[Token(Token = "0x4001E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float noEffectAtSpeed;

	[Token(Token = "0x600216D")]
	[Address(RVA = "0x285BE4", Offset = "0x285BE4", VA = "0x285BE4")]
	public PropWash()
	{
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0x285C04", Offset = "0x285C04", VA = "0x285C04")]
	public Vector3 GetPropWash()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600216F")]
	[Address(RVA = "0x285D40", Offset = "0x285D40", VA = "0x285D40")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6002170")]
	[Address(RVA = "0x285D44", Offset = "0x285D44", VA = "0x285D44")]
	private void ClampEditorValues()
	{
	}
}
[Token(Token = "0x20004C0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1733D4", Offset = "0x1733D4")]
public class Rotor : MonoBehaviour
{
	[Token(Token = "0x4001E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Aerofoil Aerofoil;

	[Token(Token = "0x4001E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform RotorBlade;

	[Token(Token = "0x4001E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform RotorHubPosition;

	[Token(Token = "0x4001E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RotorRootPositionFront;

	[Token(Token = "0x4001E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform RotorRootPositionRear;

	[Token(Token = "0x4001E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RotorPositionFront;

	[Token(Token = "0x4001E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform RotorPositionRear;

	[Token(Token = "0x4001E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RotorDiskPitch;

	[Token(Token = "0x4001E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RotorDihedral;

	[Token(Token = "0x4001E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float BladePitch;

	[Token(Token = "0x4001E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform[] RotorBlades;

	[Token(Token = "0x4001EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int SectionCount;

	[Token(Token = "0x4001EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float WingTipWidthZeroToOne;

	[Token(Token = "0x4001EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WingTipSweep;

	[Token(Token = "0x4001EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float WingTipAngle;

	[Token(Token = "0x4001EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float CDOverride;

	[Token(Token = "0x4001EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float WingArea;

	[Token(Token = "0x4001EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float AngleOfAttack;

	[Token(Token = "0x4001EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 WingRootLeadingEdge;

	[Token(Token = "0x4001EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 WingRootTrailingEdge;

	[Token(Token = "0x4001EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 WingTipLeadingEdge;

	[Token(Token = "0x4001EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 WingTipTrailingEdge;

	[Token(Token = "0x4001EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 RootLiftPosition;

	[Token(Token = "0x4001EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 TipLiftPosition;

	[Token(Token = "0x4001EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float LiftLineChordPosition;

	[Token(Token = "0x4001EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody Parent;

	[Token(Token = "0x4001EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Rigidbody RotorHubRigidbody;

	[Token(Token = "0x4001EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ControllerAircraft ParentAircraft;

	[Token(Token = "0x4001EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ControlSurface AttachedControlSurface;

	[Token(Token = "0x4001EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PropWash AttachedPropWash;

	[Token(Token = "0x4001EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private GroundEffect AttachedGroundEffect;

	[Token(Token = "0x4001EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 m_wingRootAileronHingePos;

	[Token(Token = "0x4001EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_wingTipAileronHingePos;

	[Token(Token = "0x4001EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float DebugForceScale;

	[Token(Token = "0x6002171")]
	[Address(RVA = "0x2DECFC", Offset = "0x2DECFC", VA = "0x2DECFC")]
	public Rotor()
	{
	}

	[Token(Token = "0x6002172")]
	[Address(RVA = "0x2DEE9C", Offset = "0x2DEE9C", VA = "0x2DEE9C")]
	public void Start()
	{
	}

	[Token(Token = "0x6002173")]
	[Address(RVA = "0x2DF104", Offset = "0x2DF104", VA = "0x2DF104")]
	public void CloneRotor()
	{
	}

	[Token(Token = "0x6002174")]
	[Address(RVA = "0x2DF724", Offset = "0x2DF724", VA = "0x2DF724")]
	public void Update()
	{
	}

	[Token(Token = "0x6002175")]
	[Address(RVA = "0x2DF728", Offset = "0x2DF728", VA = "0x2DF728")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6002176")]
	[Address(RVA = "0x2E1318", Offset = "0x2E1318", VA = "0x2E1318")]
	private void CalculateRPM()
	{
	}

	[Token(Token = "0x6002177")]
	[Address(RVA = "0x2DF7B8", Offset = "0x2DF7B8", VA = "0x2DF7B8")]
	public void CalculateRotorWing(Transform BladeToCalcualte, int bladeNumber)
	{
	}

	[Token(Token = "0x6002178")]
	[Address(RVA = "0x2E225C", Offset = "0x2E225C", VA = "0x2E225C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6002179")]
	[Address(RVA = "0x2E23A0", Offset = "0x2E23A0", VA = "0x2E23A0")]
	public void DrawRotorGizmos(Transform BladeToCalcualte)
	{
	}

	[Token(Token = "0x600217A")]
	[Address(RVA = "0x2E1B88", Offset = "0x2E1B88", VA = "0x2E1B88")]
	private void ModifyWingGeometry(int SectionIndex, ref Vector3 PointA, ref Vector3 PointB, ref Vector3 PointC, ref Vector3 PointD)
	{
	}

	[Token(Token = "0x600217B")]
	[Address(RVA = "0x2E131C", Offset = "0x2E131C", VA = "0x2E131C")]
	private void UpdateWingGeometry(Transform BladeToCalcualte)
	{
	}

	[Token(Token = "0x600217C")]
	[Address(RVA = "0x2E1FD4", Offset = "0x2E1FD4", VA = "0x2E1FD4")]
	private float CalculateArea(Vector3 pointA, Vector3 pointB, Vector3 pointC, Vector3 pointD)
	{
		return default(float);
	}
}
[Token(Token = "0x20004C1")]
public class Wing : AircraftAttachment
{
	[Token(Token = "0x4001EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Aerofoil Aerofoil;

	[Token(Token = "0x4001EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int SectionCount;

	[Token(Token = "0x4001EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float WingTipWidthZeroToOne;

	[Token(Token = "0x4001EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float WingTipSweep;

	[Token(Token = "0x4001EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WingTipAngle;

	[Token(Token = "0x4001EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CDOverride;

	[Token(Token = "0x4001EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float WingArea;

	[Token(Token = "0x4001EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float AngleOfAttack;

	[Token(Token = "0x4001EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 WingRootLeadingEdge;

	[Token(Token = "0x4001EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 WingRootTrailingEdge;

	[Token(Token = "0x4001EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 WingTipLeadingEdge;

	[Token(Token = "0x4001EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 WingTipTrailingEdge;

	[Token(Token = "0x4001EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 RootLiftPosition;

	[Token(Token = "0x4001EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 TipLiftPosition;

	[Token(Token = "0x4001EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float LiftLineChordPosition;

	[Token(Token = "0x4001EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Rigidbody Parent;

	[Token(Token = "0x4001EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ControllerAircraft ParentAircraft;

	[Token(Token = "0x4001EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private PropWash AttachedPropWash;

	[Token(Token = "0x4001EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GroundEffect AttachedGroundEffect;

	[Token(Token = "0x4001ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private ControlSurface m_primaryControlSurface;

	[Token(Token = "0x4001ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ControlSurface m_secondaryControlSurface;

	[Token(Token = "0x4001ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 m_wingRootAileronHingePos;

	[Token(Token = "0x4001ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 m_wingTipAileronHingePos;

	[Token(Token = "0x4001ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_maxDeflectionDegrees;

	[Token(Token = "0x4001ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float m_AdditionalDualWingDeflection;

	[Token(Token = "0x1700045B")]
	public ControlSurface PrimaryControlSurface
	{
		[Token(Token = "0x600217E")]
		[Address(RVA = "0x739C6C", Offset = "0x739C6C", VA = "0x739C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700045C")]
	public ControlSurface SecondaryControlSurface
	{
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x739C74", Offset = "0x739C74", VA = "0x739C74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600217D")]
	[Address(RVA = "0x739AE4", Offset = "0x739AE4", VA = "0x739AE4")]
	public Wing()
	{
	}

	[Token(Token = "0x6002180")]
	[Address(RVA = "0x739C7C", Offset = "0x739C7C", VA = "0x739C7C")]
	public void Start()
	{
	}

	[Token(Token = "0x6002181")]
	[Address(RVA = "0x73A0EC", Offset = "0x73A0EC", VA = "0x73A0EC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6002182")]
	[Address(RVA = "0x73CD6C", Offset = "0x73CD6C", VA = "0x73CD6C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6002183")]
	[Address(RVA = "0x73BCD0", Offset = "0x73BCD0", VA = "0x73BCD0")]
	private void UpdateWingGeometry()
	{
	}

	[Token(Token = "0x6002184")]
	[Address(RVA = "0x73C574", Offset = "0x73C574", VA = "0x73C574")]
	private void ModifyWingGeometry(int SectionIndex, ref Vector3 PointA, ref Vector3 PointB, ref Vector3 PointC, ref Vector3 PointD)
	{
	}

	[Token(Token = "0x6002185")]
	[Address(RVA = "0x73CAE4", Offset = "0x73CAE4", VA = "0x73CAE4")]
	private float CalculateArea(Vector3 pointA, Vector3 pointB, Vector3 pointC, Vector3 pointD)
	{
		return default(float);
	}
}
[Token(Token = "0x20004C2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x173418", Offset = "0x173418")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x173418", Offset = "0x173418")]
public class LandingGear : MonoBehaviour
{
	[Token(Token = "0x4001ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip ToggleLandingGearClip;

	[Token(Token = "0x4001ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject ToggleLandingGearAnimationGameObject;

	[Token(Token = "0x4001ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string ToggleLandingGearAnimationName;

	[Token(Token = "0x4001ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GearDownDrag;

	[Token(Token = "0x4001ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float GearUpDrag;

	[Token(Token = "0x4001ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public InputController LandingGearController;

	[Token(Token = "0x4001ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WheelCollider[] AircraftWheels;

	[Token(Token = "0x4001ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource ToggleLandingGear;

	[Token(Token = "0x4001ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool GearDown;

	[Token(Token = "0x4001ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool CycleFinished;

	[Token(Token = "0x6002187")]
	[Address(RVA = "0x523394", Offset = "0x523394", VA = "0x523394")]
	public LandingGear()
	{
	}

	[Token(Token = "0x6002188")]
	[Address(RVA = "0x523470", Offset = "0x523470", VA = "0x523470")]
	private void Start()
	{
	}

	[Token(Token = "0x6002189")]
	[Address(RVA = "0x523614", Offset = "0x523614", VA = "0x523614")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004C3")]
public class StallWarner : MonoBehaviour
{
	[Token(Token = "0x4001EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioClip m_stallWarnerClip;

	[Token(Token = "0x4001EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_angleOfAttackStart;

	[Token(Token = "0x4001EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_angleOfAttackEnd;

	[Token(Token = "0x4001EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_stallLightObject;

	[Token(Token = "0x4001EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_stallLightGlow;

	[Token(Token = "0x4001EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_cameraTransform;

	[Token(Token = "0x4001EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Material m_stallMaterial;

	[Token(Token = "0x4001EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer m_lightRenderer;

	[Token(Token = "0x4001EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Wing m_attachedWing;

	[Token(Token = "0x4001EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AudioSource m_stallWarnerSource;

	[Token(Token = "0x4001EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x600218A")]
	[Address(RVA = "0x2C03E4", Offset = "0x2C03E4", VA = "0x2C03E4")]
	public StallWarner()
	{
	}

	[Token(Token = "0x600218B")]
	[Address(RVA = "0x2C0404", Offset = "0x2C0404", VA = "0x2C0404")]
	private void Awake()
	{
	}

	[Token(Token = "0x600218C")]
	[Address(RVA = "0x2C0498", Offset = "0x2C0498", VA = "0x2C0498")]
	private void Start()
	{
	}

	[Token(Token = "0x600218D")]
	[Address(RVA = "0x2C0B2C", Offset = "0x2C0B2C", VA = "0x2C0B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600218E")]
	[Address(RVA = "0x2C0FD0", Offset = "0x2C0FD0", VA = "0x2C0FD0")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20004C4")]
public class SteerableNosewheel : MonoBehaviour
{
	[Token(Token = "0x4001EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float MaxDeflectionDegrees;

	[Token(Token = "0x4001EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WheelCollider wheelCollider;

	[Token(Token = "0x4001EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteerableNosewheel steerableNosewheel;

	[Token(Token = "0x4001EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ControlSurface controlSurfaceA;

	[Token(Token = "0x4001EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControlSurface controlSurfaceB;

	[Token(Token = "0x4001EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool invertControlSurfaceA;

	[Token(Token = "0x4001EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool invertControlSurfaceB;

	[Token(Token = "0x600218F")]
	[Address(RVA = "0x2C3168", Offset = "0x2C3168", VA = "0x2C3168")]
	public SteerableNosewheel()
	{
	}

	[Token(Token = "0x6002190")]
	[Address(RVA = "0x2C317C", Offset = "0x2C317C", VA = "0x2C317C")]
	public static SteerableNosewheel Instance()
	{
		return null;
	}

	[Token(Token = "0x6002191")]
	[Address(RVA = "0x2C3374", Offset = "0x2C3374", VA = "0x2C3374")]
	private void Start()
	{
	}

	[Token(Token = "0x6002192")]
	[Address(RVA = "0x2C33FC", Offset = "0x2C33FC", VA = "0x2C33FC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004C5")]
public class WheelAudio : MonoBehaviour
{
	[Token(Token = "0x4001EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioClip m_wheelRollClip;

	[Token(Token = "0x4001EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioMixerGroup audioMixerGroup;

	[Token(Token = "0x4001EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_KnotsOfRPMForMaxVolume;

	[Token(Token = "0x4001EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_rpmForMaxVolume;

	[Token(Token = "0x4001EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AudioSource m_wheelRollSource;

	[Token(Token = "0x4001EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WheelCollider m_wheelCollider;

	[Token(Token = "0x6002193")]
	[Address(RVA = "0x7384E8", Offset = "0x7384E8", VA = "0x7384E8")]
	public WheelAudio()
	{
	}

	[Token(Token = "0x6002194")]
	[Address(RVA = "0x738508", Offset = "0x738508", VA = "0x738508")]
	private void Start()
	{
	}

	[Token(Token = "0x6002195")]
	[Address(RVA = "0x73893C", Offset = "0x73893C", VA = "0x73893C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004C6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1734D0", Offset = "0x1734D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1734D0", Offset = "0x1734D0")]
public class WheelBrake : MonoBehaviour
{
	[Token(Token = "0x4001EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ControlStick ControlStickUsed;

	[Token(Token = "0x4001EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float BrakeTorque;

	[Token(Token = "0x4001EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool parkingBreakIsOn;

	[Token(Token = "0x4001EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool breakScalesWithAoA;

	[Token(Token = "0x4001EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float zeroAoAPitch;

	[Token(Token = "0x4001EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool breakScalesWithSpeed;

	[Token(Token = "0x4001EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minBrakeInput;

	[Token(Token = "0x4001EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedToStartBreakScaling;

	[Token(Token = "0x4001EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve MotionCurve;

	[Token(Token = "0x4001EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4001EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public InputController Controller;

	[Token(Token = "0x4001EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WheelCollider Wheel;

	[Token(Token = "0x6002196")]
	[Address(RVA = "0x738B3C", Offset = "0x738B3C", VA = "0x738B3C")]
	public WheelBrake()
	{
	}

	[Token(Token = "0x6002197")]
	[Address(RVA = "0x738BF0", Offset = "0x738BF0", VA = "0x738BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6002198")]
	[Address(RVA = "0x738CD4", Offset = "0x738CD4", VA = "0x738CD4")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x173588", Offset = "0x173588")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x173588", Offset = "0x173588")]
public class WindAudio : MonoBehaviour
{
	[Token(Token = "0x4001EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip WindClip;

	[Token(Token = "0x4001F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float VelocityForMaxVolume;

	[Token(Token = "0x4001F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MaxVolume;

	[Token(Token = "0x4001F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MinPitch;

	[Token(Token = "0x4001F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxPitch;

	[Token(Token = "0x4001F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource Wind;

	[Token(Token = "0x4001F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Rigidbody AicraftRigdbody;

	[Token(Token = "0x6002199")]
	[Address(RVA = "0x739698", Offset = "0x739698", VA = "0x739698")]
	public WindAudio()
	{
	}

	[Token(Token = "0x600219A")]
	[Address(RVA = "0x7396C0", Offset = "0x7396C0", VA = "0x7396C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600219B")]
	[Address(RVA = "0x739880", Offset = "0x739880", VA = "0x739880")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004C8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x17363C", Offset = "0x17363C")]
[ExecuteInEditMode]
public class MirrorWing : MonoBehaviour
{
	[Token(Token = "0x600219C")]
	[Address(RVA = "0x360834", Offset = "0x360834", VA = "0x360834")]
	public MirrorWing()
	{
	}
}
[Token(Token = "0x20004C9")]
public class AircraftTrigger : MonoBehaviour
{
	[Token(Token = "0x4001F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform mainAircraft;

	[Token(Token = "0x4001F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool allowRayCast;

	[Token(Token = "0x4001F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x4001F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _layerMask;

	[Token(Token = "0x1700045D")]
	public Transform MainAircraft
	{
		[Token(Token = "0x600219E")]
		[Address(RVA = "0x428370", Offset = "0x428370", VA = "0x428370")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600219D")]
	[Address(RVA = "0x42834C", Offset = "0x42834C", VA = "0x42834C")]
	public AircraftTrigger()
	{
	}

	[Token(Token = "0x600219F")]
	[Address(RVA = "0x428378", Offset = "0x428378", VA = "0x428378")]
	private void Start()
	{
	}

	[Token(Token = "0x60021A0")]
	[Address(RVA = "0x428384", Offset = "0x428384", VA = "0x428384")]
	private void Update()
	{
	}

	[Token(Token = "0x60021A1")]
	[Address(RVA = "0x42870C", Offset = "0x42870C", VA = "0x42870C")]
	public void Initialize(Transform mainAircraft, bool allowRayCast = true)
	{
	}

	[Token(Token = "0x60021A2")]
	[Address(RVA = "0x428394", Offset = "0x428394", VA = "0x428394")]
	private void ProcessRayCast()
	{
	}
}
[Token(Token = "0x20004CA")]
public class AnimateObject : MonoBehaviour
{
	[Token(Token = "0x20004CB")]
	public enum ANIM_STATE
	{
		[Token(Token = "0x4001F17")]
		Off,
		[Token(Token = "0x4001F18")]
		AnimateOn,
		[Token(Token = "0x4001F19")]
		On,
		[Token(Token = "0x4001F1A")]
		AnimateOff,
		[Token(Token = "0x4001F1B")]
		Toggle,
		[Token(Token = "0x4001F1C")]
		Activate
	}

	[Token(Token = "0x20004CC")]
	public enum ACTIVE_STATE
	{
		[Token(Token = "0x4001F1E")]
		On,
		[Token(Token = "0x4001F1F")]
		Off
	}

	[Token(Token = "0x4001F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_targetObject;

	[Token(Token = "0x4001F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private RuntimeAnimatorController m_animatorController;

	[Token(Token = "0x4001F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x4001F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_onAnim;

	[Token(Token = "0x4001F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private string m_offAnim;

	[Token(Token = "0x4001F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_IdleSuffix;

	[Token(Token = "0x4001F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_onHash;

	[Token(Token = "0x4001F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_onIdleHash;

	[Token(Token = "0x4001F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_offHash;

	[Token(Token = "0x4001F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_offIdleHash;

	[Token(Token = "0x4001F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private ANIM_STATE m_startingState;

	[Token(Token = "0x4001F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ANIM_STATE m_currentAnimState;

	[Token(Token = "0x1700045E")]
	public ANIM_STATE CurrentAnimState
	{
		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x429750", Offset = "0x429750", VA = "0x429750")]
		get
		{
			return default(ANIM_STATE);
		}
	}

	[Token(Token = "0x1700045F")]
	public ACTIVE_STATE ActiveState
	{
		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x429758", Offset = "0x429758", VA = "0x429758")]
		get
		{
			return default(ACTIVE_STATE);
		}
	}

	[Token(Token = "0x60021A3")]
	[Address(RVA = "0x4296E4", Offset = "0x4296E4", VA = "0x4296E4")]
	public AnimateObject()
	{
	}

	[Token(Token = "0x60021A6")]
	[Address(RVA = "0x429894", Offset = "0x429894", VA = "0x429894")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021A7")]
	[Address(RVA = "0x429BD8", Offset = "0x429BD8", VA = "0x429BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60021A8")]
	[Address(RVA = "0x429BDC", Offset = "0x429BDC", VA = "0x429BDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60021A9")]
	[Address(RVA = "0x429CA4", Offset = "0x429CA4", VA = "0x429CA4")]
	public bool PlayAnimation(ANIM_STATE animToPlay = ANIM_STATE.Toggle)
	{
		return default(bool);
	}

	[Token(Token = "0x60021AA")]
	[Address(RVA = "0x429BE0", Offset = "0x429BE0", VA = "0x429BE0")]
	private void _SetCurrentAnimState()
	{
	}

	[Token(Token = "0x60021AB")]
	[Address(RVA = "0x429E40", Offset = "0x429E40", VA = "0x429E40")]
	public bool InitAsOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60021AC")]
	[Address(RVA = "0x429D3C", Offset = "0x429D3C", VA = "0x429D3C")]
	public bool InitAsOff()
	{
		return default(bool);
	}

	[Token(Token = "0x60021AD")]
	[Address(RVA = "0x429D80", Offset = "0x429D80", VA = "0x429D80")]
	private bool _AnimateOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60021AE")]
	[Address(RVA = "0x429E84", Offset = "0x429E84", VA = "0x429E84")]
	public bool _AnimateOff()
	{
		return default(bool);
	}

	[Token(Token = "0x60021AF")]
	[Address(RVA = "0x429F48", Offset = "0x429F48", VA = "0x429F48")]
	public static AnimateObject FindAnimateObject(Transform transform, [Optional] AnimateObject animateObject)
	{
		return null;
	}

	[Token(Token = "0x60021B0")]
	[Address(RVA = "0x42A324", Offset = "0x42A324", VA = "0x42A324")]
	public static AnimateObject[] FindAnimateObjects(Transform transform, [Optional] AnimateObject[] animateObjects)
	{
		return null;
	}
}
[Token(Token = "0x20004CD")]
public class CastProjectedShadow : MonoBehaviour
{
	[Token(Token = "0x4001F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Projector m_projector;

	[Token(Token = "0x4001F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_projectorTransform;

	[Token(Token = "0x4001F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_projectorOrigin;

	[Token(Token = "0x4001F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_sourceObject;

	[Token(Token = "0x4001F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Transform m_lightSource;

	[Token(Token = "0x4001F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_lightVector;

	[Token(Token = "0x4001F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture2D[] m_shadowX_10;

	[Token(Token = "0x4001F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Texture2D[] m_shadowX_30;

	[Token(Token = "0x4001F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D[] m_shadowX_50;

	[Token(Token = "0x4001F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Texture2D[] m_shadowX_70;

	[Token(Token = "0x4001F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture2D[] m_shadowX_90;

	[Token(Token = "0x4001F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Texture2D[,] m_shadowIndexXY;

	[Token(Token = "0x4001F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_projectorMaterial;

	[Token(Token = "0x4001F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TrackRotation m_trackRotation;

	[Token(Token = "0x60021B1")]
	[Address(RVA = "0x306DB4", Offset = "0x306DB4", VA = "0x306DB4")]
	public CastProjectedShadow()
	{
	}

	[Token(Token = "0x60021B2")]
	[Address(RVA = "0x306EC0", Offset = "0x306EC0", VA = "0x306EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021B3")]
	[Address(RVA = "0x307694", Offset = "0x307694", VA = "0x307694")]
	private void Update()
	{
	}
}
[Token(Token = "0x20004CE")]
public class Conversions
{
	[Token(Token = "0x4001F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MetersPerSecondToKnots;

	[Token(Token = "0x4001F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float KnotsPerSecondToMeters;

	[Token(Token = "0x4001F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float MetersToFeet;

	[Token(Token = "0x60021B4")]
	[Address(RVA = "0x3AAFE8", Offset = "0x3AAFE8", VA = "0x3AAFE8")]
	public Conversions()
	{
	}
}
[Token(Token = "0x20004CF")]
public class DebugInteractableInputValue : MonoBehaviour
{
	[Token(Token = "0x4001F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private InteractableInput m_interactableInput;

	[Token(Token = "0x60021B6")]
	[Address(RVA = "0x3BBDA8", Offset = "0x3BBDA8", VA = "0x3BBDA8")]
	public DebugInteractableInputValue()
	{
	}

	[Token(Token = "0x60021B7")]
	[Address(RVA = "0x3BBDB0", Offset = "0x3BBDB0", VA = "0x3BBDB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60021B8")]
	[Address(RVA = "0x3BBE18", Offset = "0x3BBE18", VA = "0x3BBE18")]
	private void Update()
	{
	}

	[Token(Token = "0x60021B9")]
	[Address(RVA = "0x3BBE1C", Offset = "0x3BBE1C", VA = "0x3BBE1C")]
	private void _LogInteractableInputValue()
	{
	}
}
[Token(Token = "0x20004D0")]
public static class DrawArrow
{
	[Token(Token = "0x60021BA")]
	[Address(RVA = "0x3C8E34", Offset = "0x3C8E34", VA = "0x3C8E34")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x60021BB")]
	[Address(RVA = "0x3C91DC", Offset = "0x3C91DC", VA = "0x3C91DC")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x60021BC")]
	[Address(RVA = "0x3C959C", Offset = "0x3C959C", VA = "0x3C959C")]
	public static void ForDebug(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x60021BD")]
	[Address(RVA = "0x3C9970", Offset = "0x3C9970", VA = "0x3C9970")]
	public static void ForDebug(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}
}
[Token(Token = "0x20004D1")]
public class Easing
{
	[Token(Token = "0x20004D2")]
	public enum EASING_TYPE
	{
		[Token(Token = "0x4001F33")]
		Linear,
		[Token(Token = "0x4001F34")]
		ExpoEaseOut,
		[Token(Token = "0x4001F35")]
		ExpoEaseIn,
		[Token(Token = "0x4001F36")]
		ExpoEaseInOut,
		[Token(Token = "0x4001F37")]
		ExpoEaseOutIn,
		[Token(Token = "0x4001F38")]
		CircEaseOut,
		[Token(Token = "0x4001F39")]
		CircEaseIn,
		[Token(Token = "0x4001F3A")]
		CircEaseInOut,
		[Token(Token = "0x4001F3B")]
		CircEaseOutIn,
		[Token(Token = "0x4001F3C")]
		QuadEaseOut,
		[Token(Token = "0x4001F3D")]
		QuadEaseIn,
		[Token(Token = "0x4001F3E")]
		QuadEaseInOut,
		[Token(Token = "0x4001F3F")]
		QuadEaseOutIn,
		[Token(Token = "0x4001F40")]
		SineEaseOut,
		[Token(Token = "0x4001F41")]
		SineEaseIn,
		[Token(Token = "0x4001F42")]
		SineEaseInOut,
		[Token(Token = "0x4001F43")]
		SineEaseOutIn,
		[Token(Token = "0x4001F44")]
		CubicEaseOut,
		[Token(Token = "0x4001F45")]
		CubicEaseIn,
		[Token(Token = "0x4001F46")]
		CubicEaseInOut,
		[Token(Token = "0x4001F47")]
		CubicEaseOutIn,
		[Token(Token = "0x4001F48")]
		QuartEaseOut,
		[Token(Token = "0x4001F49")]
		QuartEaseIn,
		[Token(Token = "0x4001F4A")]
		QuartEaseInOut,
		[Token(Token = "0x4001F4B")]
		QuartEaseOutIn,
		[Token(Token = "0x4001F4C")]
		QuintEaseOut,
		[Token(Token = "0x4001F4D")]
		QuintEaseIn,
		[Token(Token = "0x4001F4E")]
		QuintEaseInOut,
		[Token(Token = "0x4001F4F")]
		QuintEaseOutIn,
		[Token(Token = "0x4001F50")]
		ElasticEaseOut,
		[Token(Token = "0x4001F51")]
		ElasticEaseIn,
		[Token(Token = "0x4001F52")]
		ElasticEaseInOut,
		[Token(Token = "0x4001F53")]
		ElasticEaseOutIn,
		[Token(Token = "0x4001F54")]
		BounceEaseOut,
		[Token(Token = "0x4001F55")]
		BounceEaseIn,
		[Token(Token = "0x4001F56")]
		BounceEaseInOut,
		[Token(Token = "0x4001F57")]
		BounceEaseOutIn,
		[Token(Token = "0x4001F58")]
		BackEaseOut,
		[Token(Token = "0x4001F59")]
		BackEaseIn,
		[Token(Token = "0x4001F5A")]
		BackEaseInOut,
		[Token(Token = "0x4001F5B")]
		BackEaseOutIn
	}

	[Token(Token = "0x60021BE")]
	[Address(RVA = "0x3C9E34", Offset = "0x3C9E34", VA = "0x3C9E34")]
	public Easing()
	{
	}

	[Token(Token = "0x60021BF")]
	[Address(RVA = "0x3C9E3C", Offset = "0x3C9E3C", VA = "0x3C9E3C")]
	public static Vector3 GetEasing(EASING_TYPE easing, float t, Vector3 b, Vector3 c, float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60021C0")]
	[Address(RVA = "0x3CA62C", Offset = "0x3CA62C", VA = "0x3CA62C")]
	public static Vector2 GetEasing(EASING_TYPE easing, float t, Vector2 b, Vector2 c, float d)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60021C1")]
	[Address(RVA = "0x3C9F50", Offset = "0x3C9F50", VA = "0x3C9F50")]
	public static float GetEasing(EASING_TYPE easing, float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C2")]
	[Address(RVA = "0x3CA720", Offset = "0x3CA720", VA = "0x3CA720")]
	public static float Linear(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C3")]
	[Address(RVA = "0x3CA744", Offset = "0x3CA744", VA = "0x3CA744")]
	public static float ExpoEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C4")]
	[Address(RVA = "0x3CA810", Offset = "0x3CA810", VA = "0x3CA810")]
	public static float ExpoEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C5")]
	[Address(RVA = "0x3CA8E0", Offset = "0x3CA8E0", VA = "0x3CA8E0")]
	public static float ExpoEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C6")]
	[Address(RVA = "0x3CAA3C", Offset = "0x3CAA3C", VA = "0x3CAA3C")]
	public static float ExpoEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C7")]
	[Address(RVA = "0x3CAAA8", Offset = "0x3CAAA8", VA = "0x3CAAA8")]
	public static float CircEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C8")]
	[Address(RVA = "0x3CAB7C", Offset = "0x3CAB7C", VA = "0x3CAB7C")]
	public static float CircEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021C9")]
	[Address(RVA = "0x3CAC50", Offset = "0x3CAC50", VA = "0x3CAC50")]
	public static float CircEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021CA")]
	[Address(RVA = "0x3CAD80", Offset = "0x3CAD80", VA = "0x3CAD80")]
	public static float CircEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021CB")]
	[Address(RVA = "0x3CADEC", Offset = "0x3CADEC", VA = "0x3CADEC")]
	public static float QuadEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021CC")]
	[Address(RVA = "0x3CAE1C", Offset = "0x3CAE1C", VA = "0x3CAE1C")]
	public static float QuadEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021CD")]
	[Address(RVA = "0x3CAE44", Offset = "0x3CAE44", VA = "0x3CAE44")]
	public static float QuadEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021CE")]
	[Address(RVA = "0x3CAEB0", Offset = "0x3CAEB0", VA = "0x3CAEB0")]
	public static float QuadEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021CF")]
	[Address(RVA = "0x3CAF1C", Offset = "0x3CAF1C", VA = "0x3CAF1C")]
	public static float SineEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D0")]
	[Address(RVA = "0x3CAFE0", Offset = "0x3CAFE0", VA = "0x3CAFE0")]
	public static float SineEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D1")]
	[Address(RVA = "0x3CB0A8", Offset = "0x3CB0A8", VA = "0x3CB0A8")]
	public static float SineEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D2")]
	[Address(RVA = "0x3CB17C", Offset = "0x3CB17C", VA = "0x3CB17C")]
	public static float SineEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D3")]
	[Address(RVA = "0x3CB1E8", Offset = "0x3CB1E8", VA = "0x3CB1E8")]
	public static float CubicEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D4")]
	[Address(RVA = "0x3CB224", Offset = "0x3CB224", VA = "0x3CB224")]
	public static float CubicEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D5")]
	[Address(RVA = "0x3CB250", Offset = "0x3CB250", VA = "0x3CB250")]
	public static float CubicEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D6")]
	[Address(RVA = "0x3CB2BC", Offset = "0x3CB2BC", VA = "0x3CB2BC")]
	public static float CubicEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D7")]
	[Address(RVA = "0x3CB334", Offset = "0x3CB334", VA = "0x3CB334")]
	public static float QuartEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D8")]
	[Address(RVA = "0x3CB370", Offset = "0x3CB370", VA = "0x3CB370")]
	public static float QuartEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021D9")]
	[Address(RVA = "0x3CB3A0", Offset = "0x3CB3A0", VA = "0x3CB3A0")]
	public static float QuartEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021DA")]
	[Address(RVA = "0x3CB414", Offset = "0x3CB414", VA = "0x3CB414")]
	public static float QuartEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021DB")]
	[Address(RVA = "0x3CB494", Offset = "0x3CB494", VA = "0x3CB494")]
	public static float QuintEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021DC")]
	[Address(RVA = "0x3CB4D8", Offset = "0x3CB4D8", VA = "0x3CB4D8")]
	public static float QuintEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021DD")]
	[Address(RVA = "0x3CB50C", Offset = "0x3CB50C", VA = "0x3CB50C")]
	public static float QuintEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021DE")]
	[Address(RVA = "0x3CB588", Offset = "0x3CB588", VA = "0x3CB588")]
	public static float QuintEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021DF")]
	[Address(RVA = "0x3CB610", Offset = "0x3CB610", VA = "0x3CB610")]
	public static float ElasticEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E0")]
	[Address(RVA = "0x3CB71C", Offset = "0x3CB71C", VA = "0x3CB71C")]
	public static float ElasticEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E1")]
	[Address(RVA = "0x3CB834", Offset = "0x3CB834", VA = "0x3CB834")]
	public static float ElasticEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E2")]
	[Address(RVA = "0x3CB9D8", Offset = "0x3CB9D8", VA = "0x3CB9D8")]
	public static float ElasticEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E3")]
	[Address(RVA = "0x3CBA48", Offset = "0x3CBA48", VA = "0x3CBA48")]
	public static float BounceEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E4")]
	[Address(RVA = "0x3CBB1C", Offset = "0x3CBB1C", VA = "0x3CBB1C")]
	public static float BounceEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E5")]
	[Address(RVA = "0x3CBB68", Offset = "0x3CBB68", VA = "0x3CBB68")]
	public static float BounceEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E6")]
	[Address(RVA = "0x3CBC00", Offset = "0x3CBC00", VA = "0x3CBC00")]
	public static float BounceEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E7")]
	[Address(RVA = "0x3CBC88", Offset = "0x3CBC88", VA = "0x3CBC88")]
	public static float BackEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E8")]
	[Address(RVA = "0x3CBCDC", Offset = "0x3CBCDC", VA = "0x3CBCDC")]
	public static float BackEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021E9")]
	[Address(RVA = "0x3CBD20", Offset = "0x3CBD20", VA = "0x3CBD20")]
	public static float BackEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x60021EA")]
	[Address(RVA = "0x3CBDB4", Offset = "0x3CBDB4", VA = "0x3CBDB4")]
	public static float BackEaseOutIn(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x20004D3")]
public class EZClass
{
	[Token(Token = "0x60021EB")]
	[Address(RVA = "0x3C9D94", Offset = "0x3C9D94", VA = "0x3C9D94")]
	public EZClass()
	{
	}

	[Token(Token = "0x60021EC")]
	[Address(RVA = "0x3C9D9C", Offset = "0x3C9D9C", VA = "0x3C9D9C")]
	public static bool operator true(EZClass x)
	{
		return default(bool);
	}

	[Token(Token = "0x60021ED")]
	[Address(RVA = "0x3C9DA8", Offset = "0x3C9DA8", VA = "0x3C9DA8")]
	public static bool operator false(EZClass x)
	{
		return default(bool);
	}

	[Token(Token = "0x60021EE")]
	[Address(RVA = "0x3C9DBC", Offset = "0x3C9DBC", VA = "0x3C9DBC")]
	public static bool operator !(EZClass x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20004D4")]
public class FollowObject : MonoBehaviour
{
	[Token(Token = "0x4001F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_childObject;

	[Token(Token = "0x4001F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_parentCamera;

	[Token(Token = "0x4001F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_parentObject;

	[Token(Token = "0x4001F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_followPosition;

	[Token(Token = "0x4001F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_keepPositionOffset;

	[Token(Token = "0x4001F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_positionOffset;

	[Token(Token = "0x4001F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 m_positionContstraint;

	[Token(Token = "0x4001F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Transform m_lookAtObject;

	[Token(Token = "0x4001F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_followRotation;

	[Token(Token = "0x4001F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool m_keepRotationOffset;

	[Token(Token = "0x4001F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_rotationOffset;

	[Token(Token = "0x4001F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3 m_rotationContstraint;

	[Token(Token = "0x4001F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float m_angleToleranceLerpTime;

	[Token(Token = "0x4001F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 m_rotationAngleTolerance;

	[Token(Token = "0x4001F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private MouseLookController m_mouseLook;

	[Token(Token = "0x4001F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_parentEulers;

	[Token(Token = "0x4001F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_lastParentEulers;

	[Token(Token = "0x4001F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_childEulers;

	[Token(Token = "0x4001F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_lastChildEulers;

	[Token(Token = "0x4001F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x60021EF")]
	[Address(RVA = "0xBBA594", Offset = "0xBBA594", VA = "0xBBA594")]
	public FollowObject()
	{
	}

	[Token(Token = "0x60021F0")]
	[Address(RVA = "0xBBA724", Offset = "0xBBA724", VA = "0xBBA724")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021F1")]
	[Address(RVA = "0xBBAC70", Offset = "0xBBAC70", VA = "0xBBAC70")]
	public void InitCameraParent()
	{
	}

	[Token(Token = "0x60021F2")]
	[Address(RVA = "0xBBAE74", Offset = "0xBBAE74", VA = "0xBBAE74")]
	private void Update()
	{
	}

	[Token(Token = "0x60021F3")]
	[Address(RVA = "0xBBAF34", Offset = "0xBBAF34", VA = "0xBBAF34")]
	private void _FollowPosition()
	{
	}

	[Token(Token = "0x60021F4")]
	[Address(RVA = "0xBBB0FC", Offset = "0xBBB0FC", VA = "0xBBB0FC")]
	private void _LookAtObject()
	{
	}

	[Token(Token = "0x60021F5")]
	[Address(RVA = "0xBBB1C0", Offset = "0xBBB1C0", VA = "0xBBB1C0")]
	private void _FollowRotation()
	{
	}
}
[Token(Token = "0x20004D5")]
public class FollowRotation : MonoBehaviour
{
	[Token(Token = "0x4001F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_transformToFollow;

	[Token(Token = "0x60021F6")]
	[Address(RVA = "0xBBB834", Offset = "0xBBB834", VA = "0xBBB834")]
	public FollowRotation()
	{
	}

	[Token(Token = "0x60021F7")]
	[Address(RVA = "0xBBB83C", Offset = "0xBBB83C", VA = "0xBBB83C")]
	private void Update()
	{
	}

	[Token(Token = "0x60021F8")]
	[Address(RVA = "0xBBB844", Offset = "0xBBB844", VA = "0xBBB844")]
	private void _FollowRotation(Transform transformToFollow)
	{
	}
}
[Token(Token = "0x20004D6")]
public class GenericFactory : IInstanceFactory
{
	[Token(Token = "0x60021F9")]
	[Address(RVA = "0xBCBCF4", Offset = "0xBCBCF4", VA = "0xBCBCF4")]
	public GenericFactory()
	{
	}

	[Token(Token = "0x60021FA")]
	public static T[] CreateContentsOfType<T>(int amount, GameObject reference, [Optional] Transform parent, bool createComponent = false) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60021FB")]
	public static T CreateContentType<T>(GameObject reference, [Optional] Transform parent, bool createComponent = false) where T : Component
	{
		return null;
	}
}
[Token(Token = "0x20004D7")]
public class GenericTrigger : MonoBehaviour
{
	[Token(Token = "0x4001F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Action<Transform> TriggerEnter;

	[Token(Token = "0x4001F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<Transform> TriggerExit;

	[Token(Token = "0x4001F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Action<Transform> CollisionEnter;

	[Token(Token = "0x4001F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Transform> CollisionExit;

	[Token(Token = "0x4001F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _enableDispatch;

	[Token(Token = "0x4001F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _triggerOnce;

	[Token(Token = "0x4001F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool _triggerEnterDispatched;

	[Token(Token = "0x4001F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool _triggerExitDispatched;

	[Token(Token = "0x4001F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _colliderEnterDispatched;

	[Token(Token = "0x4001F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _colliderExitDispatched;

	[Token(Token = "0x17000460")]
	public bool EnableDispatch
	{
		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x328DCC", Offset = "0x328DCC", VA = "0x328DCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x328DD4", Offset = "0x328DD4", VA = "0x328DD4")]
		set
		{
		}
	}

	[Token(Token = "0x60021FC")]
	[Address(RVA = "0x328DBC", Offset = "0x328DBC", VA = "0x328DBC")]
	public GenericTrigger()
	{
	}

	[Token(Token = "0x60021FF")]
	[Address(RVA = "0x328DDC", Offset = "0x328DDC", VA = "0x328DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6002200")]
	[Address(RVA = "0x328DE0", Offset = "0x328DE0", VA = "0x328DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6002201")]
	[Address(RVA = "0x328DE4", Offset = "0x328DE4", VA = "0x328DE4")]
	public void Initialize(bool triggerOnce = false)
	{
	}

	[Token(Token = "0x6002202")]
	[Address(RVA = "0x328E00", Offset = "0x328E00", VA = "0x328E00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6002203")]
	[Address(RVA = "0x328EC0", Offset = "0x328EC0", VA = "0x328EC0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6002204")]
	[Address(RVA = "0x328F80", Offset = "0x328F80", VA = "0x328F80")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6002205")]
	[Address(RVA = "0x329040", Offset = "0x329040", VA = "0x329040")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6002206")]
	[Address(RVA = "0x328DF4", Offset = "0x328DF4", VA = "0x328DF4")]
	private void Reset()
	{
	}
}
[Token(Token = "0x20004D8")]
public class GenericTriggerManager : MonoBehaviour
{
	[Token(Token = "0x4001F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Action<Transform> TriggerEnter;

	[Token(Token = "0x4001F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<Transform> TriggerExit;

	[Token(Token = "0x4001F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Action<Transform> CollisionEnter;

	[Token(Token = "0x4001F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Transform> CollisionExit;

	[Token(Token = "0x4001F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GenericTrigger[] genericTriggers;

	[Token(Token = "0x6002207")]
	[Address(RVA = "0x329100", Offset = "0x329100", VA = "0x329100")]
	public GenericTriggerManager()
	{
	}

	[Token(Token = "0x6002208")]
	[Address(RVA = "0x329108", Offset = "0x329108", VA = "0x329108")]
	private void Start()
	{
	}

	[Token(Token = "0x6002209")]
	[Address(RVA = "0x32910C", Offset = "0x32910C", VA = "0x32910C")]
	private void Update()
	{
	}

	[Token(Token = "0x600220A")]
	[Address(RVA = "0x329110", Offset = "0x329110", VA = "0x329110")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600220B")]
	[Address(RVA = "0x3294A0", Offset = "0x3294A0", VA = "0x3294A0")]
	public void Initialize([Optional] GenericTrigger[] genericTriggers)
	{
	}

	[Token(Token = "0x600220C")]
	[Address(RVA = "0x3294BC", Offset = "0x3294BC", VA = "0x3294BC")]
	public void AddListeners()
	{
	}

	[Token(Token = "0x600220D")]
	[Address(RVA = "0x329114", Offset = "0x329114", VA = "0x329114")]
	public void RemoveListeners()
	{
	}
}
[Token(Token = "0x20004D9")]
public class HideBehavioursByControllers : MonoBehaviour
{
	[Token(Token = "0x4001F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool Invert;

	[Token(Token = "0x4001F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CONTROLLER[] ControllerTypeToCheckFor;

	[Token(Token = "0x4001F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Behaviour[] ObjectsToHide;

	[Token(Token = "0x4001F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CONTROLLER m_controller;

	[Token(Token = "0x600220E")]
	[Address(RVA = "0x506E68", Offset = "0x506E68", VA = "0x506E68")]
	public HideBehavioursByControllers()
	{
	}

	[Token(Token = "0x600220F")]
	[Address(RVA = "0x506EE4", Offset = "0x506EE4", VA = "0x506EE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002210")]
	[Address(RVA = "0x506F88", Offset = "0x506F88", VA = "0x506F88")]
	private void _HideObjects()
	{
	}
}
[Token(Token = "0x20004DA")]
public class HideObjectsByController : MonoBehaviour
{
	[Token(Token = "0x4001F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool HideIfIsController;

	[Token(Token = "0x4001F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CONTROLLER ControllerTypeToCheckFor;

	[Token(Token = "0x4001F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] ObjectsToHide;

	[Token(Token = "0x4001F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CONTROLLER m_controller;

	[Token(Token = "0x6002211")]
	[Address(RVA = "0x5070A4", Offset = "0x5070A4", VA = "0x5070A4")]
	public HideObjectsByController()
	{
	}

	[Token(Token = "0x6002212")]
	[Address(RVA = "0x507130", Offset = "0x507130", VA = "0x507130")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002213")]
	[Address(RVA = "0x5071D4", Offset = "0x5071D4", VA = "0x5071D4")]
	private void _HideObjects()
	{
	}
}
[Token(Token = "0x20004DB")]
public class HideObjectsByControllers : MonoBehaviour
{
	[Token(Token = "0x4001F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool Invert;

	[Token(Token = "0x4001F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CONTROLLER[] ControllerTypeToCheckFor;

	[Token(Token = "0x4001F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] ObjectsToHide;

	[Token(Token = "0x4001F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CONTROLLER m_controller;

	[Token(Token = "0x6002214")]
	[Address(RVA = "0x50727C", Offset = "0x50727C", VA = "0x50727C")]
	public HideObjectsByControllers()
	{
	}

	[Token(Token = "0x6002215")]
	[Address(RVA = "0x5072F8", Offset = "0x5072F8", VA = "0x5072F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002216")]
	[Address(RVA = "0x50739C", Offset = "0x50739C", VA = "0x50739C")]
	private void _HideObjects()
	{
	}
}
[Token(Token = "0x20004DC")]
public interface IInstanceFactory
{
}
namespace BPG.Utilities
{
	[Token(Token = "0x20004DD")]
	public static class BPGDebug
	{
		[Token(Token = "0x20004DE")]
		public enum LogType
		{
			[Token(Token = "0x4001F8D")]
			Log,
			[Token(Token = "0x4001F8E")]
			Warning,
			[Token(Token = "0x4001F8F")]
			Error
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x436AA4", Offset = "0x436AA4", VA = "0x436AA4")]
		public static void Log(object msg, [Optional] Transform transform, [Optional] Type type)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x436F20", Offset = "0x436F20", VA = "0x436F20")]
		public static void LogWarning(object msg, [Optional] Transform transform, [Optional] Type type)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x43701C", Offset = "0x43701C", VA = "0x43701C")]
		public static void LogError(object msg, [Optional] Transform transform, [Optional] Type type)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x436BA0", Offset = "0x436BA0", VA = "0x436BA0")]
		private static string _GetLogTypeMessage(LogType logType)
		{
			return null;
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x436DA8", Offset = "0x436DA8", VA = "0x436DA8")]
		private static string _GetMessage(object msg, [Optional] Type type)
		{
			return null;
		}
	}
}
[Token(Token = "0x20004DF")]
public class MiniJSON
{
	[Token(Token = "0x4001F90")]
	private const int TOKEN_NONE = 0;

	[Token(Token = "0x4001F91")]
	private const int TOKEN_CURLY_OPEN = 1;

	[Token(Token = "0x4001F92")]
	private const int TOKEN_CURLY_CLOSE = 2;

	[Token(Token = "0x4001F93")]
	private const int TOKEN_SQUARED_OPEN = 3;

	[Token(Token = "0x4001F94")]
	private const int TOKEN_SQUARED_CLOSE = 4;

	[Token(Token = "0x4001F95")]
	private const int TOKEN_COLON = 5;

	[Token(Token = "0x4001F96")]
	private const int TOKEN_COMMA = 6;

	[Token(Token = "0x4001F97")]
	private const int TOKEN_STRING = 7;

	[Token(Token = "0x4001F98")]
	private const int TOKEN_NUMBER = 8;

	[Token(Token = "0x4001F99")]
	private const int TOKEN_TRUE = 9;

	[Token(Token = "0x4001F9A")]
	private const int TOKEN_FALSE = 10;

	[Token(Token = "0x4001F9B")]
	private const int TOKEN_NULL = 11;

	[Token(Token = "0x4001F9C")]
	private const int BUILDER_CAPACITY = 5000;

	[Token(Token = "0x4001F9D")]
	private const int INDENT_SPACES = 3;

	[Token(Token = "0x4001F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static int lastErrorIndex;

	[Token(Token = "0x4001F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static string lastDecode;

	[Token(Token = "0x4001FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _makePretty;

	[Token(Token = "0x4001FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _indent;

	[Token(Token = "0x4001FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string _currentIndent;

	[Token(Token = "0x600221C")]
	[Address(RVA = "0x35AEAC", Offset = "0x35AEAC", VA = "0x35AEAC")]
	public MiniJSON()
	{
	}

	[Token(Token = "0x600221D")]
	[Address(RVA = "0x35AEB4", Offset = "0x35AEB4", VA = "0x35AEB4")]
	public static object jsonDecode(string json)
	{
		return null;
	}

	[Token(Token = "0x600221E")]
	[Address(RVA = "0x35B398", Offset = "0x35B398", VA = "0x35B398")]
	public static string jsonEncode(object json, bool makePretty = false)
	{
		return null;
	}

	[Token(Token = "0x600221F")]
	[Address(RVA = "0x35C0C8", Offset = "0x35C0C8", VA = "0x35C0C8")]
	public static bool lastDecodeSuccessful()
	{
		return default(bool);
	}

	[Token(Token = "0x6002220")]
	[Address(RVA = "0x35C160", Offset = "0x35C160", VA = "0x35C160")]
	public static int getLastErrorIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6002221")]
	[Address(RVA = "0x35C1EC", Offset = "0x35C1EC", VA = "0x35C1EC")]
	public static string getLastErrorSnippet()
	{
		return null;
	}

	[Token(Token = "0x6002222")]
	[Address(RVA = "0x35C434", Offset = "0x35C434", VA = "0x35C434")]
	protected static Dictionary<string, object> parseObject(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6002223")]
	[Address(RVA = "0x35D058", Offset = "0x35D058", VA = "0x35D058")]
	protected static List<object> parseArray(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6002224")]
	[Address(RVA = "0x35B02C", Offset = "0x35B02C", VA = "0x35B02C")]
	protected static object parseValue(char[] json, ref int index, ref bool success)
	{
		return null;
	}

	[Token(Token = "0x6002225")]
	[Address(RVA = "0x35CC50", Offset = "0x35CC50", VA = "0x35CC50")]
	protected static string parseString(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6002226")]
	[Address(RVA = "0x35D288", Offset = "0x35D288", VA = "0x35D288")]
	protected static double parseNumber(char[] json, ref int index)
	{
		return default(double);
	}

	[Token(Token = "0x6002227")]
	[Address(RVA = "0x35D478", Offset = "0x35D478", VA = "0x35D478")]
	protected static int getLastIndexOfNumber(char[] json, int index)
	{
		return default(int);
	}

	[Token(Token = "0x6002228")]
	[Address(RVA = "0x35D390", Offset = "0x35D390", VA = "0x35D390")]
	protected static void eatWhitespace(char[] json, ref int index)
	{
	}

	[Token(Token = "0x6002229")]
	[Address(RVA = "0x35CBBC", Offset = "0x35CBBC", VA = "0x35CBBC")]
	protected static int lookAhead(char[] json, int index)
	{
		return default(int);
	}

	[Token(Token = "0x600222A")]
	[Address(RVA = "0x35C704", Offset = "0x35C704", VA = "0x35C704")]
	protected static int nextToken(char[] json, ref int index)
	{
		return default(int);
	}

	[Token(Token = "0x600222B")]
	[Address(RVA = "0x35D55C", Offset = "0x35D55C", VA = "0x35D55C")]
	protected static bool serializeObjectOrArray(object objectOrArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600222C")]
	[Address(RVA = "0x35E168", Offset = "0x35E168", VA = "0x35E168")]
	protected static bool serializeDictionary(Dictionary<string, string> dict, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600222D")]
	[Address(RVA = "0x35D98C", Offset = "0x35D98C", VA = "0x35D98C")]
	protected static bool serializeDictionary(Dictionary<string, object> dict, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600222E")]
	[Address(RVA = "0x35EBD0", Offset = "0x35EBD0", VA = "0x35EBD0")]
	protected static bool serializeArray(object anArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600222F")]
	[Address(RVA = "0x35DE80", Offset = "0x35DE80", VA = "0x35DE80")]
	protected static bool serializeArray(Array anArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x6002230")]
	[Address(RVA = "0x35E5B4", Offset = "0x35E5B4", VA = "0x35E5B4")]
	private static void PrettyHeader(StringBuilder builder)
	{
	}

	[Token(Token = "0x6002231")]
	[Address(RVA = "0x35EAB0", Offset = "0x35EAB0", VA = "0x35EAB0")]
	private static void PrettyFooter(StringBuilder builder)
	{
	}

	[Token(Token = "0x6002232")]
	[Address(RVA = "0x35F234", Offset = "0x35F234", VA = "0x35F234")]
	private static void Indent(bool add)
	{
	}

	[Token(Token = "0x6002233")]
	[Address(RVA = "0x35B49C", Offset = "0x35B49C", VA = "0x35B49C")]
	protected static bool serializeValue(object value, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x6002234")]
	[Address(RVA = "0x35F4A8", Offset = "0x35F4A8", VA = "0x35F4A8")]
	protected static void serializeType(Type t, object value, StringBuilder builder)
	{
	}

	[Token(Token = "0x6002235")]
	[Address(RVA = "0x35E6D4", Offset = "0x35E6D4", VA = "0x35E6D4")]
	protected static void serializeString(string aString, StringBuilder builder)
	{
	}

	[Token(Token = "0x6002236")]
	[Address(RVA = "0x35F3F4", Offset = "0x35F3F4", VA = "0x35F3F4")]
	protected static void serializeNumber(double number, StringBuilder builder)
	{
	}

	[Token(Token = "0x6002237")]
	[Address(RVA = "0x35F5B0", Offset = "0x35F5B0", VA = "0x35F5B0")]
	public static string FormatJson(string str)
	{
		return null;
	}
}
[Token(Token = "0x20004E0")]
public static class MiniJsonExtensions
{
	[Token(Token = "0x6002239")]
	[Address(RVA = "0x360090", Offset = "0x360090", VA = "0x360090")]
	public static string toJson(this Dictionary<string, string> obj)
	{
		return null;
	}

	[Token(Token = "0x600223A")]
	[Address(RVA = "0x360114", Offset = "0x360114", VA = "0x360114")]
	public static string toJson(this Dictionary<string, object> obj)
	{
		return null;
	}

	[Token(Token = "0x600223B")]
	[Address(RVA = "0x360198", Offset = "0x360198", VA = "0x360198")]
	public static List<object> listFromJson(this string json)
	{
		return null;
	}

	[Token(Token = "0x600223C")]
	[Address(RVA = "0x360264", Offset = "0x360264", VA = "0x360264")]
	public static string toJson(this Hashtable obj)
	{
		return null;
	}

	[Token(Token = "0x600223D")]
	[Address(RVA = "0x3606CC", Offset = "0x3606CC", VA = "0x3606CC")]
	public static Dictionary<string, object> dictionaryFromJson(this string json)
	{
		return null;
	}
}
[Token(Token = "0x20004E1")]
public class MoveObject : MonoBehaviour
{
	[Token(Token = "0x20004E2")]
	public enum ANIM_TYPES
	{
		[Token(Token = "0x4001FB6")]
		Position,
		[Token(Token = "0x4001FB7")]
		Rotation,
		[Token(Token = "0x4001FB8")]
		Scale,
		[Token(Token = "0x4001FB9")]
		Visiblity
	}

	[Token(Token = "0x20004E3")]
	public enum LOOP_TYPES
	{
		[Token(Token = "0x4001FBB")]
		Once,
		[Token(Token = "0x4001FBC")]
		LoopOneWay,
		[Token(Token = "0x4001FBD")]
		BackAndFourth,
		[Token(Token = "0x4001FBE")]
		LoopBackAndFourth,
		[Token(Token = "0x4001FBF")]
		PlayHalf
	}

	[Token(Token = "0x20004E4")]
	public enum PLAY_MOVE_DIRECTION
	{
		[Token(Token = "0x4001FC1")]
		ToOffset,
		[Token(Token = "0x4001FC2")]
		FromOffset
	}

	[Token(Token = "0x20004E5")]
	public enum MOVE_PHASES
	{
		[Token(Token = "0x4001FC4")]
		Wait,
		[Token(Token = "0x4001FC5")]
		DelayBeforeOffset,
		[Token(Token = "0x4001FC6")]
		ToOffset,
		[Token(Token = "0x4001FC7")]
		DelayAfterOffset,
		[Token(Token = "0x4001FC8")]
		FromOffset
	}

	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174334", Offset = "0x174334")]
	private sealed class <_WaitForm_startDelay>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waitUntilTime>__0;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MoveObject $this;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170005A7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600278C")]
			[Address(RVA = "0x3635B0", Offset = "0x3635B0", VA = "0x3635B0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600278D")]
			[Address(RVA = "0x3635B8", Offset = "0x3635B8", VA = "0x3635B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x363014", Offset = "0x363014", VA = "0x363014")]
		[DebuggerHidden]
		public <_WaitForm_startDelay>c__Iterator0()
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x36345C", Offset = "0x36345C", VA = "0x36345C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x3635C0", Offset = "0x3635C0", VA = "0x3635C0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x3635D4", Offset = "0x3635D4", VA = "0x3635D4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_startActive;

	[Token(Token = "0x4001FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[SerializeField]
	private bool m_startVisible;

	[Token(Token = "0x4001FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	protected Transform m_objectToMove;

	[Token(Token = "0x4001FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool m_useCurrentPose;

	[Token(Token = "0x4001FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_animStartPose;

	[Token(Token = "0x4001FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 m_animOffsetPose;

	[Token(Token = "0x4001FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ANIM_TYPES m_animType;

	[Token(Token = "0x4001FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LOOP_TYPES m_loopType;

	[Token(Token = "0x4001FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Easing.EASING_TYPE m_toOffsetEasing;

	[Token(Token = "0x4001FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Easing.EASING_TYPE m_fromOffsetEasing;

	[Token(Token = "0x4001FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_startDelay;

	[Token(Token = "0x4001FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_loopCycleBeforeOffsetDelay;

	[Token(Token = "0x4001FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_loopCycleAfterOffsetDelay;

	[Token(Token = "0x4001FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_time;

	[Token(Token = "0x4001FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float m_animTime;

	[Token(Token = "0x4001FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_waitUntil;

	[Token(Token = "0x4001FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_endCycle;

	[Token(Token = "0x4001FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected MOVE_PHASES m_currentPhase;

	[Token(Token = "0x17000461")]
	public LOOP_TYPES LoopType
	{
		[Token(Token = "0x600223F")]
		[Address(RVA = "0x362754", Offset = "0x362754", VA = "0x362754")]
		get
		{
			return default(LOOP_TYPES);
		}
	}

	[Token(Token = "0x17000462")]
	public float AnimTime
	{
		[Token(Token = "0x6002240")]
		[Address(RVA = "0x36275C", Offset = "0x36275C", VA = "0x36275C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000463")]
	public bool IsMoving
	{
		[Token(Token = "0x6002241")]
		[Address(RVA = "0x358070", Offset = "0x358070", VA = "0x358070")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600223E")]
	[Address(RVA = "0x36267C", Offset = "0x36267C", VA = "0x36267C")]
	public MoveObject()
	{
	}

	[Token(Token = "0x6002242")]
	[Address(RVA = "0x362764", Offset = "0x362764", VA = "0x362764")]
	public void PlayMove(PLAY_MOVE_DIRECTION moveDirection = PLAY_MOVE_DIRECTION.ToOffset, bool restartMove = true)
	{
	}

	[Token(Token = "0x6002243")]
	[Address(RVA = "0x362814", Offset = "0x362814", VA = "0x362814")]
	public void CancelPlayMove(PLAY_MOVE_DIRECTION moveDirection = PLAY_MOVE_DIRECTION.FromOffset)
	{
	}

	[Token(Token = "0x6002244")]
	[Address(RVA = "0x362824", Offset = "0x362824", VA = "0x362824")]
	public void SetPosition(float animationPercent)
	{
	}

	[Token(Token = "0x6002245")]
	[Address(RVA = "0x3629F8", Offset = "0x3629F8", VA = "0x3629F8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6002246")]
	[Address(RVA = "0x362F90", Offset = "0x362F90", VA = "0x362F90")]
	[DebuggerHidden]
	private IEnumerator _WaitForm_startDelay()
	{
		return null;
	}

	[Token(Token = "0x6002247")]
	[Address(RVA = "0x36301C", Offset = "0x36301C", VA = "0x36301C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6002248")]
	[Address(RVA = "0x3630A8", Offset = "0x3630A8", VA = "0x3630A8")]
	private void _GetPhase()
	{
	}

	[Token(Token = "0x6002249")]
	[Address(RVA = "0x3631CC", Offset = "0x3631CC", VA = "0x3631CC")]
	private void _AnimateToOffset()
	{
	}

	[Token(Token = "0x600224A")]
	[Address(RVA = "0x3632AC", Offset = "0x3632AC", VA = "0x3632AC")]
	private void _AnimateFromOffset()
	{
	}

	[Token(Token = "0x600224B")]
	[Address(RVA = "0x3628A0", Offset = "0x3628A0", VA = "0x3628A0")]
	private void _AdvanceAnimation(Vector3 pose)
	{
	}
}
[Token(Token = "0x20004E6")]
public class ObjectRecorder : MonoBehaviour
{
	[Token(Token = "0x4001FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private string m_name;

	[Token(Token = "0x4001FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_directory;

	[Token(Token = "0x4001FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private BasePathType m_basePath;

	[Token(Token = "0x4001FCC")]
	private const float DEFAULT_INTERVAL = 0.5f;

	[Token(Token = "0x4001FCD")]
	private const int MAX_REC_POS = 3600;

	[Token(Token = "0x4001FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_enableRecorder;

	[Token(Token = "0x4001FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Transform m_transformToRecord;

	[Token(Token = "0x4001FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_keyFrameInterval;

	[Token(Token = "0x4001FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_elapsedInterval;

	[Token(Token = "0x4001FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_totalTime;

	[Token(Token = "0x4001FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private ACRecPosCollection m_acRecPosCollection;

	[Token(Token = "0x4001FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool m_isFixedUpdate;

	[Token(Token = "0x4001FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17F1C4", Offset = "0x17F1C4")]
	private static Func<FileInfo, bool> <>f__am$cache0;

	[Token(Token = "0x4001FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17F1D4", Offset = "0x17F1D4")]
	private static Func<FileInfo, bool> <>f__am$cache1;

	[Token(Token = "0x600224C")]
	[Address(RVA = "0x3FA928", Offset = "0x3FA928", VA = "0x3FA928")]
	public ObjectRecorder()
	{
	}

	[Token(Token = "0x600224D")]
	[Address(RVA = "0x3FAA58", Offset = "0x3FAA58", VA = "0x3FAA58")]
	private void Start()
	{
	}

	[Token(Token = "0x600224E")]
	[Address(RVA = "0x3FAC58", Offset = "0x3FAC58", VA = "0x3FAC58")]
	private void Update()
	{
	}

	[Token(Token = "0x600224F")]
	[Address(RVA = "0x3FAD68", Offset = "0x3FAD68", VA = "0x3FAD68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6002250")]
	[Address(RVA = "0x3FAD78", Offset = "0x3FAD78", VA = "0x3FAD78")]
	public List<ACRecPos> GetRecPos()
	{
		return null;
	}

	[Token(Token = "0x6002251")]
	[Address(RVA = "0x3FAD9C", Offset = "0x3FAD9C", VA = "0x3FAD9C")]
	public void EnableRecorder(bool isEnabled)
	{
	}

	[Token(Token = "0x6002252")]
	[Address(RVA = "0x3FB288", Offset = "0x3FB288", VA = "0x3FB288")]
	public void SetObjectToRecord(Transform recordedObject)
	{
	}

	[Token(Token = "0x6002253")]
	[Address(RVA = "0x3FB290", Offset = "0x3FB290", VA = "0x3FB290")]
	public void SetFileName(string fileName)
	{
	}

	[Token(Token = "0x6002254")]
	[Address(RVA = "0x3FB298", Offset = "0x3FB298", VA = "0x3FB298")]
	public void SetDirectory(string directory)
	{
	}

	[Token(Token = "0x6002255")]
	[Address(RVA = "0x3FB2A0", Offset = "0x3FB2A0", VA = "0x3FB2A0")]
	public void SetBasePath(BasePathType basePath)
	{
	}

	[Token(Token = "0x6002256")]
	[Address(RVA = "0x3FB2A8", Offset = "0x3FB2A8", VA = "0x3FB2A8")]
	public void SetBasePath(BaseDataPathType basePath)
	{
	}

	[Token(Token = "0x6002257")]
	[Address(RVA = "0x3FB334", Offset = "0x3FB334", VA = "0x3FB334")]
	public string ToJSONString()
	{
		return null;
	}

	[Token(Token = "0x6002258")]
	[Address(RVA = "0x3FB34C", Offset = "0x3FB34C", VA = "0x3FB34C")]
	public void ExportToJSONStringFile(bool overWrite = false)
	{
	}

	[Token(Token = "0x6002259")]
	[Address(RVA = "0x3FB844", Offset = "0x3FB844", VA = "0x3FB844")]
	private void SetPathNameSuffix(StringBuilder completePathBuilder, string fileExtension)
	{
	}

	[Token(Token = "0x600225A")]
	[Address(RVA = "0x3FBD04", Offset = "0x3FBD04", VA = "0x3FBD04")]
	public void ExportToJSONByteFile()
	{
	}

	[Token(Token = "0x600225B")]
	[Address(RVA = "0x3FAC68", Offset = "0x3FAC68", VA = "0x3FAC68")]
	private void _UpdateRecorder()
	{
	}

	[Token(Token = "0x600225C")]
	[Address(RVA = "0x3FC098", Offset = "0x3FC098", VA = "0x3FC098")]
	private void _Record(float interval)
	{
	}

	[Token(Token = "0x600225D")]
	[Address(RVA = "0x3FAA68", Offset = "0x3FAA68", VA = "0x3FAA68")]
	private void _StartRecorder()
	{
	}

	[Token(Token = "0x600225E")]
	[Address(RVA = "0x3FADE8", Offset = "0x3FADE8", VA = "0x3FADE8")]
	private void _StopRecorder()
	{
	}

	[Token(Token = "0x600225F")]
	[Address(RVA = "0x3FC1D0", Offset = "0x3FC1D0", VA = "0x3FC1D0")]
	private void ResetRecordingValues()
	{
	}

	[Token(Token = "0x6002260")]
	[Address(RVA = "0x3FB340", Offset = "0x3FB340", VA = "0x3FB340")]
	private string _ToJSONString(ACRecPosCollection recPos)
	{
		return null;
	}

	[Token(Token = "0x6002261")]
	[Address(RVA = "0x3FC1E0", Offset = "0x3FC1E0", VA = "0x3FC1E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1822C0", Offset = "0x1822C0")]
	private static bool <ExportToJSONStringFile>m__0(FileInfo x)
	{
		return default(bool);
	}

	[Token(Token = "0x6002262")]
	[Address(RVA = "0x3FC278", Offset = "0x3FC278", VA = "0x3FC278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1822D0", Offset = "0x1822D0")]
	private static bool <ExportToJSONByteFile>m__1(FileInfo x)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x20004E7")]
public class ACRecPosCollection
{
	[Token(Token = "0x4001FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public List<ACRecPos> AcRecPosList;

	[Token(Token = "0x6002263")]
	[Address(RVA = "0x41E1B0", Offset = "0x41E1B0", VA = "0x41E1B0")]
	public ACRecPosCollection()
	{
	}
}
[Serializable]
[Token(Token = "0x20004E8")]
public class ACRecPos
{
	[Token(Token = "0x4001FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 ACPos;

	[Token(Token = "0x4001FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Quaternion ACRot;

	[Token(Token = "0x4001FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TimeInterval;

	[Token(Token = "0x6002264")]
	[Address(RVA = "0x41E150", Offset = "0x41E150", VA = "0x41E150")]
	public ACRecPos(Vector3 pos, Quaternion rot, float timeInterval)
	{
	}

	[Token(Token = "0x6002265")]
	[Address(RVA = "0x41E1A8", Offset = "0x41E1A8", VA = "0x41E1A8")]
	public ACRecPos()
	{
	}
}
[Token(Token = "0x20004E9")]
public class ObjectsVisibilityByPlatform : MonoBehaviour
{
	[Token(Token = "0x4001FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	protected PLATFORM platformToEvaluate;

	[Token(Token = "0x4001FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject[] IfPlatformShow;

	[Token(Token = "0x4001FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject[] IfPlatformHide;

	[Token(Token = "0x4001FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] IfNotPlatformShow;

	[Token(Token = "0x4001FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject[] IfNotPlatformHide;

	[Token(Token = "0x4001FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool allowPlatformCheckInversion;

	[Token(Token = "0x4001FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x6002266")]
	[Address(RVA = "0x3FC310", Offset = "0x3FC310", VA = "0x3FC310")]
	public ObjectsVisibilityByPlatform()
	{
	}

	[Token(Token = "0x6002267")]
	[Address(RVA = "0x3FC328", Offset = "0x3FC328", VA = "0x3FC328")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002268")]
	[Address(RVA = "0x3FC354", Offset = "0x3FC354", VA = "0x3FC354")]
	protected bool Init()
	{
		return default(bool);
	}

	[Token(Token = "0x6002269")]
	[Address(RVA = "0x3FC420", Offset = "0x3FC420", VA = "0x3FC420", Slot = "4")]
	protected virtual void _EvaluateVisibility(bool checkPassed)
	{
	}
}
[Token(Token = "0x20004EA")]
public class OnLoad : MonoBehaviour
{
	[Token(Token = "0x20004EB")]
	public enum TARGET_TYPE
	{
		[Token(Token = "0x4001FF9")]
		ThisGameObject,
		[Token(Token = "0x4001FFA")]
		Specified,
		[Token(Token = "0x4001FFB")]
		Camera,
		[Token(Token = "0x4001FFC")]
		CameraRoot
	}

	[Token(Token = "0x20005D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174344", Offset = "0x174344")]
	private sealed class <_WaitForActivate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool <controllerFound>__1;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal CONTROLLER[] $locvar0;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal OnLoad $this;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170005A9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002792")]
			[Address(RVA = "0x2AFDD0", Offset = "0x2AFDD0", VA = "0x2AFDD0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002793")]
			[Address(RVA = "0x2AFDD8", Offset = "0x2AFDD8", VA = "0x2AFDD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x2AF078", Offset = "0x2AF078", VA = "0x2AF078")]
		[DebuggerHidden]
		public <_WaitForActivate>c__Iterator0()
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x2AF9D4", Offset = "0x2AF9D4", VA = "0x2AF9D4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x2AFDE0", Offset = "0x2AFDE0", VA = "0x2AFDE0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x2AFDF4", Offset = "0x2AFDF4", VA = "0x2AFDF4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4001FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_sourceGO;

	[Token(Token = "0x4001FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TARGET_TYPE m_targetType;

	[Token(Token = "0x4001FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_targetGO;

	[Token(Token = "0x4001FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_isActive;

	[Token(Token = "0x4001FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_controllerSpecific;

	[Token(Token = "0x4001FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool m_waitForController;

	[Token(Token = "0x4001FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool m_invertControllerCheck;

	[Token(Token = "0x4001FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private CONTROLLER[] m_requiredController;

	[Token(Token = "0x4001FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_doNotDestroyOnLoad;

	[Token(Token = "0x4001FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool m_unparentOnLoad;

	[Token(Token = "0x4001FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool m_parentOnLoad;

	[Token(Token = "0x4001FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[SerializeField]
	private bool m_destroyOnLoad;

	[Token(Token = "0x4001FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool m_setActive;

	[Token(Token = "0x4001FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool m_setInactive;

	[Token(Token = "0x4001FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_delayActive;

	[Token(Token = "0x4001FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool m_localizeOnLoad;

	[Token(Token = "0x4001FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string m_localizedText;

	[Token(Token = "0x4001FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_setOrentation;

	[Token(Token = "0x4001FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 m_setPosition;

	[Token(Token = "0x4001FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 m_setEuler;

	[Token(Token = "0x4001FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector3 m_setScale;

	[Token(Token = "0x4001FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private GameManager m_gameManager;

	[Token(Token = "0x600226A")]
	[Address(RVA = "0x2AEBF4", Offset = "0x2AEBF4", VA = "0x2AEBF4")]
	public OnLoad()
	{
	}

	[Token(Token = "0x600226B")]
	[Address(RVA = "0x2AECEC", Offset = "0x2AECEC", VA = "0x2AECEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600226C")]
	[Address(RVA = "0x2AEDA4", Offset = "0x2AEDA4", VA = "0x2AEDA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600226D")]
	[Address(RVA = "0x2AEFF4", Offset = "0x2AEFF4", VA = "0x2AEFF4")]
	[DebuggerHidden]
	private IEnumerator _WaitForActivate()
	{
		return null;
	}

	[Token(Token = "0x600226E")]
	[Address(RVA = "0x2AF080", Offset = "0x2AF080", VA = "0x2AF080")]
	private void _Activate()
	{
	}
}
[Token(Token = "0x20004EC")]
public class ResetObject : MonoBehaviour
{
	[Token(Token = "0x20004ED")]
	private enum BOUNDS_STATE
	{
		[Token(Token = "0x400200C")]
		IsWithinBounds,
		[Token(Token = "0x400200D")]
		IsOutOfBounds
	}

	[Token(Token = "0x20004EE")]
	private enum RETURN_CONDITION
	{
		[Token(Token = "0x400200F")]
		None,
		[Token(Token = "0x4002010")]
		Velocity,
		[Token(Token = "0x4002011")]
		Time
	}

	[Token(Token = "0x4001FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Vector3 m_initPos;

	[Token(Token = "0x4001FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Vector3 m_initRot;

	[Token(Token = "0x4001FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected bool m_returnOnSpace;

	[Token(Token = "0x4002000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	protected bool m_returnOnInput;

	[Token(Token = "0x4002001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected InputController m_inputController;

	[Token(Token = "0x4002002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected bool m_returnOnLeaveBounds;

	[Token(Token = "0x4002003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider m_bounds;

	[Token(Token = "0x4002004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_timeBeforeReturn;

	[Token(Token = "0x4002005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_minVelocityBeforeReturn;

	[Token(Token = "0x4002006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_elapsedTimeBeforeReturn;

	[Token(Token = "0x4002007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BOUNDS_STATE m_boundsState;

	[Token(Token = "0x4002008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RETURN_CONDITION m_returnCondition;

	[Token(Token = "0x4002009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_returnOnSceneEnable;

	[Token(Token = "0x400200A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Rigidbody m_rb;

	[Token(Token = "0x600226F")]
	[Address(RVA = "0x293B58", Offset = "0x293B58", VA = "0x293B58")]
	public ResetObject()
	{
	}

	[Token(Token = "0x6002270")]
	[Address(RVA = "0x293C18", Offset = "0x293C18", VA = "0x293C18")]
	private void Start()
	{
	}

	[Token(Token = "0x6002271")]
	[Address(RVA = "0x293D40", Offset = "0x293D40", VA = "0x293D40", Slot = "4")]
	protected virtual void _Start()
	{
	}

	[Token(Token = "0x6002272")]
	[Address(RVA = "0x293D44", Offset = "0x293D44", VA = "0x293D44")]
	private void Update()
	{
	}

	[Token(Token = "0x6002273")]
	[Address(RVA = "0x293D6C", Offset = "0x293D6C", VA = "0x293D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002274")]
	[Address(RVA = "0x293C48", Offset = "0x293C48", VA = "0x293C48")]
	private void _GetInitPosAndRot()
	{
	}

	[Token(Token = "0x6002275")]
	[Address(RVA = "0x293D48", Offset = "0x293D48", VA = "0x293D48")]
	private void _UpdateReturn()
	{
	}

	[Token(Token = "0x6002276")]
	[Address(RVA = "0x2940B4", Offset = "0x2940B4", VA = "0x2940B4", Slot = "5")]
	protected virtual void _Return()
	{
	}

	[Token(Token = "0x6002277")]
	[Address(RVA = "0x293DA4", Offset = "0x293DA4", VA = "0x293DA4")]
	private void _UpdateReturnOnSpace()
	{
	}

	[Token(Token = "0x6002278")]
	[Address(RVA = "0x293DEC", Offset = "0x293DEC", VA = "0x293DEC")]
	private void _UpdateReturnOnInput()
	{
	}

	[Token(Token = "0x6002279")]
	[Address(RVA = "0x293E3C", Offset = "0x293E3C", VA = "0x293E3C")]
	private void _UpdateReturnOnLeaveBounds()
	{
	}

	[Token(Token = "0x600227A")]
	[Address(RVA = "0x29428C", Offset = "0x29428C", VA = "0x29428C")]
	private void _UpdateReturnOnLeaveBoundsCondition()
	{
	}

	[Token(Token = "0x600227B")]
	[Address(RVA = "0x294334", Offset = "0x294334", VA = "0x294334")]
	private bool _IsVelocityLowerThanX(float magnitude)
	{
		return default(bool);
	}

	[Token(Token = "0x600227C")]
	[Address(RVA = "0x293D88", Offset = "0x293D88", VA = "0x293D88")]
	private void _OnEnableReturn()
	{
	}

	[Token(Token = "0x600227D")]
	[Address(RVA = "0x293CD8", Offset = "0x293CD8", VA = "0x293CD8")]
	private void _GetRigidbody()
	{
	}

	[Token(Token = "0x600227E")]
	[Address(RVA = "0x294158", Offset = "0x294158", VA = "0x294158")]
	private void _StopRigidbody()
	{
	}
}
[Token(Token = "0x20004EF")]
public class SemaphoreToggle
{
	[Token(Token = "0x4002012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool enabled;

	[Token(Token = "0x4002013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool isLocked;

	[Token(Token = "0x17000464")]
	public bool Enabled
	{
		[Token(Token = "0x6002280")]
		[Address(RVA = "0x2F8BAC", Offset = "0x2F8BAC", VA = "0x2F8BAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000465")]
	public bool IsLocked
	{
		[Token(Token = "0x6002281")]
		[Address(RVA = "0x2F8BB4", Offset = "0x2F8BB4", VA = "0x2F8BB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600227F")]
	[Address(RVA = "0x2F8BA4", Offset = "0x2F8BA4", VA = "0x2F8BA4")]
	public SemaphoreToggle()
	{
	}

	[Token(Token = "0x6002282")]
	[Address(RVA = "0x2F8BBC", Offset = "0x2F8BBC", VA = "0x2F8BBC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6002283")]
	[Address(RVA = "0x2F8BE0", Offset = "0x2F8BE0", VA = "0x2F8BE0")]
	public void Release()
	{
	}

	[Token(Token = "0x6002284")]
	[Address(RVA = "0x2F8BEC", Offset = "0x2F8BEC", VA = "0x2F8BEC")]
	public void ForceToggle()
	{
	}
}
[Token(Token = "0x20004F0")]
public class TextureBy : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004F1")]
	private class DLCTextureGroup
	{
		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VisibilityByDLC.DLC DLCType;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Texture2D[] TextureToUse;

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x2CC628", Offset = "0x2CC628", VA = "0x2CC628")]
		public DLCTextureGroup()
		{
		}
	}

	[Token(Token = "0x20004F2")]
	public enum TYPE
	{
		[Token(Token = "0x4002029")]
		Platform,
		[Token(Token = "0x400202A")]
		Controller
	}

	[Token(Token = "0x20004F3")]
	public enum ALTERATION_METHOD
	{
		[Token(Token = "0x400202C")]
		CreateInstance,
		[Token(Token = "0x400202D")]
		ProjectWide
	}

	[Token(Token = "0x20004F4")]
	public enum MATERIAL_SEARCH_TYPE
	{
		[Token(Token = "0x400202F")]
		All,
		[Token(Token = "0x4002030")]
		Specific,
		[Token(Token = "0x4002031")]
		First
	}

	[Token(Token = "0x4002014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TYPE m_type;

	[Token(Token = "0x4002015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private PLATFORM[] m_platform;

	[Token(Token = "0x4002016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private CONTROLLER[] m_controller;

	[Token(Token = "0x4002017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] m_objectsToEffect;

	[Token(Token = "0x4002018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_includeChildren;

	[Token(Token = "0x4002019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool m_includeInactiveChildren;

	[Token(Token = "0x400201A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] m_objectChildren;

	[Token(Token = "0x400201B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private ALTERATION_METHOD m_alterationMethod;

	[Token(Token = "0x400201C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MATERIAL_SEARCH_TYPE m_materialSearchType;

	[Token(Token = "0x400201D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private string m_specificMaterialNamed;

	[Token(Token = "0x400201E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Material> m_materialsEffected;

	[Token(Token = "0x400201F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_useDLC;

	[Token(Token = "0x4002020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture2D[] m_textureToUse;

	[Token(Token = "0x4002021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private DLCTextureGroup[] m_dlcTextureGroup;

	[Token(Token = "0x4002022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Texture> m_texturesEffected;

	[Token(Token = "0x4002023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_useMainTexture;

	[Token(Token = "0x4002024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string m_textureRefName;

	[Token(Token = "0x4002025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x6002285")]
	[Address(RVA = "0x2CB5A8", Offset = "0x2CB5A8", VA = "0x2CB5A8")]
	public TextureBy()
	{
	}

	[Token(Token = "0x6002286")]
	[Address(RVA = "0x2CB6BC", Offset = "0x2CB6BC", VA = "0x2CB6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002287")]
	[Address(RVA = "0x2CB940", Offset = "0x2CB940", VA = "0x2CB940")]
	private void Start()
	{
	}

	[Token(Token = "0x6002288")]
	[Address(RVA = "0x2CC2A8", Offset = "0x2CC2A8", VA = "0x2CC2A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6002289")]
	[Address(RVA = "0x2CBAF4", Offset = "0x2CBAF4", VA = "0x2CBAF4")]
	private void _SetTexture(int textureIndex)
	{
	}

	[Token(Token = "0x600228A")]
	[Address(RVA = "0x2CC574", Offset = "0x2CC574", VA = "0x2CC574")]
	private void _AssignMaterialsToObject(Material[] materials, Transform tForm)
	{
	}

	[Token(Token = "0x600228B")]
	[Address(RVA = "0x2CC44C", Offset = "0x2CC44C", VA = "0x2CC44C")]
	private Texture2D _GetDLCApproiateTexture(int index)
	{
		return null;
	}
}
[Token(Token = "0x20004F5")]
public class TrackChecker : MonoBehaviour
{
	[Token(Token = "0x600228D")]
	[Address(RVA = "0x2D1C20", Offset = "0x2D1C20", VA = "0x2D1C20")]
	public TrackChecker()
	{
	}

	[Token(Token = "0x600228E")]
	[Address(RVA = "0x2D1C28", Offset = "0x2D1C28", VA = "0x2D1C28")]
	private void Update()
	{
	}

	[Token(Token = "0x600228F")]
	[Address(RVA = "0x2D1CE0", Offset = "0x2D1CE0", VA = "0x2D1CE0")]
	public bool IsHMDTracked()
	{
		return default(bool);
	}

	[Token(Token = "0x6002290")]
	[Address(RVA = "0x2D1E50", Offset = "0x2D1E50", VA = "0x2D1E50")]
	public bool IsLeftControllerTracked()
	{
		return default(bool);
	}

	[Token(Token = "0x6002291")]
	[Address(RVA = "0x2D1FE4", Offset = "0x2D1FE4", VA = "0x2D1FE4")]
	public bool IsRightControllerTracked()
	{
		return default(bool);
	}

	[Token(Token = "0x6002292")]
	[Address(RVA = "0x2D2178", Offset = "0x2D2178", VA = "0x2D2178")]
	public bool AreControllersTracked()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004F6")]
public class TrackRotation
{
	[Token(Token = "0x4002032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float LastRotation;

	[Token(Token = "0x4002033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int m_numberOfRotations;

	[Token(Token = "0x17000466")]
	public float UnclampedRotation
	{
		[Token(Token = "0x6002294")]
		[Address(RVA = "0x2D22AC", Offset = "0x2D22AC", VA = "0x2D22AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6002293")]
	[Address(RVA = "0x2D22A4", Offset = "0x2D22A4", VA = "0x2D22A4")]
	public TrackRotation()
	{
	}

	[Token(Token = "0x6002295")]
	[Address(RVA = "0x2D22D0", Offset = "0x2D22D0", VA = "0x2D22D0")]
	public float UpdateRotation(float rotation)
	{
		return default(float);
	}

	[Token(Token = "0x6002296")]
	[Address(RVA = "0x2D235C", Offset = "0x2D235C", VA = "0x2D235C")]
	public void SetRotation(float rotation)
	{
	}

	[Token(Token = "0x6002297")]
	[Address(RVA = "0x2D239C", Offset = "0x2D239C", VA = "0x2D239C")]
	public void SetRotation(int turns, float degrees)
	{
	}
}
[Serializable]
[Token(Token = "0x20004F7")]
public class UnityFloatEvent : UnityEvent<float>
{
	[Token(Token = "0x6002298")]
	[Address(RVA = "0x38BD68", Offset = "0x38BD68", VA = "0x38BD68")]
	public UnityFloatEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20004F8")]
public class UnityIntEvent : UnityEvent<int>
{
	[Token(Token = "0x6002299")]
	[Address(RVA = "0x38BDCC", Offset = "0x38BDCC", VA = "0x38BDCC")]
	public UnityIntEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20004F9")]
public class UnityStringEvent : UnityEvent<string>
{
	[Token(Token = "0x600229A")]
	[Address(RVA = "0x38BE30", Offset = "0x38BE30", VA = "0x38BE30")]
	public UnityStringEvent()
	{
	}
}
[Token(Token = "0x20004FA")]
public static class Utilities
{
	[Token(Token = "0x600229B")]
	[Address(RVA = "0x38CA3C", Offset = "0x38CA3C", VA = "0x38CA3C")]
	public static string GetTimeAsString(int seconds)
	{
		return null;
	}

	[Token(Token = "0x600229C")]
	[Address(RVA = "0x38CC18", Offset = "0x38CC18", VA = "0x38CC18")]
	public static string GetDollarsAsString(int amount)
	{
		return null;
	}

	[Token(Token = "0x600229D")]
	[Address(RVA = "0x38CCEC", Offset = "0x38CCEC", VA = "0x38CCEC")]
	public static float RoundToPlace(float number, int decimalPlace)
	{
		return default(float);
	}

	[Token(Token = "0x600229E")]
	public static T[] Shuffle<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x600229F")]
	[Address(RVA = "0x38CDA0", Offset = "0x38CDA0", VA = "0x38CDA0")]
	public static float AverageArray(float[] array)
	{
		return default(float);
	}

	[Token(Token = "0x60022A0")]
	[Address(RVA = "0x38CE38", Offset = "0x38CE38", VA = "0x38CE38")]
	public static float[] InsertIntoArray(float[] array, float value)
	{
		return null;
	}

	[Token(Token = "0x60022A1")]
	[Address(RVA = "0x38CF00", Offset = "0x38CF00", VA = "0x38CF00")]
	public static float[] InsertIntoArray(float[] array, float value, int position)
	{
		return null;
	}

	[Token(Token = "0x60022A2")]
	[Address(RVA = "0x38CB08", Offset = "0x38CB08", VA = "0x38CB08")]
	public static string IntToStringOfLenght(int intString, int desiredLenght)
	{
		return null;
	}

	[Token(Token = "0x60022A3")]
	[Address(RVA = "0x38D01C", Offset = "0x38D01C", VA = "0x38D01C")]
	public static int GetFirstIntPlace(int number)
	{
		return default(int);
	}

	[Token(Token = "0x60022A4")]
	[Address(RVA = "0x38D054", Offset = "0x38D054", VA = "0x38D054")]
	public static int GetIntAtPlace(int number, int place)
	{
		return default(int);
	}

	[Token(Token = "0x60022A5")]
	[Address(RVA = "0x38D09C", Offset = "0x38D09C", VA = "0x38D09C")]
	public static float ReMap(float input, float inputRangeStart, float inputRangeEnd, float outputRangeStart, float outputRangeEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60022A6")]
	[Address(RVA = "0x38D160", Offset = "0x38D160", VA = "0x38D160")]
	public static int IndexRightLeftUp(int number)
	{
		return default(int);
	}

	[Token(Token = "0x60022A7")]
	[Address(RVA = "0x38D1F4", Offset = "0x38D1F4", VA = "0x38D1F4")]
	public static float getDistance2d(Transform transA, Transform transB, bool returnSqrt = false)
	{
		return default(float);
	}

	[Token(Token = "0x60022A8")]
	[Address(RVA = "0x38D37C", Offset = "0x38D37C", VA = "0x38D37C")]
	public static float getDistance2d(Vector3 vectorA, Vector3 vectorB, bool returnSqrt = false)
	{
		return default(float);
	}

	[Token(Token = "0x60022A9")]
	[Address(RVA = "0x38D48C", Offset = "0x38D48C", VA = "0x38D48C")]
	public static float getDistance3d(Transform transA, Transform transB, bool returnSqrt = false)
	{
		return default(float);
	}

	[Token(Token = "0x60022AA")]
	[Address(RVA = "0x38D66C", Offset = "0x38D66C", VA = "0x38D66C")]
	public static float getDistance3d(Vector3 vectorA, Vector3 vectorB, bool returnSqrt = false)
	{
		return default(float);
	}

	[Token(Token = "0x60022AB")]
	public static T GetOrAddComponent<T>(GameObject obj) where T : Component
	{
		return null;
	}
}
[Token(Token = "0x20004FB")]
public class VisibilityByCurrentAircraft : MonoBehaviour
{
	[Token(Token = "0x4002034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_objectToSetVisibility;

	[Token(Token = "0x4002035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private VEHICLE_TYPE m_VehicleToCheckIsActive;

	[Token(Token = "0x4002036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x60022AC")]
	[Address(RVA = "0x737CA0", Offset = "0x737CA0", VA = "0x737CA0")]
	public VisibilityByCurrentAircraft()
	{
	}

	[Token(Token = "0x60022AD")]
	[Address(RVA = "0x737CA8", Offset = "0x737CA8", VA = "0x737CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022AE")]
	[Address(RVA = "0x737D98", Offset = "0x737D98", VA = "0x737D98")]
	public void OnEnable()
	{
	}
}
[Token(Token = "0x20004FC")]
public class VisibilityByDLC : MonoBehaviour
{
	[Token(Token = "0x20004FD")]
	public enum DLC
	{
		[Token(Token = "0x400203B")]
		None,
		[Token(Token = "0x400203C")]
		Farm
	}

	[Token(Token = "0x4002037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private DLC m_requiredDLC;

	[Token(Token = "0x4002038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject[] m_effectedObjects;

	[Token(Token = "0x4002039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x60022AF")]
	[Address(RVA = "0x737E60", Offset = "0x737E60", VA = "0x737E60")]
	public VisibilityByDLC()
	{
	}

	[Token(Token = "0x60022B0")]
	[Address(RVA = "0x737E68", Offset = "0x737E68", VA = "0x737E68")]
	private void Start()
	{
	}
}
[Token(Token = "0x20004FE")]
public class VisibilityByHandedness : MonoBehaviour
{
	[Token(Token = "0x20004FF")]
	private enum HANDEDNESS
	{
		[Token(Token = "0x4002041")]
		None,
		[Token(Token = "0x4002042")]
		Left,
		[Token(Token = "0x4002043")]
		Right
	}

	[Token(Token = "0x400203D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_objectToSetVisibility;

	[Token(Token = "0x400203E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private HANDEDNESS m_handedness;

	[Token(Token = "0x400203F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x60022B1")]
	[Address(RVA = "0x737E6C", Offset = "0x737E6C", VA = "0x737E6C")]
	public VisibilityByHandedness()
	{
	}

	[Token(Token = "0x60022B2")]
	[Address(RVA = "0x737E74", Offset = "0x737E74", VA = "0x737E74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022B3")]
	[Address(RVA = "0x737F64", Offset = "0x737F64", VA = "0x737F64")]
	public void Start()
	{
	}
}
[Token(Token = "0x2000500")]
public class VisibilityBySpeed : ObjectsVisibilityByPlatform
{
	[Token(Token = "0x4002044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameManager.SAMSUNGMODEL[] m_samsungModel;

	[Token(Token = "0x4002045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameManager.DAYDREAMMODEL[] m_daydreamModel;

	[Token(Token = "0x4002046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool m_invertCheck;

	[Token(Token = "0x60022B4")]
	[Address(RVA = "0x7381D0", Offset = "0x7381D0", VA = "0x7381D0")]
	public VisibilityBySpeed()
	{
	}

	[Token(Token = "0x60022B5")]
	[Address(RVA = "0x7381D8", Offset = "0x7381D8", VA = "0x7381D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022B6")]
	[Address(RVA = "0x7382D0", Offset = "0x7382D0", VA = "0x7382D0")]
	private bool _IsFast()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000501")]
public class AirBrake : MonoBehaviour
{
	[Token(Token = "0x2000502")]
	private enum BRAKE_STATE
	{
		[Token(Token = "0x4002061")]
		Braking,
		[Token(Token = "0x4002062")]
		Braked,
		[Token(Token = "0x4002063")]
		Reversing
	}

	[Token(Token = "0x4002047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4002048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WheelCollider[] m_wheelColliders;

	[Token(Token = "0x4002049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Rigidbody m_planeRB;

	[Token(Token = "0x400204A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Engine m_planeEngine;

	[Token(Token = "0x400204B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x400204C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_brakePositionTform;

	[Token(Token = "0x400204D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_brakePosition;

	[Token(Token = "0x400204E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_brakeEulerAngles;

	[Token(Token = "0x400204F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_brakeDeceleration;

	[Token(Token = "0x4002050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_reverseThrust;

	[Token(Token = "0x4002051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private BRAKE_STATE m_brakeState;

	[Token(Token = "0x4002052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InteractableInput m_interactableThrottleInput;

	[Token(Token = "0x4002053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private InteractableInput m_interactableBreakInput;

	[Token(Token = "0x4002054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_brakeZeroThreshold;

	[Token(Token = "0x4002055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float m_velThresholdToApplyBrakes;

	[Token(Token = "0x4002056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_brakeZeroElapsed;

	[Token(Token = "0x4002057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_throttleThresholdToApplyBrakes;

	[Token(Token = "0x4002058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_inputThresholdToApplyBrakes;

	[Token(Token = "0x4002059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float m_brakeZeroTime;

	[Token(Token = "0x400205A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float m_reverseVelocity;

	[Token(Token = "0x400205B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float m_reverseAcceleration;

	[Token(Token = "0x400205C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_currentReverseVelocity;

	[Token(Token = "0x400205D")]
	private const float m_velocityStillThreshold = 0.05f;

	[Token(Token = "0x400205E")]
	private const float m_reverseTorque = -2f;

	[Token(Token = "0x400205F")]
	private const float m_brakeTorque = 2f;

	[Token(Token = "0x60022B7")]
	[Address(RVA = "0x420CF0", Offset = "0x420CF0", VA = "0x420CF0")]
	public AirBrake()
	{
	}

	[Token(Token = "0x60022B8")]
	[Address(RVA = "0x420E18", Offset = "0x420E18", VA = "0x420E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022B9")]
	[Address(RVA = "0x42149C", Offset = "0x42149C", VA = "0x42149C")]
	private void Start()
	{
	}

	[Token(Token = "0x60022BA")]
	[Address(RVA = "0x421594", Offset = "0x421594", VA = "0x421594")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60022BB")]
	[Address(RVA = "0x421680", Offset = "0x421680", VA = "0x421680")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60022BC")]
	[Address(RVA = "0x420EA4", Offset = "0x420EA4", VA = "0x420EA4")]
	private void _InitializeBaseSetup()
	{
	}

	[Token(Token = "0x60022BD")]
	[Address(RVA = "0x421684", Offset = "0x421684", VA = "0x421684")]
	private void _OnDrawGizmoBrakes()
	{
	}

	[Token(Token = "0x60022BE")]
	[Address(RVA = "0x421598", Offset = "0x421598", VA = "0x421598")]
	private void _FixedUpdateBrakes()
	{
	}

	[Token(Token = "0x60022BF")]
	[Address(RVA = "0x4214A0", Offset = "0x4214A0", VA = "0x4214A0")]
	private void _SetInteractableThrottleInput()
	{
	}

	[Token(Token = "0x60022C0")]
	[Address(RVA = "0x421850", Offset = "0x421850", VA = "0x421850")]
	private void _DetermineBrakeState(float input)
	{
	}

	[Token(Token = "0x60022C1")]
	[Address(RVA = "0x4220D8", Offset = "0x4220D8", VA = "0x4220D8")]
	public void ApplyBrakes(float input)
	{
	}

	[Token(Token = "0x60022C2")]
	[Address(RVA = "0x421C40", Offset = "0x421C40", VA = "0x421C40")]
	private void _ApplyBrakes(float input)
	{
	}

	[Token(Token = "0x60022C3")]
	[Address(RVA = "0x421F3C", Offset = "0x421F3C", VA = "0x421F3C")]
	private void _ApplyWheelTorque(float torque, float brakeTorque)
	{
	}
}
[Token(Token = "0x2000503")]
public class AntiRollBar : MonoBehaviour
{
	[Token(Token = "0x4002064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private WheelCollider m_wheelL;

	[Token(Token = "0x4002065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private WheelCollider m_wheelR;

	[Token(Token = "0x4002066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_antiRoll;

	[Token(Token = "0x4002067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_rigidBody;

	[Token(Token = "0x60022C4")]
	[Address(RVA = "0x42CBB8", Offset = "0x42CBB8", VA = "0x42CBB8")]
	public AntiRollBar()
	{
	}

	[Token(Token = "0x60022C5")]
	[Address(RVA = "0x42CBCC", Offset = "0x42CBCC", VA = "0x42CBCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022C6")]
	[Address(RVA = "0x42CC34", Offset = "0x42CC34", VA = "0x42CC34")]
	private void FixedUpdate()
	{
	}
}
[Token(Token = "0x2000504")]
public class BeginnerControlsHandler : MonoBehaviour
{
	[Token(Token = "0x4002068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x4002069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Rigidbody m_aircraftRB;

	[Token(Token = "0x400206A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private ControlSurface m_aileron;

	[Token(Token = "0x400206B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ControlSurface m_aileronMirror;

	[Token(Token = "0x400206C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private ControlSurface m_rudder;

	[Token(Token = "0x400206D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ControlSurface m_elevator;

	[Token(Token = "0x400206E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private ControlSurface m_elevatorMirror;

	[Token(Token = "0x400206F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FLIGHT_CONTROL_TYPE m_currCtrlType;

	[Token(Token = "0x4002070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool m_addRudder;

	[Token(Token = "0x4002071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_ail2RudConvRate;

	[Token(Token = "0x4002072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_addElevator;

	[Token(Token = "0x4002073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_ail2EleConvRate;

	[Token(Token = "0x4002074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_maxRudderInputChange;

	[Token(Token = "0x4002075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_lastRudderInput;

	[Token(Token = "0x4002076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_clampRoll;

	[Token(Token = "0x4002077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_softCapRoll;

	[Token(Token = "0x4002078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_hardCapRoll;

	[Token(Token = "0x4002079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float m_aileronMaxDeflection;

	[Token(Token = "0x400207A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_aileronMaxDeflectionBak;

	[Token(Token = "0x400207B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_rudderMaxDeflection;

	[Token(Token = "0x400207C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_rudderMaxDeflectionBak;

	[Token(Token = "0x400207D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_elevatorMaxDeflection;

	[Token(Token = "0x400207E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_elevatorMaxDeflectionBak;

	[Token(Token = "0x60022C7")]
	[Address(RVA = "0x43E72C", Offset = "0x43E72C", VA = "0x43E72C")]
	public BeginnerControlsHandler()
	{
	}

	[Token(Token = "0x60022C8")]
	[Address(RVA = "0x43E774", Offset = "0x43E774", VA = "0x43E774")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022C9")]
	[Address(RVA = "0x43E778", Offset = "0x43E778", VA = "0x43E778")]
	private void Start()
	{
	}

	[Token(Token = "0x60022CA")]
	[Address(RVA = "0x43E9BC", Offset = "0x43E9BC", VA = "0x43E9BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60022CB")]
	[Address(RVA = "0x43E9C0", Offset = "0x43E9C0", VA = "0x43E9C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60022CC")]
	[Address(RVA = "0x43E79C", Offset = "0x43E79C", VA = "0x43E79C")]
	private void _GetGameManager()
	{
	}

	[Token(Token = "0x60022CD")]
	[Address(RVA = "0x43E844", Offset = "0x43E844", VA = "0x43E844")]
	private void _UpdateFlightControlType()
	{
	}

	[Token(Token = "0x60022CE")]
	[Address(RVA = "0x43E9C4", Offset = "0x43E9C4", VA = "0x43E9C4")]
	private void _FixedUpdateArcadeControls()
	{
	}

	[Token(Token = "0x60022CF")]
	[Address(RVA = "0x43E820", Offset = "0x43E820", VA = "0x43E820")]
	private void _GetControlSurfaceBak()
	{
	}

	[Token(Token = "0x60022D0")]
	[Address(RVA = "0x43E9F8", Offset = "0x43E9F8", VA = "0x43E9F8")]
	private void _SetupControlSurfaces()
	{
	}

	[Token(Token = "0x60022D1")]
	[Address(RVA = "0x43EB24", Offset = "0x43EB24", VA = "0x43EB24")]
	private void _ResetControlSurfaces()
	{
	}

	[Token(Token = "0x60022D2")]
	[Address(RVA = "0x43EC48", Offset = "0x43EC48", VA = "0x43EC48")]
	private void _UpdateAileronToRudderControls()
	{
	}

	[Token(Token = "0x60022D3")]
	[Address(RVA = "0x43ED9C", Offset = "0x43ED9C", VA = "0x43ED9C")]
	private void _UpdateAileronToElevatorControls()
	{
	}

	[Token(Token = "0x60022D4")]
	[Address(RVA = "0x43FCFC", Offset = "0x43FCFC", VA = "0x43FCFC")]
	private float _GetConvertedInput(float aileronInput, float conversionRate)
	{
		return default(float);
	}

	[Token(Token = "0x60022D5")]
	[Address(RVA = "0x43EFAC", Offset = "0x43EFAC", VA = "0x43EFAC")]
	private void _ClampRoll()
	{
	}

	[Token(Token = "0x60022D6")]
	[Address(RVA = "0x43F474", Offset = "0x43F474", VA = "0x43F474")]
	private void _GetAileronMaxDeflectionBak()
	{
	}

	[Token(Token = "0x60022D7")]
	[Address(RVA = "0x43F678", Offset = "0x43F678", VA = "0x43F678")]
	private void _SetAileronMaxDeflection([Optional] float? maxDeflection)
	{
	}

	[Token(Token = "0x60022D8")]
	[Address(RVA = "0x43F9FC", Offset = "0x43F9FC", VA = "0x43F9FC")]
	private void _ResetAileronMaxDeflection()
	{
	}

	[Token(Token = "0x60022D9")]
	[Address(RVA = "0x43F520", Offset = "0x43F520", VA = "0x43F520")]
	private void _GetRudderMaxDeflectionBak()
	{
	}

	[Token(Token = "0x60022DA")]
	[Address(RVA = "0x43F830", Offset = "0x43F830", VA = "0x43F830")]
	private void _SetRudderMaxDeflection()
	{
	}

	[Token(Token = "0x60022DB")]
	[Address(RVA = "0x43FB1C", Offset = "0x43FB1C", VA = "0x43FB1C")]
	private void _ResetRudderMaxDeflection()
	{
	}

	[Token(Token = "0x60022DC")]
	[Address(RVA = "0x43F5CC", Offset = "0x43F5CC", VA = "0x43F5CC")]
	private void _GetElevatorMaxDeflectionBak()
	{
	}

	[Token(Token = "0x60022DD")]
	[Address(RVA = "0x43F8F0", Offset = "0x43F8F0", VA = "0x43F8F0")]
	private void _SetElevatorMaxDeflection()
	{
	}

	[Token(Token = "0x60022DE")]
	[Address(RVA = "0x43FBDC", Offset = "0x43FBDC", VA = "0x43FBDC")]
	private void _ResetElevatorMaxDeflection()
	{
	}
}
[Token(Token = "0x2000505")]
public class ControlGliderSuspension : MonoBehaviour
{
	[Token(Token = "0x400207F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform glider;

	[Token(Token = "0x4002080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform aArmR;

	[Token(Token = "0x4002081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform aArmL;

	[Token(Token = "0x4002082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform aArmF;

	[Token(Token = "0x4002083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform aArmRTarget;

	[Token(Token = "0x4002084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aArmLTarget;

	[Token(Token = "0x4002085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform spindleF;

	[Token(Token = "0x4002086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform wheelR;

	[Token(Token = "0x4002087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform wheelL;

	[Token(Token = "0x4002088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform wheelF;

	[Token(Token = "0x4002089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public WheelCollider wheelColliderR;

	[Token(Token = "0x400208A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WheelCollider wheelColliderL;

	[Token(Token = "0x400208B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public WheelCollider wheelColliderF;

	[Token(Token = "0x400208C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rudderPedalParent;

	[Token(Token = "0x400208D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform rudderPedalRight;

	[Token(Token = "0x400208E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rudderPedalLeft;

	[Token(Token = "0x400208F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControlSurface rudderSurface;

	[Token(Token = "0x4002090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 spindleOffsetF;

	[Token(Token = "0x4002091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 aArmLOffset;

	[Token(Token = "0x60022DF")]
	[Address(RVA = "0x30E848", Offset = "0x30E848", VA = "0x30E848")]
	public ControlGliderSuspension()
	{
	}

	[Token(Token = "0x60022E0")]
	[Address(RVA = "0x30E850", Offset = "0x30E850", VA = "0x30E850")]
	private void Start()
	{
	}

	[Token(Token = "0x60022E1")]
	[Address(RVA = "0x30E988", Offset = "0x30E988", VA = "0x30E988")]
	private void Update()
	{
	}

	[Token(Token = "0x60022E2")]
	[Address(RVA = "0x30EF18", Offset = "0x30EF18", VA = "0x30EF18")]
	private void ApplyLocalPositionToVisuals(Transform visualWheel, WheelCollider colliderWheel)
	{
	}
}
[Token(Token = "0x2000506")]
public class ControlGyrocopterSuspension : MonoBehaviour
{
	[Token(Token = "0x4002092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform gyrocopter;

	[Token(Token = "0x4002093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform aArmR;

	[Token(Token = "0x4002094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform aArmL;

	[Token(Token = "0x4002095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform aArmB;

	[Token(Token = "0x4002096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform aArmRTarget;

	[Token(Token = "0x4002097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aArmLTarget;

	[Token(Token = "0x4002098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform shockAR;

	[Token(Token = "0x4002099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shockAL;

	[Token(Token = "0x400209A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform shockBR;

	[Token(Token = "0x400209B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform shockBL;

	[Token(Token = "0x400209C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform spindleR;

	[Token(Token = "0x400209D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spindleL;

	[Token(Token = "0x400209E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform spindleB;

	[Token(Token = "0x400209F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform wheelR;

	[Token(Token = "0x40020A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform wheelL;

	[Token(Token = "0x40020A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform wheelB;

	[Token(Token = "0x40020A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public WheelCollider wheelColliderR;

	[Token(Token = "0x40020A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WheelCollider wheelColliderL;

	[Token(Token = "0x40020A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WheelCollider wheelColliderB;

	[Token(Token = "0x40020A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rudderPedalParent;

	[Token(Token = "0x40020A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Transform rudderPedalRightA;

	[Token(Token = "0x40020A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rudderPedalRightB;

	[Token(Token = "0x40020A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Transform rudderPedalRightC;

	[Token(Token = "0x40020A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rudderLinkRightA;

	[Token(Token = "0x40020AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Transform rudderLinkRightB;

	[Token(Token = "0x40020AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rudderLinkRightC;

	[Token(Token = "0x40020AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform rudderPedalLeftA;

	[Token(Token = "0x40020AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rudderPedalLeftB;

	[Token(Token = "0x40020AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform rudderPedalLeftC;

	[Token(Token = "0x40020AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform rudderLinkLeftA;

	[Token(Token = "0x40020B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Transform rudderLinkLeftB;

	[Token(Token = "0x40020B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform rudderLinkLeftC;

	[Token(Token = "0x40020B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Transform rudderLinkTargetC;

	[Token(Token = "0x40020B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform rudder;

	[Token(Token = "0x40020B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 spindleOffsetF;

	[Token(Token = "0x40020B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 spindleOffsetB;

	[Token(Token = "0x40020B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 aArmLOffset;

	[Token(Token = "0x60022E3")]
	[Address(RVA = "0x30F02C", Offset = "0x30F02C", VA = "0x30F02C")]
	public ControlGyrocopterSuspension()
	{
	}

	[Token(Token = "0x60022E4")]
	[Address(RVA = "0x30F034", Offset = "0x30F034", VA = "0x30F034")]
	private void Start()
	{
	}

	[Token(Token = "0x60022E5")]
	[Address(RVA = "0x30F230", Offset = "0x30F230", VA = "0x30F230")]
	private void Update()
	{
	}

	[Token(Token = "0x60022E6")]
	[Address(RVA = "0x30FE44", Offset = "0x30FE44", VA = "0x30FE44")]
	private void ApplyLocalPositionToVisuals(Transform visualWheel, WheelCollider colliderWheel)
	{
	}
}
[Token(Token = "0x2000507")]
public class ControllerAircraft : ControllerVehicle
{
	[Token(Token = "0x2000508")]
	public delegate void EngineEventHandler();

	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174354", Offset = "0x174354")]
	private sealed class <_WaitForGameManagerToSetPauseState>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ControllerAircraft $this;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170005AB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6002798")]
			[Address(RVA = "0x3175F0", Offset = "0x3175F0", VA = "0x3175F0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x3175F8", Offset = "0x3175F8", VA = "0x3175F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x316DC4", Offset = "0x316DC4", VA = "0x316DC4")]
		[DebuggerHidden]
		public <_WaitForGameManagerToSetPauseState>c__Iterator0()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x317434", Offset = "0x317434", VA = "0x317434", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x317600", Offset = "0x317600", VA = "0x317600", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x317614", Offset = "0x317614", VA = "0x317614", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40020B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool AircraftEnabledAtStart;

	[Token(Token = "0x40020B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	[SerializeField]
	private bool m_overrideInertiaTensor;

	[Token(Token = "0x40020B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector3 m_inertiaTensor;

	[Token(Token = "0x40020BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float m_rollwiseDamping;

	[Token(Token = "0x40020BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AircraftAttachment[] m_aircraftAttachments;

	[Token(Token = "0x40020BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Engine[] m_aircraftEngines;

	[Token(Token = "0x40020BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected IEngineAudio m_engineAudio;

	[Token(Token = "0x40020BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private WheelCollider[] m_aircraftWheels;

	[Token(Token = "0x40020BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private IEngineAudio[] m_engineAudios;

	[Token(Token = "0x40020C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private InteractableInput m_fuelInput;

	[Token(Token = "0x40020C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private InteractableInput m_fuelControlInput;

	[Token(Token = "0x40020C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private InteractableInput m_ignitionInput;

	[Token(Token = "0x40020C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private InteractableInput m_ignitionControlInput;

	[Token(Token = "0x40020C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private InteractableInput m_magnetoInput;

	[Token(Token = "0x40020C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private InteractableInput m_magnetoControlInput;

	[Token(Token = "0x40020C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public DeliveryPlatform DeliveryPlatform;

	[Token(Token = "0x40020C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Collider m_runwayCollisionCollider;

	[Token(Token = "0x40020C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Compass2D m_compass2D;

	[Token(Token = "0x40020C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_lastMeasuredSpeed;

	[Token(Token = "0x40020CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool m_isFlying;

	[Token(Token = "0x40020CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool m_isBouncing;

	[Token(Token = "0x40020CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float m_flyingBounceStartTime;

	[Token(Token = "0x40020CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float m_maxBounceTime;

	[Token(Token = "0x40020CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool m_prevIsFlying;

	[Token(Token = "0x17000467")]
	[SerializeField]
	public float RollwiseDamping
	{
		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x313DE8", Offset = "0x313DE8", VA = "0x313DE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000468")]
	public Collider RunwayCollisionCollider
	{
		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x313DF0", Offset = "0x313DF0", VA = "0x313DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000469")]
	public Compass2D Compass2D
	{
		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x313DF8", Offset = "0x313DF8", VA = "0x313DF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700046A")]
	public bool IsFlying
	{
		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x315694", Offset = "0x315694", VA = "0x315694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700046B")]
	public bool IsBouncing
	{
		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x31569C", Offset = "0x31569C", VA = "0x31569C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700046C")]
	public bool IsGrounded
	{
		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x3156A4", Offset = "0x3156A4", VA = "0x3156A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700046D")]
	public bool IsAtLeastOneGrounded
	{
		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x3157B0", Offset = "0x3157B0", VA = "0x3157B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400004F")]
	public event EngineEventHandler EngineStartEvent
	{
		[Token(Token = "0x6002313")]
		[Address(RVA = "0x316DCC", Offset = "0x316DCC", VA = "0x316DCC")]
		add
		{
		}
		[Token(Token = "0x6002314")]
		[Address(RVA = "0x316ED8", Offset = "0x316ED8", VA = "0x316ED8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000050")]
	public event EngineEventHandler EngineStopEvent
	{
		[Token(Token = "0x6002315")]
		[Address(RVA = "0x316FE4", Offset = "0x316FE4", VA = "0x316FE4")]
		add
		{
		}
		[Token(Token = "0x6002316")]
		[Address(RVA = "0x3170F0", Offset = "0x3170F0", VA = "0x3170F0")]
		remove
		{
		}
	}

	[Token(Token = "0x60022E7")]
	[Address(RVA = "0x313D70", Offset = "0x313D70", VA = "0x313D70")]
	public ControllerAircraft()
	{
	}

	[Token(Token = "0x60022EB")]
	[Address(RVA = "0x313E00", Offset = "0x313E00", VA = "0x313E00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60022EC")]
	[Address(RVA = "0x313FF8", Offset = "0x313FF8", VA = "0x313FF8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60022ED")]
	[Address(RVA = "0x31464C", Offset = "0x31464C", VA = "0x31464C")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x60022EE")]
	[Address(RVA = "0x314650", Offset = "0x314650", VA = "0x314650")]
	private void _LimitSpeed()
	{
	}

	[Token(Token = "0x60022EF")]
	[Address(RVA = "0x314754", Offset = "0x314754", VA = "0x314754", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60022F0")]
	[Address(RVA = "0x314CC8", Offset = "0x314CC8", VA = "0x314CC8")]
	private void _CheckSpeed()
	{
	}

	[Token(Token = "0x60022F1")]
	[Address(RVA = "0x314D2C", Offset = "0x314D2C", VA = "0x314D2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60022F2")]
	[Address(RVA = "0x314E00", Offset = "0x314E00", VA = "0x314E00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60022F3")]
	[Address(RVA = "0x314E10", Offset = "0x314E10", VA = "0x314E10", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60022F4")]
	[Address(RVA = "0x314F44", Offset = "0x314F44", VA = "0x314F44", Slot = "11")]
	public override void InitVehicleAsOn(float throttleAmount)
	{
	}

	[Token(Token = "0x60022F5")]
	[Address(RVA = "0x315464", Offset = "0x315464", VA = "0x315464", Slot = "12")]
	public override void InitVehicleAsOff()
	{
	}

	[Token(Token = "0x60022F6")]
	[Address(RVA = "0x315270", Offset = "0x315270", VA = "0x315270")]
	private void _InitAnimateStartingState()
	{
	}

	[Token(Token = "0x60022FB")]
	[Address(RVA = "0x3145D0", Offset = "0x3145D0", VA = "0x3145D0")]
	public void EnableControl(bool enable)
	{
	}

	[Token(Token = "0x60022FC")]
	[Address(RVA = "0x314850", Offset = "0x314850", VA = "0x314850")]
	private void _SetAirSpeedKnots()
	{
	}

	[Token(Token = "0x60022FD")]
	[Address(RVA = "0x31495C", Offset = "0x31495C", VA = "0x31495C")]
	private void _SetIsFlying()
	{
	}

	[Token(Token = "0x60022FE")]
	[Address(RVA = "0x312124", Offset = "0x312124", VA = "0x312124")]
	public float GetAirspeedKnots()
	{
		return default(float);
	}

	[Token(Token = "0x60022FF")]
	[Address(RVA = "0x315834", Offset = "0x315834", VA = "0x315834")]
	public float GetAltitudeThousandsFeet()
	{
		return default(float);
	}

	[Token(Token = "0x6002300")]
	[Address(RVA = "0x31593C", Offset = "0x31593C", VA = "0x31593C")]
	public float GetAltitudeHundredsFeet()
	{
		return default(float);
	}

	[Token(Token = "0x6002301")]
	[Address(RVA = "0x315A44", Offset = "0x315A44", VA = "0x315A44")]
	public float GetAltitude()
	{
		return default(float);
	}

	[Token(Token = "0x6002302")]
	[Address(RVA = "0x315B40", Offset = "0x315B40", VA = "0x315B40")]
	public float GetHeadingDegrees()
	{
		return default(float);
	}

	[Token(Token = "0x6002303")]
	[Address(RVA = "0x31212C", Offset = "0x31212C", VA = "0x31212C")]
	public float GetBankDegrees()
	{
		return default(float);
	}

	[Token(Token = "0x6002304")]
	[Address(RVA = "0x315BA4", Offset = "0x315BA4", VA = "0x315BA4")]
	public float GetPitchDegrees()
	{
		return default(float);
	}

	[Token(Token = "0x6002305")]
	[Address(RVA = "0x315C08", Offset = "0x315C08", VA = "0x315C08")]
	public float GetRateOfClimbFPM()
	{
		return default(float);
	}

	[Token(Token = "0x6002306")]
	[Address(RVA = "0x315D1C", Offset = "0x315D1C", VA = "0x315D1C")]
	public float GetEngineRPM(int engineIndex = 0)
	{
		return default(float);
	}

	[Token(Token = "0x6002307")]
	[Address(RVA = "0x315E98", Offset = "0x315E98", VA = "0x315E98", Slot = "13")]
	public override void EnterVehicle()
	{
	}

	[Token(Token = "0x6002308")]
	[Address(RVA = "0x315ECC", Offset = "0x315ECC", VA = "0x315ECC", Slot = "14")]
	public override void ExitVehicle()
	{
	}

	[Token(Token = "0x6002309")]
	[Address(RVA = "0x315F00", Offset = "0x315F00", VA = "0x315F00", Slot = "9")]
	protected override void _CheckDashState()
	{
	}

	[Token(Token = "0x600230A")]
	[Address(RVA = "0x3163FC", Offset = "0x3163FC", VA = "0x3163FC", Slot = "10")]
	protected override bool _CanEngineRun()
	{
		return default(bool);
	}

	[Token(Token = "0x600230B")]
	[Address(RVA = "0x316650", Offset = "0x316650", VA = "0x316650", Slot = "15")]
	protected override void _UpdateFuelGuage()
	{
	}

	[Token(Token = "0x600230C")]
	[Address(RVA = "0x316B9C", Offset = "0x316B9C", VA = "0x316B9C")]
	public bool IsFuelOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600230D")]
	[Address(RVA = "0x316BC8", Offset = "0x316BC8", VA = "0x316BC8")]
	public bool IsMagnetoOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600230E")]
	[Address(RVA = "0x316BF4", Offset = "0x316BF4", VA = "0x316BF4")]
	public bool IsIgnitionOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600230F")]
	[Address(RVA = "0x316C20", Offset = "0x316C20", VA = "0x316C20", Slot = "16")]
	public override void PauseVehicle()
	{
	}

	[Token(Token = "0x6002310")]
	[Address(RVA = "0x316CE4", Offset = "0x316CE4", VA = "0x316CE4", Slot = "17")]
	public override void UnpauseVehicle()
	{
	}

	[Token(Token = "0x6002311")]
	[Address(RVA = "0x316DA8", Offset = "0x316DA8", VA = "0x316DA8")]
	private void _SetPauseState(bool isPaused)
	{
	}

	[Token(Token = "0x6002312")]
	[Address(RVA = "0x313F74", Offset = "0x313F74", VA = "0x313F74")]
	[DebuggerHidden]
	private IEnumerator _WaitForGameManagerToSetPauseState()
	{
		return null;
	}

	[Token(Token = "0x6002317")]
	[Address(RVA = "0x3171FC", Offset = "0x3171FC", VA = "0x3171FC", Slot = "18")]
	protected virtual void _OnEngineStart()
	{
	}

	[Token(Token = "0x6002318")]
	[Address(RVA = "0x317420", Offset = "0x317420", VA = "0x317420", Slot = "19")]
	protected virtual void _OnEngineStop()
	{
	}
}
[Token(Token = "0x2000509")]
public class ControllerCenterOfGravity : MonoBehaviour
{
	[Token(Token = "0x40020D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform centerOfGravity;

	[Token(Token = "0x40020D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform centerOfGravityRoot;

	[Token(Token = "0x40020D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform centerOfGravityRootOffset;

	[Token(Token = "0x40020D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody parent;

	[Token(Token = "0x40020D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float zAxisAngleRange;

	[Token(Token = "0x40020D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float zAxisAngle;

	[Token(Token = "0x40020D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private InteractableInput zAxisInteractableInput;

	[Token(Token = "0x40020D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xAxisAngleRange;

	[Token(Token = "0x40020D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float xAxisAngle;

	[Token(Token = "0x40020DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InteractableInput xAxisInteractableInput;

	[Token(Token = "0x40020DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool shiftCoGForBladeLag;

	[Token(Token = "0x40020DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody bladeRigidBody;

	[Token(Token = "0x40020DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MPSCoGShift;

	[Token(Token = "0x40020DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float bladeRPMForFullShift;

	[Token(Token = "0x600231D")]
	[Address(RVA = "0x3176E8", Offset = "0x3176E8", VA = "0x3176E8")]
	public ControllerCenterOfGravity()
	{
	}

	[Token(Token = "0x600231E")]
	[Address(RVA = "0x317718", Offset = "0x317718", VA = "0x317718")]
	private void Start()
	{
	}

	[Token(Token = "0x600231F")]
	[Address(RVA = "0x317900", Offset = "0x317900", VA = "0x317900")]
	private void Update()
	{
	}
}
[Token(Token = "0x200050A")]
public class ControllerGyrocopter : MonoBehaviour
{
	[Token(Token = "0x200050B")]
	public enum EngineState
	{
		[Token(Token = "0x40020E6")]
		Off,
		[Token(Token = "0x40020E7")]
		On
	}

	[Token(Token = "0x40020DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Engine engine;

	[Token(Token = "0x40020E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EngineState CurrentEngineState;

	[Token(Token = "0x40020E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody rotorHub;

	[Token(Token = "0x40020E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxRPMForTorque;

	[Token(Token = "0x40020E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool addBladeSpin;

	[Token(Token = "0x40020E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ControllerGyrocopter controllerGyrocopter;

	[Token(Token = "0x6002320")]
	[Address(RVA = "0x327460", Offset = "0x327460", VA = "0x327460")]
	public ControllerGyrocopter()
	{
	}

	[Token(Token = "0x6002321")]
	[Address(RVA = "0x32747C", Offset = "0x32747C", VA = "0x32747C")]
	public static ControllerGyrocopter Instance()
	{
		return null;
	}

	[Token(Token = "0x6002322")]
	[Address(RVA = "0x327674", Offset = "0x327674", VA = "0x327674")]
	private void Start()
	{
	}

	[Token(Token = "0x6002323")]
	[Address(RVA = "0x3276D8", Offset = "0x3276D8", VA = "0x3276D8")]
	private void Update()
	{
	}
}
[Token(Token = "0x200050C")]
public class ControllerThrustVector : MonoBehaviour
{
	[Token(Token = "0x40020E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform thrustPosition;

	[Token(Token = "0x40020E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float yAxisAngleRange;

	[Token(Token = "0x40020EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float yAxisAngle;

	[Token(Token = "0x40020EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractableInput yAxisInteractableInput;

	[Token(Token = "0x40020EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xAxisAngleRange;

	[Token(Token = "0x40020ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float xAxisAngle;

	[Token(Token = "0x40020EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private InteractableInput xAxisInteractableInput;

	[Token(Token = "0x6002324")]
	[Address(RVA = "0x3A85E0", Offset = "0x3A85E0", VA = "0x3A85E0")]
	public ControllerThrustVector()
	{
	}

	[Token(Token = "0x6002325")]
	[Address(RVA = "0x3A85F8", Offset = "0x3A85F8", VA = "0x3A85F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6002326")]
	[Address(RVA = "0x3A8674", Offset = "0x3A8674", VA = "0x3A8674")]
	private void Update()
	{
	}
}
[Token(Token = "0x200050D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1736A8", Offset = "0x1736A8")]
public class ControllerVehicle : MonoBehaviour
{
	[Token(Token = "0x40020EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform m_cameraLocation;

	[Token(Token = "0x40020F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Rigidbody m_vehicleRigidbody;

	[Token(Token = "0x40020F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PAUSE_STATE m_currentPauseState;

	[Token(Token = "0x40020F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_vehicleVelocity;

	[Token(Token = "0x40020F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_vehicleAngularVelocity;

	[Token(Token = "0x40020F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Engine m_engine;

	[Token(Token = "0x40020F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Engine.ENGINE_STATE m_currentEngineState;

	[Token(Token = "0x40020F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float m_engineStartTime;

	[Token(Token = "0x40020F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private GameObject m_colliderFollower;

	[Token(Token = "0x40020F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform m_targetRingTest;

	[Token(Token = "0x40020F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameManager m_gameManager;

	[Token(Token = "0x40020FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool m_isInVehicle;

	[Token(Token = "0x40020FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected InteractableInput m_fuelOutput;

	[Token(Token = "0x40020FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected float m_fuelTankSize;

	[Token(Token = "0x40020FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x17F8FC", Offset = "0x17F8FC")]
	protected float m_fuelOnBoard;

	[Token(Token = "0x40020FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_hasFuel;

	[Token(Token = "0x40020FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_fuelUsedAtMinimumThrottle;

	[Token(Token = "0x4002100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private GameObject m_fuelLightObject;

	[Token(Token = "0x4002101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected GameObject m_fuelLightGlow;

	[Token(Token = "0x4002102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private string m_fuelLightMaterialName;

	[Token(Token = "0x4002103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer m_fuelLightRenderer;

	[Token(Token = "0x4002104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected Material m_fuelLightMaterial;

	[Token(Token = "0x4002105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float m_fuelLowWarningAmount;

	[Token(Token = "0x4002106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	protected AudioSource m_fuelLowWarningAudioSource;

	[Token(Token = "0x4002107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected AudioClip m_fuelLowWarningAudioClip;

	[Token(Token = "0x4002108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	protected float m_fuelLowWarningAudioFrequency;

	[Token(Token = "0x4002109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float m_fuelLowWarningAudioTime;

	[Token(Token = "0x1700046E")]
	public Transform CameraLocation
	{
		[Token(Token = "0x6002328")]
		[Address(RVA = "0x3A87BC", Offset = "0x3A87BC", VA = "0x3A87BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700046F")]
	[HideInInspector]
	public Rigidbody VehicleRigidbody
	{
		[Token(Token = "0x6002329")]
		[Address(RVA = "0x3A87C4", Offset = "0x3A87C4", VA = "0x3A87C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000470")]
	public PAUSE_STATE CurrentPauseState
	{
		[Token(Token = "0x600232A")]
		[Address(RVA = "0x3A87CC", Offset = "0x3A87CC", VA = "0x3A87CC")]
		get
		{
			return default(PAUSE_STATE);
		}
	}

	[Token(Token = "0x17000471")]
	public Engine Engine
	{
		[Token(Token = "0x600232B")]
		[Address(RVA = "0x39D77C", Offset = "0x39D77C", VA = "0x39D77C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000472")]
	public Engine.ENGINE_STATE CurrentEngineState
	{
		[Token(Token = "0x600232C")]
		[Address(RVA = "0x39D750", Offset = "0x39D750", VA = "0x39D750")]
		get
		{
			return default(Engine.ENGINE_STATE);
		}
	}

	[Token(Token = "0x17000473")]
	public GameObject ColliderFollower
	{
		[Token(Token = "0x600232D")]
		[Address(RVA = "0x3A87D4", Offset = "0x3A87D4", VA = "0x3A87D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000474")]
	public Transform TargetRingTest
	{
		[Token(Token = "0x600232E")]
		[Address(RVA = "0x3A87DC", Offset = "0x3A87DC", VA = "0x3A87DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000475")]
	public bool IsInVehicle
	{
		[Token(Token = "0x600233A")]
		[Address(RVA = "0x3A9A40", Offset = "0x3A9A40", VA = "0x3A9A40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000476")]
	public float FuelTankSize
	{
		[Token(Token = "0x600233D")]
		[Address(RVA = "0x3A9D5C", Offset = "0x3A9D5C", VA = "0x3A9D5C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000477")]
	public float FuelOnBoard
	{
		[Token(Token = "0x600233E")]
		[Address(RVA = "0x3A89B8", Offset = "0x3A89B8", VA = "0x3A89B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000478")]
	public bool HasFuel
	{
		[Token(Token = "0x600233F")]
		[Address(RVA = "0x3A9D64", Offset = "0x3A9D64", VA = "0x3A9D64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002327")]
	[Address(RVA = "0x3A8770", Offset = "0x3A8770", VA = "0x3A8770")]
	public ControllerVehicle()
	{
	}

	[Token(Token = "0x600232F")]
	[Address(RVA = "0x3A87E4", Offset = "0x3A87E4", VA = "0x3A87E4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6002330")]
	[Address(RVA = "0x3A89C0", Offset = "0x3A89C0", VA = "0x3A89C0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6002331")]
	[Address(RVA = "0x3A8DD0", Offset = "0x3A8DD0", VA = "0x3A8DD0", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6002332")]
	[Address(RVA = "0x3A9234", Offset = "0x3A9234", VA = "0x3A9234", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6002333")]
	[Address(RVA = "0x3A9380", Offset = "0x3A9380", VA = "0x3A9380")]
	private void _UnparentColliderFollower()
	{
	}

	[Token(Token = "0x6002334")]
	[Address(RVA = "0x3A9454", Offset = "0x3A9454", VA = "0x3A9454", Slot = "8")]
	protected virtual void _UpdateColliderPositions()
	{
	}

	[Token(Token = "0x6002335")]
	[Address(RVA = "0x3A9624", Offset = "0x3A9624", VA = "0x3A9624", Slot = "9")]
	protected virtual void _CheckDashState()
	{
	}

	[Token(Token = "0x6002336")]
	[Address(RVA = "0x3A9628", Offset = "0x3A9628", VA = "0x3A9628", Slot = "10")]
	protected virtual bool _CanEngineRun()
	{
		return default(bool);
	}

	[Token(Token = "0x6002337")]
	[Address(RVA = "0x3A9630", Offset = "0x3A9630", VA = "0x3A9630", Slot = "11")]
	public virtual void InitVehicleAsOn(float throttleAmount)
	{
	}

	[Token(Token = "0x6002338")]
	[Address(RVA = "0x3A9764", Offset = "0x3A9764", VA = "0x3A9764", Slot = "12")]
	public virtual void InitVehicleAsOff()
	{
	}

	[Token(Token = "0x6002339")]
	[Address(RVA = "0x3A9894", Offset = "0x3A9894", VA = "0x3A9894")]
	public void SetVelocity(float knots)
	{
	}

	[Token(Token = "0x600233B")]
	[Address(RVA = "0x3A9A48", Offset = "0x3A9A48", VA = "0x3A9A48", Slot = "13")]
	public virtual void EnterVehicle()
	{
	}

	[Token(Token = "0x600233C")]
	[Address(RVA = "0x3A9C2C", Offset = "0x3A9C2C", VA = "0x3A9C2C", Slot = "14")]
	public virtual void ExitVehicle()
	{
	}

	[Token(Token = "0x6002340")]
	[Address(RVA = "0x3A8BB8", Offset = "0x3A8BB8", VA = "0x3A8BB8")]
	private void _InitFuelLight()
	{
	}

	[Token(Token = "0x6002341")]
	[Address(RVA = "0x3A8EB0", Offset = "0x3A8EB0", VA = "0x3A8EB0")]
	protected void _UpDateFuelState()
	{
	}

	[Token(Token = "0x6002342")]
	[Address(RVA = "0x3A9D6C", Offset = "0x3A9D6C", VA = "0x3A9D6C", Slot = "15")]
	protected virtual void _UpdateFuelGuage()
	{
	}

	[Token(Token = "0x6002343")]
	[Address(RVA = "0x3A7740", Offset = "0x3A7740", VA = "0x3A7740")]
	public void RefuelVehicle()
	{
	}

	[Token(Token = "0x6002344")]
	[Address(RVA = "0x3AA24C", Offset = "0x3AA24C", VA = "0x3AA24C")]
	public void SetFuelOnVehicle(float fuelInSeconds)
	{
	}

	[Token(Token = "0x6002345")]
	[Address(RVA = "0x3AA1A0", Offset = "0x3AA1A0", VA = "0x3AA1A0")]
	public void AddFuelToVehicle(float fuelInSeconds)
	{
	}

	[Token(Token = "0x6002346")]
	[Address(RVA = "0x3AA2EC", Offset = "0x3AA2EC", VA = "0x3AA2EC", Slot = "16")]
	public virtual void PauseVehicle()
	{
	}

	[Token(Token = "0x6002347")]
	[Address(RVA = "0x3AA3A0", Offset = "0x3AA3A0", VA = "0x3AA3A0", Slot = "17")]
	public virtual void UnpauseVehicle()
	{
	}
}
[Token(Token = "0x200050E")]
public class ControlSportSuspension : MonoBehaviour
{
	[Token(Token = "0x400210A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform vehicle;

	[Token(Token = "0x400210B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform aArmL;

	[Token(Token = "0x400210C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform aArmR;

	[Token(Token = "0x400210D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform aArmB;

	[Token(Token = "0x400210E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform aArmLTarget;

	[Token(Token = "0x400210F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aArmRTarget;

	[Token(Token = "0x4002110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform shockL;

	[Token(Token = "0x4002111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shockR;

	[Token(Token = "0x4002112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform wheelL;

	[Token(Token = "0x4002113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform wheelR;

	[Token(Token = "0x4002114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform wheelB;

	[Token(Token = "0x4002115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WheelCollider wheelColliderL;

	[Token(Token = "0x4002116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public WheelCollider wheelColliderR;

	[Token(Token = "0x4002117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WheelCollider wheelColliderB;

	[Token(Token = "0x4002118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float retractedWheelPositionY;

	[Token(Token = "0x4002119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform spindleB;

	[Token(Token = "0x400211A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 spindleOffsetB;

	[Token(Token = "0x400211B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rudderPedalParent;

	[Token(Token = "0x400211C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Transform rudderPedalLeftA;

	[Token(Token = "0x400211D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rudderPedalLeftB;

	[Token(Token = "0x400211E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Transform rudderLinkLeftA;

	[Token(Token = "0x400211F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rudderLinkLeftB;

	[Token(Token = "0x4002120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Transform rudderLinkLeftC;

	[Token(Token = "0x4002121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rudderPedalRightA;

	[Token(Token = "0x4002122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform rudderPedalRightB;

	[Token(Token = "0x4002123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rudderLinkRightA;

	[Token(Token = "0x4002124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform rudderLinkRightB;

	[Token(Token = "0x4002125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform rudderLinkRightC;

	[Token(Token = "0x4002126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public ControlSurface aileronSurface;

	[Token(Token = "0x4002127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform flightStickLinkA;

	[Token(Token = "0x4002128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Transform flightStickLinkB;

	[Token(Token = "0x4002129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform flightStickLinkBTarget;

	[Token(Token = "0x400212A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform flightStickLinkC;

	[Token(Token = "0x400212B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform FlightStickLinkDLeft;

	[Token(Token = "0x400212C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Transform FlightStickLinkDLeft_Target;

	[Token(Token = "0x400212D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform FlightStickLinkDRight;

	[Token(Token = "0x400212E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Transform FlightStickLinkDRight_Target;

	[Token(Token = "0x400212F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ControlSurface rudderSurface;

	[Token(Token = "0x6002348")]
	[Address(RVA = "0x30FF50", Offset = "0x30FF50", VA = "0x30FF50")]
	public ControlSportSuspension()
	{
	}

	[Token(Token = "0x6002349")]
	[Address(RVA = "0x30FF58", Offset = "0x30FF58", VA = "0x30FF58")]
	private void Start()
	{
	}

	[Token(Token = "0x600234A")]
	[Address(RVA = "0x310110", Offset = "0x310110", VA = "0x310110")]
	private void Update()
	{
	}

	[Token(Token = "0x600234B")]
	[Address(RVA = "0x310C14", Offset = "0x310C14", VA = "0x310C14")]
	private void ApplyLocalPositionToVisuals(Transform visualWheel, WheelCollider colliderWheel)
	{
	}
}
[Token(Token = "0x200050F")]
public class ControlUltralightStatic : MonoBehaviour
{
	[Token(Token = "0x4002130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject ultralight;

	[Token(Token = "0x4002131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform aArmR;

	[Token(Token = "0x4002132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform aArmL;

	[Token(Token = "0x4002133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform aArmB;

	[Token(Token = "0x4002134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform aArmRTarget;

	[Token(Token = "0x4002135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aArmLTarget;

	[Token(Token = "0x4002136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform shockAR;

	[Token(Token = "0x4002137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shockAL;

	[Token(Token = "0x4002138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform shockBR;

	[Token(Token = "0x4002139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform shockBL;

	[Token(Token = "0x400213A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform spindleR;

	[Token(Token = "0x400213B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spindleL;

	[Token(Token = "0x400213C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform spindleB;

	[Token(Token = "0x400213D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform wheelR;

	[Token(Token = "0x400213E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform wheelL;

	[Token(Token = "0x400213F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform wheelB;

	[Token(Token = "0x4002140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public WheelCollider wheelColliderR;

	[Token(Token = "0x4002141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WheelCollider wheelColliderL;

	[Token(Token = "0x4002142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WheelCollider wheelColliderB;

	[Token(Token = "0x4002143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 spindleOffsetF;

	[Token(Token = "0x4002144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 spindleOffsetB;

	[Token(Token = "0x4002145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 aArmLOffset;

	[Token(Token = "0x600234C")]
	[Address(RVA = "0x312478", Offset = "0x312478", VA = "0x312478")]
	public ControlUltralightStatic()
	{
	}

	[Token(Token = "0x600234D")]
	[Address(RVA = "0x312480", Offset = "0x312480", VA = "0x312480")]
	private void Start()
	{
	}

	[Token(Token = "0x600234E")]
	[Address(RVA = "0x3126F0", Offset = "0x3126F0", VA = "0x3126F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600234F")]
	[Address(RVA = "0x312D40", Offset = "0x312D40", VA = "0x312D40")]
	private void ApplyLocalPositionToVisuals(Transform visualWheel, WheelCollider colliderWheel)
	{
	}
}
[Token(Token = "0x2000510")]
public class ControlUltralightSuspension : MonoBehaviour
{
	[Token(Token = "0x4002146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform ultralight;

	[Token(Token = "0x4002147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform aArmR;

	[Token(Token = "0x4002148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform aArmL;

	[Token(Token = "0x4002149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform aArmB;

	[Token(Token = "0x400214A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform aArmRTarget;

	[Token(Token = "0x400214B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aArmLTarget;

	[Token(Token = "0x400214C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform shockAR;

	[Token(Token = "0x400214D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shockAL;

	[Token(Token = "0x400214E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform shockBR;

	[Token(Token = "0x400214F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform shockBL;

	[Token(Token = "0x4002150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform spindleR;

	[Token(Token = "0x4002151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spindleL;

	[Token(Token = "0x4002152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform spindleB;

	[Token(Token = "0x4002153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform wheelR;

	[Token(Token = "0x4002154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform wheelL;

	[Token(Token = "0x4002155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform wheelB;

	[Token(Token = "0x4002156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public WheelCollider wheelColliderR;

	[Token(Token = "0x4002157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WheelCollider wheelColliderL;

	[Token(Token = "0x4002158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WheelCollider wheelColliderB;

	[Token(Token = "0x4002159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rudderPedalParent;

	[Token(Token = "0x400215A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Transform rudderPedalRightA;

	[Token(Token = "0x400215B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rudderPedalRightB;

	[Token(Token = "0x400215C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Transform rudderPedalRightC;

	[Token(Token = "0x400215D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rudderLinkRightA;

	[Token(Token = "0x400215E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Transform rudderLinkRightB;

	[Token(Token = "0x400215F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rudderLinkRightC;

	[Token(Token = "0x4002160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform rudderPedalLeftA;

	[Token(Token = "0x4002161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rudderPedalLeftB;

	[Token(Token = "0x4002162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform rudderPedalLeftC;

	[Token(Token = "0x4002163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform rudderLinkLeftA;

	[Token(Token = "0x4002164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Transform rudderLinkLeftB;

	[Token(Token = "0x4002165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform rudderLinkLeftC;

	[Token(Token = "0x4002166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Transform rudderLinkTargetC;

	[Token(Token = "0x4002167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform rudder;

	[Token(Token = "0x4002168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 spindleOffsetF;

	[Token(Token = "0x4002169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 spindleOffsetB;

	[Token(Token = "0x400216A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 aArmLOffset;

	[Token(Token = "0x6002350")]
	[Address(RVA = "0x312E4C", Offset = "0x312E4C", VA = "0x312E4C")]
	public ControlUltralightSuspension()
	{
	}

	[Token(Token = "0x6002351")]
	[Address(RVA = "0x312E54", Offset = "0x312E54", VA = "0x312E54")]
	private void Start()
	{
	}

	[Token(Token = "0x6002352")]
	[Address(RVA = "0x313050", Offset = "0x313050", VA = "0x313050")]
	private void Update()
	{
	}

	[Token(Token = "0x6002353")]
	[Address(RVA = "0x313C64", Offset = "0x313C64", VA = "0x313C64")]
	private void ApplyLocalPositionToVisuals(Transform visualWheel, WheelCollider colliderWheel)
	{
	}
}
[Token(Token = "0x2000511")]
public class CrashManager : MonoBehaviour
{
	[Token(Token = "0x2000512")]
	public enum CRASH_TYPE
	{
		[Token(Token = "0x400218F")]
		Ground,
		[Token(Token = "0x4002190")]
		Water,
		[Token(Token = "0x4002191")]
		Trees
	}

	[Token(Token = "0x2000513")]
	public delegate void CrashEventHandler(float velocity, float angularVelocity, CRASH_TYPE crashType, Vector3 positionOfCrash);

	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174364", Offset = "0x174364")]
	private sealed class <WaitForAllLevelsLoaded>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CrashManager $this;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170005AD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600279E")]
			[Address(RVA = "0x3AE818", Offset = "0x3AE818", VA = "0x3AE818", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600279F")]
			[Address(RVA = "0x3AE820", Offset = "0x3AE820", VA = "0x3AE820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x3AC0CC", Offset = "0x3AC0CC", VA = "0x3AC0CC")]
		[DebuggerHidden]
		public <WaitForAllLevelsLoaded>c__Iterator0()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x3AE6D4", Offset = "0x3AE6D4", VA = "0x3AE6D4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x3AE828", Offset = "0x3AE828", VA = "0x3AE828", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x3AE83C", Offset = "0x3AE83C", VA = "0x3AE83C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174374", Offset = "0x174374")]
	private sealed class <WaitForFadeSequence>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CrashManager $this;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170005AF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x3AEDA8", Offset = "0x3AEDA8", VA = "0x3AEDA8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x3AEDB0", Offset = "0x3AEDB0", VA = "0x3AEDB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x3ADCD4", Offset = "0x3ADCD4", VA = "0x3ADCD4")]
		[DebuggerHidden]
		public <WaitForFadeSequence>c__Iterator1()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x3AE8C4", Offset = "0x3AE8C4", VA = "0x3AE8C4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x3AEDB8", Offset = "0x3AEDB8", VA = "0x3AEDB8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x3AEDCC", Offset = "0x3AEDCC", VA = "0x3AEDCC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174384", Offset = "0x174384")]
	private sealed class <FadeIn>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x170005B1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x3AE628", Offset = "0x3AE628", VA = "0x3AE628", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x3AE630", Offset = "0x3AE630", VA = "0x3AE630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x3ADD48", Offset = "0x3ADD48", VA = "0x3ADD48")]
		[DebuggerHidden]
		public <FadeIn>c__Iterator2()
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x3AE5C8", Offset = "0x3AE5C8", VA = "0x3AE5C8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x3AE638", Offset = "0x3AE638", VA = "0x3AE638", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x3AE64C", Offset = "0x3AE64C", VA = "0x3AE64C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174394", Offset = "0x174394")]
	private sealed class <EndLevel>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x170005B3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x3AE51C", Offset = "0x3AE51C", VA = "0x3AE51C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x3AE524", Offset = "0x3AE524", VA = "0x3AE524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x3ADDBC", Offset = "0x3ADDBC", VA = "0x3ADDBC")]
		[DebuggerHidden]
		public <EndLevel>c__Iterator3()
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x3AE4BC", Offset = "0x3AE4BC", VA = "0x3AE4BC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x3AE52C", Offset = "0x3AE52C", VA = "0x3AE52C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x3AE540", Offset = "0x3AE540", VA = "0x3AE540", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400216B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Action Crash;

	[Token(Token = "0x400216C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_velocityLimit;

	[Token(Token = "0x400216D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_angularVelocityLimit;

	[Token(Token = "0x400216E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_timeFadedOut;

	[Token(Token = "0x400216F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_fadeInSpeed;

	[Token(Token = "0x4002170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_timeInHeaven;

	[Token(Token = "0x4002171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_endLevelFadeSpeed;

	[Token(Token = "0x4002172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_lastCollisionObject;

	[Token(Token = "0x4002173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Material m_groundCrashSkyMaterial;

	[Token(Token = "0x4002174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material m_leafCrashSkyMaterial;

	[Token(Token = "0x4002175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Material m_waterCrashSkyMaterial;

	[Token(Token = "0x4002176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color m_groundCrashFaderColor;

	[Token(Token = "0x4002177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color m_leafCrashFaderColor;

	[Token(Token = "0x4002178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color m_waterCrashFaderColor;

	[Token(Token = "0x4002179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ParticleSystem m_groundCrashParticleSystem;

	[Token(Token = "0x400217A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private ParticleSystem m_leafCrashParticleSystem;

	[Token(Token = "0x400217B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ParticleSystem m_waterCrashParticleSystem;

	[Token(Token = "0x400217C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private ParticleSystem m_crashParticles;

	[Token(Token = "0x400217D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_originalSkyMaterial;

	[Token(Token = "0x400217E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Rigidbody m_parent;

	[Token(Token = "0x400217F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Camera m_currentCamera;

	[Token(Token = "0x4002180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_testForCrash;

	[Token(Token = "0x4002181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool m_hasCrashed;

	[Token(Token = "0x4002182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_velocityLastFrame;

	[Token(Token = "0x4002183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_angularVelocityLastFrame;

	[Token(Token = "0x4002184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_velocityVectorLastFrame;

	[Token(Token = "0x4002185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager m_gameManager;

	[Token(Token = "0x4002186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x4002187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LevelManager m_levelManager;

	[Token(Token = "0x4002188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static ScreenFader m_screenFader;

	[Token(Token = "0x4002189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CrashManager crashManager;

	[Token(Token = "0x400218B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent CrashUnityEvent;

	[Token(Token = "0x400218C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FAE4", Offset = "0x17FAE4")]
	private static Func<Collider, bool> <>f__am$cache0;

	[Token(Token = "0x400218D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17FAF4", Offset = "0x17FAF4")]
	private static Func<GameObject, bool> <>f__am$cache1;

	[Token(Token = "0x17000479")]
	public bool TestForCrash
	{
		[Token(Token = "0x6002355")]
		[Address(RVA = "0x3ABDF0", Offset = "0x3ABDF0", VA = "0x3ABDF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002356")]
		[Address(RVA = "0x393348", Offset = "0x393348", VA = "0x393348")]
		set
		{
		}
	}

	[Token(Token = "0x1700047A")]
	public bool HasCrashed
	{
		[Token(Token = "0x6002357")]
		[Address(RVA = "0x3ABDF8", Offset = "0x3ABDF8", VA = "0x3ABDF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000051")]
	public event CrashEventHandler CrashEvent
	{
		[Token(Token = "0x6002365")]
		[Address(RVA = "0x3AB2A0", Offset = "0x3AB2A0", VA = "0x3AB2A0")]
		add
		{
		}
		[Token(Token = "0x6002366")]
		[Address(RVA = "0x3ADDC4", Offset = "0x3ADDC4", VA = "0x3ADDC4")]
		remove
		{
		}
	}

	[Token(Token = "0x6002354")]
	[Address(RVA = "0x3ABCD0", Offset = "0x3ABCD0", VA = "0x3ABCD0")]
	public CrashManager()
	{
	}

	[Token(Token = "0x6002358")]
	[Address(RVA = "0x392E0C", Offset = "0x392E0C", VA = "0x392E0C")]
	public static CrashManager Instance()
	{
		return null;
	}

	[Token(Token = "0x6002359")]
	[Address(RVA = "0x3ABE00", Offset = "0x3ABE00", VA = "0x3ABE00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600235A")]
	[Address(RVA = "0x3AC024", Offset = "0x3AC024", VA = "0x3AC024")]
	private void Start()
	{
	}

	[Token(Token = "0x600235B")]
	[Address(RVA = "0x3AC048", Offset = "0x3AC048", VA = "0x3AC048")]
	[DebuggerHidden]
	private IEnumerator WaitForAllLevelsLoaded()
	{
		return null;
	}

	[Token(Token = "0x600235C")]
	[Address(RVA = "0x3AC0D4", Offset = "0x3AC0D4", VA = "0x3AC0D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600235D")]
	[Address(RVA = "0x3ACA90", Offset = "0x3ACA90", VA = "0x3ACA90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600235E")]
	[Address(RVA = "0x3ACB7C", Offset = "0x3ACB7C", VA = "0x3ACB7C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600235F")]
	[Address(RVA = "0x3ACCD8", Offset = "0x3ACCD8", VA = "0x3ACCD8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6002360")]
	[Address(RVA = "0x3AC13C", Offset = "0x3AC13C", VA = "0x3AC13C")]
	private void CheckForCrash(bool forceCrash, bool forceWaterCrash = false)
	{
	}

	[Token(Token = "0x6002361")]
	[Address(RVA = "0x3ACEC0", Offset = "0x3ACEC0", VA = "0x3ACEC0")]
	private void Crashed(float velocity = 0f, float angularVelocity = 0f, bool forceWaterCrash = false)
	{
	}

	[Token(Token = "0x6002362")]
	[Address(RVA = "0x3ADC50", Offset = "0x3ADC50", VA = "0x3ADC50")]
	[DebuggerHidden]
	private IEnumerator WaitForFadeSequence()
	{
		return null;
	}

	[Token(Token = "0x6002363")]
	[Address(RVA = "0x3ADCDC", Offset = "0x3ADCDC", VA = "0x3ADCDC")]
	[DebuggerHidden]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6002364")]
	[Address(RVA = "0x3ADD50", Offset = "0x3ADD50", VA = "0x3ADD50")]
	[DebuggerHidden]
	private IEnumerator EndLevel()
	{
		return null;
	}

	[Token(Token = "0x6002367")]
	[Address(RVA = "0x3ADED0", Offset = "0x3ADED0", VA = "0x3ADED0", Slot = "4")]
	protected virtual void _OnCrash(float velocity, float angularVelocity, CRASH_TYPE crashType, Vector3 positionOfCrash)
	{
	}

	[Token(Token = "0x6002368")]
	[Address(RVA = "0x3AE354", Offset = "0x3AE354", VA = "0x3AE354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182340", Offset = "0x182340")]
	private static bool <Crashed>m__0(Collider x)
	{
		return default(bool);
	}

	[Token(Token = "0x6002369")]
	[Address(RVA = "0x3AE408", Offset = "0x3AE408", VA = "0x3AE408")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x182350", Offset = "0x182350")]
	private static bool <Crashed>m__1(GameObject x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000514")]
public class DashGuage : MonoBehaviour
{
	[Token(Token = "0x2000515")]
	public enum GuageState
	{
		[Token(Token = "0x40021A7")]
		Off,
		[Token(Token = "0x40021A8")]
		Starting,
		[Token(Token = "0x40021A9")]
		On,
		[Token(Token = "0x40021AA")]
		Stopping
	}

	[Token(Token = "0x2000516")]
	public enum InputType
	{
		[Token(Token = "0x40021AC")]
		Knob,
		[Token(Token = "0x40021AD")]
		Switch,
		[Token(Token = "0x40021AE")]
		Button,
		[Token(Token = "0x40021AF")]
		Twist,
		[Token(Token = "0x40021B0")]
		DeviceInput
	}

	[Token(Token = "0x2000517")]
	public delegate void DeviceEventHandler();

	[Token(Token = "0x4002192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject guageTrigger;

	[Token(Token = "0x4002193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GuageState m_currentGaugeState;

	[Token(Token = "0x4002194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InputType UsingInputType;

	[Token(Token = "0x4002195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KnobInput knobInput;

	[Token(Token = "0x4002196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SwitchInput switchInput;

	[Token(Token = "0x4002197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TwistInput twistInput;

	[Token(Token = "0x4002198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ButtonInput buttonInput;

	[Token(Token = "0x4002199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DeviceInput deviceInput;

	[Token(Token = "0x400219A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject guageSwitch;

	[Token(Token = "0x400219B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RuntimeAnimatorController guageSwitchAnimatorController;

	[Token(Token = "0x400219C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string guageSwitchOnAnim;

	[Token(Token = "0x400219D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string guageSwitchOffAnim;

	[Token(Token = "0x400219E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int guageSwitchOnHash;

	[Token(Token = "0x400219F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int guageSwitchOffHash;

	[Token(Token = "0x40021A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool toggeled;

	[Token(Token = "0x40021A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool triggerHeld;

	[Token(Token = "0x40021A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool touchControllers;

	[Token(Token = "0x40021A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator guageSwitchAnimator;

	[Token(Token = "0x1700047B")]
	public GuageState CurrentGuageState
	{
		[Token(Token = "0x600236F")]
		[Address(RVA = "0x3AF420", Offset = "0x3AF420", VA = "0x3AF420")]
		get
		{
			return default(GuageState);
		}
		[Token(Token = "0x6002370")]
		[Address(RVA = "0x3AF428", Offset = "0x3AF428", VA = "0x3AF428")]
		set
		{
		}
	}

	[Token(Token = "0x14000052")]
	public event DeviceEventHandler DeviceOnEvent
	{
		[Token(Token = "0x600237A")]
		[Address(RVA = "0x3AFFA8", Offset = "0x3AFFA8", VA = "0x3AFFA8")]
		add
		{
		}
		[Token(Token = "0x600237B")]
		[Address(RVA = "0x3B00B4", Offset = "0x3B00B4", VA = "0x3B00B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000053")]
	public event DeviceEventHandler DeviceOffEvent
	{
		[Token(Token = "0x600237C")]
		[Address(RVA = "0x3B01C0", Offset = "0x3B01C0", VA = "0x3B01C0")]
		add
		{
		}
		[Token(Token = "0x600237D")]
		[Address(RVA = "0x3B02CC", Offset = "0x3B02CC", VA = "0x3B02CC")]
		remove
		{
		}
	}

	[Token(Token = "0x600236E")]
	[Address(RVA = "0x3AF410", Offset = "0x3AF410", VA = "0x3AF410")]
	public DashGuage()
	{
	}

	[Token(Token = "0x6002371")]
	[Address(RVA = "0x3AF490", Offset = "0x3AF490", VA = "0x3AF490")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002372")]
	[Address(RVA = "0x3AF604", Offset = "0x3AF604", VA = "0x3AF604")]
	private void Start()
	{
	}

	[Token(Token = "0x6002373")]
	[Address(RVA = "0x3AF7A4", Offset = "0x3AF7A4", VA = "0x3AF7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6002374")]
	[Address(RVA = "0x3AF148", Offset = "0x3AF148", VA = "0x3AF148")]
	public void ButtonClicked()
	{
	}

	[Token(Token = "0x6002375")]
	[Address(RVA = "0x3AF390", Offset = "0x3AF390", VA = "0x3AF390")]
	public void ButtonHeld()
	{
	}

	[Token(Token = "0x6002376")]
	[Address(RVA = "0x3AFCD0", Offset = "0x3AFCD0", VA = "0x3AFCD0")]
	public void InitDashAsRunning()
	{
	}

	[Token(Token = "0x6002377")]
	[Address(RVA = "0x3AFE3C", Offset = "0x3AFE3C", VA = "0x3AFE3C")]
	public void InitDashAsAsOff()
	{
	}

	[Token(Token = "0x6002378")]
	[Address(RVA = "0x3AFB80", Offset = "0x3AFB80", VA = "0x3AFB80")]
	public void TurnGuageOn()
	{
	}

	[Token(Token = "0x6002379")]
	[Address(RVA = "0x3AFA30", Offset = "0x3AFA30", VA = "0x3AFA30")]
	public void TurnGuageOff()
	{
	}

	[Token(Token = "0x600237E")]
	[Address(RVA = "0x3AF468", Offset = "0x3AF468", VA = "0x3AF468")]
	private void _OnDeviceOn()
	{
	}

	[Token(Token = "0x600237F")]
	[Address(RVA = "0x3AF47C", Offset = "0x3AF47C", VA = "0x3AF47C")]
	private void _OnDeviceOff()
	{
	}
}
[Token(Token = "0x2000518")]
public class DashGuageIgnitionMagneto : MonoBehaviour
{
	[Token(Token = "0x40021B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DashGuage magnetoTrigger;

	[Token(Token = "0x40021B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DashGuage ignitionTrigger;

	[Token(Token = "0x40021B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Engine engine;

	[Token(Token = "0x6002384")]
	[Address(RVA = "0x3B0634", Offset = "0x3B0634", VA = "0x3B0634")]
	public DashGuageIgnitionMagneto()
	{
	}

	[Token(Token = "0x6002385")]
	[Address(RVA = "0x3B063C", Offset = "0x3B063C", VA = "0x3B063C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002386")]
	[Address(RVA = "0x3AF1A4", Offset = "0x3AF1A4", VA = "0x3AF1A4")]
	public void ButtonClicked()
	{
	}

	[Token(Token = "0x6002387")]
	[Address(RVA = "0x3AF3B0", Offset = "0x3AF3B0", VA = "0x3AF3B0")]
	public void ButtonHeld()
	{
	}
}
[Token(Token = "0x2000519")]
public class DeliveryPlatform : MonoBehaviour
{
	[Token(Token = "0x20005DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1743A4", Offset = "0x1743A4")]
	private sealed class <RestorePackageVelocities>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DeliveryPlatform $this;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170005B5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x3BDD50", Offset = "0x3BDD50", VA = "0x3BDD50", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x3BDD58", Offset = "0x3BDD58", VA = "0x3BDD58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x3BD8BC", Offset = "0x3BD8BC", VA = "0x3BD8BC")]
		[DebuggerHidden]
		public <RestorePackageVelocities>c__Iterator0()
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x3BD8C4", Offset = "0x3BD8C4", VA = "0x3BD8C4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x3BDD60", Offset = "0x3BDD60", VA = "0x3BDD60", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x3BDD74", Offset = "0x3BDD74", VA = "0x3BDD74", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40021B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform parentTransform;

	[Token(Token = "0x40021B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject packagesParent;

	[Token(Token = "0x40021B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Rigidbody[] packagesRigidbodys;

	[Token(Token = "0x40021B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] packageVelocities;

	[Token(Token = "0x40021B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3[] packageAngularVelocities;

	[Token(Token = "0x40021B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxPackageDistance;

	[Token(Token = "0x40021BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager gameManager;

	[Token(Token = "0x40021BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static LevelManager levelManager;

	[Token(Token = "0x40021BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DeliveryPlatform deliveryPlatform;

	[Token(Token = "0x6002388")]
	[Address(RVA = "0x3BCB44", Offset = "0x3BCB44", VA = "0x3BCB44")]
	public DeliveryPlatform()
	{
	}

	[Token(Token = "0x6002389")]
	[Address(RVA = "0x3BCB58", Offset = "0x3BCB58", VA = "0x3BCB58")]
	public static DeliveryPlatform Instance()
	{
		return null;
	}

	[Token(Token = "0x600238A")]
	[Address(RVA = "0x3BCD40", Offset = "0x3BCD40", VA = "0x3BCD40")]
	private void Start()
	{
	}

	[Token(Token = "0x600238B")]
	[Address(RVA = "0x3BCF40", Offset = "0x3BCF40", VA = "0x3BCF40")]
	public void removeOldPackages()
	{
	}

	[Token(Token = "0x600238C")]
	[Address(RVA = "0x3BD030", Offset = "0x3BD030", VA = "0x3BD030")]
	public void spawnPackageGroup(GameObject packagePrefab)
	{
	}

	[Token(Token = "0x600238D")]
	[Address(RVA = "0x3BD400", Offset = "0x3BD400", VA = "0x3BD400")]
	public int countPackages()
	{
		return default(int);
	}

	[Token(Token = "0x600238E")]
	[Address(RVA = "0x3BD500", Offset = "0x3BD500", VA = "0x3BD500")]
	public void PausePackages(bool isPausing)
	{
	}

	[Token(Token = "0x600238F")]
	[Address(RVA = "0x3BD838", Offset = "0x3BD838", VA = "0x3BD838")]
	[DebuggerHidden]
	private IEnumerator RestorePackageVelocities()
	{
		return null;
	}
}
namespace TrackedInput
{
	[Token(Token = "0x200051A")]
	public class FlightStick : MonoBehaviour
	{
		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform m_flightStickBase;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_flightStick;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 m_baseOffset;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Vector3 m_stickOffset;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_correctedTargetPositionX;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_correctedTargetPositionZ;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_maxRotationX;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_maxRotationZ;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_rotationRangeX;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_rotationRangeZ;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float m_minRotationX;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float m_minRotationZ;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 m_normalizedInput;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private HandPose m_handPose;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_grabIsToggled;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isGrabbed;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_preventGrab;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private InteractableHandInput m_isGrabbedInput;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GenericInput m_aileronInput;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GenericInput m_elevatorInput;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_touchOrigin;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Transform m_followTarget;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TRACKED_OBJECT m_currentHand;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_invertSteerableWheel;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_useHaptics;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HapticInput m_hapticInputX;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private HapticInput m_hapticInputZ;

		[Token(Token = "0x1700047C")]
		public Vector2 GetInput
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x2D2FE4", Offset = "0x2D2FE4", VA = "0x2D2FE4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700047D")]
		public float GetInputX
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x2D2FF8", Offset = "0x2D2FF8", VA = "0x2D2FF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700047E")]
		public float GetInputZ
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x2D3000", Offset = "0x2D3000", VA = "0x2D3000")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x2D2F48", Offset = "0x2D2F48", VA = "0x2D2F48")]
		public FlightStick()
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x2D3008", Offset = "0x2D3008", VA = "0x2D3008")]
		private void Start()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x2D3480", Offset = "0x2D3480", VA = "0x2D3480")]
		private void Update()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x2D3714", Offset = "0x2D3714", VA = "0x2D3714")]
		private bool isHandNearStick(float distance, TRACKED_OBJECT hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x2D380C", Offset = "0x2D380C", VA = "0x2D380C")]
		private void SetGrabHand()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x2D3924", Offset = "0x2D3924", VA = "0x2D3924")]
		private void SetHandPose()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x2D3A58", Offset = "0x2D3A58", VA = "0x2D3A58")]
		private void PositionStick()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x2D3DD4", Offset = "0x2D3DD4", VA = "0x2D3DD4")]
		private void CheckForOverThrow()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x2D4178", Offset = "0x2D4178", VA = "0x2D4178")]
		private void SetInput()
		{
		}
	}
}
[Token(Token = "0x200051B")]
public class GyroscopicStability : MonoBehaviour
{
	[Token(Token = "0x40021D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Rigidbody partentObject;

	[Token(Token = "0x40021D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rigidbody rotationalHub;

	[Token(Token = "0x40021DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxStabilityAtRPM;

	[Token(Token = "0x40021DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxIdealRPM;

	[Token(Token = "0x40021DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minimumStabilityAtRPM;

	[Token(Token = "0x600239C")]
	[Address(RVA = "0x505EF8", Offset = "0x505EF8", VA = "0x505EF8")]
	public GyroscopicStability()
	{
	}

	[Token(Token = "0x600239D")]
	[Address(RVA = "0x505F18", Offset = "0x505F18", VA = "0x505F18")]
	private void Start()
	{
	}

	[Token(Token = "0x600239E")]
	[Address(RVA = "0x505FE0", Offset = "0x505FE0", VA = "0x505FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600239F")]
	[Address(RVA = "0x505FE4", Offset = "0x505FE4", VA = "0x505FE4")]
	private void FixedUpdate()
	{
	}
}
[Token(Token = "0x200051C")]
public class MakeChild : MonoBehaviour
{
	[Token(Token = "0x40021DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject childObject;

	[Token(Token = "0x40021DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool worldPositionStays;

	[Token(Token = "0x40021DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool inheritRotation;

	[Token(Token = "0x60023A0")]
	[Address(RVA = "0x35A300", Offset = "0x35A300", VA = "0x35A300")]
	public MakeChild()
	{
	}

	[Token(Token = "0x60023A1")]
	[Address(RVA = "0x35A310", Offset = "0x35A310", VA = "0x35A310")]
	private void Start()
	{
	}
}
[Token(Token = "0x200051D")]
public class SiteBlocker : MonoBehaviour
{
	[Token(Token = "0x200051E")]
	public enum MODE
	{
		[Token(Token = "0x40021F0")]
		Opaque,
		[Token(Token = "0x40021F1")]
		Transparent,
		[Token(Token = "0x40021F2")]
		AngleDependant,
		[Token(Token = "0x40021F3")]
		None
	}

	[Token(Token = "0x40021E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private MODE m_currentVisBlockMode;

	[Token(Token = "0x40021E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool m_overridePlayerPrefs;

	[Token(Token = "0x40021E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_noBlockerGameObject;

	[Token(Token = "0x40021E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_clearBlockerGameObject;

	[Token(Token = "0x40021E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_visBlockerGameObject;

	[Token(Token = "0x40021E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_frontWindow;

	[Token(Token = "0x40021E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject m_frontLeftWindow;

	[Token(Token = "0x40021E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_frontRightWindow;

	[Token(Token = "0x40021E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_sideLeftWindow;

	[Token(Token = "0x40021E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_sideRightWindow;

	[Token(Token = "0x40021EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private GameObject m_topWindow;

	[Token(Token = "0x40021EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_topLeftWindow;

	[Token(Token = "0x40021EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private GameObject m_topRightWindow;

	[Token(Token = "0x40021ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_cameraTransform;

	[Token(Token = "0x40021EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private GameManager m_gameManager;

	[Token(Token = "0x60023A2")]
	[Address(RVA = "0x2BDA38", Offset = "0x2BDA38", VA = "0x2BDA38")]
	public SiteBlocker()
	{
	}

	[Token(Token = "0x60023A3")]
	[Address(RVA = "0x2BDA40", Offset = "0x2BDA40", VA = "0x2BDA40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023A4")]
	[Address(RVA = "0x2BDADC", Offset = "0x2BDADC", VA = "0x2BDADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60023A5")]
	[Address(RVA = "0x2BDAF8", Offset = "0x2BDAF8", VA = "0x2BDAF8")]
	private void _InitOnce()
	{
	}

	[Token(Token = "0x60023A6")]
	[Address(RVA = "0x2BDC48", Offset = "0x2BDC48", VA = "0x2BDC48")]
	public void InitSiteBlocker()
	{
	}

	[Token(Token = "0x60023A7")]
	[Address(RVA = "0x2BE4AC", Offset = "0x2BE4AC", VA = "0x2BE4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60023A8")]
	[Address(RVA = "0x2BE4BC", Offset = "0x2BE4BC", VA = "0x2BE4BC")]
	private void SetWindowTransparancy()
	{
	}

	[Token(Token = "0x60023A9")]
	[Address(RVA = "0x2BED0C", Offset = "0x2BED0C", VA = "0x2BED0C")]
	private float GetWindowTransparancy(float angle, float start, float stop)
	{
		return default(float);
	}

	[Token(Token = "0x60023AA")]
	[Address(RVA = "0x2BE070", Offset = "0x2BE070", VA = "0x2BE070")]
	private void SetWindowTransparancy(bool isOpaque)
	{
	}
}
[Token(Token = "0x200051F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x173720", Offset = "0x173720")]
public class UltralightCantLeaveBounds : MonoBehaviour
{
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1743B4", Offset = "0x1743B4")]
	private sealed class <_WaitForAlwaysLoadedCameraHandeler>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal UltralightCantLeaveBounds $this;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170005B7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x385B38", Offset = "0x385B38", VA = "0x385B38", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x385B40", Offset = "0x385B40", VA = "0x385B40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x3858E4", Offset = "0x3858E4", VA = "0x3858E4")]
		[DebuggerHidden]
		public <_WaitForAlwaysLoadedCameraHandeler>c__Iterator0()
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x38599C", Offset = "0x38599C", VA = "0x38599C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x385B48", Offset = "0x385B48", VA = "0x385B48", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x385B5C", Offset = "0x385B5C", VA = "0x385B5C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1743C4", Offset = "0x1743C4")]
	private sealed class <_WaitForSceneToLoad>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal UltralightCantLeaveBounds $this;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170005B9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x385DA8", Offset = "0x385DA8", VA = "0x385DA8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0x385DB0", Offset = "0x385DB0", VA = "0x385DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x385994", Offset = "0x385994", VA = "0x385994")]
		[DebuggerHidden]
		public <_WaitForSceneToLoad>c__Iterator1()
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x385BE4", Offset = "0x385BE4", VA = "0x385BE4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x385DB8", Offset = "0x385DB8", VA = "0x385DB8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x385DCC", Offset = "0x385DCC", VA = "0x385DCC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40021F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameManager m_gameManager;

	[Token(Token = "0x40021F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CantLeaveBounds m_cantLeaveBounds;

	[Token(Token = "0x60023AB")]
	[Address(RVA = "0x38548C", Offset = "0x38548C", VA = "0x38548C")]
	public UltralightCantLeaveBounds()
	{
	}

	[Token(Token = "0x60023AC")]
	[Address(RVA = "0x385494", Offset = "0x385494", VA = "0x385494")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023AD")]
	[Address(RVA = "0x38553C", Offset = "0x38553C", VA = "0x38553C")]
	private void Start()
	{
	}

	[Token(Token = "0x60023AE")]
	[Address(RVA = "0x385860", Offset = "0x385860", VA = "0x385860")]
	[DebuggerHidden]
	private IEnumerator _WaitForAlwaysLoadedCameraHandeler()
	{
		return null;
	}

	[Token(Token = "0x60023AF")]
	[Address(RVA = "0x385570", Offset = "0x385570", VA = "0x385570")]
	private void _GetGameManager()
	{
	}

	[Token(Token = "0x60023B0")]
	[Address(RVA = "0x385498", Offset = "0x385498", VA = "0x385498")]
	private void _AwakeCantLeaveBounds()
	{
	}

	[Token(Token = "0x60023B1")]
	[Address(RVA = "0x3855F4", Offset = "0x3855F4", VA = "0x3855F4")]
	private void _SetupCantLeaveBounds()
	{
	}

	[Token(Token = "0x60023B2")]
	[Address(RVA = "0x3858EC", Offset = "0x3858EC", VA = "0x3858EC")]
	private void _StartWaitForSceneToLoad()
	{
	}

	[Token(Token = "0x60023B3")]
	[Address(RVA = "0x385910", Offset = "0x385910", VA = "0x385910")]
	[DebuggerHidden]
	private IEnumerator _WaitForSceneToLoad()
	{
		return null;
	}
}
[Token(Token = "0x2000520")]
public class WheelTouchdownAudio : MonoBehaviour
{
	[Token(Token = "0x40021F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float m_minVolume;

	[Token(Token = "0x40021F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private AudioSource m_source;

	[Token(Token = "0x40021F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AudioClip[] m_clips;

	[Token(Token = "0x40021F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_knotsForMinVolume;

	[Token(Token = "0x40021FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_knotsForMaxVolume;

	[Token(Token = "0x40021FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_airTimeForMinVolume;

	[Token(Token = "0x40021FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_airTimeForMaxVolume;

	[Token(Token = "0x40021FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_airTime;

	[Token(Token = "0x40021FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private WheelCollider m_wheel;

	[Token(Token = "0x40021FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_prevIsGrounded;

	[Token(Token = "0x4002200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private ControllerAircraft m_controllerAircraft;

	[Token(Token = "0x60023B4")]
	[Address(RVA = "0x738FE0", Offset = "0x738FE0", VA = "0x738FE0")]
	public WheelTouchdownAudio()
	{
	}

	[Token(Token = "0x60023B5")]
	[Address(RVA = "0x739018", Offset = "0x739018", VA = "0x739018")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023B6")]
	[Address(RVA = "0x739080", Offset = "0x739080", VA = "0x739080")]
	private void Start()
	{
	}

	[Token(Token = "0x60023B7")]
	[Address(RVA = "0x739200", Offset = "0x739200", VA = "0x739200")]
	private void Update()
	{
	}

	[Token(Token = "0x60023B8")]
	[Address(RVA = "0x739084", Offset = "0x739084", VA = "0x739084")]
	private void _SetupWheel()
	{
	}

	[Token(Token = "0x60023B9")]
	[Address(RVA = "0x739204", Offset = "0x739204", VA = "0x739204")]
	private void _UpdateWheel()
	{
	}

	[Token(Token = "0x60023BA")]
	[Address(RVA = "0x739350", Offset = "0x739350", VA = "0x739350")]
	private void _Touchdown()
	{
	}
}
[Token(Token = "0x2000521")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x173798", Offset = "0x173798")]
public class Beam : MonoBehaviour
{
	[Token(Token = "0x4002201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float startWidth;

	[Token(Token = "0x4002202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float endWidth;

	[Token(Token = "0x4002203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float startOffset;

	[Token(Token = "0x4002204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float endOffset;

	[Token(Token = "0x4002205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int count;

	[Token(Token = "0x4002206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool updateEveryFrame;

	[Token(Token = "0x4002207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool makeTail;

	[Token(Token = "0x4002208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxUVAngle;

	[Token(Token = "0x4002209")]
	private const float epsilon = 0.001f;

	[Token(Token = "0x400220A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> vertices;

	[Token(Token = "0x400220B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<Vector2> uvs;

	[Token(Token = "0x400220C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> normals;

	[Token(Token = "0x400220D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<int> indices;

	[Token(Token = "0x400220E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 position;

	[Token(Token = "0x60023BB")]
	[Address(RVA = "0x43D798", Offset = "0x43D798", VA = "0x43D798")]
	public Beam()
	{
	}

	[Token(Token = "0x60023BC")]
	[Address(RVA = "0x43D7D8", Offset = "0x43D7D8", VA = "0x43D7D8")]
	private void Validate()
	{
	}

	[Token(Token = "0x60023BD")]
	[Address(RVA = "0x43D894", Offset = "0x43D894", VA = "0x43D894")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60023BE")]
	[Address(RVA = "0x43E684", Offset = "0x43E684", VA = "0x43E684")]
	public void Update()
	{
	}

	[Token(Token = "0x60023BF")]
	[Address(RVA = "0x43D96C", Offset = "0x43D96C", VA = "0x43D96C")]
	private Mesh createMesh()
	{
		return null;
	}
}
[Token(Token = "0x2000522")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x17382C", Offset = "0x17382C")]
public class ControllerFadeManager : MonoBehaviour
{
	[Token(Token = "0x400220F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private FadeManger fadeManager;

	[Token(Token = "0x4002210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float AngleHide;

	[Token(Token = "0x60023C0")]
	[Address(RVA = "0x326E00", Offset = "0x326E00", VA = "0x326E00")]
	public ControllerFadeManager()
	{
	}

	[Token(Token = "0x60023C1")]
	[Address(RVA = "0x326E14", Offset = "0x326E14", VA = "0x326E14")]
	private void Start()
	{
	}

	[Token(Token = "0x60023C2")]
	[Address(RVA = "0x327160", Offset = "0x327160", VA = "0x327160")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000523")]
public class FadeManger : MonoBehaviour
{
	[Token(Token = "0x4002211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float FadeTime;

	[Token(Token = "0x4002212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Material> Materials;

	[Token(Token = "0x4002213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float InternalFadeTime;

	[Token(Token = "0x4002214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInTransition;

	[Token(Token = "0x4002215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool IsFadeOut;

	[Token(Token = "0x4002216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float alpha;

	[Token(Token = "0x60023C3")]
	[Address(RVA = "0xBB1388", Offset = "0xBB1388", VA = "0xBB1388")]
	public FadeManger()
	{
	}

	[Token(Token = "0x60023C4")]
	[Address(RVA = "0xBB13A8", Offset = "0xBB13A8", VA = "0xBB13A8")]
	public void Fade(bool fadeOut)
	{
	}

	[Token(Token = "0x60023C5")]
	[Address(RVA = "0xBB1418", Offset = "0xBB1418", VA = "0xBB1418")]
	private void Update()
	{
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x2000524")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4002218")]
		Array = 1,
		[Token(Token = "0x4002219")]
		Object = 2,
		[Token(Token = "0x400221A")]
		String = 3,
		[Token(Token = "0x400221B")]
		Number = 4,
		[Token(Token = "0x400221C")]
		NullValue = 5,
		[Token(Token = "0x400221D")]
		Boolean = 6,
		[Token(Token = "0x400221E")]
		None = 7,
		[Token(Token = "0x400221F")]
		Custom = 255
	}
	[Token(Token = "0x2000525")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4002221")]
		Compact,
		[Token(Token = "0x4002222")]
		Indent
	}
	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1738A4", Offset = "0x1738A4")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000527")]
		public struct Enumerator
		{
			[Token(Token = "0x2000528")]
			private enum Type
			{
				[Token(Token = "0x4002229")]
				None,
				[Token(Token = "0x400222A")]
				Array,
				[Token(Token = "0x400222B")]
				Object
			}

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x17000497")]
			public bool IsValid
			{
				[Token(Token = "0x6002405")]
				[Address(RVA = "0x1C43F0", Offset = "0x1C43F0", VA = "0x1C43F0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000498")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002406")]
				[Address(RVA = "0x1C4400", Offset = "0x1C4400", VA = "0x1C4400")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002403")]
			[Address(RVA = "0x1C438C", Offset = "0x1C438C", VA = "0x1C438C")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002404")]
			[Address(RVA = "0x1C43C0", Offset = "0x1C43C0", VA = "0x1C43C0")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x1C4414", Offset = "0x1C4414", VA = "0x1C4414")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000529")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000499")]
			public JSONNode Current
			{
				[Token(Token = "0x600240B")]
				[Address(RVA = "0x1C4664", Offset = "0x1C4664", VA = "0x1C4664")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002408")]
			[Address(RVA = "0x1C45B4", Offset = "0x1C45B4", VA = "0x1C45B4")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0x1C45E8", Offset = "0x1C45E8", VA = "0x1C45E8")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x600240A")]
			[Address(RVA = "0x1C4618", Offset = "0x1C4618", VA = "0x1C4618")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0x1C466C", Offset = "0x1C466C", VA = "0x1C466C")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0x1C4674", Offset = "0x1C4674", VA = "0x1C4674")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x200052A")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700049A")]
			public JSONNode Current
			{
				[Token(Token = "0x6002411")]
				[Address(RVA = "0x1C4528", Offset = "0x1C4528", VA = "0x1C4528")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0x1C4478", Offset = "0x1C4478", VA = "0x1C4478")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0x1C44AC", Offset = "0x1C44AC", VA = "0x1C44AC")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x1C44DC", Offset = "0x1C44DC", VA = "0x1C44DC")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x1C4530", Offset = "0x1C4530", VA = "0x1C4530")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0x1C4538", Offset = "0x1C4538", VA = "0x1C4538")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x200052B")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable
		{
			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private JSONNode m_Node;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700049B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002416")]
				[Address(RVA = "0x2BA130", Offset = "0x2BA130", VA = "0x2BA130", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049C")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002415")]
				[Address(RVA = "0x2BA11C", Offset = "0x2BA11C", VA = "0x2BA11C", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x2BA018", Offset = "0x2BA018", VA = "0x2BA018")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002417")]
			[Address(RVA = "0x2BA1B4", Offset = "0x2BA1B4", VA = "0x2BA1B4", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x2BA1BC", Offset = "0x2BA1BC", VA = "0x2BA1BC", Slot = "8")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x2BA1DC", Offset = "0x2BA1DC", VA = "0x2BA1DC", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600241A")]
			[Address(RVA = "0x2BA250", Offset = "0x2BA250", VA = "0x2BA250", Slot = "7")]
			public void Reset()
			{
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0x2BA344", Offset = "0x2BA344", VA = "0x2BA344", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1743D4", Offset = "0x1743D4")]
		private sealed class <>c__Iterator0 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal JSONNode $current;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal bool $disposing;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int $PC;

			[Token(Token = "0x170005BB")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60027C8")]
				[Address(RVA = "0x2B9120", Offset = "0x2B9120", VA = "0x2B9120", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C9")]
				[Address(RVA = "0x2B9128", Offset = "0x2B9128", VA = "0x2B9128", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x2B9108", Offset = "0x2B9108", VA = "0x2B9108")]
			[DebuggerHidden]
			public <>c__Iterator0()
			{
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x2B9110", Offset = "0x2B9110", VA = "0x2B9110", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x2B9130", Offset = "0x2B9130", VA = "0x2B9130", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60027CB")]
			[Address(RVA = "0x2B9134", Offset = "0x2B9134", VA = "0x2B9134", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x2B91BC", Offset = "0x2B91BC", VA = "0x2B91BC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60027CD")]
			[Address(RVA = "0x2B91C0", Offset = "0x2B91C0", VA = "0x2B91C0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1743E4", Offset = "0x1743E4")]
		private sealed class <>c__Iterator1 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal IEnumerator<JSONNode> $locvar0;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal JSONNode <C>__1;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IEnumerator<JSONNode> $locvar1;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal JSONNode <D>__2;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal JSONNode $this;

			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal JSONNode $current;

			[Token(Token = "0x40024FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x170005BD")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60027D0")]
				[Address(RVA = "0x2B98FC", Offset = "0x2B98FC", VA = "0x2B98FC", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D1")]
				[Address(RVA = "0x2B9904", Offset = "0x2B9904", VA = "0x2B9904", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x2B924C", Offset = "0x2B924C", VA = "0x2B924C")]
			[DebuggerHidden]
			public <>c__Iterator1()
			{
			}

			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x2B9254", Offset = "0x2B9254", VA = "0x2B9254", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x2B990C", Offset = "0x2B990C", VA = "0x2B990C", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x2B9AD0", Offset = "0x2B9AD0", VA = "0x2B9AD0", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x2B9B58", Offset = "0x2B9B58", VA = "0x2B9B58", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x2B9B5C", Offset = "0x2B9B5C", VA = "0x2B9B5C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4002224")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x1700047F")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x60023C7")]
			get;
		}

		[Token(Token = "0x17000480")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x2FFD9C", Offset = "0x2FFD9C", VA = "0x2FFD9C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x2FFDA4", Offset = "0x2FFDA4", VA = "0x2FFDA4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x2FFDA8", Offset = "0x2FFDA8", VA = "0x2FFDA8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x2FFDB0", Offset = "0x2FFDB0", VA = "0x2FFDB0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public virtual string Value
		{
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x2FFDB4", Offset = "0x2FFDB4", VA = "0x2FFDB4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x2FFE40", Offset = "0x2FFE40", VA = "0x2FFE40", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		public virtual int Count
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x2FFE44", Offset = "0x2FFE44", VA = "0x2FFE44", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000484")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x2FFE4C", Offset = "0x2FFE4C", VA = "0x2FFE4C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000485")]
		public virtual bool IsString
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x2FFE54", Offset = "0x2FFE54", VA = "0x2FFE54", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000486")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x2FFE5C", Offset = "0x2FFE5C", VA = "0x2FFE5C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000487")]
		public virtual bool IsNull
		{
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x2FFE64", Offset = "0x2FFE64", VA = "0x2FFE64", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000488")]
		public virtual bool IsArray
		{
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x2FFE6C", Offset = "0x2FFE6C", VA = "0x2FFE6C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000489")]
		public virtual bool IsObject
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x2FFE74", Offset = "0x2FFE74", VA = "0x2FFE74", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048A")]
		public virtual bool Inline
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x2FFE7C", Offset = "0x2FFE7C", VA = "0x2FFE7C", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x2FFE84", Offset = "0x2FFE84", VA = "0x2FFE84", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700048B")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x2FFF50", Offset = "0x2FFF50", VA = "0x2FFF50", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x2FFFD4", Offset = "0x2FFFD4", VA = "0x2FFFD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x300200", Offset = "0x300200", VA = "0x300200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x300274", Offset = "0x300274", VA = "0x300274")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x1700048F")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x3002E8", Offset = "0x3002E8", VA = "0x3002E8")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x17000490")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x30035C", Offset = "0x30035C", VA = "0x30035C", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x3003AC", Offset = "0x3003AC", VA = "0x3003AC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public virtual int AsInt
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x3003EC", Offset = "0x3003EC", VA = "0x3003EC", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0x300414", Offset = "0x300414", VA = "0x300414", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000492")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60023E9")]
			[Address(RVA = "0x300448", Offset = "0x300448", VA = "0x300448", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x300470", Offset = "0x300470", VA = "0x300470", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x3004A4", Offset = "0x3004A4", VA = "0x3004A4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023EC")]
			[Address(RVA = "0x3005C0", Offset = "0x3005C0", VA = "0x3005C0", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x300658", Offset = "0x300658", VA = "0x300658", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x3006EC", Offset = "0x3006EC", VA = "0x3006EC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x300EB0", Offset = "0x300EB0", VA = "0x300EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x2FDF1C", Offset = "0x2FDF1C", VA = "0x2FDF1C")]
		protected JSONNode()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x2FFE88", Offset = "0x2FFE88", VA = "0x2FFE88", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x2FFE8C", Offset = "0x2FFE8C", VA = "0x2FFE8C", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x2FFF38", Offset = "0x2FFF38", VA = "0x2FFF38", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x2FFF40", Offset = "0x2FFF40", VA = "0x2FFF40", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x2FFF48", Offset = "0x2FFF48", VA = "0x2FFF48", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x300074", Offset = "0x300074", VA = "0x300074", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x300138", Offset = "0x300138", VA = "0x300138", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x60023E0")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x60023E1")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x300780", Offset = "0x300780", VA = "0x300780")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x3007F4", Offset = "0x3007F4", VA = "0x3007F4")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x3008A8", Offset = "0x3008A8", VA = "0x3008A8")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x300934", Offset = "0x300934", VA = "0x300934")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x3009F0", Offset = "0x3009F0", VA = "0x3009F0")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x300A80", Offset = "0x300A80", VA = "0x300A80")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x300B34", Offset = "0x300B34", VA = "0x300B34")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x300BC0", Offset = "0x300BC0", VA = "0x300BC0")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x300C74", Offset = "0x300C74", VA = "0x300C74")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x300CE4", Offset = "0x300CE4", VA = "0x300CE4")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x300D98", Offset = "0x300D98", VA = "0x300D98")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x2FE2EC", Offset = "0x2FE2EC", VA = "0x2FE2EC")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x300E08", Offset = "0x300E08", VA = "0x300E08")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x300E94", Offset = "0x300E94", VA = "0x300E94", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x300EA8", Offset = "0x300EA8", VA = "0x300EA8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x300FF8", Offset = "0x300FF8", VA = "0x300FF8")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x3014C8", Offset = "0x3014C8", VA = "0x3014C8")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x2FD2C0", Offset = "0x2FD2C0", VA = "0x2FD2C0")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1738D8", Offset = "0x1738D8")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1743F4", Offset = "0x1743F4")]
		private sealed class <>c__Iterator0 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x4002500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal List<JSONNode>.Enumerator $locvar0;

			[Token(Token = "0x4002501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal JSONNode <N>__1;

			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal JSONArray $this;

			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal JSONNode $current;

			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool $disposing;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal int $PC;

			[Token(Token = "0x170005BF")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60027D8")]
				[Address(RVA = "0x2FED6C", Offset = "0x2FED6C", VA = "0x2FED6C", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D9")]
				[Address(RVA = "0x2FED74", Offset = "0x2FED74", VA = "0x2FED74", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x2FE964", Offset = "0x2FE964", VA = "0x2FE964")]
			[DebuggerHidden]
			public <>c__Iterator0()
			{
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x2FEBB4", Offset = "0x2FEBB4", VA = "0x2FEBB4", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x2FED7C", Offset = "0x2FED7C", VA = "0x2FED7C", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x2FEDFC", Offset = "0x2FEDFC", VA = "0x2FEDFC", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x2FEE84", Offset = "0x2FEE84", VA = "0x2FEE84", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x2FEE88", Offset = "0x2FEE88", VA = "0x2FEE88", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inline;

		[Token(Token = "0x1700049D")]
		public override bool Inline
		{
			[Token(Token = "0x600241D")]
			[Address(RVA = "0x2FDF24", Offset = "0x2FDF24", VA = "0x2FDF24", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600241E")]
			[Address(RVA = "0x2FDF2C", Offset = "0x2FDF2C", VA = "0x2FDF2C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600241F")]
			[Address(RVA = "0x2FDF34", Offset = "0x2FDF34", VA = "0x2FDF34", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700049F")]
		public override bool IsArray
		{
			[Token(Token = "0x6002420")]
			[Address(RVA = "0x2FDF3C", Offset = "0x2FDF3C", VA = "0x2FDF3C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A0")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002422")]
			[Address(RVA = "0x2FE000", Offset = "0x2FE000", VA = "0x2FE000", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002423")]
			[Address(RVA = "0x2FE17C", Offset = "0x2FE17C", VA = "0x2FE17C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170004A1")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002424")]
			[Address(RVA = "0x2FE470", Offset = "0x2FE470", VA = "0x2FE470", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002425")]
			[Address(RVA = "0x2FE4E0", Offset = "0x2FE4E0", VA = "0x2FE4E0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170004A2")]
		public override int Count
		{
			[Token(Token = "0x6002426")]
			[Address(RVA = "0x2FE5D8", Offset = "0x2FE5D8", VA = "0x2FE5D8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004A3")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600242A")]
			[Address(RVA = "0x2FE8C4", Offset = "0x2FE8C4", VA = "0x2FE8C4", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x2FDE64", Offset = "0x2FDE64", VA = "0x2FDE64")]
		public JSONArray()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x2FDF44", Offset = "0x2FDF44", VA = "0x2FDF44", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x2FE650", Offset = "0x2FE650", VA = "0x2FE650", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x2FE748", Offset = "0x2FE748", VA = "0x2FE748", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x2FE840", Offset = "0x2FE840", VA = "0x2FE840", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x2FE96C", Offset = "0x2FE96C", VA = "0x2FE96C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x17390C", Offset = "0x17390C")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174404", Offset = "0x174404")]
		private sealed class <Remove>c__AnonStorey1
		{
			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal JSONNode aNode;

			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x2BBAE4", Offset = "0x2BBAE4", VA = "0x2BBAE4")]
			public <Remove>c__AnonStorey1()
			{
			}

			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x2BC3C0", Offset = "0x2BC3C0", VA = "0x2BC3C0")]
			internal bool <>m__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x174414", Offset = "0x174414")]
		private sealed class <>c__Iterator0 : IEnumerable, IEnumerable<JSONNode>, IEnumerator, IDisposable, IEnumerator<JSONNode>
		{
			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Dictionary<string, JSONNode>.Enumerator $locvar0;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal KeyValuePair<string, JSONNode> <N>__1;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal JSONObject $this;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal JSONNode $current;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal bool $disposing;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int $PC;

			[Token(Token = "0x170005C1")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60027E2")]
				[Address(RVA = "0x2BC1F8", Offset = "0x2BC1F8", VA = "0x2BC1F8", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E3")]
				[Address(RVA = "0x2BC200", Offset = "0x2BC200", VA = "0x2BC200", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x2BBB8C", Offset = "0x2BBB8C", VA = "0x2BBB8C")]
			[DebuggerHidden]
			public <>c__Iterator0()
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x2BC014", Offset = "0x2BC014", VA = "0x2BC014", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x2BC208", Offset = "0x2BC208", VA = "0x2BC208", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x2BC288", Offset = "0x2BC288", VA = "0x2BC288", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0x2BC310", Offset = "0x2BC310", VA = "0x2BC310", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x2BC314", Offset = "0x2BC314", VA = "0x2BC314", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inline;

		[Token(Token = "0x170004A4")]
		public override bool Inline
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0x2BAE74", Offset = "0x2BAE74", VA = "0x2BAE74", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600242E")]
			[Address(RVA = "0x2BAE7C", Offset = "0x2BAE7C", VA = "0x2BAE7C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170004A5")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x2BAE84", Offset = "0x2BAE84", VA = "0x2BAE84", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004A6")]
		public override bool IsObject
		{
			[Token(Token = "0x6002430")]
			[Address(RVA = "0x2BAE8C", Offset = "0x2BAE8C", VA = "0x2BAE8C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A7")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002432")]
			[Address(RVA = "0x2BAF48", Offset = "0x2BAF48", VA = "0x2BAF48", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002433")]
			[Address(RVA = "0x2BB030", Offset = "0x2BB030", VA = "0x2BB030", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170004A8")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002434")]
			[Address(RVA = "0x2BB190", Offset = "0x2BB190", VA = "0x2BB190", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x2BB274", Offset = "0x2BB274", VA = "0x2BB274", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170004A9")]
		public override int Count
		{
			[Token(Token = "0x6002436")]
			[Address(RVA = "0x2BB408", Offset = "0x2BB408", VA = "0x2BB408", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004AA")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x2BBAEC", Offset = "0x2BBAEC", VA = "0x2BBAEC", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x2BADBC", Offset = "0x2BADBC", VA = "0x2BADBC")]
		public JSONObject()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x2BAE94", Offset = "0x2BAE94", VA = "0x2BAE94", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x2BB480", Offset = "0x2BB480", VA = "0x2BB480", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x2BB6B0", Offset = "0x2BB6B0", VA = "0x2BB6B0", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x2BB7A4", Offset = "0x2BB7A4", VA = "0x2BB7A4", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x2BB8D4", Offset = "0x2BB8D4", VA = "0x2BB8D4", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x2BBB94", Offset = "0x2BBB94", VA = "0x2BBB94", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_Data;

		[Token(Token = "0x170004AB")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600243E")]
			[Address(RVA = "0x2BC504", Offset = "0x2BC504", VA = "0x2BC504", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004AC")]
		public override bool IsString
		{
			[Token(Token = "0x600243F")]
			[Address(RVA = "0x2BC50C", Offset = "0x2BC50C", VA = "0x2BC50C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AD")]
		public override string Value
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x2BC530", Offset = "0x2BC530", VA = "0x2BC530", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x2BC538", Offset = "0x2BC538", VA = "0x2BC538", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x2BC478", Offset = "0x2BC478", VA = "0x2BC478")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x2BC514", Offset = "0x2BC514", VA = "0x2BC514", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x2BC540", Offset = "0x2BC540", VA = "0x2BC540", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x2BC638", Offset = "0x2BC638", VA = "0x2BC638", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x2BC7D4", Offset = "0x2BC7D4", VA = "0x2BC7D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200052F")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private double m_Data;

		[Token(Token = "0x170004AE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002448")]
			[Address(RVA = "0x2BA9E0", Offset = "0x2BA9E0", VA = "0x2BA9E0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004AF")]
		public override bool IsNumber
		{
			[Token(Token = "0x6002449")]
			[Address(RVA = "0x2BA9E8", Offset = "0x2BA9E8", VA = "0x2BA9E8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B0")]
		public override string Value
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0x2BAA0C", Offset = "0x2BAA0C", VA = "0x2BAA0C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244C")]
			[Address(RVA = "0x2BAA18", Offset = "0x2BAA18", VA = "0x2BAA18", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170004B1")]
		public override double AsDouble
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x2BAA5C", Offset = "0x2BAA5C", VA = "0x2BAA5C", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x2BAA68", Offset = "0x2BAA68", VA = "0x2BAA68", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x2BA8A4", Offset = "0x2BA8A4", VA = "0x2BA8A4")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x2BA940", Offset = "0x2BA940", VA = "0x2BA940")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x2BA9F0", Offset = "0x2BA9F0", VA = "0x2BA9F0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x2BAA78", Offset = "0x2BAA78", VA = "0x2BAA78", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x2BAAC0", Offset = "0x2BAAC0", VA = "0x2BAAC0")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x2BAC1C", Offset = "0x2BAC1C", VA = "0x2BAC1C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x2BADB0", Offset = "0x2BADB0", VA = "0x2BADB0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000530")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_Data;

		[Token(Token = "0x170004B2")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0x2FF060", Offset = "0x2FF060", VA = "0x2FF060", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004B3")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6002456")]
			[Address(RVA = "0x2FF068", Offset = "0x2FF068", VA = "0x2FF068", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B4")]
		public override string Value
		{
			[Token(Token = "0x6002458")]
			[Address(RVA = "0x2FF08C", Offset = "0x2FF08C", VA = "0x2FF08C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x2FF098", Offset = "0x2FF098", VA = "0x2FF098", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public override bool AsBool
		{
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x2FF140", Offset = "0x2FF140", VA = "0x2FF140", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600245B")]
			[Address(RVA = "0x2FF148", Offset = "0x2FF148", VA = "0x2FF148", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x2FEF34", Offset = "0x2FEF34", VA = "0x2FEF34")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x2FEFC0", Offset = "0x2FEFC0", VA = "0x2FEFC0")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x2FF070", Offset = "0x2FF070", VA = "0x2FF070", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x2FF150", Offset = "0x2FF150", VA = "0x2FF150", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x2FF1E4", Offset = "0x2FF1E4", VA = "0x2FF1E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x2FF278", Offset = "0x2FF278", VA = "0x2FF278", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000531")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool reuseSameInstance;

		[Token(Token = "0x170004B6")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002461")]
			[Address(RVA = "0x2BA664", Offset = "0x2BA664", VA = "0x2BA664", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004B7")]
		public override bool IsNull
		{
			[Token(Token = "0x6002462")]
			[Address(RVA = "0x2BA66C", Offset = "0x2BA66C", VA = "0x2BA66C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public override string Value
		{
			[Token(Token = "0x6002464")]
			[Address(RVA = "0x2BA690", Offset = "0x2BA690", VA = "0x2BA690", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002465")]
			[Address(RVA = "0x2BA6EC", Offset = "0x2BA6EC", VA = "0x2BA6EC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170004B9")]
		public override bool AsBool
		{
			[Token(Token = "0x6002466")]
			[Address(RVA = "0x2BA6F0", Offset = "0x2BA6F0", VA = "0x2BA6F0", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002467")]
			[Address(RVA = "0x2BA6F8", Offset = "0x2BA6F8", VA = "0x2BA6F8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x2BA504", Offset = "0x2BA504", VA = "0x2BA504")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x2BA588", Offset = "0x2BA588", VA = "0x2BA588")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x2BA674", Offset = "0x2BA674", VA = "0x2BA674", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x2BA6FC", Offset = "0x2BA6FC", VA = "0x2BA6FC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x2BA7A4", Offset = "0x2BA7A4", VA = "0x2BA7A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x2BA7AC", Offset = "0x2BA7AC", VA = "0x2BA7AC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x173940", Offset = "0x173940")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private JSONNode m_Node;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string m_Key;

		[Token(Token = "0x170004BA")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0x2FF318", Offset = "0x2FF318", VA = "0x2FF318", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004BB")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x2FF3C0", Offset = "0x2FF3C0", VA = "0x2FF3C0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x2FF430", Offset = "0x2FF430", VA = "0x2FF430", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0x2FF4D0", Offset = "0x2FF4D0", VA = "0x2FF4D0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002474")]
			[Address(RVA = "0x2FF548", Offset = "0x2FF548", VA = "0x2FF548", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170004BD")]
		public override int AsInt
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x2FF7A4", Offset = "0x2FF7A4", VA = "0x2FF7A4", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x2FF838", Offset = "0x2FF838", VA = "0x2FF838", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170004BE")]
		public override float AsFloat
		{
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x2FF8D0", Offset = "0x2FF8D0", VA = "0x2FF8D0", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x2FF964", Offset = "0x2FF964", VA = "0x2FF964", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170004BF")]
		public override double AsDouble
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0x2FFA00", Offset = "0x2FFA00", VA = "0x2FFA00", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002480")]
			[Address(RVA = "0x2FFAA0", Offset = "0x2FFAA0", VA = "0x2FFAA0", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		public override bool AsBool
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0x2FFB38", Offset = "0x2FFB38", VA = "0x2FFB38", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002482")]
			[Address(RVA = "0x2FFBB4", Offset = "0x2FFBB4", VA = "0x2FFBB4", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170004C1")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002483")]
			[Address(RVA = "0x2FFC30", Offset = "0x2FFC30", VA = "0x2FFC30", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0x2FFCA8", Offset = "0x2FFCA8", VA = "0x2FFCA8", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x2FE0E8", Offset = "0x2FE0E8", VA = "0x2FE0E8")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x2FF284", Offset = "0x2FF284", VA = "0x2FF284")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x2FF320", Offset = "0x2FF320", VA = "0x2FF320", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x2FF33C", Offset = "0x2FF33C", VA = "0x2FF33C")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x2FF5F4", Offset = "0x2FF5F4", VA = "0x2FF5F4", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x2FF694", Offset = "0x2FF694", VA = "0x2FF694", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x2FF740", Offset = "0x2FF740", VA = "0x2FF740")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x2FF760", Offset = "0x2FF760", VA = "0x2FF760")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x2FF77C", Offset = "0x2FF77C", VA = "0x2FF77C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x2FF79C", Offset = "0x2FF79C", VA = "0x2FF79C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x2FFD24", Offset = "0x2FFD24", VA = "0x2FFD24", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000533")]
	public static class JSON
	{
		[Token(Token = "0x6002486")]
		[Address(RVA = "0x2FD240", Offset = "0x2FD240", VA = "0x2FD240")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
[Token(Token = "0x2000534")]
public class XboxLiveExample : MonoBehaviour
{
	[Token(Token = "0x400223B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string debugText;

	[Token(Token = "0x6002487")]
	[Address(RVA = "0x73DD10", Offset = "0x73DD10", VA = "0x73DD10")]
	public XboxLiveExample()
	{
	}

	[Token(Token = "0x6002488")]
	[Address(RVA = "0x73DDB0", Offset = "0x73DDB0", VA = "0x73DDB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6002489")]
	[Address(RVA = "0x73DDB4", Offset = "0x73DDB4", VA = "0x73DDB4")]
	private void OnGUI()
	{
	}
}
