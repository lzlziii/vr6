using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using FMOD.Studio;
using FMODUnity;
using FlowCanvas;
using FlowCanvas.Macros;
using FlowCanvas.Nodes;
using FluffyUnderware.Curvy;
using FluffyUnderware.Curvy.Controllers;
using HighlightPlus;
using HighlightPlus2D;
using HitchHiker;
using HitchHiker.Car;
using HitchHiker.UI;
using HitchHiker.VR;
using HurricaneVR.Framework.Core;
using HurricaneVR.Framework.Core.Grabbers;
using HurricaneVR.Framework.Core.UI;
using HurricaneVR.Samples;
using I2.Loc;
using Il2CppDummyDll;
using InControl;
using IngameDebugConsole;
using KunstStoff;
using KunstStoff.Persistence;
using KunstStoff.ServiceLoader;
using KunstStoff.Services;
using KunstStoff.UI;
using KunstStoff.Utility;
using MText;
using MadAboutPandas;
using MadAboutPandas.ScreenFlow;
using MeshCombineStudio;
using Microsoft.CodeAnalysis;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using ParadoxNotion.Design;
using RootMotion.FinalIK;
using RuntimeInspectorNamespace;
using Sirenix.OdinInspector;
using TMPro;
using Tayx.Graphy;
using UnityEngine;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.UI;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using UnityEngine.XR.Management;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB177B0", Offset = "0xB177B0")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x112CFEC", Offset = "0x112CFEC", VA = "0x112CFEC")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB177E8", Offset = "0xB177E8")]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xEAE608", Offset = "0xEAE608", VA = "0xEAE608")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class ApplyOnlyGameObject : MonoBehaviour
{
	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1032764", Offset = "0x1032764", VA = "0x1032764")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x103278C", Offset = "0x103278C", VA = "0x103278C")]
	public ApplyOnlyGameObject()
	{
	}
}
[Token(Token = "0x2000005")]
public class Boot : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17820", Offset = "0xB17820")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000A")]
			[Address(RVA = "0x275D00C", Offset = "0x275D00C", VA = "0x275D00C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000C")]
			[Address(RVA = "0x275D054", Offset = "0x275D054", VA = "0x275D054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0x275CE90", Offset = "0x275CE90", VA = "0x275CE90")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0x275CEBC", Offset = "0x275CEBC", VA = "0x275CEBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x275CEC0", Offset = "0x275CEC0", VA = "0x275CEC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x275D014", Offset = "0x275D014", VA = "0x275D014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x103D06C", Offset = "0x103D06C", VA = "0x103D06C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D11C", Offset = "0xB2D11C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x103D0C8", Offset = "0x103D0C8", VA = "0x103D0C8")]
	public Boot()
	{
	}
}
[Token(Token = "0x2000007")]
public class ButtonSetColors : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button button;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normal;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color hover;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color clicked;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool log;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isHovering;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool isPressing;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xE256A0", Offset = "0xE256A0", VA = "0xE256A0", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xE257C4", Offset = "0xE257C4", VA = "0xE257C4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE2586C", Offset = "0xE2586C", VA = "0xE2586C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE25910", Offset = "0xE25910", VA = "0xE25910", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xE25748", Offset = "0xE25748", VA = "0xE25748")]
	private void SetColorFromState()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xE259B4", Offset = "0xE259B4", VA = "0xE259B4")]
	public ButtonSetColors()
	{
	}
}
[Token(Token = "0x2000008")]
public class CloudParticleLowQualityHotfix : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ParticleSystem> psysList;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxParticlesOverride;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float startSizeOverride;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SettingsData data;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xE3D124", Offset = "0xE3D124", VA = "0xE3D124")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE3D360", Offset = "0xE3D360", VA = "0xE3D360")]
	public CloudParticleLowQualityHotfix()
	{
	}
}
[Token(Token = "0x2000009")]
public static class ConsoleProDebug
{
	[Token(Token = "0x6000015")]
	[Address(RVA = "0x158BA6C", Offset = "0x158BA6C", VA = "0x158BA6C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x158BA70", Offset = "0x158BA70", VA = "0x158BA70")]
	public static void LogToFilter(string inLog, string inFilterName, [Optional] UnityEngine.Object inContext)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x158BB30", Offset = "0x158BB30", VA = "0x158BB30")]
	public static void LogAsType(string inLog, string inTypeName, [Optional] UnityEngine.Object inContext)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x158BBF0", Offset = "0x158BBF0", VA = "0x158BBF0")]
	public static void Watch(string inName, string inValue)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x158BE40", Offset = "0x158BE40", VA = "0x158BE40")]
	public static void Search(string inText)
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x200000B")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000029")]
		MOUSE = 0,
		[Token(Token = "0x400002A")]
		GAZE = 1,
		[Token(Token = "0x400002B")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x400002C")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x400002D")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x400002E")]
		OCULUSVR = 5,
		[Token(Token = "0x400002F")]
		GOOGLEVR = 7,
		[Token(Token = "0x4000030")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4000031")]
		UNITY_XR = 9
	}

	[Token(Token = "0x200000C")]
	public enum Hand
	{
		[Token(Token = "0x4000033")]
		Both,
		[Token(Token = "0x4000034")]
		Right,
		[Token(Token = "0x4000035")]
		Left
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB1D1D0", Offset = "0xB1D1D0")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x17000003")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x1591010", Offset = "0x1591010", VA = "0x1591010")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x15925F0", Offset = "0x15925F0", VA = "0x15925F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x1592550", Offset = "0x1592550", VA = "0x1592550")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x159265C", Offset = "0x159265C", VA = "0x159265C")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x15926F4", Offset = "0x15926F4", VA = "0x15926F4")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x15926FC", Offset = "0x15926FC", VA = "0x15926FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public Hand UsedHand
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x1592704", Offset = "0x1592704", VA = "0x1592704")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x159270C", Offset = "0x159270C", VA = "0x159270C")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x1591128", Offset = "0x1591128", VA = "0x1591128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x1591274", Offset = "0x1591274", VA = "0x1591274")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000009")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x1592784", Offset = "0x1592784", VA = "0x1592784")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000A")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x1592714", Offset = "0x1592714", VA = "0x1592714")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x15911FC", Offset = "0x15911FC", VA = "0x15911FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1592800", Offset = "0x1592800", VA = "0x1592800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public Camera EventCamera
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x1592808", Offset = "0x1592808", VA = "0x1592808")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x1591F00", Offset = "0x1591F00", VA = "0x1591F00")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x1592A78", Offset = "0x1592A78", VA = "0x1592A78")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x1592AF8", Offset = "0x1592AF8", VA = "0x1592AF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x1592B90", Offset = "0x1592B90", VA = "0x1592B90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x1592BF8", Offset = "0x1592BF8", VA = "0x1592BF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB35BD8", Offset = "0xB35BD8")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x1592C68", Offset = "0x1592C68", VA = "0x1592C68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x1592CD0", Offset = "0x1592CD0", VA = "0x1592CD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x1592D40", Offset = "0x1592D40", VA = "0x1592D40")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x1592D4C", Offset = "0x1592D4C", VA = "0x1592D4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x1592D60", Offset = "0x1592D60", VA = "0x1592D60")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000012")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x1592D70", Offset = "0x1592D70", VA = "0x1592D70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x1592D78", Offset = "0x1592D78", VA = "0x1592D78")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x1592D80", Offset = "0x1592D80", VA = "0x1592D80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x1592D88", Offset = "0x1592D88", VA = "0x1592D88")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public float GazeClickTimer
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x1592D94", Offset = "0x1592D94", VA = "0x1592D94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x1592D9C", Offset = "0x1592D9C", VA = "0x1592D9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x1592DC8", Offset = "0x1592DC8", VA = "0x1592DC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x1592DD0", Offset = "0x1592DD0", VA = "0x1592DD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x1592DFC", Offset = "0x1592DFC", VA = "0x1592DFC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000017")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x1592E04", Offset = "0x1592E04", VA = "0x1592E04")]
		get
		{
			return null;
		}
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x1592E0C", Offset = "0x1592E0C", VA = "0x1592E0C")]
		set
		{
		}
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1591D7C", Offset = "0x1591D7C", VA = "0x1591D7C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1591FBC", Offset = "0x1591FBC", VA = "0x1591FBC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1591FF8", Offset = "0x1591FF8", VA = "0x1591FF8", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1592230", Offset = "0x1592230", VA = "0x1592230", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x15923C4", Offset = "0x15923C4", VA = "0x15923C4", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x159242C", Offset = "0x159242C", VA = "0x159242C", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1592434", Offset = "0x1592434", VA = "0x1592434", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x15925B8", Offset = "0x15925B8", VA = "0x15925B8")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x15925E4", Offset = "0x15925E4", VA = "0x15925E4", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x15925E8", Offset = "0x15925E8", VA = "0x15925E8", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x15923C0", Offset = "0x15923C0", VA = "0x15923C0")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x15925EC", Offset = "0x15925EC", VA = "0x15925EC", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x6000026")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1592810", Offset = "0x1592810", VA = "0x1592810")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1592E14", Offset = "0x1592E14", VA = "0x1592E14")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17840", Offset = "0xB17840")]
public class DisableOnDevice : MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D21C", Offset = "0xB1D21C")]
	public List<GameObject> gameObjects;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x11266F4", Offset = "0x11266F4", VA = "0x11266F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1126750", Offset = "0x1126750", VA = "0x1126750")]
	public DisableOnDevice()
	{
	}
}
[Token(Token = "0x200000E")]
public class EnforceDisabledComponents : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB1D254", Offset = "0xB1D254")]
	public string reasonForDisabling;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MonoBehaviour> behaviours;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool stopDisabling;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x112DA08", Offset = "0x112DA08", VA = "0x112DA08")]
	public void StopDisabling()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x112DA14", Offset = "0x112DA14", VA = "0x112DA14")]
	private void DisableBehaviours()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x112DB8C", Offset = "0x112DB8C", VA = "0x112DB8C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x112DB90", Offset = "0x112DB90", VA = "0x112DB90", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x112DB94", Offset = "0x112DB94", VA = "0x112DB94")]
	public EnforceDisabledComponents()
	{
	}
}
[Token(Token = "0x200000F")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class GuidComponent : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Guid guid;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private byte[] serializedGuid;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xFD62F0", Offset = "0xFD62F0", VA = "0xFD62F0")]
	public bool IsGuidAssigned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xFD6370", Offset = "0xFD6370", VA = "0xFD6370")]
	private void CreateGuid()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xFD65D4", Offset = "0xFD65D4", VA = "0xFD65D4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xFD6698", Offset = "0xFD6698", VA = "0xFD6698", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xFD66E8", Offset = "0xFD66E8", VA = "0xFD66E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xFD66EC", Offset = "0xFD66EC", VA = "0xFD66EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xFD66F0", Offset = "0xFD66F0", VA = "0xFD66F0")]
	public Guid GetGuid()
	{
		return default(Guid);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xFD67B0", Offset = "0xFD67B0", VA = "0xFD67B0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xFD685C", Offset = "0xFD685C", VA = "0xFD685C")]
	public GuidComponent()
	{
	}
}
[Token(Token = "0x2000010")]
public class GuidManager
{
	[Token(Token = "0x2000011")]
	private struct GuidInfo
	{
		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x14000001")]
		public event Action<GameObject> OnAdd
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0xF15AB8", Offset = "0xF15AB8", VA = "0xF15AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1CC", Offset = "0xB2D1CC")]
			add
			{
			}
			[Token(Token = "0x6000068")]
			[Address(RVA = "0xF15B58", Offset = "0xF15B58", VA = "0xF15B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1DC", Offset = "0xB2D1DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event Action OnRemove
		{
			[Token(Token = "0x6000069")]
			[Address(RVA = "0xF15BF8", Offset = "0xF15BF8", VA = "0xF15BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1EC", Offset = "0xB2D1EC")]
			add
			{
			}
			[Token(Token = "0x600006A")]
			[Address(RVA = "0xF15C98", Offset = "0xF15C98", VA = "0xF15C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1FC", Offset = "0xB2D1FC")]
			remove
			{
			}
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0xF15D38", Offset = "0xF15D38", VA = "0xF15D38")]
		public GuidInfo(GuidComponent comp)
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0xF15D94", Offset = "0xF15D94", VA = "0xF15D94")]
		public void HandleAddCallback()
		{
		}

		[Token(Token = "0x600006D")]
		[Address(RVA = "0xF15DF4", Offset = "0xF15DF4", VA = "0xF15DF4")]
		public void HandleRemoveCallback()
		{
		}
	}

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GuidManager Instance;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Guid, GuidInfo> guidToObjectMap;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xFD653C", Offset = "0xFD653C", VA = "0xFD653C")]
	public static bool Add(GuidComponent guidComponent)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xFD67BC", Offset = "0xFD67BC", VA = "0xFD67BC")]
	public static void Remove(Guid guid)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xFD6D9C", Offset = "0xFD6D9C", VA = "0xFD6D9C")]
	public static GameObject ResolveGuid(Guid guid, Action<GameObject> onAddCallback, Action onRemoveCallback)
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xFD6FE8", Offset = "0xFD6FE8", VA = "0xFD6FE8")]
	public static GameObject ResolveGuid(Guid guid, Action onDestroyCallback)
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xFD709C", Offset = "0xFD709C", VA = "0xFD709C")]
	public static GameObject ResolveGuid(Guid guid)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xFD68D0", Offset = "0xFD68D0", VA = "0xFD68D0")]
	private GuidManager()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xFD6954", Offset = "0xFD6954", VA = "0xFD6954")]
	private bool InternalAdd(GuidComponent guidComponent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xFD6CDC", Offset = "0xFD6CDC", VA = "0xFD6CDC")]
	private void InternalRemove(Guid guid)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xFD6E54", Offset = "0xFD6E54", VA = "0xFD6E54")]
	private GameObject ResolveGuidInternal(Guid guid, Action<GameObject> onAddCallback, Action onRemoveCallback)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class GuidReference : ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1788C", Offset = "0xB1788C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__15_0;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__15_1;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GameObject> <>9__16_0;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__16_1;

		[Token(Token = "0x600007B")]
		[Address(RVA = "0xF15E6C", Offset = "0xF15E6C", VA = "0xF15E6C")]
		public <>c()
		{
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0xF15E74", Offset = "0xF15E74", VA = "0xF15E74")]
		internal void <.ctor>b__15_0(GameObject go)
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0xF15E78", Offset = "0xF15E78", VA = "0xF15E78")]
		internal void <.ctor>b__15_1()
		{
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xF15E7C", Offset = "0xF15E7C", VA = "0xF15E7C")]
		internal void <.ctor>b__16_0(GameObject go)
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xF15E80", Offset = "0xF15E80", VA = "0xF15E80")]
		internal void <.ctor>b__16_1()
		{
		}
	}

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject cachedReference;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isCacheSet;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private byte[] serializedGuid;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Guid guid;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action<GameObject> addDelegate;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action removeDelegate;

	[Token(Token = "0x17000018")]
	public GameObject gameObject
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xFD73C4", Offset = "0xFD73C4", VA = "0xFD73C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xFD741C", Offset = "0xFD741C", VA = "0xFD741C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<GameObject> OnGuidAdded
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xFD7144", Offset = "0xFD7144", VA = "0xFD7144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D20C", Offset = "0xB2D20C")]
		add
		{
		}
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xFD71E4", Offset = "0xFD71E4", VA = "0xFD71E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D21C", Offset = "0xB2D21C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnGuidRemoved
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xFD7284", Offset = "0xFD7284", VA = "0xFD7284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D22C", Offset = "0xB2D22C")]
		add
		{
		}
		[Token(Token = "0x6000071")]
		[Address(RVA = "0xFD7324", Offset = "0xFD7324", VA = "0xFD7324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D23C", Offset = "0xB2D23C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xFD7420", Offset = "0xFD7420", VA = "0xFD7420")]
	public GuidReference()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xFD75F0", Offset = "0xFD75F0", VA = "0xFD75F0")]
	public GuidReference(GuidComponent target)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xFD77E0", Offset = "0xFD77E0", VA = "0xFD77E0")]
	private void GuidAdded(GameObject go)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xFD7854", Offset = "0xFD7854", VA = "0xFD7854")]
	private void GuidRemoved()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xFD7894", Offset = "0xFD7894", VA = "0xFD7894", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFD78C8", Offset = "0xFD78C8", VA = "0xFD78C8", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}
}
[Token(Token = "0x2000014")]
public class LoadScenes : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000015")]
	public struct SceneInfo
	{
		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool shouldLoad;
	}

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SceneInfo> scenes;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xEB447C", Offset = "0xEB447C", VA = "0xEB447C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xEB4668", Offset = "0xEB4668", VA = "0xEB4668")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xEB48B8", Offset = "0xEB48B8", VA = "0xEB48B8")]
	public LoadScenes()
	{
	}
}
[Token(Token = "0x2000016")]
public class TestCrossScene : MonoBehaviour
{
	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuidReference crossSceneReference;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer cachedRenderer;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xDB26E4", Offset = "0xDB26E4", VA = "0xDB26E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xDB2778", Offset = "0xDB2778", VA = "0xDB2778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xDB2950", Offset = "0xDB2950", VA = "0xDB2950")]
	private void ClearCache()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xDB295C", Offset = "0xDB295C", VA = "0xDB295C")]
	private void TestPerformance()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xDB29A8", Offset = "0xDB29A8", VA = "0xDB29A8")]
	public TestCrossScene()
	{
	}
}
[Token(Token = "0x2000017")]
[ExecuteInEditMode]
public class ListMeshVertCount : MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool includeInActive;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listVertCount;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xEB3AB0", Offset = "0xEB3AB0", VA = "0xEB3AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xEB3AC4", Offset = "0xEB3AC4", VA = "0xEB3AC4")]
	private void ListVertCount()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xEB3E00", Offset = "0xEB3E00", VA = "0xEB3E00")]
	public ListMeshVertCount()
	{
	}
}
[Token(Token = "0x2000018")]
[ExecuteInEditMode]
public class RaycastTest : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mr;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider collider;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask layerMask;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool createTriangle;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int triangleIndex;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private RaycastHit hitInfo;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool step2;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool drawTriangle;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xEBBEAC", Offset = "0xEBBEAC", VA = "0xEBBEAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xEBBEC0", Offset = "0xEBBEC0", VA = "0xEBBEC0")]
	private void CreateTriangle()
	{
	}

	[Token(Token = "0x600008D")]
	private void Swap<T>(ref T v1, ref T v2)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xEBC0C0", Offset = "0xEBC0C0", VA = "0xEBC0C0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xEBC6C8", Offset = "0xEBC6C8", VA = "0xEBC6C8")]
	public RaycastTest()
	{
	}
}
[Token(Token = "0x2000019")]
public struct TriangleTest
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 a;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 b;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 c;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 dirAb;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 dirAc;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 dirBc;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 h1;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float ab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ac;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float bc;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float area;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float h;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ah;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float hb;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xDB5884", Offset = "0xDB5884", VA = "0xDB5884")]
	public void Calc()
	{
	}

	[Token(Token = "0x6000091")]
	private void Swap<T>(ref T v1, ref T v2)
	{
	}
}
[Token(Token = "0x200001A")]
public class VisualizeMesh : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sphereRadius;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter mf;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh m;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x2741960", Offset = "0x2741960", VA = "0x2741960")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x2741D04", Offset = "0x2741D04", VA = "0x2741D04")]
	public VisualizeMesh()
	{
	}
}
[Token(Token = "0x200001B")]
[ExecuteInEditMode]
public class Voxelize : MonoBehaviour
{
	[Token(Token = "0x200001C")]
	public class VoxelizedMesh
	{
		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[,,] volume;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds bounds;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Int3 voxels;

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x27349E8", Offset = "0x27349E8", VA = "0x27349E8")]
		public VoxelizedMesh()
		{
		}
	}

	[Token(Token = "0x200001D")]
	public struct Int3
	{
		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xDA7FC0", Offset = "0xDA7FC0", VA = "0xDA7FC0")]
		public Int3(int x, int y, int z)
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xDA7FCC", Offset = "0xDA7FCC", VA = "0xDA7FCC")]
		public static Int3 operator +(Int3 a, Int3 b)
		{
			return default(Int3);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xDA7FE8", Offset = "0xDA7FE8", VA = "0xDA7FE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly byte[] bits;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Mesh, VoxelizedMesh> voxelizedLookup;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<float> intersectList;

	[Token(Token = "0x4000071")]
	private const byte insideVoxel = 1;

	[Token(Token = "0x4000072")]
	private const byte outsideVoxel = 2;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int voxelizeLayer;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float voxelResolution;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool voxelize;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x2742B30", Offset = "0x2742B30", VA = "0x2742B30")]
	public void Update()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x2742B70", Offset = "0x2742B70", VA = "0x2742B70")]
	private VoxelizedMesh VoxelizeMesh(Transform t, float voxelResolution, int voxelizeLayer)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x274398C", Offset = "0x274398C", VA = "0x274398C")]
	private static string PrintVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x2743C20", Offset = "0x2743C20", VA = "0x2743C20")]
	private static void MultiCast(Ray ray, List<float> points, float hitOffset, float maxDistance, LayerMask voxelizeLayerMask)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x2743D94", Offset = "0x2743D94", VA = "0x2743D94")]
	private static void Report(VoxelizedMesh vm, float voxelResolution)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x2743F10", Offset = "0x2743F10", VA = "0x2743F10")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x2743F60", Offset = "0x2743F60", VA = "0x2743F60")]
	public void DrawVolume(Transform t, float voxelResolution)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x274440C", Offset = "0x274440C", VA = "0x274440C")]
	public Voxelize()
	{
	}
}
[Token(Token = "0x200001E")]
[ExecuteInEditMode]
public class EnableChildrenMeshRenderers : MonoBehaviour
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool execute;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x112CFF4", Offset = "0x112CFF4", VA = "0x112CFF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x112D008", Offset = "0x112D008", VA = "0x112D008")]
	private void Execute()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x112D0B0", Offset = "0x112D0B0", VA = "0x112D0B0")]
	public EnableChildrenMeshRenderers()
	{
	}
}
[Token(Token = "0x200001F")]
public class ShadowDistance : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shadowDistance;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1110D40", Offset = "0x1110D40", VA = "0x1110D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1110D4C", Offset = "0x1110D4C", VA = "0x1110D4C")]
	public ShadowDistance()
	{
	}
}
[Token(Token = "0x2000020")]
public class MCS_RemoveOverlappingTris : MCS_RemoveTris
{
	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x157393C", Offset = "0x157393C", VA = "0x157393C")]
	public MCS_RemoveOverlappingTris()
	{
	}
}
[Token(Token = "0x2000021")]
public class MCS_RemoveTrisBelowSurface : MCS_RemoveTris
{
	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1574250", Offset = "0x1574250", VA = "0x1574250")]
	public MCS_RemoveTrisBelowSurface()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB178DC", Offset = "0xB178DC")]
public class FastList<T>
{
	[Token(Token = "0x2000023")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17914", Offset = "0xB17914")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700001B")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60000C9")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CB")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C6")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60000C7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CA")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000019")]
	public int Count
	{
		[Token(Token = "0x60000AA")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000AB")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public T Item
	{
		[Token(Token = "0x60000AC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000AD")]
		set
		{
		}
	}

	[Token(Token = "0x60000A8")]
	public FastList()
	{
	}

	[Token(Token = "0x60000A9")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000AE")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000AF")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000B0")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000B1")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000B2")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B3")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000B4")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B5")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000B6")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B7")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000B8")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000B9")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000BB")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D24C", Offset = "0xB2D24C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000BE")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000BF")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000C0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000C1")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000025")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x127B22C", Offset = "0x127B22C", VA = "0x127B22C")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000026")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x127B1F8", Offset = "0x127B1F8", VA = "0x127B1F8")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x15CA52C", Offset = "0x15CA52C", VA = "0x15CA52C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x15CA690", Offset = "0x15CA690", VA = "0x15CA690")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x15CAA2C", Offset = "0x15CAA2C", VA = "0x15CAA2C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x15CABD0", Offset = "0x15CABD0", VA = "0x15CABD0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x15CABFC", Offset = "0x15CABFC", VA = "0x15CABFC")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000028")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x27878EC", Offset = "0x27878EC", VA = "0x27878EC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x2787974", Offset = "0x2787974", VA = "0x2787974")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x2787AE8", Offset = "0x2787AE8", VA = "0x2787AE8")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000029")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700001D")]
	public bool IsVisible
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xFD30B4", Offset = "0xFD30B4", VA = "0xFD30B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xFD30BC", Offset = "0xFD30BC", VA = "0xFD30BC")]
		set
		{
		}
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFD31F8", Offset = "0xFD31F8", VA = "0xFD31F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFD33C0", Offset = "0xFD33C0", VA = "0xFD33C0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFD33C8", Offset = "0xFD33C8", VA = "0xFD33C8")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200002A")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200002B")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xD9F19C", Offset = "0xD9F19C", VA = "0xD9F19C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200002C")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1D2DC", Offset = "0xB1D2DC")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1D2F4", Offset = "0xB1D2F4")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1D30C", Offset = "0xB1D30C")]
		public float LatencyWeight;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1D324", Offset = "0xB1D324")]
		public int MaxSamples;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xD9F1A4", Offset = "0xD9F1A4", VA = "0xD9F1A4")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xD9F2DC", Offset = "0xD9F2DC", VA = "0xD9F2DC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xEC64B8", Offset = "0xEC64B8", VA = "0xEC64B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xEC6610", Offset = "0xEC6610", VA = "0xEC6610")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xEC69F4", Offset = "0xEC69F4", VA = "0xEC69F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xEC6940", Offset = "0xEC6940", VA = "0xEC6940")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xEC6D24", Offset = "0xEC6D24", VA = "0xEC6D24")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xEC700C", Offset = "0xEC700C", VA = "0xEC700C")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200002D")]
public class P2PManager
{
	[Token(Token = "0x200002E")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400009E")]
		Update = 1
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x15CB770", Offset = "0x15CB770", VA = "0x15CB770")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x15CB850", Offset = "0x15CB850", VA = "0x15CB850")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x15CB934", Offset = "0x15CB934", VA = "0x15CB934")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x15CB9B4", Offset = "0x15CB9B4", VA = "0x15CB9B4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x15CBB24", Offset = "0x15CBB24", VA = "0x15CBB24")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x15CBD64", Offset = "0x15CBD64", VA = "0x15CBD64")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x15CC154", Offset = "0x15CC154", VA = "0x15CC154")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x15CC410", Offset = "0x15CC410", VA = "0x15CC410")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x15CBF30", Offset = "0x15CBF30", VA = "0x15CBF30")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x15CC344", Offset = "0x15CC344", VA = "0x15CC344")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x15CC014", Offset = "0x15CC014", VA = "0x15CC014")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x15CC648", Offset = "0x15CC648", VA = "0x15CC648")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x15CBF78", Offset = "0x15CBF78", VA = "0x15CBF78")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x15CC388", Offset = "0x15CC388", VA = "0x15CC388")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x15CC0B8", Offset = "0x15CC0B8", VA = "0x15CC0B8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x15CC6D0", Offset = "0x15CC6D0", VA = "0x15CC6D0")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200002F")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x27836C0", Offset = "0x27836C0", VA = "0x27836C0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x2783704", Offset = "0x2783704", VA = "0x2783704", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x278373C", Offset = "0x278373C", VA = "0x278373C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x2783764", Offset = "0x2783764", VA = "0x2783764")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x2783900", Offset = "0x2783900", VA = "0x2783900")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x2783980", Offset = "0x2783980", VA = "0x2783980")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x27839D4", Offset = "0x27839D4", VA = "0x27839D4")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000030")]
public class RemotePlayer
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xEC70C8", Offset = "0xEC70C8", VA = "0xEC70C8")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000031")]
public class RoomManager
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xECB168", Offset = "0xECB168", VA = "0xECB168")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xECB26C", Offset = "0xECB26C", VA = "0xECB26C")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xECB3EC", Offset = "0xECB3EC", VA = "0xECB3EC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xECB528", Offset = "0xECB528", VA = "0xECB528")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xECB5FC", Offset = "0xECB5FC", VA = "0xECB5FC")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xECB738", Offset = "0xECB738", VA = "0xECB738")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xECB41C", Offset = "0xECB41C", VA = "0xECB41C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xECB7C0", Offset = "0xECB7C0", VA = "0xECB7C0")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xECBF6C", Offset = "0xECBF6C", VA = "0xECBF6C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xECC2C0", Offset = "0xECC2C0", VA = "0xECC2C0")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xECBAF4", Offset = "0xECBAF4", VA = "0xECBAF4")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000032")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000033")]
	public enum State
	{
		[Token(Token = "0x40000D6")]
		INITIALIZING,
		[Token(Token = "0x40000D7")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40000D8")]
		CREATING_A_ROOM,
		[Token(Token = "0x40000D9")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40000DA")]
		JOINING_A_ROOM,
		[Token(Token = "0x40000DB")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40000DC")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40000DD")]
		SHUTDOWN
	}

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700001E")]
	public static State CurrentState
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x111539C", Offset = "0x111539C", VA = "0x111539C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700001F")]
	public static ulong MyID
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x111540C", Offset = "0x111540C", VA = "0x111540C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000020")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x11154EC", Offset = "0x11154EC", VA = "0x11154EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x11134F8", Offset = "0x11134F8", VA = "0x11134F8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x111389C", Offset = "0x111389C", VA = "0x111389C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x111400C", Offset = "0x111400C", VA = "0x111400C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x111432C", Offset = "0x111432C", VA = "0x111432C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1114330", Offset = "0x1114330", VA = "0x1114330")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1114450", Offset = "0x1114450", VA = "0x1114450")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1114BA4", Offset = "0x1114BA4", VA = "0x1114BA4")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1114F98", Offset = "0x1114F98", VA = "0x1114F98")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11151A8", Offset = "0x11151A8", VA = "0x11151A8")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1115330", Offset = "0x1115330", VA = "0x1115330")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1113C98", Offset = "0x1113C98", VA = "0x1113C98")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x11141B4", Offset = "0x11141B4", VA = "0x11141B4")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1113D4C", Offset = "0x1113D4C", VA = "0x1113D4C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1115614", Offset = "0x1115614", VA = "0x1115614")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1115790", Offset = "0x1115790", VA = "0x1115790")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1115874", Offset = "0x1115874", VA = "0x1115874")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x11159D0", Offset = "0x11159D0", VA = "0x11159D0")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1115AB4", Offset = "0x1115AB4", VA = "0x1115AB4")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x111426C", Offset = "0x111426C", VA = "0x111426C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1115FFC", Offset = "0x1115FFC", VA = "0x1115FFC")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1116090", Offset = "0x1116090", VA = "0x1116090")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1115DE8", Offset = "0x1115DE8", VA = "0x1115DE8")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x111629C", Offset = "0x111629C", VA = "0x111629C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1113474", Offset = "0x1113474", VA = "0x1113474")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB2D2FC", Offset = "0xB2D2FC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x11163E0", Offset = "0x11163E0", VA = "0x11163E0")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x11164BC", Offset = "0x11164BC", VA = "0x11164BC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000034")]
public class VoipManager
{
	[Token(Token = "0x6000125")]
	[Address(RVA = "0x274253C", Offset = "0x274253C", VA = "0x274253C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x274261C", Offset = "0x274261C", VA = "0x274261C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x2742700", Offset = "0x2742700", VA = "0x2742700")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x2742780", Offset = "0x2742780", VA = "0x2742780")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x27428F0", Offset = "0x27428F0", VA = "0x27428F0")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000035")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xFD2D70", Offset = "0xFD2D70", VA = "0xFD2D70")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xFD2DF8", Offset = "0xFD2DF8", VA = "0xFD2DF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xFD2F6C", Offset = "0xFD2F6C", VA = "0xFD2F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xFD2FD0", Offset = "0xFD2FD0", VA = "0xFD2FD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xFD2E34", Offset = "0xFD2E34", VA = "0xFD2E34")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xFD3094", Offset = "0xFD3094", VA = "0xFD3094")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xFD30AC", Offset = "0xFD30AC", VA = "0xFD30AC")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class AvatarLayer
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x103B184", Offset = "0x103B184", VA = "0x103B184")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x15BE754", Offset = "0x15BE754", VA = "0x15BE754")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xD9D494", Offset = "0xD9D494", VA = "0xD9D494")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200003A")]
	public enum HandType
	{
		[Token(Token = "0x400013F")]
		Right,
		[Token(Token = "0x4000140")]
		Left,
		[Token(Token = "0x4000141")]
		Max
	}

	[Token(Token = "0x200003B")]
	public enum HandJoint
	{
		[Token(Token = "0x4000143")]
		HandBase,
		[Token(Token = "0x4000144")]
		IndexBase,
		[Token(Token = "0x4000145")]
		IndexTip,
		[Token(Token = "0x4000146")]
		ThumbBase,
		[Token(Token = "0x4000147")]
		ThumbTip,
		[Token(Token = "0x4000148")]
		Max
	}

	[Token(Token = "0x200003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17924", Offset = "0xB17924")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016B")]
			[Address(RVA = "0xD9D444", Offset = "0xD9D444", VA = "0xD9D444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016D")]
			[Address(RVA = "0xD9D48C", Offset = "0xD9D48C", VA = "0xD9D48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0xD9D268", Offset = "0xD9D268", VA = "0xD9D268")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xD9D294", Offset = "0xD9D294", VA = "0xD9D294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xD9D298", Offset = "0xD9D298", VA = "0xD9D298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xD9D44C", Offset = "0xD9D44C", VA = "0xD9D44C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D33C", Offset = "0xB1D33C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D374", Offset = "0xB1D374")]
	public bool EnableBody;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D3AC", Offset = "0xB1D3AC")]
	public bool RecordPackets;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D3E4", Offset = "0xB1D3E4")]
	public bool StartWithControllers;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D41C", Offset = "0xB1D41C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D41C", Offset = "0xB1D41C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D48C", Offset = "0xB1D48C")]
	private bool CombineMeshes;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D4C4", Offset = "0xB1D4C4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D4FC", Offset = "0xB1D4FC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1D534", Offset = "0xB1D534")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D56C", Offset = "0xB1D56C")]
	public bool EnableLaughter;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400011F")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000121")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000122")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000123")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000124")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000125")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x15B7E10", Offset = "0x15B7E10", VA = "0x15B7E10")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x15B82B0", Offset = "0x15B82B0", VA = "0x15B82B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x15B8344", Offset = "0x15B8344", VA = "0x15B8344")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x15B83AC", Offset = "0x15B83AC", VA = "0x15B83AC")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x15B84DC", Offset = "0x15B84DC", VA = "0x15B84DC")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x15B8744", Offset = "0x15B8744", VA = "0x15B8744")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x15B8978", Offset = "0x15B8978", VA = "0x15B8978")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x15B8FAC", Offset = "0x15B8FAC", VA = "0x15B8FAC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x15B9088", Offset = "0x15B9088", VA = "0x15B9088")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x15B9100", Offset = "0x15B9100", VA = "0x15B9100")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x15B91E8", Offset = "0x15B91E8", VA = "0x15B91E8")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x15B9274", Offset = "0x15B9274", VA = "0x15B9274")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x15B92FC", Offset = "0x15B92FC", VA = "0x15B92FC")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x15B9314", Offset = "0x15B9314", VA = "0x15B9314")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000141")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x15B97C4", Offset = "0x15B97C4", VA = "0x15B97C4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x15B9B44", Offset = "0x15B9B44", VA = "0x15B9B44")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x15B9D30", Offset = "0x15B9D30", VA = "0x15B9D30")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x15B9F7C", Offset = "0x15B9F7C", VA = "0x15B9F7C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x15BA070", Offset = "0x15BA070", VA = "0x15BA070")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x15BAB84", Offset = "0x15BAB84", VA = "0x15BAB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x15BAF9C", Offset = "0x15BAF9C", VA = "0x15BAF9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x15BBA2C", Offset = "0x15BBA2C", VA = "0x15BBA2C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x15BBA80", Offset = "0x15BBA80", VA = "0x15BBA80")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x15BA318", Offset = "0x15BA318", VA = "0x15BA318")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x15BA3BC", Offset = "0x15BA3BC", VA = "0x15BA3BC")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x15BBAB0", Offset = "0x15BBAB0", VA = "0x15BBAB0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x15BB368", Offset = "0x15BB368", VA = "0x15BB368")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x15BBD20", Offset = "0x15BBD20", VA = "0x15BBD20")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x15BBB14", Offset = "0x15BBB14", VA = "0x15BBB14")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x15BC4AC", Offset = "0x15BC4AC", VA = "0x15BC4AC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x15BC928", Offset = "0x15BC928", VA = "0x15BC928")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x15BCD2C", Offset = "0x15BCD2C", VA = "0x15BCD2C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x15BCE80", Offset = "0x15BCE80", VA = "0x15BCE80")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x15BD064", Offset = "0x15BD064", VA = "0x15BD064")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x15BB5AC", Offset = "0x15BB5AC", VA = "0x15BB5AC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x15BD138", Offset = "0x15BD138", VA = "0x15BD138")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x15BB378", Offset = "0x15BB378", VA = "0x15BB378")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x15BD228", Offset = "0x15BD228", VA = "0x15BD228")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x15BD8DC", Offset = "0x15BD8DC", VA = "0x15BD8DC")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x15BDDC0", Offset = "0x15BDDC0", VA = "0x15BDDC0")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x15BDDE8", Offset = "0x15BDDE8", VA = "0x15BDDE8")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x15BDE10", Offset = "0x15BDE10", VA = "0x15BDE10")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x15BB8B8", Offset = "0x15BB8B8", VA = "0x15BB8B8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x15BD2F8", Offset = "0x15BD2F8", VA = "0x15BD2F8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x15BE240", Offset = "0x15BE240", VA = "0x15BE240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D35C", Offset = "0xB2D35C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x15BE2B8", Offset = "0x15BE2B8", VA = "0x15BE2B8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x15BE100", Offset = "0x15BE100", VA = "0x15BE100")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x15BE37C", Offset = "0x15BE37C", VA = "0x15BE37C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x15BE464", Offset = "0x15BE464", VA = "0x15BE464")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x15BDE4C", Offset = "0x15BDE4C", VA = "0x15BDE4C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x15BE54C", Offset = "0x15BE54C", VA = "0x15BE54C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200003D")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x15BE768", Offset = "0x15BE768", VA = "0x15BE768")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x15BE838", Offset = "0x15BE838", VA = "0x15BE838")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x15BFAF0", Offset = "0x15BFAF0", VA = "0x15BFAF0")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x15BF6C4", Offset = "0x15BF6C4", VA = "0x15BF6C4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x15BF448", Offset = "0x15BF448", VA = "0x15BF448")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x15BF530", Offset = "0x15BF530", VA = "0x15BF530")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x15BFD80", Offset = "0x15BFD80", VA = "0x15BFD80")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000151")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x15C0348", Offset = "0x15C0348", VA = "0x15C0348")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000040")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x15C05C4", Offset = "0x15C05C4", VA = "0x15C05C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x15C0A14", Offset = "0x15C0A14", VA = "0x15C0A14")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000041")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x15BCBBC", Offset = "0x15BCBBC", VA = "0x15BCBBC")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x15C0B44", Offset = "0x15C0B44", VA = "0x15C0B44")]
	private void Update()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x15C0C74", Offset = "0x15C0C74", VA = "0x15C0C74")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x15C0CD4", Offset = "0x15C0CD4", VA = "0x15C0CD4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x15C06F4", Offset = "0x15C06F4", VA = "0x15C06F4")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x15C1324", Offset = "0x15C1324", VA = "0x15C1324")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x15C1384", Offset = "0x15C1384", VA = "0x15C1384")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x15C1B38", Offset = "0x15C1B38", VA = "0x15C1B38")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x15C0A74", Offset = "0x15C0A74", VA = "0x15C0A74")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000043")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000044")]
	public enum PacketMode
	{
		[Token(Token = "0x4000165")]
		SDK,
		[Token(Token = "0x4000166")]
		Unity
	}

	[Token(Token = "0x2000045")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xD9D514", Offset = "0xD9D514", VA = "0xD9D514")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000046")]
	public struct PoseFrame
	{
		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xD9D5F0", Offset = "0xD9D5F0", VA = "0xD9D5F0")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x15C3468", Offset = "0x15C3468", VA = "0x15C3468")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000183")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x15C3478", Offset = "0x15C3478", VA = "0x15C3478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x15BA460", Offset = "0x15BA460", VA = "0x15BA460")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x15C3500", Offset = "0x15C3500", VA = "0x15C3500")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x15C3508", Offset = "0x15C3508", VA = "0x15C3508")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000047")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x15C3518", Offset = "0x15C3518", VA = "0x15C3518")]
	private void Update()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x15C3688", Offset = "0x15C3688", VA = "0x15C3688")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000048")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x15C36F0", Offset = "0x15C36F0", VA = "0x15C36F0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x15C3854", Offset = "0x15C3854", VA = "0x15C3854")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x15C3BF0", Offset = "0x15C3BF0", VA = "0x15C3BF0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x15C3E14", Offset = "0x15C3E14", VA = "0x15C3E14", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x15C3E40", Offset = "0x15C3E40", VA = "0x15C3E40")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000049")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200004A")]
	public enum TextureType
	{
		[Token(Token = "0x400019C")]
		DiffuseTextures,
		[Token(Token = "0x400019D")]
		NormalMaps,
		[Token(Token = "0x400019E")]
		RoughnessMaps,
		[Token(Token = "0x400019F")]
		Count
	}

	[Token(Token = "0x200004B")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200004C")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200004D")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200004E")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xD9E034", Offset = "0xD9E034", VA = "0xD9E034")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17934", Offset = "0xB17934")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A4")]
			[Address(RVA = "0xD9DFE4", Offset = "0xD9DFE4", VA = "0xD9DFE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A6")]
			[Address(RVA = "0xD9E02C", Offset = "0xD9E02C", VA = "0xD9E02C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xD9D8F4", Offset = "0xD9D8F4", VA = "0xD9D8F4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xD9D920", Offset = "0xD9D920", VA = "0xD9D920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xD9D924", Offset = "0xD9D924", VA = "0xD9D924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xD9DFEC", Offset = "0xD9DFEC", VA = "0xD9DFEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000197")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000198")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000199")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400019A")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x15C3E8C", Offset = "0x15C3E8C", VA = "0x15C3E8C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x15C406C", Offset = "0x15C406C", VA = "0x15C406C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x15C40AC", Offset = "0x15C40AC", VA = "0x15C40AC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x15C4840", Offset = "0x15C4840", VA = "0x15C4840")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x15C4B28", Offset = "0x15C4B28", VA = "0x15C4B28")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x15C4148", Offset = "0x15C4148", VA = "0x15C4148")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x15C4C14", Offset = "0x15C4C14", VA = "0x15C4C14")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x15C459C", Offset = "0x15C459C", VA = "0x15C459C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x15C4EA4", Offset = "0x15C4EA4", VA = "0x15C4EA4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x15C5148", Offset = "0x15C5148", VA = "0x15C5148")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x15C5270", Offset = "0x15C5270", VA = "0x15C5270")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x15C52A8", Offset = "0x15C52A8", VA = "0x15C52A8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x15C47AC", Offset = "0x15C47AC", VA = "0x15C47AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D40C", Offset = "0xB2D40C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x15C6210", Offset = "0x15C6210", VA = "0x15C6210")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000050")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000025")]
	public float Duration
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x15BC1A4", Offset = "0x15BC1A4", VA = "0x15BC1A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x15BC2F0", Offset = "0x15BC2F0", VA = "0x15BC2F0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x15BC380", Offset = "0x15BC380", VA = "0x15BC380")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x15BBFD8", Offset = "0x15BBFD8", VA = "0x15BBFD8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x15C684C", Offset = "0x15C684C", VA = "0x15C684C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x15BC218", Offset = "0x15BC218", VA = "0x15BC218")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x15C69B8", Offset = "0x15C69B8", VA = "0x15C69B8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x15C6BE8", Offset = "0x15C6BE8", VA = "0x15C6BE8")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x15C6EC4", Offset = "0x15C6EC4", VA = "0x15C6EC4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000051")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x103BE34", Offset = "0x103BE34", VA = "0x103BE34")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x103BF48", Offset = "0x103BF48", VA = "0x103BF48")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x103C0F4", Offset = "0x103C0F4", VA = "0x103C0F4")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x103BFB8", Offset = "0x103BFB8", VA = "0x103BFB8")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x103C04C", Offset = "0x103C04C", VA = "0x103C04C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000052")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x103BA34", Offset = "0x103BA34", VA = "0x103BA34")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x103BDD8", Offset = "0x103BDD8", VA = "0x103BDD8")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x103BBD4", Offset = "0x103BBD4", VA = "0x103BBD4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x103BC4C", Offset = "0x103BC4C", VA = "0x103BC4C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x103BCE8", Offset = "0x103BCE8", VA = "0x103BCE8")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000053")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40001C1")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40001C2")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x15C70EC", Offset = "0x15C70EC", VA = "0x15C70EC")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x15C7174", Offset = "0x15C7174", VA = "0x15C7174", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x15C7190", Offset = "0x15C7190", VA = "0x15C7190")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x15C7334", Offset = "0x15C7334", VA = "0x15C7334")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x15C7520", Offset = "0x15C7520", VA = "0x15C7520")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000054")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x15C75C4", Offset = "0x15C75C4", VA = "0x15C75C4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x15C76A8", Offset = "0x15C76A8", VA = "0x15C76A8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x15C789C", Offset = "0x15C789C", VA = "0x15C789C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x15C7C54", Offset = "0x15C7C54", VA = "0x15C7C54")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x15C7D60", Offset = "0x15C7D60", VA = "0x15C7D60")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000055")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40001CB")]
	Body = 1,
	[Token(Token = "0x40001CC")]
	Hands = 2,
	[Token(Token = "0x40001CD")]
	Base = 4,
	[Token(Token = "0x40001CE")]
	BodyTilt = 0x10,
	[Token(Token = "0x40001CF")]
	Expressive = 0x20,
	[Token(Token = "0x40001D0")]
	All = -1
}
[Token(Token = "0x2000056")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40001D2")]
	AvatarSpecification,
	[Token(Token = "0x40001D3")]
	AssetLoaded,
	[Token(Token = "0x40001D4")]
	Count
}
[Token(Token = "0x2000057")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000059")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40001DA")]
	Mesh,
	[Token(Token = "0x40001DB")]
	Texture,
	[Token(Token = "0x40001DC")]
	Pose,
	[Token(Token = "0x40001DD")]
	Material,
	[Token(Token = "0x40001DE")]
	CombinedMesh,
	[Token(Token = "0x40001DF")]
	PBSMaterial,
	[Token(Token = "0x40001E0")]
	FailedLoad,
	[Token(Token = "0x40001E1")]
	Count
}
[Token(Token = "0x200005A")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200005F")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000216")]
	RGB24,
	[Token(Token = "0x4000217")]
	DXT1,
	[Token(Token = "0x4000218")]
	DXT5,
	[Token(Token = "0x4000219")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400021A")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400021B")]
	Count
}
[Token(Token = "0x2000060")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000061")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000223")]
	SkinnedMeshRender,
	[Token(Token = "0x4000224")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000225")]
	ProjectorRender,
	[Token(Token = "0x4000226")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000227")]
	Count
}
[Token(Token = "0x2000062")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000229")]
	Unknown,
	[Token(Token = "0x400022A")]
	Default,
	[Token(Token = "0x400022B")]
	Verbose,
	[Token(Token = "0x400022C")]
	Debug,
	[Token(Token = "0x400022D")]
	Info,
	[Token(Token = "0x400022E")]
	Warn,
	[Token(Token = "0x400022F")]
	Error,
	[Token(Token = "0x4000230")]
	Fatal,
	[Token(Token = "0x4000231")]
	Silent
}
[Token(Token = "0x2000063")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000064")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000236")]
	One = 1,
	[Token(Token = "0x4000237")]
	Two = 2,
	[Token(Token = "0x4000238")]
	Three = 4,
	[Token(Token = "0x4000239")]
	Joystick = 8
}
[Token(Token = "0x2000065")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400023B")]
	One = 1,
	[Token(Token = "0x400023C")]
	Two = 2,
	[Token(Token = "0x400023D")]
	Joystick = 4,
	[Token(Token = "0x400023E")]
	ThumbRest = 8,
	[Token(Token = "0x400023F")]
	Index = 0x10,
	[Token(Token = "0x4000240")]
	Pointing = 0x40,
	[Token(Token = "0x4000241")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000066")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000067")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000068")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200006E")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000261")]
	Add,
	[Token(Token = "0x4000262")]
	Multiply,
	[Token(Token = "0x4000263")]
	Count
}
[Token(Token = "0x200006F")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000265")]
	Color,
	[Token(Token = "0x4000266")]
	Texture,
	[Token(Token = "0x4000267")]
	TextureSingleChannel,
	[Token(Token = "0x4000268")]
	Parallax,
	[Token(Token = "0x4000269")]
	Count
}
[Token(Token = "0x2000070")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400026B")]
	None,
	[Token(Token = "0x400026C")]
	Positional,
	[Token(Token = "0x400026D")]
	ViewReflection,
	[Token(Token = "0x400026E")]
	Fresnel,
	[Token(Token = "0x400026F")]
	Pulse,
	[Token(Token = "0x4000270")]
	Count
}
[Token(Token = "0x2000071")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000272")]
	Touch,
	[Token(Token = "0x4000273")]
	Malibu,
	[Token(Token = "0x4000274")]
	Go,
	[Token(Token = "0x4000275")]
	Quest,
	[Token(Token = "0x4000276")]
	Count
}
[Token(Token = "0x2000072")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000278")]
	Lowest = 1,
	[Token(Token = "0x4000279")]
	Medium = 3,
	[Token(Token = "0x400027A")]
	Highest = 5
}
[Token(Token = "0x2000073")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400027C")]
	Unknown = -1,
	[Token(Token = "0x400027D")]
	One,
	[Token(Token = "0x400027E")]
	Two
}
[Token(Token = "0x2000074")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x27468F4", Offset = "0x27468F4", VA = "0x27468F4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x2746924", Offset = "0x2746924", VA = "0x2746924", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x2746B40", Offset = "0x2746B40", VA = "0x2746B40", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000075")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x2746C24", Offset = "0x2746C24", VA = "0x2746C24")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x2746C54", Offset = "0x2746C54", VA = "0x2746C54", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x2746FF0", Offset = "0x2746FF0", VA = "0x2746FF0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000076")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x2745E84", Offset = "0x2745E84", VA = "0x2745E84")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x2745EB4", Offset = "0x2745EB4", VA = "0x2745EB4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x2746144", Offset = "0x2746144", VA = "0x2746144", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000077")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x2747158", Offset = "0x2747158", VA = "0x2747158")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x2747188", Offset = "0x2747188", VA = "0x2747188", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x2747378", Offset = "0x2747378", VA = "0x2747378", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x15BE770", Offset = "0x15BE770", VA = "0x15BE770")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000079")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200007A")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40002B3")]
	FirstPerson = 1,
	[Token(Token = "0x40002B4")]
	ThirdPerson = 2,
	[Token(Token = "0x40002B5")]
	SelfOccluding = 4
}
[Token(Token = "0x200007B")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200007C")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200007D")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200007E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200007F")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40002CB")]
	Default,
	[Token(Token = "0x40002CC")]
	GripSphere,
	[Token(Token = "0x40002CD")]
	GripCube,
	[Token(Token = "0x40002CE")]
	Count
}
[Token(Token = "0x2000080")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40002D0")]
	Body,
	[Token(Token = "0x40002D1")]
	Clothing,
	[Token(Token = "0x40002D2")]
	Eyewear,
	[Token(Token = "0x40002D3")]
	Hair,
	[Token(Token = "0x40002D4")]
	Beard,
	[Token(Token = "0x40002D5")]
	Count
}
[Token(Token = "0x2000081")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000082")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000083")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000084")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000085")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40002DF")]
	AvatarHead,
	[Token(Token = "0x40002E0")]
	AvatarHand,
	[Token(Token = "0x40002E1")]
	Object,
	[Token(Token = "0x40002E2")]
	ObjectStatic,
	[Token(Token = "0x40002E3")]
	Count
}
[Token(Token = "0x2000086")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000087")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000088")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000089")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200008A")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40002EF")]
	Point,
	[Token(Token = "0x40002F0")]
	Direction,
	[Token(Token = "0x40002F1")]
	Spot,
	[Token(Token = "0x40002F2")]
	Count
}
[Token(Token = "0x200008B")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200008C")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200008D")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200008E")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200008F")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000308")]
	None = 0u,
	[Token(Token = "0x4000309")]
	GazeTarget = 1u,
	[Token(Token = "0x400030A")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000090")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000091")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000092")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000093")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000094")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000095")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000096")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xD9E03C", Offset = "0xD9E03C", VA = "0xD9E03C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400031F")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000027")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x15BA6C8", Offset = "0x15BA6C8", VA = "0x15BA6C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x15C7D70", Offset = "0x15C7D70", VA = "0x15C7D70")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x15C80C0", Offset = "0x15C80C0", VA = "0x15C80C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x15C8130", Offset = "0x15C8130", VA = "0x15C8130")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x15C8B00", Offset = "0x15C8B00", VA = "0x15C8B00")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x15C8B54", Offset = "0x15C8B54", VA = "0x15C8B54")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x15BAF38", Offset = "0x15BAF38", VA = "0x15BAF38")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x15BB548", Offset = "0x15BB548", VA = "0x15BB548")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x15BAEA8", Offset = "0x15BAEA8", VA = "0x15BAEA8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x15C8900", Offset = "0x15C8900", VA = "0x15C8900")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x15BA93C", Offset = "0x15BA93C", VA = "0x15BA93C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x15BAA90", Offset = "0x15BAA90", VA = "0x15BAA90")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x15BA8C0", Offset = "0x15BA8C0", VA = "0x15BA8C0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x15C8BF4", Offset = "0x15C8BF4", VA = "0x15C8BF4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x15C8074", Offset = "0x15C8074", VA = "0x15C8074")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x15C48A0", Offset = "0x15C48A0", VA = "0x15C48A0")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x15C8CD4", Offset = "0x15C8CD4", VA = "0x15C8CD4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000097")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000028")]
	public static string AppID
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x15C8C94", Offset = "0x15C8C94", VA = "0x15C8C94")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x15C8E44", Offset = "0x15C8E44", VA = "0x15C8E44")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x15C8CB4", Offset = "0x15C8CB4", VA = "0x15C8CB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x15C8E74", Offset = "0x15C8E74", VA = "0x15C8E74")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x15C8CEC", Offset = "0x15C8CEC", VA = "0x15C8CEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x15C8EA4", Offset = "0x15C8EA4", VA = "0x15C8EA4")]
		set
		{
		}
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x15C8EF8", Offset = "0x15C8EF8", VA = "0x15C8EF8")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000098")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x15B85B8", Offset = "0x15B85B8", VA = "0x15B85B8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x15C0CDC", Offset = "0x15C0CDC", VA = "0x15C0CDC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x15CA3A4", Offset = "0x15CA3A4", VA = "0x15CA3A4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x15CA50C", Offset = "0x15CA50C", VA = "0x15CA50C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000099")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x15B881C", Offset = "0x15B881C", VA = "0x15B881C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x15C0F18", Offset = "0x15C0F18", VA = "0x15C0F18")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x15CA51C", Offset = "0x15CA51C", VA = "0x15CA51C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200009A")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000336")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000337")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000338")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x15B8B58", Offset = "0x15B8B58", VA = "0x15B8B58")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x15C10E8", Offset = "0x15C10E8", VA = "0x15C10E8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x15C9B28", Offset = "0x15C9B28", VA = "0x15C9B28")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x15C9240", Offset = "0x15C9240", VA = "0x15C9240")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x15C8F64", Offset = "0x15C8F64", VA = "0x15C8F64")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x15C90C8", Offset = "0x15C90C8", VA = "0x15C90C8")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x15CA394", Offset = "0x15CA394", VA = "0x15CA394")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200009B")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200009C")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200009D")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xD9E738", Offset = "0xD9E738", VA = "0xD9E738")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200009E")]
	public struct TextureSet
	{
		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xD9E794", Offset = "0xD9E794", VA = "0xD9E794")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB179B4", Offset = "0xB179B4")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021B")]
			[Address(RVA = "0xD9E6E8", Offset = "0xD9E6E8", VA = "0xD9E6E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021D")]
			[Address(RVA = "0xD9E730", Offset = "0xD9E730", VA = "0xD9E730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xD9E0B8", Offset = "0xD9E0B8", VA = "0xD9E0B8")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xD9E0E4", Offset = "0xD9E0E4", VA = "0xD9E0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xD9E0E8", Offset = "0xD9E0E8", VA = "0xD9E0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xD9E6F0", Offset = "0xD9E6F0", VA = "0xD9E6F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400033C")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400033D")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000340")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000341")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000342")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000343")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000344")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000345")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000346")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x15CAC48", Offset = "0x15CAC48", VA = "0x15CAC48")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x15CB128", Offset = "0x15CB128", VA = "0x15CB128")]
	public void Update()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x15CB328", Offset = "0x15CB328", VA = "0x15CB328")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x15C4CF8", Offset = "0x15C4CF8", VA = "0x15C4CF8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x15CB29C", Offset = "0x15CB29C", VA = "0x15CB29C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x15C4920", Offset = "0x15C4920", VA = "0x15C4920")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x15C4B70", Offset = "0x15C4B70", VA = "0x15C4B70")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x15CB374", Offset = "0x15CB374", VA = "0x15CB374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D55C", Offset = "0xB2D55C")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x15C8BA8", Offset = "0x15C8BA8", VA = "0x15C8BA8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x15CB420", Offset = "0x15CB420", VA = "0x15CB420")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000A0")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x15CB598", Offset = "0x15CB598", VA = "0x15CB598")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x15CB708", Offset = "0x15CB708", VA = "0x15CB708")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000A1")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000220")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x112D690", Offset = "0x112D690", VA = "0x112D690")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000A2")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D5C4", Offset = "0xB1D5C4")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D5FC", Offset = "0xB1D5FC")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D634", Offset = "0xB1D634")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xEB3068", Offset = "0xEB3068", VA = "0xEB3068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xEB306C", Offset = "0xEB306C", VA = "0xEB306C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xEB30EC", Offset = "0xEB30EC", VA = "0xEB30EC")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xEB32F8", Offset = "0xEB32F8", VA = "0xEB32F8")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000A3")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xEB3328", Offset = "0xEB3328", VA = "0xEB3328")]
	private void Start()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xEB3458", Offset = "0xEB3458", VA = "0xEB3458")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xEB37B0", Offset = "0xEB37B0", VA = "0xEB37B0")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xEB3A50", Offset = "0xEB3A50", VA = "0xEB3A50")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xEB3AA0", Offset = "0xEB3AA0", VA = "0xEB3AA0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000A4")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700002D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x2765CE8", Offset = "0x2765CE8", VA = "0x2765CE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x2765FEC", Offset = "0x2765FEC", VA = "0x2765FEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x276614C", Offset = "0x276614C", VA = "0x276614C")]
	private void Update()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x2766060", Offset = "0x2766060", VA = "0x2766060")]
	public void Init()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x2763CE8", Offset = "0x2763CE8", VA = "0x2763CE8")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x27662CC", Offset = "0x27662CC", VA = "0x27662CC")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x2763C84", Offset = "0x2763C84", VA = "0x2763C84")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x2763D64", Offset = "0x2763D64", VA = "0x2763D64")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x27661E0", Offset = "0x27661E0", VA = "0x27661E0")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x2766368", Offset = "0x2766368", VA = "0x2766368")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x27663A4", Offset = "0x27663A4", VA = "0x27663A4")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x27665B8", Offset = "0x27665B8", VA = "0x27665B8")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x27663B4", Offset = "0x27663B4", VA = "0x27663B4")]
	private void Display()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x2766668", Offset = "0x2766668", VA = "0x2766668")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000A5")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x2767158", Offset = "0x2767158", VA = "0x2767158")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000A6")]
public static class OVRTouchpad
{
	[Token(Token = "0x20000A7")]
	public enum TouchEvent
	{
		[Token(Token = "0x400036F")]
		SingleTap,
		[Token(Token = "0x4000370")]
		DoubleTap,
		[Token(Token = "0x4000371")]
		Left,
		[Token(Token = "0x4000372")]
		Right,
		[Token(Token = "0x4000373")]
		Up,
		[Token(Token = "0x4000374")]
		Down
	}

	[Token(Token = "0x20000A8")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x27629C4", Offset = "0x27629C4", VA = "0x27629C4")]
	public static void Create()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x276718C", Offset = "0x276718C", VA = "0x276718C")]
	public static void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x276743C", Offset = "0x276743C", VA = "0x276743C")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x27672AC", Offset = "0x27672AC", VA = "0x27672AC")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x276379C", Offset = "0x276379C", VA = "0x276379C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000A9")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000245")]
	[Address(RVA = "0x276751C", Offset = "0x276751C", VA = "0x276751C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x2767594", Offset = "0x2767594", VA = "0x2767594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x276764C", Offset = "0x276764C", VA = "0x276764C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x27676A4", Offset = "0x27676A4", VA = "0x27676A4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x2767704", Offset = "0x2767704", VA = "0x2767704")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x2767708", Offset = "0x2767708", VA = "0x2767708")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000AA")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20000AB")]
	public enum Result
	{
		[Token(Token = "0x400037B")]
		Success = 0,
		[Token(Token = "0x400037C")]
		Unknown = -2200,
		[Token(Token = "0x400037D")]
		CannotCreateContext = -2201,
		[Token(Token = "0x400037E")]
		InvalidParam = -2202,
		[Token(Token = "0x400037F")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000380")]
		MissingDLL = -2204,
		[Token(Token = "0x4000381")]
		BadVersion = -2205,
		[Token(Token = "0x4000382")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20000AC")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000384")]
		S16_Mono,
		[Token(Token = "0x4000385")]
		S16_Stereo,
		[Token(Token = "0x4000386")]
		F32_Mono,
		[Token(Token = "0x4000387")]
		F32_Stereo
	}

	[Token(Token = "0x20000AD")]
	public enum Viseme
	{
		[Token(Token = "0x4000389")]
		sil,
		[Token(Token = "0x400038A")]
		PP,
		[Token(Token = "0x400038B")]
		FF,
		[Token(Token = "0x400038C")]
		TH,
		[Token(Token = "0x400038D")]
		DD,
		[Token(Token = "0x400038E")]
		kk,
		[Token(Token = "0x400038F")]
		CH,
		[Token(Token = "0x4000390")]
		SS,
		[Token(Token = "0x4000391")]
		nn,
		[Token(Token = "0x4000392")]
		RR,
		[Token(Token = "0x4000393")]
		aa,
		[Token(Token = "0x4000394")]
		E,
		[Token(Token = "0x4000395")]
		ih,
		[Token(Token = "0x4000396")]
		oh,
		[Token(Token = "0x4000397")]
		ou
	}

	[Token(Token = "0x20000AE")]
	public enum Signals
	{
		[Token(Token = "0x4000399")]
		VisemeOn,
		[Token(Token = "0x400039A")]
		VisemeOff,
		[Token(Token = "0x400039B")]
		VisemeAmount,
		[Token(Token = "0x400039C")]
		VisemeSmoothing,
		[Token(Token = "0x400039D")]
		LaughterAmount
	}

	[Token(Token = "0x20000AF")]
	public enum ContextProviders
	{
		[Token(Token = "0x400039F")]
		Original,
		[Token(Token = "0x40003A0")]
		Enhanced,
		[Token(Token = "0x40003A1")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20000B0")]
	public class Frame
	{
		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xD99C64", Offset = "0xD99C64", VA = "0xD99C64")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0xD99CBC", Offset = "0xD99CBC", VA = "0xD99CBC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0xD99D48", Offset = "0xD99D48", VA = "0xD99D48")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000377")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600024B")]
	[Address(RVA = "0x2761F28", Offset = "0x2761F28", VA = "0x2761F28")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600024C")]
	[Address(RVA = "0x2761FB8", Offset = "0x2761FB8", VA = "0x2761FB8")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600024D")]
	[Address(RVA = "0x2762028", Offset = "0x2762028", VA = "0x2762028")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600024E")]
	[Address(RVA = "0x27620BC", Offset = "0x27620BC", VA = "0x27620BC")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600024F")]
	[Address(RVA = "0x2762164", Offset = "0x2762164", VA = "0x2762164")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000250")]
	[Address(RVA = "0x2762230", Offset = "0x2762230", VA = "0x2762230")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000251")]
	[Address(RVA = "0x27622B0", Offset = "0x27622B0", VA = "0x27622B0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000252")]
	[Address(RVA = "0x2762330", Offset = "0x2762330", VA = "0x2762330")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000253")]
	[Address(RVA = "0x27623D8", Offset = "0x27623D8", VA = "0x27623D8")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x27624E0", Offset = "0x27624E0", VA = "0x27624E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x27629C8", Offset = "0x27629C8", VA = "0x27629C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x276286C", Offset = "0x276286C", VA = "0x276286C")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x2762AC8", Offset = "0x2762AC8", VA = "0x2762AC8")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x2762BFC", Offset = "0x2762BFC", VA = "0x2762BFC")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x2762C68", Offset = "0x2762C68", VA = "0x2762C68")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x2762CCC", Offset = "0x2762CCC", VA = "0x2762CCC")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x2762DE8", Offset = "0x2762DE8", VA = "0x2762DE8")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x2762F18", Offset = "0x2762F18", VA = "0x2762F18")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x2762FF0", Offset = "0x2762FF0", VA = "0x2762FF0")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x27630C8", Offset = "0x27630C8", VA = "0x27630C8")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x27631C4", Offset = "0x27631C4", VA = "0x27631C4")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x2763360", Offset = "0x2763360", VA = "0x2763360")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x27634F4", Offset = "0x27634F4", VA = "0x27634F4")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB179C4", Offset = "0xB179C4")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D66C", Offset = "0xB1D66C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D6A4", Offset = "0xB1D6A4")]
	public bool enableTouchInput;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D6DC", Offset = "0xB1D6DC")]
	public bool audioLoopback;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D714", Offset = "0xB1D714")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D74C", Offset = "0xB1D74C")]
	public bool showVisemes;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D784", Offset = "0xB1D784")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D7BC", Offset = "0xB1D7BC")]
	public bool skipAudioSource;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D7F4", Offset = "0xB1D7F4")]
	public float gain;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x276363C", Offset = "0x276363C", VA = "0x276363C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x2763878", Offset = "0x2763878", VA = "0x2763878")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x2763DE0", Offset = "0x2763DE0", VA = "0x2763DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x2764108", Offset = "0x2764108", VA = "0x2764108")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x276416C", Offset = "0x276416C", VA = "0x276416C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x27641D8", Offset = "0x27641D8", VA = "0x27641D8")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x276437C", Offset = "0x276437C", VA = "0x276437C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x2764520", Offset = "0x2764520", VA = "0x2764520")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x2764658", Offset = "0x2764658", VA = "0x2764658")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x2763E24", Offset = "0x2763E24", VA = "0x2763E24")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x2763B9C", Offset = "0x2763B9C", VA = "0x2763B9C")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x2764668", Offset = "0x2764668", VA = "0x2764668")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x2764788", Offset = "0x2764788", VA = "0x2764788")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17A24", Offset = "0xB17A24")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D82C", Offset = "0xB1D82C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D864", Offset = "0xB1D864")]
	public bool enableAcceleration;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700002E")]
	public int Smoothing
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x2764934", Offset = "0x2764934", VA = "0x2764934")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x2764828", Offset = "0x2764828", VA = "0x2764828")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public uint Context
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x276493C", Offset = "0x276493C", VA = "0x276493C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000030")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x2764944", Offset = "0x2764944", VA = "0x2764944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x276494C", Offset = "0x276494C", VA = "0x276494C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x2764B44", Offset = "0x2764B44", VA = "0x2764B44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x2764CA8", Offset = "0x2764CA8", VA = "0x2764CA8")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x2764CB0", Offset = "0x2764CB0", VA = "0x2764CB0")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x2764DC4", Offset = "0x2764DC4", VA = "0x2764DC4")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x2764EA0", Offset = "0x2764EA0", VA = "0x2764EA0")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x27647AC", Offset = "0x27647AC", VA = "0x27647AC")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17A84", Offset = "0xB17A84")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D89C", Offset = "0xB1D89C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x2764F18", Offset = "0x2764F18", VA = "0x2764F18")]
	private void Update()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x27650A8", Offset = "0x27650A8", VA = "0x27650A8")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D8D4", Offset = "0xB1D8D4")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D90C", Offset = "0xB1D90C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D944", Offset = "0xB1D944")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D97C", Offset = "0xB1D97C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D9B4", Offset = "0xB1D9B4")]
	public KeyCode laughterKey;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1D9EC", Offset = "0xB1D9EC")]
	public int laughterBlendTarget;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1DA24", Offset = "0xB1DA24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DA24", Offset = "0xB1DA24")]
	public float laughterThreshold;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DA78", Offset = "0xB1DA78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1DA78", Offset = "0xB1DA78")]
	public float laughterMultiplier;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1DACC", Offset = "0xB1DACC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DACC", Offset = "0xB1DACC")]
	public int smoothAmount;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x27650AC", Offset = "0x27650AC", VA = "0x27650AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x276522C", Offset = "0x276522C", VA = "0x276522C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x2765484", Offset = "0x2765484", VA = "0x2765484")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x2765334", Offset = "0x2765334", VA = "0x2765334")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x27653E8", Offset = "0x27653E8", VA = "0x27653E8")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x2765550", Offset = "0x2765550", VA = "0x2765550")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x2765614", Offset = "0x2765614", VA = "0x2765614")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x276567C", Offset = "0x276567C", VA = "0x276567C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000B5")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xB1DB24", Offset = "0xB1DB24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DB24", Offset = "0xB1DB24")]
	public Texture[] Textures;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1DD50", Offset = "0xB1DD50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DD50", Offset = "0xB1DD50")]
	public int smoothAmount;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x27657AC", Offset = "0x27657AC", VA = "0x27657AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x276593C", Offset = "0x276593C", VA = "0x276593C")]
	private void Update()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x2765AE0", Offset = "0x2765AE0", VA = "0x2765AE0")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x2765C0C", Offset = "0x2765C0C", VA = "0x2765C0C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17AE4", Offset = "0xB17AE4")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20000B7")]
	public enum micActivation
	{
		[Token(Token = "0x40003D6")]
		HoldToSpeak,
		[Token(Token = "0x40003D7")]
		PushToSpeak,
		[Token(Token = "0x40003D8")]
		ConstantSpeak
	}

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DDA8", Offset = "0xB1DDA8")]
	public AudioSource audioSource;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DDE0", Offset = "0xB1DDE0")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DE18", Offset = "0xB1DE18")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1DE50", Offset = "0xB1DE50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DE50", Offset = "0xB1DE50")]
	private float micInputVolume;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DEB8", Offset = "0xB1DEB8")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DF04", Offset = "0xB1DF04")]
	public micActivation micControl;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DF3C", Offset = "0xB1DF3C")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1DF74", Offset = "0xB1DF74")]
	public string selectedDevice;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000031")]
	public float MicFrequency
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x27666E4", Offset = "0x27666E4", VA = "0x27666E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x27666F0", Offset = "0x27666F0", VA = "0x27666F0")]
		set
		{
		}
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x2766740", Offset = "0x2766740", VA = "0x2766740")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x2766810", Offset = "0x2766810", VA = "0x2766810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x276685C", Offset = "0x276685C", VA = "0x276685C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x27669B4", Offset = "0x27669B4", VA = "0x27669B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x2766E00", Offset = "0x2766E00", VA = "0x2766E00")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x2766E14", Offset = "0x2766E14", VA = "0x2766E14")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x2766E2C", Offset = "0x2766E2C", VA = "0x2766E2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x2766E30", Offset = "0x2766E30", VA = "0x2766E30")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x2766EA8", Offset = "0x2766EA8", VA = "0x2766EA8")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x27668F0", Offset = "0x27668F0", VA = "0x27668F0")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x2766C6C", Offset = "0x2766C6C", VA = "0x2766C6C")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x2766B10", Offset = "0x2766B10", VA = "0x2766B10")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x276709C", Offset = "0x276709C", VA = "0x276709C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x27670A4", Offset = "0x27670A4", VA = "0x27670A4")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B8")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x2764FE4", Offset = "0x2764FE4", VA = "0x2764FE4")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x27670D4", Offset = "0x27670D4", VA = "0x27670D4")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000B9")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000BA")]
	public enum PlabackState
	{
		[Token(Token = "0x40003F3")]
		Idle = 1,
		[Token(Token = "0x40003F4")]
		Preparing,
		[Token(Token = "0x40003F5")]
		Buffering,
		[Token(Token = "0x40003F6")]
		Ready,
		[Token(Token = "0x40003F7")]
		Ended
	}

	[Token(Token = "0x20000BB")]
	public enum StereoMode
	{
		[Token(Token = "0x40003F9")]
		Unknown = -1,
		[Token(Token = "0x40003FA")]
		Mono,
		[Token(Token = "0x40003FB")]
		TopBottom,
		[Token(Token = "0x40003FC")]
		LeftRight,
		[Token(Token = "0x40003FD")]
		Mesh
	}

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000032")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x182B96C", Offset = "0x182B96C", VA = "0x182B96C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000033")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x182BC9C", Offset = "0x182BC9C", VA = "0x182BC9C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000034")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x182BF6C", Offset = "0x182BF6C", VA = "0x182BF6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000035")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x182BFDC", Offset = "0x182BFDC", VA = "0x182BFDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x182C0EC", Offset = "0x182C0EC", VA = "0x182C0EC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000037")]
	public static long Duration
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x182C200", Offset = "0x182C200", VA = "0x182C200")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000038")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x182C314", Offset = "0x182C314", VA = "0x182C314")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000039")]
	public static int VideoWidth
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x182C428", Offset = "0x182C428", VA = "0x182C428")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003A")]
	public static int VideoHeight
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x182C53C", Offset = "0x182C53C", VA = "0x182C53C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x182C650", Offset = "0x182C650", VA = "0x182C650")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x182C764", Offset = "0x182C764", VA = "0x182C764")]
		set
		{
		}
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x182C8D8", Offset = "0x182C8D8", VA = "0x182C8D8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x182CB04", Offset = "0x182CB04", VA = "0x182CB04")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x182CC18", Offset = "0x182CC18", VA = "0x182CC18")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x182CD2C", Offset = "0x182CD2C", VA = "0x182CD2C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x182CE40", Offset = "0x182CE40", VA = "0x182CE40")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x182CFBC", Offset = "0x182CFBC", VA = "0x182CFBC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x182D134", Offset = "0x182D134", VA = "0x182D134")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000BC")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000005")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x103DC84", Offset = "0x103DC84", VA = "0x103DC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D60C", Offset = "0xB2D60C")]
		add
		{
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x103DD24", Offset = "0x103DD24", VA = "0x103DD24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D61C", Offset = "0xB2D61C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x103DDC4", Offset = "0x103DDC4", VA = "0x103DDC4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x103DDD8", Offset = "0x103DDD8", VA = "0x103DDD8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000BD")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000BE")]
	public enum ButtonType
	{
		[Token(Token = "0x4000401")]
		Play,
		[Token(Token = "0x4000402")]
		Pause,
		[Token(Token = "0x4000403")]
		FastForward,
		[Token(Token = "0x4000404")]
		Rewind,
		[Token(Token = "0x4000405")]
		SkipForward,
		[Token(Token = "0x4000406")]
		SkipBack,
		[Token(Token = "0x4000407")]
		Stop
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003C")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1583E94", Offset = "0x1583E94", VA = "0x1583E94")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x1583E9C", Offset = "0x1583E9C", VA = "0x1583E9C")]
		set
		{
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1583EC0", Offset = "0x1583EC0", VA = "0x1583EC0", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1585358", Offset = "0x1585358", VA = "0x1585358")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000BF")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	public enum VideoShape
	{
		[Token(Token = "0x400041C")]
		_360,
		[Token(Token = "0x400041D")]
		_180,
		[Token(Token = "0x400041E")]
		Quad
	}

	[Token(Token = "0x20000C1")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000420")]
		Mono,
		[Token(Token = "0x4000421")]
		TopBottom,
		[Token(Token = "0x4000422")]
		LeftRight,
		[Token(Token = "0x4000423")]
		BottomTop
	}

	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17B44", Offset = "0xB17B44")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0xD964BC", Offset = "0xD964BC", VA = "0xD964BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0xD96504", Offset = "0xD96504", VA = "0xD96504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xD962C8", Offset = "0xD962C8", VA = "0xD962C8")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xD962F4", Offset = "0xD962F4", VA = "0xD962F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xD962F8", Offset = "0xD962F8", VA = "0xD962F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xD964C4", Offset = "0xD964C4", VA = "0xD964C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17B54", Offset = "0xB17B54")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xD961D0", Offset = "0xD961D0", VA = "0xD961D0")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xD961D8", Offset = "0xD961D8", VA = "0xD961D8")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1DFCC", Offset = "0xB1DFCC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1DFDC", Offset = "0xB1DFDC")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1DFEC", Offset = "0xB1DFEC")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003D")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x13362D8", Offset = "0x13362D8", VA = "0x13362D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D62C", Offset = "0xB2D62C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x13362E0", Offset = "0x13362E0", VA = "0x13362E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D63C", Offset = "0xB2D63C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public long Duration
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x13362EC", Offset = "0x13362EC", VA = "0x13362EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D64C", Offset = "0xB2D64C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x13362F4", Offset = "0x13362F4", VA = "0x13362F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D65C", Offset = "0xB2D65C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x13362FC", Offset = "0x13362FC", VA = "0x13362FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D66C", Offset = "0xB2D66C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1336304", Offset = "0x1336304", VA = "0x1336304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D67C", Offset = "0xB2D67C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x133630C", Offset = "0x133630C", VA = "0x133630C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x13365B8", Offset = "0x13365B8", VA = "0x13365B8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x133661C", Offset = "0x133661C", VA = "0x133661C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1336954", Offset = "0x1336954", VA = "0x1336954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D68C", Offset = "0xB2D68C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x13369CC", Offset = "0x13369CC", VA = "0x13369CC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1336CB4", Offset = "0x1336CB4", VA = "0x1336CB4")]
	public void Play()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1336D48", Offset = "0x1336D48", VA = "0x1336D48")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1336DD8", Offset = "0x1336DD8", VA = "0x1336DD8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1336EDC", Offset = "0x1336EDC", VA = "0x1336EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x13374A4", Offset = "0x13374A4", VA = "0x13374A4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x133755C", Offset = "0x133755C", VA = "0x133755C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x13375EC", Offset = "0x13375EC", VA = "0x13375EC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x13376D8", Offset = "0x13376D8", VA = "0x13376D8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000C4")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000C5")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000440")]
		Playing,
		[Token(Token = "0x4000441")]
		Paused,
		[Token(Token = "0x4000442")]
		Rewinding,
		[Token(Token = "0x4000443")]
		FastForwarding
	}

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1827B0C", Offset = "0x1827B0C", VA = "0x1827B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1827E18", Offset = "0x1827E18", VA = "0x1827E18")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1827F54", Offset = "0x1827F54", VA = "0x1827F54")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1828074", Offset = "0x1828074", VA = "0x1828074")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1828160", Offset = "0x1828160", VA = "0x1828160")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1828044", Offset = "0x1828044", VA = "0x1828044")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x18281C0", Offset = "0x18281C0", VA = "0x18281C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1827D04", Offset = "0x1827D04", VA = "0x1827D04")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1828524", Offset = "0x1828524", VA = "0x1828524")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000C6")]
public static class VectorUtil
{
	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x273E9F8", Offset = "0x273E9F8", VA = "0x273E9F8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB17B74", Offset = "0xB17B74")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20000C8")]
	public enum RotationAxes
	{
		[Token(Token = "0x400044D")]
		MouseXAndY,
		[Token(Token = "0x400044E")]
		MouseX,
		[Token(Token = "0x400044F")]
		MouseY
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1335138", Offset = "0x1335138", VA = "0x1335138")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1335310", Offset = "0x1335310", VA = "0x1335310")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x13353D8", Offset = "0x13353D8", VA = "0x13353D8")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20000CA")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000455")]
		Uninitialized = -1,
		[Token(Token = "0x4000456")]
		NotEnabled,
		[Token(Token = "0x4000457")]
		Success,
		[Token(Token = "0x4000458")]
		StreamError,
		[Token(Token = "0x4000459")]
		ProcessError,
		[Token(Token = "0x400045A")]
		MaxStatValue
	}

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x182E3F4", Offset = "0x182E3F4", VA = "0x182E3F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x182E688", Offset = "0x182E688", VA = "0x182E688")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x182E8DC", Offset = "0x182E8DC", VA = "0x182E8DC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20000CC")]
	private enum Parameters
	{
		[Token(Token = "0x4000466")]
		P_GAIN,
		[Token(Token = "0x4000467")]
		P_USEINVSQR,
		[Token(Token = "0x4000468")]
		P_NEAR,
		[Token(Token = "0x4000469")]
		P_FAR,
		[Token(Token = "0x400046A")]
		P_RADIUS,
		[Token(Token = "0x400046B")]
		P_DISABLE_RFL,
		[Token(Token = "0x400046C")]
		P_AMBISTAT,
		[Token(Token = "0x400046D")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x400046E")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400046F")]
		P_SENDLEVEL,
		[Token(Token = "0x4000470")]
		P_NUM
	}

	[Token(Token = "0x400045B")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000042")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x182EB20", Offset = "0x182EB20", VA = "0x182EB20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x182EB28", Offset = "0x182EB28", VA = "0x182EB28")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public float Gain
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x182EB34", Offset = "0x182EB34", VA = "0x182EB34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x182EB3C", Offset = "0x182EB3C", VA = "0x182EB3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x182EB6C", Offset = "0x182EB6C", VA = "0x182EB6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x182EB74", Offset = "0x182EB74", VA = "0x182EB74")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public float Near
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x182EB80", Offset = "0x182EB80", VA = "0x182EB80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x182EB88", Offset = "0x182EB88", VA = "0x182EB88")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public float Far
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x182EBBC", Offset = "0x182EBBC", VA = "0x182EBBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x182EBC4", Offset = "0x182EBC4", VA = "0x182EBC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x182EBF8", Offset = "0x182EBF8", VA = "0x182EBF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x182EC00", Offset = "0x182EC00", VA = "0x182EC00")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public float ReverbSend
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x182EC34", Offset = "0x182EC34", VA = "0x182EC34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x182EC3C", Offset = "0x182EC3C", VA = "0x182EC3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool EnableRfl
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x182EC70", Offset = "0x182EC70", VA = "0x182EC70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x182EC78", Offset = "0x182EC78", VA = "0x182EC78")]
		set
		{
		}
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x182E94C", Offset = "0x182E94C", VA = "0x182E94C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB2D74C", Offset = "0xB2D74C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x182EA40", Offset = "0x182EA40", VA = "0x182EA40")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x182EC84", Offset = "0x182EC84", VA = "0x182EC84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x182EDF4", Offset = "0x182EDF4", VA = "0x182EDF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x182EDF8", Offset = "0x182EDF8", VA = "0x182EDF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x182ECEC", Offset = "0x182ECEC", VA = "0x182ECEC")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x182EEBC", Offset = "0x182EEBC", VA = "0x182EEBC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x182F2B4", Offset = "0x182F2B4", VA = "0x182F2B4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x182E9C0", Offset = "0x182E9C0", VA = "0x182E9C0")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x182F3A0", Offset = "0x182F3A0", VA = "0x182F3A0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000472")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000474")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x182F3C0", Offset = "0x182F3C0", VA = "0x182F3C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x182F3CC", Offset = "0x182F3CC", VA = "0x182F3CC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000302")]
	[Address(RVA = "0x182F484", Offset = "0x182F484", VA = "0x182F484")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000303")]
	[Address(RVA = "0x182F404", Offset = "0x182F404", VA = "0x182F404")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x182F504", Offset = "0x182F504", VA = "0x182F504")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20000D0")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400047B")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700004A")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x182F81C", Offset = "0x182F81C", VA = "0x182F81C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public string filePath
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x182F8B0", Offset = "0x182F8B0", VA = "0x182F8B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x182F930", Offset = "0x182F930", VA = "0x182F930")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x182FA98", Offset = "0x182FA98", VA = "0x182FA98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x182FA9C", Offset = "0x182FA9C", VA = "0x182FA9C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1830074", Offset = "0x1830074", VA = "0x1830074")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1830420", Offset = "0x1830420", VA = "0x1830420")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x183059C", Offset = "0x183059C", VA = "0x183059C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1830DC4", Offset = "0x1830DC4", VA = "0x1830DC4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1830E00", Offset = "0x1830E00", VA = "0x1830E00")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1832658", Offset = "0x1832658", VA = "0x1832658")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1832530", Offset = "0x1832530", VA = "0x1832530")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x182FE8C", Offset = "0x182FE8C", VA = "0x182FE8C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x182FC94", Offset = "0x182FC94", VA = "0x182FC94")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1832CE0", Offset = "0x1832CE0", VA = "0x1832CE0")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1833178", Offset = "0x1833178", VA = "0x1833178")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000D1")]
internal class ONSPPropagation
{
	[Token(Token = "0x20000D2")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000484")]
		Int8,
		[Token(Token = "0x4000485")]
		UInt8,
		[Token(Token = "0x4000486")]
		Int16,
		[Token(Token = "0x4000487")]
		UInt16,
		[Token(Token = "0x4000488")]
		Int32,
		[Token(Token = "0x4000489")]
		UInt32,
		[Token(Token = "0x400048A")]
		Int64,
		[Token(Token = "0x400048B")]
		UInt64,
		[Token(Token = "0x400048C")]
		Float16,
		[Token(Token = "0x400048D")]
		Float32,
		[Token(Token = "0x400048E")]
		Float64
	}

	[Token(Token = "0x20000D3")]
	public class ClientType
	{
		[Token(Token = "0x400048F")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000490")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000491")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000492")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000493")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000494")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000495")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000496")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000497")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000498")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000499")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x400049A")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x400049B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x400049C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x400049D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xD96F04", Offset = "0xD96F04", VA = "0xD96F04")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20000D4")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600031A")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600031B")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600031C")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x600031D")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600031E")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600031F")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000320")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000321")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000322")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000323")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000324")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000325")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000326")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000327")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000328")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20000D5")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400049E")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700004D")]
		private IntPtr context
		{
			[Token(Token = "0x6000329")]
			[Address(RVA = "0xD97C48", Offset = "0xD97C48", VA = "0xD97C48")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xD97CA8", Offset = "0xD97CA8", VA = "0xD97CA8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xD97D38", Offset = "0xD97D38", VA = "0xD97D38")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xD97DC8", Offset = "0xD97DC8", VA = "0xD97DC8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xD97DEC", Offset = "0xD97DEC", VA = "0xD97DEC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xD97E7C", Offset = "0xD97E7C", VA = "0xD97E7C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xD97EA0", Offset = "0xD97EA0", VA = "0xD97EA0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000330")]
		[Address(RVA = "0xD97F2C", Offset = "0xD97F2C", VA = "0xD97F2C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xD97F50", Offset = "0xD97F50", VA = "0xD97F50")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xD97FD0", Offset = "0xD97FD0", VA = "0xD97FD0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xD97FD8", Offset = "0xD97FD8", VA = "0xD97FD8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xD980F8", Offset = "0xD980F8", VA = "0xD980F8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xD981EC", Offset = "0xD981EC", VA = "0xD981EC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xD98284", Offset = "0xD98284", VA = "0xD98284", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xD98290", Offset = "0xD98290", VA = "0xD98290")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xD983C0", Offset = "0xD983C0", VA = "0xD983C0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xD983CC", Offset = "0xD983CC", VA = "0xD983CC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xD98478", Offset = "0xD98478", VA = "0xD98478", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xD98484", Offset = "0xD98484", VA = "0xD98484")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xD98530", Offset = "0xD98530", VA = "0xD98530", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xD9853C", Offset = "0xD9853C", VA = "0xD9853C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xD985E8", Offset = "0xD985E8", VA = "0xD985E8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xD985F4", Offset = "0xD985F4", VA = "0xD985F4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xD98680", Offset = "0xD98680", VA = "0xD98680", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000341")]
		[Address(RVA = "0xD986A4", Offset = "0xD986A4", VA = "0xD986A4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xD98724", Offset = "0xD98724", VA = "0xD98724", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000343")]
		[Address(RVA = "0xD9872C", Offset = "0xD9872C", VA = "0xD9872C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xD987D4", Offset = "0xD987D4", VA = "0xD987D4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xD987E0", Offset = "0xD987E0", VA = "0xD987E0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xD98888", Offset = "0xD98888", VA = "0xD98888", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xD98898", Offset = "0xD98898", VA = "0xD98898")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000348")]
		[Address(RVA = "0xD98928", Offset = "0xD98928", VA = "0xD98928", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xD98934", Offset = "0xD98934", VA = "0xD98934")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20000D6")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40004A0")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700004E")]
		private IntPtr context
		{
			[Token(Token = "0x600034A")]
			[Address(RVA = "0xD9897C", Offset = "0xD9897C", VA = "0xD9897C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600034B")]
		[Address(RVA = "0xD989DC", Offset = "0xD989DC", VA = "0xD989DC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xD98A6C", Offset = "0xD98A6C", VA = "0xD98A6C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xD98AFC", Offset = "0xD98AFC", VA = "0xD98AFC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xD98B20", Offset = "0xD98B20", VA = "0xD98B20")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xD98BB0", Offset = "0xD98BB0", VA = "0xD98BB0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xD98BD4", Offset = "0xD98BD4", VA = "0xD98BD4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xD98C64", Offset = "0xD98C64", VA = "0xD98C64", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xD98C88", Offset = "0xD98C88", VA = "0xD98C88")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xD98D08", Offset = "0xD98D08", VA = "0xD98D08", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xD98D10", Offset = "0xD98D10", VA = "0xD98D10")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xD98E30", Offset = "0xD98E30", VA = "0xD98E30", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xD98F24", Offset = "0xD98F24", VA = "0xD98F24")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xD98FBC", Offset = "0xD98FBC", VA = "0xD98FBC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xD98FC8", Offset = "0xD98FC8", VA = "0xD98FC8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xD990F8", Offset = "0xD990F8", VA = "0xD990F8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xD99104", Offset = "0xD99104", VA = "0xD99104")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xD991B0", Offset = "0xD991B0", VA = "0xD991B0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xD991BC", Offset = "0xD991BC", VA = "0xD991BC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600035D")]
		[Address(RVA = "0xD99268", Offset = "0xD99268", VA = "0xD99268", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600035E")]
		[Address(RVA = "0xD99274", Offset = "0xD99274", VA = "0xD99274")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600035F")]
		[Address(RVA = "0xD99320", Offset = "0xD99320", VA = "0xD99320", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xD9932C", Offset = "0xD9932C", VA = "0xD9932C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xD993BC", Offset = "0xD993BC", VA = "0xD993BC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xD993E0", Offset = "0xD993E0", VA = "0xD993E0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xD99460", Offset = "0xD99460", VA = "0xD99460", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xD99468", Offset = "0xD99468", VA = "0xD99468")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xD99510", Offset = "0xD99510", VA = "0xD99510", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xD9951C", Offset = "0xD9951C", VA = "0xD9951C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xD995C4", Offset = "0xD995C4", VA = "0xD995C4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xD995D4", Offset = "0xD995D4", VA = "0xD995D4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xD99664", Offset = "0xD99664", VA = "0xD99664", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xD99670", Offset = "0xD99670", VA = "0xD99670")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20000D7")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40004A2")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700004F")]
		private IntPtr context
		{
			[Token(Token = "0x600036B")]
			[Address(RVA = "0xD96F0C", Offset = "0xD96F0C", VA = "0xD96F0C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xD96F6C", Offset = "0xD96F6C", VA = "0xD96F6C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xD96FFC", Offset = "0xD96FFC", VA = "0xD96FFC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xD9708C", Offset = "0xD9708C", VA = "0xD9708C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xD970B0", Offset = "0xD970B0", VA = "0xD970B0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xD97140", Offset = "0xD97140", VA = "0xD97140", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000371")]
		[Address(RVA = "0xD97164", Offset = "0xD97164", VA = "0xD97164")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xD971F4", Offset = "0xD971F4", VA = "0xD971F4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xD97218", Offset = "0xD97218", VA = "0xD97218")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xD97298", Offset = "0xD97298", VA = "0xD97298", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xD972A0", Offset = "0xD972A0", VA = "0xD972A0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xD973C0", Offset = "0xD973C0", VA = "0xD973C0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000377")]
		[Address(RVA = "0xD974B4", Offset = "0xD974B4", VA = "0xD974B4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xD9754C", Offset = "0xD9754C", VA = "0xD9754C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xD97558", Offset = "0xD97558", VA = "0xD97558")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xD97688", Offset = "0xD97688", VA = "0xD97688", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xD97694", Offset = "0xD97694", VA = "0xD97694")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xD97740", Offset = "0xD97740", VA = "0xD97740", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xD9774C", Offset = "0xD9774C", VA = "0xD9774C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xD977F8", Offset = "0xD977F8", VA = "0xD977F8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xD97804", Offset = "0xD97804", VA = "0xD97804")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xD978B0", Offset = "0xD978B0", VA = "0xD978B0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000381")]
		[Address(RVA = "0xD978BC", Offset = "0xD978BC", VA = "0xD978BC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xD9794C", Offset = "0xD9794C", VA = "0xD9794C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000383")]
		[Address(RVA = "0xD97970", Offset = "0xD97970", VA = "0xD97970")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xD979F0", Offset = "0xD979F0", VA = "0xD979F0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xD979F8", Offset = "0xD979F8", VA = "0xD979F8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xD97AA0", Offset = "0xD97AA0", VA = "0xD97AA0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xD97AAC", Offset = "0xD97AAC", VA = "0xD97AAC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xD97B54", Offset = "0xD97B54", VA = "0xD97B54", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000389")]
		[Address(RVA = "0xD97B64", Offset = "0xD97B64", VA = "0xD97B64")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xD97BF4", Offset = "0xD97BF4", VA = "0xD97BF4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xD97C00", Offset = "0xD97C00", VA = "0xD97C00")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700004C")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x182F514", Offset = "0x182F514", VA = "0x182F514")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x182F58C", Offset = "0x182F58C", VA = "0x182F58C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x182F814", Offset = "0x182F814", VA = "0x182F814")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000D8")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum Preset
	{
		[Token(Token = "0x40004AA")]
		Custom,
		[Token(Token = "0x40004AB")]
		AcousticTile,
		[Token(Token = "0x40004AC")]
		Brick,
		[Token(Token = "0x40004AD")]
		BrickPainted,
		[Token(Token = "0x40004AE")]
		Carpet,
		[Token(Token = "0x40004AF")]
		CarpetHeavy,
		[Token(Token = "0x40004B0")]
		CarpetHeavyPadded,
		[Token(Token = "0x40004B1")]
		CeramicTile,
		[Token(Token = "0x40004B2")]
		Concrete,
		[Token(Token = "0x40004B3")]
		ConcreteRough,
		[Token(Token = "0x40004B4")]
		ConcreteBlock,
		[Token(Token = "0x40004B5")]
		ConcreteBlockPainted,
		[Token(Token = "0x40004B6")]
		Curtain,
		[Token(Token = "0x40004B7")]
		Foliage,
		[Token(Token = "0x40004B8")]
		Glass,
		[Token(Token = "0x40004B9")]
		GlassHeavy,
		[Token(Token = "0x40004BA")]
		Grass,
		[Token(Token = "0x40004BB")]
		Gravel,
		[Token(Token = "0x40004BC")]
		GypsumBoard,
		[Token(Token = "0x40004BD")]
		PlasterOnBrick,
		[Token(Token = "0x40004BE")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40004BF")]
		Soil,
		[Token(Token = "0x40004C0")]
		SoundProof,
		[Token(Token = "0x40004C1")]
		Snow,
		[Token(Token = "0x40004C2")]
		Steel,
		[Token(Token = "0x40004C3")]
		Water,
		[Token(Token = "0x40004C4")]
		WoodThin,
		[Token(Token = "0x40004C5")]
		WoodThick,
		[Token(Token = "0x40004C6")]
		WoodFloor,
		[Token(Token = "0x40004C7")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20000DA")]
	public sealed class Point
	{
		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xD996B8", Offset = "0xD996B8", VA = "0xD996B8")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xD996F0", Offset = "0xD996F0", VA = "0xD996F0")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xD9975C", Offset = "0xD9975C", VA = "0xD9975C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB17BAC", Offset = "0xB17BAC")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20000DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17BE4", Offset = "0xB17BE4")]
		private sealed class <>c
		{
			[Token(Token = "0x40004CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40004CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40004CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60003B8")]
			[Address(RVA = "0x2734DC4", Offset = "0x2734DC4", VA = "0x2734DC4")]
			public <>c()
			{
			}

			[Token(Token = "0x60003B9")]
			[Address(RVA = "0x2734DCC", Offset = "0x2734DCC", VA = "0x2734DCC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60003BA")]
			[Address(RVA = "0x2734DE4", Offset = "0x2734DE4", VA = "0x2734DE4")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000051")]
		public float Item
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0xD99774", Offset = "0xD99774", VA = "0xD99774")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xD99BD8", Offset = "0xD99BD8", VA = "0xD99BD8")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E07C", Offset = "0xB1E07C")]
	public Spectrum absorption;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E0B4", Offset = "0xB1E0B4")]
	public Spectrum transmission;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E0EC", Offset = "0xB1E0EC")]
	public Spectrum scattering;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000050")]
	public Preset preset
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x183326C", Offset = "0x183326C", VA = "0x183326C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1833274", Offset = "0x1833274", VA = "0x1833274")]
		set
		{
		}
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x183329C", Offset = "0x183329C", VA = "0x183329C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1832B54", Offset = "0x1832B54", VA = "0x1832B54")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x183390C", Offset = "0x183390C", VA = "0x183390C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1833910", Offset = "0x1833910", VA = "0x1833910")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x18332A0", Offset = "0x18332A0", VA = "0x18332A0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x183239C", Offset = "0x183239C", VA = "0x183239C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x18339FC", Offset = "0x18339FC", VA = "0x18339FC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1833EDC", Offset = "0x1833EDC", VA = "0x1833EDC")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x18343C0", Offset = "0x18343C0", VA = "0x18343C0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x18348A0", Offset = "0x18348A0", VA = "0x18348A0")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1834D94", Offset = "0x1834D94", VA = "0x1834D94")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1835274", Offset = "0x1835274", VA = "0x1835274")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1835754", Offset = "0x1835754", VA = "0x1835754")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1835C3C", Offset = "0x1835C3C", VA = "0x1835C3C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1836124", Offset = "0x1836124", VA = "0x1836124")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1836610", Offset = "0x1836610", VA = "0x1836610")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1836AF8", Offset = "0x1836AF8", VA = "0x1836AF8")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1836FE8", Offset = "0x1836FE8", VA = "0x1836FE8")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x18374C8", Offset = "0x18374C8", VA = "0x18374C8")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x18379BC", Offset = "0x18379BC", VA = "0x18379BC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1837E8C", Offset = "0x1837E8C", VA = "0x1837E8C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1838368", Offset = "0x1838368", VA = "0x1838368")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1838730", Offset = "0x1838730", VA = "0x1838730")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1838AF0", Offset = "0x1838AF0", VA = "0x1838AF0")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1838FE0", Offset = "0x1838FE0", VA = "0x1838FE0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x18394CC", Offset = "0x18394CC", VA = "0x18394CC")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x18399B0", Offset = "0x18399B0", VA = "0x18399B0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1839D7C", Offset = "0x1839D7C", VA = "0x1839D7C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1839F20", Offset = "0x1839F20", VA = "0x1839F20")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x183A2DC", Offset = "0x183A2DC", VA = "0x183A2DC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x183A7AC", Offset = "0x183A7AC", VA = "0x183A7AC")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x183AC90", Offset = "0x183AC90", VA = "0x183AC90")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x183B168", Offset = "0x183B168", VA = "0x183B168")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x183B648", Offset = "0x183B648", VA = "0x183B648")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x183BB30", Offset = "0x183BB30", VA = "0x183BB30")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x183C014", Offset = "0x183C014", VA = "0x183C014")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x2761484", Offset = "0x2761484", VA = "0x2761484")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x2761554", Offset = "0x2761554", VA = "0x2761554")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000DE")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000052")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x2761BAC", Offset = "0x2761BAC", VA = "0x2761BAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x2761D04", Offset = "0x2761D04", VA = "0x2761D04")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40004D2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x2761D14", Offset = "0x2761D14", VA = "0x2761D14")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x2761DAC", Offset = "0x2761DAC", VA = "0x2761DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x2761ECC", Offset = "0x2761ECC", VA = "0x2761ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x2761ED0", Offset = "0x2761ED0", VA = "0x2761ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x2761ED4", Offset = "0x2761ED4", VA = "0x2761ED4")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000E0")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20000E1")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40004E1")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40004E7")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x2775F7C", Offset = "0x2775F7C", VA = "0x2775F7C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x2775E0C", Offset = "0x2775E0C", VA = "0x2775E0C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB2D760", Offset = "0xB2D760")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x2775F84", Offset = "0x2775F84", VA = "0x2775F84")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x27760C8", Offset = "0x27760C8", VA = "0x27760C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x27761C4", Offset = "0x27761C4", VA = "0x27761C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x2776AE0", Offset = "0x2776AE0", VA = "0x2776AE0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x2776034", Offset = "0x2776034", VA = "0x2776034")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x2776134", Offset = "0x2776134", VA = "0x2776134")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x2776848", Offset = "0x2776848", VA = "0x2776848")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x27768C8", Offset = "0x27768C8", VA = "0x27768C8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x2776950", Offset = "0x2776950", VA = "0x2776950")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x27769D8", Offset = "0x27769D8", VA = "0x27769D8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x2776A58", Offset = "0x2776A58", VA = "0x2776A58")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x27777E0", Offset = "0x27777E0", VA = "0x27777E0")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x2777888", Offset = "0x2777888", VA = "0x2777888")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x2777930", Offset = "0x2777930", VA = "0x2777930")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000E2")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000E3")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x2761564", Offset = "0x2761564", VA = "0x2761564")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x2761568", Offset = "0x2761568", VA = "0x2761568")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x276156C", Offset = "0x276156C", VA = "0x276156C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x27616E4", Offset = "0x27616E4", VA = "0x27616E4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x27615B8", Offset = "0x27615B8", VA = "0x27615B8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x2761650", Offset = "0x2761650", VA = "0x2761650")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x2761730", Offset = "0x2761730", VA = "0x2761730")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x27617D0", Offset = "0x27617D0", VA = "0x27617D0")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x276196C", Offset = "0x276196C", VA = "0x276196C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x2761B08", Offset = "0x2761B08", VA = "0x2761B08")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000E4")]
public class VideoPlayerWrapper : MonoBehaviour
{
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17BF4", Offset = "0xB17BF4")]
	private sealed class <Play>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoPlayerWrapper <>4__this;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Video.VideoClip loadedClip;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SimpleSignal skipSignal;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long <lastFrame>5__2;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long <lastFrameCount>5__3;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <maxSameFrames>5__4;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <lastFrameSameCountdown>5__5;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0xDA7BFC", Offset = "0xDA7BFC", VA = "0xDA7BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0xDA7C44", Offset = "0xDA7C44", VA = "0xDA7C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xDA7344", Offset = "0xDA7344", VA = "0xDA7344")]
		[DebuggerHidden]
		public <Play>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xDA7370", Offset = "0xDA7370", VA = "0xDA7370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xDA7374", Offset = "0xDA7374", VA = "0xDA7374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xDA7C04", Offset = "0xDA7C04", VA = "0xDA7C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17C04", Offset = "0xB17C04")]
	private sealed class <SimplePlay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoPlayerWrapper <>4__this;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Video.VideoClip loadedClip;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SimpleSignal skipSignal;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0xDA7F70", Offset = "0xDA7F70", VA = "0xDA7F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0xDA7FB8", Offset = "0xDA7FB8", VA = "0xDA7FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xDA7C4C", Offset = "0xDA7C4C", VA = "0xDA7C4C")]
		[DebuggerHidden]
		public <SimplePlay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xDA7C78", Offset = "0xDA7C78", VA = "0xDA7C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xDA7C7C", Offset = "0xDA7C7C", VA = "0xDA7C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xDA7F78", Offset = "0xDA7F78", VA = "0xDA7F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject disableObjectOnVideoPlayback;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool waitingForResume;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float waitingForResumeTime;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasFocus;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool regainedFocusThisFrame;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private long lastFrameBeforeResume;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1E144", Offset = "0xB1E144")]
	private bool <isVideoPlaying>k__BackingField;

	[Token(Token = "0x17000053")]
	public bool isVideoPlaying
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x2740454", Offset = "0x2740454", VA = "0x2740454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7C0", Offset = "0xB2D7C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x274045C", Offset = "0x274045C", VA = "0x274045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7D0", Offset = "0xB2D7D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	private float deltaTime
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x2740468", Offset = "0x2740468", VA = "0x2740468")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x2740488", Offset = "0x2740488", VA = "0x2740488")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x2740490", Offset = "0x2740490", VA = "0x2740490")]
	private void OnApplicationFocus(bool focusStatus)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x27405B8", Offset = "0x27405B8", VA = "0x27405B8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x274068C", Offset = "0x274068C", VA = "0x274068C")]
	private void Resume(VideoPlayer player, long frameIdx)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x274079C", Offset = "0x274079C", VA = "0x274079C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D7E0", Offset = "0xB2D7E0")]
	public IEnumerator Play(UnityEngine.Video.VideoClip loadedClip, SimpleSignal skipSignal)
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x2740844", Offset = "0x2740844", VA = "0x2740844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D840", Offset = "0xB2D840")]
	public IEnumerator SimplePlay(UnityEngine.Video.VideoClip loadedClip, SimpleSignal skipSignal)
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x27408EC", Offset = "0x27408EC", VA = "0x27408EC")]
	public VideoPlayerWrapper()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB17C14", Offset = "0xB17C14")]
public class AnimationCurveAsset : ScriptableObject
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1031AD0", Offset = "0x1031AD0", VA = "0x1031AD0")]
	public AnimationCurveAsset()
	{
	}
}
[Token(Token = "0x20000E8")]
public class RandomizeRotation : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationAxis;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xEBA388", Offset = "0xEBA388", VA = "0xEBA388")]
	public void Randomize()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xEBA414", Offset = "0xEBA414", VA = "0xEBA414")]
	public RandomizeRotation()
	{
	}
}
[Token(Token = "0x20000E9")]
public class EyeContactTarget : MonoBehaviour
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E154", Offset = "0xB1E154")]
	public EyeContact eyeContact;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E18C", Offset = "0xB1E18C")]
	public Transform eyeTarget;

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xFC52BC", Offset = "0xFC52BC", VA = "0xFC52BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xFC52C0", Offset = "0xFC52C0", VA = "0xFC52C0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xFC537C", Offset = "0xFC537C", VA = "0xFC537C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xFC5410", Offset = "0xFC5410", VA = "0xFC5410")]
	public EyeContactTarget()
	{
	}
}
[Token(Token = "0x20000EA")]
public class AppleArcadeFairPlay : MonoBehaviour
{
	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1031B34", Offset = "0x1031B34", VA = "0x1031B34")]
	public AppleArcadeFairPlay()
	{
	}
}
[Token(Token = "0x20000EB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB17C7C", Offset = "0xB17C7C")]
public class GameConfig : ScriptableObject
{
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<RideConfig> rides;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentRideIndex;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameConfig _staticInstance;

	[Token(Token = "0x17000059")]
	public static int numRides
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xFCFDC4", Offset = "0xFCFDC4", VA = "0xFCFDC4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005A")]
	private RideConfig _currentRide
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xFCFE44", Offset = "0xFCFE44", VA = "0xFCFE44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public static RideConfig currentRide
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xFCFF88", Offset = "0xFCFF88", VA = "0xFCFF88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public static SceneSet currentSceneSet
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xFCFFE0", Offset = "0xFCFFE0", VA = "0xFCFFE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public static GameConfig staticInstance
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xFD0000", Offset = "0xFD0000", VA = "0xFD0000")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xFCFE4C", Offset = "0xFCFE4C", VA = "0xFCFE4C")]
	public RideConfig GetRideConfig(int index)
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xFCFF24", Offset = "0xFCFF24", VA = "0xFCFF24")]
	public void SetCurrentRideIndex(int index)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xFCFF2C", Offset = "0xFCFF2C", VA = "0xFCFF2C")]
	public static int GetRideNumber()
	{
		return default(int);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFD004C", Offset = "0xFD004C", VA = "0xFD004C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFD01DC", Offset = "0xFD01DC", VA = "0xFD01DC")]
	public GameConfig()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB17CC0", Offset = "0xB17CC0")]
public class RideConfig : ScriptableObject
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string serializationName;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string defaultDriverRigName;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string defaultEnvironment;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SceneSet sceneSet;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xEC966C", Offset = "0xEC966C", VA = "0xEC966C")]
	public RideConfig()
	{
	}
}
[Token(Token = "0x20000ED")]
public static class StringConstants
{
	[Token(Token = "0x400050F")]
	public const string configRoot = "HitchHikerGame/";

	[Token(Token = "0x4000510")]
	public const string ridesConfigPath = "HitchHikerGame/Rides/";
}
[Token(Token = "0x20000EE")]
public class IgnoreCollider : MonoBehaviour
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> TargetColliders;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x12758D8", Offset = "0x12758D8", VA = "0x12758D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1275A50", Offset = "0x1275A50", VA = "0x1275A50")]
	public IgnoreCollider()
	{
	}
}
[Token(Token = "0x20000EF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17D04", Offset = "0xB17D04")]
public class TestMediaWrite : MonoBehaviour
{
	[Token(Token = "0x600040F")]
	[Address(RVA = "0xDB3008", Offset = "0xDB3008", VA = "0xDB3008")]
	public TestMediaWrite()
	{
	}
}
[Token(Token = "0x20000F0")]
public class PS4TrophyManager
{
	[Token(Token = "0x6000410")]
	[Address(RVA = "0x15CC758", Offset = "0x15CC758", VA = "0x15CC758")]
	public PS4TrophyManager()
	{
	}
}
[Token(Token = "0x20000F1")]
public class XboxService : AbstractNeedInitService
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EachKeyOneFilePersister stdPersister;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ControllerLostScreen;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneSet engagementScreenSceneSet;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool userSignedInAndSetup;

	[Token(Token = "0x1700005E")]
	public override string Name
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x2745290", Offset = "0x2745290", VA = "0x2745290", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x27452D4", Offset = "0x27452D4", VA = "0x27452D4", Slot = "10")]
	public override void InitService()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x27452D8", Offset = "0x27452D8", VA = "0x27452D8", Slot = "11")]
	public override void Close()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x27452DC", Offset = "0x27452DC", VA = "0x27452DC")]
	public XboxService()
	{
	}
}
[Token(Token = "0x20000F2")]
public class SplitTextLocalizer : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E1D4", Offset = "0xB1E1D4")]
	public Text first;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text second;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E20C", Offset = "0xB1E20C")]
	public string locaKey;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string separator;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LocalizationService locaService;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xDACDD8", Offset = "0xDACDD8", VA = "0xDACDD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDAD16C", Offset = "0xDAD16C", VA = "0xDAD16C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xDAD04C", Offset = "0xDAD04C", VA = "0xDAD04C")]
	private void Localize()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xDACF0C", Offset = "0xDACF0C", VA = "0xDACF0C")]
	private TryOp TryGetLocaService()
	{
		return default(TryOp);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDAD288", Offset = "0xDAD288", VA = "0xDAD288")]
	public SplitTextLocalizer()
	{
	}
}
[Token(Token = "0x20000F3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17D64", Offset = "0xB17D64")]
public class TMProLocalizer : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI tmproComponent;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E254", Offset = "0xB1E254")]
	public string locakey;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool waitForLocaService;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LocalizationService locaService;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDB1A08", Offset = "0xDB1A08", VA = "0xDB1A08")]
	private void Reset()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xDB1AC0", Offset = "0xDB1AC0", VA = "0xDB1AC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xDB1AC4", Offset = "0xDB1AC4", VA = "0xDB1AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xDB1D14", Offset = "0xDB1D14", VA = "0xDB1D14")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xDB1B08", Offset = "0xDB1B08", VA = "0xDB1B08")]
	private void TryGetLocaService()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xDB1BF8", Offset = "0xDB1BF8", VA = "0xDB1BF8")]
	private bool TrySetText()
	{
		return default(bool);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xDB1A0C", Offset = "0xDB1A0C", VA = "0xDB1A0C")]
	private void AquireRequiredComponentReference()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xDB1D54", Offset = "0xDB1D54", VA = "0xDB1D54")]
	public TMProLocalizer()
	{
	}
}
[Token(Token = "0x20000F4")]
public class XboxPlayerpicker : MonoBehaviour
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneSet XboxEngagementSceneSet;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite vernSprite;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite PlayerSprite;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image playerImage;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PlayerImageMask;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text actionText;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text playerNameText;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animation textAnimation;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animation gamerpicAnimation;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D remoteGamerPic;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InputService Inputreference;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x2745260", Offset = "0x2745260", VA = "0x2745260")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x2745288", Offset = "0x2745288", VA = "0x2745288")]
	public XboxPlayerpicker()
	{
	}
}
[Token(Token = "0x20000F5")]
public class XboxControllerLostScreen : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XboxService xboxServiceReference;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputService inputServiceReference;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameInputMode storedInputMode;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x2745128", Offset = "0x2745128", VA = "0x2745128")]
	public XboxControllerLostScreen()
	{
	}
}
[Token(Token = "0x20000F6")]
public static class XboxOneInputHelpers
{
}
[Token(Token = "0x20000F7")]
public class XboxEngagementScreen : MonoBehaviour
{
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.CanvasGroup hintTextGroup;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneSet mainmenuSceneSet;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x2745130", Offset = "0x2745130", VA = "0x2745130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x2745168", Offset = "0x2745168", VA = "0x2745168")]
	private void LoadMainmenu()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x2745258", Offset = "0x2745258", VA = "0x2745258")]
	public XboxEngagementScreen()
	{
	}
}
[Token(Token = "0x20000F8")]
public class CommandLine : MonoBehaviour
{
	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1586D04", Offset = "0x1586D04", VA = "0x1586D04")]
	public static bool Contains(string arg)
	{
		return default(bool);
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1586D98", Offset = "0x1586D98", VA = "0x1586D98")]
	public CommandLine()
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB17DC4", Offset = "0xB17DC4")]
public class SplashScreenAnimationConfig : ScriptableObject
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E2AC", Offset = "0xB1E2AC")]
	public float fadeInTime;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullyShownTime;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeOutTime;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E2E4", Offset = "0xB1E2E4")]
	public AnimationCurveAsset fadeIn;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurveAsset fadeOut;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xDAC50C", Offset = "0xDAC50C", VA = "0xDAC50C")]
	public SplashScreenAnimationConfig()
	{
	}
}
[Token(Token = "0x20000FA")]
public class RectCopyFixBadCode : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform rectReference;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform selfRect;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xEBCA28", Offset = "0xEBCA28", VA = "0xEBCA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xEBCA84", Offset = "0xEBCA84", VA = "0xEBCA84")]
	private void Update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xEBCBC8", Offset = "0xEBCBC8", VA = "0xEBCBC8")]
	public RectCopyFixBadCode()
	{
	}
}
[Token(Token = "0x20000FB")]
public class InPlaymodeDisabler : MonoBehaviour, ISceneEditStateCallback
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private bool editModeDefaultActiveState;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1275A58", Offset = "0x1275A58", VA = "0x1275A58", Slot = "5")]
	public void OnEnterEditState()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1275A8C", Offset = "0x1275A8C", VA = "0x1275A8C", Slot = "4")]
	public void OnExitEditState()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1275AE0", Offset = "0x1275AE0", VA = "0x1275AE0")]
	public InPlaymodeDisabler()
	{
	}
}
[Token(Token = "0x20000FC")]
public class SetActiveOnPlatform : MonoBehaviour, IBuildSceneCallback, ISceneEditStateCallback
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E354", Offset = "0xB1E354")]
	public HitchHiker.Platform TargetPlatforms;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E38C", Offset = "0xB1E38C")]
	public bool IsVR;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	[HideInInspector]
	private bool _previousState;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x110ADA8", Offset = "0x110ADA8", VA = "0x110ADA8", Slot = "6")]
	public void OnEnterEditState()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x110ADDC", Offset = "0x110ADDC", VA = "0x110ADDC", Slot = "5")]
	public void OnExitEditState()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x110AE30", Offset = "0x110AE30", VA = "0x110AE30", Slot = "4")]
	public void ProcessAsset()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x110AE74", Offset = "0x110AE74", VA = "0x110AE74")]
	private bool GetDesiredState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x110AF28", Offset = "0x110AF28", VA = "0x110AF28")]
	public SetActiveOnPlatform()
	{
	}
}
[Token(Token = "0x20000FD")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB17E2C", Offset = "0xB17E2C")]
public class GuidReferenceType : Attribute
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly Type type;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xFD7A34", Offset = "0xFD7A34", VA = "0xFD7A34")]
	public GuidReferenceType(Type type)
	{
	}
}
[Serializable]
[Token(Token = "0x20000FE")]
public class PlayerCameraControllerHierarchyReference : HierarchyReferenceBase<PlayerCameraController>
{
	[Token(Token = "0x6000438")]
	[Address(RVA = "0x2782AF8", Offset = "0x2782AF8", VA = "0x2782AF8")]
	public PlayerCameraControllerHierarchyReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FF")]
public class CopyTransformHierarchyReference : HierarchyReferenceBase<CopyTransform>
{
	[Token(Token = "0x6000439")]
	[Address(RVA = "0x158DE64", Offset = "0x158DE64", VA = "0x158DE64")]
	public CopyTransformHierarchyReference()
	{
	}
}
[Serializable]
[Token(Token = "0x2000100")]
public class CameraCopyHierarchyReference : HierarchyReferenceBase<CameraCopy>
{
	[Token(Token = "0x600043A")]
	[Address(RVA = "0xE3091C", Offset = "0xE3091C", VA = "0xE3091C")]
	public CameraCopyHierarchyReference()
	{
	}
}
[Serializable]
[Token(Token = "0x2000101")]
public class CarModelControllerHierarchyReference : TypeSpecificFindableReference<CarModelController>
{
	[Token(Token = "0x600043B")]
	[Address(RVA = "0xE36408", Offset = "0xE36408", VA = "0xE36408")]
	public CarModelControllerHierarchyReference()
	{
	}
}
[Token(Token = "0x2000102")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17E60", Offset = "0xB17E60")]
public class CarInWorldCenter_Setup : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17E74", Offset = "0xB17E74")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopyTransform cp;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform carModel;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion worldRotation;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 worldPoint;

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x275DA9C", Offset = "0x275DA9C", VA = "0x275DA9C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x275DAA4", Offset = "0x275DAA4", VA = "0x275DAA4")]
		internal void <Setup>b__0()
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x275DB04", Offset = "0x275DB04", VA = "0x275DB04")]
		internal void <Setup>b__1()
		{
		}
	}

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E3FC", Offset = "0xB1E3FC")]
	public bool copyCarRotation;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject proxyPrefab;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HierarchyReference proxyParent;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject proxyInstance;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform crowSystemTarget;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E434", Offset = "0xB1E434")]
	public PlayerCameraControllerHierarchyReference carRigRef;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HierarchyReference playerCameraRef;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HierarchyReference carModelRef;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E46C", Offset = "0xB1E46C")]
	public CarModelControllerHierarchyReference carModelControllerRef;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E4A4", Offset = "0xB1E4A4")]
	public CopyTransformHierarchyReference camRigCopyRef;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CopyTransformHierarchyReference playerCameraCopyRef;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CameraCopyHierarchyReference environmentCameraRef;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1E4DC", Offset = "0xB1E4DC")]
	public List<HierarchyReference> destroyObjects;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xE343CC", Offset = "0xE343CC", VA = "0xE343CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xE3446C", Offset = "0xE3446C", VA = "0xE3446C")]
	public void FindInternalReferences()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xE34528", Offset = "0xE34528", VA = "0xE34528")]
	public void InstantiateProxy()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xE34820", Offset = "0xE34820", VA = "0xE34820")]
	public void FindPrefabInstanceReferences()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xE348F8", Offset = "0xE348F8", VA = "0xE348F8")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xE34E74", Offset = "0xE34E74", VA = "0xE34E74")]
	private void AssignCarAndCameraReferences()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xE34FB0", Offset = "0xE34FB0", VA = "0xE34FB0")]
	private void AdjustPositionAndRotation(Transform carCam, Transform carModel, out Quaternion worldRotation, out Vector3 worldPoint)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xE3518C", Offset = "0xE3518C", VA = "0xE3518C")]
	private void SetCrowSystemTarget(Transform target)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xE34C14", Offset = "0xE34C14", VA = "0xE34C14")]
	public void RemoveUnwantedObjects()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xE35258", Offset = "0xE35258", VA = "0xE35258")]
	public CarInWorldCenter_Setup()
	{
	}
}
[Token(Token = "0x2000104")]
public class Crosshair : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17E84", Offset = "0xB17E84")]
	private sealed class <DelayedDeactivation>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crosshair <>4__this;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x275F65C", Offset = "0x275F65C", VA = "0x275F65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x275F6A4", Offset = "0x275F6A4", VA = "0x275F6A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x275F530", Offset = "0x275F530", VA = "0x275F530")]
		[DebuggerHidden]
		public <DelayedDeactivation>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x275F55C", Offset = "0x275F55C", VA = "0x275F55C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x275F560", Offset = "0x275F560", VA = "0x275F560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x275F664", Offset = "0x275F664", VA = "0x275F664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ring;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ringAim;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ringAim_NotHit;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ringAim_Hit;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isAimedAt;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHit;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform lookAtTransform;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform moveWithTransform;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x158EB28", Offset = "0x158EB28", VA = "0x158EB28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x158EB2C", Offset = "0x158EB2C", VA = "0x158EB2C")]
	public void Activate()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x158EBA0", Offset = "0x158EBA0", VA = "0x158EBA0")]
	public void OrientTowards(Transform t)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x158EBA8", Offset = "0x158EBA8", VA = "0x158EBA8")]
	public void MoveWith(Transform t)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x158EBB0", Offset = "0x158EBB0", VA = "0x158EBB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x158ECC8", Offset = "0x158ECC8", VA = "0x158ECC8")]
	public void StartAim()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x158ED20", Offset = "0x158ED20", VA = "0x158ED20")]
	public void StopAim()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x158ED78", Offset = "0x158ED78", VA = "0x158ED78")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x158EE80", Offset = "0x158EE80", VA = "0x158EE80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D940", Offset = "0xB2D940")]
	private IEnumerator DelayedDeactivation()
	{
		return null;
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x158EEF8", Offset = "0x158EEF8", VA = "0x158EEF8")]
	public Crosshair()
	{
	}
}
[Token(Token = "0x2000106")]
public class Highscore3D_Counter : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17E94", Offset = "0xB17E94")]
	private sealed class <CountUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Highscore3D_Counter <>4__this;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <prevScore>5__2;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0xF16F94", Offset = "0xF16F94", VA = "0xF16F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000463")]
			[Address(RVA = "0xF16FDC", Offset = "0xF16FDC", VA = "0xF16FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xF16E18", Offset = "0xF16E18", VA = "0xF16E18")]
		[DebuggerHidden]
		public <CountUp>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xF16E44", Offset = "0xF16E44", VA = "0xF16E44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xF16E48", Offset = "0xF16E48", VA = "0xF16E48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xF16F9C", Offset = "0xF16F9C", VA = "0xF16F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Modular3DText textField;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int addScorePerSeconds;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float countFadeInSeconds;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentScore;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int scoreToAdd;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Highscore3D_Counter staticInstance;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x126A71C", Offset = "0x126A71C", VA = "0x126A71C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x126A794", Offset = "0x126A794", VA = "0x126A794")]
	public void AddScore(int score)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x126A7E4", Offset = "0x126A7E4", VA = "0x126A7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x126A888", Offset = "0x126A888", VA = "0x126A888")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D9F0", Offset = "0xB2D9F0")]
	private IEnumerator CountUp(int score)
	{
		return null;
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x126A910", Offset = "0x126A910", VA = "0x126A910")]
	public Highscore3D_Counter()
	{
	}
}
[Token(Token = "0x2000108")]
public class Highscore3D_Popup : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17EA4", Offset = "0xB17EA4")]
	private sealed class <AddScore>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Highscore3D_Popup <>4__this;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0xF170F8", Offset = "0xF170F8", VA = "0xF170F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0xF17140", Offset = "0xF17140", VA = "0xF17140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xF16FE4", Offset = "0xF16FE4", VA = "0xF16FE4")]
		[DebuggerHidden]
		public <AddScore>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xF17010", Offset = "0xF17010", VA = "0xF17010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xF17014", Offset = "0xF17014", VA = "0xF17014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xF17100", Offset = "0xF17100", VA = "0xF17100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17EB4", Offset = "0xB17EB4")]
	private sealed class <CountUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Highscore3D_Popup <>4__this;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <currentCount>5__2;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0xF172B0", Offset = "0xF172B0", VA = "0xF172B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0xF172F8", Offset = "0xF172F8", VA = "0xF172F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xF17148", Offset = "0xF17148", VA = "0xF17148")]
		[DebuggerHidden]
		public <CountUp>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xF17174", Offset = "0xF17174", VA = "0xF17174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xF17178", Offset = "0xF17178", VA = "0xF17178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xF172B8", Offset = "0xF172B8", VA = "0xF172B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Modular3DText textField;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float countFadeInSeconds;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float secondsVisible;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float showingCounter;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x126A924", Offset = "0x126A924", VA = "0x126A924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x126A97C", Offset = "0x126A97C", VA = "0x126A97C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x126AA10", Offset = "0x126AA10", VA = "0x126AA10")]
	public void Show(int score)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x126AA68", Offset = "0x126AA68", VA = "0x126AA68")]
	public void Show(Vector3 position, int score)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x126AAEC", Offset = "0x126AAEC", VA = "0x126AAEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DAA0", Offset = "0xB2DAA0")]
	private IEnumerator AddScore(int score)
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x126AB74", Offset = "0x126AB74", VA = "0x126AB74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DB00", Offset = "0xB2DB00")]
	private IEnumerator CountUp(int score)
	{
		return null;
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x126ABFC", Offset = "0x126ABFC", VA = "0x126ABFC")]
	public Highscore3D_Popup()
	{
	}
}
[Token(Token = "0x200010B")]
public class HighscorePopupTrigger : MonoBehaviour
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int score;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraTransform;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Crosshair crosshair;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Highscore3D_Popup popupPrefab;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Crosshair crosshairInstance;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x126AC10", Offset = "0x126AC10", VA = "0x126AC10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x126AD8C", Offset = "0x126AD8C", VA = "0x126AD8C")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x126ADA8", Offset = "0x126ADA8", VA = "0x126ADA8")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x126ADC4", Offset = "0x126ADC4", VA = "0x126ADC4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x126ADF4", Offset = "0x126ADF4", VA = "0x126ADF4")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x126AF34", Offset = "0x126AF34", VA = "0x126AF34")]
	public HighscorePopupTrigger()
	{
	}
}
[Token(Token = "0x200010C")]
public class OXR_Controller : MonoBehaviour
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameObjectToDisable;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputActionReference controllerAction;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float disableAfterSeconds;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isPerforming;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float nonPerformingTimer;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x276C268", Offset = "0x276C268", VA = "0x276C268")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x276C388", Offset = "0x276C388", VA = "0x276C388")]
	private void Update()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x276C40C", Offset = "0x276C40C", VA = "0x276C40C")]
	private void OnCanceled(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x276C414", Offset = "0x276C414", VA = "0x276C414")]
	private void OnPerformed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x276C420", Offset = "0x276C420", VA = "0x276C420")]
	public OXR_Controller()
	{
	}
}
[Token(Token = "0x200010D")]
public class OXR_RigPositionOverride : MonoBehaviour
{
	[Token(Token = "0x6000482")]
	[Address(RVA = "0x2771B50", Offset = "0x2771B50", VA = "0x2771B50")]
	public OXR_RigPositionOverride()
	{
	}
}
[Token(Token = "0x200010E")]
public class OXRBehaviour : MonoBehaviour
{
	[Token(Token = "0x6000483")]
	[Address(RVA = "0x2767710", Offset = "0x2767710", VA = "0x2767710")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x276778C", Offset = "0x276778C", VA = "0x276778C", Slot = "4")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x2767790", Offset = "0x2767790", VA = "0x2767790", Slot = "5")]
	protected virtual void OnVRDisabled()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x2767794", Offset = "0x2767794", VA = "0x2767794")]
	public OXRBehaviour()
	{
	}
}
[Token(Token = "0x200010F")]
public class OXR_CameraAdjuster : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E4EC", Offset = "0xB1E4EC")]
	public List<string> registeredCameras;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E524", Offset = "0xB1E524")]
	public GameObject rigPrefab;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x276B334", Offset = "0x276B334", VA = "0x276B334")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x276B338", Offset = "0x276B338", VA = "0x276B338")]
	public void AdjustCameras()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x276B33C", Offset = "0x276B33C", VA = "0x276B33C")]
	public OXR_CameraAdjuster()
	{
	}
}
[Token(Token = "0x2000110")]
public class OXR_CameraOffsetTransform : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1E55C", Offset = "0xB1E55C")]
	private float <offsetAngle>k__BackingField;

	[Token(Token = "0x17000067")]
	public float offsetAngle
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x276B344", Offset = "0x276B344", VA = "0x276B344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DC00", Offset = "0xB2DC00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600048B")]
		[Address(RVA = "0x276B34C", Offset = "0x276B34C", VA = "0x276B34C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DC10", Offset = "0xB2DC10")]
		private set
		{
		}
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x276B354", Offset = "0x276B354", VA = "0x276B354")]
	public void Awake()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x276B358", Offset = "0x276B358", VA = "0x276B358")]
	public void Rotate(float angle)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x276B3A0", Offset = "0x276B3A0", VA = "0x276B3A0")]
	public void ResetOffsetangle()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x276B3E0", Offset = "0x276B3E0", VA = "0x276B3E0")]
	public OXR_CameraOffsetTransform()
	{
	}
}
[Token(Token = "0x2000111")]
public class OXR_Canvas : OXRBehaviour
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRaycastable;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E56C", Offset = "0xB1E56C")]
	public bool useRegisteredTransform;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useTransformReference;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas targetCanvas;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string transformName;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform transformReference;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E5A4", Offset = "0xB1E5A4")]
	public Canvas canvasReference;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E5DC", Offset = "0xB1E5DC")]
	public string forceLayer;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool overrideSortOrder;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int sortOrder;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas[] childs;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x276B3E8", Offset = "0x276B3E8", VA = "0x276B3E8", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x276B3EC", Offset = "0x276B3EC", VA = "0x276B3EC")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x276BB8C", Offset = "0x276BB8C", VA = "0x276BB8C")]
	public static void SetupCanvas(Canvas c, bool shouldBeRaycastable = true)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x276BDC8", Offset = "0x276BDC8", VA = "0x276BDC8")]
	public OXR_Canvas()
	{
	}
}
[Token(Token = "0x2000112")]
public class OXR_CanvasTarget : OXRBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Camera targetCamera;

	[Token(Token = "0x17000068")]
	public bool isCurrentTarget
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x276BE24", Offset = "0x276BE24", VA = "0x276BE24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x276BF48", Offset = "0x276BF48", VA = "0x276BF48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x276C028", Offset = "0x276C028", VA = "0x276C028")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x276C108", Offset = "0x276C108", VA = "0x276C108")]
	public OXR_CanvasTarget()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17EC4", Offset = "0xB17EC4")]
public class OXR_EventSystem : MonoBehaviour
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EventSystem xrEventSystem;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x276DC94", Offset = "0x276DC94", VA = "0x276DC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x276DCF0", Offset = "0x276DCF0", VA = "0x276DCF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x276DE40", Offset = "0x276DE40", VA = "0x276DE40")]
	public OXR_EventSystem()
	{
	}
}
[Token(Token = "0x2000114")]
public class OXR_Init : MonoBehaviour
{
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17F24", Offset = "0xB17F24")]
	private sealed class <InitCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OXR_Init <>4__this;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isWantedVR;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private XRManagerSettings <xrManagerSettings>5__2;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <isLoadedVR>5__3;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A2")]
			[Address(RVA = "0xD9AD70", Offset = "0xD9AD70", VA = "0xD9AD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A4")]
			[Address(RVA = "0xD9ADB8", Offset = "0xD9ADB8", VA = "0xD9ADB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xD9A6C0", Offset = "0xD9A6C0", VA = "0xD9A6C0")]
		[DebuggerHidden]
		public <InitCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xD9A6EC", Offset = "0xD9A6EC", VA = "0xD9A6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xD9A6F0", Offset = "0xD9A6F0", VA = "0xD9A6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xD9AD78", Offset = "0xD9AD78", VA = "0xD9AD78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameConfig gameConfig;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RuntimeConfig runtimeConfig;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OXR_Rig oxrRig;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E624", Offset = "0xB1E624")]
	public string cmdLineDisableVR;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E65C", Offset = "0xB1E65C")]
	private XRForceMode forceXRMode;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.WaitForEndOfFrame eof;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x276E870", Offset = "0x276E870", VA = "0x276E870")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x276E8D4", Offset = "0x276E8D4", VA = "0x276E8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x276E918", Offset = "0x276E918", VA = "0x276E918")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DC20", Offset = "0xB2DC20")]
	private IEnumerator InitCoroutine(bool isWantedVR)
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x276E9A4", Offset = "0x276E9A4", VA = "0x276E9A4")]
	public OXR_Init()
	{
	}
}
[Token(Token = "0x2000116")]
public class OXR_InteractableCanvas : MonoBehaviour
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvasRef;

	[Token(Token = "0x1700006B")]
	private Camera worldCamera
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x276F0B4", Offset = "0x276F0B4", VA = "0x276F0B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	private Camera uiCamera
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x276F10C", Offset = "0x276F10C", VA = "0x276F10C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x276F164", Offset = "0x276F164", VA = "0x276F164")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x276F168", Offset = "0x276F168", VA = "0x276F168")]
	public void Init(RegisteredInteractable interactable)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x276F220", Offset = "0x276F220", VA = "0x276F220")]
	public void RefreshPosition(Vector3 worldSpaceInteractablePosition)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x276F344", Offset = "0x276F344", VA = "0x276F344")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x276F3E0", Offset = "0x276F3E0", VA = "0x276F3E0")]
	public void RefreshOrientation()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x276F5A8", Offset = "0x276F5A8", VA = "0x276F5A8")]
	public OXR_InteractableCanvas()
	{
	}
}
[Token(Token = "0x2000117")]
public class OXR_InteractablePosition : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform parentTransform;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x276F5B0", Offset = "0x276F5B0", VA = "0x276F5B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x276F5F0", Offset = "0x276F5F0", VA = "0x276F5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x276F6B8", Offset = "0x276F6B8", VA = "0x276F6B8")]
	public OXR_InteractablePosition()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17F34", Offset = "0xB17F34")]
public class OXR_RelativePositionSynchronizer : OXRBehaviour
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool cameraLessTransform;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 offsetPosition;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 offsetDirection;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion offsetRotation;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x276F8B8", Offset = "0x276F8B8", VA = "0x276F8B8", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x276F984", Offset = "0x276F984", VA = "0x276F984")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x276F988", Offset = "0x276F988", VA = "0x276F988")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x276FAA0", Offset = "0x276FAA0", VA = "0x276FAA0")]
	public void RefreshPosition()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x276FCBC", Offset = "0x276FCBC", VA = "0x276FCBC")]
	private OXR_CanvasTarget FindCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x276FEBC", Offset = "0x276FEBC", VA = "0x276FEBC")]
	public OXR_RelativePositionSynchronizer()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17F48", Offset = "0xB17F48")]
public class OXR_RideSetup : OXR_SceneSetup
{
	[Serializable]
	[Token(Token = "0x200011A")]
	public class CanvasTargetSetup
	{
		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HierarchyReference parent;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HierarchyReference camera;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OXR_CanvasTarget instantiatedTarget;

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xD9ADC0", Offset = "0xD9ADC0", VA = "0xD9ADC0")]
		public CanvasTargetSetup()
		{
		}
	}

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E694", Offset = "0xB1E694")]
	public bool useVRIK;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HierarchyReference hitchhikerContainer;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E6CC", Offset = "0xB1E6CC")]
	public List<CanvasTargetSetup> canvasTargetSetups;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x276FEC4", Offset = "0x276FEC4", VA = "0x276FEC4", Slot = "6")]
	protected override void FindReferences()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x277064C", Offset = "0x277064C", VA = "0x277064C")]
	public OXR_RideSetup()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17F5C", Offset = "0xB17F5C")]
public class OXR_Rig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200011C")]
	public class CameraSettings
	{
		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CameraClearFlags ClearFlags;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LayerMask CullingMask;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Depth;

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xD9AF7C", Offset = "0xD9AF7C", VA = "0xD9AF7C")]
		public CameraSettings()
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xD9AF94", Offset = "0xD9AF94", VA = "0xD9AF94")]
		public void Apply(Camera camera)
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xD9B060", Offset = "0xD9B060", VA = "0xD9B060")]
		public static CameraSettings FromCamera(Camera camera)
		{
			return null;
		}
	}

	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17F70", Offset = "0xB17F70")]
	private sealed class <SetOculusColorSpace>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0xD9AF2C", Offset = "0xD9AF2C", VA = "0xD9AF2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0xD9AF74", Offset = "0xD9AF74", VA = "0xD9AF74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xD9ADC8", Offset = "0xD9ADC8", VA = "0xD9ADC8")]
		[DebuggerHidden]
		public <SetOculusColorSpace>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xD9ADF4", Offset = "0xD9ADF4", VA = "0xD9ADF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xD9ADF8", Offset = "0xD9ADF8", VA = "0xD9ADF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xD9AF34", Offset = "0xD9AF34", VA = "0xD9AF34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OXR_Rig staticRig;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameConfig gameConfig;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isStaticRig;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	public bool moveRigToOverrideCams;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Camera staticCamera;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Camera staticUICamera;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxUICanvasDistance;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform cameraRoot;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform rigRoot;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public Transform origRigRoot;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public List<OXR_GhostHand> hands;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E794", Offset = "0xB1E794")]
	[SerializeField]
	private List<GameObject> interactionGameObjects;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public OXRBlackBackgroundBox blackBackgroundBox;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public OXR_CanvasTarget defaultTarget;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E800", Offset = "0xB1E800")]
	[SerializeField]
	public bool useCameraSettingsOverride;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public CameraSettings cameraOverrideSettings;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CameraSettings cameraOriginalSettings;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1E85C", Offset = "0xB1E85C")]
	private bool <IsInteractionEnabled>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VR_BackpackInventory backpack;

	[NonSerialized]
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E86C", Offset = "0xB1E86C")]
	private Camera _overrideCamera;

	[NonSerialized]
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<OXR_CanvasTarget> canvasTargets;

	[Token(Token = "0x1700006D")]
	public Camera currentCamera
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x276BEC4", Offset = "0x276BEC4", VA = "0x276BEC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public Camera currentOverride
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x277065C", Offset = "0x277065C", VA = "0x277065C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006F")]
	public bool IsInteractionEnabled
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x2770664", Offset = "0x2770664", VA = "0x2770664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DCD0", Offset = "0xB2DCD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x277066C", Offset = "0x277066C", VA = "0x277066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DCE0", Offset = "0xB2DCE0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public int layer2D
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x2767B1C", Offset = "0x2767B1C", VA = "0x2767B1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000071")]
	public int layer3D
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x2770678", Offset = "0x2770678", VA = "0x2770678")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000072")]
	public Transform CameraRoot
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x27706C0", Offset = "0x27706C0", VA = "0x27706C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public Transform RigRoot
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x27706C8", Offset = "0x27706C8", VA = "0x27706C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x27706D0", Offset = "0x27706D0", VA = "0x27706D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x2770884", Offset = "0x2770884", VA = "0x2770884")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x277088C", Offset = "0x277088C", VA = "0x277088C")]
	private void ToggleInteraction(bool flag)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x27709D0", Offset = "0x27709D0", VA = "0x27709D0")]
	public void Init()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x2770758", Offset = "0x2770758", VA = "0x2770758")]
	public void SetHandsActive(bool active)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x2770DC4", Offset = "0x2770DC4", VA = "0x2770DC4")]
	public void FadeHandsActive(bool active, float fadeDuration)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x2767B64", Offset = "0x2767B64", VA = "0x2767B64")]
	internal void HandTo2D()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x2767F48", Offset = "0x2767F48", VA = "0x2767F48")]
	internal void HandTo3D()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x2770F00", Offset = "0x2770F00", VA = "0x2770F00")]
	public void EnableOverride(Camera cam)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x2770D68", Offset = "0x2770D68", VA = "0x2770D68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DCF0", Offset = "0xB2DCF0")]
	private IEnumerator SetOculusColorSpace()
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x2770FD4", Offset = "0x2770FD4", VA = "0x2770FD4")]
	public void DisableOverride()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x27710C8", Offset = "0x27710C8", VA = "0x27710C8")]
	public void DisableOverride(Camera cam)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x276F2EC", Offset = "0x276F2EC", VA = "0x276F2EC")]
	public Vector3 TransformPosition(Vector3 position, bool useMaxDistance = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x27712DC", Offset = "0x27712DC", VA = "0x27712DC")]
	public Vector3 InverseTransformPosition(Vector3 position, bool useMaxDistance = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x277115C", Offset = "0x277115C", VA = "0x277115C")]
	private static Vector3 TransformPosition(Camera fromCamera, Camera toCamera, Vector3 position, bool useMaxDistance, float maxUICanvasDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x276FE68", Offset = "0x276FE68", VA = "0x276FE68")]
	public Quaternion TransformRotation(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x27714D0", Offset = "0x27714D0", VA = "0x27714D0")]
	public Quaternion InverseTransformRotation(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x2771344", Offset = "0x2771344", VA = "0x2771344")]
	private static Quaternion TransformRotation(Camera fromCamera, Camera toCamera, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x2771528", Offset = "0x2771528", VA = "0x2771528")]
	public OXR_Rig()
	{
	}
}
[Token(Token = "0x200011E")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB17F80", Offset = "0xB17F80")]
public class OXR_RigOverride : OXRBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E8A4", Offset = "0xB1E8A4")]
	public Camera camera;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setupTracking;

	[Token(Token = "0x17000076")]
	private OXR_Rig staticRig
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x27715C0", Offset = "0x27715C0", VA = "0x27715C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x277160C", Offset = "0x277160C", VA = "0x277160C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x2771680", Offset = "0x2771680", VA = "0x2771680")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x2771AE4", Offset = "0x2771AE4", VA = "0x2771AE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x2771B48", Offset = "0x2771B48", VA = "0x2771B48")]
	public OXR_RigOverride()
	{
	}
}
[Token(Token = "0x200011F")]
public class OXR_ScreenBasedScaler : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E8DC", Offset = "0xB1E8DC")]
	public float ReferenceDistance;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E914", Offset = "0xB1E914")]
	public float ReferenceScale;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E94C", Offset = "0xB1E94C")]
	public float ScaleMultiplier;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x2772138", Offset = "0x2772138", VA = "0x2772138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x2772254", Offset = "0x2772254", VA = "0x2772254")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x277213C", Offset = "0x277213C", VA = "0x277213C")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x2772258", Offset = "0x2772258", VA = "0x2772258")]
	public OXR_ScreenBasedScaler()
	{
	}
}
[Token(Token = "0x2000120")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17FB8", Offset = "0xB17FB8")]
public class OXR_Switch : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E984", Offset = "0xB1E984")]
	public UnityEvent vrEnabled;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent vrDisabled;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1E9BC", Offset = "0xB1E9BC")]
	public List<GameObject> enableOnNonVR;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> disableOnNonVR;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> enableOnVR;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> disableOnVR;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x27728F0", Offset = "0x27728F0", VA = "0x27728F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x2772D48", Offset = "0x2772D48", VA = "0x2772D48")]
	public OXR_Switch()
	{
	}
}
[Token(Token = "0x2000121")]
public class OXR_TransformToSpace : MonoBehaviour
{
	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SourceTransform;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1E9F4", Offset = "0xB1E9F4")]
	private bool rigToWorld;

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x2772D50", Offset = "0x2772D50", VA = "0x2772D50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x2772DD4", Offset = "0x2772DD4", VA = "0x2772DD4")]
	private void TransformToSpace()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x2773054", Offset = "0x2773054", VA = "0x2773054")]
	private void TransformFromWorldToRig(out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x2772F24", Offset = "0x2772F24", VA = "0x2772F24")]
	private void TransformFromRigToWorld(out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x2773174", Offset = "0x2773174", VA = "0x2773174")]
	public OXR_TransformToSpace()
	{
	}
}
[Token(Token = "0x2000122")]
public static class OXR_Utils
{
	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x2773458", Offset = "0x2773458", VA = "0x2773458")]
	public static void MakeCameraTrackableAtCurrentPosition(RegisteredCamera RegisteredMainCamera)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x2771704", Offset = "0x2771704", VA = "0x2771704")]
	public static void MakeCameraTrackableAtCurrentPosition(Transform cameraTransform)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x2773478", Offset = "0x2773478", VA = "0x2773478")]
	public static bool UIInteractableMarkerController_Display(UIInteractableMarkerController caller, ref OXR_InteractableCanvas xrTransform, Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x276BAC0", Offset = "0x276BAC0", VA = "0x276BAC0")]
	public static void ForceLayer(GameObject go, int layer, bool includeInactive = false)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x27735C4", Offset = "0x27735C4", VA = "0x27735C4")]
	public static HVRUIPointer GetHandPointerForPressedObject(GameObject pressedObject)
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x2773818", Offset = "0x2773818", VA = "0x2773818")]
	public static HVRHandGrabber GetHandGrabberFromPointer(HVRUIPointer uiPointer)
	{
		return null;
	}
}
[Token(Token = "0x2000123")]
public class EnableDisableLogger : MonoBehaviour
{
	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x112D0B8", Offset = "0x112D0B8", VA = "0x112D0B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x112D168", Offset = "0x112D168", VA = "0x112D168")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x112D218", Offset = "0x112D218", VA = "0x112D218")]
	public EnableDisableLogger()
	{
	}
}
[Token(Token = "0x2000124")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17FCC", Offset = "0xB17FCC")]
public class OXR_RIgMover : MonoBehaviour
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool moveRigToOverrideCams;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rigRoot;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Transform origRigRoot;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x276F6C0", Offset = "0x276F6C0", VA = "0x276F6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x276F8B0", Offset = "0x276F8B0", VA = "0x276F8B0")]
	public OXR_RIgMover()
	{
	}
}
[Token(Token = "0x2000125")]
public class OXR_UI : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	public const int CompareFunctionInt = 8;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int zTestID;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> UIMaterials;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x277317C", Offset = "0x277317C", VA = "0x277317C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x2773368", Offset = "0x2773368", VA = "0x2773368")]
	public OXR_UI()
	{
	}
}
[Token(Token = "0x2000126")]
public class OXR_XRController : ActionBasedController
{
	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x2773AB4", Offset = "0x2773AB4", VA = "0x2773AB4")]
	private new void Update()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x2773AB8", Offset = "0x2773AB8", VA = "0x2773AB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x2773AC0", Offset = "0x2773AC0", VA = "0x2773AC0")]
	public OXR_XRController()
	{
	}
}
[Token(Token = "0x2000127")]
public class TestLoadSceneSet : MonoBehaviour
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneSet sceneSet;

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xDB2F4C", Offset = "0xDB2F4C", VA = "0xDB2F4C")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xDB3000", Offset = "0xDB3000", VA = "0xDB3000")]
	public TestLoadSceneSet()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class HierarchyReference : HierarchyReferenceBase<Transform>
{
	[Token(Token = "0x6000500")]
	[Address(RVA = "0x25F8278", Offset = "0x25F8278", VA = "0x25F8278")]
	public HierarchyReference()
	{
	}
}
[Serializable]
[Token(Token = "0x2000129")]
public class HierarchyReferenceBase<T> where T : Component
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T transformReference;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string hierarchyPath;

	[Token(Token = "0x17000077")]
	public bool hasReference
	{
		[Token(Token = "0x6000501")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	public bool hasPath
	{
		[Token(Token = "0x6000502")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000503")]
	public void FindReference()
	{
	}

	[Token(Token = "0x6000504")]
	public void SetTransform(T t)
	{
	}

	[Token(Token = "0x6000505")]
	private void FindPath()
	{
	}

	[Token(Token = "0x6000506")]
	public HierarchyReferenceBase()
	{
	}
}
[Serializable]
[Token(Token = "0x200012A")]
public class OXR_Canvas_Setup
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OXR_Canvas targetOXRCanvasComponent;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HierarchyReference reference;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool makeNonRaycastable;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x276C110", Offset = "0x276C110", VA = "0x276C110")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x276C260", Offset = "0x276C260", VA = "0x276C260")]
	public OXR_Canvas_Setup()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17FE0", Offset = "0xB17FE0")]
public class OXR_SceneSetup : OXRBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EA70", Offset = "0xB1EA70")]
	public List<OXR_Canvas_Setup> canvasSetups;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EAA8", Offset = "0xB1EAA8")]
	public List<HierarchyReference> only2D;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<HierarchyReference> onlyVR;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x2771B58", Offset = "0x2771B58", VA = "0x2771B58")]
	private void FindReferencesNow()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x2771B64", Offset = "0x2771B64", VA = "0x2771B64", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x2771B70", Offset = "0x2771B70", VA = "0x2771B70")]
	public void ProcessAsset(RuntimeConfig config)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x2771BCC", Offset = "0x2771BCC", VA = "0x2771BCC")]
	private void ProcessList(List<HierarchyReference> list, bool listEnabled, bool forceRemove)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x2771F04", Offset = "0x2771F04", VA = "0x2771F04")]
	private void Start()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x2771F10", Offset = "0x2771F10", VA = "0x2771F10", Slot = "5")]
	protected override void OnVRDisabled()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x2770330", Offset = "0x2770330", VA = "0x2770330", Slot = "6")]
	protected virtual void FindReferences()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x2771F1C", Offset = "0x2771F1C", VA = "0x2771F1C")]
	private void SetupCanvases()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x2770654", Offset = "0x2770654", VA = "0x2770654")]
	public OXR_SceneSetup()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB17FF4", Offset = "0xB17FF4")]
public class OXR_Setup_GameScene : OXR_SceneSetup
{
	[Serializable]
	[Token(Token = "0x200012D")]
	public class UIManagerFindableReference : TypeSpecificFindableReference<UIManager>
	{
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xD9B1F4", Offset = "0xD9B1F4", VA = "0xD9B1F4")]
		public UIManagerFindableReference()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200012E")]
	public class UIInteractableControllerFindableReference : TypeSpecificFindableReference<UIInteractableController>
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xD9B1A8", Offset = "0xD9B1A8", VA = "0xD9B1A8")]
		public UIInteractableControllerFindableReference()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200012F")]
	public class CheatsControllerFindableReference : TypeSpecificFindableReference<GameplayCheatsController>
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xD9B15C", Offset = "0xD9B15C", VA = "0xD9B15C")]
		public CheatsControllerFindableReference()
		{
		}
	}

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EAE0", Offset = "0xB1EAE0")]
	public Transform interactionMarkerContainer;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OXR_InteractableCanvas xrMarkerPrefab;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EB18", Offset = "0xB1EB18")]
	public UIManagerFindableReference uiManagerRef;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIInteractableControllerFindableReference uiInteractableControllerRef;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CheatsControllerFindableReference cheatsControllerRef;

	[Token(Token = "0x17000079")]
	public UIManager uiManager
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x2772270", Offset = "0x2772270", VA = "0x2772270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007A")]
	public UIInteractableController uiInteractableController
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x27722C4", Offset = "0x27722C4", VA = "0x27722C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public GameplayCheatsController cheatsController
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x2772318", Offset = "0x2772318", VA = "0x2772318")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x277236C", Offset = "0x277236C", VA = "0x277236C", Slot = "6")]
	protected override void FindReferences()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x2772470", Offset = "0x2772470", VA = "0x2772470")]
	public void OpenPauseMenu()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x2772490", Offset = "0x2772490", VA = "0x2772490")]
	public void SkipNode()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x27724B0", Offset = "0x27724B0", VA = "0x27724B0")]
	public void FastForward()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x27724D0", Offset = "0x27724D0", VA = "0x27724D0")]
	public OXR_Setup_GameScene()
	{
	}
}
[Serializable]
[Token(Token = "0x2000130")]
public abstract class TypeSpecificFindableReference<T> where T : MonoBehaviour
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T _reference;

	[Token(Token = "0x1700007C")]
	public T reference
	{
		[Token(Token = "0x600051D")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051E")]
	public void Find()
	{
	}

	[Token(Token = "0x600051F")]
	protected TypeSpecificFindableReference()
	{
	}
}
[Token(Token = "0x2000131")]
public class VR_GrabbedItemReferenceHolder : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HVRHandGrabber leftHand;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HVRHandGrabber rightHand;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xF38388", Offset = "0xF38388", VA = "0xF38388")]
	public GameObject GetLeftHandGrabbedObject()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xF38468", Offset = "0xF38468", VA = "0xF38468")]
	public GameObject GetRightHandGrabbedObject()
	{
		return null;
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xF38548", Offset = "0xF38548", VA = "0xF38548")]
	public bool IsGrabbingAnything()
	{
		return default(bool);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xF386C8", Offset = "0xF386C8", VA = "0xF386C8")]
	public VR_GrabbedItemReferenceHolder()
	{
	}
}
[Token(Token = "0x2000132")]
public class VR_HandTrackingInfoStorer : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRHand leftHand;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRHand rightHand;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xF38C34", Offset = "0xF38C34", VA = "0xF38C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xF38CE8", Offset = "0xF38CE8", VA = "0xF38CE8")]
	public VR_HandTrackingInfoStorer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000133")]
public class InputQueryConfig
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private InputActionReference actionReference;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action registeredCallback;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1279DE8", Offset = "0x1279DE8", VA = "0x1279DE8")]
	public void Register(Action registeredCallback)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1279EA4", Offset = "0x1279EA4", VA = "0x1279EA4")]
	private void OnActionPerformed(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1279F94", Offset = "0x1279F94", VA = "0x1279F94")]
	public InputQueryConfig()
	{
	}
}
[Token(Token = "0x2000134")]
public class OXR_InputQuery : MonoBehaviour
{
	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionReference actionReference;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onActionPerformed;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onActionCanceled;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x276EA38", Offset = "0x276EA38", VA = "0x276EA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x276EB58", Offset = "0x276EB58", VA = "0x276EB58")]
	private void OnActionPerformed(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x276EC48", Offset = "0x276EC48", VA = "0x276EC48")]
	private void OnActionCanceled(InputAction.CallbackContext ctx)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x276ED38", Offset = "0x276ED38", VA = "0x276ED38")]
	public OXR_InputQuery()
	{
	}
}
namespace HoverCab
{
	[Token(Token = "0x2000135")]
	[ExecuteAlways]
	public class PrefabInstance : MonoBehaviour
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _instance;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 localPosition;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 localRotation;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 localScale;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool useCustomTransform;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool instance_when_play;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool only_in_editor;

		[Token(Token = "0x1700007D")]
		public GameObject instance
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x2788570", Offset = "0x2788570", VA = "0x2788570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x2788578", Offset = "0x2788578", VA = "0x2788578")]
		private static void BakeCake()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x27886D4", Offset = "0x27886D4", VA = "0x27886D4")]
		public static void BakeInstance(PrefabInstance pi)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x27889E4", Offset = "0x27889E4", VA = "0x27889E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x27889FC", Offset = "0x27889FC", VA = "0x27889FC")]
		public PrefabInstance()
		{
		}
	}
}
namespace MadAboutPandas
{
	[Token(Token = "0x2000136")]
	public enum LocaKeyType
	{
		[Token(Token = "0x40005F2")]
		Default,
		[Token(Token = "0x40005F3")]
		Interactable,
		[Token(Token = "0x40005F4")]
		Interaction,
		[Token(Token = "0x40005F5")]
		DriverSpeech
	}
	[Token(Token = "0x2000137")]
	public struct LocaKey
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocaKeyType type;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string key;

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xEB4EF0", Offset = "0xEB4EF0", VA = "0xEB4EF0")]
		public LocaKey(LocaKeyType type, string key)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xEB4F00", Offset = "0xEB4F00", VA = "0xEB4F00")]
		public static LocaKey Create(string k)
		{
			return default(LocaKey);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xEABD10", Offset = "0xEABD10", VA = "0xEABD10")]
		public static LocaKey Interactable(string k)
		{
			return default(LocaKey);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xEA9ECC", Offset = "0xEA9ECC", VA = "0xEA9ECC")]
		public static LocaKey Interaction(string k)
		{
			return default(LocaKey);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xEB4F30", Offset = "0xEB4F30", VA = "0xEB4F30")]
		public static LocaKey DriverSpeech(string k)
		{
			return default(LocaKey);
		}
	}
	[Token(Token = "0x2000138")]
	public class LocalizationKeyUtils
	{
		[Serializable]
		[Token(Token = "0x2000139")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18018", Offset = "0xB18018")]
		private sealed class <>c
		{
			[Token(Token = "0x40005F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40005F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x600053A")]
			[Address(RVA = "0xF1DA84", Offset = "0xF1DA84", VA = "0xF1DA84")]
			public <>c()
			{
			}

			[Token(Token = "0x600053B")]
			[Address(RVA = "0xF1DA8C", Offset = "0xF1DA8C", VA = "0xF1DA8C")]
			internal bool <IsValidKey>b__0_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xEB4F68", Offset = "0xEB4F68", VA = "0xEB4F68")]
		public static bool IsValidKey(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xEB50A8", Offset = "0xEB50A8", VA = "0xEB50A8")]
		public LocalizationKeyUtils()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class DriverSpeechTranslationUtils
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1128BE0", Offset = "0x1128BE0", VA = "0x1128BE0")]
		public static string ValidateKey(string key)
		{
			return null;
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1128DC4", Offset = "0x1128DC4", VA = "0x1128DC4")]
		public static string GetTranslationFromKey(string key)
		{
			return null;
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1128F78", Offset = "0x1128F78", VA = "0x1128F78")]
		public DriverSpeechTranslationUtils()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class TranslationUtils
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xDB50C4", Offset = "0xDB50C4", VA = "0xDB50C4")]
		public static bool HasTranslate(string key, bool throwError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xDB51C8", Offset = "0xDB51C8", VA = "0xDB51C8")]
		public static string Translate(string key, bool throwError = true, int maxCharacters = 0, bool applyRTLFix = true)
		{
			return null;
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xDB5558", Offset = "0xDB5558", VA = "0xDB5558")]
		public static bool TranslateLTR(string key, out string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xDB53E8", Offset = "0xDB53E8", VA = "0xDB53E8")]
		public static bool TranslateRTL(string key, out string value, int maxCharacters = 0, bool applyRTLFix = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000543")]
		public static string Translate1<T>(string key, T replacement, bool throwError = true, int maxCharacters = 0, bool applyRTLFix = true)
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		private static string TranslateLTR1<T>(string key, T replacement, bool throwError, bool applyRTLFix = true)
		{
			return null;
		}

		[Token(Token = "0x6000545")]
		private static string TranslateRTL1<T>(string key, T replacement, bool throwError = true, int maxCharacters = 0, bool applyRTLFix = true)
		{
			return null;
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xDB55F4", Offset = "0xDB55F4", VA = "0xDB55F4")]
		public TranslationUtils()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class UnusedTranslationUtils
	{
		[Token(Token = "0x6000547")]
		public static string Translate2<T>(string key, T replacement1, T replacement2, bool throwError = true)
		{
			return null;
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xF36B74", Offset = "0xF36B74", VA = "0xF36B74")]
		public UnusedTranslationUtils()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class BuildTimeGameObject : MonoBehaviour, IBuildSceneCallback
	{
		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HitchHiker.Platform _targetPlatforms;

		[Token(Token = "0x1700007E")]
		public HitchHiker.Platform TargetPlatforms
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0x103D0F0", Offset = "0x103D0F0", VA = "0x103D0F0")]
			get
			{
				return default(HitchHiker.Platform);
			}
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x103D0F8", Offset = "0x103D0F8", VA = "0x103D0F8", Slot = "4")]
		public void ProcessAsset()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x103D190", Offset = "0x103D190", VA = "0x103D190")]
		public BuildTimeGameObject()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public interface IBuildSceneCallback
	{
		[Token(Token = "0x600054C")]
		void ProcessAsset();
	}
	[Token(Token = "0x200013F")]
	public interface ISceneEditStateCallback
	{
		[Token(Token = "0x600054D")]
		void OnExitEditState();

		[Token(Token = "0x600054E")]
		void OnEnterEditState();
	}
	[Token(Token = "0x2000140")]
	public enum XRForceMode
	{
		[Token(Token = "0x40005FC")]
		None,
		[Token(Token = "0x40005FD")]
		Enabled,
		[Token(Token = "0x40005FE")]
		Disabled
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18028", Offset = "0xB18028")]
	public class RuntimeConfig : ScriptableObject
	{
		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRForceMode forceVRmode;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OVRPlugin.ColorSpace oculusColorSpace;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RuntimeConfig staticInstance;

		[Token(Token = "0x1700007F")]
		public bool supportsVR
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0xECC73C", Offset = "0xECC73C", VA = "0xECC73C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xECC79C", Offset = "0xECC79C", VA = "0xECC79C")]
		public static RuntimeConfig GetStaticConfig()
		{
			return null;
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xECC7E8", Offset = "0xECC7E8", VA = "0xECC7E8")]
		private static void FindAndSetStaticInstance()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xECC7EC", Offset = "0xECC7EC", VA = "0xECC7EC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xECC840", Offset = "0xECC840", VA = "0xECC840")]
		public RuntimeConfig()
		{
		}
	}
}
namespace KunstStoff
{
	[Token(Token = "0x2000142")]
	public class AutoInvokeOnTarget : MonoBehaviour
	{
		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEvent onVR;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public UnityEvent onNotVR;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UnityEvent onStandalone;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UnityEvent onAndroid;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public UnityEvent onOSX;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public UnityEvent onIOS;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public UnityEvent onAppleTV;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public UnityEvent onSwitch;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public UnityEvent onPS4;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public UnityEvent onXboxOne;

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x103B0F4", Offset = "0x103B0F4", VA = "0x103B0F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x103B174", Offset = "0x103B174", VA = "0x103B174")]
		public AutoInvokeOnTarget()
		{
		}
	}
}
namespace KunstStoff.Services
{
	[Token(Token = "0x2000143")]
	public class LocalizationService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EC80", Offset = "0xB1EC80")]
		[SerializeField]
		public string interactableKeyPrefix;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string videoQualityKeyPrefix;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public string videoRenderResolutionKeyPrefix;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public string languageNameKeyPrefix;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string displayNameKey;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1ED0C", Offset = "0xB1ED0C")]
		[SerializeField]
		private TextMeshFontProvider fontChangeProvider;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CultureCodeProvider cultureCodeProvider;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string[] incorrectlyReversedLanguages;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1ED78", Offset = "0xB1ED78")]
		public bool forceEnglish;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1EDC4", Offset = "0xB1EDC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EDC4", Offset = "0xB1EDC4")]
		public string overwriteLanguage;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1EE24", Offset = "0xB1EE24")]
		public string overwritePlatform;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool showKeys;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool showKeysOnError;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool showValuesTwice;

		[Token(Token = "0x17000080")]
		public float CurrentTextMeshScale
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0xEB50B0", Offset = "0xEB50B0", VA = "0xEB50B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000081")]
		public bool HasFontLoaded
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xEB50CC", Offset = "0xEB50CC", VA = "0xEB50CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		public override string Name
		{
			[Token(Token = "0x600055A")]
			[Address(RVA = "0xEB50F8", Offset = "0xEB50F8", VA = "0xEB50F8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xEB50E8", Offset = "0xEB50E8", VA = "0xEB50E8")]
		public static string ValidateKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xEB50F0", Offset = "0xEB50F0", VA = "0xEB50F0")]
		public static string GetTranslationFromKey(string key)
		{
			return null;
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xEB513C", Offset = "0xEB513C", VA = "0xEB513C", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xEB593C", Offset = "0xEB593C", VA = "0xEB593C", Slot = "14")]
		public override void AfterAllInitialized()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xEB5B70", Offset = "0xEB5B70", VA = "0xEB5B70", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xEB5B74", Offset = "0xEB5B74", VA = "0xEB5B74")]
		public void SetLanguage(string language)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xEB5BFC", Offset = "0xEB5BFC", VA = "0xEB5BFC")]
		public void SetLanguageCode(string languageCode)
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xEB5C78", Offset = "0xEB5C78", VA = "0xEB5C78")]
		public string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xEB5CD4", Offset = "0xEB5CD4", VA = "0xEB5CD4")]
		public string GetLanguageCode()
		{
			return null;
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xEAE518", Offset = "0xEAE518", VA = "0xEAE518")]
		public bool HasTranslate(string key, bool throwError = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xEAE50C", Offset = "0xEAE50C", VA = "0xEAE50C")]
		public string BuildInteractableKey(string interactableLocaKey)
		{
			return null;
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xEB5D30", Offset = "0xEB5D30", VA = "0xEB5D30")]
		public string BuildVideoQualityKey(string videoQuality)
		{
			return null;
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xEB5D3C", Offset = "0xEB5D3C", VA = "0xEB5D3C")]
		public string BuildVideoRenderResolutionKey(string renderResolution)
		{
			return null;
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xEB5D48", Offset = "0xEB5D48", VA = "0xEB5D48")]
		public string BuildLanguageNameKey(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xEB5D54", Offset = "0xEB5D54", VA = "0xEB5D54")]
		public string BuildDisplayName(int displayNumber)
		{
			return null;
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xEB5DFC", Offset = "0xEB5DFC", VA = "0xEB5DFC")]
		public string GetLocaKeyString(LocaKey locaKey)
		{
			return null;
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xEB5E20", Offset = "0xEB5E20", VA = "0xEB5E20")]
		public bool HasTranslation(LocaKey locaKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xEB5E5C", Offset = "0xEB5E5C", VA = "0xEB5E5C")]
		public string Translate(LocaKey locaKey)
		{
			return null;
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xEB5EA0", Offset = "0xEB5EA0", VA = "0xEB5EA0")]
		public string TranslateWithFallback(LocaKey locaKey, string fallback)
		{
			return null;
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xEAE52C", Offset = "0xEAE52C", VA = "0xEAE52C")]
		public string Translate(string key)
		{
			return null;
		}

		[Token(Token = "0x600056D")]
		public string Translate1<T>(string key, T replacement, bool throwError = true, int maxCharacters = 0, bool applyRTLFix = true)
		{
			return null;
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xEB5EF8", Offset = "0xEB5EF8", VA = "0xEB5EF8")]
		public string Concat(string first, string second, string connector = " ", int maxCharacters = 0)
		{
			return null;
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xEAAB74", Offset = "0xEAAB74", VA = "0xEAAB74")]
		public void SetTextMeshTextByLocalize(Localize localize, TMP_Text textMesh, [Optional] UIScalableTextLayoutGroup layoutGroup)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xEB5FF4", Offset = "0xEB5FF4", VA = "0xEB5FF4")]
		public void SetTextMeshTextByKey(string key, TMP_Text textMesh, [Optional] UIScalableTextLayoutGroup layoutGroup)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xEB6050", Offset = "0xEB6050", VA = "0xEB6050")]
		public void SetTextMeshText(string text, TMP_Text textMesh, [Optional] UIScalableTextLayoutGroup layoutGroup, bool forceLTR = false)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xEB6308", Offset = "0xEB6308", VA = "0xEB6308")]
		public string LocalizeDateTime(DateTime dateTime, out bool calendarFound, string format = "U")
		{
			return null;
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xEB6478", Offset = "0xEB6478", VA = "0xEB6478")]
		public string LocalizeDateTime(DateTime dateTime, string format = "U")
		{
			return null;
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xEB64A0", Offset = "0xEB64A0", VA = "0xEB64A0")]
		public void SetTextMeshTextByDate(DateTime dateTime, TMP_Text textMesh, [Optional] UIScalableTextLayoutGroup layoutGroup, string format = "U")
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xEB64FC", Offset = "0xEB64FC", VA = "0xEB64FC")]
		public bool IsIncorrectlyReversedLanguage(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xEB62A8", Offset = "0xEB62A8", VA = "0xEB62A8")]
		private string SwapUnicodeChars(string text, char a, char b)
		{
			return null;
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xEB5AC8", Offset = "0xEB5AC8", VA = "0xEB5AC8")]
		private void UpdateCurrentTextMeshFont()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xEB57A0", Offset = "0xEB57A0", VA = "0xEB57A0")]
		private void UpdateCurrentCulture([Optional] string targetLanguage)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xEB6558", Offset = "0xEB6558", VA = "0xEB6558")]
		private void UpdateFontSizeSettingsAfterLanguageChange()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xEB6674", Offset = "0xEB6674", VA = "0xEB6674")]
		public LocalizationService()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xEB6930", Offset = "0xEB6930", VA = "0xEB6930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DDA0", Offset = "0xB2DDA0")]
		private void <AfterAllInitialized>b__23_0(SceneManagementService service)
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18090", Offset = "0xB18090")]
	public class TextMeshFontProvider : ScriptableObject
	{
		[Token(Token = "0x2000145")]
		public struct TextMeshFontRestoreCache
		{
			[Token(Token = "0x4000621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TMP_FontAsset originalFont;

			[Token(Token = "0x4000622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TextAlignmentOptions originalAlignment;
		}

		[Serializable]
		[Token(Token = "0x2000146")]
		public struct LanguageFont
		{
			[Token(Token = "0x4000623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string languageCode;

			[Token(Token = "0x4000624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string resourcePath;

			[Token(Token = "0x4000625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;
		}

		[Token(Token = "0x2000147")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB180F8", Offset = "0xB180F8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshFontProvider <>4__this;

			[Token(Token = "0x4000627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageFont font;

			[Token(Token = "0x4000628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ResourceRequest request;

			[Token(Token = "0x6000588")]
			[Address(RVA = "0xDA5440", Offset = "0xDA5440", VA = "0xDA5440")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000589")]
			[Address(RVA = "0xDA5448", Offset = "0xDA5448", VA = "0xDA5448")]
			internal void <LoadFontAssetAsync>b__0(AsyncOperation op)
			{
			}
		}

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EE5C", Offset = "0xB1EE5C")]
		public string _defaultTextMeshFontPath;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public LanguageFont[] _languageSpecificFonts;

		[NonSerialized]
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<TMP_Text, TextMeshFontRestoreCache> _textMeshFontRestoreCache;

		[NonSerialized]
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_FontAsset _currentTextMeshFont;

		[NonSerialized]
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _currentTextMeshLanguageCode;

		[NonSerialized]
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _currentTextMeshScale;

		[NonSerialized]
		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool HasFontLoaded;

		[Token(Token = "0x17000083")]
		public float CurrentTextMeshScale
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xDB3DA8", Offset = "0xDB3DA8", VA = "0xDB3DA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xDB3DB0", Offset = "0xDB3DB0", VA = "0xDB3DB0")]
		public bool IsCurrentLanguage(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xDB3DC4", Offset = "0xDB3DC4", VA = "0xDB3DC4")]
		public TMP_FontAsset GetCurrentFontAsset(TMP_Text textMesh)
		{
			return null;
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xDB3F50", Offset = "0xDB3F50", VA = "0xDB3F50")]
		public TextAlignmentOptions GetOriginalAligment(TMP_Text textMesh)
		{
			return default(TextAlignmentOptions);
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xDB3E84", Offset = "0xDB3E84", VA = "0xDB3E84")]
		public void UpdateCache(TMP_Text textMesh)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xDB3FBC", Offset = "0xDB3FBC", VA = "0xDB3FBC")]
		public void UpdateCurrentFont(string languageCode)
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xDB43DC", Offset = "0xDB43DC", VA = "0xDB43DC")]
		public void ClearTextMeshFontRestoreCache()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xDB4188", Offset = "0xDB4188", VA = "0xDB4188")]
		public LanguageFont FindFontByLanguageCode(string languageCode)
		{
			return default(LanguageFont);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xDB4430", Offset = "0xDB4430", VA = "0xDB4430")]
		public void LoadFontAssetAsync(LanguageFont font)
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xDB4288", Offset = "0xDB4288", VA = "0xDB4288")]
		public void LoadFontAssetAsCurrent(LanguageFont font)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xDB402C", Offset = "0xDB402C", VA = "0xDB402C")]
		public void UnloadCurrentFontAsset()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xDB4588", Offset = "0xDB4588", VA = "0xDB4588")]
		public TextMeshFontProvider()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class SceneManagementService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x2000149")]
		public enum LoadingState
		{
			[Token(Token = "0x4000639")]
			LoadingSingle,
			[Token(Token = "0x400063A")]
			LoadingAdditive,
			[Token(Token = "0x400063B")]
			Unloading,
			[Token(Token = "0x400063C")]
			Idle
		}

		[Token(Token = "0x200014A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18108", Offset = "0xB18108")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x400063D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneManagementService <>4__this;

			[Token(Token = "0x400063E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneSet sceneSet;

			[Token(Token = "0x600059A")]
			[Address(RVA = "0xD9F5F0", Offset = "0xD9F5F0", VA = "0xD9F5F0")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x600059B")]
			[Address(RVA = "0xD9F5F8", Offset = "0xD9F5F8", VA = "0xD9F5F8")]
			internal void <BeginUnloadAdditiveSceneSet>b__0()
			{
			}
		}

		[Token(Token = "0x200014B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18118", Offset = "0xB18118")]
		private sealed class <SetSceneActive>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400063F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneReference sceneReference;

			[Token(Token = "0x4000642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Scene <scene>5__2;

			[Token(Token = "0x17000088")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600059F")]
				[Address(RVA = "0xDA0088", Offset = "0xDA0088", VA = "0xDA0088", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000089")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005A1")]
				[Address(RVA = "0xDA00D0", Offset = "0xDA00D0", VA = "0xDA00D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600059C")]
			[Address(RVA = "0xD9FF58", Offset = "0xD9FF58", VA = "0xD9FF58")]
			[DebuggerHidden]
			public <SetSceneActive>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600059D")]
			[Address(RVA = "0xD9FF84", Offset = "0xD9FF84", VA = "0xD9FF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600059E")]
			[Address(RVA = "0xD9FF88", Offset = "0xD9FF88", VA = "0xD9FF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005A0")]
			[Address(RVA = "0xDA0090", Offset = "0xDA0090", VA = "0xDA0090", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200014C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18128", Offset = "0xB18128")]
		private sealed class <LoadSceneSetCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManagementService <>4__this;

			[Token(Token = "0x4000646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneSet sceneSet;

			[Token(Token = "0x4000647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool additive;

			[Token(Token = "0x4000648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool useLoadingScreen;

			[Token(Token = "0x4000649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool waitForActivation;

			[Token(Token = "0x400064A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncProgressReporter <progressReporter>5__2;

			[Token(Token = "0x400064B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncProgressReporter <subProgressReporter>5__3;

			[Token(Token = "0x1700008A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005A5")]
				[Address(RVA = "0xD9FF08", Offset = "0xD9FF08", VA = "0xD9FF08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005A7")]
				[Address(RVA = "0xD9FF50", Offset = "0xD9FF50", VA = "0xD9FF50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005A2")]
			[Address(RVA = "0xD9F844", Offset = "0xD9F844", VA = "0xD9F844")]
			[DebuggerHidden]
			public <LoadSceneSetCoroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60005A3")]
			[Address(RVA = "0xD9F870", Offset = "0xD9F870", VA = "0xD9F870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005A4")]
			[Address(RVA = "0xD9F874", Offset = "0xD9F874", VA = "0xD9F874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xD9FF10", Offset = "0xD9FF10", VA = "0xD9FF10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200014D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18138", Offset = "0xB18138")]
		private sealed class <LoadLoadingScreenScene>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400064C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400064D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400064E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSet sceneSet;

			[Token(Token = "0x400064F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneManagementService <>4__this;

			[Token(Token = "0x1700008C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005AB")]
				[Address(RVA = "0xD9F7F4", Offset = "0xD9F7F4", VA = "0xD9F7F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005AD")]
				[Address(RVA = "0xD9F83C", Offset = "0xD9F83C", VA = "0xD9F83C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005A8")]
			[Address(RVA = "0xD9F668", Offset = "0xD9F668", VA = "0xD9F668")]
			[DebuggerHidden]
			public <LoadLoadingScreenScene>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60005A9")]
			[Address(RVA = "0xD9F694", Offset = "0xD9F694", VA = "0xD9F694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005AA")]
			[Address(RVA = "0xD9F698", Offset = "0xD9F698", VA = "0xD9F698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005AC")]
			[Address(RVA = "0xD9F7FC", Offset = "0xD9F7FC", VA = "0xD9F7FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18148", Offset = "0xB18148")]
		private sealed class <>c
		{
			[Token(Token = "0x4000650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SceneSet> <>9__35_0;

			[Token(Token = "0x4000652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__35_1;

			[Token(Token = "0x4000653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<float> <>9__35_2;

			[Token(Token = "0x4000654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__35_3;

			[Token(Token = "0x60005AF")]
			[Address(RVA = "0xD9F5D8", Offset = "0xD9F5D8", VA = "0xD9F5D8")]
			public <>c()
			{
			}

			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xD9F5E0", Offset = "0xD9F5E0", VA = "0xD9F5E0")]
			internal void <.ctor>b__35_0(SceneSet <p0>)
			{
			}

			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xD9F5E4", Offset = "0xD9F5E4", VA = "0xD9F5E4")]
			internal void <.ctor>b__35_1()
			{
			}

			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xD9F5E8", Offset = "0xD9F5E8", VA = "0xD9F5E8")]
			internal void <.ctor>b__35_2(float <p0>)
			{
			}

			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xD9F5EC", Offset = "0xD9F5EC", VA = "0xD9F5EC")]
			internal void <.ctor>b__35_3()
			{
			}
		}

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SceneSet startSceneSet;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _skipWaitingForActivation;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SceneSet> onSceneSetAction;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action onStart;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<float> onProgress;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action onFinished;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<SceneSet> _loadedSceneSets;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Performance performance;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isLoadSceneOperationRunning;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EED8", Offset = "0xB1EED8")]
		private LoadingState <State>k__BackingField;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SceneSetLoadingUtils utils;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public WaitForSceneActivationHandler waitForSceneActivationHandler;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AsyncProgressReporter mainProgressReporter;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Func<IEnumerator> WaitForActivationInjectedCoroutine;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SceneReference currentLoadingScreen;

		[Token(Token = "0x17000084")]
		public bool skipWaitingForActivation
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xECFDE8", Offset = "0xECFDE8", VA = "0xECFDE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xECFDF0", Offset = "0xECFDF0", VA = "0xECFDF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public LoadingState State
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0xECFE14", Offset = "0xECFE14", VA = "0xECFE14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DDB0", Offset = "0xB2DDB0")]
			get
			{
				return default(LoadingState);
			}
			[Token(Token = "0x600058D")]
			[Address(RVA = "0xECFE1C", Offset = "0xECFE1C", VA = "0xECFE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DDC0", Offset = "0xB2DDC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public bool isIdle
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0xECFE24", Offset = "0xECFE24", VA = "0xECFE24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public override string Name
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0xECFE34", Offset = "0xECFE34", VA = "0xECFE34", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xECFE78", Offset = "0xECFE78", VA = "0xECFE78", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xECFE7C", Offset = "0xECFE7C", VA = "0xECFE7C", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xECFD2C", Offset = "0xECFD2C", VA = "0xECFD2C")]
		public void BeginLoadSceneSet(SceneSet sceneSet, bool waitForActivation = false, bool useLoadingScreen = true)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xED00DC", Offset = "0xED00DC", VA = "0xED00DC")]
		public void BeginLoadAdditiveSceneSet(SceneSet sceneSet)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xED0164", Offset = "0xED0164", VA = "0xED0164")]
		public void BeginUnloadAdditiveSceneSet(SceneSet sceneSet)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xED02F0", Offset = "0xED02F0", VA = "0xED02F0")]
		private static void UnloadUnusedResources()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xED02F8", Offset = "0xED02F8", VA = "0xED02F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DDD0", Offset = "0xB2DDD0")]
		private IEnumerator SetSceneActive(SceneReference sceneReference)
		{
			return null;
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xED001C", Offset = "0xED001C", VA = "0xED001C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DE30", Offset = "0xB2DE30")]
		private IEnumerator LoadSceneSetCoroutine(SceneSet sceneSet, bool additive, bool waitForActivation, bool useLoadingScreen = true)
		{
			return null;
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xED0370", Offset = "0xED0370", VA = "0xED0370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DE90", Offset = "0xB2DE90")]
		private IEnumerator LoadLoadingScreenScene(SceneSet sceneSet)
		{
			return null;
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xED0404", Offset = "0xED0404", VA = "0xED0404")]
		public SceneManagementService()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18158", Offset = "0xB18158")]
	public class SceneSet : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB181B8", Offset = "0xB181B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SceneSet> <>9__20_0;

			[Token(Token = "0x4000667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SceneSet> <>9__20_1;

			[Token(Token = "0x4000668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__20_2;

			[Token(Token = "0x4000669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__20_3;

			[Token(Token = "0x400066A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__20_4;

			[Token(Token = "0x400066B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__20_5;

			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xDA013C", Offset = "0xDA013C", VA = "0xDA013C")]
			public <>c()
			{
			}

			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xDA0144", Offset = "0xDA0144", VA = "0xDA0144")]
			internal void <.ctor>b__20_0(SceneSet <p0>)
			{
			}

			[Token(Token = "0x60005BB")]
			[Address(RVA = "0xDA0148", Offset = "0xDA0148", VA = "0xDA0148")]
			internal void <.ctor>b__20_1(SceneSet <p0>)
			{
			}

			[Token(Token = "0x60005BC")]
			[Address(RVA = "0xDA014C", Offset = "0xDA014C", VA = "0xDA014C")]
			internal void <.ctor>b__20_2()
			{
			}

			[Token(Token = "0x60005BD")]
			[Address(RVA = "0xDA0150", Offset = "0xDA0150", VA = "0xDA0150")]
			internal void <.ctor>b__20_3()
			{
			}

			[Token(Token = "0x60005BE")]
			[Address(RVA = "0xDA0154", Offset = "0xDA0154", VA = "0xDA0154")]
			internal void <.ctor>b__20_4()
			{
			}

			[Token(Token = "0x60005BF")]
			[Address(RVA = "0xDA0158", Offset = "0xDA0158", VA = "0xDA0158")]
			internal void <.ctor>b__20_5()
			{
			}
		}

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EEE8", Offset = "0xB1EEE8")]
		public string serializationName;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EF20", Offset = "0xB1EF20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EF20", Offset = "0xB1EF20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1EF20", Offset = "0xB1EF20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EF20", Offset = "0xB1EF20")]
		public int activeSceneIndex;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public SceneReference[] scenes;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public SceneReference loadSceneOverride;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1EFE4", Offset = "0xB1EFE4")]
		[SerializeField]
		[EventRef]
		public string musicSoundEvent;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public bool stopMusicOnUnload;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[EventRef]
		[SerializeField]
		public string ambienceSoundEvent;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public bool stopAmbienceOnUnload;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[BankRef]
		[SerializeField]
		public string[] rideBanks;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1F0D0", Offset = "0xB1F0D0")]
		public string[] rideVideos;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<SceneSet> onSceneSetUnloading;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<SceneSet> onSceneSetLoading;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Action onSceneSetUnloaded;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action onSceneSetLoaded;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action onSceneSetActivated;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action onSceneSetLoadingScreenLoaded;

		[Token(Token = "0x1700008E")]
		public int Count
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x11049C0", Offset = "0x11049C0", VA = "0x11049C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x11049DC", Offset = "0x11049DC", VA = "0x11049DC")]
		public bool HasValidActiveSceneIndex()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1104A10", Offset = "0x1104A10", VA = "0x1104A10")]
		public static bool IsValidSceneSet(SceneSet sceneSet)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1104AA4", Offset = "0x1104AA4", VA = "0x1104AA4")]
		public SceneSet()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class SceneSetLoadingUtils
	{
		[Token(Token = "0x2000152")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB181C8", Offset = "0xB181C8")]
		private sealed class <LoadNextSceneSet>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSet sceneSet;

			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AsyncProgressReporter progressReporter;

			[Token(Token = "0x4000671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneSetLoadingUtils <>4__this;

			[Token(Token = "0x4000672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WaitForSceneActivationHandler activationHandler;

			[Token(Token = "0x4000673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncProgressReporter <subProgressReporter>5__2;

			[Token(Token = "0x4000674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__3;

			[Token(Token = "0x1700008F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005CA")]
				[Address(RVA = "0xDA0390", Offset = "0xDA0390", VA = "0xDA0390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000090")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005CC")]
				[Address(RVA = "0xDA03D8", Offset = "0xDA03D8", VA = "0xDA03D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005C7")]
			[Address(RVA = "0xDA015C", Offset = "0xDA015C", VA = "0xDA015C")]
			[DebuggerHidden]
			public <LoadNextSceneSet>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60005C8")]
			[Address(RVA = "0xDA0188", Offset = "0xDA0188", VA = "0xDA0188", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005C9")]
			[Address(RVA = "0xDA018C", Offset = "0xDA018C", VA = "0xDA018C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xDA0398", Offset = "0xDA0398", VA = "0xDA0398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000153")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB181D8", Offset = "0xB181D8")]
		private sealed class <LoadSceneAdditive>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string filename;

			[Token(Token = "0x4000678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaitForSceneActivationHandler activationHandler;

			[Token(Token = "0x4000679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AsyncProgressReporter progressReporter;

			[Token(Token = "0x400067A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SceneSetLoadingUtils <>4__this;

			[Token(Token = "0x17000091")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005D0")]
				[Address(RVA = "0xDA0548", Offset = "0xDA0548", VA = "0xDA0548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000092")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005D2")]
				[Address(RVA = "0xDA0590", Offset = "0xDA0590", VA = "0xDA0590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005CD")]
			[Address(RVA = "0xDA03E0", Offset = "0xDA03E0", VA = "0xDA03E0")]
			[DebuggerHidden]
			public <LoadSceneAdditive>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60005CE")]
			[Address(RVA = "0xDA040C", Offset = "0xDA040C", VA = "0xDA040C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005CF")]
			[Address(RVA = "0xDA0410", Offset = "0xDA0410", VA = "0xDA0410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005D1")]
			[Address(RVA = "0xDA0550", Offset = "0xDA0550", VA = "0xDA0550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB181E8", Offset = "0xB181E8")]
		private sealed class <UnloadAllCurrentlyLoadedSceneSets>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400067B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400067C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400067D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SceneSet> loadedSceneSets;

			[Token(Token = "0x400067E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AsyncProgressReporter progressReporter;

			[Token(Token = "0x400067F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneSetLoadingUtils <>4__this;

			[Token(Token = "0x4000680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncProgressReporter <subProgressReporter>5__2;

			[Token(Token = "0x4000681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000093")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005D6")]
				[Address(RVA = "0xDA0A38", Offset = "0xDA0A38", VA = "0xDA0A38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000094")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005D8")]
				[Address(RVA = "0xDA0A80", Offset = "0xDA0A80", VA = "0xDA0A80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xDA0844", Offset = "0xDA0844", VA = "0xDA0844")]
			[DebuggerHidden]
			public <UnloadAllCurrentlyLoadedSceneSets>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xDA0870", Offset = "0xDA0870", VA = "0xDA0870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005D5")]
			[Address(RVA = "0xDA0874", Offset = "0xDA0874", VA = "0xDA0874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005D7")]
			[Address(RVA = "0xDA0A40", Offset = "0xDA0A40", VA = "0xDA0A40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000155")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB181F8", Offset = "0xB181F8")]
		private sealed class <UnloadAdditiveSceneSetCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SceneSet> loadedSceneSets;

			[Token(Token = "0x4000685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineDone;

			[Token(Token = "0x4000686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneSet sceneSet;

			[Token(Token = "0x4000687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SceneSetLoadingUtils <>4__this;

			[Token(Token = "0x4000688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AsyncProgressReporter progressReporter;

			[Token(Token = "0x4000689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <index>5__2;

			[Token(Token = "0x17000095")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005DC")]
				[Address(RVA = "0xDA07F4", Offset = "0xDA07F4", VA = "0xDA07F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000096")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005DE")]
				[Address(RVA = "0xDA083C", Offset = "0xDA083C", VA = "0xDA083C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005D9")]
			[Address(RVA = "0xDA0598", Offset = "0xDA0598", VA = "0xDA0598")]
			[DebuggerHidden]
			public <UnloadAdditiveSceneSetCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60005DA")]
			[Address(RVA = "0xDA05C4", Offset = "0xDA05C4", VA = "0xDA05C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005DB")]
			[Address(RVA = "0xDA05C8", Offset = "0xDA05C8", VA = "0xDA05C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005DD")]
			[Address(RVA = "0xDA07FC", Offset = "0xDA07FC", VA = "0xDA07FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000156")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18208", Offset = "0xB18208")]
		private sealed class <UnloadSceneSetCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400068A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400068B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSet sceneSet;

			[Token(Token = "0x400068D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AsyncProgressReporter progressReporter;

			[Token(Token = "0x400068E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneSetLoadingUtils <>4__this;

			[Token(Token = "0x400068F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncProgressReporter <subProgressReporter>5__2;

			[Token(Token = "0x4000690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000097")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005E2")]
				[Address(RVA = "0xDA0E1C", Offset = "0xDA0E1C", VA = "0xDA0E1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000098")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005E4")]
				[Address(RVA = "0xDA0E64", Offset = "0xDA0E64", VA = "0xDA0E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005DF")]
			[Address(RVA = "0xDA0C4C", Offset = "0xDA0C4C", VA = "0xDA0C4C")]
			[DebuggerHidden]
			public <UnloadSceneSetCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60005E0")]
			[Address(RVA = "0xDA0C78", Offset = "0xDA0C78", VA = "0xDA0C78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005E1")]
			[Address(RVA = "0xDA0C7C", Offset = "0xDA0C7C", VA = "0xDA0C7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xDA0E24", Offset = "0xDA0E24", VA = "0xDA0E24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000157")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18218", Offset = "0xB18218")]
		private sealed class <UnloadScene>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string filename;

			[Token(Token = "0x4000694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AsyncProgressReporter progressReporter;

			[Token(Token = "0x4000695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneSetLoadingUtils <>4__this;

			[Token(Token = "0x17000099")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005E8")]
				[Address(RVA = "0xDA0BFC", Offset = "0xDA0BFC", VA = "0xDA0BFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005EA")]
				[Address(RVA = "0xDA0C44", Offset = "0xDA0C44", VA = "0xDA0C44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005E5")]
			[Address(RVA = "0xDA0A88", Offset = "0xDA0A88", VA = "0xDA0A88")]
			[DebuggerHidden]
			public <UnloadScene>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60005E6")]
			[Address(RVA = "0xDA0AB4", Offset = "0xDA0AB4", VA = "0xDA0AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005E7")]
			[Address(RVA = "0xDA0AB8", Offset = "0xDA0AB8", VA = "0xDA0AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005E9")]
			[Address(RVA = "0xDA0C04", Offset = "0xDA0C04", VA = "0xDA0C04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MonoBehaviour coroutineStarter;

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1104F54", Offset = "0x1104F54", VA = "0x1104F54")]
		public SceneSetLoadingUtils(MonoBehaviour coroutineStarter)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1104F88", Offset = "0x1104F88", VA = "0x1104F88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DFE0", Offset = "0xB2DFE0")]
		public IEnumerator LoadNextSceneSet(SceneSet sceneSet, Performance performance, [Optional] WaitForSceneActivationHandler activationHandler, [Optional] AsyncProgressReporter progressReporter)
		{
			return null;
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x110504C", Offset = "0x110504C", VA = "0x110504C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E040", Offset = "0xB2E040")]
		public IEnumerator LoadSceneAdditive(string filename, [Optional] WaitForSceneActivationHandler activationHandler, [Optional] AsyncProgressReporter progressReporter)
		{
			return null;
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1105110", Offset = "0x1105110", VA = "0x1105110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E0A0", Offset = "0xB2E0A0")]
		public IEnumerator UnloadAllCurrentlyLoadedSceneSets(List<SceneSet> loadedSceneSets, AsyncProgressReporter progressReporter)
		{
			return null;
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x11051B8", Offset = "0x11051B8", VA = "0x11051B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E100", Offset = "0xB2E100")]
		public IEnumerator UnloadAdditiveSceneSetCoroutine(SceneSet sceneSet, List<SceneSet> loadedSceneSets, AsyncProgressReporter progressReporter, Action onCoroutineDone)
		{
			return null;
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1105290", Offset = "0x1105290", VA = "0x1105290")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E160", Offset = "0xB2E160")]
		public IEnumerator UnloadSceneSetCoroutine(SceneSet sceneSet, [Optional] AsyncProgressReporter progressReporter)
		{
			return null;
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1105338", Offset = "0x1105338", VA = "0x1105338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E1C0", Offset = "0xB2E1C0")]
		public IEnumerator UnloadScene(string filename, [Optional] AsyncProgressReporter progressReporter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000158")]
	public class WaitForSceneActivationHandler
	{
		[Token(Token = "0x2000159")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18228", Offset = "0xB18228")]
		private sealed class <WaitBeforeSceneActivation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400069A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400069B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitForSceneActivationHandler <>4__this;

			[Token(Token = "0x400069C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool waitForActivation;

			[Token(Token = "0x1700009B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005F4")]
				[Address(RVA = "0x2734D10", Offset = "0x2734D10", VA = "0x2734D10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005F6")]
				[Address(RVA = "0x2734D58", Offset = "0x2734D58", VA = "0x2734D58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x2734C0C", Offset = "0x2734C0C", VA = "0x2734C0C")]
			[DebuggerHidden]
			public <WaitBeforeSceneActivation>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x2734C38", Offset = "0x2734C38", VA = "0x2734C38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x2734C3C", Offset = "0x2734C3C", VA = "0x2734C3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x2734D18", Offset = "0x2734D18", VA = "0x2734D18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200015A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18238", Offset = "0xB18238")]
		private sealed class <ActivateLoadedSceneSet>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400069D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400069E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400069F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitForSceneActivationHandler <>4__this;

			[Token(Token = "0x40006A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneSet sceneSet;

			[Token(Token = "0x40006A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700009D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005FA")]
				[Address(RVA = "0x2734BBC", Offset = "0x2734BBC", VA = "0x2734BBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005FC")]
				[Address(RVA = "0x2734C04", Offset = "0x2734C04", VA = "0x2734C04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x2734A50", Offset = "0x2734A50", VA = "0x2734A50")]
			[DebuggerHidden]
			public <ActivateLoadedSceneSet>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60005F8")]
			[Address(RVA = "0x2734A7C", Offset = "0x2734A7C", VA = "0x2734A7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x2734A80", Offset = "0x2734A80", VA = "0x2734A80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x2734BC4", Offset = "0x2734BC4", VA = "0x2734BC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool waitForActivation;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AsyncOperation> asyncOperations;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool skipWaitingForActivation;

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x2744A4C", Offset = "0x2744A4C", VA = "0x2744A4C")]
		public void SkipWaitingForActivation(bool value)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x2744A58", Offset = "0x2744A58", VA = "0x2744A58")]
		public void RegisterAsyncOperation(AsyncOperation asyncOperation)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x2744AE8", Offset = "0x2744AE8", VA = "0x2744AE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E400", Offset = "0xB2E400")]
		public IEnumerator WaitBeforeSceneActivation(bool waitForActivation)
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x2744B74", Offset = "0x2744B74", VA = "0x2744B74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E460", Offset = "0xB2E460")]
		public IEnumerator ActivateLoadedSceneSet(SceneSet sceneSet, Performance performance)
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x2744C08", Offset = "0x2744C08", VA = "0x2744C08")]
		public void Clear()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x2744C5C", Offset = "0x2744C5C", VA = "0x2744C5C")]
		public WaitForSceneActivationHandler()
		{
		}
	}
}
namespace KunstStoff.Persistence
{
	[Serializable]
	[Token(Token = "0x200015B")]
	public class GameProgressCoord
	{
		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rideNum;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string checkPointName;

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xFD1128", Offset = "0xFD1128", VA = "0xFD1128")]
		public GameProgressCoord()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class GlobalChoices : AbstractPersistableSelfSerializable<XMLSerializer<GlobalChoices>>, IKSSerializationCallbackReceiver
	{
		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int version;

		[NonSerialized]
		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, SerializedGlobalChoice> choiceDict;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SerializedGlobalChoice> choices;

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xFD4820", Offset = "0xFD4820", VA = "0xFD4820")]
		public GlobalChoices Clone()
		{
			return null;
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xFD4BF4", Offset = "0xFD4BF4", VA = "0xFD4BF4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xFD4C6C", Offset = "0xFD4C6C", VA = "0xFD4C6C", Slot = "8")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xFD4DCC", Offset = "0xFD4DCC", VA = "0xFD4DCC", Slot = "7")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xFD4AD0", Offset = "0xFD4AD0", VA = "0xFD4AD0")]
		public void SetChoice(string key, int value)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xFD4F48", Offset = "0xFD4F48", VA = "0xFD4F48")]
		public int GetChoice(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xFD4974", Offset = "0xFD4974", VA = "0xFD4974")]
		public GlobalChoices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public class PlayerData : AbstractPersistableSelfSerializable<XMLSerializer<PlayerData>>
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string checkpointName;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string blackboardJSON;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool whiteFade;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool globalInteractablesEnabled;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SerializedInteractable> interactables;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SerializedInteractableValue> interactableValues;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> inventoryContent;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> activateablesEnabled;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<string> activateablesDisabled;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<SerializableEffect> effects;

		[NonSerialized]
		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SerializedInteractable> _interactablesByName;

		[NonSerialized]
		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, SerializedInteractableValue> _interactableValuesByName;

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x2783A40", Offset = "0x2783A40", VA = "0x2783A40")]
		public PlayerData Clone()
		{
			return null;
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x2783E50", Offset = "0x2783E50", VA = "0x2783E50")]
		public void AddInventoryItem(string key)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x2783F34", Offset = "0x2783F34", VA = "0x2783F34")]
		public void RemoveInventoryItem(string key)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x2783FD4", Offset = "0x2783FD4", VA = "0x2783FD4")]
		public bool HasInventoryItem(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x2784038", Offset = "0x2784038", VA = "0x2784038")]
		public TryOp TryRestoreSave()
		{
			return default(TryOp);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x2784DD4", Offset = "0x2784DD4", VA = "0x2784DD4")]
		public void UpdateData(string currentCheckpointName)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x2784C2C", Offset = "0x2784C2C", VA = "0x2784C2C")]
		public void RestoreInteractableDictionaries()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x2785944", Offset = "0x2785944", VA = "0x2785944")]
		public void AddOrSetInteractable(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x2785AB8", Offset = "0x2785AB8", VA = "0x2785AB8")]
		public void AddOrSetInteractableValue(string name, float value)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x2783BEC", Offset = "0x2783BEC", VA = "0x2783BEC")]
		public PlayerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public class SaveGameMetaData : AbstractPersistableSelfSerializable<XMLSerializer<SaveGameMetaData>>, IKSSerializationCallbackReceiver
	{
		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uuid;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string gamecenterID;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long lastSaved;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string deviceID;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int numRidesUnlocked;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool isGameStarted;

		[Token(Token = "0x1700009F")]
		public DateTime timestamp
		{
			[Token(Token = "0x600060F")]
			[Address(RVA = "0xECCA48", Offset = "0xECCA48", VA = "0xECCA48")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000610")]
			[Address(RVA = "0xECCAB0", Offset = "0xECCAB0", VA = "0xECCAB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xECCAE0", Offset = "0xECCAE0", VA = "0xECCAE0")]
		public SaveGameMetaData Clone()
		{
			return null;
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xECCB58", Offset = "0xECCB58", VA = "0xECCB58")]
		public void UpdateData(DateTime now)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xECCC7C", Offset = "0xECCC7C", VA = "0xECCC7C", Slot = "7")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xECCC80", Offset = "0xECCC80", VA = "0xECCC80", Slot = "8")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xECC9FC", Offset = "0xECC9FC", VA = "0xECC9FC")]
		public SaveGameMetaData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class SerializedGlobalChoice
	{
		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F11C", Offset = "0xB1F11C")]
		public string key;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F154", Offset = "0xB1F154")]
		public int value;

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x110A3AC", Offset = "0x110A3AC", VA = "0x110A3AC")]
		public SerializedGlobalChoice()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x110A3B4", Offset = "0x110A3B4", VA = "0x110A3B4")]
		public SerializedGlobalChoice(string k, int v)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class SerializedKeyValuePair<TKey, TValue>
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public TKey key;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public TValue value;

		[Token(Token = "0x6000618")]
		public SerializedKeyValuePair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class SerializedInteractableValue : SerializedKeyValuePair<string, float>
	{
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x110A5FC", Offset = "0x110A5FC", VA = "0x110A5FC")]
		public SerializedInteractableValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "XmlTypeAttribute", RVA = "0xB18248", Offset = "0xB18248")]
	public class SerializedInteractable
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F1AC", Offset = "0xB1F1AC")]
		public string interactableName;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F1E4", Offset = "0xB1F1E4")]
		public bool interactableIsEnabled;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F21C", Offset = "0xB1F21C")]
		public bool wasAddedToInventory;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F254", Offset = "0xB1F254")]
		public string interactionName;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F28C", Offset = "0xB1F28C")]
		public float interactionProgress;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xB1F2C4", Offset = "0xB1F2C4")]
		public List<string> enabledInteractables;

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x110A3FC", Offset = "0x110A3FC", VA = "0x110A3FC")]
		public SerializedInteractable Store(RegisteredInteractable interactable)
		{
			return null;
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x110A5B8", Offset = "0x110A5B8", VA = "0x110A5B8")]
		public void ApplyTo(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x110A5F4", Offset = "0x110A5F4", VA = "0x110A5F4")]
		public SerializedInteractable()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public struct SaveGameData
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SaveGameMetaData saveMetaData;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GlobalChoices globalChoices;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerData[] playerDataPerRide;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLoadedSavegame;

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xECC870", Offset = "0xECC870", VA = "0xECC870")]
		public SaveGameData(int numRides)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class SaveGamePersistenceKeys
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string saveMetaKey;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string playerStatsPersistenceKey;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string globalChoicesPostFix;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AuthenticationService _authenticationService;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Func<int, string> _getRideName;

		[Token(Token = "0x170000A0")]
		public bool isInitialized
		{
			[Token(Token = "0x600061E")]
			[Address(RVA = "0xECCC84", Offset = "0xECCC84", VA = "0xECCC84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xECCCF0", Offset = "0xECCCF0", VA = "0xECCCF0")]
		public void Initialize(AuthenticationService authenticationService, Func<int, string> getRideName)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xECCD24", Offset = "0xECCD24", VA = "0xECCD24")]
		public string GetSaveMetaDataKey()
		{
			return null;
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xECCD88", Offset = "0xECCD88", VA = "0xECCD88")]
		public string GetGlobalChoicesKey()
		{
			return null;
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xECCDD8", Offset = "0xECCDD8", VA = "0xECCDD8")]
		public string GetRideKey(string rideName)
		{
			return null;
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xECCE38", Offset = "0xECCE38", VA = "0xECCE38")]
		public string GetRideKey(int rideNum)
		{
			return null;
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xECCD80", Offset = "0xECCD80", VA = "0xECCD80")]
		private string GetPersistKeyFromFileKey(string fileKey)
		{
			return null;
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xECCEA8", Offset = "0xECCEA8", VA = "0xECCEA8")]
		public SaveGamePersistenceKeys()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class PlayerService : AbstractNeedInitService
	{
		[Token(Token = "0x2000166")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18280", Offset = "0xB18280")]
		private sealed class <>c__DisplayClass89_0
		{
			[Token(Token = "0x40006E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerService <>4__this;

			[Token(Token = "0x40006E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFinishedCallback;

			[Token(Token = "0x40006E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveGameData deviceSaveGameData;

			[Token(Token = "0x40006E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SaveGameData cloudSaveGameData;

			[Token(Token = "0x40006E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool isReallySaving;

			[Token(Token = "0x600066B")]
			[Address(RVA = "0xD9EC14", Offset = "0xD9EC14", VA = "0xD9EC14")]
			public <>c__DisplayClass89_0()
			{
			}

			[Token(Token = "0x600066C")]
			[Address(RVA = "0xD9EC1C", Offset = "0xD9EC1C", VA = "0xD9EC1C")]
			internal void <ReadOrWriteSaveGame>b__0(CloudSaveCheckDiffAnswer answer)
			{
			}
		}

		[Token(Token = "0x2000167")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18290", Offset = "0xB18290")]
		private sealed class <PlayRide_Coroutine>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerService <>4__this;

			[Token(Token = "0x40006E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int rideNumber;

			[Token(Token = "0x170000B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000670")]
				[Address(RVA = "0xD9EF74", Offset = "0xD9EF74", VA = "0xD9EF74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000672")]
				[Address(RVA = "0xD9EFBC", Offset = "0xD9EFBC", VA = "0xD9EFBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600066D")]
			[Address(RVA = "0xD9ED80", Offset = "0xD9ED80", VA = "0xD9ED80")]
			[DebuggerHidden]
			public <PlayRide_Coroutine>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x600066E")]
			[Address(RVA = "0xD9EDAC", Offset = "0xD9EDAC", VA = "0xD9EDAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600066F")]
			[Address(RVA = "0xD9EDB0", Offset = "0xD9EDB0", VA = "0xD9EDB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000671")]
			[Address(RVA = "0xD9EF7C", Offset = "0xD9EF7C", VA = "0xD9EF7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isInitialLoading;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EachKeyOneFilePersister stdPersister;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EachKeyOneFilePersister cloudPersister;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string endOfGameString;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1F35C", Offset = "0xB1F35C")]
		[SerializeField]
		private List<SceneSet> _rides;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SaveIndicatorController saveIndicator;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3A8", Offset = "0xB1F3A8")]
		private static string <uuid>k__BackingField;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SaveGamePersistenceKeys _persistenceKeys;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SettingsService _settingsService;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CloudSaveService _cloudSaveService;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AuthenticationService _authenticationService;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SaveGameData runtimeSaveGameData;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action onSaveStateChanged;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3C8", Offset = "0xB1F3C8")]
		private bool <isReplay>k__BackingField;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3D8", Offset = "0xB1F3D8")]
		private bool <hasJustFinishedRide>k__BackingField;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3E8", Offset = "0xB1F3E8")]
		private PlayerData <CurrentPlayerData>k__BackingField;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int _currentRide;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3F8", Offset = "0xB1F3F8")]
		private int <ContinueRide>k__BackingField;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F408", Offset = "0xB1F408")]
		private bool <IsCheatCodeEnabled>k__BackingField;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool showCredits;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SceneSet _sceneSetToLoadWhenSaveMismatches;

		[Token(Token = "0x170000A1")]
		public static string uuid
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0x2785C2C", Offset = "0x2785C2C", VA = "0x2785C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E560", Offset = "0xB2E560")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000627")]
			[Address(RVA = "0x2785C78", Offset = "0x2785C78", VA = "0x2785C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E570", Offset = "0xB2E570")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		private SaveGamePersistenceKeys persistenceKeys
		{
			[Token(Token = "0x6000628")]
			[Address(RVA = "0x2785CCC", Offset = "0x2785CCC", VA = "0x2785CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private string saveMetaDataPersistenceKey
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0x2785D98", Offset = "0x2785D98", VA = "0x2785D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private string globalChoicesPersistenceKey
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0x2785DB8", Offset = "0x2785DB8", VA = "0x2785DB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public SaveGameData RunTimeSaveGameData
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0x2785F0C", Offset = "0x2785F0C", VA = "0x2785F0C")]
			get
			{
				return default(SaveGameData);
			}
		}

		[Token(Token = "0x170000A6")]
		private PlayerData[] _playerDataPerRide
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0x2786048", Offset = "0x2786048", VA = "0x2786048")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000630")]
			[Address(RVA = "0x2786050", Offset = "0x2786050", VA = "0x2786050")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		private GlobalChoices globalChoices
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0x2786058", Offset = "0x2786058", VA = "0x2786058")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000632")]
			[Address(RVA = "0x2786060", Offset = "0x2786060", VA = "0x2786060")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool isReplay
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x27860A0", Offset = "0x27860A0", VA = "0x27860A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E580", Offset = "0xB2E580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000636")]
			[Address(RVA = "0x27860A8", Offset = "0x27860A8", VA = "0x27860A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E590", Offset = "0xB2E590")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public bool hasJustFinishedRide
		{
			[Token(Token = "0x6000637")]
			[Address(RVA = "0x27860B4", Offset = "0x27860B4", VA = "0x27860B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E5A0", Offset = "0xB2E5A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000638")]
			[Address(RVA = "0x27860BC", Offset = "0x27860BC", VA = "0x27860BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E5B0", Offset = "0xB2E5B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public bool CanContinue
		{
			[Token(Token = "0x6000639")]
			[Address(RVA = "0x27860C8", Offset = "0x27860C8", VA = "0x27860C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AB")]
		public PlayerData CurrentPlayerData
		{
			[Token(Token = "0x600063A")]
			[Address(RVA = "0x2786168", Offset = "0x2786168", VA = "0x2786168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E5C0", Offset = "0xB2E5C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600063B")]
			[Address(RVA = "0x2786170", Offset = "0x2786170", VA = "0x2786170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E5D0", Offset = "0xB2E5D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public int CurrentRide
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0x2786178", Offset = "0x2786178", VA = "0x2786178")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AD")]
		public int ContinueRide
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0x2786180", Offset = "0x2786180", VA = "0x2786180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E5E0", Offset = "0xB2E5E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600063E")]
			[Address(RVA = "0x2786188", Offset = "0x2786188", VA = "0x2786188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E5F0", Offset = "0xB2E5F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public int CurrentRideIndex
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0x2786190", Offset = "0x2786190", VA = "0x2786190")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AF")]
		public int ContinueRideIndex
		{
			[Token(Token = "0x6000640")]
			[Address(RVA = "0x27861A4", Offset = "0x27861A4", VA = "0x27861A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B0")]
		public int UnlockedRides
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0x2786140", Offset = "0x2786140", VA = "0x2786140")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000644")]
			[Address(RVA = "0x27861B8", Offset = "0x27861B8", VA = "0x27861B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public bool IsCheatCodeEnabled
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0x27861D4", Offset = "0x27861D4", VA = "0x27861D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E600", Offset = "0xB2E600")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000646")]
			[Address(RVA = "0x27861DC", Offset = "0x27861DC", VA = "0x27861DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E610", Offset = "0xB2E610")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public override string Name
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x2786D8C", Offset = "0x2786D8C", VA = "0x2786D8C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x2785DD8", Offset = "0x2785DD8", VA = "0x2785DD8")]
		private string GetRideName(int rideNum)
		{
			return null;
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x2785EDC", Offset = "0x2785EDC", VA = "0x2785EDC")]
		public string GetRideKey(int rideNum)
		{
			return null;
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x2785F18", Offset = "0x2785F18", VA = "0x2785F18")]
		public void SetCurrentSaveGame(SaveGameData saveGame)
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x2786068", Offset = "0x2786068", VA = "0x2786068")]
		public void SetGlobalChoice(string key, int value)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x2786084", Offset = "0x2786084", VA = "0x2786084")]
		public int GetGlobalChoice(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x2785F98", Offset = "0x2785F98", VA = "0x2785F98")]
		private void SetCurrentRide(int rideNum)
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x2785FFC", Offset = "0x2785FFC", VA = "0x2785FFC")]
		public int GetNumRides()
		{
			return default(int);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x27861E8", Offset = "0x27861E8", VA = "0x27861E8")]
		public void ReadSaveGame()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x2786340", Offset = "0x2786340", VA = "0x2786340")]
		public void WriteSaveGameAtCheckpoint(string checkpointName, [Optional] Action onFinishedCallback, bool whiteFade = false)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x2786500", Offset = "0x2786500", VA = "0x2786500")]
		private SaveGameData ReadFromDevice()
		{
			return default(SaveGameData);
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x2786958", Offset = "0x2786958", VA = "0x2786958")]
		private SaveGameData ReadFromCloud()
		{
			return default(SaveGameData);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x2786538", Offset = "0x2786538", VA = "0x2786538")]
		private SaveGameData Read(IPersister persister)
		{
			return default(SaveGameData);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x2786990", Offset = "0x2786990", VA = "0x2786990")]
		private void WriteToDevice(SaveGameData data, bool updateData = false)
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x2786C54", Offset = "0x2786C54", VA = "0x2786C54")]
		private void WriteToCloud(SaveGameData data, bool updateData = false)
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x2786C88", Offset = "0x2786C88", VA = "0x2786C88")]
		private void WriteToDeviceAndCloud(SaveGameData data, bool updateData = true)
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x2786D5C", Offset = "0x2786D5C", VA = "0x2786D5C")]
		public void Write()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x27869C4", Offset = "0x27869C4", VA = "0x27869C4")]
		private void Write(SaveGameData data, IPersister persister, bool updateData = false)
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x2786DD0", Offset = "0x2786DD0", VA = "0x2786DD0", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x2786DD4", Offset = "0x2786DD4", VA = "0x2786DD4", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x2786ECC", Offset = "0x2786ECC", VA = "0x2786ECC")]
		private static void GetUUID()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x278703C", Offset = "0x278703C", VA = "0x278703C", Slot = "14")]
		public override void AfterAllInitialized()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x2787160", Offset = "0x2787160", VA = "0x2787160")]
		private void OnXboxBullshitFinished()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x278716C", Offset = "0x278716C", VA = "0x278716C")]
		public void OnAuthenticationFinished(bool success)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x27861F4", Offset = "0x27861F4", VA = "0x27861F4")]
		private void ReadOrWriteSaveGame(bool isSaving, [Optional] Action onFinishedCallback)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x2787170", Offset = "0x2787170", VA = "0x2787170")]
		private void InitialLoadingFinished()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x2787180", Offset = "0x2787180", VA = "0x2787180")]
		private void GotoMainMenuAfterKeepingCloudSave()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x2787234", Offset = "0x2787234", VA = "0x2787234")]
		public void Reset(bool writeToDeviceAndCloud = true)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x277E84C", Offset = "0x277E84C", VA = "0x277E84C")]
		public SceneSet GetCurrentRideSceneSet()
		{
			return null;
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x2785E4C", Offset = "0x2785E4C", VA = "0x2785E4C")]
		public SceneSet GetRideSceneSet(int rideIndex)
		{
			return null;
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x27872F4", Offset = "0x27872F4", VA = "0x27872F4")]
		public TryOp TryRestoreSave()
		{
			return default(TryOp);
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x278731C", Offset = "0x278731C", VA = "0x278731C")]
		public void ResetRide(int rideNum)
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x27873D4", Offset = "0x27873D4", VA = "0x27873D4")]
		public void OnNewGame()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x2787490", Offset = "0x2787490", VA = "0x2787490")]
		public void OnContinue()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x27874B4", Offset = "0x27874B4", VA = "0x27874B4")]
		public void OnReplayRide(int rideNumber)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x2787400", Offset = "0x2787400", VA = "0x2787400")]
		public void PlayRide(int rideNumber)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x2787514", Offset = "0x2787514", VA = "0x2787514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E620", Offset = "0xB2E620")]
		private IEnumerator PlayRide_Coroutine(int rideNumber)
		{
			return null;
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x278759C", Offset = "0x278759C", VA = "0x278759C")]
		private void PlayRide_Internal(int rideNumber)
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x277E844", Offset = "0x277E844", VA = "0x277E844")]
		public void ResetCurrentRideFromPauseMenu()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x278777C", Offset = "0x278777C", VA = "0x278777C")]
		public void FinishRide(int rideFinished)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x2787840", Offset = "0x2787840", VA = "0x2787840")]
		private void FinishGame()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x2787874", Offset = "0x2787874", VA = "0x2787874")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x2787880", Offset = "0x2787880", VA = "0x2787880")]
		public PlayerService()
		{
		}
	}
}
namespace KunstStoff.Utilities
{
	[Token(Token = "0x2000168")]
	public class AutoDisableOrDestroyByQuality : MonoBehaviour
	{
		[Token(Token = "0x2000169")]
		public enum Reaction
		{
			[Token(Token = "0x40006F0")]
			DISABLE,
			[Token(Token = "0x40006F1")]
			DESTROY
		}

		[Token(Token = "0x200016A")]
		public enum Runlevel
		{
			[Token(Token = "0x40006F3")]
			AWAKE,
			[Token(Token = "0x40006F4")]
			START
		}

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Reaction reaction;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Runlevel runlevel;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F418", Offset = "0xB1F418")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1F418", Offset = "0xB1F418")]
		public SettingsDataQuality.QualityLevelSettings minimumQualityLevel;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F478", Offset = "0xB1F478")]
		public SettingsDataQuality.QualityLevelSettings maximumQualityLevel;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SettingsData data;

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x103ADD8", Offset = "0x103ADD8", VA = "0x103ADD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x103B034", Offset = "0x103B034", VA = "0x103B034")]
		private void Start()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x103AF50", Offset = "0x103AF50", VA = "0x103AF50")]
		private void Apply()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x103B048", Offset = "0x103B048", VA = "0x103B048")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x103B0E4", Offset = "0x103B0E4", VA = "0x103B0E4")]
		public AutoDisableOrDestroyByQuality()
		{
		}
	}
}
namespace ParadoxNotion.Internal
{
	[Token(Token = "0x200016B")]
	internal class AOTDummy
	{
		[Token(Token = "0x200016C")]
		private class FlowCanvas_BinderConnection_System_Boolean : BinderConnection<bool>
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0x274821C", Offset = "0x274821C", VA = "0x274821C")]
			public FlowCanvas_BinderConnection_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200016D")]
		private class FlowCanvas_BinderConnection_System_Single : BinderConnection<float>
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x27482B4", Offset = "0x27482B4", VA = "0x27482B4")]
			public FlowCanvas_BinderConnection_System_Single()
			{
			}
		}

		[Token(Token = "0x200016E")]
		private class FlowCanvas_BinderConnection_System_Int32 : BinderConnection<int>
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x2748268", Offset = "0x2748268", VA = "0x2748268")]
			public FlowCanvas_BinderConnection_System_Int32()
			{
			}
		}

		[Token(Token = "0x200016F")]
		private class FlowCanvas_BinderConnection_UnityEngine_Vector2 : BinderConnection<Vector2>
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0x2748728", Offset = "0x2748728", VA = "0x2748728")]
			public FlowCanvas_BinderConnection_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000170")]
		private class FlowCanvas_BinderConnection_UnityEngine_Vector3 : BinderConnection<Vector3>
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0x2748774", Offset = "0x2748774", VA = "0x2748774")]
			public FlowCanvas_BinderConnection_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000171")]
		private class FlowCanvas_BinderConnection_UnityEngine_Vector4 : BinderConnection<Vector4>
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0x27487C0", Offset = "0x27487C0", VA = "0x27487C0")]
			public FlowCanvas_BinderConnection_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000172")]
		private class FlowCanvas_BinderConnection_UnityEngine_Quaternion : BinderConnection<Quaternion>
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x2748560", Offset = "0x2748560", VA = "0x2748560")]
			public FlowCanvas_BinderConnection_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000173")]
		private class FlowCanvas_BinderConnection_UnityEngine_Keyframe : BinderConnection<Keyframe>
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0x27484C8", Offset = "0x27484C8", VA = "0x27484C8")]
			public FlowCanvas_BinderConnection_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000174")]
		private class FlowCanvas_BinderConnection_UnityEngine_Bounds : BinderConnection<Bounds>
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x2748300", Offset = "0x2748300", VA = "0x2748300")]
			public FlowCanvas_BinderConnection_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000175")]
		private class FlowCanvas_BinderConnection_UnityEngine_Color : BinderConnection<Color>
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0x27483E4", Offset = "0x27483E4", VA = "0x27483E4")]
			public FlowCanvas_BinderConnection_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000176")]
		private class FlowCanvas_BinderConnection_UnityEngine_Rect : BinderConnection<Rect>
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0x2748690", Offset = "0x2748690", VA = "0x2748690")]
			public FlowCanvas_BinderConnection_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000177")]
		private class FlowCanvas_BinderConnection_UnityEngine_ContactPoint : BinderConnection<ContactPoint>
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0x2748430", Offset = "0x2748430", VA = "0x2748430")]
			public FlowCanvas_BinderConnection_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000178")]
		private class FlowCanvas_BinderConnection_UnityEngine_ContactPoint2D : BinderConnection<ContactPoint2D>
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0x274847C", Offset = "0x274847C", VA = "0x274847C")]
			public FlowCanvas_BinderConnection_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000179")]
		private class FlowCanvas_BinderConnection_UnityEngine_Collision : BinderConnection<Collision>
		{
			[Token(Token = "0x6000697")]
			[Address(RVA = "0x274834C", Offset = "0x274834C", VA = "0x274834C")]
			public FlowCanvas_BinderConnection_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200017A")]
		private class FlowCanvas_BinderConnection_UnityEngine_Collision2D : BinderConnection<Collision2D>
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0x2748398", Offset = "0x2748398", VA = "0x2748398")]
			public FlowCanvas_BinderConnection_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200017B")]
		private class FlowCanvas_BinderConnection_UnityEngine_RaycastHit : BinderConnection<RaycastHit>
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x27485F8", Offset = "0x27485F8", VA = "0x27485F8")]
			public FlowCanvas_BinderConnection_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200017C")]
		private class FlowCanvas_BinderConnection_UnityEngine_RaycastHit2D : BinderConnection<RaycastHit2D>
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x2748644", Offset = "0x2748644", VA = "0x2748644")]
			public FlowCanvas_BinderConnection_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200017D")]
		private class FlowCanvas_BinderConnection_UnityEngine_Ray : BinderConnection<Ray>
		{
			[Token(Token = "0x600069B")]
			[Address(RVA = "0x27485AC", Offset = "0x27485AC", VA = "0x27485AC")]
			public FlowCanvas_BinderConnection_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200017E")]
		private class FlowCanvas_BinderConnection_UnityEngine_Space : BinderConnection<Space>
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x27486DC", Offset = "0x27486DC", VA = "0x27486DC")]
			public FlowCanvas_BinderConnection_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200017F")]
		private class FlowCanvas_BinderConnection_UnityEngine_LayerMask : BinderConnection<LayerMask>
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x2748514", Offset = "0x2748514", VA = "0x2748514")]
			public FlowCanvas_BinderConnection_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000180")]
		private class FlowCanvas_ValueInput_System_Boolean : ValueInput<bool>
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x275992C", Offset = "0x275992C", VA = "0x275992C")]
			public FlowCanvas_ValueInput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000181")]
		private class FlowCanvas_ValueInput_System_Single : ValueInput<float>
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x27599C4", Offset = "0x27599C4", VA = "0x27599C4")]
			public FlowCanvas_ValueInput_System_Single()
			{
			}
		}

		[Token(Token = "0x2000182")]
		private class FlowCanvas_ValueInput_System_Int32 : ValueInput<int>
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x2759978", Offset = "0x2759978", VA = "0x2759978")]
			public FlowCanvas_ValueInput_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000183")]
		private class FlowCanvas_ValueInput_UnityEngine_Vector2 : ValueInput<Vector2>
		{
			[Token(Token = "0x60006A1")]
			[Address(RVA = "0x2759E38", Offset = "0x2759E38", VA = "0x2759E38")]
			public FlowCanvas_ValueInput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000184")]
		private class FlowCanvas_ValueInput_UnityEngine_Vector3 : ValueInput<Vector3>
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0x2759E84", Offset = "0x2759E84", VA = "0x2759E84")]
			public FlowCanvas_ValueInput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000185")]
		private class FlowCanvas_ValueInput_UnityEngine_Vector4 : ValueInput<Vector4>
		{
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0x2759ED0", Offset = "0x2759ED0", VA = "0x2759ED0")]
			public FlowCanvas_ValueInput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000186")]
		private class FlowCanvas_ValueInput_UnityEngine_Quaternion : ValueInput<Quaternion>
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0x2759C70", Offset = "0x2759C70", VA = "0x2759C70")]
			public FlowCanvas_ValueInput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000187")]
		private class FlowCanvas_ValueInput_UnityEngine_Keyframe : ValueInput<Keyframe>
		{
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x2759BD8", Offset = "0x2759BD8", VA = "0x2759BD8")]
			public FlowCanvas_ValueInput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000188")]
		private class FlowCanvas_ValueInput_UnityEngine_Bounds : ValueInput<Bounds>
		{
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x2759A10", Offset = "0x2759A10", VA = "0x2759A10")]
			public FlowCanvas_ValueInput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000189")]
		private class FlowCanvas_ValueInput_UnityEngine_Color : ValueInput<Color>
		{
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x2759AF4", Offset = "0x2759AF4", VA = "0x2759AF4")]
			public FlowCanvas_ValueInput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200018A")]
		private class FlowCanvas_ValueInput_UnityEngine_Rect : ValueInput<Rect>
		{
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x2759DA0", Offset = "0x2759DA0", VA = "0x2759DA0")]
			public FlowCanvas_ValueInput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200018B")]
		private class FlowCanvas_ValueInput_UnityEngine_ContactPoint : ValueInput<ContactPoint>
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x2759B40", Offset = "0x2759B40", VA = "0x2759B40")]
			public FlowCanvas_ValueInput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200018C")]
		private class FlowCanvas_ValueInput_UnityEngine_ContactPoint2D : ValueInput<ContactPoint2D>
		{
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0x2759B8C", Offset = "0x2759B8C", VA = "0x2759B8C")]
			public FlowCanvas_ValueInput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200018D")]
		private class FlowCanvas_ValueInput_UnityEngine_Collision : ValueInput<Collision>
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x2759A5C", Offset = "0x2759A5C", VA = "0x2759A5C")]
			public FlowCanvas_ValueInput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200018E")]
		private class FlowCanvas_ValueInput_UnityEngine_Collision2D : ValueInput<Collision2D>
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x2759AA8", Offset = "0x2759AA8", VA = "0x2759AA8")]
			public FlowCanvas_ValueInput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200018F")]
		private class FlowCanvas_ValueInput_UnityEngine_RaycastHit : ValueInput<RaycastHit>
		{
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0x2759D08", Offset = "0x2759D08", VA = "0x2759D08")]
			public FlowCanvas_ValueInput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000190")]
		private class FlowCanvas_ValueInput_UnityEngine_RaycastHit2D : ValueInput<RaycastHit2D>
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x2759D54", Offset = "0x2759D54", VA = "0x2759D54")]
			public FlowCanvas_ValueInput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000191")]
		private class FlowCanvas_ValueInput_UnityEngine_Ray : ValueInput<Ray>
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x2759CBC", Offset = "0x2759CBC", VA = "0x2759CBC")]
			public FlowCanvas_ValueInput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000192")]
		private class FlowCanvas_ValueInput_UnityEngine_Space : ValueInput<Space>
		{
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x2759DEC", Offset = "0x2759DEC", VA = "0x2759DEC")]
			public FlowCanvas_ValueInput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000193")]
		private class FlowCanvas_ValueInput_UnityEngine_LayerMask : ValueInput<LayerMask>
		{
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x2759C24", Offset = "0x2759C24", VA = "0x2759C24")]
			public FlowCanvas_ValueInput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000194")]
		private class FlowCanvas_ValueOutput_System_Boolean : ValueOutput<bool>
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x2759F1C", Offset = "0x2759F1C", VA = "0x2759F1C")]
			public FlowCanvas_ValueOutput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000195")]
		private class FlowCanvas_ValueOutput_System_Single : ValueOutput<float>
		{
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x2759FB4", Offset = "0x2759FB4", VA = "0x2759FB4")]
			public FlowCanvas_ValueOutput_System_Single()
			{
			}
		}

		[Token(Token = "0x2000196")]
		private class FlowCanvas_ValueOutput_System_Int32 : ValueOutput<int>
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x2759F68", Offset = "0x2759F68", VA = "0x2759F68")]
			public FlowCanvas_ValueOutput_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000197")]
		private class FlowCanvas_ValueOutput_UnityEngine_Vector2 : ValueOutput<Vector2>
		{
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x275A428", Offset = "0x275A428", VA = "0x275A428")]
			public FlowCanvas_ValueOutput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000198")]
		private class FlowCanvas_ValueOutput_UnityEngine_Vector3 : ValueOutput<Vector3>
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x275A474", Offset = "0x275A474", VA = "0x275A474")]
			public FlowCanvas_ValueOutput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000199")]
		private class FlowCanvas_ValueOutput_UnityEngine_Vector4 : ValueOutput<Vector4>
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x275A4C0", Offset = "0x275A4C0", VA = "0x275A4C0")]
			public FlowCanvas_ValueOutput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200019A")]
		private class FlowCanvas_ValueOutput_UnityEngine_Quaternion : ValueOutput<Quaternion>
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x275A260", Offset = "0x275A260", VA = "0x275A260")]
			public FlowCanvas_ValueOutput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200019B")]
		private class FlowCanvas_ValueOutput_UnityEngine_Keyframe : ValueOutput<Keyframe>
		{
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x275A1C8", Offset = "0x275A1C8", VA = "0x275A1C8")]
			public FlowCanvas_ValueOutput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200019C")]
		private class FlowCanvas_ValueOutput_UnityEngine_Bounds : ValueOutput<Bounds>
		{
			[Token(Token = "0x60006BA")]
			[Address(RVA = "0x275A000", Offset = "0x275A000", VA = "0x275A000")]
			public FlowCanvas_ValueOutput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200019D")]
		private class FlowCanvas_ValueOutput_UnityEngine_Color : ValueOutput<Color>
		{
			[Token(Token = "0x60006BB")]
			[Address(RVA = "0x275A0E4", Offset = "0x275A0E4", VA = "0x275A0E4")]
			public FlowCanvas_ValueOutput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200019E")]
		private class FlowCanvas_ValueOutput_UnityEngine_Rect : ValueOutput<Rect>
		{
			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x275A390", Offset = "0x275A390", VA = "0x275A390")]
			public FlowCanvas_ValueOutput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200019F")]
		private class FlowCanvas_ValueOutput_UnityEngine_ContactPoint : ValueOutput<ContactPoint>
		{
			[Token(Token = "0x60006BD")]
			[Address(RVA = "0x275A130", Offset = "0x275A130", VA = "0x275A130")]
			public FlowCanvas_ValueOutput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20001A0")]
		private class FlowCanvas_ValueOutput_UnityEngine_ContactPoint2D : ValueOutput<ContactPoint2D>
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x275A17C", Offset = "0x275A17C", VA = "0x275A17C")]
			public FlowCanvas_ValueOutput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20001A1")]
		private class FlowCanvas_ValueOutput_UnityEngine_Collision : ValueOutput<Collision>
		{
			[Token(Token = "0x60006BF")]
			[Address(RVA = "0x275A04C", Offset = "0x275A04C", VA = "0x275A04C")]
			public FlowCanvas_ValueOutput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20001A2")]
		private class FlowCanvas_ValueOutput_UnityEngine_Collision2D : ValueOutput<Collision2D>
		{
			[Token(Token = "0x60006C0")]
			[Address(RVA = "0x275A098", Offset = "0x275A098", VA = "0x275A098")]
			public FlowCanvas_ValueOutput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20001A3")]
		private class FlowCanvas_ValueOutput_UnityEngine_RaycastHit : ValueOutput<RaycastHit>
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x275A2F8", Offset = "0x275A2F8", VA = "0x275A2F8")]
			public FlowCanvas_ValueOutput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20001A4")]
		private class FlowCanvas_ValueOutput_UnityEngine_RaycastHit2D : ValueOutput<RaycastHit2D>
		{
			[Token(Token = "0x60006C2")]
			[Address(RVA = "0x275A344", Offset = "0x275A344", VA = "0x275A344")]
			public FlowCanvas_ValueOutput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20001A5")]
		private class FlowCanvas_ValueOutput_UnityEngine_Ray : ValueOutput<Ray>
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x275A2AC", Offset = "0x275A2AC", VA = "0x275A2AC")]
			public FlowCanvas_ValueOutput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20001A6")]
		private class FlowCanvas_ValueOutput_UnityEngine_Space : ValueOutput<Space>
		{
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x275A3DC", Offset = "0x275A3DC", VA = "0x275A3DC")]
			public FlowCanvas_ValueOutput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20001A7")]
		private class FlowCanvas_ValueOutput_UnityEngine_LayerMask : ValueOutput<LayerMask>
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x275A214", Offset = "0x275A214", VA = "0x275A214")]
			public FlowCanvas_ValueOutput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20001A8")]
		private class FlowCanvas_Nodes_AddDictionaryItem_System_Boolean : AddDictionaryItem<bool>
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x274880C", Offset = "0x274880C", VA = "0x274880C")]
			public FlowCanvas_Nodes_AddDictionaryItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20001A9")]
		private class FlowCanvas_Nodes_AddDictionaryItem_System_Single : AddDictionaryItem<float>
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x27488A4", Offset = "0x27488A4", VA = "0x27488A4")]
			public FlowCanvas_Nodes_AddDictionaryItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20001AA")]
		private class FlowCanvas_Nodes_AddDictionaryItem_System_Int32 : AddDictionaryItem<int>
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x2748858", Offset = "0x2748858", VA = "0x2748858")]
			public FlowCanvas_Nodes_AddDictionaryItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20001AB")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector2 : AddDictionaryItem<Vector2>
		{
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x2748D18", Offset = "0x2748D18", VA = "0x2748D18")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20001AC")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector3 : AddDictionaryItem<Vector3>
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x2748D64", Offset = "0x2748D64", VA = "0x2748D64")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20001AD")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector4 : AddDictionaryItem<Vector4>
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x2748DB0", Offset = "0x2748DB0", VA = "0x2748DB0")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20001AE")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Quaternion : AddDictionaryItem<Quaternion>
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x2748B50", Offset = "0x2748B50", VA = "0x2748B50")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20001AF")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Keyframe : AddDictionaryItem<Keyframe>
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x2748AB8", Offset = "0x2748AB8", VA = "0x2748AB8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20001B0")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Bounds : AddDictionaryItem<Bounds>
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x27488F0", Offset = "0x27488F0", VA = "0x27488F0")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20001B1")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Color : AddDictionaryItem<Color>
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x27489D4", Offset = "0x27489D4", VA = "0x27489D4")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20001B2")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Rect : AddDictionaryItem<Rect>
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x2748C80", Offset = "0x2748C80", VA = "0x2748C80")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20001B3")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint : AddDictionaryItem<ContactPoint>
		{
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x2748A20", Offset = "0x2748A20", VA = "0x2748A20")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20001B4")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint2D : AddDictionaryItem<ContactPoint2D>
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x2748A6C", Offset = "0x2748A6C", VA = "0x2748A6C")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20001B5")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision : AddDictionaryItem<Collision>
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x274893C", Offset = "0x274893C", VA = "0x274893C")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20001B6")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision2D : AddDictionaryItem<Collision2D>
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x2748988", Offset = "0x2748988", VA = "0x2748988")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20001B7")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit : AddDictionaryItem<RaycastHit>
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x2748BE8", Offset = "0x2748BE8", VA = "0x2748BE8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20001B8")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit2D : AddDictionaryItem<RaycastHit2D>
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x2748C34", Offset = "0x2748C34", VA = "0x2748C34")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20001B9")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Ray : AddDictionaryItem<Ray>
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x2748B9C", Offset = "0x2748B9C", VA = "0x2748B9C")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20001BA")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Space : AddDictionaryItem<Space>
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x2748CCC", Offset = "0x2748CCC", VA = "0x2748CCC")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20001BB")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_LayerMask : AddDictionaryItem<LayerMask>
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x2748B04", Offset = "0x2748B04", VA = "0x2748B04")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20001BC")]
		private class FlowCanvas_Nodes_AddListItem_System_Boolean : AddListItem<bool>
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x2748DFC", Offset = "0x2748DFC", VA = "0x2748DFC")]
			public FlowCanvas_Nodes_AddListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20001BD")]
		private class FlowCanvas_Nodes_AddListItem_System_Single : AddListItem<float>
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x2748E94", Offset = "0x2748E94", VA = "0x2748E94")]
			public FlowCanvas_Nodes_AddListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20001BE")]
		private class FlowCanvas_Nodes_AddListItem_System_Int32 : AddListItem<int>
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x2748E48", Offset = "0x2748E48", VA = "0x2748E48")]
			public FlowCanvas_Nodes_AddListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20001BF")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Vector2 : AddListItem<Vector2>
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x2749308", Offset = "0x2749308", VA = "0x2749308")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20001C0")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Vector3 : AddListItem<Vector3>
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x2749354", Offset = "0x2749354", VA = "0x2749354")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20001C1")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Vector4 : AddListItem<Vector4>
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x27493A0", Offset = "0x27493A0", VA = "0x27493A0")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20001C2")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Quaternion : AddListItem<Quaternion>
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x2749140", Offset = "0x2749140", VA = "0x2749140")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20001C3")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Keyframe : AddListItem<Keyframe>
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x27490A8", Offset = "0x27490A8", VA = "0x27490A8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20001C4")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Bounds : AddListItem<Bounds>
		{
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x2748EE0", Offset = "0x2748EE0", VA = "0x2748EE0")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20001C5")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Color : AddListItem<Color>
		{
			[Token(Token = "0x60006E3")]
			[Address(RVA = "0x2748FC4", Offset = "0x2748FC4", VA = "0x2748FC4")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20001C6")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Rect : AddListItem<Rect>
		{
			[Token(Token = "0x60006E4")]
			[Address(RVA = "0x2749270", Offset = "0x2749270", VA = "0x2749270")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20001C7")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint : AddListItem<ContactPoint>
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0x2749010", Offset = "0x2749010", VA = "0x2749010")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20001C8")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint2D : AddListItem<ContactPoint2D>
		{
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x274905C", Offset = "0x274905C", VA = "0x274905C")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20001C9")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Collision : AddListItem<Collision>
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0x2748F2C", Offset = "0x2748F2C", VA = "0x2748F2C")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20001CA")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Collision2D : AddListItem<Collision2D>
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x2748F78", Offset = "0x2748F78", VA = "0x2748F78")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20001CB")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit : AddListItem<RaycastHit>
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0x27491D8", Offset = "0x27491D8", VA = "0x27491D8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20001CC")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit2D : AddListItem<RaycastHit2D>
		{
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0x2749224", Offset = "0x2749224", VA = "0x2749224")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20001CD")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Ray : AddListItem<Ray>
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0x274918C", Offset = "0x274918C", VA = "0x274918C")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20001CE")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Space : AddListItem<Space>
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x27492BC", Offset = "0x27492BC", VA = "0x27492BC")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20001CF")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_LayerMask : AddListItem<LayerMask>
		{
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x27490F4", Offset = "0x27490F4", VA = "0x27490F4")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20001D0")]
		private class FlowCanvas_Nodes_Buffer_System_Boolean : Buffer<bool>
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x27493EC", Offset = "0x27493EC", VA = "0x27493EC")]
			public FlowCanvas_Nodes_Buffer_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20001D1")]
		private class FlowCanvas_Nodes_Buffer_System_Single : Buffer<float>
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0x2749484", Offset = "0x2749484", VA = "0x2749484")]
			public FlowCanvas_Nodes_Buffer_System_Single()
			{
			}
		}

		[Token(Token = "0x20001D2")]
		private class FlowCanvas_Nodes_Buffer_System_Int32 : Buffer<int>
		{
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x2749438", Offset = "0x2749438", VA = "0x2749438")]
			public FlowCanvas_Nodes_Buffer_System_Int32()
			{
			}
		}

		[Token(Token = "0x20001D3")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Vector2 : Buffer<Vector2>
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0x27498F8", Offset = "0x27498F8", VA = "0x27498F8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20001D4")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Vector3 : Buffer<Vector3>
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x2749944", Offset = "0x2749944", VA = "0x2749944")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20001D5")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Vector4 : Buffer<Vector4>
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x2749990", Offset = "0x2749990", VA = "0x2749990")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20001D6")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Quaternion : Buffer<Quaternion>
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x2749730", Offset = "0x2749730", VA = "0x2749730")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20001D7")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Keyframe : Buffer<Keyframe>
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x2749698", Offset = "0x2749698", VA = "0x2749698")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20001D8")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Bounds : Buffer<Bounds>
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x27494D0", Offset = "0x27494D0", VA = "0x27494D0")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20001D9")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Color : Buffer<Color>
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x27495B4", Offset = "0x27495B4", VA = "0x27495B4")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20001DA")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Rect : Buffer<Rect>
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x2749860", Offset = "0x2749860", VA = "0x2749860")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20001DB")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint : Buffer<ContactPoint>
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x2749600", Offset = "0x2749600", VA = "0x2749600")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20001DC")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint2D : Buffer<ContactPoint2D>
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x274964C", Offset = "0x274964C", VA = "0x274964C")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20001DD")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Collision : Buffer<Collision>
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x274951C", Offset = "0x274951C", VA = "0x274951C")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20001DE")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Collision2D : Buffer<Collision2D>
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x2749568", Offset = "0x2749568", VA = "0x2749568")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20001DF")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit : Buffer<RaycastHit>
		{
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x27497C8", Offset = "0x27497C8", VA = "0x27497C8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20001E0")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit2D : Buffer<RaycastHit2D>
		{
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x2749814", Offset = "0x2749814", VA = "0x2749814")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20001E1")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Ray : Buffer<Ray>
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x274977C", Offset = "0x274977C", VA = "0x274977C")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20001E2")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Space : Buffer<Space>
		{
			[Token(Token = "0x6000700")]
			[Address(RVA = "0x27498AC", Offset = "0x27498AC", VA = "0x27498AC")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20001E3")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_LayerMask : Buffer<LayerMask>
		{
			[Token(Token = "0x6000701")]
			[Address(RVA = "0x27496E4", Offset = "0x27496E4", VA = "0x27496E4")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20001E4")]
		private class FlowCanvas_Nodes_Cache_System_Boolean : Cache<bool>
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0x27499DC", Offset = "0x27499DC", VA = "0x27499DC")]
			public FlowCanvas_Nodes_Cache_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20001E5")]
		private class FlowCanvas_Nodes_Cache_System_Single : Cache<float>
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x2749A74", Offset = "0x2749A74", VA = "0x2749A74")]
			public FlowCanvas_Nodes_Cache_System_Single()
			{
			}
		}

		[Token(Token = "0x20001E6")]
		private class FlowCanvas_Nodes_Cache_System_Int32 : Cache<int>
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x2749A28", Offset = "0x2749A28", VA = "0x2749A28")]
			public FlowCanvas_Nodes_Cache_System_Int32()
			{
			}
		}

		[Token(Token = "0x20001E7")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Vector2 : Cache<Vector2>
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x2749EE8", Offset = "0x2749EE8", VA = "0x2749EE8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20001E8")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Vector3 : Cache<Vector3>
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x2749F34", Offset = "0x2749F34", VA = "0x2749F34")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20001E9")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Vector4 : Cache<Vector4>
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x2749F80", Offset = "0x2749F80", VA = "0x2749F80")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20001EA")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Quaternion : Cache<Quaternion>
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0x2749D20", Offset = "0x2749D20", VA = "0x2749D20")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20001EB")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Keyframe : Cache<Keyframe>
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x2749C88", Offset = "0x2749C88", VA = "0x2749C88")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20001EC")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Bounds : Cache<Bounds>
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x2749AC0", Offset = "0x2749AC0", VA = "0x2749AC0")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20001ED")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Color : Cache<Color>
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x2749BA4", Offset = "0x2749BA4", VA = "0x2749BA4")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20001EE")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Rect : Cache<Rect>
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x2749E50", Offset = "0x2749E50", VA = "0x2749E50")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20001EF")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint : Cache<ContactPoint>
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x2749BF0", Offset = "0x2749BF0", VA = "0x2749BF0")]
			public FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20001F0")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint2D : Cache<ContactPoint2D>
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x2749C3C", Offset = "0x2749C3C", VA = "0x2749C3C")]
			public FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20001F1")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Collision : Cache<Collision>
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x2749B0C", Offset = "0x2749B0C", VA = "0x2749B0C")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20001F2")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Collision2D : Cache<Collision2D>
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x2749B58", Offset = "0x2749B58", VA = "0x2749B58")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20001F3")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit : Cache<RaycastHit>
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x2749DB8", Offset = "0x2749DB8", VA = "0x2749DB8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20001F4")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit2D : Cache<RaycastHit2D>
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x2749E04", Offset = "0x2749E04", VA = "0x2749E04")]
			public FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20001F5")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Ray : Cache<Ray>
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x2749D6C", Offset = "0x2749D6C", VA = "0x2749D6C")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20001F6")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Space : Cache<Space>
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x2749E9C", Offset = "0x2749E9C", VA = "0x2749E9C")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20001F7")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_LayerMask : Cache<LayerMask>
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x2749CD4", Offset = "0x2749CD4", VA = "0x2749CD4")]
			public FlowCanvas_Nodes_Cache_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20001F8")]
		private class FlowCanvas_Nodes_Cast_System_Boolean : Cast<bool>
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x274A5BC", Offset = "0x274A5BC", VA = "0x274A5BC")]
			public FlowCanvas_Nodes_Cast_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20001F9")]
		private class FlowCanvas_Nodes_Cast_System_Single : Cast<float>
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x274A654", Offset = "0x274A654", VA = "0x274A654")]
			public FlowCanvas_Nodes_Cast_System_Single()
			{
			}
		}

		[Token(Token = "0x20001FA")]
		private class FlowCanvas_Nodes_Cast_System_Int32 : Cast<int>
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x274A608", Offset = "0x274A608", VA = "0x274A608")]
			public FlowCanvas_Nodes_Cast_System_Int32()
			{
			}
		}

		[Token(Token = "0x20001FB")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Vector2 : Cast<Vector2>
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x274AAC8", Offset = "0x274AAC8", VA = "0x274AAC8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20001FC")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Vector3 : Cast<Vector3>
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x274AB14", Offset = "0x274AB14", VA = "0x274AB14")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20001FD")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Vector4 : Cast<Vector4>
		{
			[Token(Token = "0x600071B")]
			[Address(RVA = "0x274AB60", Offset = "0x274AB60", VA = "0x274AB60")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20001FE")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Quaternion : Cast<Quaternion>
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0x274A900", Offset = "0x274A900", VA = "0x274A900")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20001FF")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Keyframe : Cast<Keyframe>
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x274A868", Offset = "0x274A868", VA = "0x274A868")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000200")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Bounds : Cast<Bounds>
		{
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x274A6A0", Offset = "0x274A6A0", VA = "0x274A6A0")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000201")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Color : Cast<Color>
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x274A784", Offset = "0x274A784", VA = "0x274A784")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000202")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Rect : Cast<Rect>
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x274AA30", Offset = "0x274AA30", VA = "0x274AA30")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000203")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint : Cast<ContactPoint>
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x274A7D0", Offset = "0x274A7D0", VA = "0x274A7D0")]
			public FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000204")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint2D : Cast<ContactPoint2D>
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x274A81C", Offset = "0x274A81C", VA = "0x274A81C")]
			public FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000205")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Collision : Cast<Collision>
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0x274A6EC", Offset = "0x274A6EC", VA = "0x274A6EC")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000206")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Collision2D : Cast<Collision2D>
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x274A738", Offset = "0x274A738", VA = "0x274A738")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000207")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit : Cast<RaycastHit>
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x274A998", Offset = "0x274A998", VA = "0x274A998")]
			public FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000208")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit2D : Cast<RaycastHit2D>
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x274A9E4", Offset = "0x274A9E4", VA = "0x274A9E4")]
			public FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000209")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Ray : Cast<Ray>
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x274A94C", Offset = "0x274A94C", VA = "0x274A94C")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200020A")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Space : Cast<Space>
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x274AA7C", Offset = "0x274AA7C", VA = "0x274AA7C")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200020B")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_LayerMask : Cast<LayerMask>
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x274A8B4", Offset = "0x274A8B4", VA = "0x274A8B4")]
			public FlowCanvas_Nodes_Cast_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200020C")]
		private class FlowCanvas_Nodes_CastTo_System_Boolean : CastTo<bool>
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0x2749FCC", Offset = "0x2749FCC", VA = "0x2749FCC")]
			public FlowCanvas_Nodes_CastTo_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200020D")]
		private class FlowCanvas_Nodes_CastTo_System_Single : CastTo<float>
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x274A064", Offset = "0x274A064", VA = "0x274A064")]
			public FlowCanvas_Nodes_CastTo_System_Single()
			{
			}
		}

		[Token(Token = "0x200020E")]
		private class FlowCanvas_Nodes_CastTo_System_Int32 : CastTo<int>
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x274A018", Offset = "0x274A018", VA = "0x274A018")]
			public FlowCanvas_Nodes_CastTo_System_Int32()
			{
			}
		}

		[Token(Token = "0x200020F")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Vector2 : CastTo<Vector2>
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x274A4D8", Offset = "0x274A4D8", VA = "0x274A4D8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000210")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Vector3 : CastTo<Vector3>
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x274A524", Offset = "0x274A524", VA = "0x274A524")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000211")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Vector4 : CastTo<Vector4>
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x274A570", Offset = "0x274A570", VA = "0x274A570")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000212")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Quaternion : CastTo<Quaternion>
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x274A310", Offset = "0x274A310", VA = "0x274A310")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000213")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Keyframe : CastTo<Keyframe>
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0x274A278", Offset = "0x274A278", VA = "0x274A278")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000214")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Bounds : CastTo<Bounds>
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x274A0B0", Offset = "0x274A0B0", VA = "0x274A0B0")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000215")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Color : CastTo<Color>
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0x274A194", Offset = "0x274A194", VA = "0x274A194")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000216")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Rect : CastTo<Rect>
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x274A440", Offset = "0x274A440", VA = "0x274A440")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000217")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint : CastTo<ContactPoint>
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0x274A1E0", Offset = "0x274A1E0", VA = "0x274A1E0")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000218")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint2D : CastTo<ContactPoint2D>
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x274A22C", Offset = "0x274A22C", VA = "0x274A22C")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000219")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Collision : CastTo<Collision>
		{
			[Token(Token = "0x6000737")]
			[Address(RVA = "0x274A0FC", Offset = "0x274A0FC", VA = "0x274A0FC")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200021A")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Collision2D : CastTo<Collision2D>
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x274A148", Offset = "0x274A148", VA = "0x274A148")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200021B")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit : CastTo<RaycastHit>
		{
			[Token(Token = "0x6000739")]
			[Address(RVA = "0x274A3A8", Offset = "0x274A3A8", VA = "0x274A3A8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200021C")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit2D : CastTo<RaycastHit2D>
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0x274A3F4", Offset = "0x274A3F4", VA = "0x274A3F4")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200021D")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Ray : CastTo<Ray>
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0x274A35C", Offset = "0x274A35C", VA = "0x274A35C")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200021E")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Space : CastTo<Space>
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0x274A48C", Offset = "0x274A48C", VA = "0x274A48C")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200021F")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_LayerMask : CastTo<LayerMask>
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0x274A2C4", Offset = "0x274A2C4", VA = "0x274A2C4")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000220")]
		private class FlowCanvas_Nodes_CodeEvent_System_Boolean : CodeEvent<bool>
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0x274ABAC", Offset = "0x274ABAC", VA = "0x274ABAC")]
			public FlowCanvas_Nodes_CodeEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000221")]
		private class FlowCanvas_Nodes_CodeEvent_System_Single : CodeEvent<float>
		{
			[Token(Token = "0x600073F")]
			[Address(RVA = "0x274AC44", Offset = "0x274AC44", VA = "0x274AC44")]
			public FlowCanvas_Nodes_CodeEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000222")]
		private class FlowCanvas_Nodes_CodeEvent_System_Int32 : CodeEvent<int>
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0x274ABF8", Offset = "0x274ABF8", VA = "0x274ABF8")]
			public FlowCanvas_Nodes_CodeEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000223")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector2 : CodeEvent<Vector2>
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0x274B0B8", Offset = "0x274B0B8", VA = "0x274B0B8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000224")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector3 : CodeEvent<Vector3>
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0x274B104", Offset = "0x274B104", VA = "0x274B104")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000225")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector4 : CodeEvent<Vector4>
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0x274B150", Offset = "0x274B150", VA = "0x274B150")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000226")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Quaternion : CodeEvent<Quaternion>
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0x274AEF0", Offset = "0x274AEF0", VA = "0x274AEF0")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000227")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Keyframe : CodeEvent<Keyframe>
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0x274AE58", Offset = "0x274AE58", VA = "0x274AE58")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000228")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Bounds : CodeEvent<Bounds>
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0x274AC90", Offset = "0x274AC90", VA = "0x274AC90")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000229")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Color : CodeEvent<Color>
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0x274AD74", Offset = "0x274AD74", VA = "0x274AD74")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200022A")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Rect : CodeEvent<Rect>
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0x274B020", Offset = "0x274B020", VA = "0x274B020")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200022B")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint : CodeEvent<ContactPoint>
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0x274ADC0", Offset = "0x274ADC0", VA = "0x274ADC0")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200022C")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint2D : CodeEvent<ContactPoint2D>
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0x274AE0C", Offset = "0x274AE0C", VA = "0x274AE0C")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200022D")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision : CodeEvent<Collision>
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0x274ACDC", Offset = "0x274ACDC", VA = "0x274ACDC")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200022E")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision2D : CodeEvent<Collision2D>
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0x274AD28", Offset = "0x274AD28", VA = "0x274AD28")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200022F")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit : CodeEvent<RaycastHit>
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0x274AF88", Offset = "0x274AF88", VA = "0x274AF88")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000230")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit2D : CodeEvent<RaycastHit2D>
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0x274AFD4", Offset = "0x274AFD4", VA = "0x274AFD4")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000231")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Ray : CodeEvent<Ray>
		{
			[Token(Token = "0x600074F")]
			[Address(RVA = "0x274AF3C", Offset = "0x274AF3C", VA = "0x274AF3C")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000232")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Space : CodeEvent<Space>
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0x274B06C", Offset = "0x274B06C", VA = "0x274B06C")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000233")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_LayerMask : CodeEvent<LayerMask>
		{
			[Token(Token = "0x6000751")]
			[Address(RVA = "0x274AEA4", Offset = "0x274AEA4", VA = "0x274AEA4")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000234")]
		private class FlowCanvas_Nodes_CreateCollection_System_Boolean : CreateCollection<bool>
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x274B19C", Offset = "0x274B19C", VA = "0x274B19C")]
			public FlowCanvas_Nodes_CreateCollection_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000235")]
		private class FlowCanvas_Nodes_CreateCollection_System_Single : CreateCollection<float>
		{
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x274B234", Offset = "0x274B234", VA = "0x274B234")]
			public FlowCanvas_Nodes_CreateCollection_System_Single()
			{
			}
		}

		[Token(Token = "0x2000236")]
		private class FlowCanvas_Nodes_CreateCollection_System_Int32 : CreateCollection<int>
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0x274B1E8", Offset = "0x274B1E8", VA = "0x274B1E8")]
			public FlowCanvas_Nodes_CreateCollection_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000237")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector2 : CreateCollection<Vector2>
		{
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x274B6A8", Offset = "0x274B6A8", VA = "0x274B6A8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000238")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector3 : CreateCollection<Vector3>
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x274B6F4", Offset = "0x274B6F4", VA = "0x274B6F4")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000239")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector4 : CreateCollection<Vector4>
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x274B740", Offset = "0x274B740", VA = "0x274B740")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200023A")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Quaternion : CreateCollection<Quaternion>
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x274B4E0", Offset = "0x274B4E0", VA = "0x274B4E0")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200023B")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Keyframe : CreateCollection<Keyframe>
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x274B448", Offset = "0x274B448", VA = "0x274B448")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200023C")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Bounds : CreateCollection<Bounds>
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x274B280", Offset = "0x274B280", VA = "0x274B280")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200023D")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Color : CreateCollection<Color>
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0x274B364", Offset = "0x274B364", VA = "0x274B364")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200023E")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Rect : CreateCollection<Rect>
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0x274B610", Offset = "0x274B610", VA = "0x274B610")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200023F")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint : CreateCollection<ContactPoint>
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x274B3B0", Offset = "0x274B3B0", VA = "0x274B3B0")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000240")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint2D : CreateCollection<ContactPoint2D>
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x274B3FC", Offset = "0x274B3FC", VA = "0x274B3FC")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000241")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision : CreateCollection<Collision>
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x274B2CC", Offset = "0x274B2CC", VA = "0x274B2CC")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000242")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision2D : CreateCollection<Collision2D>
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x274B318", Offset = "0x274B318", VA = "0x274B318")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000243")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit : CreateCollection<RaycastHit>
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x274B578", Offset = "0x274B578", VA = "0x274B578")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000244")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit2D : CreateCollection<RaycastHit2D>
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0x274B5C4", Offset = "0x274B5C4", VA = "0x274B5C4")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000245")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Ray : CreateCollection<Ray>
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0x274B52C", Offset = "0x274B52C", VA = "0x274B52C")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000246")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Space : CreateCollection<Space>
		{
			[Token(Token = "0x6000764")]
			[Address(RVA = "0x274B65C", Offset = "0x274B65C", VA = "0x274B65C")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000247")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_LayerMask : CreateCollection<LayerMask>
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x274B494", Offset = "0x274B494", VA = "0x274B494")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000248")]
		private class FlowCanvas_Nodes_CreateDictionary_System_Boolean : CreateDictionary<bool>
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0x274B78C", Offset = "0x274B78C", VA = "0x274B78C")]
			public FlowCanvas_Nodes_CreateDictionary_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000249")]
		private class FlowCanvas_Nodes_CreateDictionary_System_Single : CreateDictionary<float>
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0x274B824", Offset = "0x274B824", VA = "0x274B824")]
			public FlowCanvas_Nodes_CreateDictionary_System_Single()
			{
			}
		}

		[Token(Token = "0x200024A")]
		private class FlowCanvas_Nodes_CreateDictionary_System_Int32 : CreateDictionary<int>
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0x274B7D8", Offset = "0x274B7D8", VA = "0x274B7D8")]
			public FlowCanvas_Nodes_CreateDictionary_System_Int32()
			{
			}
		}

		[Token(Token = "0x200024B")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector2 : CreateDictionary<Vector2>
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x274BC98", Offset = "0x274BC98", VA = "0x274BC98")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200024C")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector3 : CreateDictionary<Vector3>
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x274BCE4", Offset = "0x274BCE4", VA = "0x274BCE4")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200024D")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector4 : CreateDictionary<Vector4>
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x274BD30", Offset = "0x274BD30", VA = "0x274BD30")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200024E")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Quaternion : CreateDictionary<Quaternion>
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0x274BAD0", Offset = "0x274BAD0", VA = "0x274BAD0")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200024F")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Keyframe : CreateDictionary<Keyframe>
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x274BA38", Offset = "0x274BA38", VA = "0x274BA38")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000250")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Bounds : CreateDictionary<Bounds>
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x274B870", Offset = "0x274B870", VA = "0x274B870")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000251")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Color : CreateDictionary<Color>
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0x274B954", Offset = "0x274B954", VA = "0x274B954")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000252")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Rect : CreateDictionary<Rect>
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x274BC00", Offset = "0x274BC00", VA = "0x274BC00")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000253")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint : CreateDictionary<ContactPoint>
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x274B9A0", Offset = "0x274B9A0", VA = "0x274B9A0")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000254")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint2D : CreateDictionary<ContactPoint2D>
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x274B9EC", Offset = "0x274B9EC", VA = "0x274B9EC")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000255")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision : CreateDictionary<Collision>
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x274B8BC", Offset = "0x274B8BC", VA = "0x274B8BC")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000256")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision2D : CreateDictionary<Collision2D>
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x274B908", Offset = "0x274B908", VA = "0x274B908")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000257")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit : CreateDictionary<RaycastHit>
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0x274BB68", Offset = "0x274BB68", VA = "0x274BB68")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000258")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit2D : CreateDictionary<RaycastHit2D>
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0x274BBB4", Offset = "0x274BBB4", VA = "0x274BBB4")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000259")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Ray : CreateDictionary<Ray>
		{
			[Token(Token = "0x6000777")]
			[Address(RVA = "0x274BB1C", Offset = "0x274BB1C", VA = "0x274BB1C")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200025A")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Space : CreateDictionary<Space>
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0x274BC4C", Offset = "0x274BC4C", VA = "0x274BC4C")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200025B")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_LayerMask : CreateDictionary<LayerMask>
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x274BA84", Offset = "0x274BA84", VA = "0x274BA84")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200025C")]
		private class FlowCanvas_Nodes_CustomEvent_System_Boolean : CustomEvent<bool>
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x274BD7C", Offset = "0x274BD7C", VA = "0x274BD7C")]
			public FlowCanvas_Nodes_CustomEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200025D")]
		private class FlowCanvas_Nodes_CustomEvent_System_Single : CustomEvent<float>
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x274BE14", Offset = "0x274BE14", VA = "0x274BE14")]
			public FlowCanvas_Nodes_CustomEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x200025E")]
		private class FlowCanvas_Nodes_CustomEvent_System_Int32 : CustomEvent<int>
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x274BDC8", Offset = "0x274BDC8", VA = "0x274BDC8")]
			public FlowCanvas_Nodes_CustomEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x200025F")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector2 : CustomEvent<Vector2>
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x274C288", Offset = "0x274C288", VA = "0x274C288")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000260")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector3 : CustomEvent<Vector3>
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x274C2D4", Offset = "0x274C2D4", VA = "0x274C2D4")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000261")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector4 : CustomEvent<Vector4>
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x274C320", Offset = "0x274C320", VA = "0x274C320")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000262")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Quaternion : CustomEvent<Quaternion>
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x274C0C0", Offset = "0x274C0C0", VA = "0x274C0C0")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000263")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Keyframe : CustomEvent<Keyframe>
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x274C028", Offset = "0x274C028", VA = "0x274C028")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000264")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Bounds : CustomEvent<Bounds>
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x274BE60", Offset = "0x274BE60", VA = "0x274BE60")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000265")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Color : CustomEvent<Color>
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x274BF44", Offset = "0x274BF44", VA = "0x274BF44")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000266")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Rect : CustomEvent<Rect>
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x274C1F0", Offset = "0x274C1F0", VA = "0x274C1F0")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000267")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint : CustomEvent<ContactPoint>
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0x274BF90", Offset = "0x274BF90", VA = "0x274BF90")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000268")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint2D : CustomEvent<ContactPoint2D>
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x274BFDC", Offset = "0x274BFDC", VA = "0x274BFDC")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000269")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision : CustomEvent<Collision>
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x274BEAC", Offset = "0x274BEAC", VA = "0x274BEAC")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200026A")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision2D : CustomEvent<Collision2D>
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x274BEF8", Offset = "0x274BEF8", VA = "0x274BEF8")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200026B")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit : CustomEvent<RaycastHit>
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x274C158", Offset = "0x274C158", VA = "0x274C158")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200026C")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit2D : CustomEvent<RaycastHit2D>
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x274C1A4", Offset = "0x274C1A4", VA = "0x274C1A4")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200026D")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Ray : CustomEvent<Ray>
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x274C10C", Offset = "0x274C10C", VA = "0x274C10C")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200026E")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Space : CustomEvent<Space>
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x274C23C", Offset = "0x274C23C", VA = "0x274C23C")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200026F")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_LayerMask : CustomEvent<LayerMask>
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x274C074", Offset = "0x274C074", VA = "0x274C074")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000270")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_System_Boolean : DictionaryContainsKey<bool>
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x274C36C", Offset = "0x274C36C", VA = "0x274C36C")]
			public FlowCanvas_Nodes_DictionaryContainsKey_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000271")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_System_Single : DictionaryContainsKey<float>
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x274C404", Offset = "0x274C404", VA = "0x274C404")]
			public FlowCanvas_Nodes_DictionaryContainsKey_System_Single()
			{
			}
		}

		[Token(Token = "0x2000272")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_System_Int32 : DictionaryContainsKey<int>
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x274C3B8", Offset = "0x274C3B8", VA = "0x274C3B8")]
			public FlowCanvas_Nodes_DictionaryContainsKey_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000273")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector2 : DictionaryContainsKey<Vector2>
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x274C878", Offset = "0x274C878", VA = "0x274C878")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000274")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector3 : DictionaryContainsKey<Vector3>
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0x274C8C4", Offset = "0x274C8C4", VA = "0x274C8C4")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000275")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector4 : DictionaryContainsKey<Vector4>
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0x274C910", Offset = "0x274C910", VA = "0x274C910")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000276")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Quaternion : DictionaryContainsKey<Quaternion>
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0x274C6B0", Offset = "0x274C6B0", VA = "0x274C6B0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000277")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Keyframe : DictionaryContainsKey<Keyframe>
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0x274C618", Offset = "0x274C618", VA = "0x274C618")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000278")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Bounds : DictionaryContainsKey<Bounds>
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0x274C450", Offset = "0x274C450", VA = "0x274C450")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000279")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Color : DictionaryContainsKey<Color>
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x274C534", Offset = "0x274C534", VA = "0x274C534")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200027A")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Rect : DictionaryContainsKey<Rect>
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0x274C7E0", Offset = "0x274C7E0", VA = "0x274C7E0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200027B")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint : DictionaryContainsKey<ContactPoint>
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x274C580", Offset = "0x274C580", VA = "0x274C580")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200027C")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint2D : DictionaryContainsKey<ContactPoint2D>
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x274C5CC", Offset = "0x274C5CC", VA = "0x274C5CC")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200027D")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision : DictionaryContainsKey<Collision>
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x274C49C", Offset = "0x274C49C", VA = "0x274C49C")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200027E")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision2D : DictionaryContainsKey<Collision2D>
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x274C4E8", Offset = "0x274C4E8", VA = "0x274C4E8")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200027F")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit : DictionaryContainsKey<RaycastHit>
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x274C748", Offset = "0x274C748", VA = "0x274C748")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000280")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit2D : DictionaryContainsKey<RaycastHit2D>
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0x274C794", Offset = "0x274C794", VA = "0x274C794")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000281")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Ray : DictionaryContainsKey<Ray>
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0x274C6FC", Offset = "0x274C6FC", VA = "0x274C6FC")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000282")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Space : DictionaryContainsKey<Space>
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x274C82C", Offset = "0x274C82C", VA = "0x274C82C")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000283")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_LayerMask : DictionaryContainsKey<LayerMask>
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x274C664", Offset = "0x274C664", VA = "0x274C664")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000284")]
		private class FlowCanvas_Nodes_ForEach_System_Boolean : ForEach<bool>
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x274C95C", Offset = "0x274C95C", VA = "0x274C95C")]
			public FlowCanvas_Nodes_ForEach_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000285")]
		private class FlowCanvas_Nodes_ForEach_System_Single : ForEach<float>
		{
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x274C9F4", Offset = "0x274C9F4", VA = "0x274C9F4")]
			public FlowCanvas_Nodes_ForEach_System_Single()
			{
			}
		}

		[Token(Token = "0x2000286")]
		private class FlowCanvas_Nodes_ForEach_System_Int32 : ForEach<int>
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x274C9A8", Offset = "0x274C9A8", VA = "0x274C9A8")]
			public FlowCanvas_Nodes_ForEach_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000287")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Vector2 : ForEach<Vector2>
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x274CE68", Offset = "0x274CE68", VA = "0x274CE68")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000288")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Vector3 : ForEach<Vector3>
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x274CEB4", Offset = "0x274CEB4", VA = "0x274CEB4")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000289")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Vector4 : ForEach<Vector4>
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x274CF00", Offset = "0x274CF00", VA = "0x274CF00")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200028A")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Quaternion : ForEach<Quaternion>
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x274CCA0", Offset = "0x274CCA0", VA = "0x274CCA0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200028B")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Keyframe : ForEach<Keyframe>
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x274CC08", Offset = "0x274CC08", VA = "0x274CC08")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200028C")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Bounds : ForEach<Bounds>
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x274CA40", Offset = "0x274CA40", VA = "0x274CA40")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200028D")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Color : ForEach<Color>
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x274CB24", Offset = "0x274CB24", VA = "0x274CB24")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200028E")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Rect : ForEach<Rect>
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x274CDD0", Offset = "0x274CDD0", VA = "0x274CDD0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200028F")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint : ForEach<ContactPoint>
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x274CB70", Offset = "0x274CB70", VA = "0x274CB70")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000290")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint2D : ForEach<ContactPoint2D>
		{
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x274CBBC", Offset = "0x274CBBC", VA = "0x274CBBC")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000291")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Collision : ForEach<Collision>
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x274CA8C", Offset = "0x274CA8C", VA = "0x274CA8C")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000292")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Collision2D : ForEach<Collision2D>
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x274CAD8", Offset = "0x274CAD8", VA = "0x274CAD8")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000293")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit : ForEach<RaycastHit>
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x274CD38", Offset = "0x274CD38", VA = "0x274CD38")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000294")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit2D : ForEach<RaycastHit2D>
		{
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x274CD84", Offset = "0x274CD84", VA = "0x274CD84")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000295")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Ray : ForEach<Ray>
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x274CCEC", Offset = "0x274CCEC", VA = "0x274CCEC")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000296")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Space : ForEach<Space>
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x274CE1C", Offset = "0x274CE1C", VA = "0x274CE1C")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000297")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_LayerMask : ForEach<LayerMask>
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x274CC54", Offset = "0x274CC54", VA = "0x274CC54")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000298")]
		private class FlowCanvas_Nodes_GetDictionaryItem_System_Boolean : GetDictionaryItem<bool>
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0x274CF4C", Offset = "0x274CF4C", VA = "0x274CF4C")]
			public FlowCanvas_Nodes_GetDictionaryItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000299")]
		private class FlowCanvas_Nodes_GetDictionaryItem_System_Single : GetDictionaryItem<float>
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0x274CFE4", Offset = "0x274CFE4", VA = "0x274CFE4")]
			public FlowCanvas_Nodes_GetDictionaryItem_System_Single()
			{
			}
		}

		[Token(Token = "0x200029A")]
		private class FlowCanvas_Nodes_GetDictionaryItem_System_Int32 : GetDictionaryItem<int>
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x274CF98", Offset = "0x274CF98", VA = "0x274CF98")]
			public FlowCanvas_Nodes_GetDictionaryItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x200029B")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector2 : GetDictionaryItem<Vector2>
		{
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0x274D458", Offset = "0x274D458", VA = "0x274D458")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200029C")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector3 : GetDictionaryItem<Vector3>
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x274D4A4", Offset = "0x274D4A4", VA = "0x274D4A4")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200029D")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector4 : GetDictionaryItem<Vector4>
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x274D4F0", Offset = "0x274D4F0", VA = "0x274D4F0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200029E")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Quaternion : GetDictionaryItem<Quaternion>
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x274D290", Offset = "0x274D290", VA = "0x274D290")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200029F")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Keyframe : GetDictionaryItem<Keyframe>
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x274D1F8", Offset = "0x274D1F8", VA = "0x274D1F8")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20002A0")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Bounds : GetDictionaryItem<Bounds>
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x274D030", Offset = "0x274D030", VA = "0x274D030")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20002A1")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Color : GetDictionaryItem<Color>
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x274D114", Offset = "0x274D114", VA = "0x274D114")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20002A2")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Rect : GetDictionaryItem<Rect>
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x274D3C0", Offset = "0x274D3C0", VA = "0x274D3C0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20002A3")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint : GetDictionaryItem<ContactPoint>
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x274D160", Offset = "0x274D160", VA = "0x274D160")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20002A4")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint2D : GetDictionaryItem<ContactPoint2D>
		{
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x274D1AC", Offset = "0x274D1AC", VA = "0x274D1AC")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20002A5")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision : GetDictionaryItem<Collision>
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x274D07C", Offset = "0x274D07C", VA = "0x274D07C")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20002A6")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision2D : GetDictionaryItem<Collision2D>
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x274D0C8", Offset = "0x274D0C8", VA = "0x274D0C8")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20002A7")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit : GetDictionaryItem<RaycastHit>
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x274D328", Offset = "0x274D328", VA = "0x274D328")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20002A8")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit2D : GetDictionaryItem<RaycastHit2D>
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x274D374", Offset = "0x274D374", VA = "0x274D374")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20002A9")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Ray : GetDictionaryItem<Ray>
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x274D2DC", Offset = "0x274D2DC", VA = "0x274D2DC")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20002AA")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Space : GetDictionaryItem<Space>
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x274D40C", Offset = "0x274D40C", VA = "0x274D40C")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20002AB")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_LayerMask : GetDictionaryItem<LayerMask>
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x274D244", Offset = "0x274D244", VA = "0x274D244")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		private class FlowCanvas_Nodes_GetFirstListItem_System_Boolean : GetFirstListItem<bool>
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x274D53C", Offset = "0x274D53C", VA = "0x274D53C")]
			public FlowCanvas_Nodes_GetFirstListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20002AD")]
		private class FlowCanvas_Nodes_GetFirstListItem_System_Single : GetFirstListItem<float>
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0x274D5D4", Offset = "0x274D5D4", VA = "0x274D5D4")]
			public FlowCanvas_Nodes_GetFirstListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20002AE")]
		private class FlowCanvas_Nodes_GetFirstListItem_System_Int32 : GetFirstListItem<int>
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x274D588", Offset = "0x274D588", VA = "0x274D588")]
			public FlowCanvas_Nodes_GetFirstListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20002AF")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector2 : GetFirstListItem<Vector2>
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x274DA48", Offset = "0x274DA48", VA = "0x274DA48")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20002B0")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector3 : GetFirstListItem<Vector3>
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x274DA94", Offset = "0x274DA94", VA = "0x274DA94")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20002B1")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector4 : GetFirstListItem<Vector4>
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x274DAE0", Offset = "0x274DAE0", VA = "0x274DAE0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20002B2")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Quaternion : GetFirstListItem<Quaternion>
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x274D880", Offset = "0x274D880", VA = "0x274D880")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20002B3")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Keyframe : GetFirstListItem<Keyframe>
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x274D7E8", Offset = "0x274D7E8", VA = "0x274D7E8")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20002B4")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Bounds : GetFirstListItem<Bounds>
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x274D620", Offset = "0x274D620", VA = "0x274D620")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20002B5")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Color : GetFirstListItem<Color>
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x274D704", Offset = "0x274D704", VA = "0x274D704")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20002B6")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Rect : GetFirstListItem<Rect>
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x274D9B0", Offset = "0x274D9B0", VA = "0x274D9B0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20002B7")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint : GetFirstListItem<ContactPoint>
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x274D750", Offset = "0x274D750", VA = "0x274D750")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20002B8")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint2D : GetFirstListItem<ContactPoint2D>
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x274D79C", Offset = "0x274D79C", VA = "0x274D79C")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20002B9")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision : GetFirstListItem<Collision>
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x274D66C", Offset = "0x274D66C", VA = "0x274D66C")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20002BA")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision2D : GetFirstListItem<Collision2D>
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x274D6B8", Offset = "0x274D6B8", VA = "0x274D6B8")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20002BB")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit : GetFirstListItem<RaycastHit>
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x274D918", Offset = "0x274D918", VA = "0x274D918")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20002BC")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit2D : GetFirstListItem<RaycastHit2D>
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x274D964", Offset = "0x274D964", VA = "0x274D964")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20002BD")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Ray : GetFirstListItem<Ray>
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x274D8CC", Offset = "0x274D8CC", VA = "0x274D8CC")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20002BE")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Space : GetFirstListItem<Space>
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x274D9FC", Offset = "0x274D9FC", VA = "0x274D9FC")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20002BF")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_LayerMask : GetFirstListItem<LayerMask>
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x274D834", Offset = "0x274D834", VA = "0x274D834")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20002C0")]
		private class FlowCanvas_Nodes_GetLastListItem_System_Boolean : GetLastListItem<bool>
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x274DB2C", Offset = "0x274DB2C", VA = "0x274DB2C")]
			public FlowCanvas_Nodes_GetLastListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		private class FlowCanvas_Nodes_GetLastListItem_System_Single : GetLastListItem<float>
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x274DBC4", Offset = "0x274DBC4", VA = "0x274DBC4")]
			public FlowCanvas_Nodes_GetLastListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20002C2")]
		private class FlowCanvas_Nodes_GetLastListItem_System_Int32 : GetLastListItem<int>
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x274DB78", Offset = "0x274DB78", VA = "0x274DB78")]
			public FlowCanvas_Nodes_GetLastListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20002C3")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector2 : GetLastListItem<Vector2>
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x274E038", Offset = "0x274E038", VA = "0x274E038")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20002C4")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector3 : GetLastListItem<Vector3>
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x274E084", Offset = "0x274E084", VA = "0x274E084")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20002C5")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector4 : GetLastListItem<Vector4>
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x274E0D0", Offset = "0x274E0D0", VA = "0x274E0D0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20002C6")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Quaternion : GetLastListItem<Quaternion>
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x274DE70", Offset = "0x274DE70", VA = "0x274DE70")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20002C7")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Keyframe : GetLastListItem<Keyframe>
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x274DDD8", Offset = "0x274DDD8", VA = "0x274DDD8")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20002C8")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Bounds : GetLastListItem<Bounds>
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x274DC10", Offset = "0x274DC10", VA = "0x274DC10")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20002C9")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Color : GetLastListItem<Color>
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x274DCF4", Offset = "0x274DCF4", VA = "0x274DCF4")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20002CA")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Rect : GetLastListItem<Rect>
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x274DFA0", Offset = "0x274DFA0", VA = "0x274DFA0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20002CB")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint : GetLastListItem<ContactPoint>
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x274DD40", Offset = "0x274DD40", VA = "0x274DD40")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20002CC")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint2D : GetLastListItem<ContactPoint2D>
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x274DD8C", Offset = "0x274DD8C", VA = "0x274DD8C")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20002CD")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision : GetLastListItem<Collision>
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0x274DC5C", Offset = "0x274DC5C", VA = "0x274DC5C")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20002CE")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision2D : GetLastListItem<Collision2D>
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x274DCA8", Offset = "0x274DCA8", VA = "0x274DCA8")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20002CF")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit : GetLastListItem<RaycastHit>
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x274DF08", Offset = "0x274DF08", VA = "0x274DF08")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20002D0")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit2D : GetLastListItem<RaycastHit2D>
		{
			[Token(Token = "0x60007EE")]
			[Address(RVA = "0x274DF54", Offset = "0x274DF54", VA = "0x274DF54")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20002D1")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Ray : GetLastListItem<Ray>
		{
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x274DEBC", Offset = "0x274DEBC", VA = "0x274DEBC")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20002D2")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Space : GetLastListItem<Space>
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0x274DFEC", Offset = "0x274DFEC", VA = "0x274DFEC")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20002D3")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_LayerMask : GetLastListItem<LayerMask>
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x274DE24", Offset = "0x274DE24", VA = "0x274DE24")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20002D4")]
		private class FlowCanvas_Nodes_GetListItem_System_Boolean : GetListItem<bool>
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x274E11C", Offset = "0x274E11C", VA = "0x274E11C")]
			public FlowCanvas_Nodes_GetListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20002D5")]
		private class FlowCanvas_Nodes_GetListItem_System_Single : GetListItem<float>
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x274E1B4", Offset = "0x274E1B4", VA = "0x274E1B4")]
			public FlowCanvas_Nodes_GetListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20002D6")]
		private class FlowCanvas_Nodes_GetListItem_System_Int32 : GetListItem<int>
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x274E168", Offset = "0x274E168", VA = "0x274E168")]
			public FlowCanvas_Nodes_GetListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20002D7")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Vector2 : GetListItem<Vector2>
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x274E628", Offset = "0x274E628", VA = "0x274E628")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20002D8")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Vector3 : GetListItem<Vector3>
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x274E674", Offset = "0x274E674", VA = "0x274E674")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20002D9")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Vector4 : GetListItem<Vector4>
		{
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x274E6C0", Offset = "0x274E6C0", VA = "0x274E6C0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20002DA")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Quaternion : GetListItem<Quaternion>
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x274E460", Offset = "0x274E460", VA = "0x274E460")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20002DB")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Keyframe : GetListItem<Keyframe>
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x274E3C8", Offset = "0x274E3C8", VA = "0x274E3C8")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20002DC")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Bounds : GetListItem<Bounds>
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x274E200", Offset = "0x274E200", VA = "0x274E200")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20002DD")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Color : GetListItem<Color>
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x274E2E4", Offset = "0x274E2E4", VA = "0x274E2E4")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20002DE")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Rect : GetListItem<Rect>
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x274E590", Offset = "0x274E590", VA = "0x274E590")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20002DF")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint : GetListItem<ContactPoint>
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x274E330", Offset = "0x274E330", VA = "0x274E330")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20002E0")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint2D : GetListItem<ContactPoint2D>
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x274E37C", Offset = "0x274E37C", VA = "0x274E37C")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20002E1")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Collision : GetListItem<Collision>
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x274E24C", Offset = "0x274E24C", VA = "0x274E24C")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20002E2")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Collision2D : GetListItem<Collision2D>
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x274E298", Offset = "0x274E298", VA = "0x274E298")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20002E3")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit : GetListItem<RaycastHit>
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x274E4F8", Offset = "0x274E4F8", VA = "0x274E4F8")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20002E4")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit2D : GetListItem<RaycastHit2D>
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x274E544", Offset = "0x274E544", VA = "0x274E544")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20002E5")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Ray : GetListItem<Ray>
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0x274E4AC", Offset = "0x274E4AC", VA = "0x274E4AC")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20002E6")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Space : GetListItem<Space>
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x274E5DC", Offset = "0x274E5DC", VA = "0x274E5DC")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20002E7")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_LayerMask : GetListItem<LayerMask>
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0x274E414", Offset = "0x274E414", VA = "0x274E414")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20002E8")]
		private class FlowCanvas_Nodes_GetOtherVariable_System_Boolean : GetOtherVariable<bool>
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x274E70C", Offset = "0x274E70C", VA = "0x274E70C")]
			public FlowCanvas_Nodes_GetOtherVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20002E9")]
		private class FlowCanvas_Nodes_GetOtherVariable_System_Single : GetOtherVariable<float>
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x274E7A4", Offset = "0x274E7A4", VA = "0x274E7A4")]
			public FlowCanvas_Nodes_GetOtherVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x20002EA")]
		private class FlowCanvas_Nodes_GetOtherVariable_System_Int32 : GetOtherVariable<int>
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x274E758", Offset = "0x274E758", VA = "0x274E758")]
			public FlowCanvas_Nodes_GetOtherVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x20002EB")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector2 : GetOtherVariable<Vector2>
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x274EC18", Offset = "0x274EC18", VA = "0x274EC18")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20002EC")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector3 : GetOtherVariable<Vector3>
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0x274EC64", Offset = "0x274EC64", VA = "0x274EC64")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20002ED")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector4 : GetOtherVariable<Vector4>
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x274ECB0", Offset = "0x274ECB0", VA = "0x274ECB0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20002EE")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Quaternion : GetOtherVariable<Quaternion>
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x274EA50", Offset = "0x274EA50", VA = "0x274EA50")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20002EF")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Keyframe : GetOtherVariable<Keyframe>
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x274E9B8", Offset = "0x274E9B8", VA = "0x274E9B8")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20002F0")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Bounds : GetOtherVariable<Bounds>
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x274E7F0", Offset = "0x274E7F0", VA = "0x274E7F0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20002F1")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Color : GetOtherVariable<Color>
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x274E8D4", Offset = "0x274E8D4", VA = "0x274E8D4")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20002F2")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Rect : GetOtherVariable<Rect>
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x274EB80", Offset = "0x274EB80", VA = "0x274EB80")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20002F3")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint : GetOtherVariable<ContactPoint>
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0x274E920", Offset = "0x274E920", VA = "0x274E920")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20002F4")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint2D : GetOtherVariable<ContactPoint2D>
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0x274E96C", Offset = "0x274E96C", VA = "0x274E96C")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20002F5")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision : GetOtherVariable<Collision>
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x274E83C", Offset = "0x274E83C", VA = "0x274E83C")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20002F6")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision2D : GetOtherVariable<Collision2D>
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x274E888", Offset = "0x274E888", VA = "0x274E888")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20002F7")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit : GetOtherVariable<RaycastHit>
		{
			[Token(Token = "0x6000815")]
			[Address(RVA = "0x274EAE8", Offset = "0x274EAE8", VA = "0x274EAE8")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20002F8")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit2D : GetOtherVariable<RaycastHit2D>
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0x274EB34", Offset = "0x274EB34", VA = "0x274EB34")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20002F9")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Ray : GetOtherVariable<Ray>
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x274EA9C", Offset = "0x274EA9C", VA = "0x274EA9C")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20002FA")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Space : GetOtherVariable<Space>
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x274EBCC", Offset = "0x274EBCC", VA = "0x274EBCC")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20002FB")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_LayerMask : GetOtherVariable<LayerMask>
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x274EA04", Offset = "0x274EA04", VA = "0x274EA04")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20002FC")]
		private class FlowCanvas_Nodes_GetRandomListItem_System_Boolean : GetRandomListItem<bool>
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x274ECFC", Offset = "0x274ECFC", VA = "0x274ECFC")]
			public FlowCanvas_Nodes_GetRandomListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20002FD")]
		private class FlowCanvas_Nodes_GetRandomListItem_System_Single : GetRandomListItem<float>
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x274ED94", Offset = "0x274ED94", VA = "0x274ED94")]
			public FlowCanvas_Nodes_GetRandomListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		private class FlowCanvas_Nodes_GetRandomListItem_System_Int32 : GetRandomListItem<int>
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x274ED48", Offset = "0x274ED48", VA = "0x274ED48")]
			public FlowCanvas_Nodes_GetRandomListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20002FF")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector2 : GetRandomListItem<Vector2>
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x274F208", Offset = "0x274F208", VA = "0x274F208")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000300")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector3 : GetRandomListItem<Vector3>
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x274F254", Offset = "0x274F254", VA = "0x274F254")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000301")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector4 : GetRandomListItem<Vector4>
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x274F2A0", Offset = "0x274F2A0", VA = "0x274F2A0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000302")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Quaternion : GetRandomListItem<Quaternion>
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x274F040", Offset = "0x274F040", VA = "0x274F040")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000303")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Keyframe : GetRandomListItem<Keyframe>
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x274EFA8", Offset = "0x274EFA8", VA = "0x274EFA8")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000304")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Bounds : GetRandomListItem<Bounds>
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x274EDE0", Offset = "0x274EDE0", VA = "0x274EDE0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000305")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Color : GetRandomListItem<Color>
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x274EEC4", Offset = "0x274EEC4", VA = "0x274EEC4")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000306")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Rect : GetRandomListItem<Rect>
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x274F170", Offset = "0x274F170", VA = "0x274F170")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000307")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint : GetRandomListItem<ContactPoint>
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x274EF10", Offset = "0x274EF10", VA = "0x274EF10")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000308")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint2D : GetRandomListItem<ContactPoint2D>
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x274EF5C", Offset = "0x274EF5C", VA = "0x274EF5C")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000309")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision : GetRandomListItem<Collision>
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x274EE2C", Offset = "0x274EE2C", VA = "0x274EE2C")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200030A")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision2D : GetRandomListItem<Collision2D>
		{
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x274EE78", Offset = "0x274EE78", VA = "0x274EE78")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200030B")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit : GetRandomListItem<RaycastHit>
		{
			[Token(Token = "0x6000829")]
			[Address(RVA = "0x274F0D8", Offset = "0x274F0D8", VA = "0x274F0D8")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200030C")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit2D : GetRandomListItem<RaycastHit2D>
		{
			[Token(Token = "0x600082A")]
			[Address(RVA = "0x274F124", Offset = "0x274F124", VA = "0x274F124")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200030D")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Ray : GetRandomListItem<Ray>
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0x274F08C", Offset = "0x274F08C", VA = "0x274F08C")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200030E")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Space : GetRandomListItem<Space>
		{
			[Token(Token = "0x600082C")]
			[Address(RVA = "0x274F1BC", Offset = "0x274F1BC", VA = "0x274F1BC")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200030F")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_LayerMask : GetRandomListItem<LayerMask>
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0x274EFF4", Offset = "0x274EFF4", VA = "0x274EFF4")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000310")]
		private class FlowCanvas_Nodes_GetVariable_System_Boolean : GetVariable<bool>
		{
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x274F2EC", Offset = "0x274F2EC", VA = "0x274F2EC")]
			public FlowCanvas_Nodes_GetVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000311")]
		private class FlowCanvas_Nodes_GetVariable_System_Single : GetVariable<float>
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x274F384", Offset = "0x274F384", VA = "0x274F384")]
			public FlowCanvas_Nodes_GetVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000312")]
		private class FlowCanvas_Nodes_GetVariable_System_Int32 : GetVariable<int>
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x274F338", Offset = "0x274F338", VA = "0x274F338")]
			public FlowCanvas_Nodes_GetVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000313")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Vector2 : GetVariable<Vector2>
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x274F7F8", Offset = "0x274F7F8", VA = "0x274F7F8")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000314")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Vector3 : GetVariable<Vector3>
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x274F844", Offset = "0x274F844", VA = "0x274F844")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000315")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Vector4 : GetVariable<Vector4>
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x274F890", Offset = "0x274F890", VA = "0x274F890")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000316")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Quaternion : GetVariable<Quaternion>
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x274F630", Offset = "0x274F630", VA = "0x274F630")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000317")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Keyframe : GetVariable<Keyframe>
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x274F598", Offset = "0x274F598", VA = "0x274F598")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000318")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Bounds : GetVariable<Bounds>
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x274F3D0", Offset = "0x274F3D0", VA = "0x274F3D0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000319")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Color : GetVariable<Color>
		{
			[Token(Token = "0x6000837")]
			[Address(RVA = "0x274F4B4", Offset = "0x274F4B4", VA = "0x274F4B4")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200031A")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Rect : GetVariable<Rect>
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x274F760", Offset = "0x274F760", VA = "0x274F760")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200031B")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint : GetVariable<ContactPoint>
		{
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x274F500", Offset = "0x274F500", VA = "0x274F500")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200031C")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint2D : GetVariable<ContactPoint2D>
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x274F54C", Offset = "0x274F54C", VA = "0x274F54C")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200031D")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Collision : GetVariable<Collision>
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0x274F41C", Offset = "0x274F41C", VA = "0x274F41C")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200031E")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Collision2D : GetVariable<Collision2D>
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x274F468", Offset = "0x274F468", VA = "0x274F468")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200031F")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit : GetVariable<RaycastHit>
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x274F6C8", Offset = "0x274F6C8", VA = "0x274F6C8")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000320")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit2D : GetVariable<RaycastHit2D>
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x274F714", Offset = "0x274F714", VA = "0x274F714")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000321")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Ray : GetVariable<Ray>
		{
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x274F67C", Offset = "0x274F67C", VA = "0x274F67C")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000322")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Space : GetVariable<Space>
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x274F7AC", Offset = "0x274F7AC", VA = "0x274F7AC")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000323")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_LayerMask : GetVariable<LayerMask>
		{
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x274F5E4", Offset = "0x274F5E4", VA = "0x274F5E4")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000324")]
		private class FlowCanvas_Nodes_Identity_System_Boolean : Identity<bool>
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x274F8DC", Offset = "0x274F8DC", VA = "0x274F8DC")]
			public FlowCanvas_Nodes_Identity_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000325")]
		private class FlowCanvas_Nodes_Identity_System_Single : Identity<float>
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x274F974", Offset = "0x274F974", VA = "0x274F974")]
			public FlowCanvas_Nodes_Identity_System_Single()
			{
			}
		}

		[Token(Token = "0x2000326")]
		private class FlowCanvas_Nodes_Identity_System_Int32 : Identity<int>
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x274F928", Offset = "0x274F928", VA = "0x274F928")]
			public FlowCanvas_Nodes_Identity_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000327")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Vector2 : Identity<Vector2>
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x274FDE8", Offset = "0x274FDE8", VA = "0x274FDE8")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000328")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Vector3 : Identity<Vector3>
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x274FE34", Offset = "0x274FE34", VA = "0x274FE34")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000329")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Vector4 : Identity<Vector4>
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0x274FE80", Offset = "0x274FE80", VA = "0x274FE80")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200032A")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Quaternion : Identity<Quaternion>
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x274FC20", Offset = "0x274FC20", VA = "0x274FC20")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200032B")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Keyframe : Identity<Keyframe>
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x274FB88", Offset = "0x274FB88", VA = "0x274FB88")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200032C")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Bounds : Identity<Bounds>
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x274F9C0", Offset = "0x274F9C0", VA = "0x274F9C0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200032D")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Color : Identity<Color>
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x274FAA4", Offset = "0x274FAA4", VA = "0x274FAA4")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200032E")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Rect : Identity<Rect>
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x274FD50", Offset = "0x274FD50", VA = "0x274FD50")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200032F")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint : Identity<ContactPoint>
		{
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x274FAF0", Offset = "0x274FAF0", VA = "0x274FAF0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000330")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint2D : Identity<ContactPoint2D>
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x274FB3C", Offset = "0x274FB3C", VA = "0x274FB3C")]
			public FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000331")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Collision : Identity<Collision>
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x274FA0C", Offset = "0x274FA0C", VA = "0x274FA0C")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000332")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Collision2D : Identity<Collision2D>
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x274FA58", Offset = "0x274FA58", VA = "0x274FA58")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000333")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit : Identity<RaycastHit>
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x274FCB8", Offset = "0x274FCB8", VA = "0x274FCB8")]
			public FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000334")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit2D : Identity<RaycastHit2D>
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x274FD04", Offset = "0x274FD04", VA = "0x274FD04")]
			public FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000335")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Ray : Identity<Ray>
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x274FC6C", Offset = "0x274FC6C", VA = "0x274FC6C")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000336")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Space : Identity<Space>
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x274FD9C", Offset = "0x274FD9C", VA = "0x274FD9C")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000337")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_LayerMask : Identity<LayerMask>
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x274FBD4", Offset = "0x274FBD4", VA = "0x274FBD4")]
			public FlowCanvas_Nodes_Identity_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000338")]
		private class FlowCanvas_Nodes_InsertListItem_System_Boolean : InsertListItem<bool>
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x274FECC", Offset = "0x274FECC", VA = "0x274FECC")]
			public FlowCanvas_Nodes_InsertListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000339")]
		private class FlowCanvas_Nodes_InsertListItem_System_Single : InsertListItem<float>
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x274FF64", Offset = "0x274FF64", VA = "0x274FF64")]
			public FlowCanvas_Nodes_InsertListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x200033A")]
		private class FlowCanvas_Nodes_InsertListItem_System_Int32 : InsertListItem<int>
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x274FF18", Offset = "0x274FF18", VA = "0x274FF18")]
			public FlowCanvas_Nodes_InsertListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x200033B")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector2 : InsertListItem<Vector2>
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x27503D8", Offset = "0x27503D8", VA = "0x27503D8")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200033C")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector3 : InsertListItem<Vector3>
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x2750424", Offset = "0x2750424", VA = "0x2750424")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200033D")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector4 : InsertListItem<Vector4>
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x2750470", Offset = "0x2750470", VA = "0x2750470")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200033E")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Quaternion : InsertListItem<Quaternion>
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x2750210", Offset = "0x2750210", VA = "0x2750210")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200033F")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Keyframe : InsertListItem<Keyframe>
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x2750178", Offset = "0x2750178", VA = "0x2750178")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000340")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Bounds : InsertListItem<Bounds>
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x274FFB0", Offset = "0x274FFB0", VA = "0x274FFB0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000341")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Color : InsertListItem<Color>
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x2750094", Offset = "0x2750094", VA = "0x2750094")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000342")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Rect : InsertListItem<Rect>
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x2750340", Offset = "0x2750340", VA = "0x2750340")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000343")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint : InsertListItem<ContactPoint>
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x27500E0", Offset = "0x27500E0", VA = "0x27500E0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000344")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint2D : InsertListItem<ContactPoint2D>
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x275012C", Offset = "0x275012C", VA = "0x275012C")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000345")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision : InsertListItem<Collision>
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x274FFFC", Offset = "0x274FFFC", VA = "0x274FFFC")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000346")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision2D : InsertListItem<Collision2D>
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x2750048", Offset = "0x2750048", VA = "0x2750048")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000347")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit : InsertListItem<RaycastHit>
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x27502A8", Offset = "0x27502A8", VA = "0x27502A8")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000348")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit2D : InsertListItem<RaycastHit2D>
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x27502F4", Offset = "0x27502F4", VA = "0x27502F4")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000349")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Ray : InsertListItem<Ray>
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x275025C", Offset = "0x275025C", VA = "0x275025C")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200034A")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Space : InsertListItem<Space>
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x275038C", Offset = "0x275038C", VA = "0x275038C")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200034B")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_LayerMask : InsertListItem<LayerMask>
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x27501C4", Offset = "0x27501C4", VA = "0x27501C4")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200034C")]
		private class FlowCanvas_Nodes_PickValue_System_Boolean : PickValue<bool>
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0x27504BC", Offset = "0x27504BC", VA = "0x27504BC")]
			public FlowCanvas_Nodes_PickValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200034D")]
		private class FlowCanvas_Nodes_PickValue_System_Single : PickValue<float>
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0x2750554", Offset = "0x2750554", VA = "0x2750554")]
			public FlowCanvas_Nodes_PickValue_System_Single()
			{
			}
		}

		[Token(Token = "0x200034E")]
		private class FlowCanvas_Nodes_PickValue_System_Int32 : PickValue<int>
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x2750508", Offset = "0x2750508", VA = "0x2750508")]
			public FlowCanvas_Nodes_PickValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x200034F")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Vector2 : PickValue<Vector2>
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0x27509C8", Offset = "0x27509C8", VA = "0x27509C8")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000350")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Vector3 : PickValue<Vector3>
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0x2750A14", Offset = "0x2750A14", VA = "0x2750A14")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000351")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Vector4 : PickValue<Vector4>
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0x2750A60", Offset = "0x2750A60", VA = "0x2750A60")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000352")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Quaternion : PickValue<Quaternion>
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0x2750800", Offset = "0x2750800", VA = "0x2750800")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000353")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Keyframe : PickValue<Keyframe>
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0x2750768", Offset = "0x2750768", VA = "0x2750768")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000354")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Bounds : PickValue<Bounds>
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0x27505A0", Offset = "0x27505A0", VA = "0x27505A0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000355")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Color : PickValue<Color>
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0x2750684", Offset = "0x2750684", VA = "0x2750684")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000356")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Rect : PickValue<Rect>
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x2750930", Offset = "0x2750930", VA = "0x2750930")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000357")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint : PickValue<ContactPoint>
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x27506D0", Offset = "0x27506D0", VA = "0x27506D0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000358")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint2D : PickValue<ContactPoint2D>
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x275071C", Offset = "0x275071C", VA = "0x275071C")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000359")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Collision : PickValue<Collision>
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x27505EC", Offset = "0x27505EC", VA = "0x27505EC")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200035A")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Collision2D : PickValue<Collision2D>
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x2750638", Offset = "0x2750638", VA = "0x2750638")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200035B")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit : PickValue<RaycastHit>
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x2750898", Offset = "0x2750898", VA = "0x2750898")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200035C")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit2D : PickValue<RaycastHit2D>
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x27508E4", Offset = "0x27508E4", VA = "0x27508E4")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200035D")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Ray : PickValue<Ray>
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x275084C", Offset = "0x275084C", VA = "0x275084C")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200035E")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Space : PickValue<Space>
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x275097C", Offset = "0x275097C", VA = "0x275097C")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200035F")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_LayerMask : PickValue<LayerMask>
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x27507B4", Offset = "0x27507B4", VA = "0x27507B4")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000360")]
		private class FlowCanvas_Nodes_ReadFlowParameter_System_Boolean : ReadFlowParameter<bool>
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x2750AAC", Offset = "0x2750AAC", VA = "0x2750AAC")]
			public FlowCanvas_Nodes_ReadFlowParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000361")]
		private class FlowCanvas_Nodes_ReadFlowParameter_System_Single : ReadFlowParameter<float>
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x2750B44", Offset = "0x2750B44", VA = "0x2750B44")]
			public FlowCanvas_Nodes_ReadFlowParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x2000362")]
		private class FlowCanvas_Nodes_ReadFlowParameter_System_Int32 : ReadFlowParameter<int>
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x2750AF8", Offset = "0x2750AF8", VA = "0x2750AF8")]
			public FlowCanvas_Nodes_ReadFlowParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000363")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector2 : ReadFlowParameter<Vector2>
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x2750FB8", Offset = "0x2750FB8", VA = "0x2750FB8")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000364")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector3 : ReadFlowParameter<Vector3>
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x2751004", Offset = "0x2751004", VA = "0x2751004")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000365")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector4 : ReadFlowParameter<Vector4>
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0x2751050", Offset = "0x2751050", VA = "0x2751050")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000366")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Quaternion : ReadFlowParameter<Quaternion>
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0x2750DF0", Offset = "0x2750DF0", VA = "0x2750DF0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000367")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Keyframe : ReadFlowParameter<Keyframe>
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x2750D58", Offset = "0x2750D58", VA = "0x2750D58")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000368")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Bounds : ReadFlowParameter<Bounds>
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x2750B90", Offset = "0x2750B90", VA = "0x2750B90")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000369")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Color : ReadFlowParameter<Color>
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x2750C74", Offset = "0x2750C74", VA = "0x2750C74")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200036A")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Rect : ReadFlowParameter<Rect>
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x2750F20", Offset = "0x2750F20", VA = "0x2750F20")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200036B")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint : ReadFlowParameter<ContactPoint>
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x2750CC0", Offset = "0x2750CC0", VA = "0x2750CC0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200036C")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint2D : ReadFlowParameter<ContactPoint2D>
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x2750D0C", Offset = "0x2750D0C", VA = "0x2750D0C")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200036D")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision : ReadFlowParameter<Collision>
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x2750BDC", Offset = "0x2750BDC", VA = "0x2750BDC")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200036E")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision2D : ReadFlowParameter<Collision2D>
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x2750C28", Offset = "0x2750C28", VA = "0x2750C28")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200036F")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit : ReadFlowParameter<RaycastHit>
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x2750E88", Offset = "0x2750E88", VA = "0x2750E88")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000370")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit2D : ReadFlowParameter<RaycastHit2D>
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x2750ED4", Offset = "0x2750ED4", VA = "0x2750ED4")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000371")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Ray : ReadFlowParameter<Ray>
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x2750E3C", Offset = "0x2750E3C", VA = "0x2750E3C")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000372")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Space : ReadFlowParameter<Space>
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x2750F6C", Offset = "0x2750F6C", VA = "0x2750F6C")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000373")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_LayerMask : ReadFlowParameter<LayerMask>
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x2750DA4", Offset = "0x2750DA4", VA = "0x2750DA4")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000374")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Boolean : ReflectedExtractorNodeWrapper<bool>
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x275109C", Offset = "0x275109C", VA = "0x275109C")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000375")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Single : ReflectedExtractorNodeWrapper<float>
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x2751134", Offset = "0x2751134", VA = "0x2751134")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Single()
			{
			}
		}

		[Token(Token = "0x2000376")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Int32 : ReflectedExtractorNodeWrapper<int>
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x27510E8", Offset = "0x27510E8", VA = "0x27510E8")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000377")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector2 : ReflectedExtractorNodeWrapper<Vector2>
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x27515A8", Offset = "0x27515A8", VA = "0x27515A8")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000378")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector3 : ReflectedExtractorNodeWrapper<Vector3>
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x27515F4", Offset = "0x27515F4", VA = "0x27515F4")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000379")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector4 : ReflectedExtractorNodeWrapper<Vector4>
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x2751640", Offset = "0x2751640", VA = "0x2751640")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200037A")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Quaternion : ReflectedExtractorNodeWrapper<Quaternion>
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x27513E0", Offset = "0x27513E0", VA = "0x27513E0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200037B")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Keyframe : ReflectedExtractorNodeWrapper<Keyframe>
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0x2751348", Offset = "0x2751348", VA = "0x2751348")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200037C")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Bounds : ReflectedExtractorNodeWrapper<Bounds>
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x2751180", Offset = "0x2751180", VA = "0x2751180")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200037D")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Color : ReflectedExtractorNodeWrapper<Color>
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0x2751264", Offset = "0x2751264", VA = "0x2751264")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200037E")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Rect : ReflectedExtractorNodeWrapper<Rect>
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0x2751510", Offset = "0x2751510", VA = "0x2751510")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200037F")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint : ReflectedExtractorNodeWrapper<ContactPoint>
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0x27512B0", Offset = "0x27512B0", VA = "0x27512B0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000380")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint2D : ReflectedExtractorNodeWrapper<ContactPoint2D>
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x27512FC", Offset = "0x27512FC", VA = "0x27512FC")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000381")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision : ReflectedExtractorNodeWrapper<Collision>
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0x27511CC", Offset = "0x27511CC", VA = "0x27511CC")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000382")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision2D : ReflectedExtractorNodeWrapper<Collision2D>
		{
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x2751218", Offset = "0x2751218", VA = "0x2751218")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000383")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit : ReflectedExtractorNodeWrapper<RaycastHit>
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x2751478", Offset = "0x2751478", VA = "0x2751478")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000384")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit2D : ReflectedExtractorNodeWrapper<RaycastHit2D>
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0x27514C4", Offset = "0x27514C4", VA = "0x27514C4")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000385")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Ray : ReflectedExtractorNodeWrapper<Ray>
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x275142C", Offset = "0x275142C", VA = "0x275142C")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000386")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Space : ReflectedExtractorNodeWrapper<Space>
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0x275155C", Offset = "0x275155C", VA = "0x275155C")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000387")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_LayerMask : ReflectedExtractorNodeWrapper<LayerMask>
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x2751394", Offset = "0x2751394", VA = "0x2751394")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000388")]
		private class FlowCanvas_Nodes_RelayValueInput_System_Boolean : RelayValueInput<bool>
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x275168C", Offset = "0x275168C", VA = "0x275168C")]
			public FlowCanvas_Nodes_RelayValueInput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000389")]
		private class FlowCanvas_Nodes_RelayValueInput_System_Single : RelayValueInput<float>
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x2751724", Offset = "0x2751724", VA = "0x2751724")]
			public FlowCanvas_Nodes_RelayValueInput_System_Single()
			{
			}
		}

		[Token(Token = "0x200038A")]
		private class FlowCanvas_Nodes_RelayValueInput_System_Int32 : RelayValueInput<int>
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x27516D8", Offset = "0x27516D8", VA = "0x27516D8")]
			public FlowCanvas_Nodes_RelayValueInput_System_Int32()
			{
			}
		}

		[Token(Token = "0x200038B")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector2 : RelayValueInput<Vector2>
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x2751B98", Offset = "0x2751B98", VA = "0x2751B98")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200038C")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector3 : RelayValueInput<Vector3>
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x2751BE4", Offset = "0x2751BE4", VA = "0x2751BE4")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200038D")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector4 : RelayValueInput<Vector4>
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x2751C30", Offset = "0x2751C30", VA = "0x2751C30")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200038E")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Quaternion : RelayValueInput<Quaternion>
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x27519D0", Offset = "0x27519D0", VA = "0x27519D0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200038F")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Keyframe : RelayValueInput<Keyframe>
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x2751938", Offset = "0x2751938", VA = "0x2751938")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000390")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Bounds : RelayValueInput<Bounds>
		{
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x2751770", Offset = "0x2751770", VA = "0x2751770")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000391")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Color : RelayValueInput<Color>
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x2751854", Offset = "0x2751854", VA = "0x2751854")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000392")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Rect : RelayValueInput<Rect>
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x2751B00", Offset = "0x2751B00", VA = "0x2751B00")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000393")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint : RelayValueInput<ContactPoint>
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x27518A0", Offset = "0x27518A0", VA = "0x27518A0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000394")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint2D : RelayValueInput<ContactPoint2D>
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x27518EC", Offset = "0x27518EC", VA = "0x27518EC")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000395")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision : RelayValueInput<Collision>
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x27517BC", Offset = "0x27517BC", VA = "0x27517BC")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000396")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision2D : RelayValueInput<Collision2D>
		{
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x2751808", Offset = "0x2751808", VA = "0x2751808")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000397")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit : RelayValueInput<RaycastHit>
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x2751A68", Offset = "0x2751A68", VA = "0x2751A68")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000398")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit2D : RelayValueInput<RaycastHit2D>
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x2751AB4", Offset = "0x2751AB4", VA = "0x2751AB4")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000399")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Ray : RelayValueInput<Ray>
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x2751A1C", Offset = "0x2751A1C", VA = "0x2751A1C")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200039A")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Space : RelayValueInput<Space>
		{
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x2751B4C", Offset = "0x2751B4C", VA = "0x2751B4C")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200039B")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_LayerMask : RelayValueInput<LayerMask>
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x2751984", Offset = "0x2751984", VA = "0x2751984")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200039C")]
		private class FlowCanvas_Nodes_RelayValueOutput_System_Boolean : RelayValueOutput<bool>
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x2751C7C", Offset = "0x2751C7C", VA = "0x2751C7C")]
			public FlowCanvas_Nodes_RelayValueOutput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200039D")]
		private class FlowCanvas_Nodes_RelayValueOutput_System_Single : RelayValueOutput<float>
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x2751D14", Offset = "0x2751D14", VA = "0x2751D14")]
			public FlowCanvas_Nodes_RelayValueOutput_System_Single()
			{
			}
		}

		[Token(Token = "0x200039E")]
		private class FlowCanvas_Nodes_RelayValueOutput_System_Int32 : RelayValueOutput<int>
		{
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x2751CC8", Offset = "0x2751CC8", VA = "0x2751CC8")]
			public FlowCanvas_Nodes_RelayValueOutput_System_Int32()
			{
			}
		}

		[Token(Token = "0x200039F")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector2 : RelayValueOutput<Vector2>
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x2752188", Offset = "0x2752188", VA = "0x2752188")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20003A0")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector3 : RelayValueOutput<Vector3>
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x27521D4", Offset = "0x27521D4", VA = "0x27521D4")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20003A1")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector4 : RelayValueOutput<Vector4>
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x2752220", Offset = "0x2752220", VA = "0x2752220")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20003A2")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Quaternion : RelayValueOutput<Quaternion>
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x2751FC0", Offset = "0x2751FC0", VA = "0x2751FC0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20003A3")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Keyframe : RelayValueOutput<Keyframe>
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x2751F28", Offset = "0x2751F28", VA = "0x2751F28")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20003A4")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Bounds : RelayValueOutput<Bounds>
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0x2751D60", Offset = "0x2751D60", VA = "0x2751D60")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20003A5")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Color : RelayValueOutput<Color>
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x2751E44", Offset = "0x2751E44", VA = "0x2751E44")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20003A6")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Rect : RelayValueOutput<Rect>
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x27520F0", Offset = "0x27520F0", VA = "0x27520F0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20003A7")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint : RelayValueOutput<ContactPoint>
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x2751E90", Offset = "0x2751E90", VA = "0x2751E90")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20003A8")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint2D : RelayValueOutput<ContactPoint2D>
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x2751EDC", Offset = "0x2751EDC", VA = "0x2751EDC")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20003A9")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision : RelayValueOutput<Collision>
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x2751DAC", Offset = "0x2751DAC", VA = "0x2751DAC")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20003AA")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision2D : RelayValueOutput<Collision2D>
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x2751DF8", Offset = "0x2751DF8", VA = "0x2751DF8")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20003AB")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit : RelayValueOutput<RaycastHit>
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x2752058", Offset = "0x2752058", VA = "0x2752058")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20003AC")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit2D : RelayValueOutput<RaycastHit2D>
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x27520A4", Offset = "0x27520A4", VA = "0x27520A4")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20003AD")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Ray : RelayValueOutput<Ray>
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x275200C", Offset = "0x275200C", VA = "0x275200C")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Space : RelayValueOutput<Space>
		{
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x275213C", Offset = "0x275213C", VA = "0x275213C")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20003AF")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_LayerMask : RelayValueOutput<LayerMask>
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x2751F74", Offset = "0x2751F74", VA = "0x2751F74")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20003B0")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_System_Boolean : RemoveDictionaryKey<bool>
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x275226C", Offset = "0x275226C", VA = "0x275226C")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20003B1")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_System_Single : RemoveDictionaryKey<float>
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x2752304", Offset = "0x2752304", VA = "0x2752304")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_System_Single()
			{
			}
		}

		[Token(Token = "0x20003B2")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_System_Int32 : RemoveDictionaryKey<int>
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x27522B8", Offset = "0x27522B8", VA = "0x27522B8")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_System_Int32()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector2 : RemoveDictionaryKey<Vector2>
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x2752778", Offset = "0x2752778", VA = "0x2752778")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20003B4")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector3 : RemoveDictionaryKey<Vector3>
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x27527C4", Offset = "0x27527C4", VA = "0x27527C4")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20003B5")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector4 : RemoveDictionaryKey<Vector4>
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x2752810", Offset = "0x2752810", VA = "0x2752810")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Quaternion : RemoveDictionaryKey<Quaternion>
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x27525B0", Offset = "0x27525B0", VA = "0x27525B0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20003B7")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Keyframe : RemoveDictionaryKey<Keyframe>
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x2752518", Offset = "0x2752518", VA = "0x2752518")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20003B8")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Bounds : RemoveDictionaryKey<Bounds>
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x2752350", Offset = "0x2752350", VA = "0x2752350")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Color : RemoveDictionaryKey<Color>
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x2752434", Offset = "0x2752434", VA = "0x2752434")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20003BA")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Rect : RemoveDictionaryKey<Rect>
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x27526E0", Offset = "0x27526E0", VA = "0x27526E0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20003BB")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint : RemoveDictionaryKey<ContactPoint>
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x2752480", Offset = "0x2752480", VA = "0x2752480")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20003BC")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint2D : RemoveDictionaryKey<ContactPoint2D>
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x27524CC", Offset = "0x27524CC", VA = "0x27524CC")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20003BD")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision : RemoveDictionaryKey<Collision>
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x275239C", Offset = "0x275239C", VA = "0x275239C")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20003BE")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision2D : RemoveDictionaryKey<Collision2D>
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x27523E8", Offset = "0x27523E8", VA = "0x27523E8")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20003BF")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit : RemoveDictionaryKey<RaycastHit>
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x2752648", Offset = "0x2752648", VA = "0x2752648")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20003C0")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit2D : RemoveDictionaryKey<RaycastHit2D>
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x2752694", Offset = "0x2752694", VA = "0x2752694")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20003C1")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Ray : RemoveDictionaryKey<Ray>
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x27525FC", Offset = "0x27525FC", VA = "0x27525FC")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20003C2")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Space : RemoveDictionaryKey<Space>
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x275272C", Offset = "0x275272C", VA = "0x275272C")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20003C3")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_LayerMask : RemoveDictionaryKey<LayerMask>
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x2752564", Offset = "0x2752564", VA = "0x2752564")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20003C4")]
		private class FlowCanvas_Nodes_RemoveListItem_System_Boolean : RemoveListItem<bool>
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x2752E4C", Offset = "0x2752E4C", VA = "0x2752E4C")]
			public FlowCanvas_Nodes_RemoveListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20003C5")]
		private class FlowCanvas_Nodes_RemoveListItem_System_Single : RemoveListItem<float>
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x2752EE4", Offset = "0x2752EE4", VA = "0x2752EE4")]
			public FlowCanvas_Nodes_RemoveListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20003C6")]
		private class FlowCanvas_Nodes_RemoveListItem_System_Int32 : RemoveListItem<int>
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x2752E98", Offset = "0x2752E98", VA = "0x2752E98")]
			public FlowCanvas_Nodes_RemoveListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20003C7")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector2 : RemoveListItem<Vector2>
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x2753358", Offset = "0x2753358", VA = "0x2753358")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20003C8")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector3 : RemoveListItem<Vector3>
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x27533A4", Offset = "0x27533A4", VA = "0x27533A4")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20003C9")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector4 : RemoveListItem<Vector4>
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x27533F0", Offset = "0x27533F0", VA = "0x27533F0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20003CA")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Quaternion : RemoveListItem<Quaternion>
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x2753190", Offset = "0x2753190", VA = "0x2753190")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20003CB")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Keyframe : RemoveListItem<Keyframe>
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x27530F8", Offset = "0x27530F8", VA = "0x27530F8")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20003CC")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Bounds : RemoveListItem<Bounds>
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x2752F30", Offset = "0x2752F30", VA = "0x2752F30")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20003CD")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Color : RemoveListItem<Color>
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x2753014", Offset = "0x2753014", VA = "0x2753014")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Rect : RemoveListItem<Rect>
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x27532C0", Offset = "0x27532C0", VA = "0x27532C0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20003CF")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint : RemoveListItem<ContactPoint>
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x2753060", Offset = "0x2753060", VA = "0x2753060")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20003D0")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint2D : RemoveListItem<ContactPoint2D>
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x27530AC", Offset = "0x27530AC", VA = "0x27530AC")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20003D1")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision : RemoveListItem<Collision>
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x2752F7C", Offset = "0x2752F7C", VA = "0x2752F7C")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20003D2")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision2D : RemoveListItem<Collision2D>
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x2752FC8", Offset = "0x2752FC8", VA = "0x2752FC8")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20003D3")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit : RemoveListItem<RaycastHit>
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x2753228", Offset = "0x2753228", VA = "0x2753228")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20003D4")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit2D : RemoveListItem<RaycastHit2D>
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x2753274", Offset = "0x2753274", VA = "0x2753274")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20003D5")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Ray : RemoveListItem<Ray>
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x27531DC", Offset = "0x27531DC", VA = "0x27531DC")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20003D6")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Space : RemoveListItem<Space>
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x275330C", Offset = "0x275330C", VA = "0x275330C")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20003D7")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_LayerMask : RemoveListItem<LayerMask>
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x2753144", Offset = "0x2753144", VA = "0x2753144")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20003D8")]
		private class FlowCanvas_Nodes_RemoveListItemAt_System_Boolean : RemoveListItemAt<bool>
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x275285C", Offset = "0x275285C", VA = "0x275285C")]
			public FlowCanvas_Nodes_RemoveListItemAt_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20003D9")]
		private class FlowCanvas_Nodes_RemoveListItemAt_System_Single : RemoveListItemAt<float>
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x27528F4", Offset = "0x27528F4", VA = "0x27528F4")]
			public FlowCanvas_Nodes_RemoveListItemAt_System_Single()
			{
			}
		}

		[Token(Token = "0x20003DA")]
		private class FlowCanvas_Nodes_RemoveListItemAt_System_Int32 : RemoveListItemAt<int>
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x27528A8", Offset = "0x27528A8", VA = "0x27528A8")]
			public FlowCanvas_Nodes_RemoveListItemAt_System_Int32()
			{
			}
		}

		[Token(Token = "0x20003DB")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector2 : RemoveListItemAt<Vector2>
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x2752D68", Offset = "0x2752D68", VA = "0x2752D68")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20003DC")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector3 : RemoveListItemAt<Vector3>
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0x2752DB4", Offset = "0x2752DB4", VA = "0x2752DB4")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector4 : RemoveListItemAt<Vector4>
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x2752E00", Offset = "0x2752E00", VA = "0x2752E00")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20003DE")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Quaternion : RemoveListItemAt<Quaternion>
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x2752BA0", Offset = "0x2752BA0", VA = "0x2752BA0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20003DF")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Keyframe : RemoveListItemAt<Keyframe>
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x2752B08", Offset = "0x2752B08", VA = "0x2752B08")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20003E0")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Bounds : RemoveListItemAt<Bounds>
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x2752940", Offset = "0x2752940", VA = "0x2752940")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20003E1")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Color : RemoveListItemAt<Color>
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x2752A24", Offset = "0x2752A24", VA = "0x2752A24")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20003E2")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Rect : RemoveListItemAt<Rect>
		{
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x2752CD0", Offset = "0x2752CD0", VA = "0x2752CD0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20003E3")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint : RemoveListItemAt<ContactPoint>
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x2752A70", Offset = "0x2752A70", VA = "0x2752A70")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20003E4")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint2D : RemoveListItemAt<ContactPoint2D>
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x2752ABC", Offset = "0x2752ABC", VA = "0x2752ABC")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20003E5")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision : RemoveListItemAt<Collision>
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x275298C", Offset = "0x275298C", VA = "0x275298C")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20003E6")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision2D : RemoveListItemAt<Collision2D>
		{
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x27529D8", Offset = "0x27529D8", VA = "0x27529D8")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit : RemoveListItemAt<RaycastHit>
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0x2752C38", Offset = "0x2752C38", VA = "0x2752C38")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20003E8")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit2D : RemoveListItemAt<RaycastHit2D>
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x2752C84", Offset = "0x2752C84", VA = "0x2752C84")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20003E9")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Ray : RemoveListItemAt<Ray>
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x2752BEC", Offset = "0x2752BEC", VA = "0x2752BEC")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Space : RemoveListItemAt<Space>
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x2752D1C", Offset = "0x2752D1C", VA = "0x2752D1C")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20003EB")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_LayerMask : RemoveListItemAt<LayerMask>
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x2752B54", Offset = "0x2752B54", VA = "0x2752B54")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20003EC")]
		private class FlowCanvas_Nodes_SelectOnBool_System_Boolean : SelectOnBool<bool>
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x275343C", Offset = "0x275343C", VA = "0x275343C")]
			public FlowCanvas_Nodes_SelectOnBool_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		private class FlowCanvas_Nodes_SelectOnBool_System_Single : SelectOnBool<float>
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x27534D4", Offset = "0x27534D4", VA = "0x27534D4")]
			public FlowCanvas_Nodes_SelectOnBool_System_Single()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		private class FlowCanvas_Nodes_SelectOnBool_System_Int32 : SelectOnBool<int>
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x2753488", Offset = "0x2753488", VA = "0x2753488")]
			public FlowCanvas_Nodes_SelectOnBool_System_Int32()
			{
			}
		}

		[Token(Token = "0x20003EF")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector2 : SelectOnBool<Vector2>
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x2753948", Offset = "0x2753948", VA = "0x2753948")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20003F0")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector3 : SelectOnBool<Vector3>
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x2753994", Offset = "0x2753994", VA = "0x2753994")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20003F1")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector4 : SelectOnBool<Vector4>
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x27539E0", Offset = "0x27539E0", VA = "0x27539E0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20003F2")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Quaternion : SelectOnBool<Quaternion>
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x2753780", Offset = "0x2753780", VA = "0x2753780")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Keyframe : SelectOnBool<Keyframe>
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x27536E8", Offset = "0x27536E8", VA = "0x27536E8")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20003F4")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Bounds : SelectOnBool<Bounds>
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x2753520", Offset = "0x2753520", VA = "0x2753520")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20003F5")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Color : SelectOnBool<Color>
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x2753604", Offset = "0x2753604", VA = "0x2753604")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20003F6")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Rect : SelectOnBool<Rect>
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x27538B0", Offset = "0x27538B0", VA = "0x27538B0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20003F7")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint : SelectOnBool<ContactPoint>
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x2753650", Offset = "0x2753650", VA = "0x2753650")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint2D : SelectOnBool<ContactPoint2D>
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x275369C", Offset = "0x275369C", VA = "0x275369C")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20003F9")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision : SelectOnBool<Collision>
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x275356C", Offset = "0x275356C", VA = "0x275356C")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20003FA")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision2D : SelectOnBool<Collision2D>
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x27535B8", Offset = "0x27535B8", VA = "0x27535B8")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20003FB")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit : SelectOnBool<RaycastHit>
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x2753818", Offset = "0x2753818", VA = "0x2753818")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20003FC")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit2D : SelectOnBool<RaycastHit2D>
		{
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x2753864", Offset = "0x2753864", VA = "0x2753864")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20003FD")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Ray : SelectOnBool<Ray>
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x27537CC", Offset = "0x27537CC", VA = "0x27537CC")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20003FE")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Space : SelectOnBool<Space>
		{
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x27538FC", Offset = "0x27538FC", VA = "0x27538FC")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20003FF")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_LayerMask : SelectOnBool<LayerMask>
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x2753734", Offset = "0x2753734", VA = "0x2753734")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000400")]
		private class FlowCanvas_Nodes_SelectOnEnum_System_Boolean : SelectOnEnum<bool>
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x2753A2C", Offset = "0x2753A2C", VA = "0x2753A2C")]
			public FlowCanvas_Nodes_SelectOnEnum_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000401")]
		private class FlowCanvas_Nodes_SelectOnEnum_System_Single : SelectOnEnum<float>
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x2753AC4", Offset = "0x2753AC4", VA = "0x2753AC4")]
			public FlowCanvas_Nodes_SelectOnEnum_System_Single()
			{
			}
		}

		[Token(Token = "0x2000402")]
		private class FlowCanvas_Nodes_SelectOnEnum_System_Int32 : SelectOnEnum<int>
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x2753A78", Offset = "0x2753A78", VA = "0x2753A78")]
			public FlowCanvas_Nodes_SelectOnEnum_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000403")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector2 : SelectOnEnum<Vector2>
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x2753F38", Offset = "0x2753F38", VA = "0x2753F38")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000404")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector3 : SelectOnEnum<Vector3>
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x2753F84", Offset = "0x2753F84", VA = "0x2753F84")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000405")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector4 : SelectOnEnum<Vector4>
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x2753FD0", Offset = "0x2753FD0", VA = "0x2753FD0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000406")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Quaternion : SelectOnEnum<Quaternion>
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x2753D70", Offset = "0x2753D70", VA = "0x2753D70")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000407")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Keyframe : SelectOnEnum<Keyframe>
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x2753CD8", Offset = "0x2753CD8", VA = "0x2753CD8")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000408")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Bounds : SelectOnEnum<Bounds>
		{
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x2753B10", Offset = "0x2753B10", VA = "0x2753B10")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000409")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Color : SelectOnEnum<Color>
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x2753BF4", Offset = "0x2753BF4", VA = "0x2753BF4")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200040A")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Rect : SelectOnEnum<Rect>
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x2753EA0", Offset = "0x2753EA0", VA = "0x2753EA0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200040B")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint : SelectOnEnum<ContactPoint>
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x2753C40", Offset = "0x2753C40", VA = "0x2753C40")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200040C")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint2D : SelectOnEnum<ContactPoint2D>
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x2753C8C", Offset = "0x2753C8C", VA = "0x2753C8C")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200040D")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision : SelectOnEnum<Collision>
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x2753B5C", Offset = "0x2753B5C", VA = "0x2753B5C")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200040E")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision2D : SelectOnEnum<Collision2D>
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x2753BA8", Offset = "0x2753BA8", VA = "0x2753BA8")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200040F")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit : SelectOnEnum<RaycastHit>
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x2753E08", Offset = "0x2753E08", VA = "0x2753E08")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000410")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit2D : SelectOnEnum<RaycastHit2D>
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x2753E54", Offset = "0x2753E54", VA = "0x2753E54")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000411")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Ray : SelectOnEnum<Ray>
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x2753DBC", Offset = "0x2753DBC", VA = "0x2753DBC")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000412")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Space : SelectOnEnum<Space>
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x2753EEC", Offset = "0x2753EEC", VA = "0x2753EEC")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000413")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_LayerMask : SelectOnEnum<LayerMask>
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x2753D24", Offset = "0x2753D24", VA = "0x2753D24")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000414")]
		private class FlowCanvas_Nodes_SelectOnInt_System_Boolean : SelectOnInt<bool>
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x275401C", Offset = "0x275401C", VA = "0x275401C")]
			public FlowCanvas_Nodes_SelectOnInt_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000415")]
		private class FlowCanvas_Nodes_SelectOnInt_System_Single : SelectOnInt<float>
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x27540B4", Offset = "0x27540B4", VA = "0x27540B4")]
			public FlowCanvas_Nodes_SelectOnInt_System_Single()
			{
			}
		}

		[Token(Token = "0x2000416")]
		private class FlowCanvas_Nodes_SelectOnInt_System_Int32 : SelectOnInt<int>
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x2754068", Offset = "0x2754068", VA = "0x2754068")]
			public FlowCanvas_Nodes_SelectOnInt_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000417")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector2 : SelectOnInt<Vector2>
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x2754528", Offset = "0x2754528", VA = "0x2754528")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000418")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector3 : SelectOnInt<Vector3>
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x2754574", Offset = "0x2754574", VA = "0x2754574")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000419")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector4 : SelectOnInt<Vector4>
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x27545C0", Offset = "0x27545C0", VA = "0x27545C0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200041A")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Quaternion : SelectOnInt<Quaternion>
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x2754360", Offset = "0x2754360", VA = "0x2754360")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200041B")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Keyframe : SelectOnInt<Keyframe>
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x27542C8", Offset = "0x27542C8", VA = "0x27542C8")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200041C")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Bounds : SelectOnInt<Bounds>
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x2754100", Offset = "0x2754100", VA = "0x2754100")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200041D")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Color : SelectOnInt<Color>
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x27541E4", Offset = "0x27541E4", VA = "0x27541E4")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200041E")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Rect : SelectOnInt<Rect>
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x2754490", Offset = "0x2754490", VA = "0x2754490")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200041F")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint : SelectOnInt<ContactPoint>
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x2754230", Offset = "0x2754230", VA = "0x2754230")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000420")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint2D : SelectOnInt<ContactPoint2D>
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x275427C", Offset = "0x275427C", VA = "0x275427C")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000421")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision : SelectOnInt<Collision>
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x275414C", Offset = "0x275414C", VA = "0x275414C")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000422")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision2D : SelectOnInt<Collision2D>
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x2754198", Offset = "0x2754198", VA = "0x2754198")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000423")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit : SelectOnInt<RaycastHit>
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x27543F8", Offset = "0x27543F8", VA = "0x27543F8")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000424")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit2D : SelectOnInt<RaycastHit2D>
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x2754444", Offset = "0x2754444", VA = "0x2754444")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000425")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Ray : SelectOnInt<Ray>
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x27543AC", Offset = "0x27543AC", VA = "0x27543AC")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000426")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Space : SelectOnInt<Space>
		{
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x27544DC", Offset = "0x27544DC", VA = "0x27544DC")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000427")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_LayerMask : SelectOnInt<LayerMask>
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x2754314", Offset = "0x2754314", VA = "0x2754314")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000428")]
		private class FlowCanvas_Nodes_SelectOnString_System_Boolean : SelectOnString<bool>
		{
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x275460C", Offset = "0x275460C", VA = "0x275460C")]
			public FlowCanvas_Nodes_SelectOnString_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000429")]
		private class FlowCanvas_Nodes_SelectOnString_System_Single : SelectOnString<float>
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x27546A4", Offset = "0x27546A4", VA = "0x27546A4")]
			public FlowCanvas_Nodes_SelectOnString_System_Single()
			{
			}
		}

		[Token(Token = "0x200042A")]
		private class FlowCanvas_Nodes_SelectOnString_System_Int32 : SelectOnString<int>
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x2754658", Offset = "0x2754658", VA = "0x2754658")]
			public FlowCanvas_Nodes_SelectOnString_System_Int32()
			{
			}
		}

		[Token(Token = "0x200042B")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector2 : SelectOnString<Vector2>
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x2754B18", Offset = "0x2754B18", VA = "0x2754B18")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200042C")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector3 : SelectOnString<Vector3>
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x2754B64", Offset = "0x2754B64", VA = "0x2754B64")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200042D")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector4 : SelectOnString<Vector4>
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x2754BB0", Offset = "0x2754BB0", VA = "0x2754BB0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200042E")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Quaternion : SelectOnString<Quaternion>
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x2754950", Offset = "0x2754950", VA = "0x2754950")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200042F")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Keyframe : SelectOnString<Keyframe>
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x27548B8", Offset = "0x27548B8", VA = "0x27548B8")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000430")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Bounds : SelectOnString<Bounds>
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x27546F0", Offset = "0x27546F0", VA = "0x27546F0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000431")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Color : SelectOnString<Color>
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x27547D4", Offset = "0x27547D4", VA = "0x27547D4")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000432")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Rect : SelectOnString<Rect>
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x2754A80", Offset = "0x2754A80", VA = "0x2754A80")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000433")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint : SelectOnString<ContactPoint>
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x2754820", Offset = "0x2754820", VA = "0x2754820")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000434")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint2D : SelectOnString<ContactPoint2D>
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x275486C", Offset = "0x275486C", VA = "0x275486C")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000435")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision : SelectOnString<Collision>
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x275473C", Offset = "0x275473C", VA = "0x275473C")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000436")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision2D : SelectOnString<Collision2D>
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x2754788", Offset = "0x2754788", VA = "0x2754788")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000437")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit : SelectOnString<RaycastHit>
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x27549E8", Offset = "0x27549E8", VA = "0x27549E8")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000438")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit2D : SelectOnString<RaycastHit2D>
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x2754A34", Offset = "0x2754A34", VA = "0x2754A34")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000439")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Ray : SelectOnString<Ray>
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x275499C", Offset = "0x275499C", VA = "0x275499C")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200043A")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Space : SelectOnString<Space>
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x2754ACC", Offset = "0x2754ACC", VA = "0x2754ACC")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200043B")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_LayerMask : SelectOnString<LayerMask>
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x2754904", Offset = "0x2754904", VA = "0x2754904")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200043C")]
		private class FlowCanvas_Nodes_SelectOnTag_System_Boolean : SelectOnTag<bool>
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x2754BFC", Offset = "0x2754BFC", VA = "0x2754BFC")]
			public FlowCanvas_Nodes_SelectOnTag_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200043D")]
		private class FlowCanvas_Nodes_SelectOnTag_System_Single : SelectOnTag<float>
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x2754C94", Offset = "0x2754C94", VA = "0x2754C94")]
			public FlowCanvas_Nodes_SelectOnTag_System_Single()
			{
			}
		}

		[Token(Token = "0x200043E")]
		private class FlowCanvas_Nodes_SelectOnTag_System_Int32 : SelectOnTag<int>
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x2754C48", Offset = "0x2754C48", VA = "0x2754C48")]
			public FlowCanvas_Nodes_SelectOnTag_System_Int32()
			{
			}
		}

		[Token(Token = "0x200043F")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector2 : SelectOnTag<Vector2>
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x2755108", Offset = "0x2755108", VA = "0x2755108")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000440")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector3 : SelectOnTag<Vector3>
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x2755154", Offset = "0x2755154", VA = "0x2755154")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000441")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector4 : SelectOnTag<Vector4>
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x27551A0", Offset = "0x27551A0", VA = "0x27551A0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000442")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Quaternion : SelectOnTag<Quaternion>
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x2754F40", Offset = "0x2754F40", VA = "0x2754F40")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000443")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Keyframe : SelectOnTag<Keyframe>
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x2754EA8", Offset = "0x2754EA8", VA = "0x2754EA8")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000444")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Bounds : SelectOnTag<Bounds>
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x2754CE0", Offset = "0x2754CE0", VA = "0x2754CE0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000445")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Color : SelectOnTag<Color>
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x2754DC4", Offset = "0x2754DC4", VA = "0x2754DC4")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000446")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Rect : SelectOnTag<Rect>
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x2755070", Offset = "0x2755070", VA = "0x2755070")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000447")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint : SelectOnTag<ContactPoint>
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x2754E10", Offset = "0x2754E10", VA = "0x2754E10")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000448")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint2D : SelectOnTag<ContactPoint2D>
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x2754E5C", Offset = "0x2754E5C", VA = "0x2754E5C")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000449")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision : SelectOnTag<Collision>
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x2754D2C", Offset = "0x2754D2C", VA = "0x2754D2C")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200044A")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision2D : SelectOnTag<Collision2D>
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x2754D78", Offset = "0x2754D78", VA = "0x2754D78")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200044B")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit : SelectOnTag<RaycastHit>
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x2754FD8", Offset = "0x2754FD8", VA = "0x2754FD8")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200044C")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit2D : SelectOnTag<RaycastHit2D>
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x2755024", Offset = "0x2755024", VA = "0x2755024")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200044D")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Ray : SelectOnTag<Ray>
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x2754F8C", Offset = "0x2754F8C", VA = "0x2754F8C")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200044E")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Space : SelectOnTag<Space>
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x27550BC", Offset = "0x27550BC", VA = "0x27550BC")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200044F")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_LayerMask : SelectOnTag<LayerMask>
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x2754EF4", Offset = "0x2754EF4", VA = "0x2754EF4")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000450")]
		private class FlowCanvas_Nodes_SendEvent_System_Boolean : SendEvent<bool>
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x27551EC", Offset = "0x27551EC", VA = "0x27551EC")]
			public FlowCanvas_Nodes_SendEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000451")]
		private class FlowCanvas_Nodes_SendEvent_System_Single : SendEvent<float>
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x2755284", Offset = "0x2755284", VA = "0x2755284")]
			public FlowCanvas_Nodes_SendEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000452")]
		private class FlowCanvas_Nodes_SendEvent_System_Int32 : SendEvent<int>
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x2755238", Offset = "0x2755238", VA = "0x2755238")]
			public FlowCanvas_Nodes_SendEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000453")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Vector2 : SendEvent<Vector2>
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x27556F8", Offset = "0x27556F8", VA = "0x27556F8")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000454")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Vector3 : SendEvent<Vector3>
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x2755744", Offset = "0x2755744", VA = "0x2755744")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000455")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Vector4 : SendEvent<Vector4>
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x2755790", Offset = "0x2755790", VA = "0x2755790")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000456")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Quaternion : SendEvent<Quaternion>
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x2755530", Offset = "0x2755530", VA = "0x2755530")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000457")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Keyframe : SendEvent<Keyframe>
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x2755498", Offset = "0x2755498", VA = "0x2755498")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000458")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Bounds : SendEvent<Bounds>
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x27552D0", Offset = "0x27552D0", VA = "0x27552D0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000459")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Color : SendEvent<Color>
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x27553B4", Offset = "0x27553B4", VA = "0x27553B4")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200045A")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Rect : SendEvent<Rect>
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x2755660", Offset = "0x2755660", VA = "0x2755660")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200045B")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint : SendEvent<ContactPoint>
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x2755400", Offset = "0x2755400", VA = "0x2755400")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200045C")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint2D : SendEvent<ContactPoint2D>
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x275544C", Offset = "0x275544C", VA = "0x275544C")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200045D")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Collision : SendEvent<Collision>
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x275531C", Offset = "0x275531C", VA = "0x275531C")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200045E")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Collision2D : SendEvent<Collision2D>
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x2755368", Offset = "0x2755368", VA = "0x2755368")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200045F")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit : SendEvent<RaycastHit>
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x27555C8", Offset = "0x27555C8", VA = "0x27555C8")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000460")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit2D : SendEvent<RaycastHit2D>
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x2755614", Offset = "0x2755614", VA = "0x2755614")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000461")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Ray : SendEvent<Ray>
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x275557C", Offset = "0x275557C", VA = "0x275557C")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000462")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Space : SendEvent<Space>
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x27556AC", Offset = "0x27556AC", VA = "0x27556AC")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000463")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_LayerMask : SendEvent<LayerMask>
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0x27554E4", Offset = "0x27554E4", VA = "0x27554E4")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000464")]
		private class FlowCanvas_Nodes_SendGlobalEvent_System_Boolean : SendGlobalEvent<bool>
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0x27557DC", Offset = "0x27557DC", VA = "0x27557DC")]
			public FlowCanvas_Nodes_SendGlobalEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000465")]
		private class FlowCanvas_Nodes_SendGlobalEvent_System_Single : SendGlobalEvent<float>
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x2755874", Offset = "0x2755874", VA = "0x2755874")]
			public FlowCanvas_Nodes_SendGlobalEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000466")]
		private class FlowCanvas_Nodes_SendGlobalEvent_System_Int32 : SendGlobalEvent<int>
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x2755828", Offset = "0x2755828", VA = "0x2755828")]
			public FlowCanvas_Nodes_SendGlobalEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000467")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector2 : SendGlobalEvent<Vector2>
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x2755CE8", Offset = "0x2755CE8", VA = "0x2755CE8")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000468")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector3 : SendGlobalEvent<Vector3>
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x2755D34", Offset = "0x2755D34", VA = "0x2755D34")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000469")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector4 : SendGlobalEvent<Vector4>
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x2755D80", Offset = "0x2755D80", VA = "0x2755D80")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200046A")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Quaternion : SendGlobalEvent<Quaternion>
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x2755B20", Offset = "0x2755B20", VA = "0x2755B20")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200046B")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Keyframe : SendGlobalEvent<Keyframe>
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x2755A88", Offset = "0x2755A88", VA = "0x2755A88")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200046C")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Bounds : SendGlobalEvent<Bounds>
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x27558C0", Offset = "0x27558C0", VA = "0x27558C0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200046D")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Color : SendGlobalEvent<Color>
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x27559A4", Offset = "0x27559A4", VA = "0x27559A4")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200046E")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Rect : SendGlobalEvent<Rect>
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x2755C50", Offset = "0x2755C50", VA = "0x2755C50")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200046F")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint : SendGlobalEvent<ContactPoint>
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x27559F0", Offset = "0x27559F0", VA = "0x27559F0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000470")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint2D : SendGlobalEvent<ContactPoint2D>
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x2755A3C", Offset = "0x2755A3C", VA = "0x2755A3C")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000471")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision : SendGlobalEvent<Collision>
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x275590C", Offset = "0x275590C", VA = "0x275590C")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000472")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision2D : SendGlobalEvent<Collision2D>
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x2755958", Offset = "0x2755958", VA = "0x2755958")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000473")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit : SendGlobalEvent<RaycastHit>
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x2755BB8", Offset = "0x2755BB8", VA = "0x2755BB8")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000474")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit2D : SendGlobalEvent<RaycastHit2D>
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x2755C04", Offset = "0x2755C04", VA = "0x2755C04")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000475")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Ray : SendGlobalEvent<Ray>
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x2755B6C", Offset = "0x2755B6C", VA = "0x2755B6C")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000476")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Space : SendGlobalEvent<Space>
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x2755C9C", Offset = "0x2755C9C", VA = "0x2755C9C")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000477")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_LayerMask : SendGlobalEvent<LayerMask>
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x2755AD4", Offset = "0x2755AD4", VA = "0x2755AD4")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000478")]
		private class FlowCanvas_Nodes_SetListItem_System_Boolean : SetListItem<bool>
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x2755DCC", Offset = "0x2755DCC", VA = "0x2755DCC")]
			public FlowCanvas_Nodes_SetListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000479")]
		private class FlowCanvas_Nodes_SetListItem_System_Single : SetListItem<float>
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x2755E64", Offset = "0x2755E64", VA = "0x2755E64")]
			public FlowCanvas_Nodes_SetListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x200047A")]
		private class FlowCanvas_Nodes_SetListItem_System_Int32 : SetListItem<int>
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x2755E18", Offset = "0x2755E18", VA = "0x2755E18")]
			public FlowCanvas_Nodes_SetListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x200047B")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Vector2 : SetListItem<Vector2>
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x27562D8", Offset = "0x27562D8", VA = "0x27562D8")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200047C")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Vector3 : SetListItem<Vector3>
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x2756324", Offset = "0x2756324", VA = "0x2756324")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200047D")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Vector4 : SetListItem<Vector4>
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x2756370", Offset = "0x2756370", VA = "0x2756370")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200047E")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Quaternion : SetListItem<Quaternion>
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x2756110", Offset = "0x2756110", VA = "0x2756110")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200047F")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Keyframe : SetListItem<Keyframe>
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x2756078", Offset = "0x2756078", VA = "0x2756078")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000480")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Bounds : SetListItem<Bounds>
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x2755EB0", Offset = "0x2755EB0", VA = "0x2755EB0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000481")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Color : SetListItem<Color>
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x2755F94", Offset = "0x2755F94", VA = "0x2755F94")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000482")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Rect : SetListItem<Rect>
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x2756240", Offset = "0x2756240", VA = "0x2756240")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000483")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint : SetListItem<ContactPoint>
		{
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x2755FE0", Offset = "0x2755FE0", VA = "0x2755FE0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000484")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint2D : SetListItem<ContactPoint2D>
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x275602C", Offset = "0x275602C", VA = "0x275602C")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000485")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Collision : SetListItem<Collision>
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x2755EFC", Offset = "0x2755EFC", VA = "0x2755EFC")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000486")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Collision2D : SetListItem<Collision2D>
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x2755F48", Offset = "0x2755F48", VA = "0x2755F48")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000487")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit : SetListItem<RaycastHit>
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x27561A8", Offset = "0x27561A8", VA = "0x27561A8")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000488")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit2D : SetListItem<RaycastHit2D>
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x27561F4", Offset = "0x27561F4", VA = "0x27561F4")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000489")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Ray : SetListItem<Ray>
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x275615C", Offset = "0x275615C", VA = "0x275615C")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200048A")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Space : SetListItem<Space>
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x275628C", Offset = "0x275628C", VA = "0x275628C")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200048B")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_LayerMask : SetListItem<LayerMask>
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x27560C4", Offset = "0x27560C4", VA = "0x27560C4")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200048C")]
		private class FlowCanvas_Nodes_SetOtherVariable_System_Boolean : SetOtherVariable<bool>
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x27563BC", Offset = "0x27563BC", VA = "0x27563BC")]
			public FlowCanvas_Nodes_SetOtherVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200048D")]
		private class FlowCanvas_Nodes_SetOtherVariable_System_Single : SetOtherVariable<float>
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x2756454", Offset = "0x2756454", VA = "0x2756454")]
			public FlowCanvas_Nodes_SetOtherVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x200048E")]
		private class FlowCanvas_Nodes_SetOtherVariable_System_Int32 : SetOtherVariable<int>
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x2756408", Offset = "0x2756408", VA = "0x2756408")]
			public FlowCanvas_Nodes_SetOtherVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x200048F")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector2 : SetOtherVariable<Vector2>
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x27568C8", Offset = "0x27568C8", VA = "0x27568C8")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000490")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector3 : SetOtherVariable<Vector3>
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x2756914", Offset = "0x2756914", VA = "0x2756914")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000491")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector4 : SetOtherVariable<Vector4>
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x2756960", Offset = "0x2756960", VA = "0x2756960")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000492")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Quaternion : SetOtherVariable<Quaternion>
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x2756700", Offset = "0x2756700", VA = "0x2756700")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000493")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Keyframe : SetOtherVariable<Keyframe>
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x2756668", Offset = "0x2756668", VA = "0x2756668")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000494")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Bounds : SetOtherVariable<Bounds>
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x27564A0", Offset = "0x27564A0", VA = "0x27564A0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000495")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Color : SetOtherVariable<Color>
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x2756584", Offset = "0x2756584", VA = "0x2756584")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000496")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Rect : SetOtherVariable<Rect>
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x2756830", Offset = "0x2756830", VA = "0x2756830")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000497")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint : SetOtherVariable<ContactPoint>
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x27565D0", Offset = "0x27565D0", VA = "0x27565D0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000498")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint2D : SetOtherVariable<ContactPoint2D>
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x275661C", Offset = "0x275661C", VA = "0x275661C")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000499")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision : SetOtherVariable<Collision>
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x27564EC", Offset = "0x27564EC", VA = "0x27564EC")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200049A")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision2D : SetOtherVariable<Collision2D>
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x2756538", Offset = "0x2756538", VA = "0x2756538")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200049B")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit : SetOtherVariable<RaycastHit>
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x2756798", Offset = "0x2756798", VA = "0x2756798")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200049C")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit2D : SetOtherVariable<RaycastHit2D>
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x27567E4", Offset = "0x27567E4", VA = "0x27567E4")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200049D")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Ray : SetOtherVariable<Ray>
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x275674C", Offset = "0x275674C", VA = "0x275674C")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200049E")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Space : SetOtherVariable<Space>
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x275687C", Offset = "0x275687C", VA = "0x275687C")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200049F")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_LayerMask : SetOtherVariable<LayerMask>
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x27566B4", Offset = "0x27566B4", VA = "0x27566B4")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		private class FlowCanvas_Nodes_SetVariable_System_Boolean : SetVariable<bool>
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x27569AC", Offset = "0x27569AC", VA = "0x27569AC")]
			public FlowCanvas_Nodes_SetVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20004A1")]
		private class FlowCanvas_Nodes_SetVariable_System_Single : SetVariable<float>
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x2756A44", Offset = "0x2756A44", VA = "0x2756A44")]
			public FlowCanvas_Nodes_SetVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x20004A2")]
		private class FlowCanvas_Nodes_SetVariable_System_Int32 : SetVariable<int>
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x27569F8", Offset = "0x27569F8", VA = "0x27569F8")]
			public FlowCanvas_Nodes_SetVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x20004A3")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Vector2 : SetVariable<Vector2>
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x2756EB8", Offset = "0x2756EB8", VA = "0x2756EB8")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20004A4")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Vector3 : SetVariable<Vector3>
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x2756F04", Offset = "0x2756F04", VA = "0x2756F04")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20004A5")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Vector4 : SetVariable<Vector4>
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x2756F50", Offset = "0x2756F50", VA = "0x2756F50")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20004A6")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Quaternion : SetVariable<Quaternion>
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x2756CF0", Offset = "0x2756CF0", VA = "0x2756CF0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20004A7")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Keyframe : SetVariable<Keyframe>
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x2756C58", Offset = "0x2756C58", VA = "0x2756C58")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20004A8")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Bounds : SetVariable<Bounds>
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x2756A90", Offset = "0x2756A90", VA = "0x2756A90")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20004A9")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Color : SetVariable<Color>
		{
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x2756B74", Offset = "0x2756B74", VA = "0x2756B74")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20004AA")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Rect : SetVariable<Rect>
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x2756E20", Offset = "0x2756E20", VA = "0x2756E20")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20004AB")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint : SetVariable<ContactPoint>
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x2756BC0", Offset = "0x2756BC0", VA = "0x2756BC0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20004AC")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint2D : SetVariable<ContactPoint2D>
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x2756C0C", Offset = "0x2756C0C", VA = "0x2756C0C")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20004AD")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Collision : SetVariable<Collision>
		{
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x2756ADC", Offset = "0x2756ADC", VA = "0x2756ADC")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20004AE")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Collision2D : SetVariable<Collision2D>
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x2756B28", Offset = "0x2756B28", VA = "0x2756B28")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20004AF")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit : SetVariable<RaycastHit>
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x2756D88", Offset = "0x2756D88", VA = "0x2756D88")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20004B0")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit2D : SetVariable<RaycastHit2D>
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x2756DD4", Offset = "0x2756DD4", VA = "0x2756DD4")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20004B1")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Ray : SetVariable<Ray>
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x2756D3C", Offset = "0x2756D3C", VA = "0x2756D3C")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20004B2")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Space : SetVariable<Space>
		{
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x2756E6C", Offset = "0x2756E6C", VA = "0x2756E6C")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20004B3")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_LayerMask : SetVariable<LayerMask>
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x2756CA4", Offset = "0x2756CA4", VA = "0x2756CA4")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20004B4")]
		private class FlowCanvas_Nodes_ShuffleList_System_Boolean : ShuffleList<bool>
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x2756F9C", Offset = "0x2756F9C", VA = "0x2756F9C")]
			public FlowCanvas_Nodes_ShuffleList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20004B5")]
		private class FlowCanvas_Nodes_ShuffleList_System_Single : ShuffleList<float>
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x2757034", Offset = "0x2757034", VA = "0x2757034")]
			public FlowCanvas_Nodes_ShuffleList_System_Single()
			{
			}
		}

		[Token(Token = "0x20004B6")]
		private class FlowCanvas_Nodes_ShuffleList_System_Int32 : ShuffleList<int>
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x2756FE8", Offset = "0x2756FE8", VA = "0x2756FE8")]
			public FlowCanvas_Nodes_ShuffleList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector2 : ShuffleList<Vector2>
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0x27574A8", Offset = "0x27574A8", VA = "0x27574A8")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20004B8")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector3 : ShuffleList<Vector3>
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x27574F4", Offset = "0x27574F4", VA = "0x27574F4")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20004B9")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector4 : ShuffleList<Vector4>
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x2757540", Offset = "0x2757540", VA = "0x2757540")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20004BA")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Quaternion : ShuffleList<Quaternion>
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x27572E0", Offset = "0x27572E0", VA = "0x27572E0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20004BB")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Keyframe : ShuffleList<Keyframe>
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x2757248", Offset = "0x2757248", VA = "0x2757248")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20004BC")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Bounds : ShuffleList<Bounds>
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x2757080", Offset = "0x2757080", VA = "0x2757080")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20004BD")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Color : ShuffleList<Color>
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x2757164", Offset = "0x2757164", VA = "0x2757164")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20004BE")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Rect : ShuffleList<Rect>
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x2757410", Offset = "0x2757410", VA = "0x2757410")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint : ShuffleList<ContactPoint>
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x27571B0", Offset = "0x27571B0", VA = "0x27571B0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20004C0")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint2D : ShuffleList<ContactPoint2D>
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x27571FC", Offset = "0x27571FC", VA = "0x27571FC")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20004C1")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision : ShuffleList<Collision>
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x27570CC", Offset = "0x27570CC", VA = "0x27570CC")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20004C2")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision2D : ShuffleList<Collision2D>
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x2757118", Offset = "0x2757118", VA = "0x2757118")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20004C3")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit : ShuffleList<RaycastHit>
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x2757378", Offset = "0x2757378", VA = "0x2757378")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20004C4")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit2D : ShuffleList<RaycastHit2D>
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x27573C4", Offset = "0x27573C4", VA = "0x27573C4")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20004C5")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Ray : ShuffleList<Ray>
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x275732C", Offset = "0x275732C", VA = "0x275732C")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20004C6")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Space : ShuffleList<Space>
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x275745C", Offset = "0x275745C", VA = "0x275745C")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20004C7")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_LayerMask : ShuffleList<LayerMask>
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x2757294", Offset = "0x2757294", VA = "0x2757294")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20004C8")]
		private class FlowCanvas_Nodes_StaticCodeEvent_System_Boolean : StaticCodeEvent<bool>
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x275758C", Offset = "0x275758C", VA = "0x275758C")]
			public FlowCanvas_Nodes_StaticCodeEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20004C9")]
		private class FlowCanvas_Nodes_StaticCodeEvent_System_Single : StaticCodeEvent<float>
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x2757624", Offset = "0x2757624", VA = "0x2757624")]
			public FlowCanvas_Nodes_StaticCodeEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20004CA")]
		private class FlowCanvas_Nodes_StaticCodeEvent_System_Int32 : StaticCodeEvent<int>
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x27575D8", Offset = "0x27575D8", VA = "0x27575D8")]
			public FlowCanvas_Nodes_StaticCodeEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20004CB")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector2 : StaticCodeEvent<Vector2>
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x2757A98", Offset = "0x2757A98", VA = "0x2757A98")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector3 : StaticCodeEvent<Vector3>
		{
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x2757AE4", Offset = "0x2757AE4", VA = "0x2757AE4")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20004CD")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector4 : StaticCodeEvent<Vector4>
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x2757B30", Offset = "0x2757B30", VA = "0x2757B30")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20004CE")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Quaternion : StaticCodeEvent<Quaternion>
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x27578D0", Offset = "0x27578D0", VA = "0x27578D0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20004CF")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Keyframe : StaticCodeEvent<Keyframe>
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x2757838", Offset = "0x2757838", VA = "0x2757838")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20004D0")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Bounds : StaticCodeEvent<Bounds>
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x2757670", Offset = "0x2757670", VA = "0x2757670")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20004D1")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Color : StaticCodeEvent<Color>
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x2757754", Offset = "0x2757754", VA = "0x2757754")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20004D2")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Rect : StaticCodeEvent<Rect>
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x2757A00", Offset = "0x2757A00", VA = "0x2757A00")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20004D3")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint : StaticCodeEvent<ContactPoint>
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x27577A0", Offset = "0x27577A0", VA = "0x27577A0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20004D4")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint2D : StaticCodeEvent<ContactPoint2D>
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x27577EC", Offset = "0x27577EC", VA = "0x27577EC")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20004D5")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision : StaticCodeEvent<Collision>
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x27576BC", Offset = "0x27576BC", VA = "0x27576BC")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20004D6")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision2D : StaticCodeEvent<Collision2D>
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x2757708", Offset = "0x2757708", VA = "0x2757708")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20004D7")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit : StaticCodeEvent<RaycastHit>
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x2757968", Offset = "0x2757968", VA = "0x2757968")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20004D8")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit2D : StaticCodeEvent<RaycastHit2D>
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x27579B4", Offset = "0x27579B4", VA = "0x27579B4")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Ray : StaticCodeEvent<Ray>
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x275791C", Offset = "0x275791C", VA = "0x275791C")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20004DA")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Space : StaticCodeEvent<Space>
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x2757A4C", Offset = "0x2757A4C", VA = "0x2757A4C")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20004DB")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_LayerMask : StaticCodeEvent<LayerMask>
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x2757884", Offset = "0x2757884", VA = "0x2757884")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		private class FlowCanvas_Nodes_SwitchValue_System_Boolean : SwitchValue<bool>
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x2757B7C", Offset = "0x2757B7C", VA = "0x2757B7C")]
			public FlowCanvas_Nodes_SwitchValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		private class FlowCanvas_Nodes_SwitchValue_System_Single : SwitchValue<float>
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x2757C14", Offset = "0x2757C14", VA = "0x2757C14")]
			public FlowCanvas_Nodes_SwitchValue_System_Single()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		private class FlowCanvas_Nodes_SwitchValue_System_Int32 : SwitchValue<int>
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x2757BC8", Offset = "0x2757BC8", VA = "0x2757BC8")]
			public FlowCanvas_Nodes_SwitchValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x20004DF")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector2 : SwitchValue<Vector2>
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x2758088", Offset = "0x2758088", VA = "0x2758088")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector3 : SwitchValue<Vector3>
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x27580D4", Offset = "0x27580D4", VA = "0x27580D4")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector4 : SwitchValue<Vector4>
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x2758120", Offset = "0x2758120", VA = "0x2758120")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20004E2")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Quaternion : SwitchValue<Quaternion>
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x2757EC0", Offset = "0x2757EC0", VA = "0x2757EC0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Keyframe : SwitchValue<Keyframe>
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x2757E28", Offset = "0x2757E28", VA = "0x2757E28")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20004E4")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Bounds : SwitchValue<Bounds>
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x2757C60", Offset = "0x2757C60", VA = "0x2757C60")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20004E5")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Color : SwitchValue<Color>
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x2757D44", Offset = "0x2757D44", VA = "0x2757D44")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Rect : SwitchValue<Rect>
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x2757FF0", Offset = "0x2757FF0", VA = "0x2757FF0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20004E7")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint : SwitchValue<ContactPoint>
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x2757D90", Offset = "0x2757D90", VA = "0x2757D90")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20004E8")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint2D : SwitchValue<ContactPoint2D>
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x2757DDC", Offset = "0x2757DDC", VA = "0x2757DDC")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20004E9")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision : SwitchValue<Collision>
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x2757CAC", Offset = "0x2757CAC", VA = "0x2757CAC")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20004EA")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision2D : SwitchValue<Collision2D>
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x2757CF8", Offset = "0x2757CF8", VA = "0x2757CF8")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20004EB")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit : SwitchValue<RaycastHit>
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x2757F58", Offset = "0x2757F58", VA = "0x2757F58")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20004EC")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit2D : SwitchValue<RaycastHit2D>
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x2757FA4", Offset = "0x2757FA4", VA = "0x2757FA4")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20004ED")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Ray : SwitchValue<Ray>
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x2757F0C", Offset = "0x2757F0C", VA = "0x2757F0C")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Space : SwitchValue<Space>
		{
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0x275803C", Offset = "0x275803C", VA = "0x275803C")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_LayerMask : SwitchValue<LayerMask>
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x2757E74", Offset = "0x2757E74", VA = "0x2757E74")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		private class FlowCanvas_Nodes_ToArray_System_Boolean : ToArray<bool>
		{
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0x275816C", Offset = "0x275816C", VA = "0x275816C")]
			public FlowCanvas_Nodes_ToArray_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		private class FlowCanvas_Nodes_ToArray_System_Single : ToArray<float>
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0x2758204", Offset = "0x2758204", VA = "0x2758204")]
			public FlowCanvas_Nodes_ToArray_System_Single()
			{
			}
		}

		[Token(Token = "0x20004F2")]
		private class FlowCanvas_Nodes_ToArray_System_Int32 : ToArray<int>
		{
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x27581B8", Offset = "0x27581B8", VA = "0x27581B8")]
			public FlowCanvas_Nodes_ToArray_System_Int32()
			{
			}
		}

		[Token(Token = "0x20004F3")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Vector2 : ToArray<Vector2>
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x2758678", Offset = "0x2758678", VA = "0x2758678")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Vector3 : ToArray<Vector3>
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x27586C4", Offset = "0x27586C4", VA = "0x27586C4")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20004F5")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Vector4 : ToArray<Vector4>
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x2758710", Offset = "0x2758710", VA = "0x2758710")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20004F6")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Quaternion : ToArray<Quaternion>
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x27584B0", Offset = "0x27584B0", VA = "0x27584B0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20004F7")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Keyframe : ToArray<Keyframe>
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x2758418", Offset = "0x2758418", VA = "0x2758418")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20004F8")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Bounds : ToArray<Bounds>
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0x2758250", Offset = "0x2758250", VA = "0x2758250")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20004F9")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Color : ToArray<Color>
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x2758334", Offset = "0x2758334", VA = "0x2758334")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20004FA")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Rect : ToArray<Rect>
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x27585E0", Offset = "0x27585E0", VA = "0x27585E0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20004FB")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint : ToArray<ContactPoint>
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x2758380", Offset = "0x2758380", VA = "0x2758380")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20004FC")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint2D : ToArray<ContactPoint2D>
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x27583CC", Offset = "0x27583CC", VA = "0x27583CC")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20004FD")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Collision : ToArray<Collision>
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x275829C", Offset = "0x275829C", VA = "0x275829C")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20004FE")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Collision2D : ToArray<Collision2D>
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x27582E8", Offset = "0x27582E8", VA = "0x27582E8")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20004FF")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit : ToArray<RaycastHit>
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x2758548", Offset = "0x2758548", VA = "0x2758548")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000500")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit2D : ToArray<RaycastHit2D>
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x2758594", Offset = "0x2758594", VA = "0x2758594")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000501")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Ray : ToArray<Ray>
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x27584FC", Offset = "0x27584FC", VA = "0x27584FC")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000502")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Space : ToArray<Space>
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x275862C", Offset = "0x275862C", VA = "0x275862C")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000503")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_LayerMask : ToArray<LayerMask>
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x2758464", Offset = "0x2758464", VA = "0x2758464")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000504")]
		private class FlowCanvas_Nodes_ToList_System_Boolean : ToList<bool>
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x275875C", Offset = "0x275875C", VA = "0x275875C")]
			public FlowCanvas_Nodes_ToList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000505")]
		private class FlowCanvas_Nodes_ToList_System_Single : ToList<float>
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x27587F4", Offset = "0x27587F4", VA = "0x27587F4")]
			public FlowCanvas_Nodes_ToList_System_Single()
			{
			}
		}

		[Token(Token = "0x2000506")]
		private class FlowCanvas_Nodes_ToList_System_Int32 : ToList<int>
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x27587A8", Offset = "0x27587A8", VA = "0x27587A8")]
			public FlowCanvas_Nodes_ToList_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000507")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Vector2 : ToList<Vector2>
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x2758C68", Offset = "0x2758C68", VA = "0x2758C68")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000508")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Vector3 : ToList<Vector3>
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x2758CB4", Offset = "0x2758CB4", VA = "0x2758CB4")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000509")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Vector4 : ToList<Vector4>
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x2758D00", Offset = "0x2758D00", VA = "0x2758D00")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200050A")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Quaternion : ToList<Quaternion>
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x2758AA0", Offset = "0x2758AA0", VA = "0x2758AA0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200050B")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Keyframe : ToList<Keyframe>
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x2758A08", Offset = "0x2758A08", VA = "0x2758A08")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200050C")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Bounds : ToList<Bounds>
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x2758840", Offset = "0x2758840", VA = "0x2758840")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200050D")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Color : ToList<Color>
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x2758924", Offset = "0x2758924", VA = "0x2758924")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200050E")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Rect : ToList<Rect>
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x2758BD0", Offset = "0x2758BD0", VA = "0x2758BD0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200050F")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint : ToList<ContactPoint>
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x2758970", Offset = "0x2758970", VA = "0x2758970")]
			public FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000510")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint2D : ToList<ContactPoint2D>
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x27589BC", Offset = "0x27589BC", VA = "0x27589BC")]
			public FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000511")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Collision : ToList<Collision>
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x275888C", Offset = "0x275888C", VA = "0x275888C")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000512")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Collision2D : ToList<Collision2D>
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x27588D8", Offset = "0x27588D8", VA = "0x27588D8")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000513")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit : ToList<RaycastHit>
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x2758B38", Offset = "0x2758B38", VA = "0x2758B38")]
			public FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000514")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit2D : ToList<RaycastHit2D>
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x2758B84", Offset = "0x2758B84", VA = "0x2758B84")]
			public FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000515")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Ray : ToList<Ray>
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x2758AEC", Offset = "0x2758AEC", VA = "0x2758AEC")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000516")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Space : ToList<Space>
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x2758C1C", Offset = "0x2758C1C", VA = "0x2758C1C")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000517")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_LayerMask : ToList<LayerMask>
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x2758A54", Offset = "0x2758A54", VA = "0x2758A54")]
			public FlowCanvas_Nodes_ToList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000518")]
		private class FlowCanvas_Nodes_TryGetValue_System_Boolean : TryGetValue<bool>
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x2758D4C", Offset = "0x2758D4C", VA = "0x2758D4C")]
			public FlowCanvas_Nodes_TryGetValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000519")]
		private class FlowCanvas_Nodes_TryGetValue_System_Single : TryGetValue<float>
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x2758DE4", Offset = "0x2758DE4", VA = "0x2758DE4")]
			public FlowCanvas_Nodes_TryGetValue_System_Single()
			{
			}
		}

		[Token(Token = "0x200051A")]
		private class FlowCanvas_Nodes_TryGetValue_System_Int32 : TryGetValue<int>
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x2758D98", Offset = "0x2758D98", VA = "0x2758D98")]
			public FlowCanvas_Nodes_TryGetValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x200051B")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector2 : TryGetValue<Vector2>
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x2759258", Offset = "0x2759258", VA = "0x2759258")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200051C")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector3 : TryGetValue<Vector3>
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x27592A4", Offset = "0x27592A4", VA = "0x27592A4")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200051D")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector4 : TryGetValue<Vector4>
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x27592F0", Offset = "0x27592F0", VA = "0x27592F0")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200051E")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Quaternion : TryGetValue<Quaternion>
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x2759090", Offset = "0x2759090", VA = "0x2759090")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200051F")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Keyframe : TryGetValue<Keyframe>
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x2758FF8", Offset = "0x2758FF8", VA = "0x2758FF8")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000520")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Bounds : TryGetValue<Bounds>
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x2758E30", Offset = "0x2758E30", VA = "0x2758E30")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000521")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Color : TryGetValue<Color>
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x2758F14", Offset = "0x2758F14", VA = "0x2758F14")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000522")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Rect : TryGetValue<Rect>
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x27591C0", Offset = "0x27591C0", VA = "0x27591C0")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000523")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint : TryGetValue<ContactPoint>
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x2758F60", Offset = "0x2758F60", VA = "0x2758F60")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000524")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint2D : TryGetValue<ContactPoint2D>
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x2758FAC", Offset = "0x2758FAC", VA = "0x2758FAC")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000525")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision : TryGetValue<Collision>
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x2758E7C", Offset = "0x2758E7C", VA = "0x2758E7C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000526")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision2D : TryGetValue<Collision2D>
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x2758EC8", Offset = "0x2758EC8", VA = "0x2758EC8")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000527")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit : TryGetValue<RaycastHit>
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x2759128", Offset = "0x2759128", VA = "0x2759128")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000528")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit2D : TryGetValue<RaycastHit2D>
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x2759174", Offset = "0x2759174", VA = "0x2759174")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000529")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Ray : TryGetValue<Ray>
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x27590DC", Offset = "0x27590DC", VA = "0x27590DC")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200052A")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Space : TryGetValue<Space>
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x275920C", Offset = "0x275920C", VA = "0x275920C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200052B")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_LayerMask : TryGetValue<LayerMask>
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x2759044", Offset = "0x2759044", VA = "0x2759044")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200052C")]
		private class FlowCanvas_Nodes_WriteFlowParameter_System_Boolean : WriteFlowParameter<bool>
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x275933C", Offset = "0x275933C", VA = "0x275933C")]
			public FlowCanvas_Nodes_WriteFlowParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200052D")]
		private class FlowCanvas_Nodes_WriteFlowParameter_System_Single : WriteFlowParameter<float>
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x27593D4", Offset = "0x27593D4", VA = "0x27593D4")]
			public FlowCanvas_Nodes_WriteFlowParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x200052E")]
		private class FlowCanvas_Nodes_WriteFlowParameter_System_Int32 : WriteFlowParameter<int>
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x2759388", Offset = "0x2759388", VA = "0x2759388")]
			public FlowCanvas_Nodes_WriteFlowParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x200052F")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector2 : WriteFlowParameter<Vector2>
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x2759848", Offset = "0x2759848", VA = "0x2759848")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000530")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector3 : WriteFlowParameter<Vector3>
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x2759894", Offset = "0x2759894", VA = "0x2759894")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000531")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector4 : WriteFlowParameter<Vector4>
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x27598E0", Offset = "0x27598E0", VA = "0x27598E0")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000532")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Quaternion : WriteFlowParameter<Quaternion>
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x2759680", Offset = "0x2759680", VA = "0x2759680")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000533")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Keyframe : WriteFlowParameter<Keyframe>
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x27595E8", Offset = "0x27595E8", VA = "0x27595E8")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000534")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Bounds : WriteFlowParameter<Bounds>
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x2759420", Offset = "0x2759420", VA = "0x2759420")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000535")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Color : WriteFlowParameter<Color>
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x2759504", Offset = "0x2759504", VA = "0x2759504")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000536")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Rect : WriteFlowParameter<Rect>
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x27597B0", Offset = "0x27597B0", VA = "0x27597B0")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000537")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint : WriteFlowParameter<ContactPoint>
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x2759550", Offset = "0x2759550", VA = "0x2759550")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000538")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint2D : WriteFlowParameter<ContactPoint2D>
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x275959C", Offset = "0x275959C", VA = "0x275959C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000539")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision : WriteFlowParameter<Collision>
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x275946C", Offset = "0x275946C", VA = "0x275946C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200053A")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision2D : WriteFlowParameter<Collision2D>
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x27594B8", Offset = "0x27594B8", VA = "0x27594B8")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200053B")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit : WriteFlowParameter<RaycastHit>
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x2759718", Offset = "0x2759718", VA = "0x2759718")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200053C")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit2D : WriteFlowParameter<RaycastHit2D>
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x2759764", Offset = "0x2759764", VA = "0x2759764")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200053D")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Ray : WriteFlowParameter<Ray>
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x27596CC", Offset = "0x27596CC", VA = "0x27596CC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200053E")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Space : WriteFlowParameter<Space>
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x27597FC", Offset = "0x27597FC", VA = "0x27597FC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200053F")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_LayerMask : WriteFlowParameter<LayerMask>
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x2759634", Offset = "0x2759634", VA = "0x2759634")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000540")]
		private class NodeCanvas_Framework_BBParameter_System_Boolean : BBParameter<bool>
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x275A50C", Offset = "0x275A50C", VA = "0x275A50C")]
			public NodeCanvas_Framework_BBParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000541")]
		private class NodeCanvas_Framework_BBParameter_System_Single : BBParameter<float>
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x275A5A4", Offset = "0x275A5A4", VA = "0x275A5A4")]
			public NodeCanvas_Framework_BBParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x2000542")]
		private class NodeCanvas_Framework_BBParameter_System_Int32 : BBParameter<int>
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x275A558", Offset = "0x275A558", VA = "0x275A558")]
			public NodeCanvas_Framework_BBParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000543")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector2 : BBParameter<Vector2>
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x275AA18", Offset = "0x275AA18", VA = "0x275AA18")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000544")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector3 : BBParameter<Vector3>
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x275AA64", Offset = "0x275AA64", VA = "0x275AA64")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000545")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector4 : BBParameter<Vector4>
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x275AAB0", Offset = "0x275AAB0", VA = "0x275AAB0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000546")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion : BBParameter<Quaternion>
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x275A850", Offset = "0x275A850", VA = "0x275A850")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000547")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe : BBParameter<Keyframe>
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x275A7B8", Offset = "0x275A7B8", VA = "0x275A7B8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000548")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Bounds : BBParameter<Bounds>
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x275A5F0", Offset = "0x275A5F0", VA = "0x275A5F0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000549")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Color : BBParameter<Color>
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x275A6D4", Offset = "0x275A6D4", VA = "0x275A6D4")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200054A")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Rect : BBParameter<Rect>
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x275A980", Offset = "0x275A980", VA = "0x275A980")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200054B")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint : BBParameter<ContactPoint>
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x275A720", Offset = "0x275A720", VA = "0x275A720")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200054C")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D : BBParameter<ContactPoint2D>
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x275A76C", Offset = "0x275A76C", VA = "0x275A76C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200054D")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision : BBParameter<Collision>
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x275A63C", Offset = "0x275A63C", VA = "0x275A63C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200054E")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D : BBParameter<Collision2D>
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x275A688", Offset = "0x275A688", VA = "0x275A688")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200054F")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit : BBParameter<RaycastHit>
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x275A8E8", Offset = "0x275A8E8", VA = "0x275A8E8")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000550")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D : BBParameter<RaycastHit2D>
		{
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x275A934", Offset = "0x275A934", VA = "0x275A934")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000551")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Ray : BBParameter<Ray>
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x275A89C", Offset = "0x275A89C", VA = "0x275A89C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000552")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Space : BBParameter<Space>
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x275A9CC", Offset = "0x275A9CC", VA = "0x275A9CC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000553")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask : BBParameter<LayerMask>
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x275A804", Offset = "0x275A804", VA = "0x275A804")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000554")]
		private class NodeCanvas_Framework_Variable_System_Boolean : Variable<bool>
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x275B6DC", Offset = "0x275B6DC", VA = "0x275B6DC")]
			public NodeCanvas_Framework_Variable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000555")]
		private class NodeCanvas_Framework_Variable_System_Single : Variable<float>
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x275B774", Offset = "0x275B774", VA = "0x275B774")]
			public NodeCanvas_Framework_Variable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000556")]
		private class NodeCanvas_Framework_Variable_System_Int32 : Variable<int>
		{
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x275B728", Offset = "0x275B728", VA = "0x275B728")]
			public NodeCanvas_Framework_Variable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000557")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector2 : Variable<Vector2>
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x275BBE8", Offset = "0x275BBE8", VA = "0x275BBE8")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000558")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector3 : Variable<Vector3>
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x275BC34", Offset = "0x275BC34", VA = "0x275BC34")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000559")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector4 : Variable<Vector4>
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x275BC80", Offset = "0x275BC80", VA = "0x275BC80")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200055A")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Quaternion : Variable<Quaternion>
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x275BA20", Offset = "0x275BA20", VA = "0x275BA20")]
			public NodeCanvas_Framework_Variable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200055B")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Keyframe : Variable<Keyframe>
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x275B988", Offset = "0x275B988", VA = "0x275B988")]
			public NodeCanvas_Framework_Variable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200055C")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Bounds : Variable<Bounds>
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x275B7C0", Offset = "0x275B7C0", VA = "0x275B7C0")]
			public NodeCanvas_Framework_Variable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200055D")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Color : Variable<Color>
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x275B8A4", Offset = "0x275B8A4", VA = "0x275B8A4")]
			public NodeCanvas_Framework_Variable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200055E")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Rect : Variable<Rect>
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x275BB50", Offset = "0x275BB50", VA = "0x275BB50")]
			public NodeCanvas_Framework_Variable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200055F")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint : Variable<ContactPoint>
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x275B8F0", Offset = "0x275B8F0", VA = "0x275B8F0")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000560")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D : Variable<ContactPoint2D>
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x275B93C", Offset = "0x275B93C", VA = "0x275B93C")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000561")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision : Variable<Collision>
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x275B80C", Offset = "0x275B80C", VA = "0x275B80C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000562")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision2D : Variable<Collision2D>
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x275B858", Offset = "0x275B858", VA = "0x275B858")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000563")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit : Variable<RaycastHit>
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x275BAB8", Offset = "0x275BAB8", VA = "0x275BAB8")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000564")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D : Variable<RaycastHit2D>
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x275BB04", Offset = "0x275BB04", VA = "0x275BB04")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000565")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Ray : Variable<Ray>
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x275BA6C", Offset = "0x275BA6C", VA = "0x275BA6C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000566")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Space : Variable<Space>
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x275BB9C", Offset = "0x275BB9C", VA = "0x275BB9C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000567")]
		private class NodeCanvas_Framework_Variable_UnityEngine_LayerMask : Variable<LayerMask>
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x275B9D4", Offset = "0x275B9D4", VA = "0x275B9D4")]
			public NodeCanvas_Framework_Variable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000568")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_System_Boolean : ReflectedAction<bool>
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x275AAFC", Offset = "0x275AAFC", VA = "0x275AAFC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000569")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_System_Single : ReflectedAction<float>
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0x275AB94", Offset = "0x275AB94", VA = "0x275AB94")]
			public NodeCanvas_Framework_Internal_ReflectedAction_System_Single()
			{
			}
		}

		[Token(Token = "0x200056A")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_System_Int32 : ReflectedAction<int>
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x275AB48", Offset = "0x275AB48", VA = "0x275AB48")]
			public NodeCanvas_Framework_Internal_ReflectedAction_System_Int32()
			{
			}
		}

		[Token(Token = "0x200056B")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector2 : ReflectedAction<Vector2>
		{
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x275B008", Offset = "0x275B008", VA = "0x275B008")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200056C")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector3 : ReflectedAction<Vector3>
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x275B054", Offset = "0x275B054", VA = "0x275B054")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200056D")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector4 : ReflectedAction<Vector4>
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x275B0A0", Offset = "0x275B0A0", VA = "0x275B0A0")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200056E")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Quaternion : ReflectedAction<Quaternion>
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x275AE40", Offset = "0x275AE40", VA = "0x275AE40")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200056F")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Keyframe : ReflectedAction<Keyframe>
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x275ADA8", Offset = "0x275ADA8", VA = "0x275ADA8")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000570")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Bounds : ReflectedAction<Bounds>
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x275ABE0", Offset = "0x275ABE0", VA = "0x275ABE0")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000571")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Color : ReflectedAction<Color>
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x275ACC4", Offset = "0x275ACC4", VA = "0x275ACC4")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000572")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Rect : ReflectedAction<Rect>
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x275AF70", Offset = "0x275AF70", VA = "0x275AF70")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000573")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint : ReflectedAction<ContactPoint>
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x275AD10", Offset = "0x275AD10", VA = "0x275AD10")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000574")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint2D : ReflectedAction<ContactPoint2D>
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x275AD5C", Offset = "0x275AD5C", VA = "0x275AD5C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000575")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision : ReflectedAction<Collision>
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x275AC2C", Offset = "0x275AC2C", VA = "0x275AC2C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000576")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision2D : ReflectedAction<Collision2D>
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x275AC78", Offset = "0x275AC78", VA = "0x275AC78")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000577")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit : ReflectedAction<RaycastHit>
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x275AED8", Offset = "0x275AED8", VA = "0x275AED8")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000578")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit2D : ReflectedAction<RaycastHit2D>
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x275AF24", Offset = "0x275AF24", VA = "0x275AF24")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000579")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Ray : ReflectedAction<Ray>
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x275AE8C", Offset = "0x275AE8C", VA = "0x275AE8C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200057A")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Space : ReflectedAction<Space>
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x275AFBC", Offset = "0x275AFBC", VA = "0x275AFBC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200057B")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_LayerMask : ReflectedAction<LayerMask>
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x275ADF4", Offset = "0x275ADF4", VA = "0x275ADF4")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200057C")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_System_Boolean : ReflectedFunction<bool>
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x275B0EC", Offset = "0x275B0EC", VA = "0x275B0EC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200057D")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_System_Single : ReflectedFunction<float>
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0x275B184", Offset = "0x275B184", VA = "0x275B184")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_System_Single()
			{
			}
		}

		[Token(Token = "0x200057E")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_System_Int32 : ReflectedFunction<int>
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x275B138", Offset = "0x275B138", VA = "0x275B138")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_System_Int32()
			{
			}
		}

		[Token(Token = "0x200057F")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector2 : ReflectedFunction<Vector2>
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x275B5F8", Offset = "0x275B5F8", VA = "0x275B5F8")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000580")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector3 : ReflectedFunction<Vector3>
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x275B644", Offset = "0x275B644", VA = "0x275B644")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000581")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector4 : ReflectedFunction<Vector4>
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x275B690", Offset = "0x275B690", VA = "0x275B690")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000582")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Quaternion : ReflectedFunction<Quaternion>
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x275B430", Offset = "0x275B430", VA = "0x275B430")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000583")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Keyframe : ReflectedFunction<Keyframe>
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x275B398", Offset = "0x275B398", VA = "0x275B398")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000584")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Bounds : ReflectedFunction<Bounds>
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x275B1D0", Offset = "0x275B1D0", VA = "0x275B1D0")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000585")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Color : ReflectedFunction<Color>
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x275B2B4", Offset = "0x275B2B4", VA = "0x275B2B4")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000586")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Rect : ReflectedFunction<Rect>
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x275B560", Offset = "0x275B560", VA = "0x275B560")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000587")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint : ReflectedFunction<ContactPoint>
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x275B300", Offset = "0x275B300", VA = "0x275B300")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000588")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint2D : ReflectedFunction<ContactPoint2D>
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x275B34C", Offset = "0x275B34C", VA = "0x275B34C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000589")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision : ReflectedFunction<Collision>
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x275B21C", Offset = "0x275B21C", VA = "0x275B21C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200058A")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision2D : ReflectedFunction<Collision2D>
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x275B268", Offset = "0x275B268", VA = "0x275B268")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200058B")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit : ReflectedFunction<RaycastHit>
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x275B4C8", Offset = "0x275B4C8", VA = "0x275B4C8")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200058C")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit2D : ReflectedFunction<RaycastHit2D>
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x275B514", Offset = "0x275B514", VA = "0x275B514")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200058D")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Ray : ReflectedFunction<Ray>
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x275B47C", Offset = "0x275B47C", VA = "0x275B47C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200058E")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Space : ReflectedFunction<Space>
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x275B5AC", Offset = "0x275B5AC", VA = "0x275B5AC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200058F")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_LayerMask : ReflectedFunction<LayerMask>
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x275B3E4", Offset = "0x275B3E4", VA = "0x275B3E4")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object o;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x10299D0", Offset = "0x10299D0", VA = "0x10299D0")]
		private void FlowCanvas_ValueHandler_Delegate()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x10299D4", Offset = "0x10299D4", VA = "0x10299D4")]
		private void FlowCanvas_Flow_ReadParameter_1()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1029EB8", Offset = "0x1029EB8", VA = "0x1029EB8")]
		private void FlowCanvas_Flow_WriteParameter_2()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x102A934", Offset = "0x102A934", VA = "0x102A934")]
		private void FlowCanvas_FlowNode_AddValueInput_1()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x102AA54", Offset = "0x102AA54", VA = "0x102AA54")]
		private void FlowCanvas_FlowNode_AddValueOutput_2()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x102AC64", Offset = "0x102AC64", VA = "0x102AC64")]
		private void FlowCanvas_FlowNode_AddValueOutput_3()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x102AE74", Offset = "0x102AE74", VA = "0x102AE74")]
		private void FlowCanvas_TypeConverter_GetConverterFuncFromTo_1()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x102B734", Offset = "0x102B734", VA = "0x102B734")]
		private void FlowCanvas_TypeConverter_QuickConvert_2()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x102BA08", Offset = "0x102BA08", VA = "0x102BA08")]
		private void FlowCanvas_ValueInput_CreateInstance_1()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x102C2C8", Offset = "0x102C2C8", VA = "0x102C2C8")]
		private void FlowCanvas_ValueOutput_CreateInstance_1()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x102CE58", Offset = "0x102CE58", VA = "0x102CE58")]
		private void FlowCanvas_Nodes_ReflectedDelegateEvent_Callback1_1()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x102D05C", Offset = "0x102D05C", VA = "0x102D05C")]
		private void FlowCanvas_Nodes_ReflectedUnityEvent_CallbackMethod1_1()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x102D260", Offset = "0x102D260", VA = "0x102D260")]
		private void NodeCanvas_Framework_Blackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x102D380", Offset = "0x102D380", VA = "0x102D380")]
		private void NodeCanvas_Framework_Blackboard_GetValue_2()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x102D4A0", Offset = "0x102D4A0", VA = "0x102D4A0")]
		private void NodeCanvas_Framework_IBlackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x102D5C0", Offset = "0x102D5C0", VA = "0x102D5C0")]
		private void NodeCanvas_Framework_IBlackboard_GetValue_2()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x102D6E0", Offset = "0x102D6E0", VA = "0x102D6E0")]
		private void CustomSpoof()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x102D6E4", Offset = "0x102D6E4", VA = "0x102D6E4")]
		public AOTDummy()
		{
		}
	}
}
namespace MText
{
	[Token(Token = "0x2000590")]
	public class Countdown : MonoBehaviour
	{
		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB182A0", Offset = "0xB182A0")]
		private sealed class <CountdownRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Countdown <>4__this;

			[Token(Token = "0x40006FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AB4")]
				[Address(RVA = "0x275F4E0", Offset = "0x275F4E0", VA = "0x275F4E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AB6")]
				[Address(RVA = "0x275F528", Offset = "0x275F528", VA = "0x275F528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x275F2FC", Offset = "0x275F2FC", VA = "0x275F2FC")]
			[DebuggerHidden]
			public <CountdownRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x275F328", Offset = "0x275F328", VA = "0x275F328", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x275F32C", Offset = "0x275F32C", VA = "0x275F32C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x275F4E8", Offset = "0x275F4E8", VA = "0x275F4E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool startCountdownOnStart;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1F4C0", Offset = "0xB1F4C0")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1F4F8", Offset = "0xB1F4F8")]
		[SerializeField]
		private string textAfterCountdownEnds;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1F530", Offset = "0xB1F530")]
		[SerializeField]
		private int duration;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F568", Offset = "0xB1F568")]
		private float timeStep;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x158DEB0", Offset = "0x158DEB0", VA = "0x158DEB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x158DF48", Offset = "0x158DF48", VA = "0x158DF48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E6D0", Offset = "0xB2E6D0")]
		private IEnumerator CountdownRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x158DFC0", Offset = "0x158DFC0", VA = "0x158DFC0")]
		public Countdown()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class DamageText : MonoBehaviour
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB182B0", Offset = "0xB182B0")]
		private sealed class <ApplyModules>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DamageText <>4__this;

			[Token(Token = "0x170000B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AC0")]
				[Address(RVA = "0x275FE04", Offset = "0x275FE04", VA = "0x275FE04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AC2")]
				[Address(RVA = "0x275FE4C", Offset = "0x275FE4C", VA = "0x275FE4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x275FCB8", Offset = "0x275FCB8", VA = "0x275FCB8")]
			[DebuggerHidden]
			public <ApplyModules>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x275FCE4", Offset = "0x275FCE4", VA = "0x275FCE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x275FCE8", Offset = "0x275FCE8", VA = "0x275FCE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x275FE0C", Offset = "0x275FE0C", VA = "0x275FE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Modular3DText modular3DText;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform textHolder;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MText_Module module;

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1124AA8", Offset = "0x1124AA8", VA = "0x1124AA8")]
		public void UpdateText(string str)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1124CD4", Offset = "0x1124CD4", VA = "0x1124CD4")]
		public void UpdateText(float number)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1124D2C", Offset = "0x1124D2C", VA = "0x1124D2C")]
		public void UpdateText(int number)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1124AF8", Offset = "0x1124AF8", VA = "0x1124AF8")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1124C5C", Offset = "0x1124C5C", VA = "0x1124C5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E780", Offset = "0xB2E780")]
		private IEnumerator ApplyModules()
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1124D7C", Offset = "0x1124D7C", VA = "0x1124D7C")]
		public DamageText()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class StatusToolTip : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000595")]
		public class Styles
		{
			[Token(Token = "0x4000709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject textPrefab;

			[Token(Token = "0x400070A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 offsetMin;

			[Token(Token = "0x400070B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 offsetMax;

			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xDA4E1C", Offset = "0xDA4E1C", VA = "0xDA4E1C")]
			public Styles()
			{
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB182C0", Offset = "0xB182C0")]
		private sealed class <DestroyObj>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400070C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400070D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400070E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x400070F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x4000710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public StatusToolTip <>4__this;

			[Token(Token = "0x170000B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AD0")]
				[Address(RVA = "0xDA4DCC", Offset = "0xDA4DCC", VA = "0xDA4DCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AD2")]
				[Address(RVA = "0xDA4E14", Offset = "0xDA4E14", VA = "0xDA4E14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xDA4A74", Offset = "0xDA4A74", VA = "0xDA4A74")]
			[DebuggerHidden]
			public <DestroyObj>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0xDA4AA0", Offset = "0xDA4AA0", VA = "0xDA4AA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xDA4AA4", Offset = "0xDA4AA4", VA = "0xDA4AA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xDA4DD4", Offset = "0xDA4DD4", VA = "0xDA4DD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Styles> styles;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1F5B4", Offset = "0xB1F5B4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1F5B4", Offset = "0xB1F5B4")]
		public float defaultDuration;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F5EC", Offset = "0xB1F5EC")]
		public bool pooling;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Queue<GameObject>> poolDictionary;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xDAE498", Offset = "0xDAE498", VA = "0xDAE498")]
		public void ShowToolTip(string text, int style, Vector3 position, Quaternion rotation, bool worldPosition)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xDAE4A4", Offset = "0xDAE4A4", VA = "0xDAE4A4")]
		public void ShowToolTip(string text, int style, Vector3 position, Quaternion rotation, bool worldPosition, float duration)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xDAE5A0", Offset = "0xDAE5A0", VA = "0xDAE5A0")]
		private GameObject GetIObj(int style)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xDAE9A8", Offset = "0xDAE9A8", VA = "0xDAE9A8")]
		private GameObject GetNewObj(int style)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xDAE6F0", Offset = "0xDAE6F0", VA = "0xDAE6F0")]
		private void SetPosition(Transform objTransform, int style, Vector3 position, Quaternion rotation, bool worldPosition)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xDAEAFC", Offset = "0xDAEAFC", VA = "0xDAEAFC")]
		private Vector3 RandomVector3(Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xDAE894", Offset = "0xDAE894", VA = "0xDAE894")]
		private void ApplyText(string text, GameObject obj)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xDAE904", Offset = "0xDAE904", VA = "0xDAE904")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E830", Offset = "0xB2E830")]
		private IEnumerator DestroyObj(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xDAEB74", Offset = "0xDAEB74", VA = "0xDAEB74")]
		public StatusToolTip()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class Typewriter : MonoBehaviour
	{
		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB182D0", Offset = "0xB182D0")]
		private sealed class <TypingRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400071A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400071B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400071C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Typewriter <>4__this;

			[Token(Token = "0x400071D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ADA")]
				[Address(RVA = "0xDA5BB8", Offset = "0xDA5BB8", VA = "0xDA5BB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ADC")]
				[Address(RVA = "0xDA5C00", Offset = "0xDA5C00", VA = "0xDA5C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xDA5858", Offset = "0xDA5858", VA = "0xDA5858")]
			[DebuggerHidden]
			public <TypingRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xDA5884", Offset = "0xDA5884", VA = "0xDA5884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xDA5888", Offset = "0xDA5888", VA = "0xDA5888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0xDA5BC0", Offset = "0xDA5BC0", VA = "0xDA5BC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB1F634", Offset = "0xB1F634")]
		public string text;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F644", Offset = "0xB1F644")]
		public Vector2 speed;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip typeSound;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F68C", Offset = "0xB1F68C")]
		[SerializeField]
		private Vector2 volume;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string typingSymbol;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool startAutomatically;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float startDelay;

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xDBAF84", Offset = "0xDBAF84", VA = "0xDBAF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xDBAF94", Offset = "0xDBAF94", VA = "0xDBAF94")]
		public void StartTyping()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xDBAFCC", Offset = "0xDBAFCC", VA = "0xDBAFCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E8E0", Offset = "0xB2E8E0")]
		private IEnumerator TypingRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xDBB044", Offset = "0xDBB044", VA = "0xDBB044")]
		public Typewriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000599")]
	public class MText_Character
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char character;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh meshPrefab;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spacing;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1574254", Offset = "0x1574254", VA = "0x1574254")]
		public MText_Character()
		{
		}
	}
	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB182E0", Offset = "0xB182E0")]
	public class MText_Font : ScriptableObject
	{
		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MText_Character> characters;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject fontSet;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F728", Offset = "0xB1F728")]
		private bool overwriteOldSet;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F774", Offset = "0xB1F774")]
		public bool monoSpaceFont;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool useUpperCaseLettersIfLowerCaseIsMissing;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F7AC", Offset = "0xB1F7AC")]
		public float emptySpaceSpacing;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F7E4", Offset = "0xB1F7E4")]
		public float characterSpacing;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotationFix;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 positionFix;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 scaleFix;

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1574264", Offset = "0x1574264", VA = "0x1574264")]
		public Mesh RetrievePrefab(char c)
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x15743EC", Offset = "0x15743EC", VA = "0x15743EC")]
		private Mesh MeshPrefab(int i)
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1574678", Offset = "0x1574678", VA = "0x1574678")]
		public float Spacing(char c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1574774", Offset = "0x1574774", VA = "0x1574774")]
		public void UpdateCharacterList(GameObject prefab)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x157479C", Offset = "0x157479C", VA = "0x157479C")]
		public void UpdateCharacterList()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1574B2C", Offset = "0x1574B2C", VA = "0x1574B2C")]
		public void AddCharacter(GameObject obj)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1574F50", Offset = "0x1574F50", VA = "0x1574F50")]
		public void AddCharacter(Mesh mesh)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1574C4C", Offset = "0x1574C4C", VA = "0x1574C4C")]
		private void ProcessName(string name, out char character, out float spacing)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1575070", Offset = "0x1575070", VA = "0x1575070")]
		public MText_Font()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class MText_Letter : MonoBehaviour
	{
		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer model;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float length;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float height;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float depth;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float instructionTextHeight;

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1575108", Offset = "0x1575108", VA = "0x1575108")]
		public MText_Letter()
		{
		}
	}
	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB18340", Offset = "0xB18340")]
	public class MText_LoopAnimation : MonoBehaviour
	{
		[Token(Token = "0x200059D")]
		private enum TargetType
		{
			[Token(Token = "0x4000737")]
			letters,
			[Token(Token = "0x4000738")]
			words
		}

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB183A0", Offset = "0xB183A0")]
		private sealed class <LetterAnimationRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MText_LoopAnimation <>4__this;

			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AF3")]
				[Address(RVA = "0xF1DD40", Offset = "0xF1DD40", VA = "0xF1DD40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AF5")]
				[Address(RVA = "0xF1DD88", Offset = "0xF1DD88", VA = "0xF1DD88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0xF1DB54", Offset = "0xF1DB54", VA = "0xF1DB54")]
			[DebuggerHidden]
			public <LetterAnimationRoutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xF1DB80", Offset = "0xF1DB80", VA = "0xF1DB80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0xF1DB84", Offset = "0xF1DB84", VA = "0xF1DB84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xF1DD48", Offset = "0xF1DD48", VA = "0xF1DD48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB183B0", Offset = "0xB183B0")]
		private sealed class <WordAnimationRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400073E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MText_LoopAnimation <>4__this;

			[Token(Token = "0x4000740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AF9")]
				[Address(RVA = "0xF1E094", Offset = "0xF1E094", VA = "0xF1E094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AFB")]
				[Address(RVA = "0xF1E0DC", Offset = "0xF1E0DC", VA = "0xF1E0DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xF1DD90", Offset = "0xF1DD90", VA = "0xF1DD90")]
			[DebuggerHidden]
			public <WordAnimationRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xF1DDBC", Offset = "0xF1DDBC", VA = "0xF1DDBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xF1DDC0", Offset = "0xF1DDC0", VA = "0xF1DDC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xF1E09C", Offset = "0xF1E09C", VA = "0xF1E09C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 duration;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TargetType targetType;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1F83C", Offset = "0xB1F83C")]
		[SerializeField]
		private Material focusedMaterial;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<GameObject> targetLetterList;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<List<GameObject>> targetWordsList;

		[Token(Token = "0x170000BD")]
		private Modular3DText modular3DText
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x157511C", Offset = "0x157511C", VA = "0x157511C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1575168", Offset = "0x1575168", VA = "0x1575168")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x15751B0", Offset = "0x15751B0", VA = "0x15751B0")]
		public void UpdateTargetList()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1575498", Offset = "0x1575498", VA = "0x1575498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E990", Offset = "0xB2E990")]
		private IEnumerator LetterAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1575510", Offset = "0x1575510", VA = "0x1575510")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E9F0", Offset = "0xB2E9F0")]
		private IEnumerator WordAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1575588", Offset = "0x1575588", VA = "0x1575588")]
		private void Focus(GameObject target)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x15756B8", Offset = "0x15756B8", VA = "0x15756B8")]
		private void UnFocus(GameObject target)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x15757C4", Offset = "0x15757C4", VA = "0x15757C4")]
		public MText_LoopAnimation()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class MText_MenuItem : MonoBehaviour
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x15758A0", Offset = "0x15758A0", VA = "0x15758A0")]
		public MText_MenuItem()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public abstract class MText_Module : ScriptableObject
	{
		[Token(Token = "0x6000AFD")]
		public abstract IEnumerator ModuleRoutine(GameObject obj, float duration);

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x15758A8", Offset = "0x15758A8", VA = "0x15758A8")]
		protected MText_Module()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A2")]
	public class MText_ModuleContainer
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MText_Module module;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x15758B0", Offset = "0x15758B0", VA = "0x15758B0")]
		public MText_ModuleContainer()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class MText_Pool : MonoBehaviour
	{
		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MText_Pool Instance;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, Queue<GameObject>> poolDictionary;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1575D70", Offset = "0x1575D70", VA = "0x1575D70")]
		public GameObject GetPoolItem(MText_Font font, char c)
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x15761B4", Offset = "0x15761B4", VA = "0x15761B4")]
		public void returnPoolItem(GameObject poolItem)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1576374", Offset = "0x1576374", VA = "0x1576374")]
		public MText_Pool()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class MText_PoolItem : MonoBehaviour
	{
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x15763F8", Offset = "0x15763F8", VA = "0x15763F8")]
		public MText_PoolItem()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class MText_UI_Button : MonoBehaviour
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MText_Settings settings;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onClickEvents;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent whileBeingClickedEvents;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onSelectEvents;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onUnselectEvents;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool interactable;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F884", Offset = "0xB1F884")]
		public bool interactableByMouse;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Modular3DText text;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer background;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useModules;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool useStyles;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 normalFontSize;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material normalFontMaterial;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material normalBackgroundMaterial;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool applyUnSelectModuleContainers;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MText_ModuleContainer> unSelectModuleContainers;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool applySelectedVisual;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 selectedFontSize;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material selectedFontMaterial;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material selectedBackgroundMaterial;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool applyOnSelectModuleContainers;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<MText_ModuleContainer> onSelectModuleContainers;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool applyPressedVisual;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 pressedFontSize;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material pressedFontMaterial;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material pressedBackgroundMaterial;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool pressedItemReturnToSelectedVisuaAfterDelay;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float pressedItemReturnToSelectedVisualTime;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float returnToselectedTime;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool applyOnPressModuleContainers;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<MText_ModuleContainer> onPressModuleContainers;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool applyOnClickModuleContainers;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<MText_ModuleContainer> onClickModuleContainers;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector3 disabledFontSize;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Material disabledFontMaterial;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Material disabledBackgroundMaterial;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool selectedVisual;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1577800", Offset = "0x1577800", VA = "0x1577800")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x157780C", Offset = "0x157780C", VA = "0x157780C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1577810", Offset = "0x1577810", VA = "0x1577810")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1577960", Offset = "0x1577960", VA = "0x1577960")]
		public void SelectButton()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1577874", Offset = "0x1577874", VA = "0x1577874")]
		public void SelectedButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1578068", Offset = "0x1578068", VA = "0x1578068")]
		public void SelectedButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1578580", Offset = "0x1578580", VA = "0x1578580")]
		public void UnselectButton()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x15778E8", Offset = "0x15778E8", VA = "0x15778E8")]
		public void UnselectedButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x15785B8", Offset = "0x15785B8", VA = "0x15785B8")]
		public void UnselectButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1578820", Offset = "0x1578820", VA = "0x1578820")]
		public void PressButton()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1578B04", Offset = "0x1578B04", VA = "0x1578B04")]
		public void PressButtonDontCallList()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1578A10", Offset = "0x1578A10", VA = "0x1578A10")]
		public void PressButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1578C3C", Offset = "0x1578C3C", VA = "0x1578C3C")]
		public void PressButtonClick()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1578CA8", Offset = "0x1578CA8", VA = "0x1578CA8")]
		public void ButtonBeingPressed()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1578D38", Offset = "0x1578D38", VA = "0x1578D38")]
		public void PressedButtonClickStopped()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1578AA8", Offset = "0x1578AA8", VA = "0x1578AA8")]
		public void OnClickButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1578CDC", Offset = "0x1578CDC", VA = "0x1578CDC")]
		public void OnPressButtonModuleUpdate()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x157900C", Offset = "0x157900C", VA = "0x157900C")]
		public void DisabledButtonVisualUpdate()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x15781C4", Offset = "0x15781C4", VA = "0x15781C4")]
		private void ApplyeStyle(Vector3 fontSize, Material fontMat, Material backgroundMat)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x157914C", Offset = "0x157914C", VA = "0x157914C")]
		public void Uninteractable()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1579154", Offset = "0x1579154", VA = "0x1579154")]
		public void Interactable()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1577A44", Offset = "0x1577A44", VA = "0x1577A44")]
		private MText_UI_List GetParentList()
		{
			return null;
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1578614", Offset = "0x1578614", VA = "0x1578614")]
		public (bool, bool) ApplyNormalStyle()
		{
			return default((bool, bool));
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x15780C4", Offset = "0x15780C4", VA = "0x15780C4")]
		public (bool, bool, MText_UI_List) ApplyOnSelectStyle()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1578B3C", Offset = "0x1578B3C", VA = "0x1578B3C")]
		public (bool, bool, MText_UI_List) ApplyPressedStyle()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1579068", Offset = "0x1579068", VA = "0x1579068")]
		public (bool, MText_UI_List) ApplyDisabledStyle()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1578418", Offset = "0x1578418", VA = "0x1578418")]
		private void CallModules(List<MText_ModuleContainer> moduleContainers)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1578700", Offset = "0x1578700", VA = "0x1578700")]
		public (bool, bool, MText_UI_List) ApplyUnSelectModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1578EEC", Offset = "0x1578EEC", VA = "0x1578EEC")]
		public (bool, bool, MText_UI_List) ApplyOnPresstModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1578DCC", Offset = "0x1578DCC", VA = "0x1578DCC")]
		public (bool, bool, MText_UI_List) ApplyOnClickModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x15782F8", Offset = "0x15782F8", VA = "0x15782F8")]
		public (bool, bool, MText_UI_List) ApplyOnSelectModule()
		{
			return default((bool, bool, MText_UI_List));
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1579160", Offset = "0x1579160", VA = "0x1579160")]
		public void EmptyEffect(List<MText_ModuleContainer> moduleList)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x15791EC", Offset = "0x15791EC", VA = "0x15791EC")]
		public void LoadDefaultSettings()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1579280", Offset = "0x1579280", VA = "0x1579280")]
		public MText_UI_Button()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB183C0", Offset = "0xB183C0")]
	public class MText_UI_List : MonoBehaviour
	{
		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18420", Offset = "0xB18420")]
		private sealed class <FocusRoutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MText_UI_List <>4__this;

			[Token(Token = "0x170000C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B40")]
				[Address(RVA = "0xF1F4E4", Offset = "0xF1F4E4", VA = "0xF1F4E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B42")]
				[Address(RVA = "0xF1F52C", Offset = "0xF1F52C", VA = "0xF1F52C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xF1F440", Offset = "0xF1F440", VA = "0xF1F440")]
			[DebuggerHidden]
			public <FocusRoutine>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xF1F46C", Offset = "0xF1F46C", VA = "0xF1F46C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xF1F470", Offset = "0xF1F470", VA = "0xF1F470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xF1F4EC", Offset = "0xF1F4EC", VA = "0xF1F4EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int alignmentChoice;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F8BC", Offset = "0xB1F8BC")]
		[SerializeField]
		private bool autoFocusOnStart;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F908", Offset = "0xB1F908")]
		private bool autoFocusFirstItem;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spacing;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1F954", Offset = "0xB1F954")]
		public bool lockRotation;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int circularListStyle;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float spread;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool keyboardControl;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private KeyCode scrollUp;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private KeyCode scrollDown;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private KeyCode pressItemKey;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip keyScrollingSoundEffect;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip itemSelectionSoundEffect;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool controlChildVisuals;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool customNormalItemVisual;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 normalItemFontSize;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material normalItemFontMaterial;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material normalItemBackgroundMaterial;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool customSelectedItemVisual;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 selectedItemFontSize;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Material selectedItemFontMaterial;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material selectedItemBackgroundMaterial;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector3 selectedItemPositionChange;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float selectedItemMoveTime;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool customPressedItemVisual;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 pressedItemFontSize;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material pressedItemFontMaterial;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material pressedItemBackgroundMaterial;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Vector3 pressedItemPositionChange;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float pressedItemMoveTime;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool pressedItemReturnToSelectedVisual;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float pressedItemReturnToSelectedTime;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool customDisabledItemVisual;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Vector3 disabledItemFontSize;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Material disabledItemFontMaterial;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Material disabledItemBackgroundMaterial;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool applyModules;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool ignoreChildModules;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool ignoreChildUnSelectModuleContainers;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		public bool applyUnSelectModuleContainers;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public List<MText_ModuleContainer> unSelectModuleContainers;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool ignoreChildOnSelectModuleContainers;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool applyOnSelectModuleContainers;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<MText_ModuleContainer> onSelectModuleContainers;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool ignoreChildOnPressModuleContainers;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool applyOnPressModuleContainers;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<MText_ModuleContainer> onPressModuleContainers;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool ignoreChildOnClickModuleContainers;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool applyOnClickModuleContainers;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<MText_ModuleContainer> onClickModuleContainers;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int selectedItem;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Quaternion expectedRotation;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Quaternion originalRotation;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float speed;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 originalPosition;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 selectedPosition;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float startTime;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private bool selected;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		private bool pressed;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float returnToSelectedTime;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private int counterToCheckIfAllItemsAreDisabledToAvoidInfiniteLoop;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int previousSelection;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1579434", Offset = "0x1579434", VA = "0x1579434")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x15794BC", Offset = "0x15794BC", VA = "0x15794BC")]
		private void SetRequiredFields()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1579750", Offset = "0x1579750", VA = "0x1579750")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1579794", Offset = "0x1579794", VA = "0x1579794")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1579878", Offset = "0x1579878", VA = "0x1579878")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x15797CC", Offset = "0x15797CC", VA = "0x15797CC")]
		private void PressItemCheckInUpdate()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1579814", Offset = "0x1579814", VA = "0x1579814")]
		private void ScrollList()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1579BBC", Offset = "0x1579BBC", VA = "0x1579BBC")]
		private bool Scrolled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x157A02C", Offset = "0x157A02C", VA = "0x157A02C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2EAF0", Offset = "0xB2EAF0")]
		public void UpdateList()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x157A2A8", Offset = "0x157A2A8", VA = "0x157A2A8")]
		private void CircularListStyle()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x157A59C", Offset = "0x157A59C", VA = "0x157A59C")]
		public void Focus(bool enable)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x157A698", Offset = "0x157A698", VA = "0x157A698")]
		public void Focus(bool enable, bool delay)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x157A620", Offset = "0x157A620", VA = "0x157A620")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EB28", Offset = "0xB2EB28")]
		private IEnumerator FocusRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1579D98", Offset = "0x1579D98", VA = "0x1579D98")]
		private bool IsItemSelectable(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1577E64", Offset = "0x1577E64", VA = "0x1577E64")]
		public void SelectItem(int number)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1579590", Offset = "0x1579590", VA = "0x1579590")]
		private void AlertSelectedItem(int number)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1577B2C", Offset = "0x1577B2C", VA = "0x1577B2C")]
		public void UnselectItem(int i)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x15796F0", Offset = "0x15796F0", VA = "0x15796F0")]
		public void UnselectEverything()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x157A778", Offset = "0x157A778", VA = "0x157A778")]
		public void UnselectEverythingExceptSelected()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x15788E4", Offset = "0x15788E4", VA = "0x15788E4")]
		public void PresstItem(int i)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x157A7E4", Offset = "0x157A7E4", VA = "0x157A7E4")]
		private void AlertPressedUIItem(int i)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x157A864", Offset = "0x157A864", VA = "0x157A864")]
		public void EmptyEffect(List<MText_ModuleContainer> moduleList)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x157A8F0", Offset = "0x157A8F0", VA = "0x157A8F0")]
		public MText_UI_List()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	[ExecuteInEditMode]
	public class MText_UI_ListEditorHelper : MonoBehaviour
	{
		[Token(Token = "0x170000C4")]
		private MText_UI_List list
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x157AB18", Offset = "0x157AB18", VA = "0x157AB18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x157AB64", Offset = "0x157AB64", VA = "0x157AB64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x157AB70", Offset = "0x157AB70", VA = "0x157AB70")]
		public MText_UI_ListEditorHelper()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class MText_UI_RaycastSelector : MonoBehaviour
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FA0C", Offset = "0xB1FA0C")]
		public Camera myCamera;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask UILayer;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FA64", Offset = "0xB1FA64")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1FA64", Offset = "0xB1FA64")]
		public bool onlyOneTargetFocusedAtOnce;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform target;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform clickedTarget;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dragging;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x157AB78", Offset = "0x157AB78", VA = "0x157AB78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x157AC08", Offset = "0x157AC08", VA = "0x157AC08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x157ADE0", Offset = "0x157ADE0", VA = "0x157ADE0")]
		private void DetectDragEnd()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x157AEC0", Offset = "0x157AEC0", VA = "0x157AEC0")]
		private Transform WhoDareStandInMyWay()
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x157B028", Offset = "0x157B028", VA = "0x157B028")]
		private void PressTarget(Transform hit)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x157B218", Offset = "0x157B218", VA = "0x157B218")]
		private void PressInputString(Transform hit)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x157B34C", Offset = "0x157B34C", VA = "0x157B34C")]
		private void PressSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x157B2C4", Offset = "0x157B2C4", VA = "0x157B2C4")]
		private void PressButton(Transform hit)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x157B0A8", Offset = "0x157B0A8", VA = "0x157B0A8")]
		private void UnFocusPreviouslySelectedItems(Transform hit)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x157B004", Offset = "0x157B004", VA = "0x157B004")]
		private void SelectNewTarget(Transform hit)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x157B680", Offset = "0x157B680", VA = "0x157B680")]
		private void SelectSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x157B5F8", Offset = "0x157B5F8", VA = "0x157B5F8")]
		private void SelectButton(Transform hit)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x157AF80", Offset = "0x157AF80", VA = "0x157AF80")]
		private void UnSelectOldTarget(Transform hit)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x157B7D4", Offset = "0x157B7D4", VA = "0x157B7D4")]
		private void UnselectSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x157B74C", Offset = "0x157B74C", VA = "0x157B74C")]
		private void UnselectButton(Transform hit)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x157ADBC", Offset = "0x157ADBC", VA = "0x157ADBC")]
		private void Dragging(Transform hit)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x157B8A0", Offset = "0x157B8A0", VA = "0x157B8A0")]
		private void DragSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x157B9E4", Offset = "0x157B9E4", VA = "0x157B9E4")]
		private void DragButton(Transform hit)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x157B07C", Offset = "0x157B07C", VA = "0x157B07C")]
		private void DragEnded(Transform hit, Transform currentTarget)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x157BB38", Offset = "0x157BB38", VA = "0x157BB38")]
		private void DragEndOnSlider(Transform hit)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x157BBC4", Offset = "0x157BBC4", VA = "0x157BBC4")]
		private void DragEndOnButton(Transform hit, Transform currentTarget)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x157B568", Offset = "0x157B568", VA = "0x157B568")]
		private bool InteractWithButton(MText_UI_Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x157B46C", Offset = "0x157B46C", VA = "0x157B46C")]
		private bool InteractWithSlider(MText_UI_SliderHandle sliderHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x157B3EC", Offset = "0x157B3EC", VA = "0x157B3EC")]
		private bool InteractWithInputString(Mtext_UI_InputString inputString)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x157BCD0", Offset = "0x157BCD0", VA = "0x157BCD0")]
		public MText_UI_RaycastSelector()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class MText_UI_Slider : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AB")]
		public class ValueRange
		{
			[Token(Token = "0x40007D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float min;

			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float max;

			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject icon;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool triggeredAlready;

			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent oneTimeEvents;

			[Token(Token = "0x40007D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent repeatEvents;

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xF1F534", Offset = "0xF1F534", VA = "0xF1F534")]
			public ValueRange()
			{
			}
		}

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoFocusOnGameStart;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool interactable;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minValue;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float currentValue;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MText_UI_SliderHandle handle;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform progressBar;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject progressBarPrefab;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform background;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float backgroundSize;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int directionChoice;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool keyControl;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FAB0", Offset = "0xB1FAB0")]
		public float keyStep;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public KeyCode scrollUp;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public KeyCode scrollDown;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useEvents;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onValueChanged;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FAE8", Offset = "0xB1FAE8")]
		public UnityEvent sliderDragEnded;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Renderer handleGraphic;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material selectedHandleMat;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material unSelectedHandleMat;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Material clickedHandleMat;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material disabledHandleMat;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool useValueRangeEvents;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool usePercentage;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<ValueRange> valueRangeEvents;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private int lastValue;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x157BD14", Offset = "0x157BD14", VA = "0x157BD14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x157BDA0", Offset = "0x157BDA0", VA = "0x157BDA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x157BF64", Offset = "0x157BF64", VA = "0x157BF64")]
		public void UpdateValue(int newValue)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1576868", Offset = "0x1576868", VA = "0x1576868")]
		public void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x157BDFC", Offset = "0x157BDFC", VA = "0x157BDFC")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x157C1BC", Offset = "0x157C1BC", VA = "0x157C1BC")]
		public void IncreaseValue(int amount)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x157BEB0", Offset = "0x157BEB0", VA = "0x157BEB0")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x157C27C", Offset = "0x157C27C", VA = "0x157C27C")]
		public void DecreaseValue(int amount)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x157A730", Offset = "0x157A730", VA = "0x157A730")]
		public void Focus(bool enable)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x157B70C", Offset = "0x157B70C", VA = "0x157B70C")]
		public void SelectedVisual()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x157B860", Offset = "0x157B860", VA = "0x157B860")]
		public void UnSelectedVisual()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x157B528", Offset = "0x157B528", VA = "0x157B528")]
		public void ClickedVisual()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x157BD60", Offset = "0x157BD60", VA = "0x157BD60")]
		public void DisabledVisual()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x157C420", Offset = "0x157C420", VA = "0x157C420")]
		private void ApplyVisual(Material handleMaterial)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x157C76C", Offset = "0x157C76C", VA = "0x157C76C")]
		public MText_UI_List GetParentList()
		{
			return null;
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x157C4C0", Offset = "0x157C4C0", VA = "0x157C4C0")]
		public (bool, MText_UI_List) ApplyNormalStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x157C33C", Offset = "0x157C33C", VA = "0x157C33C")]
		public (bool, MText_UI_List) ApplySelectedStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x157C5A4", Offset = "0x157C5A4", VA = "0x157C5A4")]
		public (bool, MText_UI_List) ApplyPressedStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x157C688", Offset = "0x157C688", VA = "0x157C688")]
		public (bool, MText_UI_List) ApplyDisabledStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x157BAE8", Offset = "0x157BAE8", VA = "0x157BAE8")]
		public void ValueChanged()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x157C854", Offset = "0x157C854", VA = "0x157C854")]
		private void ValueRangeEvents()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x157CA60", Offset = "0x157CA60", VA = "0x157CA60")]
		private void ProcessSelectedValueRange(int i, bool firstTime)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x157CA48", Offset = "0x157CA48", VA = "0x157CA48")]
		public float CurrentPercentage()
		{
			return default(float);
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x157BCA8", Offset = "0x157BCA8", VA = "0x157BCA8")]
		public void ValueChangeEnded()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x157A770", Offset = "0x157A770", VA = "0x157A770")]
		public void Uninteractable()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x157CC04", Offset = "0x157CC04", VA = "0x157CC04")]
		public void Interactable()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x157CC10", Offset = "0x157CC10", VA = "0x157CC10")]
		public void NewValueRange()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x157CC90", Offset = "0x157CC90", VA = "0x157CC90")]
		public MText_UI_Slider()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class MText_UI_SliderHandle : MonoBehaviour
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MText_UI_Slider slider;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x157BA6C", Offset = "0x157BA6C", VA = "0x157BA6C")]
		public void GetCurrentValueFromHandle()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x157C00C", Offset = "0x157C00C", VA = "0x157C00C")]
		public void GetHandlePositionFromSlider()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x157CD6C", Offset = "0x157CD6C", VA = "0x157CD6C")]
		private void UpdateProgressBar()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x157CD50", Offset = "0x157CD50", VA = "0x157CD50")]
		private float RangeConvertedValue(float oldValue, float oldMin, float oldMax, float newMin, float newMax)
		{
			return default(float);
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x157CE78", Offset = "0x157CE78", VA = "0x157CE78")]
		public MText_UI_SliderHandle()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class MText_UI_Toggle : MonoBehaviour
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> activeGraphic;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> inactiveGraphic;

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x157CE80", Offset = "0x157CE80", VA = "0x157CE80")]
		public void Set(bool set)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x157CED8", Offset = "0x157CED8", VA = "0x157CED8")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x157CE8C", Offset = "0x157CE8C", VA = "0x157CE8C")]
		private void VisualUpdate()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x157CEE8", Offset = "0x157CEE8", VA = "0x157CEE8")]
		public void ActiveVisualUpdate()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x157CF18", Offset = "0x157CF18", VA = "0x157CF18")]
		public void InactiveVisualUpdate()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x157CF48", Offset = "0x157CF48", VA = "0x157CF48")]
		private void ToggleGraphic(List<GameObject> list, bool enable)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x157CFF4", Offset = "0x157CFF4", VA = "0x157CFF4")]
		public MText_UI_Toggle()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class Modular3DText : MonoBehaviour
	{
		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18440", Offset = "0xB18440")]
		private sealed class <RunTimeDestroyObjectRoutine>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4000826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Modular3DText <>4__this;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BC4")]
				[Address(RVA = "0xD96034", Offset = "0xD96034", VA = "0xD96034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BC6")]
				[Address(RVA = "0xD9607C", Offset = "0xD9607C", VA = "0xD9607C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xD95C54", Offset = "0xD95C54", VA = "0xD95C54")]
			[DebuggerHidden]
			public <RunTimeDestroyObjectRoutine>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xD95C80", Offset = "0xD95C80", VA = "0xD95C80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xD95C84", Offset = "0xD95C84", VA = "0xD95C84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xD9603C", Offset = "0xD9603C", VA = "0xD9603C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MText_Settings settings;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB1FB58", Offset = "0xB1FB58")]
		public string text;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string oldText;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<string> lineList;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<string> oldLineList;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> characterObjectList;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool autoCreateInEditor;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool autoCreateInPlayMode;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FB88", Offset = "0xB1FB88")]
		public bool autoSaveMesh;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MText_Font font;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MText_Font oldFont;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material material;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material oldMaterial;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 fontSize;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 oldFontSize;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int textDirection;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float characterSpacingInput;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float oldCharacterSpacingInput;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float lineSpacingInput;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float oldLinespacingInput;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool capitalize;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool lowercase;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int layoutStyle;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int oldLayoutStyle;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool alignCenter;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[SerializeField]
		private bool oldAlignCenter;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool alignLeft;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		[SerializeField]
		private bool oldAlignLeft;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool alignRight;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		private bool oldAlignRight;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		public bool alignMiddle;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		[SerializeField]
		private bool oldAlignMiddle;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool alignBottom;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[SerializeField]
		private bool oldAlignBottom;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool alignTop;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		[SerializeField]
		private bool oldAlignTop;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float circularAlignmentRadius;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float oldCircularAlignmentRadius;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float circularAlignmentSpreadAmount;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float oldCircularAlignmentSpreadAmount;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 circularAlignmentAngle;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Vector3 oldCircularAlignmentAngle;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float height;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float oldHeight;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float length;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float adjustedLength;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float oldLength;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float depth;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<MText_ModuleContainer> typingEffects;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<MText_ModuleContainer> deletingEffects;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool customDeleteAfterDuration;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float deleteAfter;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FC90", Offset = "0xB1FC90")]
		public bool repositionOldCharacters;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool reApplyModulesToOldCharacters;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool activateChildObjects;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FCC8", Offset = "0xB1FCC8")]
		public bool pooling;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private MText_Pool pool;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FD00", Offset = "0xB1FD00")]
		public bool combineMeshInEditor;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool dontCombineInEditorAnyway;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FD38", Offset = "0xB1FD38")]
		public bool combineMeshDuringRuntime;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FD70", Offset = "0xB1FD70")]
		public bool hideLettersInHierarchyInPlayMode;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FDA8", Offset = "0xB1FDA8")]
		public bool hideLettersInHierarchyInEditMode;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FDE0", Offset = "0xB1FDE0")]
		public bool canBreakOutermostPrefab;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
		private bool reconnectingPrefab;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string assetPath;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private List<string> meshPaths;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int charInOneLine;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float x;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float y;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float z;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool createChilds;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool onValidateWasCalled;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		private bool onValidateEditorWasCalled;

		[Token(Token = "0x170000C5")]
		private string processedText
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x132FF98", Offset = "0x132FF98", VA = "0x132FF98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private float characterSpacing
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x132FFE8", Offset = "0x132FFE8", VA = "0x132FFE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C7")]
		private float lineSpacing
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x1330004", Offset = "0x1330004", VA = "0x1330004")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1330020", Offset = "0x1330020", VA = "0x1330020")]
		public void EmptyEffect(List<MText_ModuleContainer> moduleList)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x13300AC", Offset = "0x13300AC", VA = "0x13300AC")]
		public void NewEffect(List<MText_ModuleContainer> moduleList, MText_Module newModule)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1330154", Offset = "0x1330154", VA = "0x1330154")]
		public void ClearAllEffects()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x13301B8", Offset = "0x13301B8", VA = "0x13301B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x13301E4", Offset = "0x13301E4", VA = "0x13301E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1330384", Offset = "0x1330384", VA = "0x1330384")]
		private bool DoesTextNeedToBeUpdated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x132FF9C", Offset = "0x132FF9C", VA = "0x132FF9C")]
		private string GetProcessedText()
		{
			return null;
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1330298", Offset = "0x1330298", VA = "0x1330298")]
		private void FontChangeCheck()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1330804", Offset = "0x1330804", VA = "0x1330804")]
		private void UpdateOldValues()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x13308B8", Offset = "0x13308B8", VA = "0x13308B8")]
		public void UpdateText(string str)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x13309EC", Offset = "0x13309EC", VA = "0x13309EC")]
		public void UpdateText(float number)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1330B30", Offset = "0x1330B30", VA = "0x1330B30")]
		public void UpdateText(int number)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1330574", Offset = "0x1330574", VA = "0x1330574")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1330DB8", Offset = "0x1330DB8", VA = "0x1330DB8")]
		private void DestroyMeshRenderAndMeshFilter()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1330CE0", Offset = "0x1330CE0", VA = "0x1330CE0")]
		private bool ShouldItCreateChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1331280", Offset = "0x1331280", VA = "0x1331280")]
		private void CheckIfPoolExistsAndRequired()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1332CB4", Offset = "0x1332CB4", VA = "0x1332CB4")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1330CF0", Offset = "0x1330CF0", VA = "0x1330CF0")]
		private void SplitStuff()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1332DAC", Offset = "0x1332DAC", VA = "0x1332DAC")]
		private string[] RemoveSpacesFromWordArray(string[] wordArray)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1332EE8", Offset = "0x1332EE8", VA = "0x1332EE8")]
		private void GetLineList(List<string> wordList)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1332F9C", Offset = "0x1332F9C", VA = "0x1332F9C")]
		private void GetLinearLineList(List<string> wordList)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x13334A0", Offset = "0x13334A0", VA = "0x13334A0")]
		private void GetCircularLineList(List<string> wordList)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1330C74", Offset = "0x1330C74", VA = "0x1330C74")]
		private void FixInvalidInputs()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1330E6C", Offset = "0x1330E6C", VA = "0x1330E6C")]
		private int CompareNewTextWithOld()
		{
			return default(int);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1330FDC", Offset = "0x1330FDC", VA = "0x1330FDC")]
		private void DeleteReplacedChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1333BC8", Offset = "0x1333BC8", VA = "0x1333BC8")]
		private void DeleteAllChildObjects()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1333AD0", Offset = "0x1333AD0", VA = "0x1333AD0")]
		private void DestroyObject(GameObject obj)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x1333D2C", Offset = "0x1333D2C", VA = "0x1333D2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EBD8", Offset = "0xB2EBD8")]
		private IEnumerator RunTimeDestroyObjectRoutine(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x1333DC0", Offset = "0x1333DC0", VA = "0x1333DC0")]
		private void RunTimeDestroyObjectOnDisabledText(GameObject obj)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1331370", Offset = "0x1331370", VA = "0x1331370")]
		private void PositionOldChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1331204", Offset = "0x1331204", VA = "0x1331204")]
		private void GetPositionAtStart()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1333E90", Offset = "0x1333E90", VA = "0x1333E90")]
		private float StartingX(string myString)
		{
			return default(float);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x13339D8", Offset = "0x13339D8", VA = "0x13339D8")]
		private float TotalSpacingRequiredFor(string myString)
		{
			return default(float);
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1334308", Offset = "0x1334308", VA = "0x1334308")]
		private float StartingY()
		{
			return default(float);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1330CB8", Offset = "0x1330CB8", VA = "0x1330CB8")]
		private int CharacterInOneLineUpdate()
		{
			return default(int);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x1331D48", Offset = "0x1331D48", VA = "0x1331D48")]
		private void CircularPositioning()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1331A2C", Offset = "0x1331A2C", VA = "0x1331A2C")]
		private void CircularListProcessOldChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1331C4C", Offset = "0x1331C4C", VA = "0x1331C4C")]
		private void CreateNewCharsForCircularList(int startingFrom)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1334634", Offset = "0x1334634", VA = "0x1334634")]
		private void CreateCharForCircularList(char c)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x133164C", Offset = "0x133164C", VA = "0x133164C")]
		private void CreateNewChars(int startingFrom)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x13346B4", Offset = "0x13346B4", VA = "0x13346B4")]
		private GameObject GetObject(char c)
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x1334950", Offset = "0x1334950", VA = "0x1334950")]
		private void CreateThisChar(char c)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x1333FE4", Offset = "0x1333FE4", VA = "0x1333FE4")]
		private void PrepareCharacter(GameObject obj)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x1334994", Offset = "0x1334994", VA = "0x1334994")]
		private void CreateAndPrepareCharacter(char c, float myX, float myY, float myZ, Transform tr)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x13348EC", Offset = "0x13348EC", VA = "0x13348EC")]
		private void AddCharacterToList(GameObject obj)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x133414C", Offset = "0x133414C", VA = "0x133414C")]
		private void ApplyEffects(GameObject obj)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x1334414", Offset = "0x1334414", VA = "0x1334414")]
		private void ApplyStyle(GameObject obj)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1334B24", Offset = "0x1334B24", VA = "0x1334B24")]
		private void SetLayer(GameObject obj)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x13320FC", Offset = "0x13320FC", VA = "0x13320FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2EC38", Offset = "0xB2EC38")]
		private void CombineMeshes()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1334BD8", Offset = "0x1334BD8", VA = "0x1334BD8")]
		private void AddToList(GameObject combinedMeshHolder)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1334C3C", Offset = "0x1334C3C", VA = "0x1334C3C")]
		public void OptimizeCombinedMesh(Mesh givenMesh)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1334C40", Offset = "0x1334C40", VA = "0x1334C40")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1334CE8", Offset = "0x1334CE8", VA = "0x1334CE8")]
		public void LoadDefaultSettings()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1334DA8", Offset = "0x1334DA8", VA = "0x1334DA8")]
		public Modular3DText()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18450", Offset = "0xB18450")]
	public class MText_Module_AddRigidBody : MText_Module
	{
		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18494", Offset = "0xB18494")]
		private sealed class <ModuleRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400082E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400082F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4000831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4000832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MText_Module_AddRigidBody <>4__this;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BCC")]
				[Address(RVA = "0xF1E4EC", Offset = "0xF1E4EC", VA = "0xF1E4EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BCE")]
				[Address(RVA = "0xF1E534", Offset = "0xF1E534", VA = "0xF1E534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xF1E0E4", Offset = "0xF1E0E4", VA = "0xF1E0E4")]
			[DebuggerHidden]
			public <ModuleRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xF1E110", Offset = "0xF1E110", VA = "0xF1E110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xF1E114", Offset = "0xF1E114", VA = "0xF1E114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xF1E4F4", Offset = "0xF1E4F4", VA = "0xF1E4F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool enableGravity;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool addRandomForce;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float horizontalForcePower;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float verticalForcePower;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 forceDirectionMinimum;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 forceDirectionMaximum;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PhysicMaterial physicMaterial;

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x15758B8", Offset = "0x15758B8", VA = "0x15758B8", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2ECC0", Offset = "0xB2ECC0")]
		public override IEnumerator ModuleRoutine(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x157595C", Offset = "0x157595C", VA = "0x157595C")]
		public MText_Module_AddRigidBody()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB184A4", Offset = "0xB184A4")]
	public class MText_Module_PlayParticles : MText_Module
	{
		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB184E8", Offset = "0xB184E8")]
		private sealed class <ModuleRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x4000839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MText_Module_PlayParticles <>4__this;

			[Token(Token = "0x400083A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject <spawnedParticle>5__2;

			[Token(Token = "0x170000CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD4")]
				[Address(RVA = "0xF1E874", Offset = "0xF1E874", VA = "0xF1E874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD6")]
				[Address(RVA = "0xF1E8BC", Offset = "0xF1E8BC", VA = "0xF1E8BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xF1E53C", Offset = "0xF1E53C", VA = "0xF1E53C")]
			[DebuggerHidden]
			public <ModuleRoutine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xF1E568", Offset = "0xF1E568", VA = "0xF1E568", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xF1E56C", Offset = "0xF1E56C", VA = "0xF1E56C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xF1E87C", Offset = "0xF1E87C", VA = "0xF1E87C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject particlePrefab;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int destroyParticleAfter;

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x15759A8", Offset = "0x15759A8", VA = "0x15759A8", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2ED70", Offset = "0xB2ED70")]
		public override IEnumerator ModuleRoutine(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1575A4C", Offset = "0x1575A4C", VA = "0x1575A4C")]
		public MText_Module_PlayParticles()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB184F8", Offset = "0xB184F8")]
	public class MText_Module_PositionChange : MText_Module
	{
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1853C", Offset = "0xB1853C")]
		private sealed class <ModuleRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4000846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MText_Module_PositionChange <>4__this;

			[Token(Token = "0x4000847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4000848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <tr>5__2;

			[Token(Token = "0x4000849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <startPosition>5__3;

			[Token(Token = "0x400084A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <targetPosition>5__4;

			[Token(Token = "0x400084B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <timer>5__5;

			[Token(Token = "0x170000CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BDC")]
				[Address(RVA = "0xF1ECBC", Offset = "0xF1ECBC", VA = "0xF1ECBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BDE")]
				[Address(RVA = "0xF1ED04", Offset = "0xF1ED04", VA = "0xF1ED04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xF1E8C4", Offset = "0xF1E8C4", VA = "0xF1E8C4")]
			[DebuggerHidden]
			public <ModuleRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xF1E8F0", Offset = "0xF1E8F0", VA = "0xF1E8F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xF1E8F4", Offset = "0xF1E8F4", VA = "0xF1E8F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xF1ECC4", Offset = "0xF1ECC4", VA = "0xF1ECC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1FEB8", Offset = "0xB1FEB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB1FEB8", Offset = "0xB1FEB8")]
		private float delayBeforeStarting;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool useLocalPosition;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FF24", Offset = "0xB1FF24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1FF24", Offset = "0xB1FF24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1FF24", Offset = "0xB1FF24")]
		private bool startFromDefaultPosition;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FF90", Offset = "0xB1FF90")]
		[SerializeField]
		private Vector3 startFrom;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1FFDC", Offset = "0xB1FFDC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB1FFDC", Offset = "0xB1FFDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB1FFDC", Offset = "0xB1FFDC")]
		[SerializeField]
		private bool moveToOriginal;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20048", Offset = "0xB20048")]
		[SerializeField]
		private bool addMoveToValue;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20094", Offset = "0xB20094")]
		private Vector3 moveTo;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB200E0", Offset = "0xB200E0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB200E0", Offset = "0xB200E0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB200E0", Offset = "0xB200E0")]
		private AnimationCurve animationCurve;

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1575A5C", Offset = "0x1575A5C", VA = "0x1575A5C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EE20", Offset = "0xB2EE20")]
		public override IEnumerator ModuleRoutine(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1575B00", Offset = "0x1575B00", VA = "0x1575B00")]
		public MText_Module_PositionChange()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1854C", Offset = "0xB1854C")]
	public class MText_Module_RemoveRigidBody : MText_Module
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18590", Offset = "0xB18590")]
		private sealed class <ModuleRoutine>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400084C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400084D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400084E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x170000D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BE4")]
				[Address(RVA = "0xF1EF20", Offset = "0xF1EF20", VA = "0xF1EF20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE6")]
				[Address(RVA = "0xF1EF68", Offset = "0xF1EF68", VA = "0xF1EF68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xF1ED0C", Offset = "0xF1ED0C", VA = "0xF1ED0C")]
			[DebuggerHidden]
			public <ModuleRoutine>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0xF1ED38", Offset = "0xF1ED38", VA = "0xF1ED38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xF1ED3C", Offset = "0xF1ED3C", VA = "0xF1ED3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xF1EF28", Offset = "0xF1EF28", VA = "0xF1EF28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1575B4C", Offset = "0x1575B4C", VA = "0x1575B4C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EED0", Offset = "0xB2EED0")]
		public override IEnumerator ModuleRoutine(GameObject obj, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1575BC4", Offset = "0x1575BC4", VA = "0x1575BC4")]
		public MText_Module_RemoveRigidBody()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB185A0", Offset = "0xB185A0")]
	public class MText_Module_ScaleChange : MText_Module
	{
		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB185E4", Offset = "0xB185E4")]
		private sealed class <ModuleRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x4000857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MText_Module_ScaleChange <>4__this;

			[Token(Token = "0x4000858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4000859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <tr>5__2;

			[Token(Token = "0x400085A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <startScale>5__3;

			[Token(Token = "0x400085B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <targetScale>5__4;

			[Token(Token = "0x400085C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <timer>5__5;

			[Token(Token = "0x170000D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BEC")]
				[Address(RVA = "0xF1F3F0", Offset = "0xF1F3F0", VA = "0xF1F3F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BEE")]
				[Address(RVA = "0xF1F438", Offset = "0xF1F438", VA = "0xF1F438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0xF1F188", Offset = "0xF1F188", VA = "0xF1F188")]
			[DebuggerHidden]
			public <ModuleRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0xF1F1B4", Offset = "0xF1F1B4", VA = "0xF1F1B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xF1F1B8", Offset = "0xF1F1B8", VA = "0xF1F1B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xF1F3F8", Offset = "0xF1F3F8", VA = "0xF1F3F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2014C", Offset = "0xB2014C")]
		[SerializeField]
		private bool growFromDefaultScale;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20198", Offset = "0xB20198")]
		[SerializeField]
		private Vector3 growFrom;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB201E4", Offset = "0xB201E4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB201E4", Offset = "0xB201E4")]
		private bool growToOriginal;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20240", Offset = "0xB20240")]
		[SerializeField]
		private Vector3 growTo;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB2028C", Offset = "0xB2028C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2028C", Offset = "0xB2028C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB2028C", Offset = "0xB2028C")]
		private AnimationCurve animationCurve;

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1575C80", Offset = "0x1575C80", VA = "0x1575C80", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EF80", Offset = "0xB2EF80")]
		public override IEnumerator ModuleRoutine(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1575D24", Offset = "0x1575D24", VA = "0x1575D24")]
		public MText_Module_ScaleChange()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class Mtext_UI_InputString : MonoBehaviour
	{
		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB185F4", Offset = "0xB185F4")]
		private sealed class <FocusRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mtext_UI_InputString <>4__this;

			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool enable;

			[Token(Token = "0x170000D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C0A")]
				[Address(RVA = "0xD965B0", Offset = "0xD965B0", VA = "0xD965B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C0C")]
				[Address(RVA = "0xD965F8", Offset = "0xD965F8", VA = "0xD965F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xD9650C", Offset = "0xD9650C", VA = "0xD9650C")]
			[DebuggerHidden]
			public <FocusRoutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000C08")]
			[Address(RVA = "0xD96538", Offset = "0xD96538", VA = "0xD96538", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xD9653C", Offset = "0xD9653C", VA = "0xD9653C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xD965B8", Offset = "0xD965B8", VA = "0xD965B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB202F8", Offset = "0xB202F8")]
		public bool autoFocusOnGameStart;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool interactable;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int maxCharacter;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string typingSymbol;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string input;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string placeHolderText;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Modular3DText text;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer background;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool enterKeyEndsInput;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material placeHolderTextMat;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material inFocusTextMat;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material inFocusBackgroundMat;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material outOfFocusTextMat;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material outOfFocusBackgroundMat;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material disabledTextMat;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material disabledBackgroundMat;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material currentTextMaterial;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip typeSound;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onInput;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onBackspace;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onInputEnd;

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1828534", Offset = "0x1828534", VA = "0x1828534")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x18286EC", Offset = "0x18286EC", VA = "0x18286EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x18289E4", Offset = "0x18289E4", VA = "0x18289E4")]
		public void InputComplete()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1828A20", Offset = "0x1828A20", VA = "0x1828A20")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1828A28", Offset = "0x1828A28", VA = "0x1828A28")]
		public void UpdateText(string newText)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1828A54", Offset = "0x1828A54", VA = "0x1828A54")]
		public void UpdateText(int newTextInt)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1828A9C", Offset = "0x1828A9C", VA = "0x1828A9C")]
		public void UpdateText(float newTextFloat)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1828840", Offset = "0x1828840", VA = "0x1828840")]
		public void UpdateText(bool sound)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1828AE4", Offset = "0x1828AE4", VA = "0x1828AE4")]
		public void Select()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x18286BC", Offset = "0x18286BC", VA = "0x18286BC")]
		public void Focus(bool enable)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1828BA4", Offset = "0x1828BA4", VA = "0x1828BA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F030", Offset = "0xB2F030")]
		private IEnumerator FocusRoutine(bool enable)
		{
			return null;
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1828C30", Offset = "0x1828C30", VA = "0x1828C30")]
		public void Focus(bool enable, bool delay)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1828C40", Offset = "0x1828C40", VA = "0x1828C40")]
		private void FocusFunction(bool enable)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1828D78", Offset = "0x1828D78", VA = "0x1828D78")]
		public void Interactable()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1828D80", Offset = "0x1828D80", VA = "0x1828D80")]
		public void Uninteractable()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1828CA0", Offset = "0x1828CA0", VA = "0x1828CA0")]
		private void SelectedVisual()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1828CE8", Offset = "0x1828CE8", VA = "0x1828CE8")]
		private void UnselectedVisual()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1828D30", Offset = "0x1828D30", VA = "0x1828D30")]
		public void DisableVisual()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1828E9C", Offset = "0x1828E9C", VA = "0x1828E9C")]
		private void UpdateMaterials(Material textMat, Material backgroundMat)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x18285D4", Offset = "0x18285D4", VA = "0x18285D4")]
		public MText_UI_List GetParentList()
		{
			return null;
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1828F88", Offset = "0x1828F88", VA = "0x1828F88")]
		public (bool, MText_UI_List) ApplyNormalStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1828DB8", Offset = "0x1828DB8", VA = "0x1828DB8")]
		public (bool, MText_UI_List) ApplySelectedStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x182906C", Offset = "0x182906C", VA = "0x182906C")]
		public (bool, MText_UI_List) ApplyDisabledStyleFromParent()
		{
			return default((bool, MText_UI_List));
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1829150", Offset = "0x1829150", VA = "0x1829150")]
		public Mtext_UI_InputString()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class MText_SampleScene_Announcement : MonoBehaviour
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string announcement;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem myParticleSystem;

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1576400", Offset = "0x1576400", VA = "0x1576400")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1576490", Offset = "0x1576490", VA = "0x1576490")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x15764B4", Offset = "0x15764B4", VA = "0x15764B4")]
		public MText_SampleScene_Announcement()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class MText_SampleScene_Cursor : MonoBehaviour
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform crosshair;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem hitEffect;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StatusToolTip statusToolTip;

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x15764BC", Offset = "0x15764BC", VA = "0x15764BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x15764C8", Offset = "0x15764C8", VA = "0x15764C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x157690C", Offset = "0x157690C", VA = "0x157690C")]
		public MText_SampleScene_Cursor()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class MText_SampleScene_FontTest : MonoBehaviour
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Modular3DText modular3DText;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Modular3DText fontText;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB20410", Offset = "0xB20410")]
		private List<MText_Font> fonts;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int selectedFont;

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1576920", Offset = "0x1576920", VA = "0x1576920")]
		public void NextFont()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1576AAC", Offset = "0x1576AAC", VA = "0x1576AAC")]
		public void PreviousFont()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1576988", Offset = "0x1576988", VA = "0x1576988")]
		private void UpdateInfo()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1576B14", Offset = "0x1576B14", VA = "0x1576B14")]
		public MText_SampleScene_FontTest()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class MText_SampleScene_ListTest : MonoBehaviour
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Transform> lists;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int selectedList;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int speed;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float startTime;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 targetPos;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 startPos;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1576B98", Offset = "0x1576B98", VA = "0x1576B98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1576C68", Offset = "0x1576C68", VA = "0x1576C68")]
		public void Next()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1576DA0", Offset = "0x1576DA0", VA = "0x1576DA0")]
		public void Previous()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1576CD0", Offset = "0x1576CD0", VA = "0x1576CD0")]
		private void GetPosition()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1576E08", Offset = "0x1576E08", VA = "0x1576E08")]
		public MText_SampleScene_ListTest()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public class MText_SampleScene_VRCam : MonoBehaviour
	{
		[Token(Token = "0x20005C1")]
		public enum RotationAxes
		{
			[Token(Token = "0x400089A")]
			MouseXAndY,
			[Token(Token = "0x400089B")]
			MouseX,
			[Token(Token = "0x400089C")]
			MouseY
		}

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationX;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotationY;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<float> rotArrayX;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float rotAverageX;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<float> rotArrayY;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float rotAverageY;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float frameCounter;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion originalRotation;

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1576EB4", Offset = "0x1576EB4", VA = "0x1576EB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x15774F4", Offset = "0x15774F4", VA = "0x15774F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1577480", Offset = "0x1577480", VA = "0x1577480")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x15775C0", Offset = "0x15775C0", VA = "0x15775C0")]
		public MText_SampleScene_VRCam()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class MText_Settings : ScriptableObject
	{
		[Token(Token = "0x20005C3")]
		public enum MeshExportStyle
		{
			[Token(Token = "0x40008B5")]
			exportAsObj,
			[Token(Token = "0x40008B6")]
			exportAsMeshAsset
		}

		[Token(Token = "0x20005C4")]
		public enum CharInputStyle
		{
			[Token(Token = "0x40008B8")]
			CharacterRange,
			[Token(Token = "0x40008B9")]
			UnicodeRange,
			[Token(Token = "0x40008BA")]
			CustomCharacters,
			[Token(Token = "0x40008BB")]
			UnicodeSequence
		}

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string selectedTab;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color thirdBackgroundColor;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color thirdPropertyFieldColor;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float smallHorizontalFieldSize;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float normalltHorizontalFieldSize;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float largeHorizontalFieldSize;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float extraLargeHorizontalFieldSize;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MText_Font defaultFont;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 defaultTextSize;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material defaultTextMaterial;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material defaultBackgroundMaterial;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public CharInputStyle charInputStyle;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public char startChar;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		[HideInInspector]
		public char endChar;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public string startUnicode;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public string endUnicode;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB204C8", Offset = "0xB204C8")]
		public string customCharacters;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB20508", Offset = "0xB20508")]
		[HideInInspector]
		public string unicodeSequence;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int vertexDensity;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public float sizeXY;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public float sizeZ;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public float smoothingAngle;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public MeshExportStyle meshExportStyle;

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1577690", Offset = "0x1577690", VA = "0x1577690")]
		public MText_Settings()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18604", Offset = "0xB18604")]
	public class MText_Module_Rotate : MText_Module
	{
		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18648", Offset = "0xB18648")]
		private sealed class <ModuleRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MText_Module_Rotate <>4__this;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <tr>5__2;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timer>5__3;

			[Token(Token = "0x170000D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C26")]
				[Address(RVA = "0xF1F138", Offset = "0xF1F138", VA = "0xF1F138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C28")]
				[Address(RVA = "0xF1F180", Offset = "0xF1F180", VA = "0xF1F180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xF1EF70", Offset = "0xF1EF70", VA = "0xF1EF70")]
			[DebuggerHidden]
			public <ModuleRoutine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xF1EF9C", Offset = "0xF1EF9C", VA = "0xF1EF9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xF1EFA0", Offset = "0xF1EFA0", VA = "0xF1EFA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xF1F140", Offset = "0xF1F140", VA = "0xF1F140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int numRotations;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB205A8", Offset = "0xB205A8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB205A8", Offset = "0xB205A8")]
		private AnimationCurve animationCurve;

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1575BCC", Offset = "0x1575BCC", VA = "0x1575BCC", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F0E0", Offset = "0xB2F0E0")]
		public override IEnumerator ModuleRoutine(GameObject obj, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1575C70", Offset = "0x1575C70", VA = "0x1575C70")]
		public MText_Module_Rotate()
		{
		}
	}
}
namespace RTLTMPro
{
	[Token(Token = "0x20005C7")]
	public enum EnglishNumbers
	{
		[Token(Token = "0x40008C6")]
		Zero = 48,
		[Token(Token = "0x40008C7")]
		One,
		[Token(Token = "0x40008C8")]
		Two,
		[Token(Token = "0x40008C9")]
		Three,
		[Token(Token = "0x40008CA")]
		Four,
		[Token(Token = "0x40008CB")]
		Five,
		[Token(Token = "0x40008CC")]
		Six,
		[Token(Token = "0x40008CD")]
		Seven,
		[Token(Token = "0x40008CE")]
		Eight,
		[Token(Token = "0x40008CF")]
		Nine
	}
	[Token(Token = "0x20005C8")]
	public enum FarsiNumbers
	{
		[Token(Token = "0x40008D1")]
		Zero = 1776,
		[Token(Token = "0x40008D2")]
		One,
		[Token(Token = "0x40008D3")]
		Two,
		[Token(Token = "0x40008D4")]
		Three,
		[Token(Token = "0x40008D5")]
		Four,
		[Token(Token = "0x40008D6")]
		Five,
		[Token(Token = "0x40008D7")]
		Six,
		[Token(Token = "0x40008D8")]
		Seven,
		[Token(Token = "0x40008D9")]
		Eight,
		[Token(Token = "0x40008DA")]
		Nine
	}
	[Token(Token = "0x20005C9")]
	public enum GeneralLetters
	{
		[Token(Token = "0x40008DC")]
		Hamza = 1569,
		[Token(Token = "0x40008DD")]
		Alef = 1575,
		[Token(Token = "0x40008DE")]
		AlefHamza = 1571,
		[Token(Token = "0x40008DF")]
		WawHamza = 1572,
		[Token(Token = "0x40008E0")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40008E1")]
		AlefMaksura = 1609,
		[Token(Token = "0x40008E2")]
		HamzaNabera = 1574,
		[Token(Token = "0x40008E3")]
		Ba = 1576,
		[Token(Token = "0x40008E4")]
		Ta = 1578,
		[Token(Token = "0x40008E5")]
		Tha2 = 1579,
		[Token(Token = "0x40008E6")]
		Jeem = 1580,
		[Token(Token = "0x40008E7")]
		H7aa = 1581,
		[Token(Token = "0x40008E8")]
		Khaa2 = 1582,
		[Token(Token = "0x40008E9")]
		Dal = 1583,
		[Token(Token = "0x40008EA")]
		Thal = 1584,
		[Token(Token = "0x40008EB")]
		Ra2 = 1585,
		[Token(Token = "0x40008EC")]
		Zeen = 1586,
		[Token(Token = "0x40008ED")]
		Seen = 1587,
		[Token(Token = "0x40008EE")]
		Sheen = 1588,
		[Token(Token = "0x40008EF")]
		S9a = 1589,
		[Token(Token = "0x40008F0")]
		Dha = 1590,
		[Token(Token = "0x40008F1")]
		T6a = 1591,
		[Token(Token = "0x40008F2")]
		T6ha = 1592,
		[Token(Token = "0x40008F3")]
		Ain = 1593,
		[Token(Token = "0x40008F4")]
		Gain = 1594,
		[Token(Token = "0x40008F5")]
		Fa = 1601,
		[Token(Token = "0x40008F6")]
		Gaf = 1602,
		[Token(Token = "0x40008F7")]
		Kaf = 1603,
		[Token(Token = "0x40008F8")]
		Lam = 1604,
		[Token(Token = "0x40008F9")]
		Meem = 1605,
		[Token(Token = "0x40008FA")]
		Noon = 1606,
		[Token(Token = "0x40008FB")]
		Ha = 1607,
		[Token(Token = "0x40008FC")]
		Waw = 1608,
		[Token(Token = "0x40008FD")]
		Ya = 1610,
		[Token(Token = "0x40008FE")]
		AlefMad = 1570,
		[Token(Token = "0x40008FF")]
		TaMarboota = 1577,
		[Token(Token = "0x4000900")]
		PersianYa = 1740,
		[Token(Token = "0x4000901")]
		PersianPe = 1662,
		[Token(Token = "0x4000902")]
		PersianChe = 1670,
		[Token(Token = "0x4000903")]
		PersianZe = 1688,
		[Token(Token = "0x4000904")]
		PersianGaf = 1711,
		[Token(Token = "0x4000905")]
		PersianGaf2 = 1705,
		[Token(Token = "0x4000906")]
		ArabicTatweel = 1600,
		[Token(Token = "0x4000907")]
		ZeroWidthNoJoiner = 8204
	}
	[Token(Token = "0x20005CA")]
	public static class GlyphTable
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<char, char> MapList;

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xFD514C", Offset = "0xFD514C", VA = "0xFD514C")]
		static GlyphTable()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xFD542C", Offset = "0xFD542C", VA = "0xFD542C")]
		public static char Convert(char toBeConverted)
		{
			return default(char);
		}
	}
	[Token(Token = "0x20005CB")]
	public enum HinduNumbers
	{
		[Token(Token = "0x400090A")]
		Zero = 1632,
		[Token(Token = "0x400090B")]
		One,
		[Token(Token = "0x400090C")]
		Two,
		[Token(Token = "0x400090D")]
		Three,
		[Token(Token = "0x400090E")]
		Four,
		[Token(Token = "0x400090F")]
		Five,
		[Token(Token = "0x4000910")]
		Six,
		[Token(Token = "0x4000911")]
		Seven,
		[Token(Token = "0x4000912")]
		Eight,
		[Token(Token = "0x4000913")]
		Nine
	}
	[Token(Token = "0x20005CC")]
	internal enum IsolatedLetters
	{
		[Token(Token = "0x4000915")]
		Hamza = 65152,
		[Token(Token = "0x4000916")]
		Alef = 65165,
		[Token(Token = "0x4000917")]
		AlefHamza = 65155,
		[Token(Token = "0x4000918")]
		WawHamza = 65157,
		[Token(Token = "0x4000919")]
		AlefMaksoor = 65159,
		[Token(Token = "0x400091A")]
		AlefMaksura = 65263,
		[Token(Token = "0x400091B")]
		HamzaNabera = 65161,
		[Token(Token = "0x400091C")]
		Ba = 65167,
		[Token(Token = "0x400091D")]
		Ta = 65173,
		[Token(Token = "0x400091E")]
		Tha2 = 65177,
		[Token(Token = "0x400091F")]
		Jeem = 65181,
		[Token(Token = "0x4000920")]
		H7aa = 65185,
		[Token(Token = "0x4000921")]
		Khaa2 = 65189,
		[Token(Token = "0x4000922")]
		Dal = 65193,
		[Token(Token = "0x4000923")]
		Thal = 65195,
		[Token(Token = "0x4000924")]
		Ra2 = 65197,
		[Token(Token = "0x4000925")]
		Zeen = 65199,
		[Token(Token = "0x4000926")]
		Seen = 65201,
		[Token(Token = "0x4000927")]
		Sheen = 65205,
		[Token(Token = "0x4000928")]
		S9a = 65209,
		[Token(Token = "0x4000929")]
		Dha = 65213,
		[Token(Token = "0x400092A")]
		T6a = 65217,
		[Token(Token = "0x400092B")]
		T6ha = 65221,
		[Token(Token = "0x400092C")]
		Ain = 65225,
		[Token(Token = "0x400092D")]
		Gain = 65229,
		[Token(Token = "0x400092E")]
		Fa = 65233,
		[Token(Token = "0x400092F")]
		Gaf = 65237,
		[Token(Token = "0x4000930")]
		Kaf = 65241,
		[Token(Token = "0x4000931")]
		Lam = 65245,
		[Token(Token = "0x4000932")]
		Meem = 65249,
		[Token(Token = "0x4000933")]
		Noon = 65253,
		[Token(Token = "0x4000934")]
		Ha = 65257,
		[Token(Token = "0x4000935")]
		Waw = 65261,
		[Token(Token = "0x4000936")]
		Ya = 65265,
		[Token(Token = "0x4000937")]
		AlefMad = 65153,
		[Token(Token = "0x4000938")]
		TaMarboota = 65171,
		[Token(Token = "0x4000939")]
		PersianYa = 64508,
		[Token(Token = "0x400093A")]
		PersianPe = 64342,
		[Token(Token = "0x400093B")]
		PersianChe = 64378,
		[Token(Token = "0x400093C")]
		PersianZe = 64394,
		[Token(Token = "0x400093D")]
		PersianGaf = 64402,
		[Token(Token = "0x400093E")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20005CD")]
	public static class RTLSupport
	{
		[Serializable]
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18658", Offset = "0xB18658")]
		private sealed class <>c
		{
			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400094A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string, string> <>9__16_0;

			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xD9F074", Offset = "0xD9F074", VA = "0xD9F074")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xD9F07C", Offset = "0xD9F07C", VA = "0xD9F07C")]
			internal string <RemoveTashkeel>b__16_0(string current, string s)
			{
				return null;
			}
		}

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<TashkeelLocation> TashkeelLocations;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Regex PairedTagFixer;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Regex LoneTagFixer;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly StringBuilder FinalLetters;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string ShaddaDammatan;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string ShaddaKasratan;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string ShaddaSuperscriptAlef;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string ShaddaFatha;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string ShaddaDamma;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly string ShaddaKasra;

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x278918C", Offset = "0x278918C", VA = "0x278918C")]
		static RTLSupport()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x2789524", Offset = "0x2789524", VA = "0x2789524")]
		public static string FixRTL(string input, bool fixTextTags, bool preserveNumbers, bool farsi)
		{
			return null;
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x278D13C", Offset = "0x278D13C", VA = "0x278D13C")]
		public static bool IsRTLInput(string input)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x278D19C", Offset = "0x278D19C", VA = "0x278D19C")]
		public static bool IsRTLInput(IEnumerable<char> chars)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x278C8C8", Offset = "0x278C8C8", VA = "0x278C8C8")]
		private static string FixTags(string input)
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x278966C", Offset = "0x278966C", VA = "0x278966C")]
		private static char[] PrepareInput(string input, bool farsi)
		{
			return null;
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x278D8D0", Offset = "0x278D8D0", VA = "0x278D8D0")]
		private static string RemoveTashkeel(string str)
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x2789760", Offset = "0x2789760", VA = "0x2789760")]
		private static char[] FixGlyphs(char[] letters, bool preserveNumbers, bool farsi)
		{
			return null;
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x279148C", Offset = "0x279148C", VA = "0x279148C")]
		private static char FixNumbers(char num, bool farsi)
		{
			return default(char);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x2789B8C", Offset = "0x2789B8C", VA = "0x2789B8C")]
		private static void FixLigature(IList<char> shapeFixedLetters, bool fixTextTags)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x2791558", Offset = "0x2791558", VA = "0x2791558")]
		private static char[] RestoreTashkeel(ICollection<char> letters)
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x278DD10", Offset = "0x278DD10", VA = "0x278DD10")]
		private static bool HandleSpecialLam(char[] letters, char[] lettersFinal, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x278D554", Offset = "0x278D554", VA = "0x278D554")]
		public static bool IsRTLCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x2790080", Offset = "0x2790080", VA = "0x2790080")]
		private static bool IsLeadingLetter(IList<char> letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x278F274", Offset = "0x278F274", VA = "0x278F274")]
		private static bool IsFinishingLetter(IList<char> letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x278DDE8", Offset = "0x278DDE8", VA = "0x278DDE8")]
		private static bool IsMiddleLetter(IList<char> letters, int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005CF")]
	[ExecuteInEditMode]
	public class RTLTextMeshPro : TextMeshProUGUI
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
		[SerializeField]
		protected bool preserveNumbers;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x791")]
		[SerializeField]
		protected bool farsi;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB20624", Offset = "0xB20624")]
		[SerializeField]
		protected string originalText;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
		[SerializeField]
		protected bool fixTags;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A1")]
		[SerializeField]
		protected bool forceFix;

		[Token(Token = "0x170000D8")]
		public new string text
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x2791BA8", Offset = "0x2791BA8", VA = "0x2791BA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x2791BB0", Offset = "0x2791BB0", VA = "0x2791BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public string OriginalText
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x2791CF4", Offset = "0x2791CF4", VA = "0x2791CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public bool PreserveNumbers
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x2791CFC", Offset = "0x2791CFC", VA = "0x2791CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x2791D04", Offset = "0x2791D04", VA = "0x2791D04")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool Farsi
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x2791D30", Offset = "0x2791D30", VA = "0x2791D30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x2791D38", Offset = "0x2791D38", VA = "0x2791D38")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public bool FixTags
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x2791D64", Offset = "0x2791D64", VA = "0x2791D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x2791D6C", Offset = "0x2791D6C", VA = "0x2791D6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		protected bool ForceFix
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x2791D98", Offset = "0x2791D98", VA = "0x2791D98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x2791DA0", Offset = "0x2791DA0", VA = "0x2791DA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x2791DCC", Offset = "0x2791DCC", VA = "0x2791DCC")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x2791C00", Offset = "0x2791C00", VA = "0x2791C00")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x2791DDC", Offset = "0x2791DDC", VA = "0x2791DDC")]
		private string GetFixedText(string input)
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x2791ED0", Offset = "0x2791ED0", VA = "0x2791ED0")]
		public RTLTextMeshPro()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	[ExecuteInEditMode]
	public class RTLTextMeshPro3D : TextMeshPro
	{
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x759")]
		[SerializeField]
		protected bool preserveNumbers;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75A")]
		[SerializeField]
		protected bool farsi;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB206A4", Offset = "0xB206A4")]
		protected string originalText;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
		[SerializeField]
		protected bool fixTags;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x769")]
		[SerializeField]
		protected bool forceFix;

		[Token(Token = "0x170000DE")]
		public new string text
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x2791F40", Offset = "0x2791F40", VA = "0x2791F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x2791F48", Offset = "0x2791F48", VA = "0x2791F48")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public string OriginalText
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x2791FA4", Offset = "0x2791FA4", VA = "0x2791FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public virtual bool PreserveNumbers
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x2791FAC", Offset = "0x2791FAC", VA = "0x2791FAC", Slot = "143")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x2791FB4", Offset = "0x2791FB4", VA = "0x2791FB4", Slot = "144")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public bool Farsi
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x2791FE0", Offset = "0x2791FE0", VA = "0x2791FE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x2791FE8", Offset = "0x2791FE8", VA = "0x2791FE8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public bool FixTags
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x2792014", Offset = "0x2792014", VA = "0x2792014")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x279201C", Offset = "0x279201C", VA = "0x279201C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		protected bool ForceFix
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x2792048", Offset = "0x2792048", VA = "0x2792048")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x2792050", Offset = "0x2792050", VA = "0x2792050")]
			set
			{
			}
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x279207C", Offset = "0x279207C", VA = "0x279207C", Slot = "145")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x2792098", Offset = "0x2792098", VA = "0x2792098", Slot = "146")]
		public virtual void UpdateText()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x2792198", Offset = "0x2792198", VA = "0x2792198", Slot = "147")]
		public virtual string GetFixedText(string input)
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x279228C", Offset = "0x279228C", VA = "0x279228C")]
		public RTLTextMeshPro3D()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public enum TashkeelCharacters
	{
		[Token(Token = "0x4000956")]
		Fathan = 1611,
		[Token(Token = "0x4000957")]
		Dammatan = 1612,
		[Token(Token = "0x4000958")]
		Kasratan = 1613,
		[Token(Token = "0x4000959")]
		Fatha = 1614,
		[Token(Token = "0x400095A")]
		Damma = 1615,
		[Token(Token = "0x400095B")]
		Kasra = 1616,
		[Token(Token = "0x400095C")]
		Shadda = 1617,
		[Token(Token = "0x400095D")]
		Sukun = 1618,
		[Token(Token = "0x400095E")]
		MaddahAbove = 1619,
		[Token(Token = "0x400095F")]
		SuperscriptAlef = 1648,
		[Token(Token = "0x4000960")]
		ShaddaWithDammatanIsolatedForm = 64606,
		[Token(Token = "0x4000961")]
		ShaddaWithKasratanIsolatedForm = 64607,
		[Token(Token = "0x4000962")]
		ShaddaWithFathaIsolatedForm = 64608,
		[Token(Token = "0x4000963")]
		ShaddaWithDammaIsolatedForm = 64609,
		[Token(Token = "0x4000964")]
		ShaddaWithKasraIsolatedForm = 64610,
		[Token(Token = "0x4000965")]
		ShaddaWithSuperscriptAlefIsolatedForm = 64611
	}
	[Token(Token = "0x20005D2")]
	public struct TashkeelLocation
	{
		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20704", Offset = "0xB20704")]
		private char <Tashkeel>k__BackingField;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20714", Offset = "0xB20714")]
		private int <Position>k__BackingField;

		[Token(Token = "0x170000E4")]
		public char Tashkeel
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xDB1DB0", Offset = "0xDB1DB0", VA = "0xDB1DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F190", Offset = "0xB2F190")]
			readonly get
			{
				return default(char);
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xDB1DB8", Offset = "0xDB1DB8", VA = "0xDB1DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1C8", Offset = "0xB2F1C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public int Position
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xDB1DC0", Offset = "0xDB1DC0", VA = "0xDB1DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1D8", Offset = "0xB2F1D8")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xDB1DC8", Offset = "0xDB1DC8", VA = "0xDB1DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F210", Offset = "0xB2F210")]
			set
			{
			}
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xDB1DD0", Offset = "0xDB1DD0", VA = "0xDB1DD0")]
		public TashkeelLocation(TashkeelCharacters tashkeel, int position)
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20005D3")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x103C9D4", Offset = "0x103C9D4", VA = "0x103C9D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x103CA28", Offset = "0x103CA28", VA = "0x103CA28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x103CD94", Offset = "0x103CD94", VA = "0x103CD94")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x103CE98", Offset = "0x103CE98", VA = "0x103CE98")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x103CA2C", Offset = "0x103CA2C", VA = "0x103CA2C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x103CF9C", Offset = "0x103CF9C", VA = "0x103CF9C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20005D5")]
		public enum ContactTest
		{
			[Token(Token = "0x4000979")]
			PerpenTest,
			[Token(Token = "0x400097A")]
			BackwardsPress
		}

		[Token(Token = "0x400096B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400096C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000E6")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x103D1A0", Offset = "0x103D1A0", VA = "0x103D1A0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E7")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x103D1A8", Offset = "0x103D1A8", VA = "0x103D1A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x103D1B4", Offset = "0x103D1B4", VA = "0x103D1B4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x103D2C8", Offset = "0x103D2C8", VA = "0x103D2C8")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x103D434", Offset = "0x103D434", VA = "0x103D434", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x103D9D8", Offset = "0x103D9D8", VA = "0x103D9D8")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x103D8F0", Offset = "0x103D8F0", VA = "0x103D8F0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x103DA84", Offset = "0x103DA84", VA = "0x103DA84")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x103DB08", Offset = "0x103DB08", VA = "0x103DB08")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x103DB94", Offset = "0x103DB94", VA = "0x103DB94")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB207B4", Offset = "0xB207B4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB207C4", Offset = "0xB207C4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000E8")]
		public Collider Collider
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0xE259BC", Offset = "0xE259BC", VA = "0xE259BC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F220", Offset = "0xB2F220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xE259C4", Offset = "0xE259C4", VA = "0xE259C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F230", Offset = "0xB2F230")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0xE259CC", Offset = "0xE259CC", VA = "0xE259CC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F240", Offset = "0xB2F240")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xE259D4", Offset = "0xE259D4", VA = "0xE259D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F250", Offset = "0xB2F250")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xE259DC", Offset = "0xE259DC", VA = "0xE259DC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE25A2C", Offset = "0xE25A2C", VA = "0xE25A2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE25AC0", Offset = "0xE25AC0", VA = "0xE25AC0")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000EB")]
		Collider Collider
		{
			[Token(Token = "0x6000C78")]
			get;
		}

		[Token(Token = "0x170000EC")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000C79")]
			get;
		}

		[Token(Token = "0x170000ED")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000C7A")]
			get;
		}
	}
	[Token(Token = "0x20005D8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xE3E63C", Offset = "0xE3E63C", VA = "0xE3E63C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public enum InteractionType
	{
		[Token(Token = "0x4000983")]
		Enter,
		[Token(Token = "0x4000984")]
		Stay,
		[Token(Token = "0x4000985")]
		Exit
	}
	[Token(Token = "0x20005DA")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20005DB")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000997")]
			Mesh,
			[Token(Token = "0x4000998")]
			Skeleton,
			[Token(Token = "0x4000999")]
			Both
		}

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18688", Offset = "0xB18688")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400099A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400099B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400099C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C9D")]
				[Address(RVA = "0xF161B0", Offset = "0xF161B0", VA = "0xF161B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C9F")]
				[Address(RVA = "0xF161F8", Offset = "0xF161F8", VA = "0xF161F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xF15F1C", Offset = "0xF15F1C", VA = "0xF15F1C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xF15F48", Offset = "0xF15F48", VA = "0xF15F48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xF15F4C", Offset = "0xF15F4C", VA = "0xF15F4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xF161B8", Offset = "0xF161B8", VA = "0xF161B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000986")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB207F4", Offset = "0xB207F4")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000EE")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xFC83CC", Offset = "0xFC83CC", VA = "0xFC83CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xFD927C", Offset = "0xFD927C", VA = "0xFD927C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xFD92EC", Offset = "0xFD92EC", VA = "0xFD92EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xFD9324", Offset = "0xFD9324", VA = "0xFD9324")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xFD9394", Offset = "0xFD9394", VA = "0xFD9394")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0xFD93CC", Offset = "0xFD93CC", VA = "0xFD93CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0xFD943C", Offset = "0xFD943C", VA = "0xFD943C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0xFD9474", Offset = "0xFD9474", VA = "0xFD9474")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0xFD94E4", Offset = "0xFD94E4", VA = "0xFD94E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xFD951C", Offset = "0xFD951C", VA = "0xFD951C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xFC8398", Offset = "0xFC8398", VA = "0xFC8398")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xFD958C", Offset = "0xFD958C", VA = "0xFD958C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xFD95F8", Offset = "0xFD95F8", VA = "0xFD95F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xFD962C", Offset = "0xFD962C", VA = "0xFD962C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xFD9698", Offset = "0xFD9698", VA = "0xFD9698")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xFD96CC", Offset = "0xFD96CC", VA = "0xFD96CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xFD9738", Offset = "0xFD9738", VA = "0xFD9738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xFD976C", Offset = "0xFD976C", VA = "0xFD976C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xFD97D8", Offset = "0xFD97D8", VA = "0xFD97D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xFD980C", Offset = "0xFD980C", VA = "0xFD980C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0xFD9878", Offset = "0xFD9878", VA = "0xFD9878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F260", Offset = "0xB2F260")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0xFD98C4", Offset = "0xFD98C4", VA = "0xFD98C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F270", Offset = "0xB2F270")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xFD9918", Offset = "0xFD9918", VA = "0xFD9918")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xFD9CEC", Offset = "0xFD9CEC", VA = "0xFD9CEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xFD9C74", Offset = "0xFD9C74", VA = "0xFD9C74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F280", Offset = "0xB2F280")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xFD9D74", Offset = "0xFD9D74", VA = "0xFD9D74")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xFD9E58", Offset = "0xFD9E58", VA = "0xFD9E58")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xFDA038", Offset = "0xFDA038", VA = "0xFDA038")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xFC820C", Offset = "0xFC820C", VA = "0xFC820C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xFDA274", Offset = "0xFDA274", VA = "0xFDA274")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005DE")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xF1BFB4", Offset = "0xF1BFB4", VA = "0xF1BFB4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000FB")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x127C918", Offset = "0x127C918", VA = "0x127C918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x127C920", Offset = "0x127C920", VA = "0x127C920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x127C928", Offset = "0x127C928", VA = "0x127C928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x127C930", Offset = "0x127C930", VA = "0x127C930", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000006")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x127C938", Offset = "0x127C938", VA = "0x127C938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F330", Offset = "0xB2F330")]
			add
			{
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x127C9D8", Offset = "0x127C9D8", VA = "0x127C9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F340", Offset = "0xB2F340")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x127CAE8", Offset = "0x127CAE8", VA = "0x127CAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F350", Offset = "0xB2F350")]
			add
			{
			}
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x127CB88", Offset = "0x127CB88", VA = "0x127CB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F360", Offset = "0xB2F360")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x127CC98", Offset = "0x127CC98", VA = "0x127CC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F370", Offset = "0xB2F370")]
			add
			{
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x127CD38", Offset = "0x127CD38", VA = "0x127CD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F380", Offset = "0xB2F380")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x127CA78", Offset = "0x127CA78", VA = "0x127CA78", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x127CC28", Offset = "0x127CC28", VA = "0x127CC28", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x127CDD8", Offset = "0x127CDD8", VA = "0x127CDD8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000CAD")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x127CE48", Offset = "0x127CE48", VA = "0x127CE48", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x127CEAC", Offset = "0x127CEAC", VA = "0x127CEAC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x127CF10", Offset = "0x127CF10", VA = "0x127CF10")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40009A5")]
		None,
		[Token(Token = "0x40009A6")]
		Proximity,
		[Token(Token = "0x40009A7")]
		Contact,
		[Token(Token = "0x40009A8")]
		Action
	}
	[Token(Token = "0x20005E0")]
	public enum InteractableState
	{
		[Token(Token = "0x40009AA")]
		Default,
		[Token(Token = "0x40009AB")]
		ProximityState,
		[Token(Token = "0x40009AC")]
		ContactState,
		[Token(Token = "0x40009AD")]
		ActionState
	}
	[Token(Token = "0x20005E1")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xEA6BEC", Offset = "0xEA6BEC", VA = "0xEA6BEC")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000FF")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xEA695C", Offset = "0xEA695C", VA = "0xEA695C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xEA69C0", Offset = "0xEA69C0", VA = "0xEA69C0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xEA6A8C", Offset = "0xEA6A8C", VA = "0xEA6A8C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xEA6B58", Offset = "0xEA6B58", VA = "0xEA6B58")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18698", Offset = "0xB18698")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000100")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CC0")]
				[Address(RVA = "0xF1C5C8", Offset = "0xF1C5C8", VA = "0xF1C5C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000101")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC2")]
				[Address(RVA = "0xF1C610", Offset = "0xF1C610", VA = "0xF1C610", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xF1C0B0", Offset = "0xF1C0B0", VA = "0xF1C0B0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0xF1C0DC", Offset = "0xF1C0DC", VA = "0xF1C0DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xF1C14C", Offset = "0xF1C14C", VA = "0xF1C14C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xF1C0F8", Offset = "0xF1C0F8", VA = "0xF1C0F8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0xF1C5D0", Offset = "0xF1C5D0", VA = "0xF1C5D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xEA83EC", Offset = "0xEA83EC", VA = "0xEA83EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xEA8468", Offset = "0xEA8468", VA = "0xEA8468")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F390", Offset = "0xB2F390")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xEA8508", Offset = "0xEA8508", VA = "0xEA8508")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xEA85F0", Offset = "0xEA85F0", VA = "0xEA85F0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000102")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0xEA85F8", Offset = "0xEA85F8", VA = "0xEA85F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xEA8778", Offset = "0xEA8778", VA = "0xEA8778")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xEA8820", Offset = "0xEA8820", VA = "0xEA8820")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xEA88C8", Offset = "0xEA88C8", VA = "0xEA88C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xEA8B90", Offset = "0xEA8B90", VA = "0xEA8B90")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xEA8BD8", Offset = "0xEA8BD8", VA = "0xEA8BD8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xEA8E88", Offset = "0xEA8E88", VA = "0xEA8E88")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xEA8FD4", Offset = "0xEA8FD4", VA = "0xEA8FD4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB186A8", Offset = "0xB186A8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000107")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CDC")]
				[Address(RVA = "0xF14EEC", Offset = "0xF14EEC", VA = "0xF14EEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000108")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CDE")]
				[Address(RVA = "0xF14F34", Offset = "0xF14F34", VA = "0xF14F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xF14AB8", Offset = "0xF14AB8", VA = "0xF14AB8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xF14AE4", Offset = "0xF14AE4", VA = "0xF14AE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xF14AE8", Offset = "0xF14AE8", VA = "0xF14AE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xF14EF4", Offset = "0xF14EF4", VA = "0xF14EF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C6")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000103")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xFC7DC4", Offset = "0xFC7DC4", VA = "0xFC7DC4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000104")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xFC7DCC", Offset = "0xFC7DCC", VA = "0xFC7DCC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000105")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xFC7DD4", Offset = "0xFC7DD4", VA = "0xFC7DD4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public override bool EnableState
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xFC7DDC", Offset = "0xFC7DDC", VA = "0xFC7DDC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xFC7E08", Offset = "0xFC7E08", VA = "0xFC7E08", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xFC7E44", Offset = "0xFC7E44", VA = "0xFC7E44", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xFC7EFC", Offset = "0xFC7EFC", VA = "0xFC7EFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F440", Offset = "0xB2F440")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xFC7F74", Offset = "0xFC7F74", VA = "0xFC7F74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xFC8404", Offset = "0xFC8404", VA = "0xFC8404")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xFC8590", Offset = "0xFC8590", VA = "0xFC8590")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xFC8684", Offset = "0xFC8684", VA = "0xFC8684", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xFC897C", Offset = "0xFC897C", VA = "0xFC897C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xFC8980", Offset = "0xFC8980", VA = "0xFC8980", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xFC8984", Offset = "0xFC8984", VA = "0xFC8984")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20884", Offset = "0xB20884")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20894", Offset = "0xB20894")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB208A4", Offset = "0xB208A4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000109")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xFC899C", Offset = "0xFC899C", VA = "0xFC899C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F4F0", Offset = "0xB2F4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xFC89A4", Offset = "0xFC89A4", VA = "0xFC89A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F500", Offset = "0xB2F500")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public bool EnableState
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xFC89AC", Offset = "0xFC89AC", VA = "0xFC89AC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xFC89C8", Offset = "0xFC89C8", VA = "0xFC89C8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xFC89E8", Offset = "0xFC89E8", VA = "0xFC89E8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F510", Offset = "0xB2F510")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xFC89F0", Offset = "0xFC89F0", VA = "0xFC89F0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F520", Offset = "0xB2F520")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public float SphereRadius
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xFC89FC", Offset = "0xFC89FC", VA = "0xFC89FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F530", Offset = "0xB2F530")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xFC8A04", Offset = "0xFC8A04", VA = "0xFC8A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F540", Offset = "0xB2F540")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xFC8A0C", Offset = "0xFC8A0C", VA = "0xFC8A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xFC8A54", Offset = "0xFC8A54", VA = "0xFC8A54", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xFC8A58", Offset = "0xFC8A58", VA = "0xFC8A58")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40009D9")]
		None = 0,
		[Token(Token = "0x40009DA")]
		Ray = 1,
		[Token(Token = "0x40009DB")]
		Poke = 4,
		[Token(Token = "0x40009DC")]
		All = -1
	}
	[Token(Token = "0x20005EA")]
	public enum ToolInputState
	{
		[Token(Token = "0x40009DE")]
		Inactive,
		[Token(Token = "0x40009DF")]
		PrimaryInputDown,
		[Token(Token = "0x40009E0")]
		PrimaryInputDownStay,
		[Token(Token = "0x40009E1")]
		PrimaryInputUp
	}
	[Token(Token = "0x20005EB")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x127CF18", Offset = "0x127CF18", VA = "0x127CF18")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB208B4", Offset = "0xB208B4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB208C4", Offset = "0xB208C4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB208D4", Offset = "0xB208D4")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700010D")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xEA772C", Offset = "0xEA772C", VA = "0xEA772C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xEA7734", Offset = "0xEA7734", VA = "0xEA7734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F550", Offset = "0xB2F550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0xEA773C", Offset = "0xEA773C", VA = "0xEA773C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F560", Offset = "0xB2F560")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000CEE")]
			get;
		}

		[Token(Token = "0x17000110")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000CEF")]
			get;
		}

		[Token(Token = "0x17000111")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000CF0")]
			get;
		}

		[Token(Token = "0x17000112")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xEA7748", Offset = "0xEA7748", VA = "0xEA7748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F570", Offset = "0xB2F570")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xEA7754", Offset = "0xEA7754", VA = "0xEA7754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F580", Offset = "0xB2F580")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xEA7760", Offset = "0xEA7760", VA = "0xEA7760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F590", Offset = "0xB2F590")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xEA776C", Offset = "0xEA776C", VA = "0xEA776C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F5A0", Offset = "0xB2F5A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000CF9")]
			get;
			[Token(Token = "0x6000CFA")]
			set;
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xEA7778", Offset = "0xEA7778", VA = "0xEA7778")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000CF7")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000CF8")]
		public abstract void DeFocus();

		[Token(Token = "0x6000CFB")]
		public abstract void Initialize();

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xEA7780", Offset = "0xEA7780", VA = "0xEA7780")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xEA77CC", Offset = "0xEA77CC", VA = "0xEA77CC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xEA7820", Offset = "0xEA7820", VA = "0xEA7820", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xEA7AD0", Offset = "0xEA7AD0", VA = "0xEA7AD0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xEA825C", Offset = "0xEA825C", VA = "0xEA825C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000115")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D01")]
			get;
		}

		[Token(Token = "0x17000116")]
		bool EnableState
		{
			[Token(Token = "0x6000D03")]
			get;
			[Token(Token = "0x6000D04")]
			set;
		}

		[Token(Token = "0x17000117")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000D05")]
			get;
			[Token(Token = "0x6000D06")]
			set;
		}

		[Token(Token = "0x6000D02")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20005EE")]
	public class PinchStateModule
	{
		[Token(Token = "0x20005EF")]
		private enum PinchState
		{
			[Token(Token = "0x40009F2")]
			None,
			[Token(Token = "0x40009F3")]
			PinchDown,
			[Token(Token = "0x40009F4")]
			PinchStay,
			[Token(Token = "0x40009F5")]
			PinchUp
		}

		[Token(Token = "0x40009EE")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000118")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x277ECD4", Offset = "0x277ECD4", VA = "0x277ECD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x277ED5C", Offset = "0x277ED5C", VA = "0x277ED5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011A")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x277EDE4", Offset = "0x277EDE4", VA = "0x277EDE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x277EE6C", Offset = "0x277EE6C", VA = "0x277EE6C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x277EEA0", Offset = "0x277EEA0", VA = "0x277EEA0")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40009F6")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40009F7")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40009F8")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40009F9")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40009FA")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB208F4", Offset = "0xB208F4")]
		private float _coneAngleDegrees;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700011B")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xEBA424", Offset = "0xEBA424", VA = "0xEBA424", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700011C")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xEBA42C", Offset = "0xEBA42C", VA = "0xEBA42C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700011D")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xEBA4A0", Offset = "0xEBA4A0", VA = "0xEBA4A0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011E")]
		public override bool EnableState
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xEBA4A8", Offset = "0xEBA4A8", VA = "0xEBA4A8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xEBA4EC", Offset = "0xEBA4EC", VA = "0xEBA4EC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xEBA560", Offset = "0xEBA560", VA = "0xEBA560", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xEBA5C8", Offset = "0xEBA5C8", VA = "0xEBA5C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xEBA66C", Offset = "0xEBA66C", VA = "0xEBA66C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xEBA930", Offset = "0xEBA930", VA = "0xEBA930")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xEBA9B8", Offset = "0xEBA9B8", VA = "0xEBA9B8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xEBAD88", Offset = "0xEBAD88", VA = "0xEBAD88")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xEBAE98", Offset = "0xEBAE98", VA = "0xEBAE98")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xEBAFBC", Offset = "0xEBAFBC", VA = "0xEBAFBC")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xEBB2C0", Offset = "0xEBB2C0", VA = "0xEBB2C0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xEBB654", Offset = "0xEBB654", VA = "0xEBB654", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xEBB73C", Offset = "0xEBB73C", VA = "0xEBB73C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xEBB778", Offset = "0xEBB778", VA = "0xEBB778")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000A06")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000A07")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20968", Offset = "0xB20968")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700011F")]
		public bool EnableState
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xEBA4D0", Offset = "0xEBA4D0", VA = "0xEBA4D0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xEBA508", Offset = "0xEBA508", VA = "0xEBA508", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xEBB870", Offset = "0xEBB870", VA = "0xEBB870", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xEBA8F4", Offset = "0xEBA8F4", VA = "0xEBA8F4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xEBBAD0", Offset = "0xEBBAD0", VA = "0xEBBAD0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F5B0", Offset = "0xB2F5B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xEBBAD8", Offset = "0xEBBAD8", VA = "0xEBBAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F5C0", Offset = "0xB2F5C0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xEBB878", Offset = "0xEBB878", VA = "0xEBB878")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xEBB690", Offset = "0xEBB690", VA = "0xEBB690", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xEBBAE0", Offset = "0xEBBAE0", VA = "0xEBBAE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xEBBD54", Offset = "0xEBBD54", VA = "0xEBBD54")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xEBBE44", Offset = "0xEBBE44", VA = "0xEBBE44")]
		public RayToolView()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB186C8", Offset = "0xB186C8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18728", Offset = "0xB18728")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xF15EE8", Offset = "0xF15EE8", VA = "0xF15EE8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xF15EF0", Offset = "0xF15EF0", VA = "0xF15EF0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A10")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000A11")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000A12")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000A13")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000A14")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000A15")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000A16")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000A17")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000A18")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000A19")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000A1A")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xFD8468", Offset = "0xFD8468", VA = "0xFD8468")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xFD84C4", Offset = "0xFD84C4", VA = "0xFD84C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xFD8958", Offset = "0xFD8958", VA = "0xFD8958")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xFD8A44", Offset = "0xFD8A44", VA = "0xFD8A44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xFD8BA8", Offset = "0xFD8BA8", VA = "0xFD8BA8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xFD8EB0", Offset = "0xFD8EB0", VA = "0xFD8EB0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xFD8FA8", Offset = "0xFD8FA8", VA = "0xFD8FA8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xFD9108", Offset = "0xFD9108", VA = "0xFD9108")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xFD8C40", Offset = "0xFD8C40", VA = "0xFD8C40")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xFD8C94", Offset = "0xFD8C94", VA = "0xFD8C94")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xFD87FC", Offset = "0xFD87FC", VA = "0xFD87FC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xFD9244", Offset = "0xFD9244", VA = "0xFD9244")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000A2F")]
		Default,
		[Token(Token = "0x4000A30")]
		Generic,
		[Token(Token = "0x4000A31")]
		PingPongBall,
		[Token(Token = "0x4000A32")]
		Controller
	}
	[Token(Token = "0x20005F5")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000122")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xFD925C", Offset = "0xFD925C", VA = "0xFD925C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0xFD9264", Offset = "0xFD9264", VA = "0xFD9264")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000124")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xFD926C", Offset = "0xFD926C", VA = "0xFD926C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xFD9274", Offset = "0xFD9274", VA = "0xFD9274")]
		public HandPose()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20005F6")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000A37")]
		TRIANGLES,
		[Token(Token = "0x4000A38")]
		QUADS
	}
	[Token(Token = "0x20005F7")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000A3A")]
		ABSORPTION,
		[Token(Token = "0x4000A3B")]
		TRANSMISSION,
		[Token(Token = "0x4000A3C")]
		SCATTERING
	}
	[Token(Token = "0x20005F8")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20005F9")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000A41")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000A42")]
		public const string Tab = "    ";

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x103B18C", Offset = "0x103B18C", VA = "0x103B18C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F5D0", Offset = "0xB2F5D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F5D0", Offset = "0xB2F5D0")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x103B21C", Offset = "0x103B21C", VA = "0x103B21C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F630", Offset = "0xB2F630")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F630", Offset = "0xB2F630")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x103B2BC", Offset = "0x103B2BC", VA = "0x103B2BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F690", Offset = "0xB2F690")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F690", Offset = "0xB2F690")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x103B34C", Offset = "0x103B34C", VA = "0x103B34C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F6F0", Offset = "0xB2F6F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F6F0", Offset = "0xB2F6F0")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x103B3DC", Offset = "0x103B3DC", VA = "0x103B3DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F750", Offset = "0xB2F750")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2F750", Offset = "0xB2F750")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class CAPI
	{
		[Token(Token = "0x20005FB")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20005FC")]
		public enum Result
		{
			[Token(Token = "0x4000A4E")]
			Success = 0,
			[Token(Token = "0x4000A4F")]
			Failure = -1000,
			[Token(Token = "0x4000A50")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000A51")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000A52")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000A53")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000A54")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000A55")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000A56")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20005FD")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x275D330", Offset = "0x275D330", VA = "0x275D330")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000A43")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000A4B")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xE25B2C", Offset = "0xE25B2C", VA = "0xE25B2C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xE25BBC", Offset = "0xE25BBC", VA = "0xE25BBC")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xE25DE0", Offset = "0xE25DE0", VA = "0xE25DE0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xE25ECC", Offset = "0xE25ECC", VA = "0xE25ECC")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xE25F3C", Offset = "0xE25F3C", VA = "0xE25F3C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xE25FB0", Offset = "0xE25FB0", VA = "0xE25FB0")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xE26030", Offset = "0xE26030", VA = "0xE26030")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xE26174", Offset = "0xE26174", VA = "0xE26174")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xE261F4", Offset = "0xE261F4", VA = "0xE261F4")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xE26338", Offset = "0xE26338", VA = "0xE26338")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xE263B8", Offset = "0xE263B8", VA = "0xE263B8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xE26438", Offset = "0xE26438", VA = "0xE26438")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xE264B8", Offset = "0xE264B8", VA = "0xE264B8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xE26538", Offset = "0xE26538", VA = "0xE26538")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xE265C8", Offset = "0xE265C8", VA = "0xE265C8")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xE26658", Offset = "0xE26658", VA = "0xE26658")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xE266E8", Offset = "0xE266E8", VA = "0xE266E8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xE26768", Offset = "0xE26768", VA = "0xE26768")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xE267E8", Offset = "0xE267E8", VA = "0xE267E8")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xE26878", Offset = "0xE26878", VA = "0xE26878")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xE26908", Offset = "0xE26908", VA = "0xE26908")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xE26998", Offset = "0xE26998", VA = "0xE26998")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xE26A18", Offset = "0xE26A18", VA = "0xE26A18")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xE26AB8", Offset = "0xE26AB8", VA = "0xE26AB8")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xE26B34", Offset = "0xE26B34", VA = "0xE26B34")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xE26BD4", Offset = "0xE26BD4", VA = "0xE26BD4")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xE26C94", Offset = "0xE26C94", VA = "0xE26C94")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xE26D64", Offset = "0xE26D64", VA = "0xE26D64")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xE26DF4", Offset = "0xE26DF4", VA = "0xE26DF4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xE26E84", Offset = "0xE26E84", VA = "0xE26E84")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xE26F14", Offset = "0xE26F14", VA = "0xE26F14")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xE26FA4", Offset = "0xE26FA4", VA = "0xE26FA4")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xE27034", Offset = "0xE27034", VA = "0xE27034")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xE270B4", Offset = "0xE270B4", VA = "0xE270B4")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xE271D0", Offset = "0xE271D0", VA = "0xE271D0")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xE27140", Offset = "0xE27140", VA = "0xE27140")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xE273F0", Offset = "0xE273F0", VA = "0xE273F0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xE27560", Offset = "0xE27560", VA = "0xE27560")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D66")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xE275E0", Offset = "0xE275E0", VA = "0xE275E0")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xE27888", Offset = "0xE27888", VA = "0xE27888")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xE27908", Offset = "0xE27908", VA = "0xE27908")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xE27A78", Offset = "0xE27A78", VA = "0xE27A78")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xE27AF8", Offset = "0xE27AF8", VA = "0xE27AF8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xE27C68", Offset = "0xE27C68", VA = "0xE27C68")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xE27CE8", Offset = "0xE27CE8", VA = "0xE27CE8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xE27E58", Offset = "0xE27E58", VA = "0xE27E58")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xE27ED8", Offset = "0xE27ED8", VA = "0xE27ED8")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xE28048", Offset = "0xE28048", VA = "0xE28048")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xE280C8", Offset = "0xE280C8", VA = "0xE280C8")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xE28148", Offset = "0xE28148", VA = "0xE28148")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xE281E0", Offset = "0xE281E0", VA = "0xE281E0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xE28260", Offset = "0xE28260", VA = "0xE28260")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xE28438", Offset = "0xE28438", VA = "0xE28438")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xE28590", Offset = "0xE28590", VA = "0xE28590")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xE283B8", Offset = "0xE283B8", VA = "0xE283B8")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xE28610", Offset = "0xE28610", VA = "0xE28610")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xE28690", Offset = "0xE28690", VA = "0xE28690")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xE28720", Offset = "0xE28720", VA = "0xE28720")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xE287A0", Offset = "0xE287A0", VA = "0xE287A0")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xE28830", Offset = "0xE28830", VA = "0xE28830")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xE288B0", Offset = "0xE288B0", VA = "0xE288B0")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xE28930", Offset = "0xE28930", VA = "0xE28930")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xE28BBC", Offset = "0xE28BBC", VA = "0xE28BBC")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xE28C4C", Offset = "0xE28C4C", VA = "0xE28C4C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xE28E7C", Offset = "0xE28E7C", VA = "0xE28E7C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xE28F14", Offset = "0xE28F14", VA = "0xE28F14")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xE29064", Offset = "0xE29064", VA = "0xE29064")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xE290E4", Offset = "0xE290E4", VA = "0xE290E4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xE29164", Offset = "0xE29164", VA = "0xE29164")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xE292B8", Offset = "0xE292B8", VA = "0xE292B8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xE29338", Offset = "0xE29338", VA = "0xE29338")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xE2948C", Offset = "0xE2948C", VA = "0xE2948C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xE2950C", Offset = "0xE2950C", VA = "0xE2950C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xE2959C", Offset = "0xE2959C", VA = "0xE2959C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xE2962C", Offset = "0xE2962C", VA = "0xE2962C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xE296BC", Offset = "0xE296BC", VA = "0xE296BC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xE2973C", Offset = "0xE2973C", VA = "0xE2973C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xE297C4", Offset = "0xE297C4", VA = "0xE297C4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xE2984C", Offset = "0xE2984C", VA = "0xE2984C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xE298CC", Offset = "0xE298CC", VA = "0xE298CC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xE2994C", Offset = "0xE2994C", VA = "0xE2994C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xE29A00", Offset = "0xE29A00", VA = "0xE29A00")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xE29A90", Offset = "0xE29A90", VA = "0xE29A90")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xE29B20", Offset = "0xE29B20", VA = "0xE29B20")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xE29BA0", Offset = "0xE29BA0", VA = "0xE29BA0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xE29C20", Offset = "0xE29C20", VA = "0xE29C20")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xE29CA0", Offset = "0xE29CA0", VA = "0xE29CA0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xE29D38", Offset = "0xE29D38", VA = "0xE29D38")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xE29DC8", Offset = "0xE29DC8", VA = "0xE29DC8")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xE29E58", Offset = "0xE29E58", VA = "0xE29E58")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xE29EE8", Offset = "0xE29EE8", VA = "0xE29EE8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xE29F80", Offset = "0xE29F80", VA = "0xE29F80")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xE2A018", Offset = "0xE2A018", VA = "0xE2A018")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xE2A098", Offset = "0xE2A098", VA = "0xE2A098")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xE2A118", Offset = "0xE2A118", VA = "0xE2A118")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xE2A26C", Offset = "0xE2A26C", VA = "0xE2A26C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE2A2EC", Offset = "0xE2A2EC", VA = "0xE2A2EC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE2A440", Offset = "0xE2A440", VA = "0xE2A440")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE2A4C0", Offset = "0xE2A4C0", VA = "0xE2A4C0")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE2A5FC", Offset = "0xE2A5FC", VA = "0xE2A5FC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE2A67C", Offset = "0xE2A67C", VA = "0xE2A67C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xE2A850", Offset = "0xE2A850", VA = "0xE2A850")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xE2AB30", Offset = "0xE2AB30", VA = "0xE2AB30")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xE2A7D0", Offset = "0xE2A7D0", VA = "0xE2A7D0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xE2ABC0", Offset = "0xE2ABC0", VA = "0xE2ABC0")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xE2AC40", Offset = "0xE2AC40", VA = "0xE2AC40")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xE2ACD0", Offset = "0xE2ACD0", VA = "0xE2ACD0")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xE2AD60", Offset = "0xE2AD60", VA = "0xE2AD60")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xE2ADF0", Offset = "0xE2ADF0", VA = "0xE2ADF0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xE2AE90", Offset = "0xE2AE90", VA = "0xE2AE90")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xE2AF30", Offset = "0xE2AF30", VA = "0xE2AF30")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xE2AFD0", Offset = "0xE2AFD0", VA = "0xE2AFD0")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xE2B050", Offset = "0xE2B050", VA = "0xE2B050")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xE2B0D0", Offset = "0xE2B0D0", VA = "0xE2B0D0")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xE2B150", Offset = "0xE2B150", VA = "0xE2B150")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xE2B1D0", Offset = "0xE2B1D0", VA = "0xE2B1D0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xE2B250", Offset = "0xE2B250", VA = "0xE2B250")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xE2B378", Offset = "0xE2B378", VA = "0xE2B378")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xE2B410", Offset = "0xE2B410", VA = "0xE2B410")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xE2B490", Offset = "0xE2B490", VA = "0xE2B490")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xE2B4F0", Offset = "0xE2B4F0", VA = "0xE2B4F0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xE2B638", Offset = "0xE2B638", VA = "0xE2B638")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xE2B6C8", Offset = "0xE2B6C8", VA = "0xE2B6C8")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xE2B820", Offset = "0xE2B820", VA = "0xE2B820")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xE2B8B0", Offset = "0xE2B8B0", VA = "0xE2B8B0")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xE2B950", Offset = "0xE2B950", VA = "0xE2B950")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xE2BD20", Offset = "0xE2BD20", VA = "0xE2BD20")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xE2BDA0", Offset = "0xE2BDA0", VA = "0xE2BDA0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xE2BE38", Offset = "0xE2BE38", VA = "0xE2BE38")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xE2C698", Offset = "0xE2C698", VA = "0xE2C698")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xE2C718", Offset = "0xE2C718", VA = "0xE2C718")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xE25AC8", Offset = "0xE25AC8", VA = "0xE25AC8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB2F7B0", Offset = "0xB2F7B0")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xE2C7B0", Offset = "0xE2C7B0", VA = "0xE2C7B0")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xE2C834", Offset = "0xE2C834", VA = "0xE2C834")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xE2C8B4", Offset = "0xE2C8B4", VA = "0xE2C8B4")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xE2C934", Offset = "0xE2C934", VA = "0xE2C934")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xE2C9B4", Offset = "0xE2C9B4", VA = "0xE2C9B4")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xE2D378", Offset = "0xE2D378", VA = "0xE2D378")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xE2D3F8", Offset = "0xE2D3F8", VA = "0xE2D3F8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xE2D834", Offset = "0xE2D834", VA = "0xE2D834")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE2D79C", Offset = "0xE2D79C", VA = "0xE2D79C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE2D8A8", Offset = "0xE2D8A8", VA = "0xE2D8A8")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20005FE")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xB209D8", Offset = "0xB209D8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xDB3010", Offset = "0xDB3010", VA = "0xDB3010")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xDB3014", Offset = "0xDB3014", VA = "0xDB3014")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xDB30BC", Offset = "0xDB30BC", VA = "0xDB30BC")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20A24", Offset = "0xB20A24")]
		public bool autoRetrigger;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB20A5C", Offset = "0xB20A5C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20A80", Offset = "0xB20A80")]
		public Transform[] playPositions;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1030664", Offset = "0x1030664", VA = "0x1030664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1030834", Offset = "0x1030834", VA = "0x1030834")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1030A10", Offset = "0x1030A10", VA = "0x1030A10")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1030894", Offset = "0x1030894", VA = "0x1030894")]
		public void Play()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1030AD0", Offset = "0x1030AD0", VA = "0x1030AD0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1030C40", Offset = "0x1030C40", VA = "0x1030C40")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000600")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000A65")]
		Default,
		[Token(Token = "0x4000A66")]
		Preload,
		[Token(Token = "0x4000A67")]
		ManualPreload
	}
	[Token(Token = "0x2000601")]
	public enum Fade
	{
		[Token(Token = "0x4000A69")]
		In,
		[Token(Token = "0x4000A6A")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000602")]
	public class SoundGroup
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB20AB8", Offset = "0xB20AB8")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x11188E4", Offset = "0x11188E4", VA = "0x11188E4")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x11189A0", Offset = "0x11189A0", VA = "0x11189A0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1116BC8", Offset = "0x1116BC8", VA = "0x1116BC8")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1116F30", Offset = "0x1116F30", VA = "0x1116F30")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1117E6C", Offset = "0x1117E6C", VA = "0x1117E6C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000603")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000604")]
		public enum Fade
		{
			[Token(Token = "0x4000A92")]
			In,
			[Token(Token = "0x4000A93")]
			Out
		}

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18738", Offset = "0xB18738")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x275BF98", Offset = "0x275BF98", VA = "0x275BF98")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x275BFA0", Offset = "0x275BFA0", VA = "0x275BFA0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18748", Offset = "0xB18748")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x275BF04", Offset = "0x275BF04", VA = "0x275BF04")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x275BF0C", Offset = "0x275BF0C", VA = "0x275BF0C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20AE4", Offset = "0xB20AE4")]
		public bool makePersistent;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20B1C", Offset = "0xB20B1C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20B54", Offset = "0xB20B54")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20B8C", Offset = "0xB20B8C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20BC4", Offset = "0xB20BC4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20BFC", Offset = "0xB20BFC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20C34", Offset = "0xB20C34")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20C6C", Offset = "0xB20C6C")]
		public bool verboseLogging;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20CA4", Offset = "0xB20CA4")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20CDC", Offset = "0xB20CDC")]
		public float volumeSoundFX;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20D14", Offset = "0xB20D14")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000125")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x103382C", Offset = "0x103382C", VA = "0x103382C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x1033914", Offset = "0x1033914", VA = "0x1033914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x1033978", Offset = "0x1033978", VA = "0x1033978")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000128")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x10339E8", Offset = "0x10339E8", VA = "0x10339E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000129")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x1033A58", Offset = "0x1033A58", VA = "0x1033A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x1033AC8", Offset = "0x1033AC8", VA = "0x1033AC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x1033B38", Offset = "0x1033B38", VA = "0x1033B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x1035AE8", Offset = "0x1035AE8", VA = "0x1035AE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1033BA8", Offset = "0x1033BA8", VA = "0x1033BA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1033DF0", Offset = "0x1033DF0", VA = "0x1033DF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1033BAC", Offset = "0x1033BAC", VA = "0x1033BAC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1034AF0", Offset = "0x1034AF0", VA = "0x1034AF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1033F50", Offset = "0x1033F50", VA = "0x1033F50")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x10351F0", Offset = "0x10351F0", VA = "0x10351F0")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1035384", Offset = "0x1035384", VA = "0x1035384")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1035558", Offset = "0x1035558", VA = "0x1035558")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1035660", Offset = "0x1035660", VA = "0x1035660")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x10356EC", Offset = "0x10356EC", VA = "0x10356EC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x1035B4C", Offset = "0x1035B4C", VA = "0x1035B4C")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1035BC0", Offset = "0x1035BC0", VA = "0x1035BC0")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x103446C", Offset = "0x103446C", VA = "0x103446C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1034AF4", Offset = "0x1034AF4", VA = "0x1034AF4")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x1035D08", Offset = "0x1035D08", VA = "0x1035D08")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1035E38", Offset = "0x1035E38", VA = "0x1035E38")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x1035F6C", Offset = "0x1035F6C", VA = "0x1035F6C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1035C34", Offset = "0x1035C34", VA = "0x1035C34")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x10360B4", Offset = "0x10360B4", VA = "0x10360B4")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x103616C", Offset = "0x103616C", VA = "0x103616C")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1036288", Offset = "0x1036288", VA = "0x1036288")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1030A20", Offset = "0x1030A20", VA = "0x1030A20")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1030B90", Offset = "0x1030B90", VA = "0x1030B90")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1036340", Offset = "0x1036340", VA = "0x1036340")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1036408", Offset = "0x1036408", VA = "0x1036408")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x103649C", Offset = "0x103649C", VA = "0x103649C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1036560", Offset = "0x1036560", VA = "0x1036560")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1036600", Offset = "0x1036600", VA = "0x1036600")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x10366B8", Offset = "0x10366B8", VA = "0x10366B8")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x10371F0", Offset = "0x10371F0", VA = "0x10371F0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x10378F0", Offset = "0x10378F0", VA = "0x10378F0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1037AB4", Offset = "0x1037AB4", VA = "0x1037AB4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1038680", Offset = "0x1038680", VA = "0x1038680")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x10368A4", Offset = "0x10368A4", VA = "0x10368A4")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x103879C", Offset = "0x103879C", VA = "0x103879C")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1038880", Offset = "0x1038880", VA = "0x1038880")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x103896C", Offset = "0x103896C", VA = "0x103896C")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1038B94", Offset = "0x1038B94", VA = "0x1038B94")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1038CE8", Offset = "0x1038CE8", VA = "0x1038CE8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1038E0C", Offset = "0x1038E0C", VA = "0x1038E0C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1038F38", Offset = "0x1038F38", VA = "0x1038F38")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1039018", Offset = "0x1039018", VA = "0x1039018")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1039168", Offset = "0x1039168", VA = "0x1039168")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1039584", Offset = "0x1039584", VA = "0x1039584")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000607")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000A98")]
		None = -1,
		[Token(Token = "0x4000A99")]
		Reserved,
		[Token(Token = "0x4000A9A")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x132FA44", Offset = "0x132FA44", VA = "0x132FA44")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x132E450", Offset = "0x132E450", VA = "0x132E450")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200060B")]
		public enum FadeState
		{
			[Token(Token = "0x4000AB1")]
			Null,
			[Token(Token = "0x4000AB2")]
			FadingIn,
			[Token(Token = "0x4000AB3")]
			FadingOut,
			[Token(Token = "0x4000AB4")]
			Ducking
		}

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18758", Offset = "0xB18758")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000136")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E4C")]
				[Address(RVA = "0xDA2FCC", Offset = "0xDA2FCC", VA = "0xDA2FCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000137")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4E")]
				[Address(RVA = "0xDA3014", Offset = "0xDA3014", VA = "0xDA3014", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xDA2EAC", Offset = "0xDA2EAC", VA = "0xDA2EAC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xDA2ED8", Offset = "0xDA2ED8", VA = "0xDA2ED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xDA2EDC", Offset = "0xDA2EDC", VA = "0xDA2EDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xDA2FD4", Offset = "0xDA2FD4", VA = "0xDA2FD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18768", Offset = "0xB18768")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000138")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E52")]
				[Address(RVA = "0xDA345C", Offset = "0xDA345C", VA = "0xDA345C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000139")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E54")]
				[Address(RVA = "0xDA34A4", Offset = "0xDA34A4", VA = "0xDA34A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0xDA32F0", Offset = "0xDA32F0", VA = "0xDA32F0")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xDA331C", Offset = "0xDA331C", VA = "0xDA331C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xDA3320", Offset = "0xDA3320", VA = "0xDA3320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xDA3464", Offset = "0xDA3464", VA = "0xDA3464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18778", Offset = "0xB18778")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700013A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E58")]
				[Address(RVA = "0xDA32A0", Offset = "0xDA32A0", VA = "0xDA32A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E5A")]
				[Address(RVA = "0xDA32E8", Offset = "0xDA32E8", VA = "0xDA32E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xDA301C", Offset = "0xDA301C", VA = "0xDA301C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xDA3048", Offset = "0xDA3048", VA = "0xDA3048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xDA304C", Offset = "0xDA304C", VA = "0xDA304C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0xDA32A8", Offset = "0xDA32A8", VA = "0xDA32A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700012D")]
		public float volume
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x1116730", Offset = "0x1116730", VA = "0x1116730")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x111674C", Offset = "0x111674C", VA = "0x111674C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public float pitch
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x1116768", Offset = "0x1116768", VA = "0x1116768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x1116784", Offset = "0x1116784", VA = "0x1116784")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public AudioClip clip
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x11167A0", Offset = "0x11167A0", VA = "0x11167A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x11167BC", Offset = "0x11167BC", VA = "0x11167BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public float time
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x11167D8", Offset = "0x11167D8", VA = "0x11167D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x11167F4", Offset = "0x11167F4", VA = "0x11167F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public float length
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x1116810", Offset = "0x1116810", VA = "0x1116810")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000132")]
		public bool loop
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x11168C4", Offset = "0x11168C4", VA = "0x11168C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x11168E0", Offset = "0x11168E0", VA = "0x11168E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool mute
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x1116900", Offset = "0x1116900", VA = "0x1116900")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x111691C", Offset = "0x111691C", VA = "0x111691C")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x111693C", Offset = "0x111693C", VA = "0x111693C")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x1116958", Offset = "0x1116958", VA = "0x1116958")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public bool isPlaying
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x1116974", Offset = "0x1116974", VA = "0x1116974")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1116990", Offset = "0x1116990", VA = "0x1116990")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1116B80", Offset = "0x1116B80", VA = "0x1116B80")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1116C04", Offset = "0x1116C04", VA = "0x1116C04")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1116C0C", Offset = "0x1116C0C", VA = "0x1116C0C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1116C40", Offset = "0x1116C40", VA = "0x1116C40")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1116C48", Offset = "0x1116C48", VA = "0x1116C48")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1116C50", Offset = "0x1116C50", VA = "0x1116C50")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1116CF4", Offset = "0x1116CF4", VA = "0x1116CF4")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1116D60", Offset = "0x1116D60", VA = "0x1116D60")]
		public void Play()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1116DC0", Offset = "0x1116DC0", VA = "0x1116DC0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1116DF8", Offset = "0x1116DF8", VA = "0x1116DF8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1116F6C", Offset = "0x1116F6C", VA = "0x1116F6C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1116FC4", Offset = "0x1116FC4", VA = "0x1116FC4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x11170E4", Offset = "0x11170E4", VA = "0x11170E4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x11171B0", Offset = "0x11171B0", VA = "0x11171B0")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x11171F8", Offset = "0x11171F8", VA = "0x11171F8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x1117224", Offset = "0x1117224", VA = "0x1117224")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F810", Offset = "0xB2F810")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x11172CC", Offset = "0x11172CC", VA = "0x11172CC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x11173C0", Offset = "0x11173C0", VA = "0x11173C0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x11174EC", Offset = "0x11174EC", VA = "0x11174EC")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x1117564", Offset = "0x1117564", VA = "0x1117564")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x11175FC", Offset = "0x11175FC", VA = "0x11175FC")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x1117334", Offset = "0x1117334", VA = "0x1117334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F870", Offset = "0xB2F870")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x111743C", Offset = "0x111743C", VA = "0x111743C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F8D0", Offset = "0xB2F8D0")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x1117698", Offset = "0x1117698", VA = "0x1117698")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000AD1")]
		Random,
		[Token(Token = "0x4000AD2")]
		Sequential
	}
	[Token(Token = "0x2000610")]
	public enum FreqHint
	{
		[Token(Token = "0x4000AD4")]
		None,
		[Token(Token = "0x4000AD5")]
		Wide,
		[Token(Token = "0x4000AD6")]
		Narrow
	}
	[Token(Token = "0x2000611")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000AD8")]
		VeryLow = -2,
		[Token(Token = "0x4000AD9")]
		Low,
		[Token(Token = "0x4000ADA")]
		Default,
		[Token(Token = "0x4000ADB")]
		High,
		[Token(Token = "0x4000ADC")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000612")]
	public class OSPProps
	{
		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20DFC", Offset = "0xB20DFC")]
		public bool enableSpatialization;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20E34", Offset = "0xB20E34")]
		public bool useFastOverride;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20E6C", Offset = "0xB20E6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB20E6C", Offset = "0xB20E6C")]
		public float gain;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20EC0", Offset = "0xB20EC0")]
		public bool enableInvSquare;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20EF8", Offset = "0xB20EF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB20EF8", Offset = "0xB20EF8")]
		public float volumetric;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20F50", Offset = "0xB20F50")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB20F50", Offset = "0xB20F50")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x2761EDC", Offset = "0x2761EDC", VA = "0x2761EDC")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000613")]
	public class SoundFX
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20FB0", Offset = "0xB20FB0")]
		public string name;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB20FE8", Offset = "0xB20FE8")]
		public SoundFXNext playback;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21020", Offset = "0xB21020")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21020", Offset = "0xB21020")]
		public float volume;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21074", Offset = "0xB21074")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB21074", Offset = "0xB21074")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB210D0", Offset = "0xB210D0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB210D0", Offset = "0xB210D0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21130", Offset = "0xB21130")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21168", Offset = "0xB21168")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB211A0", Offset = "0xB211A0")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB211D8", Offset = "0xB211D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB211D8", Offset = "0xB211D8")]
		public float spread;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21230", Offset = "0xB21230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21230", Offset = "0xB21230")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21284", Offset = "0xB21284")]
		public SoundPriority priority;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB212BC", Offset = "0xB212BC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xB212BC", Offset = "0xB212BC")]
		public Vector2 delay;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21318", Offset = "0xB21318")]
		public bool looping;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21350", Offset = "0xB21350")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700013C")]
		public int Length
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1117BE8", Offset = "0x1117BE8", VA = "0x1117BE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013D")]
		public bool IsValid
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x1117C04", Offset = "0x1117C04", VA = "0x1117C04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x1117CA4", Offset = "0x1117CA4", VA = "0x1117CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x1117CAC", Offset = "0x1117CAC", VA = "0x1117CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x1117CB4", Offset = "0x1117CB4", VA = "0x1117CB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000140")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x1117CC0", Offset = "0x1117CC0", VA = "0x1117CC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x11176B0", Offset = "0x11176B0", VA = "0x11176B0")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x1117CD8", Offset = "0x1117CD8", VA = "0x1117CD8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1117DA8", Offset = "0x1117DA8", VA = "0x1117DA8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1117E44", Offset = "0x1117E44", VA = "0x1117E44")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x1117E8C", Offset = "0x1117E8C", VA = "0x1117E8C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x1117F84", Offset = "0x1117F84", VA = "0x1117F84")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x1117F90", Offset = "0x1117F90", VA = "0x1117F90")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x111806C", Offset = "0x111806C", VA = "0x111806C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x1118180", Offset = "0x1118180", VA = "0x1118180")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x111820C", Offset = "0x111820C", VA = "0x111820C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x11182A0", Offset = "0x11182A0", VA = "0x11182A0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x111832C", Offset = "0x111832C", VA = "0x111832C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x11183B8", Offset = "0x11183B8", VA = "0x11183B8")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000614")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000141")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x1118430", Offset = "0x1118430", VA = "0x1118430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public string name
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x1118554", Offset = "0x1118554", VA = "0x1118554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x111855C", Offset = "0x111855C", VA = "0x111855C")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public int Length
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x1118584", Offset = "0x1118584", VA = "0x1118584")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000144")]
		public bool IsValid
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x11185C8", Offset = "0x11185C8", VA = "0x11185C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1118460", Offset = "0x1118460", VA = "0x1118460")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1118600", Offset = "0x1118600", VA = "0x1118600")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1118638", Offset = "0x1118638", VA = "0x1118638")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1118678", Offset = "0x1118678", VA = "0x1118678")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x11186C0", Offset = "0x11186C0", VA = "0x11186C0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1118740", Offset = "0x1118740", VA = "0x1118740")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1118780", Offset = "0x1118780", VA = "0x1118780")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x11187D0", Offset = "0x11187D0", VA = "0x11187D0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x1118808", Offset = "0x1118808", VA = "0x1118808")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1118848", Offset = "0x1118848", VA = "0x1118848")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1118880", Offset = "0x1118880", VA = "0x1118880")]
		public SoundFXRef()
		{
		}
	}
}
namespace MeshCombineStudio
{
	[Token(Token = "0x2000615")]
	public class CombineRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useSearchConditions;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] gos;

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1586480", Offset = "0x1586480", VA = "0x1586480")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1586484", Offset = "0x1586484", VA = "0x1586484")]
		private void Combine()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x15864D0", Offset = "0x15864D0", VA = "0x15864D0")]
		public CombineRuntime()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class SelectOriginal : MonoBehaviour
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera mainCamera;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material matSelect;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material oldMat;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 oldPos;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshRenderer oldMr;

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1106844", Offset = "0x1106844", VA = "0x1106844")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1106AC0", Offset = "0x1106AC0", VA = "0x1106AC0")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1106B58", Offset = "0x1106B58", VA = "0x1106B58")]
		private void SelectOrDeselect(Vector3 position, MeshRenderer mr, Material mat, bool select)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1106C94", Offset = "0x1106C94", VA = "0x1106C94")]
		public SelectOriginal()
		{
		}
	}
	[Token(Token = "0x2000617")]
	public class DisabledLODGroup : MonoBehaviour
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1126758", Offset = "0x1126758", VA = "0x1126758")]
		public DisabledLODGroup()
		{
		}
	}
	[Token(Token = "0x2000618")]
	[ExecuteInEditMode]
	public class FindLodGroups : MonoBehaviour
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool find;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xFC7C18", Offset = "0xFC7C18", VA = "0xFC7C18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xFC7DA8", Offset = "0xFC7DA8", VA = "0xFC7DA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xFC7C1C", Offset = "0xFC7C1C", VA = "0xFC7C1C")]
		private void FindLods()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xFC7DBC", Offset = "0xFC7DBC", VA = "0xFC7DBC")]
		public FindLodGroups()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class LODGroupSetup : MonoBehaviour
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodGroupParentIndex;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lodCount;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LODGroup[] lodGroups;

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xEB0DF0", Offset = "0xEB0DF0", VA = "0xEB0DF0")]
		public void Init(MeshCombiner meshCombiner, int lodGroupParentIndex)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xEB0ED4", Offset = "0xEB0ED4", VA = "0xEB0ED4")]
		private void GetSetup()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xEB1020", Offset = "0xEB1020", VA = "0xEB1020")]
		public void ApplySetup()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xEB141C", Offset = "0xEB141C", VA = "0xEB141C")]
		public void AddLODGroupsToChildren()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xEB16A8", Offset = "0xEB16A8", VA = "0xEB16A8")]
		public void RemoveLODGroupFromChildren()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xEB17D4", Offset = "0xEB17D4", VA = "0xEB17D4")]
		public LODGroupSetup()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class CamGeometryCapture : MonoBehaviour
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComputeShader computeDepthToArray;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Int2 resolution;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform t;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture rtCapture;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] heights;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bounds bounds;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maxSize;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xE2F44C", Offset = "0xE2F44C", VA = "0xE2F44C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE2F554", Offset = "0xE2F554", VA = "0xE2F554")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE2F590", Offset = "0xE2F590", VA = "0xE2F590")]
		private void DisposeRenderTexture(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE2F558", Offset = "0xE2F558", VA = "0xE2F558")]
		public void DisposeRTCapture()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE2F664", Offset = "0xE2F664", VA = "0xE2F664")]
		public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJobManager.MeshCombineJob meshCombineJob, MeshCache.SubMeshCache newMeshCache, ref byte[] vertexIsBelow)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE2F9A0", Offset = "0xE2F9A0", VA = "0xE2F9A0")]
		public void Capture(Bounds bounds, int collisionMask, Vector3 direction, Int2 resolution)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE30088", Offset = "0xE30088", VA = "0xE30088")]
		public void SetCamera(Vector3 direction)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE2FDE8", Offset = "0xE2FDE8", VA = "0xE2FDE8")]
		public float GetHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE30270", Offset = "0xE30270", VA = "0xE30270")]
		public CamGeometryCapture()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class CombinedLODManager : MonoBehaviour
	{
		[Token(Token = "0x200061C")]
		public enum LodMode
		{
			[Token(Token = "0x4000B21")]
			Automatic,
			[Token(Token = "0x4000B22")]
			DebugLod
		}

		[Token(Token = "0x200061D")]
		public enum LodDistanceMode
		{
			[Token(Token = "0x4000B24")]
			Automatic,
			[Token(Token = "0x4000B25")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x200061E")]
		public class LOD
		{
			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform searchParent;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sphere3 sphere;

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x275F218", Offset = "0x275F218", VA = "0x275F218")]
			public LOD()
			{
			}

			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x275F220", Offset = "0x275F220", VA = "0x275F220")]
			public LOD(Transform searchParent)
			{
			}
		}

		[Token(Token = "0x200061F")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Cell[] cells;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AABB3 box;

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x275E5A8", Offset = "0x275E5A8", VA = "0x275E5A8")]
			public Cell()
			{
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x275E5B0", Offset = "0x275E5B0", VA = "0x275E5B0")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x275E650", Offset = "0x275E650", VA = "0x275E650")]
			public void AddMeshRenderer(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x275E6D8", Offset = "0x275E6D8", VA = "0x275E6D8")]
			private void AddMeshRendererInternal(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x275E9F4", Offset = "0x275E9F4", VA = "0x275E9F4")]
			public void AutoLodInternal(LOD[] lods, float lodCulledDistance)
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x275EDB0", Offset = "0x275EDB0", VA = "0x275EDB0")]
			public void LodInternal(LOD[] lods, int lodLevel)
			{
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x275EF84", Offset = "0x275EF84", VA = "0x275EF84")]
			public void DrawGizmos(LOD[] lods)
			{
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x275F060", Offset = "0x275F060", VA = "0x275F060")]
			public void DrawGizmosInternal()
			{
			}
		}

		[Token(Token = "0x2000620")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<MeshRenderer>[] mrList;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int currentLod;

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x275F254", Offset = "0x275F254", VA = "0x275F254")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool drawGizmos;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LOD[] lods;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] distances;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LodDistanceMode lodDistanceMode;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LodMode lodMode;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int showLod;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lodCulled;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lodCullDistance;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 octreeCenter;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 octreeSize;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxLevels;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool search;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Cell octree;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform cameraMainT;

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x15864E0", Offset = "0x15864E0", VA = "0x15864E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1586520", Offset = "0x1586520", VA = "0x1586520")]
		private void InitOctree()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x15865D0", Offset = "0x15865D0", VA = "0x15865D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1586778", Offset = "0x1586778", VA = "0x1586778")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x15868A4", Offset = "0x15868A4", VA = "0x15868A4")]
		public void UpdateLods(MeshCombiner meshCombiner, int lodAmount)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1586AC0", Offset = "0x1586AC0", VA = "0x1586AC0")]
		public void UpdateDistances(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1586604", Offset = "0x1586604", VA = "0x1586604")]
		public void Search()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1586B2C", Offset = "0x1586B2C", VA = "0x1586B2C")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x15867A0", Offset = "0x15867A0", VA = "0x15867A0")]
		public void Lod(LodMode lodMode)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x1586C78", Offset = "0x1586C78", VA = "0x1586C78")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1586CA4", Offset = "0x1586CA4", VA = "0x1586CA4")]
		public CombinedLODManager()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class MCSDynamicObject : MonoBehaviour
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xEB831C", Offset = "0xEB831C", VA = "0xEB831C")]
		public MCSDynamicObject()
		{
		}
	}
	[Token(Token = "0x2000622")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB18798", Offset = "0xB18798")]
	public class MeshCombineJobManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000623")]
		public class JobSettings
		{
			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombineJobMode combineJobMode;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadAmountMode threadAmountMode;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int combineMeshesPerFrame;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useMultiThreading;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool useMainThread;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int customThreadAmount;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool showStats;

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0xF23258", Offset = "0xF23258", VA = "0xF23258")]
			public void CopySettings(JobSettings source)
			{
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xF2329C", Offset = "0xF2329C", VA = "0xF2329C")]
			public void ReportStatus()
			{
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xF234F8", Offset = "0xF234F8", VA = "0xF234F8")]
			public JobSettings()
			{
			}
		}

		[Token(Token = "0x2000624")]
		public enum CombineJobMode
		{
			[Token(Token = "0x4000B44")]
			CombineAtOnce,
			[Token(Token = "0x4000B45")]
			CombinePerFrame
		}

		[Token(Token = "0x2000625")]
		public enum ThreadAmountMode
		{
			[Token(Token = "0x4000B47")]
			AllThreads,
			[Token(Token = "0x4000B48")]
			HalfThreads,
			[Token(Token = "0x4000B49")]
			Custom
		}

		[Token(Token = "0x2000626")]
		public enum ThreadState
		{
			[Token(Token = "0x4000B4B")]
			isFree,
			[Token(Token = "0x4000B4C")]
			isReady,
			[Token(Token = "0x4000B4D")]
			isRunning,
			[Token(Token = "0x4000B4E")]
			hasError
		}

		[Token(Token = "0x2000627")]
		public class MeshCombineJobsThread
		{
			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int threadId;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadState threadState;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Queue<MeshCombineJob> meshCombineJobs;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Queue<NewMeshObject> newMeshObjectsDone;

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xF23634", Offset = "0xF23634", VA = "0xF23634")]
			public MeshCombineJobsThread(int threadId)
			{
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0xF23718", Offset = "0xF23718", VA = "0xF23718")]
			public void ExecuteJobsThread(object state)
			{
			}
		}

		[Token(Token = "0x2000628")]
		public class MeshCombineJob
		{
			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshObjectsHolder meshObjectsHolder;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform parent;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int startIndex;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int endIndex;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool firstMesh;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool intersectsSurface;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int backFaceTrianglesRemoved;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int trianglesRemoved;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool abort;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string name;

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xF23518", Offset = "0xF23518", VA = "0xF23518")]
			public MeshCombineJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position, int startIndex, int length, bool firstMesh, bool intersectsSurface)
			{
			}
		}

		[Token(Token = "0x2000629")]
		public class NewMeshObject
		{
			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FastList<Vector3> weldVertices;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombineJob meshCombineJob;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshCache.SubMeshCache newMeshCache;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool allSkipped;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 newPosition;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] vertexIsBelow;

			[Token(Token = "0x4000B65")]
			private const byte belowSurface = 1;

			[Token(Token = "0x4000B66")]
			private const byte aboveSurface = 2;

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xF23DD0", Offset = "0xF23DD0", VA = "0xF23DD0")]
			public NewMeshObject()
			{
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xF23E60", Offset = "0xF23E60", VA = "0xF23E60")]
			public void Combine(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xF24E40", Offset = "0xF24E40", VA = "0xF24E40")]
			private void PrintMissingArrayWarning(MeshCombiner meshCombiner, GameObject go, Mesh mesh, string text)
			{
			}

			[Token(Token = "0x6000ECB")]
			private void HasArray<T>(ref bool hasNewArray, bool hasArray, ref T[] newArray, Array array, int vertexCount, int totalVertices, bool useDefaultValue = false, [Optional] T defaultValue)
			{
			}

			[Token(Token = "0x6000ECC")]
			private void FillArray<T>(T[] array, int offset, int length, T value)
			{
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xF25144", Offset = "0xF25144", VA = "0xF25144")]
			public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xF24B74", Offset = "0xF24B74", VA = "0xF24B74")]
			public void RemoveBackFaceTriangles()
			{
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xF254BC", Offset = "0xF254BC", VA = "0xF254BC")]
			public void WeldVertices(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xF25960", Offset = "0xF25960", VA = "0xF25960")]
			private void ArrangeTriangles()
			{
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xF25A44", Offset = "0xF25A44", VA = "0xF25A44")]
			public void CreateMesh()
			{
			}
		}

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MeshCombineJobManager instance;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JobSettings jobSettings;

		[NonSerialized]
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FastList<NewMeshObject> newMeshObjectsPool;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Mesh, MeshCache> meshCacheDictionary;

		[NonSerialized]
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalNewMeshObjects;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshCombineJobsThread[] meshCombineJobsThreads;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CamGeometryCapture camGeometryCapture;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int cores;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int threadAmount;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int startThreadId;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int endThreadId;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool abort;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshCache.SubMeshCache tempMeshCache;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Ray ray;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit hitInfo;

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x132514C", Offset = "0x132514C", VA = "0x132514C")]
		public static MeshCombineJobManager CreateInstance(MeshCombiner meshCombiner, GameObject instantiatePrefab)
		{
			return null;
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x13255A0", Offset = "0x13255A0", VA = "0x13255A0")]
		public static void ResetMeshCache()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1325668", Offset = "0x1325668", VA = "0x1325668")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x13256BC", Offset = "0x13256BC", VA = "0x13256BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1325738", Offset = "0x1325738", VA = "0x1325738")]
		public void Init()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1325874", Offset = "0x1325874", VA = "0x1325874")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1325878", Offset = "0x1325878", VA = "0x1325878")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1325D08", Offset = "0x1325D08", VA = "0x1325D08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1325D40", Offset = "0x1325D40", VA = "0x1325D40")]
		private void MyUpdate()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x132536C", Offset = "0x132536C", VA = "0x132536C")]
		public void SetJobMode(JobSettings newJobSettings)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x13263AC", Offset = "0x13263AC", VA = "0x13263AC")]
		public void AddJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1326ADC", Offset = "0x1326ADC", VA = "0x1326ADC")]
		private void EnqueueJob(MeshCombiner meshCombiner, MeshCombineJob meshCombineJob)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1326B7C", Offset = "0x1326B7C", VA = "0x1326B7C")]
		public int MeshIntersectsSurface(MeshCombiner meshCombiner, CachedGameObject cachedGO)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x1325938", Offset = "0x1325938", VA = "0x1325938")]
		public void AbortJobs()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1325D44", Offset = "0x1325D44", VA = "0x1325D44")]
		public void ExecuteJobs()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1326DF4", Offset = "0x1326DF4", VA = "0x1326DF4")]
		public void CombineMeshesDone(MeshCombineJobsThread meshCombineJobThread)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1327494", Offset = "0x1327494", VA = "0x1327494")]
		public MeshCombineJobManager()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class MeshCache
	{
		[Token(Token = "0x200062B")]
		public class SubMeshCache
		{
			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv2;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv3;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv4;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color32[] colors32;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] triangles;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool hasNormals;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool hasTangents;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool hasUv;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool hasUv2;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool hasUv3;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool hasUv4;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool hasColors;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexCount;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int triangleCount;

			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xF227B0", Offset = "0xF227B0", VA = "0xF227B0")]
			public SubMeshCache()
			{
			}

			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xF227B8", Offset = "0xF227B8", VA = "0xF227B8")]
			public void CopySubMeshCache(SubMeshCache source)
			{
			}

			[Token(Token = "0x6000ED5")]
			public void CopyArray<T>(Array sourceArray, ref T[] destinationArray, int vertexCount)
			{
			}

			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xF229A8", Offset = "0xF229A8", VA = "0xF229A8")]
			public SubMeshCache(Mesh mesh, int subMeshIndex)
			{
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xF22A18", Offset = "0xF22A18", VA = "0xF22A18")]
			public SubMeshCache(Mesh mesh, bool assignTriangles)
			{
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xF22B84", Offset = "0xF22B84", VA = "0xF22B84")]
			public void CheckHasArrays()
			{
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xF22C30", Offset = "0xF22C30", VA = "0xF22C30")]
			public void ResetHasBooleans()
			{
			}

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xF22C40", Offset = "0xF22C40", VA = "0xF22C40")]
			public void Init(bool initTriangles = true)
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xF22CF0", Offset = "0xF22CF0", VA = "0xF22CF0")]
			public void RebuildVertexBuffer(SubMeshCache sub, bool resizeArrays)
			{
			}
		}

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubMeshCache[] subMeshCache;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshCount;

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1324EF8", Offset = "0x1324EF8", VA = "0x1324EF8")]
		public MeshCache(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x200062C")]
	public static class MeshExtensionAlloc
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x132D474", Offset = "0x132D474", VA = "0x132D474")]
		public static void ApplyVertices(Mesh mesh, Vector3[] vertices, int length)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x132D500", Offset = "0x132D500", VA = "0x132D500")]
		public static void ApplyNormals(Mesh mesh, Vector3[] normals, int length)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x132D58C", Offset = "0x132D58C", VA = "0x132D58C")]
		public static void ApplyTangents(Mesh mesh, Vector4[] tangents, int length)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x132D618", Offset = "0x132D618", VA = "0x132D618")]
		public static void ApplyUvs(Mesh mesh, int channel, Vector2[] uvs, int length)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x132D730", Offset = "0x132D730", VA = "0x132D730")]
		public static void ApplyColors32(Mesh mesh, Color32[] colors, int length)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x132D7BC", Offset = "0x132D7BC", VA = "0x132D7BC")]
		public static void ApplyTriangles(Mesh mesh, int[] triangles, int length)
		{
		}
	}
	[Token(Token = "0x200062D")]
	public enum CombineMode
	{
		[Token(Token = "0x4000B7D")]
		StaticObjects,
		[Token(Token = "0x4000B7E")]
		DynamicObjects
	}
	[Token(Token = "0x200062E")]
	[ExecuteInEditMode]
	public class MeshCombiner : MonoBehaviour
	{
		[Token(Token = "0x200062F")]
		public enum ObjectType
		{
			[Token(Token = "0x4000BFC")]
			Normal,
			[Token(Token = "0x4000BFD")]
			LodGroup,
			[Token(Token = "0x4000BFE")]
			LodRenderer
		}

		[Token(Token = "0x2000630")]
		public enum HandleComponent
		{
			[Token(Token = "0x4000C00")]
			Disable,
			[Token(Token = "0x4000C01")]
			Destroy
		}

		[Token(Token = "0x2000631")]
		public enum ObjectCenter
		{
			[Token(Token = "0x4000C03")]
			BoundsCenter,
			[Token(Token = "0x4000C04")]
			TransformPosition
		}

		[Token(Token = "0x2000632")]
		public enum BackFaceTriangleMode
		{
			[Token(Token = "0x4000C06")]
			Transform,
			[Token(Token = "0x4000C07")]
			Box,
			[Token(Token = "0x4000C08")]
			Direction,
			[Token(Token = "0x4000C09")]
			EulerAngles
		}

		[Token(Token = "0x2000633")]
		public delegate void EventMethod(MeshCombiner meshCombiner);

		[Token(Token = "0x2000634")]
		public enum RebakeLightingMode
		{
			[Token(Token = "0x4000C0B")]
			CopyLightmapUvs,
			[Token(Token = "0x4000C0C")]
			RegenarateLightmapUvs
		}

		[Serializable]
		[Token(Token = "0x2000635")]
		public class SearchOptions
		{
			[Token(Token = "0x2000636")]
			public enum ComponentCondition
			{
				[Token(Token = "0x4000C29")]
				And,
				[Token(Token = "0x4000C2A")]
				Or,
				[Token(Token = "0x4000C2B")]
				Not
			}

			[Token(Token = "0x2000637")]
			public enum LODGroupSearchMode
			{
				[Token(Token = "0x4000C2D")]
				LodGroup,
				[Token(Token = "0x4000C2E")]
				LodRenderers
			}

			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool foldoutSearchParents;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool foldoutSearchConditions;

			[Token(Token = "0x4000C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parent;

			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject[] parentGOs;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ObjectCenter objectCenter;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public LODGroupSearchMode lodGroupSearchMode;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useSearchBox;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Bounds searchBoxBounds;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool searchBoxSquare;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 searchBoxPivot;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 searchBoxSize;

			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool useMaxBoundsFactor;

			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float maxBoundsFactor;

			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool useVertexInputLimit;

			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int vertexInputLimit;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public bool useLayerMask;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public LayerMask layerMask;

			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool useTag;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public string tag;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public bool useNameContains;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public List<string> nameContainList;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public bool onlyActive;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
			public bool onlyStatic;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
			public bool onlyActiveMeshRenderers;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
			public bool useComponentsFilter;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public ComponentCondition componentCondition;

			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public List<string> componentNameList;

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xD95AE4", Offset = "0xD95AE4", VA = "0xD95AE4")]
			public void GetSearchBoxBounds()
			{
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xD95B50", Offset = "0xD95B50", VA = "0xD95B50")]
			public SearchOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000638")]
		public class LODGroupSettings
		{
			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool animateCrossFading;

			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LODFadeMode fadeMode;

			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LODSettings[] lodSettings;

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xD95534", Offset = "0xD95534", VA = "0xD95534")]
			public LODGroupSettings(int lodParentIndex)
			{
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xD956D4", Offset = "0xD956D4", VA = "0xD956D4")]
			public void CopyFromLodGroup(LODGroup lodGroup, LOD[] lods)
			{
			}

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xD95794", Offset = "0xD95794", VA = "0xD95794")]
			public void CopyToLodGroup(LODGroup lodGroup, LOD[] lods)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000639")]
		public class LODSettings
		{
			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float screenRelativeTransitionHeight;

			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fadeTransitionWidth;

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xD956A0", Offset = "0xD956A0", VA = "0xD956A0")]
			public LODSettings(float screenRelativeTransitionHeight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200063A")]
		public class LodParentHolder
		{
			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool found;

			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] lods;

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xD9584C", Offset = "0xD9584C", VA = "0xD9584C")]
			public void Init(int lodCount)
			{
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xD958B4", Offset = "0xD958B4", VA = "0xD958B4")]
			public void Create(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xD95AB0", Offset = "0xD95AB0", VA = "0xD95AB0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xD95ADC", Offset = "0xD95ADC", VA = "0xD95ADC")]
			public LodParentHolder()
			{
			}
		}

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EventMethod onInit;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<MeshCombiner> instances;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshCombineJobManager.JobSettings jobSettings;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODGroupSettings[] lodGroupsSettings;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ComputeShader computeDepthToArray;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useCustomInstantiatePrefab;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject instantiatePrefab;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool instantiatePrefabValid;

		[Token(Token = "0x4000B8A")]
		public const int maxLodCount = 8;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string saveMeshesFolder;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ObjectOctree.Cell octree;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<ObjectOctree.MaxCell> changedCells;

		[NonSerialized]
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool octreeContainsObjects;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool unitySettingsFoldout;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SearchOptions searchOptions;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool useOriginalObjectsHideFlags;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public HideFlags orginalObjectsHideFlags;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CombineConditionSettings combineConditionSettings;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool outputSettingsFoldout;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public CombineMode combineMode;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int cellSize;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 cellOffset;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int cellCount;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool removeOriginalMeshReference;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool usedRemoveOriginalMeshRederences;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		public bool useVertexOutputLimit;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int vertexOutputLimit;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public RebakeLightingMode rebakeLightingMode;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool copyBakedLighting;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool validCopyBakedLighting;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool rebakeLighting;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool validRebakeLighting;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float scaleInLightmap;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool addMeshColliders;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PhysicMaterial physicsMaterial;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool addMeshCollidersInRange;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Bounds addMeshCollidersBounds;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool makeMeshesUnreadable;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool excludeSingleMeshes;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public bool removeTrianglesBelowSurface;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		public bool noColliders;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public LayerMask surfaceLayerMask;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float maxSurfaceHeight;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool removeOverlappingTriangles;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool removeSamePositionTriangles;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool reportFoundObjectsNotOnOverlapLayerMask;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject overlappingCollidersGO;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LayerMask overlapLayerMask;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int voxelizeLayer;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int lodGroupLayer;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject overlappingNonCombineGO;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool disableOverlappingNonCombineGO;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool removeBackFaceTriangles;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public BackFaceTriangleMode backFaceTriangleMode;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform backFaceT;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector3 backFaceDirection;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Vector3 backFaceRotation;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Bounds backFaceBounds;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool weldVertices;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		public bool weldSnapVertices;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float weldSnapSize;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool weldIncludeNormals;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool jobSettingsFoldout;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		public bool runtimeSettingsFoldout;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		public bool combineInRuntime;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool combineOnStart;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		public bool useCombineSwapKey;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public KeyCode combineSwapKey;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public HandleComponent originalMeshRenderers;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public HandleComponent originalLODGroups;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool meshSaveSettingsFoldout;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public bool deleteFilesFromSaveFolder;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Vector3 oldPosition;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public Vector3 oldScale;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public LodParentHolder[] lodParentHolders;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public List<GameObject> combinedGameObjects;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public List<CachedGameObject> foundObjects;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public List<LODGroup> foundLodGroups;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[HideInInspector]
		public List<Collider> foundColliders;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public HashSet<LODGroup> uniqueFoundLodGroups;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public HashSet<Mesh> unreadableMeshes;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public HashSet<Mesh> selectImportSettingsMeshes;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public FoundCombineConditions foundCombineConditions;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public HashSet<MeshCombineJobManager.MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int totalMeshCombineJobs;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public int mrDisabledCount;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool combined;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		public bool isCombining;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
		public bool activeOriginal;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
		public bool combinedActive;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public bool drawGizmos;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
		public bool drawMeshBounds;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public int originalTotalVertices;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public int originalTotalTriangles;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public int newTotalVertices;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public int newTotalTriangles;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public int originalDrawCalls;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public int newDrawCalls;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public int originalTotalNormalChannels;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public int originalTotalTangentChannels;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public int originalTotalUvChannels;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public int originalTotalUv2Channels;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public int originalTotalUv3Channels;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public int originalTotalUv4Channels;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public int originalTotalColorChannels;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public int newTotalNormalChannels;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public int newTotalTangentChannels;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public int newTotalUvChannels;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public int newTotalUv2Channels;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int newTotalUv3Channels;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public int newTotalUv4Channels;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public int newTotalColorChannels;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public float combineTime;

		[NonSerialized]
		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public MeshCombinerData data;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public FastList<MeshColliderAdd> addMeshCollidersList;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private HashSet<Transform> uniqueLodObjects;

		[NonSerialized]
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private MeshCombiner thisInstance;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private bool hasFoundFirstObject;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Bounds bounds;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private Stopwatch stopwatch;

		[Token(Token = "0x14000009")]
		public event EventMethod onCombiningStart
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x132765C", Offset = "0x132765C", VA = "0x132765C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA20", Offset = "0xB2FA20")]
			add
			{
			}
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x13276FC", Offset = "0x13276FC", VA = "0x13276FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA30", Offset = "0xB2FA30")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event EventMethod onCombiningAbort
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x132779C", Offset = "0x132779C", VA = "0x132779C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA40", Offset = "0xB2FA40")]
			add
			{
			}
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x132783C", Offset = "0x132783C", VA = "0x132783C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA50", Offset = "0xB2FA50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event EventMethod onCombiningReady
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x13278DC", Offset = "0x13278DC", VA = "0x13278DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA60", Offset = "0xB2FA60")]
			add
			{
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x132797C", Offset = "0x132797C", VA = "0x132797C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA70", Offset = "0xB2FA70")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1327198", Offset = "0x1327198", VA = "0x1327198")]
		public void AddMeshColliders()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x13273FC", Offset = "0x13273FC", VA = "0x13273FC")]
		public void ExecuteOnCombiningReady()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x13282F8", Offset = "0x13282F8", VA = "0x13282F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x132843C", Offset = "0x132843C", VA = "0x132843C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x13282FC", Offset = "0x13282FC", VA = "0x13282FC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1328440", Offset = "0x1328440", VA = "0x1328440")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x13284DC", Offset = "0x13284DC", VA = "0x13284DC")]
		public void InitData()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1328968", Offset = "0x1328968", VA = "0x1328968")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1328C98", Offset = "0x1328C98", VA = "0x1328C98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1328ED8", Offset = "0x1328ED8", VA = "0x1328ED8")]
		public static MeshCombiner GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1329040", Offset = "0x1329040", VA = "0x1329040")]
		public void CopyJobSettingsToAllInstances()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1328AAC", Offset = "0x1328AAC", VA = "0x1328AAC")]
		public void InitMeshCombineJobManager()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1329144", Offset = "0x1329144", VA = "0x1329144")]
		public void CreateLodGroupsSettings()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1328B4C", Offset = "0x1328B4C", VA = "0x1328B4C")]
		private void StartRuntime()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1329638", Offset = "0x1329638", VA = "0x1329638")]
		public void DestroyCombinedObjects()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1329A94", Offset = "0x1329A94", VA = "0x1329A94")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1329750", Offset = "0x1329750", VA = "0x1329750")]
		public void AbortAndClearMeshCombineJobs(bool executeAbortEvent = true)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1326D68", Offset = "0x1326D68", VA = "0x1326D68")]
		public void ClearMeshCombineJobs(bool executeAbortEvent = true)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1329D04", Offset = "0x1329D04", VA = "0x1329D04")]
		public void AddObjects(Transform rootT, List<Transform> transforms, bool useSearchOptions, bool checkForLODGroups = true)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x132A8D0", Offset = "0x132A8D0", VA = "0x132A8D0")]
		public void AddObjectsAutomatically(bool useSearchConditions = true)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x132AFA4", Offset = "0x132AFA4", VA = "0x132AFA4")]
		public void AddFoundObjectsToOctree()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1329BDC", Offset = "0x1329BDC", VA = "0x1329BDC")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x132B42C", Offset = "0x132B42C", VA = "0x132B42C")]
		public void CalcOctreeSize(Bounds bounds)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x132B808", Offset = "0x132B808", VA = "0x132B808")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1329260", Offset = "0x1329260", VA = "0x1329260")]
		public void CombineAll(bool useSearchConditions = true)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1329C74", Offset = "0x1329C74", VA = "0x1329C74")]
		private void InitAndResetLodParentsCount()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x132AADC", Offset = "0x132AADC", VA = "0x132AADC")]
		public void AddObjectsFromSearchParent(bool useSearchConditions)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x132B900", Offset = "0x132B900", VA = "0x132B900")]
		private void CheckForFoundObjectNotOnOverlapLayerMask(GameObject go)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1329F18", Offset = "0x1329F18", VA = "0x1329F18")]
		private void AddLodGroups(Transform searchParentT, LODGroup[] lodGroups, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x132A648", Offset = "0x132A648", VA = "0x132A648")]
		private void AddTransforms(Transform searchParentT, Transform[] transforms, bool useSearchConditions = true)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x132BBF8", Offset = "0x132BBF8", VA = "0x132BBF8")]
		private int ValidObject(Transform searchParentT, Transform t, ObjectType objectType, bool useSearchOptions, ref CachedGameObject cachedGameObject)
		{
			return default(int);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1328E18", Offset = "0x1328E18", VA = "0x1328E18")]
		public void RestoreOriginalRenderersAndLODGroups(bool onDestroy)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x132C624", Offset = "0x132C624", VA = "0x132C624")]
		public void SwapCombine()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x132C658", Offset = "0x132C658", VA = "0x132C658")]
		private void SetOriginalCollidersActive(bool active, bool onDestroy)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x132C850", Offset = "0x132C850", VA = "0x132C850")]
		private void ExecuteMeshFilter(bool active, CachedGameObject cachedGO)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1327A1C", Offset = "0x1327A1C", VA = "0x1327A1C")]
		public void ExecuteHandleObjects(bool active, HandleComponent handleOriginalObjects, HandleComponent handleOriginalLodGroups, bool includeColliders = true, bool onDestroy = false)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x132CA58", Offset = "0x132CA58", VA = "0x132CA58")]
		private void DrawGizmosCube(Bounds bounds, Color color)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x132CB70", Offset = "0x132CB70", VA = "0x132CB70")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x132B218", Offset = "0x132B218", VA = "0x132B218")]
		private void LogOctreeInfo()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x132CCE4", Offset = "0x132CCE4", VA = "0x132CCE4")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x200063B")]
	public struct MeshColliderAdd
	{
		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mesh mesh;

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1325118", Offset = "0x1325118", VA = "0x1325118")]
		public MeshColliderAdd(GameObject go, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x200063C")]
	[ExecuteInEditMode]
	public class MeshCombinerData : MonoBehaviour
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, CachedGameObject> colliderLookup;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<LODGroup, CachedGameObject> lodGroupLookup;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<GameObject> combinedGameObjects;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<CachedGameObject> foundObjects;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<LODGroup> foundLodGroups;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<Collider> foundColliders;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x132D210", Offset = "0x132D210", VA = "0x132D210")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x132D21C", Offset = "0x132D21C", VA = "0x132D21C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1329968", Offset = "0x1329968", VA = "0x1329968")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x132D228", Offset = "0x132D228", VA = "0x132D228")]
		public MeshCombinerData()
		{
		}
	}
	[Token(Token = "0x200063D")]
	[ExecuteInEditMode]
	public class ObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spawnArea;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float density;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 scaleRange;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 rotationRange;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 heightRange;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float scaleMulti;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float metersBetweenSpawning;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool spawnInRuntime;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool spawn;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool deleteChildren;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x2775400", Offset = "0x2775400", VA = "0x2775400")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x277590C", Offset = "0x277590C", VA = "0x277590C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x2775958", Offset = "0x2775958", VA = "0x2775958")]
		public void DeleteChildren()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x2775AD4", Offset = "0x2775AD4", VA = "0x2775AD4")]
		private void SetObjectsActive(bool active)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x2775458", Offset = "0x2775458", VA = "0x2775458")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x2775B50", Offset = "0x2775B50", VA = "0x2775B50")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x2775BA0", Offset = "0x2775BA0", VA = "0x2775BA0")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x200063E")]
	public class RemoveGeometryBelowTerrain : MonoBehaviour
	{
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int totalTriangles;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int removeTriangles;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int skippedObjects;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> terrains;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> meshTerrains;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds[] terrainBounds;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds[] meshBounds;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Terrain[] terrainComponents;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Terrain[] terrainArray;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds[] terrainBoundsArray;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] meshTerrainComponents;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh[] meshArray;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool runOnStart;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xEC70D0", Offset = "0xEC70D0", VA = "0xEC70D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xEC7108", Offset = "0xEC7108", VA = "0xEC7108")]
		public void Remove(GameObject go)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xEC74D4", Offset = "0xEC74D4", VA = "0xEC74D4")]
		public void RemoveMesh(Transform t, Mesh mesh)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xEC76B0", Offset = "0xEC76B0", VA = "0xEC76B0")]
		public bool IsMeshUnderTerrain(Transform t, Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xEC7A88", Offset = "0xEC7A88", VA = "0xEC7A88")]
		public void GetTerrainComponents()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xEC7BE4", Offset = "0xEC7BE4", VA = "0xEC7BE4")]
		public void GetMeshRenderersAndComponents()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xEC7E14", Offset = "0xEC7E14", VA = "0xEC7E14")]
		public void CreateTerrainBounds()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xEC80C8", Offset = "0xEC80C8", VA = "0xEC80C8")]
		public void MakeIntersectLists(Bounds bounds)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xEC855C", Offset = "0xEC855C", VA = "0xEC855C")]
		public int InterectTerrain(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xEC8604", Offset = "0xEC8604", VA = "0xEC8604")]
		public int InterectMesh(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xEC86AC", Offset = "0xEC86AC", VA = "0xEC86AC")]
		public float GetTerrainHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xEC7778", Offset = "0xEC7778", VA = "0xEC7778")]
		public void RemoveTriangles(Transform t, List<int> newTriangles, Vector3[] vertices)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xEC87A8", Offset = "0xEC87A8", VA = "0xEC87A8")]
		public RemoveGeometryBelowTerrain()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class SwapCombineKey : MonoBehaviour
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SwapCombineKey instance;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshCombiner> meshCombinerList;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshCombiner meshCombiner;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle textStyle;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xDAFE6C", Offset = "0xDAFE6C", VA = "0xDAFE6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xDAFF2C", Offset = "0xDAFF2C", VA = "0xDAFF2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xDAFF7C", Offset = "0xDAFF7C", VA = "0xDAFF7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xDB0094", Offset = "0xDB0094", VA = "0xDB0094")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xDB0574", Offset = "0xDB0574", VA = "0xDB0574")]
		public SwapCombineKey()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public class CachedComponents : MonoBehaviour
	{
		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter mf;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GarbageCollectMesh garbageCollectMesh;

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xE2F0B4", Offset = "0xE2F0B4", VA = "0xE2F0B4")]
		public CachedComponents()
		{
		}
	}
	[Token(Token = "0x2000641")]
	public class ObjectHolder<T> : FastIndex
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T item;

		[Token(Token = "0x6000F3E")]
		public ObjectHolder()
		{
		}

		[Token(Token = "0x6000F3F")]
		public ObjectHolder(T item)
		{
		}
	}
	[Token(Token = "0x2000642")]
	public abstract class Parent<T>
	{
		[NonSerialized]
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x6000F40")]
		protected Parent()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public abstract class ParentFastHashListIndex<T> : FastIndex
	{
		[NonSerialized]
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x6000F41")]
		protected ParentFastHashListIndex()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public abstract class ParentMono<T> : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x6000F42")]
		protected ParentMono()
		{
		}
	}
	[Token(Token = "0x2000645")]
	public abstract class ParentMonoHash<T> : MonoBehaviourFastIndex
	{
		[NonSerialized]
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x6000F43")]
		protected ParentMonoHash()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public interface IFastIndexList
	{
		[Token(Token = "0x6000F44")]
		bool RemoveAt(int index);

		[Token(Token = "0x6000F45")]
		bool Remove(IFastIndex item);
	}
	[Token(Token = "0x2000647")]
	public interface IFastIndex
	{
		[Token(Token = "0x17000145")]
		IFastIndexList List
		{
			[Token(Token = "0x6000F46")]
			get;
			[Token(Token = "0x6000F47")]
			set;
		}

		[Token(Token = "0x17000146")]
		int ListIndex
		{
			[Token(Token = "0x6000F48")]
			get;
			[Token(Token = "0x6000F49")]
			set;
		}
	}
	[Token(Token = "0x2000648")]
	public class FastIndex : IFastIndex
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21468", Offset = "0xB21468")]
		private IFastIndexList <List>k__BackingField;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21478", Offset = "0xB21478")]
		private int <ListIndex>k__BackingField;

		[Token(Token = "0x17000147")]
		public IFastIndexList List
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0xFC6A40", Offset = "0xFC6A40", VA = "0xFC6A40", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA80", Offset = "0xB2FA80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xFC6A48", Offset = "0xFC6A48", VA = "0xFC6A48", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA90", Offset = "0xB2FA90")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public int ListIndex
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xFC6A50", Offset = "0xFC6A50", VA = "0xFC6A50", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAA0", Offset = "0xB2FAA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xFC6A58", Offset = "0xFC6A58", VA = "0xFC6A58", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAB0", Offset = "0xB2FAB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xFC6A60", Offset = "0xFC6A60", VA = "0xFC6A60")]
		public FastIndex()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xFC6A8C", Offset = "0xFC6A8C", VA = "0xFC6A8C")]
		public void RemoveFromList()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public class MonoBehaviourFastIndex : MonoBehaviour, IFastIndex
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21488", Offset = "0xB21488")]
		private IFastIndexList <List>k__BackingField;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21498", Offset = "0xB21498")]
		private int <ListIndex>k__BackingField;

		[Token(Token = "0x17000149")]
		public IFastIndexList List
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x1335030", Offset = "0x1335030", VA = "0x1335030", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAC0", Offset = "0xB2FAC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x1335038", Offset = "0x1335038", VA = "0x1335038", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAD0", Offset = "0xB2FAD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public int ListIndex
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x1335040", Offset = "0x1335040", VA = "0x1335040", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAE0", Offset = "0xB2FAE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x1335048", Offset = "0x1335048", VA = "0x1335048", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAF0", Offset = "0xB2FAF0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1335050", Offset = "0x1335050", VA = "0x1335050")]
		public MonoBehaviourFastIndex()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x133507C", Offset = "0x133507C", VA = "0x133507C")]
		public void RemoveFromList()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class FastIndexList<T> : FastList<T>, IFastIndexList where T : IFastIndex
	{
		[Token(Token = "0x6000F56")]
		public FastIndexList()
		{
		}

		[Token(Token = "0x6000F57")]
		public FastIndexList(int capacity)
		{
		}

		[Token(Token = "0x6000F58")]
		public new void Clear()
		{
		}

		[Token(Token = "0x6000F59")]
		public void SetItem(int index, T item)
		{
		}

		[Token(Token = "0x6000F5A")]
		public new int Add(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5B")]
		public new void AddRange(T[] newItems)
		{
		}

		[Token(Token = "0x6000F5C")]
		public new bool RemoveAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5D")]
		public override T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6000F5E")]
		public bool Remove(IFastIndex item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200064B")]
	public class FastListBase
	{
		[Token(Token = "0x4000C6D")]
		protected const int defaultCapacity = 4;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int _count;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int arraySize;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xFC6B48", Offset = "0xFC6B48", VA = "0xFC6B48")]
		public FastListBase()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class FastListBase<T> : FastListBase
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] items;

		[Token(Token = "0x6000F60")]
		protected void DoubleCapacity()
		{
		}

		[Token(Token = "0x6000F61")]
		public FastListBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064D")]
	public class FastList<T> : FastListBase<T>
	{
		[Token(Token = "0x6000F62")]
		public FastList()
		{
		}

		[Token(Token = "0x6000F63")]
		public FastList(bool reserve, int reserved)
		{
		}

		[Token(Token = "0x6000F64")]
		public FastList(int capacity)
		{
		}

		[Token(Token = "0x6000F65")]
		public FastList(FastList<T> list)
		{
		}

		[Token(Token = "0x6000F66")]
		public FastList(T[] items)
		{
		}

		[Token(Token = "0x6000F67")]
		protected void SetCapacity(int capacity)
		{
		}

		[Token(Token = "0x6000F68")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x6000F69")]
		public void EnsureCount(int count)
		{
		}

		[Token(Token = "0x6000F6A")]
		public virtual void SetArray(T[] items)
		{
		}

		[Token(Token = "0x6000F6B")]
		public int AddUnique(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F6C")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6D")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F6E")]
		public T GetIndex(T item)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F6F")]
		public virtual int Add(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F70")]
		public virtual int AddThreadSafe(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F71")]
		public virtual void Add(T item, T item2)
		{
		}

		[Token(Token = "0x6000F72")]
		public virtual void Add(T item, T item2, T item3)
		{
		}

		[Token(Token = "0x6000F73")]
		public virtual void Add(T item, T item2, T item3, T item4)
		{
		}

		[Token(Token = "0x6000F74")]
		public virtual void Add(T item, T item2, T item3, T item4, T item5)
		{
		}

		[Token(Token = "0x6000F75")]
		public virtual void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000F76")]
		public virtual void AddRange(T[] arrayItems)
		{
		}

		[Token(Token = "0x6000F77")]
		public virtual void AddRange(T[] arrayItems, int startIndex, int length)
		{
		}

		[Token(Token = "0x6000F78")]
		public virtual void AddRange(FastList<T> list)
		{
		}

		[Token(Token = "0x6000F79")]
		public virtual int GrabListThreadSafe(FastList<T> threadList, bool fastClear = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7A")]
		public virtual void ChangeRange(int startIndex, T[] arrayItems)
		{
		}

		[Token(Token = "0x6000F7B")]
		public virtual bool Remove(T item, bool weakReference = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7C")]
		public virtual void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000F7D")]
		public virtual void RemoveLast()
		{
		}

		[Token(Token = "0x6000F7E")]
		public virtual void RemoveRange(int index, int length)
		{
		}

		[Token(Token = "0x6000F7F")]
		public virtual T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6000F80")]
		public virtual T Dequeue(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F81")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6000F82")]
		public virtual void ClearThreadSafe()
		{
		}

		[Token(Token = "0x6000F83")]
		public virtual void ClearRange(int startIndex)
		{
		}

		[Token(Token = "0x6000F84")]
		public virtual void FastClear()
		{
		}

		[Token(Token = "0x6000F85")]
		public virtual void FastClear(int newCount)
		{
		}

		[Token(Token = "0x6000F86")]
		public virtual T[] ToArray()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200064E")]
	public class SortedFastList<T> : FastList<T>
	{
		[Token(Token = "0x6000F87")]
		public new void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000F88")]
		public new void RemoveRange(int index, int endIndex)
		{
		}

		[Token(Token = "0x6000F89")]
		public SortedFastList()
		{
		}
	}
	[Token(Token = "0x200064F")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x2000650")]
		public class LogEntry
		{
			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logString;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string stackTrace;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LogType logType;

			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int commandType;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool unityLog;

			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float tStamp;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x275F25C", Offset = "0x275F25C", VA = "0x275F25C")]
			public LogEntry(string logString, string stackTrace, LogType logType, bool unityLog = false, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Console instance;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode consoleKey;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logActive;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool showConsole;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool showOnError;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool combineAutomatic;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool showLast;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool setFocus;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject selectGO;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LogEntry> logs;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect window;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rect inputRect;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect logRect;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect vScrollRect;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string inputText;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float scrollPos;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lines;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showUnityLog;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool showInputLog;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MeshCombiner selectedMeshCombiner;

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1586DA0", Offset = "0x1586DA0", VA = "0x1586DA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1586EB8", Offset = "0x1586EB8", VA = "0x1586EB8")]
		private void ReportStartup()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1586E34", Offset = "0x1586E34", VA = "0x1586E34")]
		private void FindMeshCombiners()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x158715C", Offset = "0x158715C", VA = "0x158715C")]
		private void ReportMeshCombiners(bool reportSelected = true)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1587514", Offset = "0x1587514", VA = "0x1587514")]
		private void ReportMeshCombiner(MeshCombiner meshCombiner, bool foundText = false)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x158726C", Offset = "0x158726C", VA = "0x158726C")]
		public int SelectMeshCombiner(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x15878D0", Offset = "0x15878D0", VA = "0x15878D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x158794C", Offset = "0x158794C", VA = "0x158794C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x15879C8", Offset = "0x15879C8", VA = "0x15879C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1587060", Offset = "0x1587060", VA = "0x1587060")]
		public static void Log(string logString, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1587A18", Offset = "0x1587A18", VA = "0x1587A18")]
		private void HandleLog(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x1587B28", Offset = "0x1587B28", VA = "0x1587B28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1587B10", Offset = "0x1587B10", VA = "0x1587B10")]
		private void SetConsoleActive(bool active)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x1587B6C", Offset = "0x1587B6C", VA = "0x1587B6C")]
		private void ExecuteCommand(string cmd)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1589E94", Offset = "0x1589E94", VA = "0x1589E94")]
		private void DirSort()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x1589D20", Offset = "0x1589D20", VA = "0x1589D20")]
		private void DirSort(string name)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x1589EF0", Offset = "0x1589EF0", VA = "0x1589EF0")]
		public void SortLog(GameObject[] gos, bool showMeshInfo = false)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x158A5A0", Offset = "0x158A5A0", VA = "0x158A5A0")]
		private string GetMeshInfo(GameObject go, ref int meshCount)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x158A8B4", Offset = "0x158A8B4", VA = "0x158A8B4")]
		private void TimeStep(string cmd)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x158A8EC", Offset = "0x158A8EC", VA = "0x158A8EC")]
		private void TimeScale(string cmd)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x15896A0", Offset = "0x15896A0", VA = "0x15896A0")]
		private void Clear(LogEntry log, string cmd)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x15899F8", Offset = "0x15899F8", VA = "0x15899F8")]
		private void DirAll()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x1588A40", Offset = "0x1588A40", VA = "0x1588A40")]
		private void Dir()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1589010", Offset = "0x1589010", VA = "0x1589010")]
		private void Components(LogEntry log)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x158AA94", Offset = "0x158AA94", VA = "0x158AA94")]
		private void ShowPath(bool showLines = true)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x158A924", Offset = "0x158A924", VA = "0x158A924")]
		private string GetPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1589194", Offset = "0x1589194", VA = "0x1589194")]
		private void CD(LogEntry log, string name)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x15893EC", Offset = "0x15893EC", VA = "0x15893EC")]
		public void SetActiveContains(string textContains, bool active)
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x15898A4", Offset = "0x15898A4", VA = "0x15898A4")]
		public void DirContains(string textContains)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x158AB68", Offset = "0x158AB68", VA = "0x158AB68")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x158B89C", Offset = "0x158B89C", VA = "0x158B89C")]
		private void AnimateColor(Color col, LogEntry log, float multi)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x158B9BC", Offset = "0x158B9BC", VA = "0x158B9BC")]
		public Console()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class DirectDraw : MonoBehaviour
	{
		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] meshes;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material[] mats;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] positions;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1126194", Offset = "0x1126194", VA = "0x1126194")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x11264F4", Offset = "0x11264F4", VA = "0x11264F4")]
		private void SetMeshRenderersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1126570", Offset = "0x1126570", VA = "0x1126570")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x11266EC", Offset = "0x11266EC", VA = "0x11266EC")]
		public DirectDraw()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public class DisabledLodMeshRender : MonoBehaviour
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedLodGameObject cachedLodGO;

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1126760", Offset = "0x1126760", VA = "0x1126760")]
		public DisabledLodMeshRender()
		{
		}
	}
	[Token(Token = "0x2000653")]
	public class DisabledMeshRenderer : MonoBehaviour
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1126768", Offset = "0x1126768", VA = "0x1126768")]
		public DisabledMeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000654")]
	[ExecuteInEditMode]
	public class GarbageCollectMesh : MonoBehaviour
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xFD2CB8", Offset = "0xFD2CB8", VA = "0xFD2CB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xFD2D68", Offset = "0xFD2D68", VA = "0xFD2D68")]
		public GarbageCollectMesh()
		{
		}
	}
	[Token(Token = "0x2000655")]
	[ExecuteInEditMode]
	public class LightmapSettings : MonoBehaviour
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer mr;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lightmapIndex;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool setLightmapScaleOffset;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xEB2E40", Offset = "0xEB2E40", VA = "0xEB2E40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xEB2EF0", Offset = "0xEB2EF0", VA = "0xEB2EF0")]
		public LightmapSettings()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class MCS_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseMoveSpeed;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float shiftMulti;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float controlMulti;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 oldMousePosition;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject cameraMountGO;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject cameraChildGO;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cameraMountT;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cameraChildT;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xEB8324", Offset = "0xEB8324", VA = "0xEB8324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xEB835C", Offset = "0xEB835C", VA = "0xEB835C")]
		private void CreateParents()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xEB84DC", Offset = "0xEB84DC", VA = "0xEB84DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xEB8788", Offset = "0xEB8788", VA = "0xEB8788")]
		public MCS_CameraController()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class MCS_FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x2000658")]
		public enum GUIType
		{
			[Token(Token = "0x4000CE2")]
			DisplayRunning,
			[Token(Token = "0x4000CE3")]
			DisplayResults,
			[Token(Token = "0x4000CE4")]
			DisplayNothing
		}

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MCS_FPSCounter instance;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB214C8", Offset = "0xB214C8")]
		public float interval;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GUIType displayType;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 gradientRange;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font fontRun;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font fontResult;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture logo;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showLogoOnResultsScreen;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode showHideButton;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool acceptInput;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool reset;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB21500", Offset = "0xB21500")]
		public float currentFPS;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float averageFPS;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minimumFPS;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maximumFPS;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int totalFrameCount;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int tempFrameCount;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double tStamp;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double tStampTemp;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string currentFPSText;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string avgFPSText;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string minFPSText;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string maxFSPText;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GUIStyle bigStyle;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GUIStyle bigStyleShadow;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GUIStyle smallStyle;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GUIStyle smallStyleShadow;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GUIStyle smallStyleLabel;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GUIStyle headerStyle;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rect[] rectsRun;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rect[] rectsResult;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Gradient gradient;

		[Token(Token = "0x4000CC7")]
		private const float line1 = 4f;

		[Token(Token = "0x4000CC8")]
		private const float line2 = 30f;

		[Token(Token = "0x4000CC9")]
		private const float line3 = 44f;

		[Token(Token = "0x4000CCA")]
		private const float line4 = 58f;

		[Token(Token = "0x4000CCB")]
		private const float labelWidth = 26f;

		[Token(Token = "0x4000CCC")]
		private const float paddingH = 8f;

		[Token(Token = "0x4000CCD")]
		private const float lineHeight = 22f;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float columnRight;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float columnLeft;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color fontShadow;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Color label;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Color colorCurrent;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color colorAvg;

		[Token(Token = "0x4000CD4")]
		private const string resultHeader = "BENCHMARK RESULTS";

		[Token(Token = "0x4000CD5")]
		private const string resultLabelAvg = "AVERAGE FPS:";

		[Token(Token = "0x4000CD6")]
		private const string resultLabelMin = "MINIMUM FPS:";

		[Token(Token = "0x4000CD7")]
		private const string resultLabelMax = "MAXIMUM FPS:";

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GUIContent resultHeaderGUI;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GUIContent reslutLabelAvgGUI;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GUIContent avgTextGUI;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GUIContent instructions;

		[Token(Token = "0x4000CDC")]
		private const string runLabelAvg = "Avg:";

		[Token(Token = "0x4000CDD")]
		private const string runLabelMin = "Min:";

		[Token(Token = "0x4000CDE")]
		private const string runLabelMax = "Max:";

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector2 screenSize;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GUIType oldDisplayType;

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xEB879C", Offset = "0xEB879C", VA = "0xEB879C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xEB8998", Offset = "0xEB8998", VA = "0xEB8998")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xEB8A50", Offset = "0xEB8A50", VA = "0xEB8A50")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xEB90BC", Offset = "0xEB90BC", VA = "0xEB90BC")]
		private void SetRectsRun()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xEB9430", Offset = "0xEB9430", VA = "0xEB9430")]
		private void SetRectsResult()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xEB9960", Offset = "0xEB9960", VA = "0xEB9960")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xEB9BFC", Offset = "0xEB9BFC", VA = "0xEB9BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xEB9FDC", Offset = "0xEB9FDC", VA = "0xEB9FDC")]
		public void StartBenchmark()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xEBA008", Offset = "0xEBA008", VA = "0xEBA008")]
		public void StopBenchmark()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xEB9DB8", Offset = "0xEB9DB8", VA = "0xEB9DB8")]
		private void GetFPS()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xEB9D6C", Offset = "0xEB9D6C", VA = "0xEB9D6C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xEB9D28", Offset = "0xEB9D28", VA = "0xEB9D28")]
		private Color EvaluateGradient(float f)
		{
			return default(Color);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xEBA078", Offset = "0xEBA078", VA = "0xEBA078")]
		public MCS_FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000659")]
	public struct AABB3
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 min;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 max;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x10299C0", Offset = "0x10299C0", VA = "0x10299C0")]
		public AABB3(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x200065A")]
	public struct Triangle3
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 a;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 b;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 c;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dirAb;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 dirAc;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 dirBc;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 h1;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float ab;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ac;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float bc;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float area;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float h;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ah;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float hb;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xDB55FC", Offset = "0xDB55FC", VA = "0xDB55FC")]
		public void Calc()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public struct Sphere3
	{
		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 center;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float radius;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xDAB070", Offset = "0xDAB070", VA = "0xDAB070")]
		public Sphere3(Vector3 center, float radius)
		{
		}
	}
	[Token(Token = "0x200065C")]
	public struct Int2
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x127B27C", Offset = "0x127B27C", VA = "0x127B27C")]
		public Int2(int x, int y)
		{
		}
	}
	[Token(Token = "0x200065D")]
	public struct Int3
	{
		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x127B284", Offset = "0x127B284", VA = "0x127B284")]
		public Int3(int x, int y, int z)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x127B290", Offset = "0x127B290", VA = "0x127B290")]
		public static Int3 operator +(Int3 a, Int3 b)
		{
			return default(Int3);
		}
	}
	[Token(Token = "0x200065E")]
	public static class Mathw
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] bits;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x15820E8", Offset = "0x15820E8", VA = "0x15820E8")]
		public static Vector3 Clamp(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x158211C", Offset = "0x158211C", VA = "0x158211C")]
		public static Vector3 FloatToVector3(float v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1582128", Offset = "0x1582128", VA = "0x1582128")]
		public static float SinDeg(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1582138", Offset = "0x1582138", VA = "0x1582138")]
		public static float GetMax(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x158214C", Offset = "0x158214C", VA = "0x158214C")]
		public static Vector3 SetMin(Vector3 v, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1582168", Offset = "0x1582168", VA = "0x1582168")]
		public static Vector3 Snap(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1582190", Offset = "0x1582190", VA = "0x1582190")]
		public static Vector3 SnapRound(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1582340", Offset = "0x1582340", VA = "0x1582340")]
		public static Vector3 Divide(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1582350", Offset = "0x1582350", VA = "0x1582350")]
		public static Vector3 Divide(float a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1582364", Offset = "0x1582364", VA = "0x1582364")]
		public static Vector3 Scale(Vector3 a, Int3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1582384", Offset = "0x1582384", VA = "0x1582384")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x15823AC", Offset = "0x15823AC", VA = "0x15823AC")]
		public static bool IntersectAABB3Sphere3(AABB3 box, Sphere3 sphere)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1582440", Offset = "0x1582440", VA = "0x1582440")]
		public static bool IntersectAABB3Triangle3(Vector3 boxCenter, Vector3 boxHalfSize, Triangle3 triangle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x15836B8", Offset = "0x15836B8", VA = "0x15836B8")]
		private static void GetMinMax(float x0, float x1, float x2, out float min, out float max)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1583708", Offset = "0x1583708", VA = "0x1583708")]
		private static bool PlaneBoxOverlap(Vector3 normal, Vector3 vert, Vector3 maxBox)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1582F58", Offset = "0x1582F58", VA = "0x1582F58")]
		private static float Abs(float v)
		{
			return default(float);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1582F68", Offset = "0x1582F68", VA = "0x1582F68")]
		private static bool AxisTest_X01(Vector3 v0, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1583448", Offset = "0x1583448", VA = "0x1583448")]
		private static bool AxisTest_X2(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x15830A0", Offset = "0x15830A0", VA = "0x15830A0")]
		private static bool AxisTest_Y02(Vector3 v0, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1583580", Offset = "0x1583580", VA = "0x1583580")]
		private static bool AxisTest_Y1(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x15831D8", Offset = "0x15831D8", VA = "0x15831D8")]
		private static bool AxisTest_Z12(Vector3 v1, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1583310", Offset = "0x1583310", VA = "0x1583310")]
		private static bool AxisTest_Z0(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200065F")]
	public class MeshFilterRevert : MonoBehaviour
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string guid;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string meshName;

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x132C928", Offset = "0x132C928", VA = "0x132C928")]
		public bool DestroyAndReferenceMeshFilter(MeshFilter mf)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x132C924", Offset = "0x132C924", VA = "0x132C924")]
		public void RevertMeshFilter(MeshFilter mf)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x132D848", Offset = "0x132D848", VA = "0x132D848")]
		public MeshFilterRevert()
		{
		}
	}
	[Token(Token = "0x2000660")]
	public enum CustomHideFlags
	{
		[Token(Token = "0x4000D00")]
		HideInHierarchy = 1,
		[Token(Token = "0x4000D01")]
		HideInInspector = 2,
		[Token(Token = "0x4000D02")]
		DontSaveInEditor = 4,
		[Token(Token = "0x4000D03")]
		NotEditable = 8,
		[Token(Token = "0x4000D04")]
		DontSaveInBuild = 0x10,
		[Token(Token = "0x4000D05")]
		DontUnloadUnusedAsset = 0x20
	}
	[Token(Token = "0x2000661")]
	public static class Methods
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x132DA24", Offset = "0x132DA24", VA = "0x132DA24")]
		public static HideFlags CustomToHideFlags(CustomHideFlags customHideFlags)
		{
			return default(HideFlags);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x132DA40", Offset = "0x132DA40", VA = "0x132DA40")]
		public static CustomHideFlags HideFlagsToCustom(HideFlags hideFlags)
		{
			return default(CustomHideFlags);
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x132DA5C", Offset = "0x132DA5C", VA = "0x132DA5C")]
		public static int GetFirstLayerOfLayerMask(LayerMask layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x132BBA0", Offset = "0x132BBA0", VA = "0x132BBA0")]
		public static bool IsLayerInLayerMask(LayerMask layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x132DAAC", Offset = "0x132DAAC", VA = "0x132DAAC")]
		public static void SetMeshRenderersActive(FastList<MeshRenderer> mrs, bool active)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x132DB34", Offset = "0x132DB34", VA = "0x132DB34")]
		public static void SetCachedGOSActive(FastList<CachedGameObject> cachedGOS, bool active)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x132DBC4", Offset = "0x132DBC4", VA = "0x132DBC4")]
		public static void SetTag(GameObject go, string tag)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x132DC7C", Offset = "0x132DC7C", VA = "0x132DC7C")]
		public static void SetTagWhenCollider(GameObject go, string tag)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x132DDBC", Offset = "0x132DDBC", VA = "0x132DDBC")]
		public static void SetTagAndLayer(GameObject go, string tag, int layer)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x132DEAC", Offset = "0x132DEAC", VA = "0x132DEAC")]
		public static void SetLayer(GameObject go, int layer)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x132DF80", Offset = "0x132DF80", VA = "0x132DF80")]
		public static bool LayerMaskContainsLayer(int layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x132DF94", Offset = "0x132DF94", VA = "0x132DF94")]
		public static int GetFirstLayerInLayerMask(int layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x132C478", Offset = "0x132C478", VA = "0x132C478")]
		public static bool Contains(string compare, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF3")]
		public static T[] Search<T>([Optional] GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x132E050", Offset = "0x132E050", VA = "0x132E050")]
		public static FastList<GameObject> GetAllRootGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		public static T[] SearchParent<T>(GameObject parentGO, bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000FF6")]
		public static T[] SearchScene<T>(Scene scene, bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000FF7")]
		public static FastList<T> SearchAllScenes<T>(bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		public static T Find<T>(GameObject parentGO, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x132E170", Offset = "0x132E170", VA = "0x132E170")]
		public static void SetCollidersActive(Collider[] colliders, bool active, string[] nameList)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x132E26C", Offset = "0x132E26C", VA = "0x132E26C")]
		public static void SelectChildrenWithMeshRenderer(GameObject[] parentGOs)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x132E270", Offset = "0x132E270", VA = "0x132E270")]
		public static void SelectChildrenWithMeshRenderer(Transform t)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1329890", Offset = "0x1329890", VA = "0x1329890")]
		public static void DestroyChildren(Transform t)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1328E3C", Offset = "0x1328E3C", VA = "0x1328E3C")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x132C930", Offset = "0x132C930", VA = "0x132C930")]
		public static void Destroy(Component c)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x132C9CC", Offset = "0x132C9CC", VA = "0x132C9CC")]
		public static void SetChildrenActive(Transform t, bool active)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x132B6D0", Offset = "0x132B6D0", VA = "0x132B6D0")]
		public static void SnapBoundsAndPreserveArea(ref Bounds bounds, float snapSize, Vector3 offset)
		{
		}

		[Token(Token = "0x6001001")]
		public static void ListRemoveAt<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x132E274", Offset = "0x132E274", VA = "0x132E274")]
		public static void CopyComponent(Component component, GameObject target)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x132E388", Offset = "0x132E388", VA = "0x132E388")]
		public static Transform GetChildRootTransform(Transform t, Transform rootT)
		{
			return null;
		}
	}
	[Token(Token = "0x2000662")]
	public class ReadMe : MonoBehaviour
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttonEdit;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string readme;

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xEBC6D0", Offset = "0xEBC6D0", VA = "0xEBC6D0")]
		public ReadMe()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public class SimpleMove : MonoBehaviour
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rotDirMulti;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveMulti;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotMulti;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 dir;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float t;

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1112B10", Offset = "0x1112B10", VA = "0x1112B10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1112B50", Offset = "0x1112B50", VA = "0x1112B50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1112C60", Offset = "0x1112C60", VA = "0x1112C60")]
		public SimpleMove()
		{
		}
	}
	[Token(Token = "0x2000664")]
	public class SwitchMeshCombineManager : MonoBehaviour
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] gos;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform t;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle style1;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GUIStyle style2;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int selectIndex;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xDB05F8", Offset = "0xDB05F8", VA = "0xDB05F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xDB081C", Offset = "0xDB081C", VA = "0xDB081C")]
		private void SetGosActive(bool active)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xDB0898", Offset = "0xDB0898", VA = "0xDB0898")]
		private void Update()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xDB09F4", Offset = "0xDB09F4", VA = "0xDB09F4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xDB1084", Offset = "0xDB1084", VA = "0xDB1084")]
		public SwitchMeshCombineManager()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public static class TriangleAAB3
	{
	}
	[Token(Token = "0x2000666")]
	public class NavigationCamera : MonoBehaviour
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float fov;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SO_NavigationCamera data;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion rot;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 currentSpeed;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float tStamp;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float deltaTime;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 startPosition;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 position;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion startRotation;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scrollWheel;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x182D398", Offset = "0x182D398", VA = "0x182D398")]
		private void Awake()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x182D410", Offset = "0x182D410", VA = "0x182D410")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x182D46C", Offset = "0x182D46C", VA = "0x182D46C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x182D4A8", Offset = "0x182D4A8", VA = "0x182D4A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x182D9B4", Offset = "0x182D9B4", VA = "0x182D9B4")]
		public void SetCam()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x182D414", Offset = "0x182D414", VA = "0x182D414")]
		public void RestoreCam()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x182D880", Offset = "0x182D880", VA = "0x182D880")]
		private float GetSpeedMulti()
		{
			return default(float);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x182D8E8", Offset = "0x182D8E8", VA = "0x182D8E8")]
		private void Lerp2Way(ref Vector3 v, Vector3 targetV, float upMulti, float downMulti)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x182DA0C", Offset = "0x182DA0C", VA = "0x182DA0C")]
		private void Lerp2Way(ref float v, float targetV, float upMulti, float downMulti)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x182DA58", Offset = "0x182DA58", VA = "0x182DA58")]
		public NavigationCamera()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public class SO_NavigationCamera : ScriptableObject
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSensitity;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedUpLerpMulti;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedDownLerpMulti;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedSlow;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedNormal;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speedFast;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float mouseScrollWheelMulti;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xECC848", Offset = "0xECC848", VA = "0xECC848")]
		public SO_NavigationCamera()
		{
		}
	}
	[Token(Token = "0x2000668")]
	public class BaseOctree
	{
		[Token(Token = "0x2000669")]
		public class Cell
		{
			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cell mainParent;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Cell parent;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool[] cellsUsed;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Bounds bounds;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int cellIndex;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int cellCount;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int level;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int maxLevels;

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x275CBF4", Offset = "0x275CBF4", VA = "0x275CBF4")]
			public Cell()
			{
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x275CBFC", Offset = "0x275CBFC", VA = "0x275CBFC")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x275CC9C", Offset = "0x275CC9C", VA = "0x275CC9C")]
			public Cell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x275CD20", Offset = "0x275CD20", VA = "0x275CD20")]
			public void SetCell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x600101D")]
			protected int AddCell<T, U>(ref T[] cells, Vector3 position, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
				return default(int);
			}

			[Token(Token = "0x600101E")]
			protected T GetCell<T>(T[] cells, Vector3 position)
			{
				return (T)null;
			}

			[Token(Token = "0x600101F")]
			protected void AddCell<T, U>(ref T[] cells, int index, int x, int y, int z, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
			}

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x275CD9C", Offset = "0x275CD9C", VA = "0x275CD9C")]
			public bool InsideBounds(Vector3 position)
			{
				return default(bool);
			}

			[Token(Token = "0x6001021")]
			[Address(RVA = "0x275CE58", Offset = "0x275CE58", VA = "0x275CE58")]
			public void Reset(ref Cell[] cells)
			{
			}
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x103BA2C", Offset = "0x103BA2C", VA = "0x103BA2C")]
		public BaseOctree()
		{
		}
	}
	[Token(Token = "0x200066A")]
	public class ObjectOctree
	{
		[Token(Token = "0x200066B")]
		public class LODParent
		{
			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cellGO;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform cellT;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LODGroup lodGroup;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LODLevel[] lodLevels;

			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hasChanged;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int jobsPending;

			[Token(Token = "0x6001023")]
			[Address(RVA = "0xD9B80C", Offset = "0xD9B80C", VA = "0xD9B80C")]
			public LODParent(int lodCount)
			{
			}

			[Token(Token = "0x6001024")]
			[Address(RVA = "0xD9CAF4", Offset = "0xD9CAF4", VA = "0xD9CAF4")]
			public void AssignLODGroup(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001025")]
			[Address(RVA = "0xD9CCD0", Offset = "0xD9CCD0", VA = "0xD9CCD0")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x200066C")]
		public class LODLevel
		{
			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastList<CachedGameObject> cachedGOs;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<CombineCondition, MeshObjectsHolder> meshObjectsHoldersLookup;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastList<MeshObjectsHolder> changedMeshObjectsHolders;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FastList<MeshRenderer> newMeshRenderers;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int vertCount;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int objectCount;

			[Token(Token = "0x6001026")]
			[Address(RVA = "0xD9C9AC", Offset = "0xD9C9AC", VA = "0xD9C9AC")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0xD9CA24", Offset = "0xD9CA24", VA = "0xD9CA24")]
			public LODLevel()
			{
			}
		}

		[Token(Token = "0x200066D")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int maxCellCount;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LODParent[] lodParents;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<LODParent> changedLodParents;

			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool hasChanged;

			[Token(Token = "0x6001028")]
			[Address(RVA = "0xD9CD3C", Offset = "0xD9CD3C", VA = "0xD9CD3C")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0xD9CDFC", Offset = "0xD9CDFC", VA = "0xD9CDFC")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x200066E")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Cell[] cells;

			[Token(Token = "0x600102A")]
			[Address(RVA = "0xD9B240", Offset = "0xD9B240", VA = "0xD9B240")]
			public Cell()
			{
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0xD9B248", Offset = "0xD9B248", VA = "0xD9B248")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0xD9B250", Offset = "0xD9B250", VA = "0xD9B250")]
			public MaxCell GetCell(Vector3 position)
			{
				return null;
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0xD9B2BC", Offset = "0xD9B2BC", VA = "0xD9B2BC")]
			private MaxCell GetCellInternal(Vector3 position)
			{
				return null;
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0xD9B3A4", Offset = "0xD9B3A4", VA = "0xD9B3A4")]
			public CachedGameObject AddObject(Vector3 position, MeshCombiner meshCombiner, CachedGameObject cachedGO, int lodParentIndex, int lodLevel, bool isChangeMode = false)
			{
				return null;
			}

			[Token(Token = "0x600102F")]
			[Address(RVA = "0xD9B440", Offset = "0xD9B440", VA = "0xD9B440")]
			private void AddObjectInternal(MeshCombiner meshCombiner, CachedGameObject cachedGO, Vector3 position, int lodParentIndex, int lodLevel, bool isChangeMode)
			{
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0xD9BD94", Offset = "0xD9BD94", VA = "0xD9BD94")]
			public void SortObjects(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0xD9B934", Offset = "0xD9B934", VA = "0xD9B934")]
			public bool SortObject(MeshCombiner meshCombiner, LODLevel lod, CachedGameObject cachedGO, bool isChangeMode = false)
			{
				return default(bool);
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0xD9BFA0", Offset = "0xD9BFA0", VA = "0xD9BFA0")]
			public void CombineMeshes(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0xD9C604", Offset = "0xD9C604", VA = "0xD9C604")]
			public void Draw(MeshCombiner meshCombiner, bool onlyMaxLevel, bool drawLevel0)
			{
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x27753F8", Offset = "0x27753F8", VA = "0x27753F8")]
		public ObjectOctree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066F")]
	public class MeshObjectsHolder
	{
		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastList<MeshObject> meshObjects;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectOctree.LODParent lodParent;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FastList<CachedGameObject> newCachedGOs;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodLevel;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material mat;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hasChanged;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CombineCondition combineCondition;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x132D95C", Offset = "0x132D95C", VA = "0x132D95C")]
		public MeshObjectsHolder(ref CombineCondition combineCondition, Material mat)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000670")]
	public class FoundCombineConditions
	{
		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<CombineCondition> combineConditions;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int combineConditionsCount;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int matCount;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lightmapIndexCount;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int shadowCastingCount;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int receiveShadowsCount;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lightmapScale;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int receiveGICount;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int lightProbeUsageCount;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int reflectionProbeUsageCount;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int probeAnchorCount;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int motionVectorGenerationModeCount;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int layerCount;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int staticEditorFlagsCount;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xFCDE3C", Offset = "0xFCDE3C", VA = "0xFCDE3C")]
		public FoundCombineConditions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000671")]
	public struct CombineCondition
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<object> countSet;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int matInstanceId;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int lightmapIndex;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool receiveShadows;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightmapScale;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LightProbeUsage lightProbeUsage;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionProbeUsage reflectionProbeUsage;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform probeAnchor;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MotionVectorGenerationMode motionVectorGenerationMode;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int layer;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int rootInstanceId;

		[Token(Token = "0x1700014B")]
		public static CombineCondition Default
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xE3E98C", Offset = "0xE3E98C", VA = "0xE3E98C")]
			get
			{
				return default(CombineCondition);
			}
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xE3EA1C", Offset = "0xE3EA1C", VA = "0xE3EA1C")]
		public static void MakeFoundReport(FoundCombineConditions fcc)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xE3F9E8", Offset = "0xE3F9E8", VA = "0xE3F9E8")]
		public void ReadFromGameObject(int rootInstanceId, CombineConditionSettings combineConditions, bool copyBakedLighting, GameObject go, Transform t, MeshRenderer mr, Material mat)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xE3FBAC", Offset = "0xE3FBAC", VA = "0xE3FBAC")]
		private float GetLightmapScale(MeshRenderer mr)
		{
			return default(float);
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xE3FBB4", Offset = "0xE3FBB4", VA = "0xE3FBB4")]
		private void SetLightmapScale(MeshRenderer mr, float lightmapScale)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xE3FBB8", Offset = "0xE3FBB8", VA = "0xE3FBB8")]
		public void WriteToGameObject(GameObject go, MeshRenderer mr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000672")]
	public class CombineConditionSettings
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool foldout;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool sameMaterial;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool sameShadowCastingMode;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool sameReceiveShadows;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool sameReceiveGI;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool sameLightmapScale;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool sameLightProbeUsage;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool sameReflectionProbeUsage;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool sameProbeAnchor;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool sameMotionVectorGenerationMode;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool sameStaticEditorFlags;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool sameLayer;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CombineCondition combineCondition;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x15863BC", Offset = "0x15863BC", VA = "0x15863BC")]
		public CombineConditionSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000673")]
	public class MeshObject
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCache meshCache;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshIndex;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 position;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool intersectsSurface;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startNewTriangleIndex;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int newTriangleCount;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool skip;

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x132D8AC", Offset = "0x132D8AC", VA = "0x132D8AC")]
		public MeshObject(CachedGameObject cachedGO, int subMeshIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000674")]
	public class CachedGameObject
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform searchParentT;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilterRevert mfr;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter mf;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh mesh;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Matrix4x4 mt;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Matrix4x4 mtNormals;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform rootT;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 rootTLossyScale;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int rootInstanceId;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool excludeCombine;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool mrEnabled;

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xE2F0BC", Offset = "0xE2F0BC", VA = "0xE2F0BC")]
		public CachedGameObject(Transform searchParentT, GameObject go, Transform t, MeshRenderer mr, MeshFilter mf, Mesh mesh)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xE2F240", Offset = "0xE2F240", VA = "0xE2F240")]
		public CachedGameObject(CachedComponents cachedComponent)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xE2F390", Offset = "0xE2F390", VA = "0xE2F390")]
		public void GetRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000675")]
	public class CachedLodGameObject : CachedGameObject
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 center;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int lodCount;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int lodLevel;

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xE2F400", Offset = "0xE2F400", VA = "0xE2F400")]
		public CachedLodGameObject(CachedGameObject cachedGO, int lodCount, int lodLevel)
		{
		}
	}
	[Token(Token = "0x2000676")]
	public class SectorGrid3D<T>
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastIndexList<Sector3D<T>> sectorList;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sector3D<T>[,,] sectors;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Rect rect;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Int3 sectorCount;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 sectorGridOffset;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 sectorSize;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 halfSectorSize;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 invSectorSize;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 totalSize;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 halfTotalSize;

		[Token(Token = "0x6001043")]
		public SectorGrid3D(Int3 sectorCount, Vector3 sectorSize, Vector3 sectorGridOffset)
		{
		}

		[Token(Token = "0x6001044")]
		public void GetSectors(FastList<Sector3D<T>> list, Vector3 pos, float radius)
		{
		}

		[Token(Token = "0x6001045")]
		public void GetOrCreateSector(Vector3 pos, out Sector3D<T> sector)
		{
		}

		[Token(Token = "0x6001046")]
		public Int3 GetSectorIndex(Vector3 pos)
		{
			return default(Int3);
		}

		[Token(Token = "0x6001047")]
		public Sector3D<T> GetSector(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001048")]
		public Sector3D<T> CreateSector(ref Int3 s)
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		public void RemoveSector(Vector3 pos)
		{
		}

		[Token(Token = "0x600104A")]
		public void RemoveSector(Int3 sectorIndex)
		{
		}

		[Token(Token = "0x600104B")]
		public void Reset()
		{
		}

		[Token(Token = "0x600104C")]
		public void Draw()
		{
		}

		[Token(Token = "0x600104D")]
		public void DrawSectors(FastList<Sector3D<T>> sectors, Color color)
		{
		}
	}
	[Token(Token = "0x2000677")]
	public class Sector3D<T> : FastIndex
	{
		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T list;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bounds bounds;

		[Token(Token = "0x600104E")]
		public Sector3D()
		{
		}
	}
	[Token(Token = "0x2000678")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB18828", Offset = "0xB18828")]
	[ExecuteInEditMode]
	public abstract class MCS_RemoveTris : MonoBehaviour
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<GameObjectLayer> gos;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasRegistered;

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x15739C4", Offset = "0x15739C4", VA = "0x15739C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1573BBC", Offset = "0x1573BBC", VA = "0x1573BBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x15739CC", Offset = "0x15739CC", VA = "0x15739CC")]
		private void Register(bool first)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1573BC4", Offset = "0x1573BC4", VA = "0x1573BC4")]
		private void Init(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1573CCC", Offset = "0x1573CCC", VA = "0x1573CCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1573F40", Offset = "0x1573F40", VA = "0x1573F40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1573CD0", Offset = "0x1573CD0", VA = "0x1573CD0")]
		private void Unregister()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1574088", Offset = "0x1574088", VA = "0x1574088")]
		private void OnCombine(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1573F44", Offset = "0x1573F44", VA = "0x1573F44")]
		private void OnCombineReady(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1573940", Offset = "0x1573940", VA = "0x1573940")]
		protected MCS_RemoveTris()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public struct GameObjectLayer
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int layer;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xFD10C4", Offset = "0xFD10C4", VA = "0xFD10C4")]
		public GameObjectLayer(GameObject go)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xFD1104", Offset = "0xFD1104", VA = "0xFD1104")]
		public void RestoreLayer()
		{
		}
	}
}
namespace HighlightPlus2D
{
	[Token(Token = "0x200067A")]
	public delegate void OnObjectHighlightStartEvent(GameObject obj, ref bool cancelHighlight);
	[Token(Token = "0x200067B")]
	public delegate void OnObjectHighlightEndEvent(GameObject obj);
	[Token(Token = "0x200067C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB18868", Offset = "0xB18868")]
	[ExecuteInEditMode]
	public class HighlightEffect2D : MonoBehaviour
	{
		[Token(Token = "0x200067D")]
		public enum SeeThroughMode
		{
			[Token(Token = "0x4000DE6")]
			WhenHighlighted,
			[Token(Token = "0x4000DE7")]
			AlwaysWhenOccluded,
			[Token(Token = "0x4000DE8")]
			Never
		}

		[Token(Token = "0x200067E")]
		public enum QualityLevel
		{
			[Token(Token = "0x4000DEA")]
			Simple,
			[Token(Token = "0x4000DEB")]
			Medium,
			[Token(Token = "0x4000DEC")]
			High
		}

		[Serializable]
		[Token(Token = "0x200067F")]
		public struct GlowPassData
		{
			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float offset;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float alpha;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;
		}

		[Token(Token = "0x2000680")]
		private struct ModelMaterials
		{
			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform transform;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool currentRenderIsVisible;

			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer renderer;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material fxMatMask;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material fxMatDepthWrite;

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material fxMatGlow;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Material fxMatOutline;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material fxMatSeeThrough;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Material fxMatOverlay;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material fxMatShadow;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Matrix4x4 maskMatrix;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Matrix4x4 effectsMatrix;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Vector2 center;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Vector2 pivotPos;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public float aspectRatio;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public float rectWidth;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public float rectHeight;
		}

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool previewInEditor;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool occluder;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _highlighted;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21548", Offset = "0xB21548")]
		public bool ignore;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool polygonPacking;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21580", Offset = "0xB21580")]
		public float overlay;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color overlayColor;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21598", Offset = "0xB21598")]
		public float overlayMinIntensity;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB215B0", Offset = "0xB215B0")]
		public float overlayBlending;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int overlayRenderQueue;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB215C8", Offset = "0xB215C8")]
		public float outline;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color outlineColor;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float outlineWidth;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB215E0", Offset = "0xB215E0")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21618", Offset = "0xB21618")]
		public bool outlineSmooth;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21650", Offset = "0xB21650")]
		public bool outlineOnTop;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21688", Offset = "0xB21688")]
		public float glow;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float glowWidth;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool glowDithering;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float glowMagicNumber1;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float glowMagicNumber2;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB216A0", Offset = "0xB216A0")]
		public bool glowSmooth;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB216D8", Offset = "0xB216D8")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21710", Offset = "0xB21710")]
		public bool glowOnTop;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21748", Offset = "0xB21748")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21748", Offset = "0xB21748")]
		public float zoomScale;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB217A0", Offset = "0xB217A0")]
		public float shadowIntensity;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color shadowColor;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 shadowOffset;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool shadow3D;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB217D8", Offset = "0xB217D8")]
		public float seeThroughIntensity;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB217F0", Offset = "0xB217F0")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21808", Offset = "0xB21808")]
		public bool pixelSnap;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21840", Offset = "0xB21840")]
		public float alphaCutOff;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21858", Offset = "0xB21858")]
		public bool autoSize;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector2 center;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Vector2 scale;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float aspectRatio;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Vector2 pivotPos;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private ModelMaterials[] rms;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private int rmsCount;

		[Token(Token = "0x4000DC8")]
		private const string UNIFORM_CUTOFF = "_CutOff";

		[Token(Token = "0x4000DC9")]
		private const string UNIFORM_ALPHA_TEX = "_AlphaTex";

		[Token(Token = "0x4000DCA")]
		private const string SKW_PIXELSNAP_ON = "PIXELSNAP_ON";

		[Token(Token = "0x4000DCB")]
		private const string SKW_POLYGON_PACKING = "POLYGON_PACKING";

		[Token(Token = "0x4000DCC")]
		private const string SKW_ETC1_EXTERNAL_ALPHA = "ETC1_EXTERNAL_ALPHA";

		[Token(Token = "0x4000DCD")]
		private const string SKW_SMOOTH_EDGES = "SMOOTH_EDGES";

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector2[] offsetsHQ;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector2[] offsetsMQ;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Material fxMatSpriteMask;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Material fxMatSpriteDepthWrite;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Material fxMatSpriteSeeThrough;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Material fxMatSpriteGlow;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Material fxMatSpriteOutline;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Material fxMatSpriteOverlay;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Material fxMatSpriteShadow;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Material fxMatSpriteShadow3D;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Mesh quadMesh;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<Vector3> vertices;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<int> indices;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private MaterialPropertyBlock outlineProps;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private MaterialPropertyBlock glowProps;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int shaderPropPivotId;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int shaderPropGlowId;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int shaderPropGlowColorId;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private Vector3 scaleBeforeZoom;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Vector3 scaleAfterZoom;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Dictionary<Sprite, Mesh> cachedMeshes;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Dictionary<Texture, Texture> cachedTextures;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool hasSpriteMask;

		[Token(Token = "0x1700014C")]
		public bool highlighted
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x26023E0", Offset = "0x26023E0", VA = "0x26023E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x26023E8", Offset = "0x26023E8", VA = "0x26023E8")]
			set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x2602500", Offset = "0x2602500", VA = "0x2602500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB00", Offset = "0xB2FB00")]
			add
			{
			}
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x26025A0", Offset = "0x26025A0", VA = "0x26025A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB10", Offset = "0xB2FB10")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x2602640", Offset = "0x2602640", VA = "0x2602640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB20", Offset = "0xB2FB20")]
			add
			{
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x26026E0", Offset = "0x26026E0", VA = "0x26026E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB30", Offset = "0xB2FB30")]
			remove
			{
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x2602780", Offset = "0x2602780", VA = "0x2602780")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x2603708", Offset = "0x2603708", VA = "0x2603708")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x260445C", Offset = "0x260445C", VA = "0x260445C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x2604460", Offset = "0x2604460", VA = "0x2604460")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x26044A4", Offset = "0x26044A4", VA = "0x26044A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x26069AC", Offset = "0x26069AC", VA = "0x26069AC")]
		private void InitMaterial(ref Material material, string shaderName)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x2606B60", Offset = "0x2606B60", VA = "0x2606B60")]
		public void SetTarget(Transform transform)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x2602408", Offset = "0x2602408", VA = "0x2602408")]
		public void SetHighlighted(bool state)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x2603068", Offset = "0x2603068", VA = "0x2603068")]
		private void SetupMaterial()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x2602C38", Offset = "0x2602C38", VA = "0x2602C38")]
		private void CheckSpriteSupportDependencies()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x260370C", Offset = "0x260370C", VA = "0x260370C")]
		private void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x2606C54", Offset = "0x2606C54", VA = "0x2606C54")]
		private void ComputeSpriteCenter(int index, Sprite sprite)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x2606EC8", Offset = "0x2606EC8", VA = "0x2606EC8")]
		private void ToggleZoom(Transform target)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x2606570", Offset = "0x2606570", VA = "0x2606570")]
		private Mesh SpriteToMesh(Sprite sprite)
		{
			return null;
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x2606890", Offset = "0x2606890", VA = "0x2606890")]
		private Texture TextureWithBilinearSampling(Texture tex)
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x2607018", Offset = "0x2607018", VA = "0x2607018")]
		public HighlightEffect2D()
		{
		}
	}
	[Token(Token = "0x2000681")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB188B4", Offset = "0xB188B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB188B4", Offset = "0xB188B4")]
	public class HighlightManager2D : MonoBehaviour
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HighlightOnEvent highlightEvent;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21940", Offset = "0xB21940")]
		public float highlightDuration;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask layerMask;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera raycastCamera;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HighlightEffect2D baseEffect;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HighlightEffect2D currentEffect;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform currentObject;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HighlightManager2D _instance;

		[Token(Token = "0x1700014D")]
		public static HighlightManager2D instance
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x1267D88", Offset = "0x1267D88", VA = "0x1267D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000E")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x1267B08", Offset = "0x1267B08", VA = "0x1267B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB40", Offset = "0xB2FB40")]
			add
			{
			}
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x1267BA8", Offset = "0x1267BA8", VA = "0x1267BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB50", Offset = "0xB2FB50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x1267C48", Offset = "0x1267C48", VA = "0x1267C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB60", Offset = "0xB2FB60")]
			add
			{
			}
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x1267CE8", Offset = "0x1267CE8", VA = "0x1267CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB70", Offset = "0xB2FB70")]
			remove
			{
			}
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1267E74", Offset = "0x1267E74", VA = "0x1267E74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x126816C", Offset = "0x126816C", VA = "0x126816C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1268420", Offset = "0x1268420", VA = "0x1268420")]
		private void Update()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1268174", Offset = "0x1268174", VA = "0x1268174")]
		private void SwitchesCollider(Transform newObject)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x12686B4", Offset = "0x12686B4", VA = "0x12686B4")]
		private void CancelHighlight()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x12680B4", Offset = "0x12680B4", VA = "0x12680B4")]
		public static Camera GetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x12686BC", Offset = "0x12686BC", VA = "0x12686BC")]
		public HighlightManager2D()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public enum TriggerMode
	{
		[Token(Token = "0x4000E0D")]
		ColliderEvents,
		[Token(Token = "0x4000E0E")]
		Raycast
	}
	[Token(Token = "0x2000683")]
	public enum RayCastSource
	{
		[Token(Token = "0x4000E10")]
		MousePosition,
		[Token(Token = "0x4000E11")]
		CameraDirection
	}
	[Token(Token = "0x2000684")]
	public enum HighlightOnEvent
	{
		[Token(Token = "0x4000E13")]
		OnOverAndClick,
		[Token(Token = "0x4000E14")]
		OnlyOnOver,
		[Token(Token = "0x4000E15")]
		OnlyOnClick
	}
	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB18938", Offset = "0xB18938")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB18938", Offset = "0xB18938")]
	public class HighlightTrigger2D : MonoBehaviour
	{
		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB189BC", Offset = "0xB189BC")]
		private sealed class <DoRayCast>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightTrigger2D <>4__this;

			[Token(Token = "0x1700014E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0xF16DC8", Offset = "0xF16DC8", VA = "0xF16DC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001095")]
				[Address(RVA = "0xF16E10", Offset = "0xF16E10", VA = "0xF16E10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0xF16A6C", Offset = "0xF16A6C", VA = "0xF16A6C")]
			[DebuggerHidden]
			public <DoRayCast>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0xF16A98", Offset = "0xF16A98", VA = "0xF16A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0xF16A9C", Offset = "0xF16A9C", VA = "0xF16A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0xF16DD0", Offset = "0xF16DD0", VA = "0xF16DD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightOnEvent highlightEvent;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float highlightDuration;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21978", Offset = "0xB21978")]
		public TriggerMode triggerMode;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera raycastCamera;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider2D currentCollider;

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x126A054", Offset = "0x126A054", VA = "0x126A054")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x126A0E8", Offset = "0x126A0E8", VA = "0x126A0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x126A058", Offset = "0x126A058", VA = "0x126A058")]
		public void Init()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x126A3C4", Offset = "0x126A3C4", VA = "0x126A3C4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x126A5AC", Offset = "0x126A5AC", VA = "0x126A5AC")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x126A644", Offset = "0x126A644", VA = "0x126A644")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x126A460", Offset = "0x126A460", VA = "0x126A460")]
		private void Highlight(bool state)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x126A664", Offset = "0x126A664", VA = "0x126A664")]
		private void CancelHighlight()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x126A34C", Offset = "0x126A34C", VA = "0x126A34C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FB80", Offset = "0xB2FB80")]
		private IEnumerator DoRayCast()
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x126A66C", Offset = "0x126A66C", VA = "0x126A66C")]
		private void SwitchCollider(Collider2D newCollider)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x126A714", Offset = "0x126A714", VA = "0x126A714")]
		public HighlightTrigger2D()
		{
		}
	}
}
namespace HighlightPlus2D_Demos
{
	[Token(Token = "0x2000687")]
	public class Demo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB189CC", Offset = "0xB189CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static HighlightPlus2D.OnObjectHighlightStartEvent <>9__1_0;

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x275FEB8", Offset = "0x275FEB8", VA = "0x275FEB8")]
			public <>c()
			{
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x275FEC0", Offset = "0x275FEC0", VA = "0x275FEC0")]
			internal void <Start>b__1_0(GameObject obj, ref bool cancelHighlight)
			{
			}
		}

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject parent;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1125600", Offset = "0x1125600", VA = "0x1125600")]
		private void Start()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x11259C8", Offset = "0x11259C8", VA = "0x11259C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1125A40", Offset = "0x1125A40", VA = "0x1125A40")]
		public Demo()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class PotionHighlightEventSample : MonoBehaviour
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x2788288", Offset = "0x2788288", VA = "0x2788288")]
		private void Start()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x2788340", Offset = "0x2788340", VA = "0x2788340")]
		private void Update()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x278847C", Offset = "0x278847C", VA = "0x278847C")]
		private void ValidateHighlightObject(GameObject obj, ref bool cancelHighlight)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x2788480", Offset = "0x2788480", VA = "0x2788480")]
		private void HighlightStart()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x27884F4", Offset = "0x27884F4", VA = "0x27884F4")]
		private void HighlightEnd()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x2788568", Offset = "0x2788568", VA = "0x2788568")]
		public PotionHighlightEventSample()
		{
		}
	}
}
namespace HighlightPlus
{
	[Token(Token = "0x200068A")]
	public delegate bool OnObjectHighlightStartEvent(GameObject obj);
	[Token(Token = "0x200068B")]
	public delegate void OnObjectHighlightEndEvent(GameObject obj);
	[Token(Token = "0x200068C")]
	public delegate bool OnRendererHighlightEvent(Renderer renderer);
	[Token(Token = "0x200068D")]
	public enum SeeThroughMode
	{
		[Token(Token = "0x4000E23")]
		WhenHighlighted,
		[Token(Token = "0x4000E24")]
		AlwaysWhenOccluded,
		[Token(Token = "0x4000E25")]
		Never
	}
	[Token(Token = "0x200068E")]
	public enum QualityLevel
	{
		[Token(Token = "0x4000E27")]
		Fastest,
		[Token(Token = "0x4000E28")]
		High,
		[Token(Token = "0x4000E29")]
		Highest
	}
	[Token(Token = "0x200068F")]
	public enum TargetOptions
	{
		[Token(Token = "0x4000E2B")]
		Children,
		[Token(Token = "0x4000E2C")]
		OnlyThisObject,
		[Token(Token = "0x4000E2D")]
		RootToChildren,
		[Token(Token = "0x4000E2E")]
		LayerInScene,
		[Token(Token = "0x4000E2F")]
		LayerInChildren
	}
	[Token(Token = "0x2000690")]
	public enum Visibility
	{
		[Token(Token = "0x4000E31")]
		Normal,
		[Token(Token = "0x4000E32")]
		AlwaysOnTop,
		[Token(Token = "0x4000E33")]
		OnlyWhenOccluded
	}
	[Token(Token = "0x2000691")]
	public enum GlowBlendMode
	{
		[Token(Token = "0x4000E35")]
		Additive,
		[Token(Token = "0x4000E36")]
		AlphaBlend
	}
	[Serializable]
	[Token(Token = "0x2000692")]
	public struct GlowPassData
	{
		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offset;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float alpha;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;
	}
	[Token(Token = "0x2000693")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB189DC", Offset = "0xB189DC")]
	public class HighlightEffect : MonoBehaviour
	{
		[Token(Token = "0x2000694")]
		private struct ModelMaterials
		{
			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool render;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bakedTransform;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 currentPosition;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 currentRotation;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 currentScale;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool renderWasVisibleDuringSetup;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh mesh;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Mesh originalMesh;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Renderer renderer;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool skinnedMesh;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material[] fxMatMask;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Material[] fxMatSolidColor;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Material[] fxMatSeeThroughInner;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Material[] fxMatSeeThroughBorder;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Material[] fxMatOverlay;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Material[] fxMatInnerGlow;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Matrix4x4 renderingMatrix;
		}

		[Token(Token = "0x2000695")]
		private enum FadingState
		{
			[Token(Token = "0x4000ED8")]
			FadingOut = -1,
			[Token(Token = "0x4000ED9")]
			NoFading,
			[Token(Token = "0x4000EDA")]
			FadingIn
		}

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18A28", Offset = "0xB18A28")]
		private sealed class <OverlayOneShotAnimator>d__179 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightEffect <>4__this;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color color;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startTime>5__2;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__3;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityEngine.WaitForEndOfFrame <ef>5__4;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E2")]
				[Address(RVA = "0xF16584", Offset = "0xF16584", VA = "0xF16584", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E4")]
				[Address(RVA = "0xF165CC", Offset = "0xF165CC", VA = "0xF165CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xF1640C", Offset = "0xF1640C", VA = "0xF1640C")]
			[DebuggerHidden]
			public <OverlayOneShotAnimator>d__179(int <>1__state)
			{
			}

			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xF16438", Offset = "0xF16438", VA = "0xF16438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xF1643C", Offset = "0xF1643C", VA = "0xF1643C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xF1658C", Offset = "0xF1658C", VA = "0xF1658C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightProfile profile;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB219B0", Offset = "0xB219B0")]
		public bool profileSync;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool previewInEditor;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB219E8", Offset = "0xB219E8")]
		public float alphaCutOff;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullBackFaces;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21A00", Offset = "0xB21A00")]
		public bool ignoreObjectVisibility;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21A38", Offset = "0xB21A38")]
		public bool reflectionProbes;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21A70", Offset = "0xB21A70")]
		public bool ignore;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _highlighted;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInDuration;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeOutDuration;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool flipY;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool constantWidth;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21AB8", Offset = "0xB21AB8")]
		public float overlay;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color overlayColor;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21AD0", Offset = "0xB21AD0")]
		public float overlayMinIntensity;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21AE8", Offset = "0xB21AE8")]
		public float overlayBlending;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21B00", Offset = "0xB21B00")]
		public float outline;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color outlineColor;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float outlineWidth;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21B18", Offset = "0xB21B18")]
		public int outlineDownsampling;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool outlineBlitDebug;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool outlineIndependent;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21B30", Offset = "0xB21B30")]
		public float glow;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float glowWidth;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21B48", Offset = "0xB21B48")]
		public int glowDownsampling;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color glowHQColor;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool glowDithering;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GlowBlendMode glowBlendMode;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float glowMagicNumber1;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float glowMagicNumber2;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Visibility glowVisibility;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool glowOptimalBlit;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		public bool glowBlitDebug;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21B60", Offset = "0xB21B60")]
		public float innerGlow;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21B78", Offset = "0xB21B78")]
		public float innerGlowWidth;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color innerGlowColor;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool targetFX;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Color targetFXColor;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform targetFXCenter;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float targetFXInitialScale;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float targetFXEndScale;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float targetFXStayDuration;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public LayerMask seeThroughOccluderMask;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21BC0", Offset = "0xB21BC0")]
		public float seeThroughOccluderThreshold;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float seeThroughOccluderCheckInterval;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21BE0", Offset = "0xB21BE0")]
		public float seeThroughIntensity;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21BF8", Offset = "0xB21BF8")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21C10", Offset = "0xB21C10")]
		public float seeThroughNoise;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21C28", Offset = "0xB21C28")]
		public float seeThroughBorder;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Color seeThroughBorderColor;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float seeThroughBorderWidth;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private ModelMaterials[] rms;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[HideInInspector]
		private int rmsCount;

		[NonSerialized]
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform target;

		[NonSerialized]
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float highlightStartTime;

		[Token(Token = "0x4000E84")]
		private const string SKW_ALPHACLIP = "HP_ALPHACLIP";

		[Token(Token = "0x4000E85")]
		private const string UNIFORM_CUTOFF = "_CutOff";

		[Token(Token = "0x4000E86")]
		private const float TAU = 0.70711f;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fxMatMask;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material fxMatSolidColor;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material fxMatSeeThroughInner;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material fxMatSeeThroughBorder;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Material fxMatOverlay;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Material fxMatGlow;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Material fxMatInnerGlow;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Material fxMatOutline;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Material fxMatTarget;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Material fxMatComposeGlow;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material fxMatComposeOutline;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Material fxMatBlurGlow;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Material fxMatBlurOutline;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector3[] offsets;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float fadeStartTime;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private FadingState fading;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private CommandBuffer cbMask;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private CommandBuffer cbSeeThrough;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private CommandBuffer cbGlow;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private CommandBuffer cbOutline;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private CommandBuffer cbOverlay;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private CommandBuffer cbInnerGlow;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer cbSmoothBlend;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private int[] mipGlowBuffers;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private int[] mipOutlineBuffers;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int glowRT;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private int outlineRT;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Mesh quadMesh;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int sourceRT;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private Matrix4x4 quadGlowMatrix;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Matrix4x4 quadOutlineMatrix;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Vector3[] corners;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private RenderTextureDescriptor sourceDesc;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private Color debugColor;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private Color blackColor;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private Visibility lastOutlineVisibility;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private bool requireUpdateMaterial;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x329")]
		private bool usingPipeline;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private float occlusionCheckLastTime;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private bool lastOcclusionTestResult;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private List<Renderer> tempRR;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<Vector3> vertices;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static List<Vector3> normals;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector3[] newNormals;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int[] matches;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Dictionary<Vector3, int> vv;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Dictionary<Mesh, Mesh> smoothMeshes;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private bool overlayOneShotRunning;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x341")]
		private bool currentHighlighted;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private Color overlayOneShotCurrentColor;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		private float overlayOneShotCurrentAnimationSpeed;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private float overlayOneShotCurrentOverlay;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		private float overlayOneShotCurrentOuterGlow;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private float overlayOneShotCurrentInnerGlow;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		private float overlayOneShotCurrentOutline;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private float overlayOneShotCurrentSeeThroughIntensity;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private Coroutine overlayOneShotCo;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static List<HighlightSeeThroughOccluder> occluders;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Dictionary<Camera, int> occludersFrameCount;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static CommandBuffer cbOccluder;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Material fxMatOccluder;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private bool cancelSeeThroughThisFrame;

		[Token(Token = "0x17000150")]
		public bool highlighted
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x25F8518", Offset = "0x25F8518", VA = "0x25F8518")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x25F8520", Offset = "0x25F8520", VA = "0x25F8520")]
			set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x25F872C", Offset = "0x25F872C", VA = "0x25F872C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC30", Offset = "0xB2FC30")]
			add
			{
			}
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x25F87D0", Offset = "0x25F87D0", VA = "0x25F87D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC40", Offset = "0xB2FC40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x25F8874", Offset = "0x25F8874", VA = "0x25F8874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC50", Offset = "0xB2FC50")]
			add
			{
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x25F8918", Offset = "0x25F8918", VA = "0x25F8918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC60", Offset = "0xB2FC60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event OnRendererHighlightEvent OnRendererHighlightStart
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x25F89BC", Offset = "0x25F89BC", VA = "0x25F89BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC70", Offset = "0xB2FC70")]
			add
			{
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x25F8A60", Offset = "0x25F8A60", VA = "0x25F8A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC80", Offset = "0xB2FC80")]
			remove
			{
			}
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x25F8B04", Offset = "0x25F8B04", VA = "0x25F8B04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x25FA1BC", Offset = "0x25FA1BC", VA = "0x25FA1BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x25FB364", Offset = "0x25FB364", VA = "0x25FB364")]
		private void SRPAfterCameraRenders(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x25FDF1C", Offset = "0x25FDF1C", VA = "0x25FDF1C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x25FDF20", Offset = "0x25FDF20", VA = "0x25FDF20")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x25FDF58", Offset = "0x25FDF58", VA = "0x25FDF58")]
		public void ProfileLoad(HighlightProfile profile)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x25FDFF8", Offset = "0x25FDFF8", VA = "0x25FDFF8")]
		public void ProfileReload()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x25FE08C", Offset = "0x25FE08C", VA = "0x25FE08C")]
		public void ProfileSaveChanges(HighlightProfile profile)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x25FE12C", Offset = "0x25FE12C", VA = "0x25FE12C")]
		public void ProfileSaveChanges()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x25FE1C0", Offset = "0x25FE1C0", VA = "0x25FE1C0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x25FB410", Offset = "0x25FB410", VA = "0x25FB410")]
		private void DoOnRenderObject(Camera cam)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x25FF150", Offset = "0x25FF150", VA = "0x25FF150")]
		private bool ComputeSmoothQuadMatrix(Camera cam, Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x2600718", Offset = "0x2600718", VA = "0x2600718")]
		private void BuildMatrix(Camera cam, Vector3 scrMin, Vector3 scrMax, int border, ref Matrix4x4 quadMatrix)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x25FF4E8", Offset = "0x25FF4E8", VA = "0x25FF4E8")]
		private void SmoothGlow(int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x25FFAC0", Offset = "0x25FFAC0", VA = "0x25FFAC0")]
		private void SmoothOutline(int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x2600098", Offset = "0x2600098", VA = "0x2600098")]
		private void ComposeSmoothBlend(Visibility smoothGlowVisibility, Visibility smoothOutlineVisibility)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x260090C", Offset = "0x260090C", VA = "0x260090C")]
		private void InitMaterial(ref Material material, string shaderName)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x2600AC0", Offset = "0x2600AC0", VA = "0x2600AC0")]
		public void SetTarget(Transform transform)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x25F8528", Offset = "0x25F8528", VA = "0x25F8528")]
		public void SetHighlighted(bool state)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x25F9614", Offset = "0x25F9614", VA = "0x25F9614")]
		private void SetupMaterial()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x2600BA8", Offset = "0x2600BA8", VA = "0x2600BA8")]
		private Renderer[] FindRenderersWithLayerInScene(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x2600D88", Offset = "0x2600D88", VA = "0x2600D88")]
		private Renderer[] FindRenderersWithLayerInChildren(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x25F93C4", Offset = "0x25F93C4", VA = "0x25F93C4")]
		private void CheckGeometrySupportDependencies()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x2600F44", Offset = "0x2600F44", VA = "0x2600F44")]
		private void CheckCommandBuffers()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x25FF0A8", Offset = "0x25FF0A8", VA = "0x25FF0A8")]
		private void CheckBlurCommandBuffer()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x26011D8", Offset = "0x26011D8", VA = "0x26011D8")]
		private Material[] Fork(Material mat, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x25FED08", Offset = "0x25FED08", VA = "0x25FED08")]
		private void BakeTransform(int objIndex, bool duplicateMesh)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x2601C90", Offset = "0x2601C90", VA = "0x2601C90")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x25FA280", Offset = "0x25FA280", VA = "0x25FA280")]
		private void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x26008EC", Offset = "0x26008EC", VA = "0x26008EC")]
		private int GetZTestValue(Visibility param)
		{
			return default(int);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x25F90F0", Offset = "0x25F90F0", VA = "0x25F90F0")]
		private void BuildQuad()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x25FE9E8", Offset = "0x25FE9E8", VA = "0x25FE9E8")]
		private bool CheckOcclusion(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x2601368", Offset = "0x2601368", VA = "0x2601368")]
		private void AverageNormals(int objIndex)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x2601CD4", Offset = "0x2601CD4", VA = "0x2601CD4")]
		public void OverlayOneShot(Color color, float duration)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x2601E50", Offset = "0x2601E50", VA = "0x2601E50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FC90", Offset = "0xB2FC90")]
		private IEnumerator OverlayOneShotAnimator(Color color, float duration)
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x2601DE0", Offset = "0x2601DE0", VA = "0x2601DE0")]
		private void OverlayOneShotEnd()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x2601F00", Offset = "0x2601F00", VA = "0x2601F00")]
		public static void RegisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x2601FE4", Offset = "0x2601FE4", VA = "0x2601FE4")]
		public static void UnregisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x25FE1F8", Offset = "0x25FE1F8", VA = "0x25FE1F8")]
		public void RenderOccluders(Camera cam)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x26020C8", Offset = "0x26020C8", VA = "0x26020C8")]
		public HighlightEffect()
		{
		}
	}
	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB18A38", Offset = "0xB18A38")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB18A38", Offset = "0xB18A38")]
	public class HighlightManager : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21CB0", Offset = "0xB21CB0")]
		public float maxDistance;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HighlightEffect baseEffect;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HighlightEffect currentEffect;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentObject;

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1267348", Offset = "0x1267348", VA = "0x1267348")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1267640", Offset = "0x1267640", VA = "0x1267640")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x126785C", Offset = "0x126785C", VA = "0x126785C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1267648", Offset = "0x1267648", VA = "0x1267648")]
		private void SwitchesCollider(Transform newObject)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1267588", Offset = "0x1267588", VA = "0x1267588")]
		public static Camera GetCamera()
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1267AD4", Offset = "0x1267AD4", VA = "0x1267AD4")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x2000698")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18ABC", Offset = "0xB18ABC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB18ABC", Offset = "0xB18ABC")]
	public class HighlightProfile : ScriptableObject
	{
		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21CE8", Offset = "0xB21CE8")]
		public float alphaCutOff;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool cullBackFaces;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeInDuration;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeOutDuration;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D00", Offset = "0xB21D00")]
		public float overlay;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color overlayColor;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D18", Offset = "0xB21D18")]
		public float overlayMinIntensity;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D30", Offset = "0xB21D30")]
		public float overlayBlending;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D48", Offset = "0xB21D48")]
		public float outline;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color outlineColor;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float outlineWidth;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool outlineIndependent;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D60", Offset = "0xB21D60")]
		public float glow;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float glowWidth;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color glowHQColor;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool glowDithering;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float glowMagicNumber1;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float glowMagicNumber2;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Visibility glowVisibility;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D78", Offset = "0xB21D78")]
		public float innerGlow;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21D90", Offset = "0xB21D90")]
		public float innerGlowWidth;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Color innerGlowColor;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool targetFX;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color targetFXColor;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float targetFXInitialScale;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float targetFXEndScale;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float targetFXStayDuration;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask seeThroughOccluderMask;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21DA8", Offset = "0xB21DA8")]
		public float seeThroughOccluderThreshold;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float seeThroughOccluderCheckInterval;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21DC8", Offset = "0xB21DC8")]
		public float seeThroughIntensity;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21DE0", Offset = "0xB21DE0")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21DF8", Offset = "0xB21DF8")]
		public float seeThroughNoise;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21E10", Offset = "0xB21E10")]
		public float seeThroughBorder;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public Color seeThroughBorderColor;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float seeThroughBorderWidth;

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x12687D0", Offset = "0x12687D0", VA = "0x12687D0")]
		public void Load(HighlightEffect effect)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1268AB4", Offset = "0x1268AB4", VA = "0x1268AB4")]
		public void Save(HighlightEffect effect)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x12689C8", Offset = "0x12689C8", VA = "0x12689C8")]
		private GlowPassData[] GetGlowPassesCopy(GlowPassData[] glowPasses)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1268CA0", Offset = "0x1268CA0", VA = "0x1268CA0")]
		public HighlightProfile()
		{
		}
	}
	[Token(Token = "0x2000699")]
	public struct MeshData
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshCount;
	}
	[Token(Token = "0x200069A")]
	public enum DetectionMethod
	{
		[Token(Token = "0x4000F1F")]
		Stencil,
		[Token(Token = "0x4000F20")]
		CapsuleCast
	}
	[Token(Token = "0x200069B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB18B54", Offset = "0xB18B54")]
	[ExecuteInEditMode]
	public class HighlightSeeThroughOccluder : MonoBehaviour
	{
		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DetectionMethod detectionMethod;

		[NonSerialized]
		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshData[] meshData;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Renderer> rr;

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1268E18", Offset = "0x1268E18", VA = "0x1268E18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1268E60", Offset = "0x1268E60", VA = "0x1268E60")]
		private void Init()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x12692F8", Offset = "0x12692F8", VA = "0x12692F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x126935C", Offset = "0x126935C", VA = "0x126935C")]
		public HighlightSeeThroughOccluder()
		{
		}
	}
	[Token(Token = "0x200069C")]
	public enum TriggerMode
	{
		[Token(Token = "0x4000F25")]
		ColliderEventsOnlyOnThisObject,
		[Token(Token = "0x4000F26")]
		RaycastOnThisObjectAndChildren
	}
	[Token(Token = "0x200069D")]
	public enum RayCastSource
	{
		[Token(Token = "0x4000F28")]
		MousePosition,
		[Token(Token = "0x4000F29")]
		CameraDirection
	}
	[Token(Token = "0x200069E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB18BA0", Offset = "0xB18BA0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB18BA0", Offset = "0xB18BA0")]
	[ExecuteInEditMode]
	public class HighlightTrigger : MonoBehaviour
	{
		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18C34", Offset = "0xB18C34")]
		private sealed class <DoRayCast>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightTrigger <>4__this;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001100")]
				[Address(RVA = "0xF16A1C", Offset = "0xF16A1C", VA = "0xF16A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001102")]
				[Address(RVA = "0xF16A64", Offset = "0xF16A64", VA = "0xF16A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xF16654", Offset = "0xF16654", VA = "0xF16654")]
			[DebuggerHidden]
			public <DoRayCast>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xF16680", Offset = "0xF16680", VA = "0xF16680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xF16684", Offset = "0xF16684", VA = "0xF16684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001101")]
			[Address(RVA = "0xF16A24", Offset = "0xF16A24", VA = "0xF16A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB21E28", Offset = "0xB21E28")]
		public TriggerMode triggerMode;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxDistance;

		[Token(Token = "0x4000F2E")]
		private const int MAX_RAYCAST_HITS = 100;

		[NonSerialized]
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider[] colliders;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider currentCollider;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] hits;

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1269978", Offset = "0x1269978", VA = "0x1269978")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1269A58", Offset = "0x1269A58", VA = "0x1269A58")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1269D2C", Offset = "0x1269D2C", VA = "0x1269D2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FD40", Offset = "0xB2FD40")]
		private IEnumerator DoRayCast()
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1269DA4", Offset = "0x1269DA4", VA = "0x1269DA4")]
		private void SwitchCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1269F80", Offset = "0x1269F80", VA = "0x1269F80")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1269FC4", Offset = "0x1269FC4", VA = "0x1269FC4")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x126A008", Offset = "0x126A008", VA = "0x126A008")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1269E4C", Offset = "0x1269E4C", VA = "0x1269E4C")]
		private void Highlight(bool state)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x126997C", Offset = "0x126997C", VA = "0x126997C")]
		public void Init()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x126A04C", Offset = "0x126A04C", VA = "0x126A04C")]
		public HighlightTrigger()
		{
		}
	}
}
namespace HighlightPlus.Demos
{
	[Token(Token = "0x20006A0")]
	public class SphereHighlightEventExample : MonoBehaviour
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HighlightEffect effect;

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xDAB07C", Offset = "0xDAB07C", VA = "0xDAB07C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xDAB140", Offset = "0xDAB140", VA = "0xDAB140")]
		private bool ValidateHighlightObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xDAB148", Offset = "0xDAB148", VA = "0xDAB148")]
		private void HighlightStart()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xDAB1BC", Offset = "0xDAB1BC", VA = "0xDAB1BC")]
		private void HighlightEnd()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xDAB230", Offset = "0xDAB230", VA = "0xDAB230")]
		private void Update()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xDAB28C", Offset = "0xDAB28C", VA = "0xDAB28C")]
		public SphereHighlightEventExample()
		{
		}
	}
}
namespace HitchHiker
{
	[Token(Token = "0x20006A1")]
	public class DebugLogAnyIncontrolInput : MonoBehaviour
	{
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1124D8C", Offset = "0x1124D8C", VA = "0x1124D8C")]
		public DebugLogAnyIncontrolInput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A2")]
	public class ResourceSprite : ResourceAsset<Sprite>
	{
		[Token(Token = "0x600110A")]
		[Address(RVA = "0xEC9524", Offset = "0xEC9524", VA = "0xEC9524")]
		public ResourceSprite()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A3")]
	public class PrefabResource : ResourceAsset<GameObject>
	{
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x2788A50", Offset = "0x2788A50", VA = "0x2788A50")]
		public PrefabResource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A4")]
	public class VideoClipResource : ResourceAsset<UnityEngine.Video.VideoClip>
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x273F570", Offset = "0x273F570", VA = "0x273F570")]
		public VideoClipResource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A5")]
	public class AppleSplashSpriteResource : ResourceSprite
	{
		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ratioLeft;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ratioRight;

		[Token(Token = "0x17000155")]
		public float ratio
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x1031CF4", Offset = "0x1031CF4", VA = "0x1031CF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1032684", Offset = "0x1032684", VA = "0x1032684")]
		public AppleSplashSpriteResource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A6")]
	public class AppleSplashVideoResource
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB21E60", Offset = "0xB21E60")]
		public VideoClipResource clipResource;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB21E98", Offset = "0xB21E98")]
		public Vector2 resolution;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float aspectRatio;

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x103268C", Offset = "0x103268C", VA = "0x103268C")]
		private bool OnClipValidate(VideoClipResource cr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1032754", Offset = "0x1032754", VA = "0x1032754")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x103275C", Offset = "0x103275C", VA = "0x103275C")]
		public AppleSplashVideoResource()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18C44", Offset = "0xB18C44")]
	public class AppleSplashResourceContainer : SpriteResourceContainerBase
	{
		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AppleSplashSpriteResource> spriteResources;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AppleSplashVideoResource> videoResources;

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1031B3C", Offset = "0x1031B3C", VA = "0x1031B3C", Slot = "4")]
		public override ResourceSprite GetSpriteResource()
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1031D08", Offset = "0x1031D08", VA = "0x1031D08")]
		public VideoClipResource GetVideoClipResource()
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1031D00", Offset = "0x1031D00", VA = "0x1031D00")]
		private float FloatDistance(float A, float B)
		{
			return default(float);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x103267C", Offset = "0x103267C", VA = "0x103267C")]
		public AppleSplashResourceContainer()
		{
		}
	}
	[Token(Token = "0x20006A8")]
	public class CanvasGroupCurveFaderUtil
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.CanvasGroup group;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float currentTime;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float seconds;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float startValue;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float endValue;

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xE331C0", Offset = "0xE331C0", VA = "0xE331C0")]
		public CanvasGroupCurveFaderUtil(UnityEngine.CanvasGroup _group)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xE331F4", Offset = "0xE331F4", VA = "0xE331F4")]
		public void ConfigFadeTo(float to, float seconds, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xE33254", Offset = "0xE33254", VA = "0xE33254")]
		public void ConfigFadeFromTo(float from, float to, float seconds, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xE33288", Offset = "0xE33288", VA = "0xE33288")]
		private void PrepareFade(AnimationCurve curve)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xE332B4", Offset = "0xE332B4", VA = "0xE332B4")]
		public void ForceSetAlpha(float alpha)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xE332D0", Offset = "0xE332D0", VA = "0xE332D0")]
		public bool OnUpdate(float deltaTime)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006A9")]
	public class BlackSphereEffect : MonoBehaviour
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraEffect controller;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public new GameObject gameObject;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator animator;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerCameraController player;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image fadeImage;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _prevActive;

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x103C26C", Offset = "0x103C26C", VA = "0x103C26C")]
		public void StartEffect()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x103C2D8", Offset = "0x103C2D8", VA = "0x103C2D8")]
		public void UpdateEffect()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x103C56C", Offset = "0x103C56C", VA = "0x103C56C")]
		public void StopEffect()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x103C618", Offset = "0x103C618", VA = "0x103C618")]
		public void FinishedEffect()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x103C61C", Offset = "0x103C61C", VA = "0x103C61C")]
		public BlackSphereEffect()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public class LighningStorm : MonoBehaviour
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Animator lightningFX;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21EE0", Offset = "0xB21EE0")]
		public float strikesPerSecond;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[EventRef]
		private string _lightingStrikeEvent;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _fxLength;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 _minPos;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 _maxPos;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _idleState;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _strikeCountdown;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundService _soundService;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StudioEventEmitter _lightningEventEmitter;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xEB256C", Offset = "0xEB256C", VA = "0xEB256C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xEB2650", Offset = "0xEB2650", VA = "0xEB2650")]
		private void Update()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xEB2854", Offset = "0xEB2854", VA = "0xEB2854")]
		private void NextStrikeCountdown()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xEB2880", Offset = "0xEB2880", VA = "0xEB2880")]
		public void SetStrikesPerSecond(float sps)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xEB2788", Offset = "0xEB2788", VA = "0xEB2788")]
		private void StrikeNow()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xEB28D4", Offset = "0xEB28D4", VA = "0xEB28D4")]
		public LighningStorm()
		{
		}
	}
	[Token(Token = "0x20006AB")]
	public class Rain : MonoBehaviour
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rainRotator;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> rainDrums;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float drumRotationSpeed;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material rainMaterial;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minClip;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxClip;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB21F58", Offset = "0xB21F58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21F58", Offset = "0xB21F58")]
		public float intensity;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21FAC", Offset = "0xB21FAC")]
		public float rainDirection;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB21FC4", Offset = "0xB21FC4")]
		public float windSpeed;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isUpdating;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vector3> rainDrumRotation;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x27923E8", Offset = "0x27923E8", VA = "0x27923E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x2792508", Offset = "0x2792508", VA = "0x2792508")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x279273C", Offset = "0x279273C", VA = "0x279273C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x27923EC", Offset = "0x27923EC", VA = "0x27923EC")]
		private void GenerateDrumRotations()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x2792740", Offset = "0x2792740", VA = "0x2792740")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x2792A30", Offset = "0x2792A30", VA = "0x2792A30")]
		public void ApplyIntensity(float controlValue)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x279250C", Offset = "0x279250C", VA = "0x279250C")]
		private void CheckStartStopUpdating()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x2792B38", Offset = "0x2792B38", VA = "0x2792B38")]
		public void ApplySpeed(float controlValue)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x2792B40", Offset = "0x2792B40", VA = "0x2792B40")]
		public void ApplyDirection(float controlValue)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x2792B48", Offset = "0x2792B48", VA = "0x2792B48")]
		private bool ValidateIntensity(float input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x2792B64", Offset = "0x2792B64", VA = "0x2792B64")]
		private bool ValidateDirection(float input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x2792938", Offset = "0x2792938", VA = "0x2792938")]
		private void UpdateDirection()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x2792B7C", Offset = "0x2792B7C", VA = "0x2792B7C")]
		public Rain()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public class TumbleweedController : MonoBehaviour
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> goList;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RandomizeRotation rotationRandomizer;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float phase;

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xDB835C", Offset = "0xDB835C", VA = "0xDB835C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xDB8550", Offset = "0xDB8550", VA = "0xDB8550")]
		private void StartAnimator()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xDB8680", Offset = "0xDB8680", VA = "0xDB8680")]
		private void Update()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xDB8700", Offset = "0xDB8700", VA = "0xDB8700")]
		public TumbleweedController()
		{
		}
	}
	[Token(Token = "0x20006AD")]
	public class Main : SerializedMonoBehaviour
	{
		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18CAC", Offset = "0xB18CAC")]
		private sealed class <WaitForCompletion>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Main <>4__this;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Action> action;

			[Token(Token = "0x17000156")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114B")]
				[Address(RVA = "0xF221BC", Offset = "0xF221BC", VA = "0xF221BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000157")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114D")]
				[Address(RVA = "0xF22204", Offset = "0xF22204", VA = "0xF22204", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001148")]
			[Address(RVA = "0xF22080", Offset = "0xF22080", VA = "0xF22080")]
			[DebuggerHidden]
			public <WaitForCompletion>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001149")]
			[Address(RVA = "0xF220AC", Offset = "0xF220AC", VA = "0xF220AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0xF220B0", Offset = "0xF220B0", VA = "0xF220B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0xF221C4", Offset = "0xF221C4", VA = "0xF221C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18CBC", Offset = "0xB18CBC")]
		private sealed class <ParallelCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Action> action;

			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCompletion;

			[Token(Token = "0x17000158")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001151")]
				[Address(RVA = "0xF200EC", Offset = "0xF200EC", VA = "0xF200EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000159")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001153")]
				[Address(RVA = "0xF20134", Offset = "0xF20134", VA = "0xF20134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114E")]
			[Address(RVA = "0xF20024", Offset = "0xF20024", VA = "0xF20024")]
			[DebuggerHidden]
			public <ParallelCoroutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600114F")]
			[Address(RVA = "0xF20050", Offset = "0xF20050", VA = "0xF20050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001150")]
			[Address(RVA = "0xF20054", Offset = "0xF20054", VA = "0xF20054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001152")]
			[Address(RVA = "0xF200F4", Offset = "0xF200F4", VA = "0xF200F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18CCC", Offset = "0xB18CCC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputService inputService;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isFirstRun;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Coroutine skipCoroutine;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Main <>4__this;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SimpleSignal skipSignal;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool locaServiceInitialized;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__2;

			[Token(Token = "0x6001154")]
			[Address(RVA = "0xF1F544", Offset = "0xF1F544", VA = "0xF1F544")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001155")]
			[Address(RVA = "0xF1F54C", Offset = "0xF1F54C", VA = "0xF1F54C")]
			internal void <Start>b__0(InputService _inputService)
			{
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0xF1F8AC", Offset = "0xF1F8AC", VA = "0xF1F8AC")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x6001157")]
			[Address(RVA = "0xF1F8C8", Offset = "0xF1F8C8", VA = "0xF1F8C8")]
			internal void <Start>b__1(LocalizationService localizationService)
			{
			}
		}

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18CDC", Offset = "0xB18CDC")]
		private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Main <>4__this;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass24_0 <>8__1;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <delayServiceInitOnFirstRun>5__2;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<SplashScreen> <splashScreens>5__3;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <locaServiceScheduledForInit>5__4;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SplashScreen <lastSplash>5__5;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private AsyncProgressReporter <subProgressReporter>5__6;

			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private SceneManagementService <sceneService>5__7;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__8;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<SplashScreen>.Enumerator <>7__wrap8;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private SplashScreen <currentSplash>5__10;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private AuthenticationService <authenticationService>5__11;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private AchievementService <achievementService>5__12;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private GOGService <gogService>5__13;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private GameObject <instantiatedAutoDetect>5__14;

			[Token(Token = "0x1700015A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115C")]
				[Address(RVA = "0xF22030", Offset = "0xF22030", VA = "0xF22030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115E")]
				[Address(RVA = "0xF22078", Offset = "0xF22078", VA = "0xF22078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001158")]
			[Address(RVA = "0xF2023C", Offset = "0xF2023C", VA = "0xF2023C")]
			[DebuggerHidden]
			public <Start>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0xF20268", Offset = "0xF20268", VA = "0xF20268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0xF202DC", Offset = "0xF202DC", VA = "0xF202DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0xF20288", Offset = "0xF20288", VA = "0xF20288")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0xF22038", Offset = "0xF22038", VA = "0xF22038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18CEC", Offset = "0xB18CEC")]
		private sealed class <OnBeforeMainMenuActivation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Main <>4__this;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntroOverlayController <_introOverlayController>5__2;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerService <playerService>5__3;

			[Token(Token = "0x1700015C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001162")]
				[Address(RVA = "0xF1FFD4", Offset = "0xF1FFD4", VA = "0xF1FFD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001164")]
				[Address(RVA = "0xF2001C", Offset = "0xF2001C", VA = "0xF2001C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600115F")]
			[Address(RVA = "0xF1F8D4", Offset = "0xF1F8D4", VA = "0xF1F8D4")]
			[DebuggerHidden]
			public <OnBeforeMainMenuActivation>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001160")]
			[Address(RVA = "0xF1F900", Offset = "0xF1F900", VA = "0xF1F900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001161")]
			[Address(RVA = "0xF1F904", Offset = "0xF1F904", VA = "0xF1F904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0xF1FFDC", Offset = "0xF1FFDC", VA = "0xF1FFDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18CFC", Offset = "0xB18CFC")]
		private sealed class <WaitUntilServicesNotBusyAnymore>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InitServiceQueue initServiceQueue;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeout>5__2;

			[Token(Token = "0x1700015E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001168")]
				[Address(RVA = "0xF222F4", Offset = "0xF222F4", VA = "0xF222F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116A")]
				[Address(RVA = "0xF2233C", Offset = "0xF2233C", VA = "0xF2233C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0xF2220C", Offset = "0xF2220C", VA = "0xF2220C")]
			[DebuggerHidden]
			public <WaitUntilServicesNotBusyAnymore>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0xF22238", Offset = "0xF22238", VA = "0xF22238", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0xF2223C", Offset = "0xF2223C", VA = "0xF2223C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xF222FC", Offset = "0xF222FC", VA = "0xF222FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18D0C", Offset = "0xB18D0C")]
		private sealed class <QuerySkipInput>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputService inputService;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onSkip;

			[Token(Token = "0x17000160")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116E")]
				[Address(RVA = "0xF201EC", Offset = "0xF201EC", VA = "0xF201EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000161")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001170")]
				[Address(RVA = "0xF20234", Offset = "0xF20234", VA = "0xF20234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xF2013C", Offset = "0xF2013C", VA = "0xF2013C")]
			[DebuggerHidden]
			public <QuerySkipInput>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0xF20168", Offset = "0xF20168", VA = "0xF20168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0xF2016C", Offset = "0xF2016C", VA = "0xF2016C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116F")]
			[Address(RVA = "0xF201F4", Offset = "0xF201F4", VA = "0xF201F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB21FDC", Offset = "0xB21FDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB21FDC", Offset = "0xB21FDC")]
		public SplashSequence splashSequence;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22028", Offset = "0xB22028")]
		public InitServiceQueue bootServices;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22060", Offset = "0xB22060")]
		public InitServiceQueue initialServices;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SplashScreenController splashScreenController;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22098", Offset = "0xB22098")]
		public InitServiceQueue additionalServices;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PrefabResource initScreenPrefab;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject initScreen;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB220D0", Offset = "0xB220D0")]
		public PrefabResource autoDetectPrefab;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AutoDetectGraphicalQuality autoDetectGraphicalQuality;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22108", Offset = "0xB22108")]
		public Platform introOverlayPlatforms;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public PrefabResource introOverlayControllerPrefab;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject introAnim;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SceneSet mainMenuScene;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject progressDisplay;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Image progressImage;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22140", Offset = "0xB22140")]
		public SceneSet xboxEngagementScreen;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Scene bootScene;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool waitingForCompletion;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SceneSet initialSceneset;

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x157E284", Offset = "0x157E284", VA = "0x157E284")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FDF0", Offset = "0xB2FDF0")]
		private IEnumerator WaitForCompletion([Optional] Action<Action> action)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x157E318", Offset = "0x157E318", VA = "0x157E318")]
		private void OnCompleted()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x157E320", Offset = "0x157E320", VA = "0x157E320")]
		private void OnCompleted(AsyncOperation op)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x157E328", Offset = "0x157E328", VA = "0x157E328")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FE50", Offset = "0xB2FE50")]
		private IEnumerator ParallelCoroutine(Action<Action> action, [Optional] Action onCompletion)
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x157E3BC", Offset = "0x157E3BC", VA = "0x157E3BC")]
		private Coroutine StartAndWaitFor([Optional] Action<Action> action)
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x157E3E8", Offset = "0x157E3E8", VA = "0x157E3E8")]
		private Coroutine StartParallel(Action<Action> action, [Optional] Action onCompletion)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x157E414", Offset = "0x157E414", VA = "0x157E414")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FEB0", Offset = "0xB2FEB0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x157E48C", Offset = "0x157E48C", VA = "0x157E48C")]
		private void OnInitialLoadingScreenLoaded()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x157E910", Offset = "0x157E910", VA = "0x157E910")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FF10", Offset = "0xB2FF10")]
		private IEnumerator OnBeforeMainMenuActivation()
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x157E988", Offset = "0x157E988", VA = "0x157E988")]
		private void OnProgressLoadingMainMenu(float progress)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x157E9A4", Offset = "0x157E9A4", VA = "0x157E9A4")]
		private void OnLoadedNextSceneSet()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x157EB18", Offset = "0x157EB18", VA = "0x157EB18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FF70", Offset = "0xB2FF70")]
		private IEnumerator WaitUntilServicesNotBusyAnymore(InitServiceQueue initServiceQueue)
		{
			return null;
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x157EB90", Offset = "0x157EB90", VA = "0x157EB90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2FFD0", Offset = "0xB2FFD0")]
		public IEnumerator QuerySkipInput(InputService inputService, Action onSkip)
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x157EC24", Offset = "0x157EC24", VA = "0x157EC24")]
		private void LoadNextScene(string sceneNameOrPath)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x157E5EC", Offset = "0x157E5EC", VA = "0x157E5EC")]
		private void UnloadScene(string sceneNameOrPath, bool force)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x157ED18", Offset = "0x157ED18", VA = "0x157ED18")]
		public Main()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	[Flags]
	public enum Platform
	{
		[Token(Token = "0x4000FA3")]
		None = 0,
		[Token(Token = "0x4000FA4")]
		Any = 0x1FF,
		[Token(Token = "0x4000FA5")]
		Apple = 0x1A,
		[Token(Token = "0x4000FA6")]
		Consoles = 0x1C0,
		[Token(Token = "0x4000FA7")]
		Desktop = 7,
		[Token(Token = "0x4000FA8")]
		Windows = 1,
		[Token(Token = "0x4000FA9")]
		MacOS = 2,
		[Token(Token = "0x4000FAA")]
		Linux = 4,
		[Token(Token = "0x4000FAB")]
		iOS = 8,
		[Token(Token = "0x4000FAC")]
		tvOS = 0x10,
		[Token(Token = "0x4000FAD")]
		Android = 0x20,
		[Token(Token = "0x4000FAE")]
		Playstation = 0x40,
		[Token(Token = "0x4000FAF")]
		Xbox = 0x80,
		[Token(Token = "0x4000FB0")]
		NintendoSwitch = 0x100,
		[Token(Token = "0x4000FB1")]
		UnityEditorOverride = int.MinValue
	}
	[Token(Token = "0x20006B6")]
	public static class PlatformExtensions
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Platform[] values;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x277F570", Offset = "0x277F570", VA = "0x277F570")]
		public static Platform GetCurrentPlatform(this Platform platform)
		{
			return default(Platform);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x277F578", Offset = "0x277F578", VA = "0x277F578")]
		public static bool SupportsVR(this Platform platform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x277F5D4", Offset = "0x277F5D4", VA = "0x277F5D4")]
		public static bool IsCurrentPlatform(this Platform platform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x277F694", Offset = "0x277F694", VA = "0x277F694")]
		public static bool HasAnyOf(this Platform platform, Platform other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20006B7")]
	public class PlatformInstance<Tinstance> where Tinstance : class
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Platform platform;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Tinstance instance;

		[Token(Token = "0x6001176")]
		public PlatformInstance()
		{
		}
	}
	[Token(Token = "0x20006B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB18D3C", Offset = "0xB18D3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB18D3C", Offset = "0xB18D3C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB18D3C", Offset = "0xB18D3C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB18D3C", Offset = "0xB18D3C")]
	public class PlatformNarrativeNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[ExposeField]
		private int platformSerialized;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Platform platform;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput isPlatform;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput notPlatform;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowInput inFlow;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<FlowOutput> outFlows;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x277F92C", Offset = "0x277F92C", VA = "0x277F92C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x277FA64", Offset = "0x277FA64", VA = "0x277FA64")]
		protected void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x277FB50", Offset = "0x277FB50", VA = "0x277FB50")]
		public PlatformNarrativeNode()
		{
		}
	}
	[Token(Token = "0x20006B9")]
	public class testDMII : MonoBehaviour
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceCount;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh instanceMesh;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material instanceMaterial;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int subMeshIndex;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color baseColor;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ShadowCastingMode shadowCasting;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool receiveShadows;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text txtOutput;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool increaseBufferOverTime;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cachedInstanceCount;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int cachedSubMeshIndex;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ComputeBuffer positionBuffer;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ComputeBuffer colorBuffer;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ComputeBuffer argsBuffer;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private uint[] args;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float timeToUpdate;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int numInstancesPerUpdate;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float timer;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int minNumFramesBetweenUpdates;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int numFrameSinceLastUpdate;

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x27478D0", Offset = "0x27478D0", VA = "0x27478D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x2747E38", Offset = "0x2747E38", VA = "0x2747E38")]
		private void Update()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x2747968", Offset = "0x2747968", VA = "0x2747968")]
		private void UpdateBuffers()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x2748110", Offset = "0x2748110", VA = "0x2748110")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x2748190", Offset = "0x2748190", VA = "0x2748190")]
		public testDMII()
		{
		}
	}
	[Token(Token = "0x20006BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18DE8", Offset = "0xB18DE8")]
	public class AchievementObject : ScriptableObject
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB221B0", Offset = "0xB221B0")]
		public string generalID;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string xboxID;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ps4ID;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB221E8", Offset = "0xB221E8")]
		public bool gamecenter;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool steam;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool playstation;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool xbox;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool gog;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool egs;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x102DF10", Offset = "0x102DF10", VA = "0x102DF10")]
		public bool IsSupportedByPlatform(AchievementPlatformType platformName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x102DF70", Offset = "0x102DF70", VA = "0x102DF70")]
		public AchievementObject()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public class ActivateDeactivateOnButtonPress : MonoBehaviour
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode activationKey;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool targetChildren;

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x102F5B4", Offset = "0x102F5B4", VA = "0x102F5B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x102F718", Offset = "0x102F718", VA = "0x102F718")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x102F87C", Offset = "0x102F87C", VA = "0x102F87C")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x102F880", Offset = "0x102F880", VA = "0x102F880")]
		public ActivateDeactivateOnButtonPress()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB18E54", Offset = "0xB18E54")]
	public class ActivateOnVisible : MonoBehaviour
	{
		[Token(Token = "0x20006BD")]
		public enum TargetingMode
		{
			[Token(Token = "0x4000FE2")]
			gameObject,
			[Token(Token = "0x4000FE3")]
			meshRenderer,
			[Token(Token = "0x4000FE4")]
			script
		}

		[Token(Token = "0x20006BE")]
		public enum RepeatMode
		{
			[Token(Token = "0x4000FE6")]
			repeat,
			[Token(Token = "0x4000FE7")]
			cooldown,
			[Token(Token = "0x4000FE8")]
			noRepeat
		}

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetingMode targetingMode;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MonoBehaviour> targetScripts;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MeshRenderer> meshRenderers;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool deactivateOnInvisible;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RepeatMode repeatMode;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cooldown;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cdTimer;

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x102F888", Offset = "0x102F888", VA = "0x102F888")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x102FB78", Offset = "0x102FB78", VA = "0x102FB78")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x102F89C", Offset = "0x102F89C", VA = "0x102F89C")]
		private void ToggleState(bool targetState)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x102FB80", Offset = "0x102FB80", VA = "0x102FB80")]
		public ActivateOnVisible()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BF")]
	public struct PositionData
	{
		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x2788194", Offset = "0x2788194", VA = "0x2788194")]
		public PositionData(Transform t)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x27881EC", Offset = "0x27881EC", VA = "0x27881EC")]
		public void Backup()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x278823C", Offset = "0x278823C", VA = "0x278823C")]
		public void Restore()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	public class AlignToTerrain : MonoBehaviour
	{
		[Token(Token = "0x20006C1")]
		public enum TargetingMode
		{
			[Token(Token = "0x4000FF5")]
			Single,
			[Token(Token = "0x4000FF6")]
			Children
		}

		[Token(Token = "0x20006C2")]
		public enum AlignmentMode
		{
			[Token(Token = "0x4000FF8")]
			Lower,
			[Token(Token = "0x4000FF9")]
			Raise,
			[Token(Token = "0x4000FFA")]
			Both
		}

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22220", Offset = "0xB22220")]
		public TargetingMode targetingMode;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22258", Offset = "0xB22258")]
		public AlignmentMode alignmentMode;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22290", Offset = "0xB22290")]
		public float baseDeviation;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask targetGroundLayer;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB222C8", Offset = "0xB222C8")]
		public bool rotate;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float terrainDetectionRange;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RaycastHit hit;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<List<PositionData>> undoList;

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x102FB88", Offset = "0x102FB88", VA = "0x102FB88")]
		private void AlignToHit(Transform t, RaycastHit rayHit, bool alignRotation)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x102FC80", Offset = "0x102FC80", VA = "0x102FC80")]
		private bool AlignTransform(Transform t, List<PositionData> currentPosDataList)
		{
			return default(bool);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x102FE9C", Offset = "0x102FE9C", VA = "0x102FE9C")]
		public void Align()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x103023C", Offset = "0x103023C", VA = "0x103023C")]
		public void Undo()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1030414", Offset = "0x1030414", VA = "0x1030414")]
		public AlignToTerrain()
		{
		}
	}
	[Token(Token = "0x20006C3")]
	public class BlendShapesToBones : MonoBehaviour
	{
		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22300", Offset = "0xB22300")]
		public SkinnedMeshRenderer skinnedMeshRendererBlendShapes;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blendShapeJawIdx;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh skinnedMesh;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float blendWeightJaw;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22338", Offset = "0xB22338")]
		public Transform transformJaw;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxAngle;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float offsetAngle;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float startAngle;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 eulerAngles;

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x103C624", Offset = "0x103C624", VA = "0x103C624")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x103C628", Offset = "0x103C628", VA = "0x103C628")]
		private void Start()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x103C68C", Offset = "0x103C68C", VA = "0x103C68C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x103C7F0", Offset = "0x103C7F0", VA = "0x103C7F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x103C954", Offset = "0x103C954", VA = "0x103C954")]
		private void OnLateUpdate()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x103C9BC", Offset = "0x103C9BC", VA = "0x103C9BC")]
		public BlendShapesToBones()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	public class EyeBlinking : MonoBehaviour
	{
		[Token(Token = "0x20006C5")]
		private enum BlinkingStatus
		{
			[Token(Token = "0x400100F")]
			None,
			[Token(Token = "0x4001010")]
			Closing,
			[Token(Token = "0x4001011")]
			Opening
		}

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float blinkingDuration;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blinkingPauseMin;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float blinkingPauseMax;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22370", Offset = "0xB22370")]
		public SkinnedMeshRenderer skinnedMeshRendererBlendShapes;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int blendShapeEyeBlinkLeftIdx;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int blendShapeEyeBlinkRightIdx;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh skinnedMesh;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BlinkingStatus blinkingStatus;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timerPause;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timerBlinking;

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x112EAAC", Offset = "0x112EAAC", VA = "0x112EAAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x112EAB0", Offset = "0x112EAB0", VA = "0x112EAB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x112EAEC", Offset = "0x112EAEC", VA = "0x112EAEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x112EC50", Offset = "0x112EC50", VA = "0x112EC50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x112EDB4", Offset = "0x112EDB4", VA = "0x112EDB4")]
		private void OnLateUpdate()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x112EEE0", Offset = "0x112EEE0", VA = "0x112EEE0")]
		public EyeBlinking()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	public class EyeContact : MonoBehaviour
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB223A8", Offset = "0xB223A8")]
		public Vector2 eyeLookThresholdStart;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 eyeLookThresholdStop;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float eyeContactDurationMin;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float eyeContactDurationMax;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float eyeContactPauseMin;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB223E0", Offset = "0xB223E0")]
		public SkinnedMeshRenderer skinnedMeshRendererBlendShapes;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22418", Offset = "0xB22418")]
		public int blendShapeEyeLookLeftIdx;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int blendShapeEyeLookRightIdx;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int blendShapeEyeLookUpIdx;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int blendShapeEyeLookDownIdx;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform eyeLeft;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform eyeRight;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22450", Offset = "0xB22450")]
		public Transform targetLookAt;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22488", Offset = "0xB22488")]
		public float blendWeightFactorX;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blendWeightFactorY;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB224C0", Offset = "0xB224C0")]
		public float blendWeightOffsetX;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float blendWeightOffsetY;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Mesh skinnedMesh;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool eyeContact;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float timerEyeContact;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float timerEyePause;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float blendWeightFactorX100;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float blendWeightFactorY100;

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xFC4C14", Offset = "0xFC4C14", VA = "0xFC4C14")]
		public void Awake()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xFC4C18", Offset = "0xFC4C18", VA = "0xFC4C18")]
		public void Start()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xFC4C6C", Offset = "0xFC4C6C", VA = "0xFC4C6C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xFC4C84", Offset = "0xFC4C84", VA = "0xFC4C84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xFC4DE8", Offset = "0xFC4DE8", VA = "0xFC4DE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xFC4F4C", Offset = "0xFC4F4C", VA = "0xFC4F4C")]
		private void OnLateUpdate()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xFC51E4", Offset = "0xFC51E4", VA = "0xFC51E4")]
		public void AddTargetLookAt(Transform transTarget)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xFC526C", Offset = "0xFC526C", VA = "0xFC526C")]
		public void RemoveTargetLookAt(Transform transTarget)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xFC5128", Offset = "0xFC5128", VA = "0xFC5128")]
		private void StartEyeContact()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xFC5138", Offset = "0xFC5138", VA = "0xFC5138")]
		private void StopEyeContact()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xFC5144", Offset = "0xFC5144", VA = "0xFC5144")]
		private void ApplyEyeContact(Vector3 dir)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xFC5278", Offset = "0xFC5278", VA = "0xFC5278")]
		public EyeContact()
		{
		}
	}
	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB18EB4", Offset = "0xB18EB4")]
	public class AssetBundleConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006C8")]
		public class BundleNamePrefixes
		{
			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string rideSceneSet;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string rideVideo;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public string sharedScene;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public string sharedAudio;

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x275BDD8", Offset = "0x275BDD8", VA = "0x275BDD8")]
			public BundleNamePrefixes()
			{
			}
		}

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string assetBundleFolder;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public BundleNamePrefixes bundleNamePrefixes;

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x10335A4", Offset = "0x10335A4", VA = "0x10335A4")]
		public string GenerateAssetBundleName(AssetBundleType assetType, string assetPath)
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1033714", Offset = "0x1033714", VA = "0x1033714")]
		public AssetBundleConfig()
		{
		}
	}
	[Token(Token = "0x20006C9")]
	public enum AssetBundleType
	{
		[Token(Token = "0x4001030")]
		RideSceneSet,
		[Token(Token = "0x4001031")]
		RideVideo,
		[Token(Token = "0x4001032")]
		SharedScene,
		[Token(Token = "0x4001033")]
		SharedAudio
	}
	[Token(Token = "0x20006CA")]
	public class AutoSelectOnStart : MonoBehaviour
	{
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x103B17C", Offset = "0x103B17C", VA = "0x103B17C")]
		public AutoSelectOnStart()
		{
		}
	}
	[Token(Token = "0x20006CB")]
	public class CameraEffect : Effect
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool EnableGroupOne;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string GroupOneTitle;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float GroupOneA;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float GroupOneB;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool enablePostFX;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public PostProcessVolume volume;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool fovActive;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string cameraName;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22558", Offset = "0xB22558")]
		public float fovBase;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22574", Offset = "0xB22574")]
		public float fovValue;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool adjustLights;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Light> lights;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float relativeIntensity;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Dictionary<Light, float> originalLightIntensities;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RegisteredCamera registeredCamera;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xE30968", Offset = "0xE30968", VA = "0xE30968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xE30BE0", Offset = "0xE30BE0", VA = "0xE30BE0", Slot = "4")]
		protected override void Evaluate(float activeCurveEvaluated)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xE30ED8", Offset = "0xE30ED8", VA = "0xE30ED8")]
		public CameraEffect()
		{
		}
	}
	[Token(Token = "0x20006CC")]
	public class CameraLookAtObject : ObjectMover
	{
		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string lookAtTransform;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool registerEvents;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string lookAtEvent;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string stopEvent;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RegisteredTransform _lookAtTransform;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Action onMovedToLookAtCallback;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform prevParent;

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xE314D0", Offset = "0xE314D0", VA = "0xE314D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xE316B8", Offset = "0xE316B8", VA = "0xE316B8")]
		private void OnLookAt(string obj)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xE3182C", Offset = "0xE3182C", VA = "0xE3182C")]
		private void OnStopLookAt(string obj)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xE316C0", Offset = "0xE316C0", VA = "0xE316C0")]
		public void MoveToLookAt([Optional] Action onMovedToLookAt)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xE31838", Offset = "0xE31838", VA = "0xE31838")]
		public void ChangeLookAtTransfrom()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xE3192C", Offset = "0xE3192C", VA = "0xE3192C")]
		private void OnMoved()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xE31964", Offset = "0xE31964", VA = "0xE31964")]
		public CameraLookAtObject()
		{
		}
	}
	[Token(Token = "0x20006CD")]
	public class CarSoundController : SubController<CarConfig, RegisteredCarController>
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundService _soundService;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isEnginePlaying;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xE364B4", Offset = "0xE364B4", VA = "0xE364B4", Slot = "7")]
		protected override void InitSubController()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xE36560", Offset = "0xE36560", VA = "0xE36560", Slot = "8")]
		public override void UpdateSubController(float deltaTime)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xE3665C", Offset = "0xE3665C", VA = "0xE3665C")]
		public void StartEngineSound()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xE36714", Offset = "0xE36714", VA = "0xE36714")]
		public void StopEngineSound()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xE367A4", Offset = "0xE367A4", VA = "0xE367A4")]
		public CarSoundController()
		{
		}
	}
	[Token(Token = "0x20006CE")]
	public class MirrorReflection : MonoBehaviour
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera MirrorCamera;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera PlayerCamera;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DisablePixelLights;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ClipPlaneOffset;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 Size;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 screenPosTopLeft;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 screenPosTopRight;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 screenPosBottomLeft;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 screenPosBottomRight;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 topLeft;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 topRight;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 bottomRight;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 bottomLeft;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Renderer myRenderer;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ViewportScissor scissor;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int id;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool firstFrame;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideRendering;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int s_idCounter;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x132E4AC", Offset = "0x132E4AC", VA = "0x132E4AC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x132E5F0", Offset = "0x132E5F0", VA = "0x132E5F0")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x132EF84", Offset = "0x132EF84", VA = "0x132EF84")]
		private void SetScissor(ViewportScissor scissor)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x132EC54", Offset = "0x132EC54", VA = "0x132EC54")]
		private void CalculateCorners()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x132F5B4", Offset = "0x132F5B4", VA = "0x132F5B4")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x132F934", Offset = "0x132F934", VA = "0x132F934")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x132F99C", Offset = "0x132F99C", VA = "0x132F99C")]
		private static float sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x132F488", Offset = "0x132F488", VA = "0x132F488")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x132F1E4", Offset = "0x132F1E4", VA = "0x132F1E4")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x132F9BC", Offset = "0x132F9BC", VA = "0x132F9BC")]
		public MirrorReflection()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	public class RoadTeleporter : MonoBehaviour
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform teleportTarget;

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xECA2D0", Offset = "0xECA2D0", VA = "0xECA2D0")]
		public void OnTeleport()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xECA54C", Offset = "0xECA54C", VA = "0xECA54C")]
		public RoadTeleporter()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB18F14", Offset = "0xB18F14")]
	public class ViewportScissor : MonoBehaviour
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect scissorRect;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera cam;

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x274141C", Offset = "0x274141C", VA = "0x274141C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x2741478", Offset = "0x2741478", VA = "0x2741478")]
		public static void SetScissorRect(Camera cam, Rect r)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x27418F4", Offset = "0x27418F4", VA = "0x27418F4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x2741908", Offset = "0x2741908", VA = "0x2741908")]
		public ViewportScissor()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	public class ChangeByDistance : MonoBehaviour
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] targetGameObjects;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LODGroup lod;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool visible;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float distanceSqr;

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xE3A504", Offset = "0xE3A504", VA = "0xE3A504")]
		private void Start()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xE3A594", Offset = "0xE3A594", VA = "0xE3A594")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xE3A7B4", Offset = "0xE3A7B4", VA = "0xE3A7B4")]
		public ChangeByDistance()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	public class ChangeMaterial : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D3")]
		internal class SwapingObject
		{
			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal Renderer renderer;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal Material[] materials;

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x275E350", Offset = "0x275E350", VA = "0x275E350")]
			public SwapingObject()
			{
			}
		}

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SwapingObject[] swapingObjects;

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xE3B750", Offset = "0xE3B750", VA = "0xE3B750")]
		public void ChanageMaterial()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xE3B868", Offset = "0xE3B868", VA = "0xE3B868")]
		public ChangeMaterial()
		{
		}
	}
	[Token(Token = "0x20006D4")]
	public class ClearDepthBufferDiner : MonoBehaviour
	{
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xE3D0F8", Offset = "0xE3D0F8", VA = "0xE3D0F8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xE3D11C", Offset = "0xE3D11C", VA = "0xE3D11C")]
		public ClearDepthBufferDiner()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB18F74", Offset = "0xB18F74")]
	public class CopyTransform : MonoBehaviour
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool resetWorldPosition;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool resetWorldRotation;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB225C0", Offset = "0xB225C0")]
		public Transform target;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _self;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB225F8", Offset = "0xB225F8")]
		public bool copyPosition;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22630", Offset = "0xB22630")]
		public bool copyRotation;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool useLocalRotation;

		[Token(Token = "0x17000162")]
		private Transform self
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x158DC4C", Offset = "0x158DC4C", VA = "0x158DC4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private bool needsTarget
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x158DD00", Offset = "0x158DD00", VA = "0x158DD00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x158DD20", Offset = "0x158DD20", VA = "0x158DD20")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x158DE30", Offset = "0x158DE30", VA = "0x158DE30")]
		public void SetTarget(Transform newTarget)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x158DD24", Offset = "0x158DD24", VA = "0x158DD24")]
		public void MoveNow()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x158DE38", Offset = "0x158DE38", VA = "0x158DE38")]
		public void EnableCopyPosition()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x158DE44", Offset = "0x158DE44", VA = "0x158DE44")]
		public void DisableCopyPosition()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x158DE4C", Offset = "0x158DE4C", VA = "0x158DE4C")]
		public CopyTransform()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	public class CreditsController : MonoBehaviour
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform scrollArea;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text txtCredits;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scrollSpeed;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fastFWDSpeed;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextAsset creditsCSV;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextAsset creditsTXT;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22668", Offset = "0xB22668")]
		public int emptyLinesBeforeCompany;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int emptyLinesBeforeRole;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int emptyLinesAfterDedication;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string companyRolePrefix;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string companyRolePostfix;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string personRolePrefix;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string personRolePostfix;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string personNamePrefix;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string personNamePostfix;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string dedicationPrefix;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string dedicationPostfix;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string credits;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InputService inputService;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 initialAnchoredPosition;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB226A0", Offset = "0xB226A0")]
		private bool <PauseScrolling>k__BackingField;

		[Token(Token = "0x17000164")]
		public bool PauseScrolling
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x158E030", Offset = "0x158E030", VA = "0x158E030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30250", Offset = "0xB30250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x158E038", Offset = "0x158E038", VA = "0x158E038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30260", Offset = "0xB30260")]
			set
			{
			}
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x158E044", Offset = "0x158E044", VA = "0x158E044")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x158E888", Offset = "0x158E888", VA = "0x158E888")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x158E8B0", Offset = "0x158E8B0", VA = "0x158E8B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x158E88C", Offset = "0x158E88C", VA = "0x158E88C")]
		private void ResetCredits()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x158E984", Offset = "0x158E984", VA = "0x158E984")]
		public CreditsController()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	public class CSVReader
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string text;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentIndex;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<List<string>> entries;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] lineSeparators;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private char[] entrySeparators;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private char quoteSeparator;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private char escapeSequence;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xE2D980", Offset = "0xE2D980", VA = "0xE2D980")]
		private bool IsValidQuote(int quoteIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xE2DA00", Offset = "0xE2DA00", VA = "0xE2DA00")]
		private bool IsValidSeparator(int separatorIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xE2DAC0", Offset = "0xE2DAC0", VA = "0xE2DAC0")]
		private bool IsOneOf(char c, char[] comp)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xE2DB24", Offset = "0xE2DB24", VA = "0xE2DB24")]
		private bool IsLineSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xE2DB2C", Offset = "0xE2DB2C", VA = "0xE2DB2C")]
		private bool IsEntrySeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xE2DA7C", Offset = "0xE2DA7C", VA = "0xE2DA7C")]
		private bool IsSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xE2DB34", Offset = "0xE2DB34", VA = "0xE2DB34")]
		private int FindEndOfQuote(int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xE2DBBC", Offset = "0xE2DBBC", VA = "0xE2DBBC")]
		private int FindEndOfEntry(int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xE2DC18", Offset = "0xE2DC18", VA = "0xE2DC18")]
		public void ReadCSV(string textData)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xE2DEDC", Offset = "0xE2DEDC", VA = "0xE2DEDC")]
		public CSVReader()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	public class Crow : MonoBehaviour
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Animator animator;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string flapWingTrigger;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool log;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform flockTransform;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localPosition;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion localRotation;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StudioEventEmitter _soundEmitter;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrowSystem _crowSystem;

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x158EF00", Offset = "0x158EF00", VA = "0x158EF00")]
		public void Initialize(Transform newParent, CrowSystem crowSystem)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x158F038", Offset = "0x158F038", VA = "0x158F038")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x158F2E8", Offset = "0x158F2E8", VA = "0x158F2E8")]
		public void FlapWings(int flapCount)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x158F348", Offset = "0x158F348", VA = "0x158F348")]
		public Crow()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public class CrowFlock : MonoBehaviour
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public LayerMask groundMask;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Crow[] crows;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float flapTimer;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrowFlapSettings flapSettings;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int nextCrowFlaps;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int nextFlapCount;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float minTime;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float maxTime;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform root;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float heightAboveGround;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CrowSystem system;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isInitialized;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isActive;

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x158F3BC", Offset = "0x158F3BC", VA = "0x158F3BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x158F418", Offset = "0x158F418", VA = "0x158F418")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x158F598", Offset = "0x158F598", VA = "0x158F598")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x158F648", Offset = "0x158F648", VA = "0x158F648")]
		public void Initialize(Transform root, Transform crowTransform, CrowFlapSettings flapSettings)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x158F8D0", Offset = "0x158F8D0", VA = "0x158F8D0")]
		public void OnUpdate(float deltaTime, bool canRaycast)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x158F454", Offset = "0x158F454", VA = "0x158F454")]
		private void SetCrowsActive(bool active)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x158F870", Offset = "0x158F870", VA = "0x158F870")]
		private void FindCrows()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x158FB04", Offset = "0x158FB04", VA = "0x158FB04")]
		private void RandomizeCrows()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x158FC50", Offset = "0x158FC50", VA = "0x158FC50")]
		public CrowFlock()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DA")]
	public class CrowFlapSettings
	{
		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int minFlapCount;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxFlapCount;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minTimeBetweenFlaps;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxTimeBetweenFlaps;

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x158F3A4", Offset = "0x158F3A4", VA = "0x158F3A4")]
		public CrowFlapSettings()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	public class CrowSystem : MonoBehaviour
	{
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public CrowSystemRoot root;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Transform crowTransform;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public CrowFlapSettings flapSettings;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public CrowFlock[] allFlocks;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<CrowFlock> flocks;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22750", Offset = "0xB22750")]
		[SerializeField]
		public StudioEventEmitter _genericCrowSoundEmitter;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[EventRef]
		[SerializeField]
		public string _wingFlapSoundEvent;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[EventRef]
		[SerializeField]
		public string _firstFlockSoundEvent;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SoundService _soundService;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isInitialized;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int lastRaycaster;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x158FC58", Offset = "0x158FC58", VA = "0x158FC58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x158FDD4", Offset = "0x158FDD4", VA = "0x158FDD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x158FC5C", Offset = "0x158FC5C", VA = "0x158FC5C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x158F4F4", Offset = "0x158F4F4", VA = "0x158F4F4")]
		public void AddFlock(CrowFlock flock)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x158F5D4", Offset = "0x158F5D4", VA = "0x158F5D4")]
		public void RemoveFlock(CrowFlock flock)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x158FDD8", Offset = "0x158FDD8", VA = "0x158FDD8")]
		public void UpdateSystem()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x158F334", Offset = "0x158F334", VA = "0x158F334")]
		public void PlayWingFlapSound(StudioEventEmitter emitter)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x158FF3C", Offset = "0x158FF3C", VA = "0x158FF3C")]
		private void FindFlocks()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x158FFA0", Offset = "0x158FFA0", VA = "0x158FFA0")]
		public CrowSystem()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public class CrowSystemRoot : MonoBehaviour
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Transform movingRoot;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _transform;

		[Token(Token = "0x17000165")]
		private new Transform transform
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x158FFB0", Offset = "0x158FFB0", VA = "0x158FFB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x158FF38", Offset = "0x158FF38", VA = "0x158FF38")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x158FF9C", Offset = "0x158FF9C", VA = "0x158FF9C")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1590050", Offset = "0x1590050", VA = "0x1590050")]
		private void MoveNow()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x15900C8", Offset = "0x15900C8", VA = "0x15900C8")]
		public CrowSystemRoot()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	public enum DimensionToCheck
	{
		[Token(Token = "0x40010B5")]
		Horizontal,
		[Token(Token = "0x40010B6")]
		Vertical
	}
	[Token(Token = "0x20006DE")]
	public enum SetSelectedState
	{
		[Token(Token = "0x40010B8")]
		noChange,
		[Token(Token = "0x40010B9")]
		enable,
		[Token(Token = "0x40010BA")]
		disable
	}
	[Token(Token = "0x20006DF")]
	public class DebugSelectByPhysicalScreenSize : MonoBehaviour
	{
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DimensionToCheck check;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float threshhold;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject selectUnderThreshhold;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject selectOverThreshhold;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject selectedGameObject;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SetSelectedState actionOnSelected;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOther;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool deleteOther;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1124D94", Offset = "0x1124D94", VA = "0x1124D94")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1124F4C", Offset = "0x1124F4C", VA = "0x1124F4C")]
		public DebugSelectByPhysicalScreenSize()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public class DuplicateChildren : MonoBehaviour
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform provider;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform receiver;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool deleteOldGOs;

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1129F94", Offset = "0x1129F94", VA = "0x1129F94")]
		public void CopyGOs()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x112AD00", Offset = "0x112AD00", VA = "0x112AD00")]
		public DuplicateChildren()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E1")]
	public class SerializableEffect
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float active;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int velocity;

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x110A1F4", Offset = "0x110A1F4", VA = "0x110A1F4")]
		public SerializableEffect()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public abstract class Effect : MonoBehaviour
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2282C", Offset = "0xB2282C")]
		public float active;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool separateInOutFades;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB22844", Offset = "0xB22844")]
		public float fadeInDuration;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2287C", Offset = "0xB2287C")]
		public AnimationCurve fadeInCurve;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeOutDuration;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve fadeOutCurve;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool neverSerialize;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onStartEffect;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onUpdateEffect;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onStopEffect;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onFinishedEffect;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onUpdateWithValue;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int velocity;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool hasDefault;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float defaultActive;

		[Token(Token = "0x17000166")]
		protected AnimationCurve curve
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x112B4A8", Offset = "0x112B4A8", VA = "0x112B4A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		protected float fadeDuration
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x112B4CC", Offset = "0x112B4CC", VA = "0x112B4CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000168")]
		public float adjustedFadeOutDuration
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x112B4F0", Offset = "0x112B4F0", VA = "0x112B4F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		public bool needsSerialization
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x112B50C", Offset = "0x112B50C", VA = "0x112B50C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x112B540", Offset = "0x112B540", VA = "0x112B540")]
		public SerializableEffect GetSerializable()
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x112B5D0", Offset = "0x112B5D0", VA = "0x112B5D0")]
		public void RestoreFromSerializable(SerializableEffect seff)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x112B7D4", Offset = "0x112B7D4", VA = "0x112B7D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x112B890", Offset = "0x112B890", VA = "0x112B890")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x112B934", Offset = "0x112B934", VA = "0x112B934")]
		public bool UpdateActive(float amountActive)
		{
			return default(bool);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x112B9C0", Offset = "0x112B9C0", VA = "0x112B9C0")]
		public void StartEffect(float fadeDuration = -1f, [Optional] AnimationCurve customCurve)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x112BBE4", Offset = "0x112BBE4", VA = "0x112BBE4")]
		public void StartEffect(float fadeDuration = -1f)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x112BBEC", Offset = "0x112BBEC", VA = "0x112BBEC")]
		public void StartEffect()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x112BBF8", Offset = "0x112BBF8", VA = "0x112BBF8")]
		public void StopEffect()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x112BC30", Offset = "0x112BC30", VA = "0x112BC30")]
		public void SkipFadeInOut()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x112B5FC", Offset = "0x112B5FC", VA = "0x112B5FC")]
		private void StartUpdating()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x112BC60", Offset = "0x112BC60", VA = "0x112BC60")]
		private void StopUpdating()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x112BDC4", Offset = "0x112BDC4", VA = "0x112BDC4")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001220")]
		protected abstract void Evaluate(float activeCurveEvaluated);

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x112C018", Offset = "0x112C018", VA = "0x112C018")]
		protected Effect()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB18F88", Offset = "0xB18F88")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB18F88", Offset = "0xB18F88")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB18F88", Offset = "0xB18F88")]
	public class EffectControlNode : UpdateNarrativeNode
	{
		[Token(Token = "0x20006E4")]
		public enum EffectControlValue
		{
			[Token(Token = "0x40010DC")]
			StartEffect,
			[Token(Token = "0x40010DD")]
			StopEffect
		}

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FlowOutput flowOut;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<EffectControlValue> control;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ValueInput<string> effectName;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x112C0A4", Offset = "0x112C0A4", VA = "0x112C0A4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x112C22C", Offset = "0x112C22C", VA = "0x112C22C")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x112C3E0", Offset = "0x112C3E0", VA = "0x112C3E0", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x112C3E4", Offset = "0x112C3E4", VA = "0x112C3E4")]
		public EffectControlNode()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x112C3EC", Offset = "0x112C3EC", VA = "0x112C3EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30270", Offset = "0xB30270")]
		private void <RegisterPorts>b__4_0(Flow f)
		{
		}
	}
	[Token(Token = "0x20006E5")]
	public class EffectControlRelay : Effect
	{
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x112C41C", Offset = "0x112C41C", VA = "0x112C41C", Slot = "4")]
		protected override void Evaluate(float activeCurveEvaluated)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x112C48C", Offset = "0x112C48C", VA = "0x112C48C")]
		public EffectControlRelay()
		{
		}
	}
	[Token(Token = "0x20006E6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB19010", Offset = "0xB19010")]
	public abstract class EffectModule : MonoBehaviour
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB228B4", Offset = "0xB228B4")]
		private Effect <effect>k__BackingField;

		[Token(Token = "0x1700016A")]
		protected Effect effect
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0x112C490", Offset = "0x112C490", VA = "0x112C490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30280", Offset = "0xB30280")]
			get
			{
				return null;
			}
			[Token(Token = "0x600122A")]
			[Address(RVA = "0x112C498", Offset = "0x112C498", VA = "0x112C498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30290", Offset = "0xB30290")]
			private set
			{
			}
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x112C4A0", Offset = "0x112C4A0", VA = "0x112C4A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x112C6A4", Offset = "0x112C6A4", VA = "0x112C6A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600122D")]
		protected abstract void OnUpdateWithValue(float t);

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x112C86C", Offset = "0x112C86C", VA = "0x112C86C", Slot = "5")]
		protected virtual void OnFinishedEffect()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x112C870", Offset = "0x112C870", VA = "0x112C870", Slot = "6")]
		protected virtual void OnStopEffect()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x112C874", Offset = "0x112C874", VA = "0x112C874", Slot = "7")]
		protected virtual void OnUpdateEffect()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x112C878", Offset = "0x112C878", VA = "0x112C878", Slot = "8")]
		protected virtual void OnStartEffect()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x112C87C", Offset = "0x112C87C", VA = "0x112C87C")]
		protected EffectModule()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class EnableObjects : MonoBehaviour
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectReferences;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB228C4", Offset = "0xB228C4")]
		public bool enableOnEnable;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB228FC", Offset = "0xB228FC")]
		public bool disableOnEnable;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22934", Offset = "0xB22934")]
		public bool enableOnDisable;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2296C", Offset = "0xB2296C")]
		public bool disableOnDisable;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB229A4", Offset = "0xB229A4")]
		public bool disableOnAwake;

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x112D220", Offset = "0x112D220", VA = "0x112D220")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x112D258", Offset = "0x112D258", VA = "0x112D258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x112D320", Offset = "0x112D320", VA = "0x112D320")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x112D3E8", Offset = "0x112D3E8", VA = "0x112D3E8")]
		public EnableObjects()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class EnableOneChild : MonoBehaviour
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableOnStart;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool enableRandomChild;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> orderOfEnabling;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int startIndex;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int currentIndex;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _myTrans;

		[Token(Token = "0x1700016B")]
		private Transform myTrans
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0x112D3F0", Offset = "0x112D3F0", VA = "0x112D3F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x112D490", Offset = "0x112D490", VA = "0x112D490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x112D4C0", Offset = "0x112D4C0", VA = "0x112D4C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x112D4D8", Offset = "0x112D4D8", VA = "0x112D4D8")]
		public void Enable()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x112D4DC", Offset = "0x112D4DC", VA = "0x112D4DC")]
		private void SetChildrenActive()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x112D688", Offset = "0x112D688", VA = "0x112D688")]
		public EnableOneChild()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	public class LightSettings : MonoBehaviour
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightSetup setup;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xEB28FC", Offset = "0xEB28FC", VA = "0xEB28FC")]
		public void Apply()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xEB2BE4", Offset = "0xEB2BE4", VA = "0xEB2BE4")]
		public void Revert()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xEB2C94", Offset = "0xEB2C94", VA = "0xEB2C94")]
		public LightSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EA")]
	public class ActivatableState
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string activatable;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x102F5AC", Offset = "0x102F5AC", VA = "0x102F5AC")]
		public ActivatableState()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	public class RegisteredEnvironment : RegisteredAssetBase<RegisteredEnvironment>
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB229DC", Offset = "0xB229DC")]
		public LightSettings lightSettings;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22A14", Offset = "0xB22A14")]
		public string defaultCamera;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22A4C", Offset = "0xB22A4C")]
		public SpeedValue carSpeed;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float durationToReachSpeed;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22A84", Offset = "0xB22A84")]
		public string ambienceEvent;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string musicEvent;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22ABC", Offset = "0xB22ABC")]
		public List<ActivatableState> activatableStates;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xEC1D3C", Offset = "0xEC1D3C", VA = "0xEC1D3C")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xEC2568", Offset = "0xEC2568", VA = "0xEC2568")]
		public void Revert()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xEC2278", Offset = "0xEC2278", VA = "0xEC2278")]
		private void ChangeAmbienceAndMusic(bool apply, string ambienceEvent, string musicEvent)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xEC1F58", Offset = "0xEC1F58", VA = "0xEC1F58")]
		private void AdjustActivatables(bool apply)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xEC1D80", Offset = "0xEC1D80", VA = "0xEC1D80")]
		private void ApplyLightSetup()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xEC1E10", Offset = "0xEC1E10", VA = "0xEC1E10")]
		private void AdjustCarSpeed()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xEC2480", Offset = "0xEC2480", VA = "0xEC2480")]
		private void SetMainCamera()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xEC25F8", Offset = "0xEC25F8", VA = "0xEC25F8")]
		public RegisteredEnvironment()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class RideEnvironmentManager
	{
		[NonSerialized]
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RegisteredEnvironment currentEnvironment;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SceneManagementService sceneManagement;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SettingsService settingsService;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float fogCheckDelay;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string initialEnvironment;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xEC9674", Offset = "0xEC9674", VA = "0xEC9674")]
		public void Init(string initialEnvironment)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xEC9904", Offset = "0xEC9904", VA = "0xEC9904")]
		public void Deinit()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xEC9B3C", Offset = "0xEC9B3C", VA = "0xEC9B3C")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xEC9C4C", Offset = "0xEC9C4C", VA = "0xEC9C4C")]
		private void OnSceneLoadingFinished()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xEC9FA0", Offset = "0xEC9FA0", VA = "0xEC9FA0")]
		public void ForceReapply()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xEC9FB8", Offset = "0xEC9FB8", VA = "0xEC9FB8")]
		private void OnQualityChanged()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xEC9FD0", Offset = "0xEC9FD0", VA = "0xEC9FD0")]
		public RegisteredEnvironment GetEnvironment(string environmentName)
		{
			return null;
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xEC9EC4", Offset = "0xEC9EC4", VA = "0xEC9EC4")]
		public void SetEnvironment(string environmentName)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xECA038", Offset = "0xECA038", VA = "0xECA038")]
		public void SetEnvironment(RegisteredEnvironment environment)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xECA218", Offset = "0xECA218", VA = "0xECA218")]
		public RideEnvironmentManager()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	public class FakeWorldCurvature : MonoBehaviour, IIterationUpdater
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float shelfRadius;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float worldRadius;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 originalPosition;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 worldPosition;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IteratingUpdater Updater;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera cam;

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xFC6474", Offset = "0xFC6474", VA = "0xFC6474")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xFC66DC", Offset = "0xFC66DC", VA = "0xFC66DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xFC6894", Offset = "0xFC6894", VA = "0xFC6894", Slot = "6")]
		private void HitchHiker.IIterationUpdater.OnUpdate()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xFC6800", Offset = "0xFC6800", VA = "0xFC6800", Slot = "4")]
		public void Deregister(IIterationUpdater reference)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xFC6648", Offset = "0xFC6648", VA = "0xFC6648", Slot = "5")]
		public void Register(IIterationUpdater reference)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xFC6A2C", Offset = "0xFC6A2C", VA = "0xFC6A2C")]
		public FakeWorldCurvature()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTrans;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offSet;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minFollowPerSec;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxFollowPerSec;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22AF4", Offset = "0xB22AF4")]
		public float minDistance;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22B2C", Offset = "0xB22B2C")]
		public float maxDistance;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22B64", Offset = "0xB22B64")]
		public float hardMaxDistance;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool followRotation;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22B9C", Offset = "0xB22B9C")]
		public Vector2 rotMaxFollow;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateChildrenToVelo;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22BD4", Offset = "0xB22BD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22BD4", Offset = "0xB22BD4")]
		public float childRotPerSec;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<RuntimeAnimatorController> animControllerList;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Transform> childList;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Animator> childAnims;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform myTrans;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool deactivated;

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xFCB42C", Offset = "0xFCB42C", VA = "0xFCB42C")]
		private void RecalcOffset()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xFCB47C", Offset = "0xFCB47C", VA = "0xFCB47C")]
		private void SetToOffset()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xFCB4D0", Offset = "0xFCB4D0", VA = "0xFCB4D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xFCB634", Offset = "0xFCB634", VA = "0xFCB634")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xFCB798", Offset = "0xFCB798", VA = "0xFCB798")]
		private void Start()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xFCBEEC", Offset = "0xFCBEEC", VA = "0xFCBEEC")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xFCC384", Offset = "0xFCC384", VA = "0xFCC384")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	public class GrassPositionCalculator
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform fakeTerrainTransform;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2Int numChunks;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2Int terrainDim;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 terrainPos;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector4 chunkPosDimWS;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector4 chunkPosDimLSN;

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xFD58E4", Offset = "0xFD58E4", VA = "0xFD58E4")]
		public GrassPositionCalculator(Transform t, Vector2Int n)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xFD5948", Offset = "0xFD5948", VA = "0xFD5948")]
		public GrassPositionCalculator(Transform t, Vector2Int n, Vector3 pos, Vector2Int dim)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xFD59E8", Offset = "0xFD59E8", VA = "0xFD59E8")]
		public Vector4 CalcTerrainChunkWorldPosDim(Vector2Int chunk)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xFD5A18", Offset = "0xFD5A18", VA = "0xFD5A18")]
		public Vector4 CalcLocalChunkWorldPosDim(Vector2Int chunk)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xFD5A70", Offset = "0xFD5A70", VA = "0xFD5A70")]
		public Vector4 CalcNormalizedChunkPosDim(Vector4 worldChunkPosDim)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xFD5B0C", Offset = "0xFD5B0C", VA = "0xFD5B0C")]
		public Vector4 CalcNormalizedChunkPosDimFromLOCAL(Vector4 localChunkPosDim)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xFD5B88", Offset = "0xFD5B88", VA = "0xFD5B88")]
		public Vector2 CalcTerrainPosFromWorldPos(Vector3 wpos3)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xFD5C04", Offset = "0xFD5C04", VA = "0xFD5C04")]
		public Vector2 WorldPosToTerrainXY(Vector3 wordCor, Vector2Int heightmapDim)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xFD5C80", Offset = "0xFD5C80", VA = "0xFD5C80")]
		public Vector3 CalcWorldPositionOfChunk(Vector2Int chunk)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xFD5D2C", Offset = "0xFD5D2C", VA = "0xFD5D2C")]
		public Vector2 CalcUVPos(Vector2 posLSN)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xFD5D78", Offset = "0xFD5D78", VA = "0xFD5D78")]
		public Vector3 CalcPosWS(Vector2 posLSN)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20006F0")]
	public class GrassPositionEvaluator
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D densityMask;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D densityMask2;

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xFD5DC4", Offset = "0xFD5DC4", VA = "0xFD5DC4")]
		public GrassPositionEvaluator(Texture2D maskA, Texture2D maskB)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xFD5E14", Offset = "0xFD5E14", VA = "0xFD5E14")]
		public bool TestAgainstDensity(Vector2 posUV, out float density)
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xFD5E44", Offset = "0xFD5E44", VA = "0xFD5E44")]
		public float GetDensity(Texture2D mask, Vector2 posUV)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB19070", Offset = "0xB19070")]
	public class GrassSystemMaterialConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006F2")]
		public class MaterialConfig
		{
			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22D10", Offset = "0xB22D10")]
			public float fadeStartDelta;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22D30", Offset = "0xB22D30")]
			public float fadeLengthDelta;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool overrideBaseColor;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Color baseColor;

			[Token(Token = "0x6001271")]
			[Address(RVA = "0xF15AB0", Offset = "0xF15AB0", VA = "0xF15AB0")]
			public MaterialConfig()
			{
			}
		}

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22C2C", Offset = "0xB22C2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22C2C", Offset = "0xB22C2C")]
		public float fadeStart;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22C84", Offset = "0xB22C84")]
		public float fadeLength;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color baseColor;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color nearColor;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22CA0", Offset = "0xB22CA0")]
		public List<MaterialConfig> materials;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22CD8", Offset = "0xB22CD8")]
		private string baseColorName;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string nearColorName;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string fadeStartName;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string fadeLengthName;

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xFD5E60", Offset = "0xFD5E60", VA = "0xFD5E60")]
		public void UseQualityConfig(float fadeStart, float fadeLength)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xFD5E68", Offset = "0xFD5E68", VA = "0xFD5E68")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xFD60D8", Offset = "0xFD60D8", VA = "0xFD60D8")]
		public GrassSystemMaterialConfig()
		{
		}
	}
	[Token(Token = "0x20006F3")]
	public class GrassSystemSettings : MonoBehaviour
	{
		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform fakeTerrainTransform;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22D50", Offset = "0xB22D50")]
		public Vector2Int terrainDim;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 terrainPos;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22D88", Offset = "0xB22D88")]
		public Vector2Int numChunks;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22DC0", Offset = "0xB22DC0")]
		public int skipNumNorthChunks;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int skipNumSouthChunks;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int skipNumWestChunks;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int skipNumEastChunks;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrassPositionCalculator _positionCalculator;

		[Token(Token = "0x1700016C")]
		public GrassPositionCalculator positionCalculator
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xFD61F8", Offset = "0xFD61F8", VA = "0xFD61F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public Vector2Int chunkDim
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xFD62B4", Offset = "0xFD62B4", VA = "0xFD62B4")]
			get
			{
				return default(Vector2Int);
			}
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xFD62CC", Offset = "0xFD62CC", VA = "0xFD62CC")]
		public GrassSystemSettings()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class ParticleGrassController
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem psys;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 chunkWorldPosition;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystemRenderer psysRenderer;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool psysEnabled;

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x15CC9BC", Offset = "0x15CC9BC", VA = "0x15CC9BC")]
		public void SetPsysRenderer(ParticleSystemRenderer psysRenderer)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x15CCA04", Offset = "0x15CCA04", VA = "0x15CCA04")]
		public void DisableRenderer()
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0x15CCA3C", Offset = "0x15CCA3C", VA = "0x15CCA3C")]
		public bool UpdateVisibility(bool globalIsGrassVisible, Vector3 camPos, float maxDistanceSqr)
		{
			return default(bool);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001278")]
		[Address(RVA = "0x15CCAB8", Offset = "0x15CCAB8", VA = "0x15CCAB8")]
		public void ReduceParticleAmount(float factor)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x15CCB8C", Offset = "0x15CCB8C", VA = "0x15CCB8C")]
		public ParticleGrassController()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class ParticleGrassCtrlSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrassSystemSettings settings;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22DF8", Offset = "0xB22DF8")]
		public Terrain terrain;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform fakeTerrainTransform;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22E30", Offset = "0xB22E30")]
		public Vector2Int terrainDim;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 terrainPos;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22E68", Offset = "0xB22E68")]
		public Vector2Int numChunks;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int numParticlesPerChunk;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22EA0", Offset = "0xB22EA0")]
		public int skipNumNorthChunks;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int skipNumSouthChunks;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int skipNumWestChunks;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int skipNumEastChunks;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22ED8", Offset = "0xB22ED8")]
		public GrassSystemMaterialConfig config;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D densityMask;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D densityMask2;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Mesh particleMesh;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material particleMaterial;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float colorVariation;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 startSize;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float offsetY;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool scaleHeightByDensity;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float fullHeight;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float minHeight;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22F10", Offset = "0xB22F10")]
		public Camera cameraReference;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float maxDistance;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float chunkFade;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public PositionCacheResourceAsset posCacheAsset;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PositionCacheTiles _cache;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22F48", Offset = "0xB22F48")]
		public float previewDensity;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int numChunksPerFrame;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private QualityConfig qconfig;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GrassSystemQuality grassQuality;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<ParticleGrassController> particleCtrls;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SettingsService settingsService;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool isInitialized;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool globalIsGrassVisible;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int lastLogFrameCount;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Camera curCamera;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Camera prevCamera;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly string[] layers;

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x15CCB94", Offset = "0x15CCB94", VA = "0x15CCB94")]
		private void Awake()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x15CCC84", Offset = "0x15CCC84", VA = "0x15CCC84")]
		private GrassSystemQuality GetGrassQuality(QualityConfig qualityConfig)
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x15CCCD0", Offset = "0x15CCCD0", VA = "0x15CCCD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x15CCE40", Offset = "0x15CCE40", VA = "0x15CCE40")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x15CD01C", Offset = "0x15CD01C", VA = "0x15CD01C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x15CD180", Offset = "0x15CD180", VA = "0x15CD180")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x15CD2E4", Offset = "0x15CD2E4", VA = "0x15CD2E4")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x15CCF4C", Offset = "0x15CCF4C", VA = "0x15CCF4C")]
		private int CreateChunks()
		{
			return default(int);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x15CD8BC", Offset = "0x15CD8BC", VA = "0x15CD8BC")]
		private int CreateChunk(int x, int y, bool createEmpty = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x15CDBD0", Offset = "0x15CDBD0", VA = "0x15CDBD0")]
		private void LoadChunkFromCache(Vector2Int chunk, out Vector4[] positions, PositionCache cache)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x15CE1F0", Offset = "0x15CE1F0", VA = "0x15CE1F0")]
		public Vector4[] CalcPositions(Vector2Int chunk, GrassPositionCalculator positionCalculator, out int numPositions)
		{
			return null;
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x15CDCA4", Offset = "0x15CDCA4", VA = "0x15CDCA4")]
		public int InitializeController(ParticleGrassController controller, Vector4[] positions, int numPositions, Vector3 chunkWorldPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x15CE620", Offset = "0x15CE620", VA = "0x15CE620")]
		public ParticleGrassCtrlSpawner()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public class ParticleGrassLoader : MonoBehaviour
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrassSystemSettings settings;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22F80", Offset = "0xB22F80")]
		public GrassSystemMaterialConfig config;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh particleMesh;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material particleMaterial;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material particle_Mat_Low;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 startSize;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool scaleHeightByDensity;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float fullHeight;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minHeight;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22FB8", Offset = "0xB22FB8")]
		public Camera cameraReference;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxDistance;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float chunkFade;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PositionCacheResourceAsset posCacheAsset;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PositionCacheTiles _cache;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22FF0", Offset = "0xB22FF0")]
		public float previewDensity;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ParticleGrassController> particleCtrls;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SettingsService settingsService;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2Int maxChunkDist;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isInitialized;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool globalIsGrassVisible;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 prevCameraPosition;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GrassSystemQuality grassQuality;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x277B478", Offset = "0x277B478", VA = "0x277B478")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x277B728", Offset = "0x277B728", VA = "0x277B728")]
		private void ReduceGrass(string evt)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x277B72C", Offset = "0x277B72C", VA = "0x277B72C")]
		private GrassSystemQuality GetGrassQuality(QualityConfig qualityConfig)
		{
			return null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x277B778", Offset = "0x277B778", VA = "0x277B778")]
		private void OnQualitySettingsChanged()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x277BCFC", Offset = "0x277BCFC", VA = "0x277BCFC")]
		private void Start()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x277BDBC", Offset = "0x277BDBC", VA = "0x277BDBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x277B948", Offset = "0x277B948", VA = "0x277B948")]
		private void ClearGrass()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x277BB44", Offset = "0x277BB44", VA = "0x277BB44")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x277BF94", Offset = "0x277BF94", VA = "0x277BF94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x277BF98", Offset = "0x277BF98", VA = "0x277BF98")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x277BEB4", Offset = "0x277BEB4", VA = "0x277BEB4")]
		private int CreateChunks()
		{
			return default(int);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x277C788", Offset = "0x277C788", VA = "0x277C788")]
		private int CreateChunk(int x, int y, bool createEmpty = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x277CAE4", Offset = "0x277CAE4", VA = "0x277CAE4")]
		private void LoadChunkFromCache(Vector2Int chunk, out Vector4[] positions, PositionCache cache)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x277CBCC", Offset = "0x277CBCC", VA = "0x277CBCC")]
		public int InitializeController(ParticleGrassController controller, Vector4[] positions, int numPositions, Vector3 chunkWorldPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x277D2B8", Offset = "0x277D2B8", VA = "0x277D2B8")]
		public ParticleGrassLoader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F7")]
	public class PositionCache
	{
		[Serializable]
		[Token(Token = "0x20006F8")]
		public struct SerializableVector4
		{
			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float w;

			[Token(Token = "0x6001299")]
			[Address(RVA = "0xD9EFC4", Offset = "0xD9EFC4", VA = "0xD9EFC4")]
			public SerializableVector4(Vector4 vec)
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0xD9EFD0", Offset = "0xD9EFD0", VA = "0xD9EFD0")]
			public Vector3 GetVector4()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int numElems;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] positionsBytes;

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x2787AF0", Offset = "0x2787AF0", VA = "0x2787AF0")]
		public void ToBytes(Vector4[] positions, int numPositions)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x277D128", Offset = "0x277D128", VA = "0x277D128")]
		public Vector4[] ToArray(int num = -1)
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x2787E20", Offset = "0x2787E20", VA = "0x2787E20")]
		public PositionCache()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB190D8", Offset = "0xB190D8")]
	public class PositionCacheTiles : ScriptableObject
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<PositionCache> cacheTiles;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<Vector2Int> tileXY;

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x2787E74", Offset = "0x2787E74", VA = "0x2787E74")]
		private int GetIndex(Vector2Int vec)
		{
			return default(int);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x2787F38", Offset = "0x2787F38", VA = "0x2787F38")]
		public PositionCache CreatePositionCache(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x277CA4C", Offset = "0x277CA4C", VA = "0x277CA4C")]
		public PositionCache GetPositionCache(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x278804C", Offset = "0x278804C", VA = "0x278804C")]
		private void ClearAll()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x27880C4", Offset = "0x27880C4", VA = "0x27880C4")]
		public PositionCacheTiles()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class HintController : MonoBehaviour
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputService inputService;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23058", Offset = "0xB23058")]
		[SerializeField]
		private GameObject imageMouse;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject imagePs4;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject imageXboxOne;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject imageSiriRemote;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject imageSwitch;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject imageGenericGamepad;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB230F4", Offset = "0xB230F4")]
		[SerializeField]
		private GameObject textMouse;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject textTouch;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject textSirRemote;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject textGameController;

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x126AF44", Offset = "0x126AF44", VA = "0x126AF44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x126C058", Offset = "0x126C058", VA = "0x126C058")]
		private void SetupXbox()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x126BF4C", Offset = "0x126BF4C", VA = "0x126BF4C")]
		private void SetupPlaystation()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x126BEE4", Offset = "0x126BEE4", VA = "0x126BEE4")]
		private void SetupNSW()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x126BBA4", Offset = "0x126BBA4", VA = "0x126BBA4")]
		private void SetupTvOS()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x126B934", Offset = "0x126B934", VA = "0x126B934")]
		private void SetupIOS()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x126B6C4", Offset = "0x126B6C4", VA = "0x126B6C4")]
		private void SetupAndroid()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x126B3C8", Offset = "0x126B3C8", VA = "0x126B3C8")]
		private void SetupDesktop()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x126C164", Offset = "0x126C164", VA = "0x126C164")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x126B250", Offset = "0x126B250", VA = "0x126B250")]
		private void DisableAllImages()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x126B32C", Offset = "0x126B32C", VA = "0x126B32C")]
		private void DisableAllTexts()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x126C168", Offset = "0x126C168", VA = "0x126C168")]
		public HintController()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class IntentoryItemRequestHandler
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string requestedItemName;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string requestCompletionAction;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocaKey requestCompletionActionLocaKey;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requestActionUnskippable;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action requestCompletionCallback;

		[Token(Token = "0x1700016E")]
		public bool HasRequestPending
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x127C6B8", Offset = "0x127C6B8", VA = "0x127C6B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x127C6DC", Offset = "0x127C6DC", VA = "0x127C6DC")]
		public bool IsRequestedItem(InventoryItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x127C774", Offset = "0x127C774", VA = "0x127C774")]
		public bool IsItemRequested(InventoryItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x127C778", Offset = "0x127C778", VA = "0x127C778")]
		public bool IsItemRequestedAndUnskippable(InventoryItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x127C7B0", Offset = "0x127C7B0", VA = "0x127C7B0")]
		public void RequestItem(string itemName, string requestCompletionAction, LocaKey requestCompletionActionLocaKey, Action callback, bool unskippable = false)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x127C830", Offset = "0x127C830", VA = "0x127C830")]
		public void RevokeRequest()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x127C8A8", Offset = "0x127C8A8", VA = "0x127C8A8")]
		public void ProvideItem(InventoryItem item)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x127C86C", Offset = "0x127C86C", VA = "0x127C86C")]
		private void CleanUpRequest()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x127C910", Offset = "0x127C910", VA = "0x127C910")]
		public IntentoryItemRequestHandler()
		{
		}
	}
	[Token(Token = "0x20006FC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB19140", Offset = "0xB19140")]
	public class InventoryItem : ScriptableObject
	{
		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23170", Offset = "0xB23170")]
		public string itemKey;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB231A8", Offset = "0xB231A8")]
		public string saveGameKey;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB231E0", Offset = "0xB231E0")]
		public Sprite sprite;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 position;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotation;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 scale;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color spriteColor;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject lookAtModel;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject lookAtModelInstance;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LookAtModelSwitcher switcher;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB231F0", Offset = "0xB231F0")]
		[EventRef]
		public string enterLookAtSoundEvent;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[EventRef]
		public string exitLookAtSoundEvent;

		[Token(Token = "0x1700016F")]
		public LocaKey itemLocaKey
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xEABCDC", Offset = "0xEABCDC", VA = "0xEABCDC")]
			get
			{
				return default(LocaKey);
			}
		}

		[Token(Token = "0x17000170")]
		public bool hasLookAtModelPrefab
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xEABD48", Offset = "0xEABD48", VA = "0xEABD48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public string preferredKey
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xEABDB4", Offset = "0xEABDB4", VA = "0xEABDB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xEABDF0", Offset = "0xEABDF0", VA = "0xEABDF0")]
		public string GetSoundEventForLookAt(LookAtEvent lookAtEvent)
		{
			return null;
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xEABE18", Offset = "0xEABE18", VA = "0xEABE18")]
		public void Toggle(int index)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xEAC018", Offset = "0xEAC018", VA = "0xEAC018")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xEAC18C", Offset = "0xEAC18C", VA = "0xEAC18C")]
		public InventoryItem()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	public interface IIterationUpdater
	{
		[Token(Token = "0x60012BC")]
		void Deregister(IIterationUpdater removingObject);

		[Token(Token = "0x60012BD")]
		void Register(IIterationUpdater newObject);

		[Token(Token = "0x60012BE")]
		void OnUpdate();
	}
	[Token(Token = "0x20006FE")]
	public class IteratingUpdater : MonoBehaviour, IIterationUpdater
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NarrativeSystemUpdater narativeUpdater;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IIterationUpdater> registeredObjects;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentIndex;

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xEAE924", Offset = "0xEAE924", VA = "0xEAE924")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xEAEA8C", Offset = "0xEAEA8C", VA = "0xEAEA8C", Slot = "5")]
		public void Register(IIterationUpdater newObject)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xEAEB2C", Offset = "0xEAEB2C", VA = "0xEAEB2C", Slot = "4")]
		public void Deregister(IIterationUpdater removingObject)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xEAEBCC", Offset = "0xEAEBCC", VA = "0xEAEBCC", Slot = "6")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xEAED44", Offset = "0xEAED44", VA = "0xEAED44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xEAEE74", Offset = "0xEAEE74", VA = "0xEAEE74")]
		public IteratingUpdater()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006FF")]
	public class FogSettings
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableFog;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color fogColor;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FogMode fogMode;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float start;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float end;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float density;

		[Token(Token = "0x17000172")]
		private bool _isLinearFog
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xFCB378", Offset = "0xFCB378", VA = "0xFCB378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		private bool _isDensityFog
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0xFCB39C", Offset = "0xFCB39C", VA = "0xFCB39C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xFCB3C0", Offset = "0xFCB3C0", VA = "0xFCB3C0")]
		public void Apply()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xFCB424", Offset = "0xFCB424", VA = "0xFCB424")]
		public FogSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000700")]
	public class LightSetup
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material skyboxMaterial;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light lightObject;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useGradient;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB23284", Offset = "0xB23284")]
		public Color ambientSkyColor;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB2329C", Offset = "0xB2329C")]
		public Color ambientEquatorColor;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB232B4", Offset = "0xB232B4")]
		public Color ambientGroundColor;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float envIntensity;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Cubemap reflectionProbe;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float reflectionIntensity;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PostProcessVolume volume;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PostProcessProfile postFX;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FogSettings fog;

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xEB290C", Offset = "0xEB290C", VA = "0xEB290C")]
		public void Apply()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xEB2BF4", Offset = "0xEB2BF4", VA = "0xEB2BF4")]
		public void Revert()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xEB2C9C", Offset = "0xEB2C9C", VA = "0xEB2C9C")]
		public LightSetup()
		{
		}
	}
	[Token(Token = "0x2000701")]
	public class LightSetupData : MonoBehaviour
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LightSetup> setups;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int setupAppliedOnAwake;

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xEB2CAC", Offset = "0xEB2CAC", VA = "0xEB2CAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xEB2D18", Offset = "0xEB2D18", VA = "0xEB2D18")]
		public void ApplySetup(int num)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xEB2DB4", Offset = "0xEB2DB4", VA = "0xEB2DB4")]
		public LightSetupData()
		{
		}
	}
	[Token(Token = "0x2000702")]
	public class LinkToStore : MonoBehaviour
	{
		[Token(Token = "0x40011AC")]
		private const string APPSTORE_URL_PREFIX = "market://details?id=";

		[Token(Token = "0x40011AD")]
		private const string FACEBOOK_PREFIX = "https://www.facebook.com/";

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xEB2EF8", Offset = "0xEB2EF8", VA = "0xEB2EF8")]
		public void OpenAppStore(string appId)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xEB2F94", Offset = "0xEB2F94", VA = "0xEB2F94")]
		public void OpenAppFacebookPage(string facebookId)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xEB3020", Offset = "0xEB3020", VA = "0xEB3020")]
		public void OpenAppWebsite(string appUrl)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xEB3060", Offset = "0xEB3060", VA = "0xEB3060")]
		public LinkToStore()
		{
		}
	}
	[Token(Token = "0x2000703")]
	public class LivePostProcessingChanger : MonoBehaviour
	{
		[Token(Token = "0x2000704")]
		public enum mode
		{
			[Token(Token = "0x40011B7")]
			activateWithin,
			[Token(Token = "0x40011B8")]
			activateOutside
		}

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform myRig;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB232CC", Offset = "0xB232CC")]
		public Vector2[] bottomPointList;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB23304", Offset = "0xB23304")]
		public Vector2[] topPointList;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public mode myMode;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string effectName;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform myTrans;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<float> bottomSlopes;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<float> topSlopes;

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xEB3E08", Offset = "0xEB3E08", VA = "0xEB3E08")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xEB3FE8", Offset = "0xEB3FE8", VA = "0xEB3FE8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xEB4420", Offset = "0xEB4420", VA = "0xEB4420")]
		public LivePostProcessingChanger()
		{
		}
	}
	[Token(Token = "0x2000705")]
	public class LookAtModelSwitcher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000706")]
		public class ModelSpritePair
		{
			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject model;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite sprite;

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xF1DB4C", Offset = "0xF1DB4C", VA = "0xF1DB4C")]
			public ModelSpritePair()
			{
			}
		}

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryItem inventoryItem;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ModelSpritePair> modelSpritePairs;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentIndex;

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xEABF8C", Offset = "0xEABF8C", VA = "0xEABF8C")]
		public void Toggle(int newIndex)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xEB813C", Offset = "0xEB813C", VA = "0xEB813C")]
		private void SetOnOff(bool onOff)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xEB8264", Offset = "0xEB8264", VA = "0xEB8264")]
		private void UpdateItemSprite()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xEAC180", Offset = "0xEAC180", VA = "0xEAC180")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xEB82F0", Offset = "0xEB82F0", VA = "0xEB82F0")]
		public LookAtModelSwitcher()
		{
		}
	}
	[Token(Token = "0x2000707")]
	public class AssetRegistrationAccess : MonoBehaviour
	{
		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, object> managers;

		[Token(Token = "0x60012DC")]
		public AssetRegistrationManager<T> GetManager<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x10337A8", Offset = "0x10337A8", VA = "0x10337A8")]
		public AssetRegistrationAccess()
		{
		}
	}
	[Token(Token = "0x2000708")]
	public interface IAssetRegistrationManager
	{
		[Token(Token = "0x60012DE")]
		void LogAllRegisteredAssets();
	}
	[Token(Token = "0x2000709")]
	public class AssetRegistrationManager<T> : IAssetRegistrationManager where T : UnityEngine.Object
	{
		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, List<T>> registeredAssets;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> allRegisteredAssets;

		[Token(Token = "0x17000174")]
		public Dictionary<string, List<T>> RegisteredAssets
		{
			[Token(Token = "0x60012DF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E0")]
		public IEnumerable<T> GetEnumberable()
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		public int GetRegisteredAssetCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012E2")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E3")]
		public void RegisterAsset(T asset, bool integrityCheckRegistration = false)
		{
		}

		[Token(Token = "0x60012E4")]
		public void DeregisterAsset(T asset)
		{
		}

		[Token(Token = "0x60012E5")]
		public void LogAllRegisteredAssets()
		{
		}

		[Token(Token = "0x60012E6")]
		public AssetRegistrationManager()
		{
		}
	}
	[Token(Token = "0x200070A")]
	public class CameraManager : MonoBehaviour
	{
		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB191A8", Offset = "0xB191A8")]
		private sealed class <SetMainCameraOXR>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraManager <>4__this;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RegisteredCamera newRegisteredMainCamera;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__2;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600130A")]
				[Address(RVA = "0x275DA4C", Offset = "0x275DA4C", VA = "0x275DA4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600130C")]
				[Address(RVA = "0x275DA94", Offset = "0x275DA94", VA = "0x275DA94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001307")]
			[Address(RVA = "0x275D848", Offset = "0x275D848", VA = "0x275D848")]
			[DebuggerHidden]
			public <SetMainCameraOXR>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x275D874", Offset = "0x275D874", VA = "0x275D874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x275D878", Offset = "0x275D878", VA = "0x275D878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x275DA54", Offset = "0x275DA54", VA = "0x275DA54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _playerCameraName;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _environmentCameraName;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneManagementService _sceneManagementService;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SoundService _soundService;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<RegisteredCamera> _mainCameraStack;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RegisteredCamera _registeredPlayerCamera;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RegisteredCamera _registeredEnvironmentCamera;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2337C", Offset = "0xB2337C")]
		private RegisteredCamera <RegisteredMainCamera>k__BackingField;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2338C", Offset = "0xB2338C")]
		private PlayerCameraController <PlayerCamera>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PlayerCameraController currentPlayerCameraController;

		[Token(Token = "0x17000175")]
		public RegisteredCamera RegisteredMainCamera
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xE319F4", Offset = "0xE319F4", VA = "0xE319F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302A0", Offset = "0xB302A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xE319FC", Offset = "0xE319FC", VA = "0xE319FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302B0", Offset = "0xB302B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public Camera MainCamera
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0xE31A04", Offset = "0xE31A04", VA = "0xE31A04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public RegisteredCamera RegisteredEnvironmentCamera
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0xE31A1C", Offset = "0xE31A1C", VA = "0xE31A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public RegisteredCamera RegisteredPlayerCamera
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0xE31A24", Offset = "0xE31A24", VA = "0xE31A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		[SerializeField]
		public PlayerCameraController PlayerCamera
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xE31A2C", Offset = "0xE31A2C", VA = "0xE31A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302C0", Offset = "0xB302C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xE31A34", Offset = "0xE31A34", VA = "0xE31A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302D0", Offset = "0xB302D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public string PlayerCameraName
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xE31A3C", Offset = "0xE31A3C", VA = "0xE31A3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public RegisteredCamera WorldCamera
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xE31A44", Offset = "0xE31A44", VA = "0xE31A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public bool CanShowCrosshair
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xE31B40", Offset = "0xE31B40", VA = "0xE31B40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xE31BD4", Offset = "0xE31BD4", VA = "0xE31BD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xE31C5C", Offset = "0xE31C5C", VA = "0xE31C5C")]
		public void Init()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xE31E44", Offset = "0xE31E44", VA = "0xE31E44")]
		public void Deinit()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xE31F04", Offset = "0xE31F04", VA = "0xE31F04")]
		public RegisteredCamera ActivateCamera(string key)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xE31F58", Offset = "0xE31F58", VA = "0xE31F58")]
		private static RegisteredCamera ActivateCamera(RegisteredCamera registeredCamera)
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xE31FF8", Offset = "0xE31FF8", VA = "0xE31FF8")]
		public RegisteredCamera DeactivateCamera(string key)
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xE320CC", Offset = "0xE320CC", VA = "0xE320CC")]
		public RegisteredCamera SetMainCamera(string key, bool skipTransition = false)
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xE32188", Offset = "0xE32188", VA = "0xE32188")]
		public void SetMainCamera(RegisteredCamera newRegisteredMainCamera, bool skipTransition = false)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xE3222C", Offset = "0xE3222C", VA = "0xE3222C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB302E0", Offset = "0xB302E0")]
		private IEnumerator SetMainCameraOXR(RegisteredCamera newRegisteredMainCamera)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xE322C0", Offset = "0xE322C0", VA = "0xE322C0")]
		public void SetMainCameraInternal(RegisteredCamera newRegisteredMainCamera)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xE32700", Offset = "0xE32700", VA = "0xE32700")]
		public void PushMainCamera(RegisteredCamera newRegisteredMainCamera)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xE32890", Offset = "0xE32890", VA = "0xE32890")]
		public RegisteredCamera PushMainCamera(string key)
		{
			return null;
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xE32A44", Offset = "0xE32A44", VA = "0xE32A44")]
		public void PopMainCamera()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xE31324", Offset = "0xE31324", VA = "0xE31324")]
		public void StartEffect(string effectName)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xE313DC", Offset = "0xE313DC", VA = "0xE313DC")]
		public void StopEffect(string effectName)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xE32CF0", Offset = "0xE32CF0", VA = "0xE32CF0")]
		private void GetCameras()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xE32E30", Offset = "0xE32E30", VA = "0xE32E30")]
		private void FindPlayerCamera()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xE32EF4", Offset = "0xE32EF4", VA = "0xE32EF4")]
		private void FindEnvironmentCamera()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xE32F48", Offset = "0xE32F48", VA = "0xE32F48")]
		private void CheckIfOnlyThePlayerCameraIsActive()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xE32644", Offset = "0xE32644", VA = "0xE32644")]
		private void PlaySnapshotSoundEvent(RegisteredCamera registeredCamera)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xE31E4C", Offset = "0xE31E4C", VA = "0xE31E4C")]
		private void StopSnapshotSoundEvent(RegisteredCamera registeredCamera)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xE330F4", Offset = "0xE330F4", VA = "0xE330F4")]
		public CameraManager()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class CreditsSceneUpdater : Updater<CreditsSceneUpdater>
	{
		[Token(Token = "0x600130D")]
		[Address(RVA = "0x158EADC", Offset = "0x158EADC", VA = "0x158EADC")]
		public CreditsSceneUpdater()
		{
		}
	}
	[Token(Token = "0x200070D")]
	public interface IEventSystem
	{
		[Token(Token = "0x600130E")]
		void Reset();

		[Token(Token = "0x600130F")]
		void Deregister(string evt, Action<string> callback);

		[Token(Token = "0x6001310")]
		void ProcessEvents();

		[Token(Token = "0x6001311")]
		void ProcessEvent(string evt);

		[Token(Token = "0x6001312")]
		void RegisterAction(string evt, Action<string> callback);

		[Token(Token = "0x6001313")]
		void SendEvent(string evt);
	}
	[Token(Token = "0x200070E")]
	public class EventSystemBase : IEventSystem
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Queue<string> actionEvents;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, Action<string>> actions;

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x112DB9C", Offset = "0x112DB9C", VA = "0x112DB9C", Slot = "4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1129278", Offset = "0x1129278", VA = "0x1129278", Slot = "8")]
		public void RegisterAction(string evt, Action<string> callback)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1129DA8", Offset = "0x1129DA8", VA = "0x1129DA8", Slot = "5")]
		public void Deregister(string evt, Action<string> callback)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x11242DC", Offset = "0x11242DC", VA = "0x11242DC", Slot = "9")]
		public void SendEvent(string evt)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x112DC14", Offset = "0x112DC14", VA = "0x112DC14", Slot = "6")]
		public void ProcessEvents()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x112DC98", Offset = "0x112DC98", VA = "0x112DC98", Slot = "7")]
		public void ProcessEvent(string evt)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x112DD74", Offset = "0x112DD74", VA = "0x112DD74")]
		public EventSystemBase()
		{
		}
	}
	[Token(Token = "0x200070F")]
	public class EventSystemStaticBase<T> : EventSystemBase, IEventSystem where T : IEventSystem, new()
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IEventSystem instance;

		[Token(Token = "0x600131B")]
		static EventSystemStaticBase()
		{
		}

		[Token(Token = "0x600131C")]
		public new static void Reset()
		{
		}

		[Token(Token = "0x600131D")]
		public new static void Deregister(string evt, Action<string> callback)
		{
		}

		[Token(Token = "0x600131E")]
		public new static void ProcessEvents()
		{
		}

		[Token(Token = "0x600131F")]
		public new static void RegisterAction(string evt, Action<string> callback)
		{
		}

		[Token(Token = "0x6001320")]
		public new static void SendEvent(string evt)
		{
		}

		[Token(Token = "0x6001321")]
		public static void SendImmediateEvent(string evt)
		{
		}

		[Token(Token = "0x6001322")]
		public EventSystemStaticBase()
		{
		}
	}
	[Token(Token = "0x2000710")]
	public class GameEventSystem : EventSystemStaticBase<GameEventSystem>, IEventSystem
	{
		[Token(Token = "0x6001323")]
		[Address(RVA = "0xFD01EC", Offset = "0xFD01EC", VA = "0xFD01EC")]
		public GameEventSystem()
		{
		}
	}
	[Token(Token = "0x2000711")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB191B8", Offset = "0xB191B8")]
	public class GameManager : SingletonMono<GameManager>
	{
		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2339C", Offset = "0xB2339C")]
		[SerializeField]
		private AssetRegistrationAccess assetRegistrationAccess;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetRegistrationAccess assetRegistrationAccessIntegrityCheck;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIManager uiManager;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UIInteractableController uIInteractableController;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CameraManager cameraManager;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CarManager _carManager;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PauseManager _pauseManager;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public SceneSet mainMenuSceneSet;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23468", Offset = "0xB23468")]
		public RideAutoQuit autoQuit;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB234A0", Offset = "0xB234A0")]
		private bool <isAbortingRide>k__BackingField;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB234B0", Offset = "0xB234B0")]
		private bool <isRideRunning>k__BackingField;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB234C0", Offset = "0xB234C0")]
		private readonly RideEnvironmentManager <environmentManager>k__BackingField;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OXRSubtitles subtitlesVR;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnStartRide;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action OnQuitRide;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GlobalInteractableState globalInteractableState;

		[Token(Token = "0x1700017F")]
		public bool isAbortingRide
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xFD0438", Offset = "0xFD0438", VA = "0xFD0438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30390", Offset = "0xB30390")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xFD0440", Offset = "0xFD0440", VA = "0xFD0440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303A0", Offset = "0xB303A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool isRideRunning
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xFD044C", Offset = "0xFD044C", VA = "0xFD044C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303B0", Offset = "0xB303B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001327")]
			[Address(RVA = "0xFD0454", Offset = "0xFD0454", VA = "0xFD0454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303C0", Offset = "0xB303C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public UIManager UIManager
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xFD0460", Offset = "0xFD0460", VA = "0xFD0460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public UIInteractableController UIInteractableController
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0xFD0468", Offset = "0xFD0468", VA = "0xFD0468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public CameraManager CameraManager
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0xFD0470", Offset = "0xFD0470", VA = "0xFD0470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public NarrativeSystemManager NarrativeSystemManager
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xFD0478", Offset = "0xFD0478", VA = "0xFD0478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public CarManager CarManager
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xFD0480", Offset = "0xFD0480", VA = "0xFD0480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public static PauseManager pauseManager
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xFD0488", Offset = "0xFD0488", VA = "0xFD0488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public RideEnvironmentManager environmentManager
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xFD0508", Offset = "0xFD0508", VA = "0xFD0508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303D0", Offset = "0xB303D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public VideoController VideoController
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0xFD0510", Offset = "0xFD0510", VA = "0xFD0510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public bool globalIsInteractablesEnabled
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xFD0BA8", Offset = "0xFD0BA8", VA = "0xFD0BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xFD05B4", Offset = "0xFD05B4", VA = "0xFD05B4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xFD0608", Offset = "0xFD0608", VA = "0xFD0608")]
		private void Start()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xFD0778", Offset = "0xFD0778", VA = "0xFD0778")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xFD07E4", Offset = "0xFD07E4", VA = "0xFD07E4")]
		public void EndRide()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xFD09D8", Offset = "0xFD09D8", VA = "0xFD09D8")]
		public void BackToMainMenu()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xFD0898", Offset = "0xFD0898", VA = "0xFD0898")]
		private void CleanUpRide()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xFD0B14", Offset = "0xFD0B14", VA = "0xFD0B14")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xFD0BC4", Offset = "0xFD0BC4", VA = "0xFD0BC4")]
		public void MuteInteractions()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xFD0BE8", Offset = "0xFD0BE8", VA = "0xFD0BE8")]
		public void UnmuteInteractions()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xFCDB3C", Offset = "0xFCDB3C", VA = "0xFCDB3C")]
		public void MuteInteractionsFromGraph()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xFCDC84", Offset = "0xFCDC84", VA = "0xFCDC84")]
		public void UnmuteInteractionsFromGraph()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xFD0D44", Offset = "0xFD0D44", VA = "0xFD0D44")]
		public void MuteInteractionsAndHideCrosshair()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xFD0D68", Offset = "0xFD0D68", VA = "0xFD0D68")]
		public void UnmuteInteractionsAndShowCrosshair()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xFD0CC8", Offset = "0xFD0CC8", VA = "0xFD0CC8")]
		public void HideCrosshair()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xFD0D1C", Offset = "0xFD0D1C", VA = "0xFD0D1C")]
		public void ShowCrosshair()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xFD0D98", Offset = "0xFD0D98", VA = "0xFD0D98")]
		public void ChangeCrosshair(UICrosshairController.CrosshairGraphic graphic)
		{
		}

		[Token(Token = "0x6001341")]
		public static List<T> GetAllObjectsOfType<T>(string dbgLogPrefix = "GetAllObjectsOfType")
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xFD0DC0", Offset = "0xFD0DC0", VA = "0xFD0DC0")]
		public static void IntegrityCheckRegistration()
		{
		}

		[Token(Token = "0x6001343")]
		public static void RegisterAssetWith<T>(AssetRegistrationAccess registry, T asset) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001344")]
		public static void RegisterAsset<T>(T asset) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001345")]
		public static void DeregisterAsset<T>(T asset) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001346")]
		public static IEnumerable<T> GetEnumerableAssets<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		public static int GetRegisteredAssetsCount<T>() where T : UnityEngine.Object
		{
			return default(int);
		}

		[Token(Token = "0x6001348")]
		public static T FindAsset<T>(string name, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		public static List<T> FindAssets<T>(string name, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		public static bool TryGetAsset<T>(string name, out T asset, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		public static bool TryGetAssets<T>(string name, out List<T> assets, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xFD0E1C", Offset = "0xFD0E1C", VA = "0xFD0E1C")]
		public static RegisteredInteractable FindInteractable(string name)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xFD0E80", Offset = "0xFD0E80", VA = "0xFD0E80")]
		public static RegisteredCharacterAnimationController GetCharacterController(Graph p_graph, string driverBlackboardVariableName)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xFD0EF4", Offset = "0xFD0EF4", VA = "0xFD0EF4")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x2000712")]
	public class GlobalInteractableState
	{
		[NonSerialized]
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<bool> areInteractionsGloballyEnabled;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _mutedFromGraph;

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xFD5004", Offset = "0xFD5004", VA = "0xFD5004")]
		public void RestoreFromSaveGame(bool data)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xFD0BE0", Offset = "0xFD0BE0", VA = "0xFD0BE0")]
		public void MuteInteractions()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xFD0C00", Offset = "0xFD0C00", VA = "0xFD0C00")]
		public void UnmuteInteractions()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xFD0C90", Offset = "0xFD0C90", VA = "0xFD0C90")]
		public void MuteInteractionsFromGraph()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xFD0CF0", Offset = "0xFD0CF0", VA = "0xFD0CF0")]
		public void UnmuteInteractionsFromGraph()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xFD5040", Offset = "0xFD5040", VA = "0xFD5040")]
		private void PushGlobalInteractablesEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xFD50B0", Offset = "0xFD50B0", VA = "0xFD50B0")]
		private void PopGlobalInteractablesEnabled()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xFD0FE4", Offset = "0xFD0FE4", VA = "0xFD0FE4")]
		public GlobalInteractableState()
		{
		}
	}
	[Token(Token = "0x2000713")]
	public class MainMenuUpdater : Updater<MainMenuUpdater>
	{
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1580B54", Offset = "0x1580B54", VA = "0x1580B54")]
		public MainMenuUpdater()
		{
		}
	}
	[Token(Token = "0x2000714")]
	public class ManagedCrosshair
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UICrosshairController crosshairController;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isLockedOnInteractable;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _shouldShowCrosshair;

		[Token(Token = "0x1700018A")]
		private bool CanShowCrosshair
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x1581B74", Offset = "0x1581B74", VA = "0x1581B74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1581B38", Offset = "0x1581B38", VA = "0x1581B38")]
		public ManagedCrosshair(UICrosshairController controller)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1581C54", Offset = "0x1581C54", VA = "0x1581C54")]
		public void Display()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1581CDC", Offset = "0x1581CDC", VA = "0x1581CDC")]
		public void Hide()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1581C84", Offset = "0x1581C84", VA = "0x1581C84")]
		public void UpdateVisiblity()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1581CE4", Offset = "0x1581CE4", VA = "0x1581CE4")]
		public void LockOnInteractable(bool lockedOn)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1581D14", Offset = "0x1581D14", VA = "0x1581D14")]
		public void ChangeGraphic(UICrosshairController.CrosshairGraphic newCrosshair)
		{
		}
	}
	[Token(Token = "0x2000715")]
	public class NarrativeEventSystem : EventSystemBase
	{
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x182AF1C", Offset = "0x182AF1C", VA = "0x182AF1C")]
		public NarrativeEventSystem()
		{
		}
	}
	[Token(Token = "0x2000716")]
	internal class NarrativeInterruptionHandler
	{
		[Token(Token = "0x2000717")]
		public enum IntteruptionRequestCause
		{
			[Token(Token = "0x40011EE")]
			MENU_OPENED,
			[Token(Token = "0x40011EF")]
			SUB_SEQUENCE_WAITING
		}

		[Token(Token = "0x2000718")]
		public class InterruptionRequest
		{
			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntteruptionRequestCause cause;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int priority;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> interruptionRequestCallback;

			[Token(Token = "0x6001367")]
			[Address(RVA = "0xD96EFC", Offset = "0xD96EFC", VA = "0xD96EFC")]
			public InterruptionRequest()
			{
			}
		}

		[Token(Token = "0x2000719")]
		public class InterruptionData
		{
			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Flow flow;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Node node;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action offerInterruptionCallback;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public InterruptionRequest request;

			[Token(Token = "0x6001368")]
			[Address(RVA = "0xD96EF4", Offset = "0xD96EF4", VA = "0xD96EF4")]
			public InterruptionData()
			{
			}
		}

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<InterruptionData> interruptionStack;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<InterruptionRequest> interruptionRequests;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentPriority;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x182AF24", Offset = "0x182AF24", VA = "0x182AF24")]
		public bool RequestInterruption(int p_priority, Action<bool> interruptionRequestCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x182AFEC", Offset = "0x182AFEC", VA = "0x182AFEC")]
		public void SignalSequenceFinished()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x182B060", Offset = "0x182B060", VA = "0x182B060")]
		private InterruptionRequest GetHighestPriorityRequest()
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x182B190", Offset = "0x182B190", VA = "0x182B190")]
		public bool OfferInterruptionPoint(Action offerInterruptionCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x182B1CC", Offset = "0x182B1CC", VA = "0x182B1CC")]
		public bool OfferInterruptionPoint(Flow interruptedFlow, DriverSpeechNarrativeNode interruptedDriverSpeechNode, Action offerInterruptionCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x182B32C", Offset = "0x182B32C", VA = "0x182B32C")]
		private void AcceptInterruptionPoint(InterruptionData offer)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x182B3EC", Offset = "0x182B3EC", VA = "0x182B3EC")]
		public NarrativeInterruptionHandler()
		{
		}
	}
	[Token(Token = "0x200071A")]
	public class NarrativeSystemManager : MonoBehaviour
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DriverSpeechConfig driverSpeechConfig;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FlowScriptController> currentFlowScriptController;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FlowScriptController lastAddedFlowScriptController;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, CheckPointNarrativeNode> currentCheckpoints;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntentoryItemRequestHandler inventoryItemRequestHandler;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NarrativeEventSystem eventSystem;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RegisteredEnvironment currentEnvironment;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool wantToInterruptForSubSequence_Critical;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool wantToInterruptForSubSequence_NonCritical;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool wantToInterruptForMenu;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NarrativeInterruptionHandler interruptionHandler;

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x182B6E0", Offset = "0x182B6E0", VA = "0x182B6E0")]
		public void AddFlowController(FlowScriptController ctrl)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x182B754", Offset = "0x182B754", VA = "0x182B754")]
		private void Update()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x182B770", Offset = "0x182B770", VA = "0x182B770")]
		public bool RequestInterruption(int p_priority, Action<bool> interruptionRequestCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x182B794", Offset = "0x182B794", VA = "0x182B794")]
		public void SignalSequenceFinished()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x182B7AC", Offset = "0x182B7AC", VA = "0x182B7AC")]
		public bool OfferInterruptionPoint(Action offerInterruptionCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		public void SetBlackBoardValue<T>(string name, T value)
		{
		}

		[Token(Token = "0x600136F")]
		public T GetBlackboardValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x182B7F4", Offset = "0x182B7F4", VA = "0x182B7F4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x182B7F8", Offset = "0x182B7F8", VA = "0x182B7F8")]
		public NarrativeSystemManager()
		{
		}
	}
	[Token(Token = "0x200071B")]
	public class NarrativeSystemUpdater : Updater<NarrativeSystemUpdater>
	{
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x182B920", Offset = "0x182B920", VA = "0x182B920")]
		public NarrativeSystemUpdater()
		{
		}
	}
	[Token(Token = "0x200071C")]
	public interface IPausable
	{
		[Token(Token = "0x6001373")]
		void OnPause();

		[Token(Token = "0x6001374")]
		void OnResume();
	}
	[Token(Token = "0x200071D")]
	public class UnityTimePauser : IPausable
	{
		[Token(Token = "0x6001375")]
		[Address(RVA = "0xF368A4", Offset = "0xF368A4", VA = "0xF368A4", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xF368B0", Offset = "0xF368B0", VA = "0xF368B0", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xF368BC", Offset = "0xF368BC", VA = "0xF368BC")]
		public UnityTimePauser()
		{
		}
	}
	[Token(Token = "0x200071E")]
	public class InteractionPauser : IPausable
	{
		[Token(Token = "0x6001378")]
		[Address(RVA = "0xEAA6AC", Offset = "0xEAA6AC", VA = "0xEAA6AC", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xEAA72C", Offset = "0xEAA72C", VA = "0xEAA72C", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xEAA7AC", Offset = "0xEAA7AC", VA = "0xEAA7AC")]
		public InteractionPauser()
		{
		}
	}
	[Token(Token = "0x200071F")]
	public class PauseManager : MonoBehaviour
	{
		[Token(Token = "0x2000720")]
		public enum PauseMode
		{
			[Token(Token = "0x4001209")]
			None,
			[Token(Token = "0x400120A")]
			HardPause,
			[Token(Token = "0x400120B")]
			SoftPause,
			[Token(Token = "0x400120C")]
			All
		}

		[Token(Token = "0x2000721")]
		public enum AutoPauseMode
		{
			[Token(Token = "0x400120E")]
			None,
			[Token(Token = "0x400120F")]
			FreezeGame,
			[Token(Token = "0x4001210")]
			OpenPauseMenu
		}

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB234D0", Offset = "0xB234D0")]
		private AutoPauseMode _autoPauseMode;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _autoPauseInEditor;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2352C", Offset = "0xB2352C")]
		private PauseMode <CurrentPauseMode>k__BackingField;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityTimePauser pausableTime;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InteractionPauser pausableInteractions;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PauseMode, List<IPausable>> pausableLists;

		[Token(Token = "0x1700018B")]
		public PauseMode CurrentPauseMode
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x277D37C", Offset = "0x277D37C", VA = "0x277D37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303E0", Offset = "0xB303E0")]
			get
			{
				return default(PauseMode);
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x277D384", Offset = "0x277D384", VA = "0x277D384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303F0", Offset = "0xB303F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public bool IsPaused
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x277D38C", Offset = "0x277D38C", VA = "0x277D38C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x277D39C", Offset = "0x277D39C", VA = "0x277D39C")]
		public void RegisterPausable(IPausable pausable, PauseMode mode = PauseMode.All)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x277D474", Offset = "0x277D474", VA = "0x277D474")]
		public void UnregisterPausable(IPausable pausable, PauseMode mode = PauseMode.All)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x277D500", Offset = "0x277D500", VA = "0x277D500")]
		public void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x277D6D8", Offset = "0x277D6D8", VA = "0x277D6D8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x277D950", Offset = "0x277D950", VA = "0x277D950")]
		public void Deinit()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x277D6A0", Offset = "0x277D6A0", VA = "0x277D6A0")]
		public bool EnterPause(PauseMode pauseMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x277D678", Offset = "0x277D678", VA = "0x277D678")]
		public bool ExitPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x277DAAC", Offset = "0x277DAAC", VA = "0x277DAAC")]
		private void ApplyPauseMode(PauseMode mode)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x277DB3C", Offset = "0x277DB3C", VA = "0x277DB3C")]
		private void ResumeFromCurrentMode()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x277DBC0", Offset = "0x277DBC0", VA = "0x277DBC0")]
		private void PausePausables(List<IPausable> pausables)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x277DD4C", Offset = "0x277DD4C", VA = "0x277DD4C")]
		private void ResumePausables(List<IPausable> pausables)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x277DEDC", Offset = "0x277DEDC", VA = "0x277DEDC")]
		public PauseManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000722")]
	public class RideAutoQuit
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2353C", Offset = "0xB2353C")]
		[SerializeField]
		private bool _autoQuitIfNoInput;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _autoQuitTime;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PauseMenuController _pauseMenuController;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _collectedAutoQuitTime;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneManagementService _sceneService;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InputService _inputService;

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xEC9570", Offset = "0xEC9570", VA = "0xEC9570")]
		public void Init()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xEC9658", Offset = "0xEC9658", VA = "0xEC9658")]
		public void Deinit()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xEC965C", Offset = "0xEC965C", VA = "0xEC965C")]
		public RideAutoQuit()
		{
		}
	}
	[Token(Token = "0x2000723")]
	public class SceneObjectRegistry
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Type, Action<UnityEngine.Object>> onRegisteredAssetOfType;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<Type, Action<UnityEngine.Object>> onDeregisteredAssetOfType;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static PauseManager pauseManager;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AssetRegistrationAccess assetRegistrationAccess;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AssetRegistrationAccess assetRegistrationAccessIntegrityCheck;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1104478", Offset = "0x1104478", VA = "0x1104478")]
		public static void Init(PauseManager pauseManager, AssetRegistrationAccess assetRegistrationAccess, AssetRegistrationAccess assetRegistrationAccessIntegrityCheck)
		{
		}

		[Token(Token = "0x600138E")]
		public static List<T> GetAllObjectsOfType<T>(string dbgLogPrefix = "GetAllObjectsOfType")
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x110451C", Offset = "0x110451C", VA = "0x110451C")]
		public static void IntegrityCheckRegistration()
		{
		}

		[Token(Token = "0x6001390")]
		public static void RegisterAssetWith<T>(AssetRegistrationAccess registry, T asset) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001391")]
		public static void RegisterAsset<T>(T asset) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001392")]
		public static void DeregisterAsset<T>(T asset) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001393")]
		public static IEnumerable<T> GetEnumerableAssets<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		public static int GetRegisteredAssetsCount<T>() where T : UnityEngine.Object
		{
			return default(int);
		}

		[Token(Token = "0x6001395")]
		public static T FindAsset<T>(string name, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001396")]
		public static List<T> FindAssets<T>(string name, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001397")]
		public static bool TryGetAsset<T>(string name, out T asset, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001398")]
		public static bool TryGetAssets<T>(string name, out List<T> assets, bool integrityCheck = false) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1104744", Offset = "0x1104744", VA = "0x1104744")]
		public static RegisteredInteractable FindInteractable(string name)
		{
			return null;
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1104858", Offset = "0x1104858", VA = "0x1104858")]
		public static RegisteredCharacterAnimationController GetCharacterController(Graph p_graph, string driverBlackboardVariableName)
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x11048FC", Offset = "0x11048FC", VA = "0x11048FC")]
		public SceneObjectRegistry()
		{
		}
	}
	[Token(Token = "0x2000724")]
	public class SplashScreenUpdater : Updater<SplashScreenUpdater>
	{
		[Token(Token = "0x600139D")]
		[Address(RVA = "0xDACB74", Offset = "0xDACB74", VA = "0xDACB74")]
		public SplashScreenUpdater()
		{
		}
	}
	[Token(Token = "0x2000725")]
	public class UIManager : MonoBehaviour
	{
		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB191CC", Offset = "0xB191CC")]
		private sealed class <CloseAllMenusDelayed>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frameDelayCount;

			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIManager <>4__this;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700019A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E0")]
				[Address(RVA = "0xDA5DF4", Offset = "0xDA5DF4", VA = "0xDA5DF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E2")]
				[Address(RVA = "0xDA5E3C", Offset = "0xDA5E3C", VA = "0xDA5E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xDA5C9C", Offset = "0xDA5C9C", VA = "0xDA5C9C")]
			[DebuggerHidden]
			public <CloseAllMenusDelayed>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xDA5CC8", Offset = "0xDA5CC8", VA = "0xDA5CC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xDA5CCC", Offset = "0xDA5CCC", VA = "0xDA5CCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xDA5DFC", Offset = "0xDA5DFC", VA = "0xDA5DFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CanvasScreen> managedScreens;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB235A8", Offset = "0xB235A8")]
		private UIScreenTextController screenTextController;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UIPlayerChoicesController playerChoicesController;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UIHintTextController hintTextController;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UICrosshairController crosshairController;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23624", Offset = "0xB23624")]
		[SerializeField]
		public UILookAtController lookAtController;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public UIInteractableController interactableController;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InventoryUIController inventoryController;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PuzzlePlaceholderUI puzzlePlaceholderUI;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PauseMenuController pauseMenuController;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ModalWindowController modalWindowController;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameplayCheatsController gameplayCheatsController;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB236D0", Offset = "0xB236D0")]
		[SerializeField]
		private FadeAlpha fadeAlphaScript;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color fadeColorVR;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2372C", Offset = "0xB2372C")]
		[SerializeField]
		public Transform markerContainer;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Transform OXR_markerContainer;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject uiBinocularPanel;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject uiMagicCamera;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB237A8", Offset = "0xB237A8")]
		public InventoryItem menuOpenerItem;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MenuOverlayBase _cutsceneScreen;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _pauseButtonObject;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public GameCenterAccessPointController gameCenterAccessPoint;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int _noninternativeFramesAfterPause;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ScreenHistory<MenuOverlayBase> _screenHistory;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MenuOverlayBase _menuToPush;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MenuOverlayBase _menuToPop;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _pendingMenuPush;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool _pendingMenuPop;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RegisteredCamera _deactivatedPlayerCamera;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _hasTopScreenDisabledCancel;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool _allowPause;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool _allowPlayerChoices;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		private bool _interactionWasPressed;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _ingameFrameCounter;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _inCursorHideMode;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Image _fadeAlphaImage;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23834", Offset = "0xB23834")]
		private bool <PrettyPleaseDontPause>k__BackingField;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23844", Offset = "0xB23844")]
		private InputService <InputService>k__BackingField;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23854", Offset = "0xB23854")]
		private SoundService <SoundService>k__BackingField;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23864", Offset = "0xB23864")]
		private VideoService <VideoService>k__BackingField;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23874", Offset = "0xB23874")]
		private ManagedCrosshair <ManagedCrosshair>k__BackingField;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private UILookAtItemDisplay_LightingController lightingController;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23884", Offset = "0xB23884")]
		private bool <CanUseInteractionWasPressed>k__BackingField;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23894", Offset = "0xB23894")]
		private bool <CanUseInteractionWasReleased>k__BackingField;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private SceneManagementService _sceneManagementService;

		[Token(Token = "0x1700018D")]
		public bool PrettyPleaseDontPause
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xF2DC14", Offset = "0xF2DC14", VA = "0xF2DC14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30400", Offset = "0xB30400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xF2DC1C", Offset = "0xF2DC1C", VA = "0xF2DC1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30410", Offset = "0xB30410")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public InputService InputService
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xF2DC28", Offset = "0xF2DC28", VA = "0xF2DC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30420", Offset = "0xB30420")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xF2DC30", Offset = "0xF2DC30", VA = "0xF2DC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30430", Offset = "0xB30430")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public SoundService SoundService
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xF2DC40", Offset = "0xF2DC40", VA = "0xF2DC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30440", Offset = "0xB30440")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xF2DC48", Offset = "0xF2DC48", VA = "0xF2DC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30450", Offset = "0xB30450")]
			private set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public VideoService VideoService
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xF2DC58", Offset = "0xF2DC58", VA = "0xF2DC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30460", Offset = "0xB30460")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xF2DC60", Offset = "0xF2DC60", VA = "0xF2DC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30470", Offset = "0xB30470")]
			private set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public GameManager GameManager
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xF2DC70", Offset = "0xF2DC70", VA = "0xF2DC70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public PauseManager PauseManager
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xF2DCE0", Offset = "0xF2DCE0", VA = "0xF2DCE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public CameraManager CameraManager
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xF2DCE8", Offset = "0xF2DCE8", VA = "0xF2DCE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public ScreenHistory<MenuOverlayBase> ScreenHistory
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xF2DD64", Offset = "0xF2DD64", VA = "0xF2DD64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public ManagedCrosshair ManagedCrosshair
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xF2DD6C", Offset = "0xF2DD6C", VA = "0xF2DD6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30480", Offset = "0xB30480")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xF2DD74", Offset = "0xF2DD74", VA = "0xF2DD74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30490", Offset = "0xB30490")]
			private set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public bool AllowPlayerChoices
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xF2DD84", Offset = "0xF2DD84", VA = "0xF2DD84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public bool CanUseInteractionWasPressed
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xF2DD8C", Offset = "0xF2DD8C", VA = "0xF2DD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304A0", Offset = "0xB304A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xF2DD94", Offset = "0xF2DD94", VA = "0xF2DD94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304B0", Offset = "0xB304B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool CanUseInteractionWasReleased
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xF2DDA0", Offset = "0xF2DDA0", VA = "0xF2DDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304C0", Offset = "0xB304C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xF2DDA8", Offset = "0xF2DDA8", VA = "0xF2DDA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304D0", Offset = "0xB304D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public bool HasOpenMenu
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0xF2DDB4", Offset = "0xF2DDB4", VA = "0xF2DDB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xF2DB48", Offset = "0xF2DB48", VA = "0xF2DB48")]
		private void FindAllScreensInScenes()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xF2DC10", Offset = "0xF2DC10", VA = "0xF2DC10")]
		private void SetAllManagedScreensToManaged()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xF2DE1C", Offset = "0xF2DE1C", VA = "0xF2DE1C")]
		public void Init()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xF2EDF8", Offset = "0xF2EDF8", VA = "0xF2EDF8")]
		private void StartUpdating()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xF2EFDC", Offset = "0xF2EFDC", VA = "0xF2EFDC")]
		public void Deinit()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xF2F29C", Offset = "0xF2F29C", VA = "0xF2F29C")]
		public void UpdateInteractableUI(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xF2F32C", Offset = "0xF2F32C", VA = "0xF2F32C")]
		public void DisplayScreenText(string key)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xF2F5B0", Offset = "0xF2F5B0", VA = "0xF2F5B0")]
		public void DisplayScreenText(string key, float displayDuration)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xF2F618", Offset = "0xF2F618", VA = "0xF2F618")]
		public void ClearScreenText()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xF2F6F0", Offset = "0xF2F6F0", VA = "0xF2F6F0")]
		public void DisplayPlayerChoices(PlayerChoiceKey key, Action<int> choiceCallback)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xF2FB20", Offset = "0xF2FB20", VA = "0xF2FB20")]
		public void ClearPlayerChoices()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xF2FCC4", Offset = "0xF2FCC4", VA = "0xF2FCC4")]
		public void ForcePlayerChoice(int index)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xF2FCE0", Offset = "0xF2FCE0", VA = "0xF2FCE0")]
		public void DisplayHintText(string primaryKey, string secondaryKey)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xF2FCFC", Offset = "0xF2FCFC", VA = "0xF2FCFC")]
		public void DisplayHintText(string primaryKey, string secondaryKey, float displayDuration)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xF2FD18", Offset = "0xF2FD18", VA = "0xF2FD18")]
		public void ClearHintText()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xF2FD34", Offset = "0xF2FD34", VA = "0xF2FD34")]
		public void ChangeHintTextAnimation(int indexOfAnimation)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xF2FD50", Offset = "0xF2FD50", VA = "0xF2FD50")]
		public void ToggleBinocular(bool enabled)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xF2EA08", Offset = "0xF2EA08", VA = "0xF2EA08")]
		public void ToggleMagicCamera(bool enabled)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xF2FD70", Offset = "0xF2FD70", VA = "0xF2FD70")]
		public void DisplayLookAt(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xF2FD88", Offset = "0xF2FD88", VA = "0xF2FD88")]
		public void DisplayLookAt(InventoryItem inventoryItem)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xF2FDA0", Offset = "0xF2FDA0", VA = "0xF2FDA0")]
		public void OpenInventory()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xF2FDBC", Offset = "0xF2FDBC", VA = "0xF2FDBC")]
		public void FadeOutScene(float fadeDuration, Color fadeColor)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xF2FF34", Offset = "0xF2FF34", VA = "0xF2FF34")]
		public void FadeInScene(float fadeDuration, Color fadeColor)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xF3009C", Offset = "0xF3009C", VA = "0xF3009C")]
		public void OpenPauseMenu()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xF300E8", Offset = "0xF300E8", VA = "0xF300E8")]
		public void OpenPauseMenuFromFocusLoss()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xF30134", Offset = "0xF30134", VA = "0xF30134")]
		public void OpenDialogMessageBox(string headerTextKey, string yesButtonTextKey, string noButtonTextKey, UnityAction YesAction)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xF2977C", Offset = "0xF2977C", VA = "0xF2977C")]
		public void PushMenu(MenuOverlayBase menuScreen, bool pushImmediately = false)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xF30428", Offset = "0xF30428", VA = "0xF30428")]
		public void PopMenu()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xF2D41C", Offset = "0xF2D41C", VA = "0xF2D41C")]
		public void CloseAllMenus()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xF30950", Offset = "0xF30950", VA = "0xF30950")]
		public void PushCutsceneScreen()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xF309AC", Offset = "0xF309AC", VA = "0xF309AC")]
		public void PopCutsceneScreen()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xF309D0", Offset = "0xF309D0", VA = "0xF309D0")]
		public void ResetInputAfterPop()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xF30B24", Offset = "0xF30B24", VA = "0xF30B24")]
		private void PushMenuDuringLateUpdate()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xF30238", Offset = "0xF30238", VA = "0xF30238")]
		private void PushMenuNextFrame()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xF30CBC", Offset = "0xF30CBC", VA = "0xF30CBC")]
		private void PopDuringLateUpdate()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xF306B8", Offset = "0xF306B8", VA = "0xF306B8")]
		private void PopNextFrame()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xF308C8", Offset = "0xF308C8", VA = "0xF308C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB304E0", Offset = "0xB304E0")]
		private IEnumerator CloseAllMenusDelayed(int frameDelayCount = 2)
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xF30CB8", Offset = "0xF30CB8", VA = "0xF30CB8")]
		private void EnterFirstMenu()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xF30E50", Offset = "0xF30E50", VA = "0xF30E50")]
		private void ExitLastMenu()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xF2EAA0", Offset = "0xF2EAA0", VA = "0xF2EAA0")]
		private void ApplyTopScreenProperties()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xF30E54", Offset = "0xF30E54", VA = "0xF30E54")]
		protected void OnUpdate()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xF2EDA8", Offset = "0xF2EDA8", VA = "0xF2EDA8")]
		private void UpdatePauseButtonVisibility(InputSource inputSource)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xF312B8", Offset = "0xF312B8", VA = "0xF312B8")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x2000727")]
	public class UpdateManager : Updater<UpdateManager>
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xF36B7C", Offset = "0xF36B7C", VA = "0xF36B7C")]
		public UpdateManager()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public interface IUpdater
	{
		[Token(Token = "0x60013E4")]
		void StartUpdating(Action action);

		[Token(Token = "0x60013E5")]
		void StopUpdating(Action action);
	}
	[Token(Token = "0x2000729")]
	public class Updater<T> : SingletonMono<T>, IPausable, IUpdater where T : Updater<T>
	{
		[Serializable]
		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB191DC", Offset = "0xB191DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action <>9__11_0;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action <>9__11_1;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action <>9__11_2;

			[Token(Token = "0x60013F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60013F1")]
			internal void <.ctor>b__11_0()
			{
			}

			[Token(Token = "0x60013F2")]
			internal void <.ctor>b__11_1()
			{
			}

			[Token(Token = "0x60013F3")]
			internal void <.ctor>b__11_2()
			{
			}
		}

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action onUpdate;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action onFixedUpdate;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action onLateUpdate;

		[Token(Token = "0x60013E6")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E7")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013E9")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013EA")]
		public void StartUpdating(Action action)
		{
		}

		[Token(Token = "0x60013EB")]
		public void StopUpdating(Action action)
		{
		}

		[Token(Token = "0x60013EC")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60013ED")]
		public void OnResume()
		{
		}

		[Token(Token = "0x60013EE")]
		public Updater()
		{
		}
	}
	[Token(Token = "0x200072B")]
	public class MassMonoTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonoBehaviour targetScript;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string methodName;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool onlySpecific;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MonoBehaviour[] specificScripts;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MonoBehaviour[] targetScripts;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1581D30", Offset = "0x1581D30", VA = "0x1581D30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1581E18", Offset = "0x1581E18", VA = "0x1581E18")]
		private void OnLoopEnd(string obj)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1581F28", Offset = "0x1581F28", VA = "0x1581F28")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x1581FF8", Offset = "0x1581FF8", VA = "0x1581FF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x1581E44", Offset = "0x1581E44", VA = "0x1581E44")]
		private void TriggerMethods(MonoBehaviour[] invokeList)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x15820E0", Offset = "0x15820E0", VA = "0x15820E0")]
		public MassMonoTrigger()
		{
		}
	}
	[Token(Token = "0x200072C")]
	public class MeasureLoadingTimes : MonoBehaviour
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MeasureLoadingTimes Instance;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Performance performance;

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x1583914", Offset = "0x1583914", VA = "0x1583914")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x1583AA4", Offset = "0x1583AA4", VA = "0x1583AA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1583B08", Offset = "0x1583B08", VA = "0x1583B08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1583C6C", Offset = "0x1583C6C", VA = "0x1583C6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x1583DD0", Offset = "0x1583DD0", VA = "0x1583DD0")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1583DD4", Offset = "0x1583DD4", VA = "0x1583DD4")]
		public void AddStep(string desc)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1583DD8", Offset = "0x1583DD8", VA = "0x1583DD8")]
		public void End(string desc)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1583DDC", Offset = "0x1583DDC", VA = "0x1583DDC")]
		public MeasureLoadingTimes()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public class MeasureLoadingTimesCall : MonoBehaviour
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1583DE4", Offset = "0x1583DE4", VA = "0x1583DE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1583E38", Offset = "0x1583E38", VA = "0x1583E38")]
		public MeasureLoadingTimesCall()
		{
		}
	}
	[Token(Token = "0x200072E")]
	public class NarrativeEventListener : MonoBehaviour
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string eventName;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onEvent;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool onlyListenOnce;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isRegistered;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x182A5F4", Offset = "0x182A5F4", VA = "0x182A5F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x182A61C", Offset = "0x182A61C", VA = "0x182A61C")]
		private bool Register()
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x182A768", Offset = "0x182A768", VA = "0x182A768")]
		private void Start()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x182A7EC", Offset = "0x182A7EC", VA = "0x182A7EC")]
		private void OnEvent(string obj)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x182A918", Offset = "0x182A918", VA = "0x182A918")]
		public NarrativeEventListener()
		{
		}
	}
	[Token(Token = "0x200072F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB191EC", Offset = "0xB191EC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB191EC", Offset = "0xB191EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB191EC", Offset = "0xB191EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB191EC", Offset = "0xB191EC")]
	public class AllowIdleModeNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<bool> allowIdleMode;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x10304A0", Offset = "0x10304A0", VA = "0x10304A0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x10305DC", Offset = "0x10305DC", VA = "0x10305DC")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x103062C", Offset = "0x103062C", VA = "0x103062C")]
		public AllowIdleModeNarrativeNode()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1030634", Offset = "0x1030634", VA = "0x1030634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30590", Offset = "0xB30590")]
		private void <RegisterPorts>b__2_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000730")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19298", Offset = "0xB19298")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19298", Offset = "0xB19298")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19298", Offset = "0xB19298")]
	public class CameraEffectNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x2000731")]
		public enum Effect
		{
			[Token(Token = "0x4001268")]
			None,
			[Token(Token = "0x4001269")]
			Drunk,
			[Token(Token = "0x400126A")]
			FadeBlackSphere,
			[Token(Token = "0x400126B")]
			UseCustomName
		}

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<bool> activate;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ValueInput<Effect> effect;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ValueInput<string> customName;

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE30F50", Offset = "0xE30F50", VA = "0xE30F50", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xE31124", Offset = "0xE31124", VA = "0xE31124")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xE31494", Offset = "0xE31494", VA = "0xE31494", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xE31498", Offset = "0xE31498", VA = "0xE31498")]
		public CameraEffectNarrativeNode()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xE314A0", Offset = "0xE314A0", VA = "0xE314A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305A0", Offset = "0xB305A0")]
		private void <RegisterPorts>b__5_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000732")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19320", Offset = "0xB19320")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19320", Offset = "0xB19320")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19320", Offset = "0xB19320")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19320", Offset = "0xB19320")]
	public class CarBranchDecisionsNarrativeNode : CarNarrativeNode
	{
		[Token(Token = "0x2000733")]
		public enum TargetList
		{
			[Token(Token = "0x4001271")]
			Decisions,
			[Token(Token = "0x4001272")]
			BlacklistMarkers,
			[Token(Token = "0x4001273")]
			PreferredMarkers
		}

		[Token(Token = "0x2000734")]
		public enum TargetOperation
		{
			[Token(Token = "0x4001275")]
			Set,
			[Token(Token = "0x4001276")]
			Add,
			[Token(Token = "0x4001277")]
			Remove,
			[Token(Token = "0x4001278")]
			Clear
		}

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<TargetList> _targetList;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<TargetOperation> _targetOperation;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<string[]> _splineMarkers;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput _out;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xE3356C", Offset = "0xE3356C", VA = "0xE3356C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xE33824", Offset = "0xE33824", VA = "0xE33824", Slot = "42")]
		protected override void OnInputFlow(Flow flow)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xE33F04", Offset = "0xE33F04", VA = "0xE33F04", Slot = "41")]
		protected override string[] GetCommentStrings()
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xE33AEC", Offset = "0xE33AEC", VA = "0xE33AEC")]
		private void ApplyOperation(List<string> list, TargetOperation operation)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xE33CAC", Offset = "0xE33CAC", VA = "0xE33CAC")]
		private void ApplyOperation(HashSet<string> list, TargetOperation operation)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xE33F58", Offset = "0xE33F58", VA = "0xE33F58")]
		public CarBranchDecisionsNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000735")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB193CC", Offset = "0xB193CC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB193CC", Offset = "0xB193CC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB193CC", Offset = "0xB193CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB193CC", Offset = "0xB193CC")]
	public class CarBranchModeNarrativeNode : CarNarrativeNode
	{
		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<AutoMode> _autoMode;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<DecisionMode> _decisionMode;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput _out;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xE33F68", Offset = "0xE33F68", VA = "0xE33F68", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xE340CC", Offset = "0xE340CC", VA = "0xE340CC", Slot = "42")]
		protected override void OnInputFlow(Flow flow)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xE3423C", Offset = "0xE3423C", VA = "0xE3423C")]
		public CarBranchModeNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000736")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19478", Offset = "0xB19478")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19478", Offset = "0xB19478")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19478", Offset = "0xB19478")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19478", Offset = "0xB19478")]
	public class CarJumpToNarrativeNode : CarNarrativeNode
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> _splineMarker;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput _out;

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xE35260", Offset = "0xE35260", VA = "0xE35260", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xE35354", Offset = "0xE35354", VA = "0xE35354", Slot = "42")]
		protected override void OnInputFlow(Flow flow)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xE3566C", Offset = "0xE3566C", VA = "0xE3566C")]
		public CarJumpToNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000737")]
	public abstract class CarNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> _carName;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xE336D0", Offset = "0xE336D0", VA = "0xE336D0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xE36454", Offset = "0xE36454", VA = "0xE36454", Slot = "40")]
		protected virtual bool HasInputFlow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xE3645C", Offset = "0xE3645C", VA = "0xE3645C", Slot = "41")]
		protected virtual string[] GetCommentStrings()
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xE36464", Offset = "0xE36464", VA = "0xE36464", Slot = "42")]
		protected virtual void OnInputFlow(Flow flow)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xE33A04", Offset = "0xE33A04", VA = "0xE33A04")]
		protected RegisteredCarController GetCarController([Optional] string carName)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xE354EC", Offset = "0xE354EC", VA = "0xE354EC")]
		protected RegisteredSplineMarker GetSplineMarker(string splineMarker)
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xE33F60", Offset = "0xE33F60", VA = "0xE33F60")]
		protected CarNarrativeNode()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xE36468", Offset = "0xE36468", VA = "0xE36468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305B0", Offset = "0xB305B0")]
		private void <RegisterPorts>b__1_0(Flow flow)
		{
		}
	}
	[Token(Token = "0x2000738")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19524", Offset = "0xB19524")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19524", Offset = "0xB19524")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19524", Offset = "0xB19524")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19524", Offset = "0xB19524")]
	public class CarSpeedOverDistanceNarrativeNode : CarNarrativeNode
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> _splineMarker;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<SpeedValueType> _targetSpeedType;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<float> _targetSpeedValue;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<bool> _overwriteSpeedCurve;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueInput<AnimationCurve> _speedCurve;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput _onBegin;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FlowOutput _onEnd;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Flow _onEndFlow;

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xE375E4", Offset = "0xE375E4", VA = "0xE375E4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xE378D0", Offset = "0xE378D0", VA = "0xE378D0", Slot = "42")]
		protected override void OnInputFlow(Flow flow)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xE37C9C", Offset = "0xE37C9C", VA = "0xE37C9C")]
		protected void OnSpeedChangeOverDistanceEnd()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xE37DE8", Offset = "0xE37DE8", VA = "0xE37DE8")]
		public CarSpeedOverDistanceNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000739")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB195D0", Offset = "0xB195D0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB195D0", Offset = "0xB195D0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB195D0", Offset = "0xB195D0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB195D0", Offset = "0xB195D0")]
	public class CarSpeedOverTimeNarrativeNode : CarNarrativeNode
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<SpeedValueType> _targetSpeedType;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<float> _targetSpeedValue;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<float> _changeDuration;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput _onBegin;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput _onEnd;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Flow _onEndFlow;

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xE37DF0", Offset = "0xE37DF0", VA = "0xE37DF0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xE37FDC", Offset = "0xE37FDC", VA = "0xE37FDC", Slot = "42")]
		protected override void OnInputFlow(Flow flow)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xE382C4", Offset = "0xE382C4", VA = "0xE382C4")]
		private void OnSpeedChangeOverTimeEnd()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xE3840C", Offset = "0xE3840C", VA = "0xE3840C")]
		public CarSpeedOverTimeNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200073A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1967C", Offset = "0xB1967C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1967C", Offset = "0xB1967C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1967C", Offset = "0xB1967C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1967C", Offset = "0xB1967C")]
	public class CarSplineMarkerNarrativeNode : CarNarrativeNode
	{
		[Token(Token = "0x200073B")]
		public enum EventType
		{
			[Token(Token = "0x4001292")]
			RearSegment,
			[Token(Token = "0x4001293")]
			FrontSegment
		}

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<EventType> _eventType;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<string> _splineMarker;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput _onMarkerReached;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Flow _onMarkerReachedFlow;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xE39ED8", Offset = "0xE39ED8", VA = "0xE39ED8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xE3A03C", Offset = "0xE3A03C", VA = "0xE3A03C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xE3A2D4", Offset = "0xE3A2D4", VA = "0xE3A2D4", Slot = "40")]
		protected override bool HasInputFlow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xE3A2DC", Offset = "0xE3A2DC", VA = "0xE3A2DC")]
		private void OnMarkerReached(RegisteredCarController eventCarController)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xE3A180", Offset = "0xE3A180", VA = "0xE3A180")]
		private RegisteredSplineMarker.OnMarkerReachedEvent GetEvent()
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xE3A47C", Offset = "0xE3A47C", VA = "0xE3A47C")]
		public CarSplineMarkerNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200073C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19728", Offset = "0xB19728")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19728", Offset = "0xB19728")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19728", Offset = "0xB19728")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19728", Offset = "0xB19728")]
	public class ChangeCameraNode : FlowControlNode
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> key;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<bool> skipTransition;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xE3A7C4", Offset = "0xE3A7C4", VA = "0xE3A7C4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xE3A960", Offset = "0xE3A960", VA = "0xE3A960")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xE3AAB0", Offset = "0xE3AAB0", VA = "0xE3AAB0")]
		public ChangeCameraNode()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xE3AAB8", Offset = "0xE3AAB8", VA = "0xE3AAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305C0", Offset = "0xB305C0")]
		private void <RegisterPorts>b__3_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200073D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB197D4", Offset = "0xB197D4")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB197D4", Offset = "0xB197D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB197D4", Offset = "0xB197D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB197D4", Offset = "0xB197D4")]
	public class ChangeEnvironmentNode : FlowControlNode
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> environment;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xE3AAE8", Offset = "0xE3AAE8", VA = "0xE3AAE8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xE3AC38", Offset = "0xE3AC38", VA = "0xE3AC38")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xE3ACFC", Offset = "0xE3ACFC", VA = "0xE3ACFC")]
		private void ApplyEnvironment(string environmentName)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xE3AD8C", Offset = "0xE3AD8C", VA = "0xE3AD8C")]
		public ChangeEnvironmentNode()
		{
		}
	}
	[Token(Token = "0x200073E")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19880", Offset = "0xB19880")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19880", Offset = "0xB19880")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19880", Offset = "0xB19880")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19880", Offset = "0xB19880")]
	public class CharacterAnimationNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<string> targetCharacter;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<string> bodyAnimationClip;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ValueInput<string> faceAnimationClip;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		private bool activateIdleAnimations;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ValueInput<string[]> animationsToActivate;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[ExposeField]
		[SerializeField]
		[GatherPortsCallback]
		private bool deactivateIdleAnimations;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ValueInput<string[]> animationsToDeactivate;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private FlowOutput flowOut;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private FlowOutput outStateFinish;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RegisteredCharacterAnimationController myCharacterAnimationController;

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xE3BB84", Offset = "0xE3BB84", VA = "0xE3BB84", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xE3BD68", Offset = "0xE3BD68", VA = "0xE3BD68", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xE3C0F8", Offset = "0xE3C0F8", VA = "0xE3C0F8", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xE3C0FC", Offset = "0xE3C0FC", VA = "0xE3C0FC")]
		public CharacterAnimationNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200073F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1992C", Offset = "0xB1992C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1992C", Offset = "0xB1992C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1992C", Offset = "0xB1992C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1992C", Offset = "0xB1992C")]
	public class CheckPointNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB199D8", Offset = "0xB199D8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CheckPointNarrativeNode <>4__this;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Flow f;

			[Token(Token = "0x600144B")]
			[Address(RVA = "0x275E3D4", Offset = "0x275E3D4", VA = "0x275E3D4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600144C")]
			[Address(RVA = "0x275E3DC", Offset = "0x275E3DC", VA = "0x275E3DC")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected FlowOutput onLoaded;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[ExposeField]
		[SerializeField]
		private string checkpointName;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[ExposeField]
		[SerializeField]
		private float _rideProgressPercentage;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[ExposeField]
		[SerializeField]
		private bool whiteFade;

		[Token(Token = "0x1700019C")]
		private string _name
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0xE3C3B0", Offset = "0xE3C3B0", VA = "0xE3C3B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public override string name
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xE3C4E0", Offset = "0xE3C4E0", VA = "0xE3C4E0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xE3C3B8", Offset = "0xE3C3B8", VA = "0xE3C3B8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xE3C548", Offset = "0xE3C548", VA = "0xE3C548")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xE3C75C", Offset = "0xE3C75C", VA = "0xE3C75C")]
		public void ContinueFromHere(RegisteredEnvironment environment, float carSpeed)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xE3CAC8", Offset = "0xE3CAC8", VA = "0xE3CAC8")]
		private void DoubleDelayContinueFromHere()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xE3CCCC", Offset = "0xE3CCCC", VA = "0xE3CCCC")]
		private void DelayContinueFromHere()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xE3CE28", Offset = "0xE3CE28", VA = "0xE3CE28", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xE3CFEC", Offset = "0xE3CFEC", VA = "0xE3CFEC", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xE3D0C0", Offset = "0xE3D0C0", VA = "0xE3D0C0")]
		public CheckPointNarrativeNode()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xE3D0C8", Offset = "0xE3D0C8", VA = "0xE3D0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305D0", Offset = "0xB305D0")]
		private void <RegisterPorts>b__7_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000741")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB199E8", Offset = "0xB199E8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB199E8", Offset = "0xB199E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB199E8", Offset = "0xB199E8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB199E8", Offset = "0xB199E8")]
	public class ControlAnimationNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FlowOutput flowOut;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<string> targetObject_key;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RegisteredAnimateable myRegisteredAnimateable;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Animator myAnimator;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AnimatorStateInfo animInfo;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float rememberedNormalizedTime;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		private bool playNamedState;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ValueInput<string> animation_key;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private FlowOutput outStateFinish;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[GatherPortsCallback]
		[ExposeField]
		private bool changeAnimatorSpeed;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private ValueInput<float> targetAnimatorSpeed;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[GatherPortsCallback]
		[ExposeField]
		[SerializeField]
		private bool setBoolParameter;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ValueInput<string> boolParameterToSet;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private ValueInput<bool> targetValue_bool;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[ExposeField]
		[SerializeField]
		[GatherPortsCallback]
		private bool setFloatParameter;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ValueInput<string> floatParameterToSet;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private ValueInput<float> targetValue_float;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[ExposeField]
		[SerializeField]
		[GatherPortsCallback]
		private bool setIntParameter;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private ValueInput<string> intParameterToSet;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private ValueInput<int> targetValue_int;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		private bool setTriggerParameter;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private ValueInput<string> triggerParameterToSet;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		private bool alsoEnableIfDisabled;

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x158BF6C", Offset = "0x158BF6C", VA = "0x158BF6C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x158C300", Offset = "0x158C300", VA = "0x158C300", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x158C834", Offset = "0x158C834", VA = "0x158C834", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x158C3C0", Offset = "0x158C3C0", VA = "0x158C3C0")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x158CA1C", Offset = "0x158CA1C", VA = "0x158CA1C")]
		public ControlAnimationNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000742")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19A94", Offset = "0xB19A94")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19A94", Offset = "0xB19A94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19A94", Offset = "0xB19A94")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19A94", Offset = "0xB19A94")]
	public class ControlAudioNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput _flowOut;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> _emitterName;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<SoundService.EventMode> _eventMode;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<string> _eventName;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<SoundService.ParameterMode> _parameterMode;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueInput<ParamRef[]> _parameters;

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x158CA24", Offset = "0x158CA24", VA = "0x158CA24", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x158CD20", Offset = "0x158CD20", VA = "0x158CD20")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x158CF14", Offset = "0x158CF14", VA = "0x158CF14")]
		public ControlAudioNarrativeNode()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x158CF1C", Offset = "0x158CF1C", VA = "0x158CF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305E0", Offset = "0xB305E0")]
		private void <RegisterPorts>b__6_0(Flow flow)
		{
		}
	}
	[Token(Token = "0x2000743")]
	public class ControlNarrativeGraph : MonoBehaviour
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public FlowScriptController myFlowScriptController;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _searchKey;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _searchTerm;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _searchNode;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _caseSensitive;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _exactMatch;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool _searchInComments;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int maxCheckDepth;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Node[] _allGraphNodes;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB23BF4", Offset = "0xB23BF4")]
		private FlowGraph <MyGraph>k__BackingField;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DriverSpeechConfig driverSpeechConfig;

		[Token(Token = "0x1700019E")]
		public FlowGraph MyGraph
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x158CF4C", Offset = "0x158CF4C", VA = "0x158CF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305F0", Offset = "0xB305F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x158CF54", Offset = "0x158CF54", VA = "0x158CF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30600", Offset = "0xB30600")]
			private set
			{
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x158CF5C", Offset = "0x158CF5C", VA = "0x158CF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x158D038", Offset = "0x158D038", VA = "0x158D038")]
		public void SetUp()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x158D1D4", Offset = "0x158D1D4", VA = "0x158D1D4")]
		public void IntegrityCheck()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x158D270", Offset = "0x158D270", VA = "0x158D270")]
		private void CheckGraphIntegrity(Graph graph, [Optional] MacroNodeWrapper macro, int depth = 0)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x158D79C", Offset = "0x158D79C", VA = "0x158D79C")]
		public ControlNarrativeGraph()
		{
		}
	}
	[Token(Token = "0x2000744")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19B48", Offset = "0xB19B48")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19B48", Offset = "0xB19B48")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19B48", Offset = "0xB19B48")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19B48", Offset = "0xB19B48")]
	public class ControlParticleEmitterNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x2000745")]
		private enum Task
		{
			[Token(Token = "0x40012D6")]
			Start,
			[Token(Token = "0x40012D7")]
			Stop,
			[Token(Token = "0x40012D8")]
			Toggle
		}

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> key;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RegisteredParticleEmitter targetParticles;

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x158D828", Offset = "0x158D828", VA = "0x158D828", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x158DA1C", Offset = "0x158DA1C", VA = "0x158DA1C")]
		private void Invoke(Flow f, Task task)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x158DBA8", Offset = "0x158DBA8", VA = "0x158DBA8")]
		public ControlParticleEmitterNarrativeNode()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x158DBB0", Offset = "0x158DBB0", VA = "0x158DBB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30610", Offset = "0xB30610")]
		private void <RegisterPorts>b__4_0(Flow f)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x158DBE4", Offset = "0x158DBE4", VA = "0x158DBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30620", Offset = "0xB30620")]
		private void <RegisterPorts>b__4_1(Flow f)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x158DC18", Offset = "0x158DC18", VA = "0x158DC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30630", Offset = "0xB30630")]
		private void <RegisterPorts>b__4_2(Flow f)
		{
		}
	}
	[Token(Token = "0x2000746")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19BF4", Offset = "0xB19BF4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19BF4", Offset = "0xB19BF4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19BF4", Offset = "0xB19BF4")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19BF4", Offset = "0xB19BF4")]
	public class CutsceneNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FlowOutput flowOut;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<string> assetFile;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ValueInput<string> fmodAudio;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ValueInput<TimelineAsset> timeLine;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ValueInput<bool> showVideoAfterOut;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ValueInput<bool> restrictPerformanceCleanup;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ValueOutput<float> progress;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private VideoController controller;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RegisteredDirector director;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private NarrativeSystemManager _narrativeSystemManager;

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1122D44", Offset = "0x1122D44", VA = "0x1122D44", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1123090", Offset = "0x1123090", VA = "0x1123090", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1123124", Offset = "0x1123124", VA = "0x1123124", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1123644", Offset = "0x1123644", VA = "0x1123644")]
		private void StartPlaying()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x1123410", Offset = "0x1123410", VA = "0x1123410")]
		private void StartPlaying(bool withDirectorCallback = false)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x112364C", Offset = "0x112364C", VA = "0x112364C")]
		private void Stop(Flow f)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x112366C", Offset = "0x112366C", VA = "0x112366C")]
		protected void Exit()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x1123894", Offset = "0x1123894", VA = "0x1123894", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1123898", Offset = "0x1123898", VA = "0x1123898")]
		public CutsceneNarrativeNode()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x11238A0", Offset = "0x11238A0", VA = "0x11238A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30640", Offset = "0xB30640")]
		private float <RegisterPorts>b__10_0()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000747")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19CA0", Offset = "0xB19CA0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19CA0", Offset = "0xB19CA0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19CA0", Offset = "0xB19CA0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19CA0", Offset = "0xB19CA0")]
	public class EndRideNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x600146D")]
		[Address(RVA = "0x112D698", Offset = "0x112D698", VA = "0x112D698", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x112D748", Offset = "0x112D748", VA = "0x112D748")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x112D7C8", Offset = "0x112D7C8", VA = "0x112D7C8")]
		public EndRideNarrativeNode()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x112D7D0", Offset = "0x112D7D0", VA = "0x112D7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30650", Offset = "0xB30650")]
		private void <RegisterPorts>b__0_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000748")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19D4C", Offset = "0xB19D4C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19D4C", Offset = "0xB19D4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19D4C", Offset = "0xB19D4C")]
	public class EndSubSequenceNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x6001471")]
		[Address(RVA = "0x112D7D4", Offset = "0x112D7D4", VA = "0x112D7D4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x112D8E8", Offset = "0x112D8E8", VA = "0x112D8E8")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x112D970", Offset = "0x112D970", VA = "0x112D970")]
		private void OnCloseMenu(Flow f)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x112D9F8", Offset = "0x112D9F8", VA = "0x112D9F8")]
		public EndSubSequenceNarrativeNode()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x112DA00", Offset = "0x112DA00", VA = "0x112DA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30660", Offset = "0xB30660")]
		private void <RegisterPorts>b__0_0(Flow f)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x112DA04", Offset = "0x112DA04", VA = "0x112DA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30670", Offset = "0xB30670")]
		private void <RegisterPorts>b__0_1(Flow f)
		{
		}
	}
	[Token(Token = "0x2000749")]
	public abstract class EventWaitNode : UpdateNarrativeNode
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<float> timeout;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[ExposeField]
		[SerializeField]
		protected bool rememberEvent;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private List<string> _events;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private FlowOutput outTimeOut;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<FlowOutput> outOnEvent;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<string, FlowOutput> eventOutputs;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool isRegistered;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		protected bool eventOccured;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string eventNameOccured;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float countdown;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string _listName;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string _listEntryName;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string _prefix;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x112DE44", Offset = "0x112DE44", VA = "0x112DE44", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x112DF8C", Offset = "0x112DF8C", VA = "0x112DF8C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001479")]
		protected abstract void GetNames(out string listName, out string listEntryName);

		[Token(Token = "0x600147A")]
		protected abstract string GetEventPrefix();

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x112E048", Offset = "0x112E048", VA = "0x112E048", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x112E3C0", Offset = "0x112E3C0", VA = "0x112E3C0", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x112E270", Offset = "0x112E270", VA = "0x112E270")]
		private void Register()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x112E594", Offset = "0x112E594", VA = "0x112E594")]
		private void Deregister()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x112E4C0", Offset = "0x112E4C0", VA = "0x112E4C0")]
		private void RegisterEvent(string n)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x112E6E0", Offset = "0x112E6E0", VA = "0x112E6E0")]
		private void DeregisterEvent(string n)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x112E7B4", Offset = "0x112E7B4", VA = "0x112E7B4")]
		protected string GetFirstEvent()
		{
			return null;
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x112E8EC", Offset = "0x112E8EC", VA = "0x112E8EC")]
		private void OnEvent(string evt)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x112E134", Offset = "0x112E134", VA = "0x112E134")]
		private void OnLeave(bool timedOut = false)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x112E940", Offset = "0x112E940", VA = "0x112E940")]
		private void StopListeningAndReset()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x112E970", Offset = "0x112E970", VA = "0x112E970")]
		private void ResumeAfterInterruption()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x112E988", Offset = "0x112E988", VA = "0x112E988")]
		protected EventWaitNode()
		{
		}
	}
	[Token(Token = "0x200074A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19DD4", Offset = "0xB19DD4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19DD4", Offset = "0xB19DD4")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19DD4", Offset = "0xB19DD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19DD4", Offset = "0xB19DD4")]
	public class SendEventNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> evt;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1109F6C", Offset = "0x1109F6C", VA = "0x1109F6C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x110A0A8", Offset = "0x110A0A8", VA = "0x110A0A8")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x110A1EC", Offset = "0x110A1EC", VA = "0x110A1EC")]
		public SendEventNode()
		{
		}
	}
	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19E80", Offset = "0xB19E80")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19E80", Offset = "0xB19E80")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19E80", Offset = "0xB19E80")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19E80", Offset = "0xB19E80")]
	public class WaitForMarkerEventNode : EventWaitNode
	{
		[Token(Token = "0x600148A")]
		[Address(RVA = "0x27448E0", Offset = "0x27448E0", VA = "0x27448E0", Slot = "44")]
		protected override string GetEventPrefix()
		{
			return null;
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x2744924", Offset = "0x2744924", VA = "0x2744924", Slot = "43")]
		protected override void GetNames(out string listName, out string listEntryName)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x27449AC", Offset = "0x27449AC", VA = "0x27449AC")]
		public WaitForMarkerEventNode()
		{
		}
	}
	[Token(Token = "0x200074C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19F2C", Offset = "0xB19F2C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19F2C", Offset = "0xB19F2C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19F2C", Offset = "0xB19F2C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19F2C", Offset = "0xB19F2C")]
	public class WaitForNarrativeEventNode : EventWaitNode
	{
		[Token(Token = "0x600148D")]
		[Address(RVA = "0x27449B4", Offset = "0x27449B4", VA = "0x27449B4", Slot = "44")]
		protected override string GetEventPrefix()
		{
			return null;
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x27449BC", Offset = "0x27449BC", VA = "0x27449BC", Slot = "43")]
		protected override void GetNames(out string listName, out string listEntryName)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x2744A44", Offset = "0x2744A44", VA = "0x2744A44")]
		public WaitForNarrativeEventNode()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB19FD8", Offset = "0xB19FD8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB19FD8", Offset = "0xB19FD8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB19FD8", Offset = "0xB19FD8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB19FD8", Offset = "0xB19FD8")]
	public class FlowStartDummyNode : FlowControlNode
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput _flowOut;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xFCB228", Offset = "0xFCB228", VA = "0xFCB228", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xFCB2A0", Offset = "0xFCB2A0", VA = "0xFCB2A0")]
		public FlowStartDummyNode()
		{
		}
	}
	[Token(Token = "0x200074E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A084", Offset = "0xB1A084")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A084", Offset = "0xB1A084")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A084", Offset = "0xB1A084")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A084", Offset = "0xB1A084")]
	public class FlowStopNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowInput _flowInput;

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xFCB2A8", Offset = "0xFCB2A8", VA = "0xFCB2A8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xFCB36C", Offset = "0xFCB36C", VA = "0xFCB36C", Slot = "40")]
		protected virtual void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xFCB370", Offset = "0xFCB370", VA = "0xFCB370")]
		public FlowStopNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200074F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A130", Offset = "0xB1A130")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A130", Offset = "0xB1A130")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A130", Offset = "0xB1A130")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A130", Offset = "0xB1A130")]
	public class ForceCameraNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x2000750")]
		public enum CameraAction
		{
			[Token(Token = "0x4001301")]
			startRotation,
			[Token(Token = "0x4001302")]
			startMovement,
			[Token(Token = "0x4001303")]
			returnToOriginalPosition,
			[Token(Token = "0x4001304")]
			returnControlToPlayer
		}

		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A1DC", Offset = "0xB1A1DC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ForceCameraNarrativeNode <>4__this;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool value;

			[Token(Token = "0x600149F")]
			[Address(RVA = "0xF14FA4", Offset = "0xF14FA4", VA = "0xF14FA4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xF14FAC", Offset = "0xF14FAC", VA = "0xF14FAC")]
			internal void <SetReturnPlayerControlOnFinish>b__0()
			{
			}
		}

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<CameraAction> action;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<bool> putCamOnHold;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ValueInput<float> movementTime;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ValueInput<string> transformKey;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ValueInput<bool> dontUnmuteInteractions;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ValueInput<bool> useVRHintSystem;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ValueInput<PlayerCameraController.TurnDirection> turnDirection;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RegisteredTransform targetTransform;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private FlowOutput flowOut;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private PlayerCameraController controller;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xFCCE44", Offset = "0xFCCE44", VA = "0xFCCE44", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xFCD120", Offset = "0xFCD120", VA = "0xFCD120", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xFCD1B8", Offset = "0xFCD1B8", VA = "0xFCD1B8")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xFCDA08", Offset = "0xFCDA08", VA = "0xFCDA08")]
		private void OnFinishedForcing()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xFCDCC4", Offset = "0xFCDCC4", VA = "0xFCDCC4")]
		private void OnFinishedForcingLookAtEvent()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xFCDE00", Offset = "0xFCDE00", VA = "0xFCDE00", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xFCDB84", Offset = "0xFCDB84", VA = "0xFCDB84")]
		private void SetReturnPlayerControlOnFinish(UnityEvent eventToSet, bool value)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xFCD880", Offset = "0xFCD880", VA = "0xFCD880")]
		private RegisteredTransform GetFirstRegisteredTransform()
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xFCDE04", Offset = "0xFCDE04", VA = "0xFCDE04")]
		public ForceCameraNarrativeNode()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xFCDE0C", Offset = "0xFCDE0C", VA = "0xFCDE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30680", Offset = "0xB30680")]
		private void <RegisterPorts>b__12_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000752")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A1EC", Offset = "0xB1A1EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A1EC", Offset = "0xB1A1EC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A1EC", Offset = "0xB1A1EC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A1EC", Offset = "0xB1A1EC")]
	public class GlobalChoiceNarrativeNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x2000753")]
		public enum GlobalChoiceAction
		{
			[Token(Token = "0x400130D")]
			SET,
			[Token(Token = "0x400130E")]
			GET
		}

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<GlobalChoiceAction> action;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<string> key;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<int> value;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueOutput<int> valueOut;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xFD422C", Offset = "0xFD422C", VA = "0xFD422C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xFD44A8", Offset = "0xFD44A8", VA = "0xFD44A8")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xFD4628", Offset = "0xFD4628", VA = "0xFD4628")]
		private int GetValue()
		{
			return default(int);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xFD470C", Offset = "0xFD470C", VA = "0xFD470C")]
		public GlobalChoiceNarrativeNode()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xFD4714", Offset = "0xFD4714", VA = "0xFD4714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30690", Offset = "0xB30690")]
		private void <RegisterPorts>b__6_0(Flow f)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xFD4744", Offset = "0xFD4744", VA = "0xFD4744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306A0", Offset = "0xB306A0")]
		private int <RegisterPorts>b__6_1()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000754")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A298", Offset = "0xB1A298")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A298", Offset = "0xB1A298")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A298", Offset = "0xB1A298")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A298", Offset = "0xB1A298")]
	public class HintTextNarrativeNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x2000755")]
		public enum TextAction
		{
			[Token(Token = "0x4001318")]
			Show,
			[Token(Token = "0x4001319")]
			HideCurrentHint
		}

		[Token(Token = "0x2000756")]
		public enum HintAnimation
		{
			[Token(Token = "0x400131B")]
			Alert,
			[Token(Token = "0x400131C")]
			Fork
		}

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<TextAction> action;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<HintAnimation> animation;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<string> key;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueInput<string> secondaryKey;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ValueInput<float> displayTime;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string rememberedKey;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string outTemp;

		[Token(Token = "0x1700019F")]
		public string KeyValue
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x126C170", Offset = "0x126C170", VA = "0x126C170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x126C1C4", Offset = "0x126C1C4", VA = "0x126C1C4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x126C41C", Offset = "0x126C41C", VA = "0x126C41C", Slot = "40")]
		public virtual void UpdateMyKey()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x126C644", Offset = "0x126C644", VA = "0x126C644")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x126C968", Offset = "0x126C968", VA = "0x126C968")]
		public HintTextNarrativeNode()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x126C978", Offset = "0x126C978", VA = "0x126C978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306B0", Offset = "0xB306B0")]
		private void <RegisterPorts>b__12_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000757")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A344", Offset = "0xB1A344")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A344", Offset = "0xB1A344")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A344", Offset = "0xB1A344")]
	public class InteractableControlNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> key;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<string> interaction;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RegisteredInteractable myInteractable;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput output;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x127CF70", Offset = "0x127CF70", VA = "0x127CF70", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x127D0E4", Offset = "0x127D0E4", VA = "0x127D0E4")]
		private void OnEnter(Flow f)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x127D2A0", Offset = "0x127D2A0", VA = "0x127D2A0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x127D2A8", Offset = "0x127D2A8", VA = "0x127D2A8")]
		public InteractableControlNode()
		{
		}
	}
	[Token(Token = "0x2000758")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A3CC", Offset = "0xB1A3CC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A3CC", Offset = "0xB1A3CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A3CC", Offset = "0xB1A3CC")]
	public class InteractableNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A454", Offset = "0xB1A454")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string interaction;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractableNarrativeNode <>4__this;

			[Token(Token = "0x60014B7")]
			[Address(RVA = "0xF1C000", Offset = "0xF1C000", VA = "0xF1C000")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xF1C008", Offset = "0xF1C008", VA = "0xF1C008")]
			internal void <OnGraphStarted>b__0(string evt)
			{
			}
		}

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> key;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<string> interactions;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput outOnClick;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput outOnHover;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<FlowOutput> outOnInteracted;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueOutput<bool> isVisible;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ValueOutput<bool> isInteractable;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RegisteredInteractable myInteractable;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Flow myFlow;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<string, FlowOutput> interactionOutputs;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xEA60F0", Offset = "0xEA60F0", VA = "0xEA60F0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xEA6494", Offset = "0xEA6494", VA = "0xEA6494", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xEA678C", Offset = "0xEA678C", VA = "0xEA678C")]
		private bool IsInteractionOutputConnected(string interaction)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xEA6854", Offset = "0xEA6854", VA = "0xEA6854")]
		public InteractableNarrativeNode()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xEA6924", Offset = "0xEA6924", VA = "0xEA6924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306C0", Offset = "0xB306C0")]
		private bool <RegisterPorts>b__10_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xEA6940", Offset = "0xEA6940", VA = "0xEA6940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306D0", Offset = "0xB306D0")]
		private bool <RegisterPorts>b__10_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200075A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A464", Offset = "0xB1A464")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A464", Offset = "0xB1A464")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A464", Offset = "0xB1A464")]
	public class InteractableStateNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> key;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput outOnActivate;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput outOnDeactivate;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput outOnToggle;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueOutput<bool> state;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractableExtensionState myInteractableExtension;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Flow myFlow;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xEA6CB0", Offset = "0xEA6CB0", VA = "0xEA6CB0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xEA6EA4", Offset = "0xEA6EA4", VA = "0xEA6EA4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xEA72B8", Offset = "0xEA72B8", VA = "0xEA72B8")]
		public InteractableStateNarrativeNode()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xEA72C0", Offset = "0xEA72C0", VA = "0xEA72C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306E0", Offset = "0xB306E0")]
		private bool <RegisterPorts>b__7_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xEA72DC", Offset = "0xEA72DC", VA = "0xEA72DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306F0", Offset = "0xB306F0")]
		private void <OnGraphStarted>b__8_0()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xEA7334", Offset = "0xEA7334", VA = "0xEA7334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30700", Offset = "0xB30700")]
		private void <OnGraphStarted>b__8_1()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xEA738C", Offset = "0xEA738C", VA = "0xEA738C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30710", Offset = "0xB30710")]
		private void <OnGraphStarted>b__8_2()
		{
		}
	}
	[Token(Token = "0x200075B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A4EC", Offset = "0xB1A4EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A4EC", Offset = "0xB1A4EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A4EC", Offset = "0xB1A4EC")]
	public class InteractableValueNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> key;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput outOnIncrease;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput outOnDecrease;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput outOnValueChange;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueOutput<float> value;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueOutput<float> minValue;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ValueOutput<float> maxValue;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ValueOutput<float> step;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private InteractableExtensionValue myInteractableExtension;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Flow myFlow;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xEA90CC", Offset = "0xEA90CC", VA = "0xEA90CC", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xEA9408", Offset = "0xEA9408", VA = "0xEA9408", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xEA981C", Offset = "0xEA981C", VA = "0xEA981C")]
		public InteractableValueNarrativeNode()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xEA9824", Offset = "0xEA9824", VA = "0xEA9824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30720", Offset = "0xB30720")]
		private float <RegisterPorts>b__10_0()
		{
			return default(float);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xEA9840", Offset = "0xEA9840", VA = "0xEA9840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30730", Offset = "0xB30730")]
		private float <RegisterPorts>b__10_1()
		{
			return default(float);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xEA985C", Offset = "0xEA985C", VA = "0xEA985C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30740", Offset = "0xB30740")]
		private float <RegisterPorts>b__10_2()
		{
			return default(float);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xEA9878", Offset = "0xEA9878", VA = "0xEA9878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30750", Offset = "0xB30750")]
		private float <RegisterPorts>b__10_3()
		{
			return default(float);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xEA9894", Offset = "0xEA9894", VA = "0xEA9894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30760", Offset = "0xB30760")]
		private void <OnGraphStarted>b__11_0()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xEA98E4", Offset = "0xEA98E4", VA = "0xEA98E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30770", Offset = "0xB30770")]
		private void <OnGraphStarted>b__11_1()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xEA9934", Offset = "0xEA9934", VA = "0xEA9934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30780", Offset = "0xB30780")]
		private void <OnGraphStarted>b__11_2()
		{
		}
	}
	[Token(Token = "0x200075C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A574", Offset = "0xB1A574")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A574", Offset = "0xB1A574")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A574", Offset = "0xB1A574")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A574", Offset = "0xB1A574")]
	public class InventoryAddNode : FlowControlNode
	{
		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A620", Offset = "0xB1A620")]
		private sealed class <ResetTransfrom>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RegisteredInteractable interactable;

			[Token(Token = "0x170001A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014D2")]
				[Address(RVA = "0xF1D5EC", Offset = "0xF1D5EC", VA = "0xF1D5EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D4")]
				[Address(RVA = "0xF1D634", Offset = "0xF1D634", VA = "0xF1D634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xF1D4C8", Offset = "0xF1D4C8", VA = "0xF1D4C8")]
			[DebuggerHidden]
			public <ResetTransfrom>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xF1D4F4", Offset = "0xF1D4F4", VA = "0xF1D4F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xF1D4F8", Offset = "0xF1D4F8", VA = "0xF1D4F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xF1D5F4", Offset = "0xF1D5F4", VA = "0xF1D5F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> key;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> interactableKey;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput outPort;

		[Token(Token = "0x170001A0")]
		public override string name
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xEAB63C", Offset = "0xEAB63C", VA = "0xEAB63C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xEAB680", Offset = "0xEAB680", VA = "0xEAB680", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xEAB7F4", Offset = "0xEAB7F4", VA = "0xEAB7F4")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xEABA80", Offset = "0xEABA80", VA = "0xEABA80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB30790", Offset = "0xB30790")]
		private IEnumerator ResetTransfrom(RegisteredInteractable interactable)
		{
			return null;
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xEABAF8", Offset = "0xEABAF8", VA = "0xEABAF8")]
		public InventoryAddNode()
		{
		}
	}
	[Token(Token = "0x200075E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A630", Offset = "0xB1A630")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A630", Offset = "0xB1A630")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A630", Offset = "0xB1A630")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A630", Offset = "0xB1A630")]
	public class InventoryItemToggleNode : FlowControlNode
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<InventoryItem> item;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<int> toggleIndex;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput outPort;

		[Token(Token = "0x170001A3")]
		public override string name
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xEAC1C8", Offset = "0xEAC1C8", VA = "0xEAC1C8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xEAC20C", Offset = "0xEAC20C", VA = "0xEAC20C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xEAC394", Offset = "0xEAC394", VA = "0xEAC394")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xEAC4C8", Offset = "0xEAC4C8", VA = "0xEAC4C8")]
		public InventoryItemToggleNode()
		{
		}
	}
	[Token(Token = "0x200075F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A6DC", Offset = "0xB1A6DC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A6DC", Offset = "0xB1A6DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A6DC", Offset = "0xB1A6DC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A6DC", Offset = "0xB1A6DC")]
	public class InventoryRemoveNode : FlowControlNode
	{
		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<string> key;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput outPort;

		[Token(Token = "0x170001A4")]
		public override string name
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xEAC4D0", Offset = "0xEAC4D0", VA = "0xEAC4D0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xEAC514", Offset = "0xEAC514", VA = "0xEAC514", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xEAC650", Offset = "0xEAC650", VA = "0xEAC650")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xEAC77C", Offset = "0xEAC77C", VA = "0xEAC77C")]
		public InventoryRemoveNode()
		{
		}
	}
	[Token(Token = "0x2000760")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A788", Offset = "0xB1A788")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A788", Offset = "0xB1A788")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A788", Offset = "0xB1A788")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A788", Offset = "0xB1A788")]
	public class InventoryRequestNode : FlowControlNode
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string requestAction;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> key;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<float> timeout;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<bool> isUnskippable;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput timeoutPort;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput outPort;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput failPort;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Flow flow;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private IntentoryItemRequestHandler _handler;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float timeWaited;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool isTimingout;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xEAC784", Offset = "0xEAC784", VA = "0xEAC784", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xEAC9B4", Offset = "0xEAC9B4", VA = "0xEAC9B4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xEACA4C", Offset = "0xEACA4C", VA = "0xEACA4C")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xEACE34", Offset = "0xEACE34", VA = "0xEACE34")]
		private void WaitForTimeout()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xEACFEC", Offset = "0xEACFEC", VA = "0xEACFEC")]
		private void CheatCheaterOnUpdateToSkip()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xEACFF0", Offset = "0xEACFF0", VA = "0xEACFF0")]
		private void ContinueNextFrame()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xEAD240", Offset = "0xEAD240", VA = "0xEAD240")]
		private void Continue()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xEAD3A8", Offset = "0xEAD3A8", VA = "0xEAD3A8")]
		public InventoryRequestNode()
		{
		}
	}
	[Token(Token = "0x2000761")]
	public class InteractableKey
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string interactableKey;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string interactionKey;

		[Token(Token = "0x170001A5")]
		public bool hasInteractableKey
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xEA60A8", Offset = "0xEA60A8", VA = "0xEA60A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool hasInteractionKey
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xEA60CC", Offset = "0xEA60CC", VA = "0xEA60CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xEA5E40", Offset = "0xEA5E40", VA = "0xEA5E40")]
		public InteractableKey(string[] keys)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xEA5EC0", Offset = "0xEA5EC0", VA = "0xEA5EC0")]
		public InteractableKey(string key)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xEA5FB0", Offset = "0xEA5FB0", VA = "0xEA5FB0")]
		public static bool IsValidFormat(string key)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000762")]
	public class PlayerChoice
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string translation;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isHidden;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int choiceChosenCount;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxChoiceChosenCount;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onChoiceChosen;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x2782B44", Offset = "0x2782B44", VA = "0x2782B44")]
		public PlayerChoice(string keyIn, string translationIn, int maxChosen)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x2782BA4", Offset = "0x2782BA4", VA = "0x2782BA4")]
		public void Choose()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x2782BDC", Offset = "0x2782BDC", VA = "0x2782BDC")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x2782C00", Offset = "0x2782C00", VA = "0x2782C00")]
		public static bool IsChoiceValid(PlayerChoice choice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000763")]
	public class PlayerChoiceKey
	{
		[Token(Token = "0x400135D")]
		private const int maxAnswerCount = 4;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string rootKey;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerChoice[] choiceKeys;

		[Token(Token = "0x170001A7")]
		public string key
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x2782C30", Offset = "0x2782C30", VA = "0x2782C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public int answerCount
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x2782C38", Offset = "0x2782C38", VA = "0x2782C38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x2782C54", Offset = "0x2782C54", VA = "0x2782C54")]
		public PlayerChoiceKey(string keyIn, int limitChoiceChosenCount, int answerCountIn = 4)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x2782F38", Offset = "0x2782F38", VA = "0x2782F38")]
		public PlayerChoice GetChoice(int choiceNum)
		{
			return null;
		}
	}
	[Token(Token = "0x2000764")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A834", Offset = "0xB1A834")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A834", Offset = "0xB1A834")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A834", Offset = "0xB1A834")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A834", Offset = "0xB1A834")]
	public class NarrativeEventListenerNode : NarrativeEventListenerNodeBase
	{
		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput startOut;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FlowOutput stopOut;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x182A920", Offset = "0x182A920", VA = "0x182A920", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x182AB4C", Offset = "0x182AB4C", VA = "0x182AB4C")]
		private void StartListen(Flow f)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x182ABF8", Offset = "0x182ABF8", VA = "0x182ABF8", Slot = "40")]
		protected override void OnEvent(FlowOutput output)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x182AC3C", Offset = "0x182AC3C", VA = "0x182AC3C")]
		private void StopListen(Flow f)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x182ACC8", Offset = "0x182ACC8", VA = "0x182ACC8")]
		public NarrativeEventListenerNode()
		{
		}
	}
	[Token(Token = "0x2000765")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A8E0", Offset = "0xB1A8E0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A8E0", Offset = "0xB1A8E0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A8E0", Offset = "0xB1A8E0")]
	public class NarrativeOverviewNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueOutput<bool> isWaitNodeInterrupted;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueOutput<bool> isInterruptedForMenu;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private NarrativeSystemManager nsm;

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x182B4BC", Offset = "0x182B4BC", VA = "0x182B4BC", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x182B620", Offset = "0x182B620", VA = "0x182B620", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x182B6B8", Offset = "0x182B6B8", VA = "0x182B6B8")]
		private bool IsWaitNodeInterrupted()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x182B6C0", Offset = "0x182B6C0", VA = "0x182B6C0")]
		private bool IsInterruptedForMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x182B6C8", Offset = "0x182B6C8", VA = "0x182B6C8")]
		public NarrativeOverviewNarrativeNode()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x182B6D0", Offset = "0x182B6D0", VA = "0x182B6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30840", Offset = "0xB30840")]
		private bool <RegisterPorts>b__3_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x182B6D8", Offset = "0x182B6D8", VA = "0x182B6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30850", Offset = "0xB30850")]
		private bool <RegisterPorts>b__3_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000766")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1A968", Offset = "0xB1A968")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A968", Offset = "0xB1A968")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A968", Offset = "0xB1A968")]
	public class NodeReference : FlowControlNode
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<string> key;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueOutput<int> result;

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x182DE08", Offset = "0x182DE08", VA = "0x182DE08", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x182E028", Offset = "0x182E028", VA = "0x182E028")]
		private int GenerateResult()
		{
			return default(int);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x182E030", Offset = "0x182E030", VA = "0x182E030")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x182E080", Offset = "0x182E080", VA = "0x182E080")]
		public NodeReference()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x182E088", Offset = "0x182E088", VA = "0x182E088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30860", Offset = "0xB30860")]
		private int <RegisterPorts>b__3_0()
		{
			return default(int);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x182E090", Offset = "0x182E090", VA = "0x182E090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30870", Offset = "0xB30870")]
		private void <RegisterPorts>b__3_1(Flow f)
		{
		}
	}
	[Token(Token = "0x2000767")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0xB1A9F0", Offset = "0xB1A9F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1A9F0", Offset = "0xB1A9F0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1A9F0", Offset = "0xB1A9F0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1A9F0", Offset = "0xB1A9F0")]
	public class IsVRNode : VariableNode
	{
		[Serializable]
		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1AAF4", Offset = "0xB1AAF4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ValueHandler<bool> <>9__2_0;

			[Token(Token = "0x6001509")]
			[Address(RVA = "0xF1D738", Offset = "0xF1D738", VA = "0xF1D738")]
			public <>c()
			{
			}

			[Token(Token = "0x600150A")]
			[Address(RVA = "0xF1D740", Offset = "0xF1D740", VA = "0xF1D740")]
			internal bool <RegisterPorts>b__2_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public override string name
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xEAE610", Offset = "0xEAE610", VA = "0xEAE610", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xEAE654", Offset = "0xEAE654", VA = "0xEAE654", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xEAE7B8", Offset = "0xEAE7B8", VA = "0xEAE7B8", Slot = "40")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xEAE7BC", Offset = "0xEAE7BC", VA = "0xEAE7BC")]
		public IsVRNode()
		{
		}
	}
	[Token(Token = "0x2000769")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1AB04", Offset = "0xB1AB04")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AB04", Offset = "0xB1AB04")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AB04", Offset = "0xB1AB04")]
	public class IsVRSwitchNode : FlowControlNode
	{
		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1AB8C", Offset = "0xB1AB8C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput trueOut;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput falseOut;

			[Token(Token = "0x600150D")]
			[Address(RVA = "0xF1D78C", Offset = "0xF1D78C", VA = "0xF1D78C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0xF1D794", Offset = "0xF1D794", VA = "0xF1D794")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xEAE7C4", Offset = "0xEAE7C4", VA = "0xEAE7C4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xEAE91C", Offset = "0xEAE91C", VA = "0xEAE91C")]
		public IsVRSwitchNode()
		{
		}
	}
	[Token(Token = "0x200076B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AB9C", Offset = "0xB1AB9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AB9C", Offset = "0xB1AB9C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1AB9C", Offset = "0xB1AB9C")]
	public class PuzzleStartNode : NarrativeEventListenerNodeBase
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private FlowOutput flowOut;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ValueInput<string> puzzle;

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x2788AB8", Offset = "0x2788AB8", VA = "0x2788AB8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x2788C00", Offset = "0x2788C00", VA = "0x2788C00")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x2788F60", Offset = "0x2788F60", VA = "0x2788F60")]
		private void OnPuzzleFinished(bool isSolved)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x2788FD8", Offset = "0x2788FD8", VA = "0x2788FD8", Slot = "40")]
		protected override void OnEvent(FlowOutput output)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x278902C", Offset = "0x278902C", VA = "0x278902C")]
		public PuzzleStartNode()
		{
		}
	}
	[Token(Token = "0x200076C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1AC24", Offset = "0xB1AC24")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AC24", Offset = "0xB1AC24")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AC24", Offset = "0xB1AC24")]
	public class StartRideNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onAwake;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SceneManagementService sceneManagementService;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ValueOutput<bool> whiteFade;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[ExposeField]
		[SerializeField]
		private bool defaultWhiteFade;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xDAD2FC", Offset = "0xDAD2FC", VA = "0xDAD2FC", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xDAD45C", Offset = "0xDAD45C", VA = "0xDAD45C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xDAD5F0", Offset = "0xDAD5F0", VA = "0xDAD5F0")]
		private void OnLoaded()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xDAD7EC", Offset = "0xDAD7EC", VA = "0xDAD7EC")]
		private void DoubleDelaySetupAndStart()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xDAD9F0", Offset = "0xDAD9F0", VA = "0xDAD9F0")]
		private void DelaySetupAndStart()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xDADB10", Offset = "0xDADB10", VA = "0xDADB10")]
		private void SetupRideAndStart()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xDADCBC", Offset = "0xDADCBC", VA = "0xDADCBC")]
		private void StartRide()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xDADBB8", Offset = "0xDADBB8", VA = "0xDADBB8")]
		private TryOp TryLoadSaveGame()
		{
			return default(TryOp);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xDADD10", Offset = "0xDADD10", VA = "0xDADD10")]
		public StartRideNarrativeNode()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xDADD18", Offset = "0xDADD18", VA = "0xDADD18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30880", Offset = "0xB30880")]
		private bool <RegisterPorts>b__5_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200076D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1ACAC", Offset = "0xB1ACAC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1ACAC", Offset = "0xB1ACAC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1ACAC", Offset = "0xB1ACAC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1ACAC", Offset = "0xB1ACAC")]
	public class ScreenFaderNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<bool> fadeIn;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<float> fadeTime;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<Color> fadeColor;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<bool> waitForCompletion;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<bool> useBlackBackgroundBox;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float timer;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Flow flow;

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x11053E0", Offset = "0x11053E0", VA = "0x11053E0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1105624", Offset = "0x1105624", VA = "0x1105624")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1105B44", Offset = "0x1105B44", VA = "0x1105B44")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1105CC0", Offset = "0x1105CC0", VA = "0x1105CC0")]
		public ScreenFaderNarrativeNode()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1105CD0", Offset = "0x1105CD0", VA = "0x1105CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30890", Offset = "0xB30890")]
		private void <RegisterPorts>b__8_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200076E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AD58", Offset = "0xB1AD58")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AD58", Offset = "0xB1AD58")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1AD58", Offset = "0xB1AD58")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1AD58", Offset = "0xB1AD58")]
	public class SetActiveNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<bool> setValue;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<string[]> keys;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RegisteredActivateable currentActivateable;

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x110A648", Offset = "0x110A648", VA = "0x110A648", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x110A82C", Offset = "0x110A82C", VA = "0x110A82C")]
		private void Set(Flow f)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x110AA9C", Offset = "0x110AA9C", VA = "0x110AA9C")]
		private void Toggle(Flow f)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x110AD40", Offset = "0x110AD40", VA = "0x110AD40")]
		public SetActiveNarrativeNode()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x110AD48", Offset = "0x110AD48", VA = "0x110AD48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308A0", Offset = "0xB308A0")]
		private void <RegisterPorts>b__4_0(Flow f)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x110AD78", Offset = "0x110AD78", VA = "0x110AD78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308B0", Offset = "0xB308B0")]
		private void <RegisterPorts>b__4_1(Flow f)
		{
		}
	}
	[Token(Token = "0x200076F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AE04", Offset = "0xB1AE04")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AE04", Offset = "0xB1AE04")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1AE04", Offset = "0xB1AE04")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1AE04", Offset = "0xB1AE04")]
	public class SetInteractableNarrativeNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<string[]> interactablesToSet;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<bool> setAllInteractables;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<bool> targetValue;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RegisteredInteractable tempInteractable;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string[] substrings;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private InteractableKey[] valuesToSet;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x110AF38", Offset = "0x110AF38", VA = "0x110AF38", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x110B0F8", Offset = "0x110B0F8", VA = "0x110B0F8")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x110B51C", Offset = "0x110B51C", VA = "0x110B51C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x110B6EC", Offset = "0x110B6EC", VA = "0x110B6EC")]
		public SetInteractableNarrativeNode()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x110B6F4", Offset = "0x110B6F4", VA = "0x110B6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308C0", Offset = "0xB308C0")]
		private void <RegisterPorts>b__7_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000770")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AEB0", Offset = "0xB1AEB0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1AEB0", Offset = "0xB1AEB0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1AEB0", Offset = "0xB1AEB0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AEB0", Offset = "0xB1AEB0")]
	public class SetInteractionObligatoryNarrativeNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowOut;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<string[]> interactionsToSet;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<bool> targetValue;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RegisteredInteractable tempInteractable;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string[] substrings;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private InteractableKey[] valuesToSet;

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x110B724", Offset = "0x110B724", VA = "0x110B724", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x110B8AC", Offset = "0x110B8AC", VA = "0x110B8AC")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x110BBD4", Offset = "0x110BBD4", VA = "0x110BBD4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x110BDA4", Offset = "0x110BDA4", VA = "0x110BDA4")]
		public SetInteractionObligatoryNarrativeNode()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x110BDAC", Offset = "0x110BDAC", VA = "0x110BDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308D0", Offset = "0xB308D0")]
		private void <RegisterPorts>b__6_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000771")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1AF5C", Offset = "0xB1AF5C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1AF5C", Offset = "0xB1AF5C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1AF5C", Offset = "0xB1AF5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1AF5C", Offset = "0xB1AF5C")]
	public class SetPostprocessingProfileV1NarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x110BE7C", Offset = "0x110BE7C", VA = "0x110BE7C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x110BF6C", Offset = "0x110BF6C", VA = "0x110BF6C")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x110BFBC", Offset = "0x110BFBC", VA = "0x110BFBC")]
		public SetPostprocessingProfileV1NarrativeNode()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x110BFC4", Offset = "0x110BFC4", VA = "0x110BFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308E0", Offset = "0xB308E0")]
		private void <RegisterPorts>b__1_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000772")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B008", Offset = "0xB1B008")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B008", Offset = "0xB1B008")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B008", Offset = "0xB1B008")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B008", Offset = "0xB1B008")]
	public class SetPostprocessingProfileV2NarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x110BFF4", Offset = "0x110BFF4", VA = "0x110BFF4", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x110C0E4", Offset = "0x110C0E4", VA = "0x110C0E4")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x110C134", Offset = "0x110C134", VA = "0x110C134")]
		public SetPostprocessingProfileV2NarrativeNode()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x110C13C", Offset = "0x110C13C", VA = "0x110C13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308F0", Offset = "0xB308F0")]
		private void <RegisterPorts>b__1_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000773")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B0B4", Offset = "0xB1B0B4")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B0B4", Offset = "0xB1B0B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B0B4", Offset = "0xB1B0B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B0B4", Offset = "0xB1B0B4")]
	public class ShakeCameraNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput flowOut;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<bool> toggleShake;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<bool> shakeOnce;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<string> cameraName;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ValueInput<Vector3> positionOffset;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ValueInput<Vector3> rotationOffset;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ValueInput<float> magnitude;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ValueInput<float> roughness;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<float> fadeIn;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<float> fadeOut;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RegisteredActivateable currentActivateable;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1110D5C", Offset = "0x1110D5C", VA = "0x1110D5C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1111094", Offset = "0x1111094", VA = "0x1111094")]
		private void Set(Flow f)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x111160C", Offset = "0x111160C", VA = "0x111160C")]
		public ShakeCameraNarrativeNode()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1111614", Offset = "0x1111614", VA = "0x1111614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30900", Offset = "0xB30900")]
		private void <RegisterPorts>b__11_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000774")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B160", Offset = "0xB1B160")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B160", Offset = "0xB1B160")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B160", Offset = "0xB1B160")]
	public class StartSubSequenceNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput outStart;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput outUpdate;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput outFinish;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<bool> critical;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private new ValueInput<int> priority;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Flow flow;

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xDADDF0", Offset = "0xDADDF0", VA = "0xDADDF0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xDAE044", Offset = "0xDAE044", VA = "0xDAE044")]
		private void OnOpenMenu(Flow f)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xDAE094", Offset = "0xDAE094", VA = "0xDAE094")]
		protected void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xDAE248", Offset = "0xDAE248", VA = "0xDAE248")]
		private void OnInterruptionRequestAnswered(bool isInterruptionApproved)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xDAE2D8", Offset = "0xDAE2D8", VA = "0xDAE2D8")]
		public StartSubSequenceNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000775")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B1E8", Offset = "0xB1B1E8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B1E8", Offset = "0xB1B1E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B1E8", Offset = "0xB1B1E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B1E8", Offset = "0xB1B1E8")]
	public class ToDoNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TextAreaFieldAttribute", RVA = "0xB23C94", Offset = "0xB23C94")]
		[ExposeField]
		[GatherPortsCallback]
		[SerializeField]
		private string toDo;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowOut;

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xDB4840", Offset = "0xDB4840", VA = "0xDB4840", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xDB4930", Offset = "0xDB4930", VA = "0xDB4930")]
		public ToDoNarrativeNode()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xDB4938", Offset = "0xDB4938", VA = "0xDB4938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30910", Offset = "0xB30910")]
		private void <RegisterPorts>b__2_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000776")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B294", Offset = "0xB1B294")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B294", Offset = "0xB1B294")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B294", Offset = "0xB1B294")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B294", Offset = "0xB1B294")]
	public class TweenNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<string> key;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ValueInput<float> duration;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float timer;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float timer01;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float tweenDuration;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RegisteredTweenable temp;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform transformToTween;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material materialToTween;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[ExposeField]
		[SerializeField]
		[GatherPortsCallback]
		private bool tweenPosition;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ValueInput<string> key_targetTweenPosition;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ValueInput<AnimationCurve> tweenPositionCurve;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 originalPosition;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform targetTransform_tweenPosition;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float positionProgress;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		private bool tweenScale;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ValueInput<float> targetTweenScale;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ValueInput<AnimationCurve> tweenScaleCurve;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 originalScale;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float scaleProgress;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		private bool tweenRotation;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private ValueInput<string> key_targetTweenRotation;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private ValueInput<AnimationCurve> tweenRotationCurve;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Quaternion originalRotation;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Transform targetTransform_tweenRotation;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private float rotationProgress;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		[GatherPortsCallback]
		[ExposeField]
		private bool tweenAlpha;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private ValueInput<float> targetTweenAlpha;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private ValueInput<AnimationCurve> tweenAlphaCurve;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Color originalColor;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Color targetColor;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float alphaProgress;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private FlowOutput outStart;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private FlowOutput outUpdate;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private FlowOutput outFinish;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xDB8B1C", Offset = "0xDB8B1C", VA = "0xDB8B1C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xDB8EBC", Offset = "0xDB8EBC", VA = "0xDB8EBC", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xDB9338", Offset = "0xDB9338", VA = "0xDB9338", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xDB9734", Offset = "0xDB9734", VA = "0xDB9734", Slot = "42")]
		protected override void Leave()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xDB979C", Offset = "0xDB979C", VA = "0xDB979C")]
		public TweenNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000777")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B340", Offset = "0xB1B340")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B340", Offset = "0xB1B340")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B340", Offset = "0xB1B340")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B340", Offset = "0xB1B340")]
	public class UnlockAchievementNode : FlowControlNode
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<AchievementObject> Achievement;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput outPort;

		[Token(Token = "0x170001AA")]
		public override string name
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0xF368C4", Offset = "0xF368C4", VA = "0xF368C4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xF36908", Offset = "0xF36908", VA = "0xF36908", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xF36A44", Offset = "0xF36A44", VA = "0xF36A44")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xF36B6C", Offset = "0xF36B6C", VA = "0xF36B6C")]
		public UnlockAchievementNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000778")]
	public class DynamicNarrativeEventList : DynamicNodeOutputList
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NarrativeSystemManager _narrativeSystemManager;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isRegistered;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<FlowOutput> _onEvent;

		[Token(Token = "0x170001AB")]
		private NarrativeSystemManager narrativeSystemManager
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x112AD08", Offset = "0x112AD08", VA = "0x112AD08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x112ADE0", Offset = "0x112ADE0", VA = "0x112ADE0")]
		public void Init(FlowNode node, Action<FlowOutput> onEvent)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x112AE40", Offset = "0x112AE40", VA = "0x112AE40")]
		private void OnEvent(string obj)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x112AF5C", Offset = "0x112AF5C", VA = "0x112AF5C")]
		public void Register()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x112B0C8", Offset = "0x112B0C8", VA = "0x112B0C8")]
		public void Deregister()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x112B168", Offset = "0x112B168", VA = "0x112B168")]
		public DynamicNarrativeEventList()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x112B288", Offset = "0x112B288", VA = "0x112B288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30920", Offset = "0xB30920")]
		private void <Register>b__7_0(string evt)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x112B360", Offset = "0x112B360", VA = "0x112B360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30930", Offset = "0xB30930")]
		private void <Deregister>b__8_0(string evt)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000779")]
	public class DynamicNodeOutputList
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<string> elements;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<FlowOutput> outputs;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, FlowOutput> outputByName;

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x112AE24", Offset = "0x112AE24", VA = "0x112AE24")]
		public void AddOutputPortsTo(FlowNode node)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x112B438", Offset = "0x112B438", VA = "0x112B438")]
		public void DrawGUI(FlowNode node, string label, string type)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x112AEC0", Offset = "0x112AEC0", VA = "0x112AEC0")]
		public FlowOutput GetOutputByName(string obj)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x112B000", Offset = "0x112B000", VA = "0x112B000")]
		public void ForEach(Action<string> action)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x112B16C", Offset = "0x112B16C", VA = "0x112B16C")]
		public DynamicNodeOutputList()
		{
		}
	}
	[Token(Token = "0x200077A")]
	public abstract class IntegrityCheckedNodeBase : FlowControlNode
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string _outTemp;

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x127B2AC", Offset = "0x127B2AC", VA = "0x127B2AC")]
		public void CheckLocalizationKey(string key)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x127B3D4", Offset = "0x127B3D4", VA = "0x127B3D4")]
		public void CheckTimeOut(ValueInput<float> timeOut, FlowOutput outTimeOut)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x127B4D8", Offset = "0x127B4D8", VA = "0x127B4D8")]
		protected void CheckPlayerChoiceKey(ValueInput<string> key, int answerCount)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x127B8F0", Offset = "0x127B8F0", VA = "0x127B8F0")]
		protected void CheckInteractableKeyList(List<string> elements)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x127BBAC", Offset = "0x127BBAC", VA = "0x127BBAC")]
		protected void CheckInteractableKeyArray(string[] elements)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x127B8F4", Offset = "0x127B8F4", VA = "0x127B8F4")]
		protected void CheckInteractableKeys(IEnumerable<string> elements)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x127BBB0", Offset = "0x127BBB0", VA = "0x127BBB0")]
		protected void CheckInteractableKeyAt(string key, int i)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x127BC80", Offset = "0x127BC80", VA = "0x127BC80")]
		protected void CheckInteractableKeyString(string interactableKey)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x127BD74", Offset = "0x127BD74", VA = "0x127BD74")]
		protected void CheckInteractableKey(InteractableKey key)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x127C054", Offset = "0x127C054", VA = "0x127C054")]
		protected void CheckSelectorInOutputs(int inFlowCount, FlowInput flowIn, List<FlowInput> inFlows, List<FlowOutput> outFlows)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x127C264", Offset = "0x127C264", VA = "0x127C264")]
		protected void CheckAllOutConnectedIfInConnected(FlowInput input, List<FlowOutput> outputs, string outputNamePrefix = "")
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x127C2C0", Offset = "0x127C2C0", VA = "0x127C2C0")]
		private void CheckAllOutConnected(List<FlowOutput> outputs, string outputNamePrefix)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x126C970", Offset = "0x126C970", VA = "0x126C970")]
		protected IntegrityCheckedNodeBase()
		{
		}
	}
	[Token(Token = "0x200077B")]
	public abstract class NarrativeEventListenerNodeBase : FlowControlNode
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Flow flow;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private DynamicNarrativeEventList eventList;

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x182AAAC", Offset = "0x182AAAC", VA = "0x182AAAC", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600156B")]
		protected abstract void OnEvent(FlowOutput output);

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x182ABDC", Offset = "0x182ABDC", VA = "0x182ABDC")]
		protected void Register()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x182ACAC", Offset = "0x182ACAC", VA = "0x182ACAC")]
		protected void Deregister()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x182ACCC", Offset = "0x182ACCC", VA = "0x182ACCC")]
		protected NarrativeEventListenerNodeBase()
		{
		}
	}
	[Token(Token = "0x200077C")]
	public static class NarrativeEventNodeUtils
	{
		[Token(Token = "0x600156F")]
		[Address(RVA = "0x182AD3C", Offset = "0x182AD3C", VA = "0x182AD3C")]
		public static void AddOutputPorts(FlowNode node, List<FlowOutput> outputs, Dictionary<string, FlowOutput> outputByName, List<string> elements, [Optional] string prefix)
		{
		}
	}
	[Token(Token = "0x200077D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1B3EC", Offset = "0xB1B3EC")]
	public class DriverSpeechConfig : ScriptableObject
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23E30", Offset = "0xB23E30")]
		public float minNodeDuration;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float subtitleDurationPerCharacter;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float maxDurationBias;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23E9C", Offset = "0xB23E9C")]
		public string driverBlackboardVariableName;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string keyNotFoundSubtitle;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<string> driverRigNames;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1126A38", Offset = "0x1126A38", VA = "0x1126A38")]
		public DriverSpeechConfig()
		{
		}
	}
	[Token(Token = "0x200077E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B44C", Offset = "0xB1B44C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B44C", Offset = "0xB1B44C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B44C", Offset = "0xB1B44C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B44C", Offset = "0xB1B44C")]
	public class DriverSpeechNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x200077F")]
		private enum WaitingState
		{
			[Token(Token = "0x40013F0")]
			InDelay,
			[Token(Token = "0x40013F1")]
			DriverSpeech,
			[Token(Token = "0x40013F2")]
			OutDelay,
			[Token(Token = "0x40013F3")]
			Finished
		}

		[Token(Token = "0x2000780")]
		public enum SpeechType
		{
			[Token(Token = "0x40013F5")]
			Driver,
			[Token(Token = "0x40013F6")]
			Radio,
			[Token(Token = "0x40013F7")]
			Waitress
		}

		[Serializable]
		[Token(Token = "0x2000781")]
		public struct SplitKey
		{
			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float preDelay;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string splitKey;
		}

		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4F8", Offset = "0xB1B4F8")]
		private sealed class <EnumerateSpeechPhases>d__52 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DriverSpeechNarrativeNode <>4__this;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <totalDurationLeft>5__2;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool <durationOverridden>5__3;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__4;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SplitKey <splitKey>5__5;

			[Token(Token = "0x170001B2")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001588")]
				[Address(RVA = "0x27603DC", Offset = "0x27603DC", VA = "0x27603DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600158A")]
				[Address(RVA = "0x2760424", Offset = "0x2760424", VA = "0x2760424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001585")]
			[Address(RVA = "0x275FF98", Offset = "0x275FF98", VA = "0x275FF98")]
			[DebuggerHidden]
			public <EnumerateSpeechPhases>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001586")]
			[Address(RVA = "0x275FFC4", Offset = "0x275FFC4", VA = "0x275FFC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001587")]
			[Address(RVA = "0x275FFC8", Offset = "0x275FFC8", VA = "0x275FFC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001589")]
			[Address(RVA = "0x27603E4", Offset = "0x27603E4", VA = "0x27603E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[ExposeField]
		[SerializeField]
		public bool isInterruptableEntry;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[SerializeField]
		[ExposeField]
		public bool isInterruptableExit;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[ExposeField]
		public string bodyAnimationClip;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[ExposeField]
		public string facialAnimationClip;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[ExposeField]
		[SerializeField]
		public bool ignoreVoiceLength;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[SerializeField]
		[ExposeField]
		public bool ignoreBodyLength;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		[SerializeField]
		[ExposeField]
		public bool ignoreFacialLength;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		[ExposeField]
		[SerializeField]
		private bool subtitleOnly;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[ExposeField]
		[SerializeField]
		private bool centerSubtitles;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ValueInput<SpeechType> _speechType;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ValueInput<string> key;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ValueInput<SplitKey[]> splitKeys;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ValueInput<float> inDelay;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ValueInput<float> outDelay;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ValueInput<bool> skip;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ValueInput<float> subtitleInDelay;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ValueInput<float> overrideMaxDuration;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private FlowOutput flowStart;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private FlowOutput flowOut;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private NarrativeSystemManager _narrativeSystemManager;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24100", Offset = "0xB24100")]
		private static DriverSpeechNarrativeNode <LastEnteredNode>k__BackingField;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float _currentWaitTime;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private IEnumerator<float> _phaseEnumerator;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24110", Offset = "0xB24110")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24120", Offset = "0xB24120")]
		private DriverSpeechData <Data>k__BackingField;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private new Flow flow;

		[Token(Token = "0x170001AC")]
		public static DriverSpeechNarrativeNode LastEnteredNode
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x1127680", Offset = "0x1127680", VA = "0x1127680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30940", Offset = "0xB30940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x11276CC", Offset = "0x11276CC", VA = "0x11276CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30950", Offset = "0xB30950")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x1127720", Offset = "0x1127720", VA = "0x1127720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30960", Offset = "0xB30960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x1127728", Offset = "0x1127728", VA = "0x1127728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30970", Offset = "0xB30970")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public string KeyValue
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x1127480", Offset = "0x1127480", VA = "0x1127480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public SplitKey[] SplitKeys
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x1127734", Offset = "0x1127734", VA = "0x1127734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public SpeechType speechType
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x1126D5C", Offset = "0x1126D5C", VA = "0x1126D5C")]
			get
			{
				return default(SpeechType);
			}
		}

		[Token(Token = "0x170001B1")]
		public DriverSpeechData Data
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x1127788", Offset = "0x1127788", VA = "0x1127788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30980", Offset = "0xB30980")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x1127790", Offset = "0x1127790", VA = "0x1127790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30990", Offset = "0xB30990")]
			private set
			{
			}
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x11277A0", Offset = "0x11277A0", VA = "0x11277A0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1127AB0", Offset = "0x1127AB0", VA = "0x1127AB0", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1127E10", Offset = "0x1127E10", VA = "0x1127E10")]
		private void OnInterruptionCompletedWhileEntering()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1127EA0", Offset = "0x1127EA0", VA = "0x1127EA0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1127F44", Offset = "0x1127F44", VA = "0x1127F44", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x112811C", Offset = "0x112811C", VA = "0x112811C", Slot = "42")]
		protected override void Leave()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1128214", Offset = "0x1128214", VA = "0x1128214")]
		private void OnInterruptionCompletedWhileLeaving()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x112827C", Offset = "0x112827C", VA = "0x112827C")]
		public void Reenter(Flow f)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1127D98", Offset = "0x1127D98", VA = "0x1127D98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB309A0", Offset = "0xB309A0")]
		private IEnumerator<float> EnumerateSpeechPhases()
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1127F24", Offset = "0x1127F24", VA = "0x1127F24")]
		public void TryInit()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x11282C8", Offset = "0x11282C8", VA = "0x11282C8")]
		public DriverSpeechNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000783")]
	public class DriverSpeechNodeComment
	{
		[Token(Token = "0x600158B")]
		[Address(RVA = "0x112833C", Offset = "0x112833C", VA = "0x112833C")]
		public static string GenerateComment(DriverSpeechNarrativeNode node)
		{
			return null;
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1128AF0", Offset = "0x1128AF0", VA = "0x1128AF0")]
		public static string AddKeyString(string key)
		{
			return null;
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1128BD0", Offset = "0x1128BD0", VA = "0x1128BD0")]
		public DriverSpeechNodeComment()
		{
		}
	}
	[Token(Token = "0x2000784")]
	public class DriverSpeechNode_Integrity
	{
		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1128BD8", Offset = "0x1128BD8", VA = "0x1128BD8")]
		public DriverSpeechNode_Integrity()
		{
		}
	}
	[Token(Token = "0x2000785")]
	public class DriverSpeechData
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24130", Offset = "0xB24130")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegisteredCharacterAnimationController _characterController;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundService _soundService;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter _soundEmitter;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DriverSpeechConfig _driverSpeechConfig;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24140", Offset = "0xB24140")]
		private string <DriverControllerName>k__BackingField;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24150", Offset = "0xB24150")]
		private string <SoundEmitterName>k__BackingField;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24160", Offset = "0xB24160")]
		private string <SubtitleText>k__BackingField;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24170", Offset = "0xB24170")]
		private string <SoundEventName>k__BackingField;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24180", Offset = "0xB24180")]
		private string <BodyAnimationName>k__BackingField;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24190", Offset = "0xB24190")]
		private string <FacialAnimationName>k__BackingField;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB241A0", Offset = "0xB241A0")]
		private bool <HasSubtitle>k__BackingField;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB241B0", Offset = "0xB241B0")]
		private bool <HasSoundEvent>k__BackingField;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB241C0", Offset = "0xB241C0")]
		private bool <HasSoundEmitter>k__BackingField;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB241D0", Offset = "0xB241D0")]
		private bool <HasBodyAnimation>k__BackingField;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB241E0", Offset = "0xB241E0")]
		private bool <HasFacialAnimation>k__BackingField;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB241F0", Offset = "0xB241F0")]
		private float <SubtitleDuration>k__BackingField;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24200", Offset = "0xB24200")]
		private float <SoundEventDuration>k__BackingField;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24210", Offset = "0xB24210")]
		private float <BodyAnimationDuration>k__BackingField;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24220", Offset = "0xB24220")]
		private float <FacialAnimationDuration>k__BackingField;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24230", Offset = "0xB24230")]
		private float <MinContentDuration>k__BackingField;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24240", Offset = "0xB24240")]
		private float <MaxContentDuration>k__BackingField;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24250", Offset = "0xB24250")]
		private float <NoContentDuration>k__BackingField;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24260", Offset = "0xB24260")]
		private float <TotalDuration>k__BackingField;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24270", Offset = "0xB24270")]
		private float <DurationBias>k__BackingField;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24280", Offset = "0xB24280")]
		private StudioEventEmitter <SoundEventEmitter>k__BackingField;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<float> _contentDurations;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string _key;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string driverName;

		[Token(Token = "0x170001B4")]
		public bool IsInitialized
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x1126AD0", Offset = "0x1126AD0", VA = "0x1126AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A50", Offset = "0xB30A50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x1126AD8", Offset = "0x1126AD8", VA = "0x1126AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A60", Offset = "0xB30A60")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public string DriverControllerName
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x1126AE4", Offset = "0x1126AE4", VA = "0x1126AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A70", Offset = "0xB30A70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x1126AEC", Offset = "0x1126AEC", VA = "0x1126AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A80", Offset = "0xB30A80")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public string SoundEmitterName
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x1126AF4", Offset = "0x1126AF4", VA = "0x1126AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A90", Offset = "0xB30A90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x1126AFC", Offset = "0x1126AFC", VA = "0x1126AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AA0", Offset = "0xB30AA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public string SubtitleText
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x1126B04", Offset = "0x1126B04", VA = "0x1126B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AB0", Offset = "0xB30AB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x1126B0C", Offset = "0x1126B0C", VA = "0x1126B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AC0", Offset = "0xB30AC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public string SoundEventName
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x1126B14", Offset = "0x1126B14", VA = "0x1126B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AD0", Offset = "0xB30AD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001598")]
			[Address(RVA = "0x1126B1C", Offset = "0x1126B1C", VA = "0x1126B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AE0", Offset = "0xB30AE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public string BodyAnimationName
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x1126B24", Offset = "0x1126B24", VA = "0x1126B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AF0", Offset = "0xB30AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x1126B2C", Offset = "0x1126B2C", VA = "0x1126B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B00", Offset = "0xB30B00")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public string FacialAnimationName
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x1126B34", Offset = "0x1126B34", VA = "0x1126B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B10", Offset = "0xB30B10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x1126B3C", Offset = "0x1126B3C", VA = "0x1126B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B20", Offset = "0xB30B20")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public bool HasSubtitle
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x1126B44", Offset = "0x1126B44", VA = "0x1126B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B30", Offset = "0xB30B30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600159E")]
			[Address(RVA = "0x1126B4C", Offset = "0x1126B4C", VA = "0x1126B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B40", Offset = "0xB30B40")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public bool HasSoundEvent
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x1126B58", Offset = "0x1126B58", VA = "0x1126B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B50", Offset = "0xB30B50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x1126B60", Offset = "0x1126B60", VA = "0x1126B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B60", Offset = "0xB30B60")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public bool HasSoundEmitter
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x1126B6C", Offset = "0x1126B6C", VA = "0x1126B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B70", Offset = "0xB30B70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1126B74", Offset = "0x1126B74", VA = "0x1126B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B80", Offset = "0xB30B80")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool HasBodyAnimation
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x1126B80", Offset = "0x1126B80", VA = "0x1126B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B90", Offset = "0xB30B90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x1126B88", Offset = "0x1126B88", VA = "0x1126B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BA0", Offset = "0xB30BA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public bool HasFacialAnimation
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x1126B94", Offset = "0x1126B94", VA = "0x1126B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BB0", Offset = "0xB30BB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x1126B9C", Offset = "0x1126B9C", VA = "0x1126B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BC0", Offset = "0xB30BC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool HasNoContent
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x1126BA8", Offset = "0x1126BA8", VA = "0x1126BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C1")]
		public float SubtitleDuration
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x1126BD0", Offset = "0x1126BD0", VA = "0x1126BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BD0", Offset = "0xB30BD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x1126BD8", Offset = "0x1126BD8", VA = "0x1126BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BE0", Offset = "0xB30BE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float SoundEventDuration
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1126BE0", Offset = "0x1126BE0", VA = "0x1126BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BF0", Offset = "0xB30BF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x1126BE8", Offset = "0x1126BE8", VA = "0x1126BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C00", Offset = "0xB30C00")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float BodyAnimationDuration
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x1126BF0", Offset = "0x1126BF0", VA = "0x1126BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C10", Offset = "0xB30C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x1126BF8", Offset = "0x1126BF8", VA = "0x1126BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C20", Offset = "0xB30C20")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public float FacialAnimationDuration
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1126C00", Offset = "0x1126C00", VA = "0x1126C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C30", Offset = "0xB30C30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x1126C08", Offset = "0x1126C08", VA = "0x1126C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C40", Offset = "0xB30C40")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public float MinContentDuration
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x1126C10", Offset = "0x1126C10", VA = "0x1126C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C50", Offset = "0xB30C50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x1126C18", Offset = "0x1126C18", VA = "0x1126C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C60", Offset = "0xB30C60")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public float MaxContentDuration
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1126C20", Offset = "0x1126C20", VA = "0x1126C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C70", Offset = "0xB30C70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x1126C28", Offset = "0x1126C28", VA = "0x1126C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C80", Offset = "0xB30C80")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public float NoContentDuration
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x1126C30", Offset = "0x1126C30", VA = "0x1126C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C90", Offset = "0xB30C90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x1126C38", Offset = "0x1126C38", VA = "0x1126C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CA0", Offset = "0xB30CA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float TotalDuration
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1126C40", Offset = "0x1126C40", VA = "0x1126C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CB0", Offset = "0xB30CB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x1126C48", Offset = "0x1126C48", VA = "0x1126C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CC0", Offset = "0xB30CC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float DurationBias
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x1126C50", Offset = "0x1126C50", VA = "0x1126C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CD0", Offset = "0xB30CD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x1126C58", Offset = "0x1126C58", VA = "0x1126C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CE0", Offset = "0xB30CE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public StudioEventEmitter SoundEventEmitter
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x1126C60", Offset = "0x1126C60", VA = "0x1126C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CF0", Offset = "0xB30CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x1126C68", Offset = "0x1126C68", VA = "0x1126C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D00", Offset = "0xB30D00")]
			private set
			{
			}
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1126C70", Offset = "0x1126C70", VA = "0x1126C70")]
		public void UpdateCharacterController(Graph graph, DriverSpeechNarrativeNode node)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1126DB0", Offset = "0x1126DB0", VA = "0x1126DB0")]
		public void TryInit(Graph graph, DriverSpeechNarrativeNode node)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x11274D4", Offset = "0x11274D4", VA = "0x11274D4")]
		public void StartDriverSpeech()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x11275E8", Offset = "0x11275E8", VA = "0x11275E8")]
		public void StopDriverSpeech()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x11275F8", Offset = "0x11275F8", VA = "0x11275F8")]
		public DriverSpeechData()
		{
		}
	}
	[Token(Token = "0x2000786")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B508", Offset = "0xB1B508")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B508", Offset = "0xB1B508")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B508", Offset = "0xB1B508")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B508", Offset = "0xB1B508")]
	public class FlowSelectorNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B5B4", Offset = "0xB1B5B4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowSelectorNarrativeNode <>4__this;

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xF14F44", Offset = "0xF14F44", VA = "0xF14F44")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xF14F4C", Offset = "0xF14F4C", VA = "0xF14F4C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<float> timeout;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private FlowOutput outTimeOut;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xB24290", Offset = "0xB24290")]
		private int inFlowCount;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<FlowInput> inFlows;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<FlowOutput> outFlows;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float countdown;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xFCAC10", Offset = "0xFCAC10", VA = "0xFCAC10", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xFCAE40", Offset = "0xFCAE40", VA = "0xFCAE40")]
		private void CallOutputWithIndex(int index, Flow f)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xFCAF10", Offset = "0xFCAF10", VA = "0xFCAF10", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xFCB014", Offset = "0xFCB014", VA = "0xFCB014", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xFCB150", Offset = "0xFCB150", VA = "0xFCB150")]
		public FlowSelectorNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000788")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B5C4", Offset = "0xB1B5C4")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B5C4", Offset = "0xB1B5C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B5C4", Offset = "0xB1B5C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B5C4", Offset = "0xB1B5C4")]
	public class PlayerChoiceNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[ExposeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xB242EC", Offset = "0xB242EC")]
		[GatherPortsCallback]
		private int answerCount;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int maxAnswerCount;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private FlowOutput outTimeOut;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<FlowOutput> answerList;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ValueInput<string> key;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ValueInput<bool> doStrikeAnswers;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ValueInput<float> timeOut;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float countdown;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private string rememberedKey;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int rememberedAnswerCount;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string outTemp;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string commentBuilder;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private PlayerChoiceKey playerChoiceKey;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x170001CB")]
		public string KeyValue
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x2782F84", Offset = "0x2782F84", VA = "0x2782F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x2782FD8", Offset = "0x2782FD8", VA = "0x2782FD8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x2783248", Offset = "0x2783248", VA = "0x2783248", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x2783330", Offset = "0x2783330", VA = "0x2783330", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x27834C0", Offset = "0x27834C0", VA = "0x27834C0")]
		private void OnPlayerChoiceMade(int index)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x2783598", Offset = "0x2783598", VA = "0x2783598", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x27836A4", Offset = "0x27836A4", VA = "0x27836A4", Slot = "42")]
		protected override void Leave()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x27836AC", Offset = "0x27836AC", VA = "0x27836AC")]
		public PlayerChoiceNarrativeNode()
		{
		}
	}
	[Token(Token = "0x2000789")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B670", Offset = "0xB1B670")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B670", Offset = "0xB1B670")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B670", Offset = "0xB1B670")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B670", Offset = "0xB1B670")]
	public class RequireInteractionNarrativeNode : EventWaitNode
	{
		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B71C", Offset = "0xB1B71C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RegisteredInteractable myInteractable;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] s;

			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xD9F378", Offset = "0xD9F378", VA = "0xD9F378")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xD9F380", Offset = "0xD9F380", VA = "0xD9F380")]
			internal void <Enter>b__0()
			{
			}
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xEC8A0C", Offset = "0xEC8A0C", VA = "0xEC8A0C", Slot = "44")]
		protected override string GetEventPrefix()
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xEC8A14", Offset = "0xEC8A14", VA = "0xEC8A14", Slot = "43")]
		protected override void GetNames(out string listName, out string listEntryName)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xEC8A9C", Offset = "0xEC8A9C", VA = "0xEC8A9C", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xEC8CE8", Offset = "0xEC8CE8", VA = "0xEC8CE8")]
		public RequireInteractionNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200078B")]
	public abstract class UpdateNarrativeNode : IntegrityCheckedNodeBase
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Flow flow;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected FlowInput flowIn;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected bool isUpdating;

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xF36BC8", Offset = "0xF36BC8", VA = "0xF36BC8", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xF36C8C", Offset = "0xF36C8C", VA = "0xF36C8C", Slot = "40")]
		protected virtual void Enter(Flow f)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xF36CD8", Offset = "0xF36CD8", VA = "0xF36CD8")]
		protected void StartUpdating()
		{
		}

		[Token(Token = "0x60015D9")]
		protected abstract void OnUpdate();

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xF36DF4", Offset = "0xF36DF4", VA = "0xF36DF4")]
		protected void StopUpdating()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xF36F08", Offset = "0xF36F08", VA = "0xF36F08", Slot = "42")]
		protected virtual void Leave()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xF36F34", Offset = "0xF36F34", VA = "0xF36F34")]
		protected UpdateNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200078C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B72C", Offset = "0xB1B72C")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B72C", Offset = "0xB1B72C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B72C", Offset = "0xB1B72C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B72C", Offset = "0xB1B72C")]
	public class WaitForFlowNarrativeNode : FlowControlNode
	{
		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7D8", Offset = "0xB1B7D8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WaitForFlowNarrativeNode <>4__this;

			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x27349F0", Offset = "0x27349F0", VA = "0x27349F0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x27349F8", Offset = "0x27349F8", VA = "0x27349F8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xB24348", Offset = "0xB24348")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool[] calls;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput fOut;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x274464C", Offset = "0x274464C", VA = "0x274464C", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x27447EC", Offset = "0x27447EC", VA = "0x27447EC")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x27448D0", Offset = "0x27448D0", VA = "0x27448D0")]
		public WaitForFlowNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200078E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xB1B7E8", Offset = "0xB1B7E8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xB1B7E8", Offset = "0xB1B7E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xB1B7E8", Offset = "0xB1B7E8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0xB1B7E8", Offset = "0xB1B7E8")]
	public class WaitSpecificTimeNarrativeNode : UpdateNarrativeNode
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[ExposeField]
		[SerializeField]
		public bool nonInterruptible;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ValueInput<float> waitTime;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private FlowOutput outStart;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private FlowOutput outUpdate;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private FlowOutput outFinish;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float timer;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private NarrativeSystemManager narrativeSystemManager;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool interruptedForMenu;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool interruptedForSubSequence;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		private bool pauseWaiting;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x2744CE0", Offset = "0x2744CE0", VA = "0x2744CE0", Slot = "38")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x2744E20", Offset = "0x2744E20", VA = "0x2744E20", Slot = "40")]
		protected override void Enter(Flow f)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x2744F50", Offset = "0x2744F50", VA = "0x2744F50", Slot = "41")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x2745094", Offset = "0x2745094", VA = "0x2745094", Slot = "42")]
		protected override void Leave()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x274510C", Offset = "0x274510C", VA = "0x274510C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x2745114", Offset = "0x2745114", VA = "0x2745114")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x2745120", Offset = "0x2745120", VA = "0x2745120")]
		public WaitSpecificTimeNarrativeNode()
		{
		}
	}
	[Token(Token = "0x200078F")]
	public class MagicCamObjectsSpawner : MovableObjectsSpawner
	{
		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x157D0AC", Offset = "0x157D0AC", VA = "0x157D0AC")]
		public MagicCamObjectsSpawner()
		{
		}
	}
	[Token(Token = "0x2000790")]
	public class MovableObjectsSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000791")]
		public class ObjectTransform
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RegisteredActivateable activateable;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform startTransform;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectMover mover;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform transform;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 position;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion rotation;

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xD960D0", Offset = "0xD960D0", VA = "0xD960D0")]
			public ObjectTransform(RegisteredActivateable a, [Optional] Transform start)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000792")]
		public class ObjectToMove
		{
			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RegisteredActivateable obj;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform startTransform;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool moveToStartOnAwake;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool overrideSpawnYCurve;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve spawnYCurve;

			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xD96084", Offset = "0xD96084", VA = "0xD96084")]
			public ObjectToMove()
			{
			}
		}

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string transformSpawn;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string transformView;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ObjectToMove> objectsToMove;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RegisteredTransform tSpawn;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RegisteredTransform tView;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, ObjectTransform> objectDict;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, Action<ObjectTransform>> eventHandlers;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x13354FC", Offset = "0x13354FC", VA = "0x13354FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1335A6C", Offset = "0x1335A6C", VA = "0x1335A6C")]
		public void ChangeViewTransfrom()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1335B60", Offset = "0x1335B60", VA = "0x1335B60")]
		private void OnEvent(string evt)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1335C84", Offset = "0x1335C84", VA = "0x1335C84")]
		private void HandleSpawn(ObjectTransform obj)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1335DCC", Offset = "0x1335DCC", VA = "0x1335DCC")]
		private void HandleStop(ObjectTransform obj)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x1335DF4", Offset = "0x1335DF4", VA = "0x1335DF4")]
		public MovableObjectsSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000793")]
	public class RegisteredTransformReference
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RegisteredTransform transform;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string transformName;

		[Token(Token = "0x170001CC")]
		public RegisteredTransform reference
		{
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xEC6250", Offset = "0xEC6250", VA = "0xEC6250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xEC6308", Offset = "0xEC6308", VA = "0xEC6308")]
		private bool ValidateTransform(RegisteredTransform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xEC63AC", Offset = "0xEC63AC", VA = "0xEC63AC")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xEC63EC", Offset = "0xEC63EC", VA = "0xEC63EC")]
		public bool MissingTransform()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xEC6458", Offset = "0xEC6458", VA = "0xEC6458")]
		public bool MissingName()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xEC6464", Offset = "0xEC6464", VA = "0xEC6464")]
		public RegisteredTransformReference()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000794")]
	public class ObjectMovementSettings
	{
		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB243EC", Offset = "0xB243EC")]
		public float secondsToMove;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool keepUpdatingAfterMove;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve positionCurve;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve rotationCurve;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useYCurve;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve yCurve;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useScaling;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scalingCurve;

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x2774988", Offset = "0x2774988", VA = "0x2774988")]
		public ObjectMovementSettings()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public class ObjectMovementEventListener : MonoBehaviour
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectMovementHandler movementHandler;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string eventToListenFor;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RegisteredTransformReference startTransform;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RegisteredTransformReference targetTransform;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectMovementSettings settings;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onMoveStarted;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onMoveFinished;

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x2773AC8", Offset = "0x2773AC8", VA = "0x2773AC8")]
		private bool ValidateTransform(RegisteredTransformReference r)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x2773AE0", Offset = "0x2773AE0", VA = "0x2773AE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x2773C3C", Offset = "0x2773C3C", VA = "0x2773C3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x2773CA8", Offset = "0x2773CA8", VA = "0x2773CA8")]
		public void ChangeTransform(RegisteredTransformReference refTransform)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x2773E04", Offset = "0x2773E04", VA = "0x2773E04")]
		public void ForceMoveNow()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x2773E08", Offset = "0x2773E08", VA = "0x2773E08")]
		private void OnEvent(string obj)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x2773FCC", Offset = "0x2773FCC", VA = "0x2773FCC")]
		private void OnMoveStarted()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x2773FE0", Offset = "0x2773FE0", VA = "0x2773FE0")]
		private void OnMoveFinished()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x2773FF4", Offset = "0x2773FF4", VA = "0x2773FF4")]
		public ObjectMovementEventListener()
		{
		}
	}
	[Token(Token = "0x2000796")]
	public class ObjectMovementHandler : MonoBehaviour
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _self;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform from;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform to;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isMoving;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float moveTime;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float moveSpeed;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObjectMovementSettings settings;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action _onMoveEndedCallback;

		[Token(Token = "0x170001CD")]
		protected Transform self
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x2773FFC", Offset = "0x2773FFC", VA = "0x2773FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x2773F1C", Offset = "0x2773F1C", VA = "0x2773F1C")]
		public void MoveFromTo(Transform f, Transform t, ObjectMovementSettings s, [Optional] Action onMoveEndedCallback)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x277411C", Offset = "0x277411C", VA = "0x277411C")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x2774438", Offset = "0x2774438", VA = "0x2774438")]
		private Vector3 ToLocalScale(Transform transform, Vector3 globalScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x2774510", Offset = "0x2774510", VA = "0x2774510")]
		public void SetTo(Transform t)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x27740F4", Offset = "0x27740F4", VA = "0x27740F4")]
		private void StartMovement()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x277409C", Offset = "0x277409C", VA = "0x277409C")]
		private void FinishMovement()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x2774588", Offset = "0x2774588", VA = "0x2774588")]
		private void StartUpdating()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x2774770", Offset = "0x2774770", VA = "0x2774770")]
		private void StopUpdating()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x277497C", Offset = "0x277497C", VA = "0x277497C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x2774980", Offset = "0x2774980", VA = "0x2774980")]
		public ObjectMovementHandler()
		{
		}
	}
	[Token(Token = "0x2000797")]
	public class ObjectMover : MonoBehaviour
	{
		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB24408", Offset = "0xB24408")]
		public float secondsToMove;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve positionCurve;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve rotationCurve;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useYCurve;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve yCurve;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve overrideSpawnYCurve;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB24424", Offset = "0xB24424")]
		public Transform restingTransform;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float moveSpeed;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isMoving;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool isBackMovement;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _self;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform prevTarget;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform currentTarget;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action onMoveEnded;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float moveTime;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _keepMovingAfterEnded;

		[Token(Token = "0x170001CE")]
		protected Transform self
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x2774A60", Offset = "0x2774A60", VA = "0x2774A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x2774B00", Offset = "0x2774B00", VA = "0x2774B00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x2774B24", Offset = "0x2774B24", VA = "0x2774B24")]
		public void OverrideSpawnYCurve(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x2774B2C", Offset = "0x2774B2C", VA = "0x2774B2C")]
		private void SetTarget(Transform t)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x2774B68", Offset = "0x2774B68", VA = "0x2774B68")]
		public void MoveTo(Transform t, [Optional] Action onMoveEndedCallback)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x2774D80", Offset = "0x2774D80", VA = "0x2774D80")]
		public void MoveTo(Transform t, bool keepMovingAfterEnded, [Optional] Action onMoveEndedCallback)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x2774D90", Offset = "0x2774D90", VA = "0x2774D90")]
		public void MoveFromTo(Transform from, Transform to, bool keepMovingAfterEnded, [Optional] Action onMoveEndedCallback)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x2774E88", Offset = "0x2774E88", VA = "0x2774E88")]
		public void MoveBack([Optional] Action onMoveEndedCallback)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x2774E10", Offset = "0x2774E10", VA = "0x2774E10")]
		public void SetTo(Transform to)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x2774EBC", Offset = "0x2774EBC", VA = "0x2774EBC")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x2774BD0", Offset = "0x2774BD0", VA = "0x2774BD0")]
		private void StartUpdating()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x27751C8", Offset = "0x27751C8", VA = "0x27751C8")]
		private void StopUpdating()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x2775344", Offset = "0x2775344", VA = "0x2775344")]
		public ObjectMover()
		{
		}
	}
	[Token(Token = "0x2000798")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1B894", Offset = "0xB1B894")]
	public class CharacterAnimationFoleySounds : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000799")]
		public class FoleySound
		{
			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[EventRef]
			[SerializeField]
			public string soundEvent;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string soundEmitterName;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public List<AnimationClip> animations;

			[Token(Token = "0x600161D")]
			[Address(RVA = "0x275E358", Offset = "0x275E358", VA = "0x275E358")]
			public FoleySound()
			{
			}
		}

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<FoleySound> _foleySounds;

		[NonSerialized]
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<AnimationClip, FoleySound> _animationLookup;

		[NonSerialized]
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialized;

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xE3B870", Offset = "0xE3B870", VA = "0xE3B870")]
		public void Init()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xE3BA18", Offset = "0xE3BA18", VA = "0xE3BA18")]
		public FoleySound TryGetFoleySound(AnimationClip animationClip)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xE3BAB4", Offset = "0xE3BAB4", VA = "0xE3BAB4")]
		public CharacterAnimationFoleySounds()
		{
		}
	}
	[Token(Token = "0x200079A")]
	public class RegisteredCharacterAnimationController : RegisteredAssetBase<RegisteredCharacterAnimationController>, IPausable
	{
		[Serializable]
		[Token(Token = "0x200079B")]
		private class IdleAnimation
		{
			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public bool enabled;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public AnimationClip animationClip;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2495C", Offset = "0xB2495C")]
			public float probability;

			[Token(Token = "0x6001645")]
			[Address(RVA = "0xD9F08C", Offset = "0xD9F08C", VA = "0xD9F08C")]
			public IdleAnimation()
			{
			}
		}

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB244C4", Offset = "0xB244C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB244C4", Offset = "0xB244C4")]
		private Transform _leftHandBasePosition;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _rightHandBasePosition;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _leftFootBasePosition;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _rightFootBasePosition;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24564", Offset = "0xB24564")]
		[SerializeField]
		private Transform _leftHandIKTarget;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _rightHandIKTarget;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _leftFootIKTarget;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform _rightFootIKTarget;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB245E0", Offset = "0xB245E0")]
		[SerializeField]
		private float _leftHandSnapDistance;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _rightHandSnapDistance;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _leftFootSnapDistance;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float _rightFootSnapDistance;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _ikBlendingTime;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2466C", Offset = "0xB2466C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2466C", Offset = "0xB2466C")]
		[SerializeField]
		private bool _sanityCheckAnimations;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB246DC", Offset = "0xB246DC")]
		private string _generalTrigger;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _bodyTrigger;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string _bodyReturnTrigger;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _faceTrigger;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24758", Offset = "0xB24758")]
		[SerializeField]
		private string _bodyIdleState1;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string _bodyIdleState1Animation;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string _bodyIdleState2;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string _bodyIdleState2Animation;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string _bodyTriggeredState;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string _bodyTriggeredStateAnimation;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string _faceIdleState1;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string _faceIdleState1Animation;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string _faceIdleState2;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string _faceIdleState2Animation;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string _faceTriggeredState;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string _faceTriggeredStateAnimation;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24854", Offset = "0xB24854")]
		[SerializeField]
		private CharacterAnimationFoleySounds _foleySounds;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB248A0", Offset = "0xB248A0")]
		private IdleAnimation[] _bodyIdleAnimations;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private IdleAnimation[] _faceIdleAnimations;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private AnimationClip[] _bodyAnimationClips;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AnimationClip[] _faceAnimationClips;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private string _bodyIdleState1ClipName;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string _bodyIdleState2ClipName;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string _bodyTriggeredStateClipName;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string _faceIdleState1ClipName;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string _faceIdleState2ClipName;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string _faceTriggeredStateClipName;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string _lastIdleClipName;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Animator _animator;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AnimatorOverrideController animatorOverrideController;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private AnimatorOverrideController _animatorOverrideController;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private StateEnterCallback[] _stateEnterCallbacks;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Dictionary<string, IdleAnimation> _bodyIdleAnimationDictionary;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Dictionary<string, IdleAnimation> _faceIdleAnimationDictionary;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Dictionary<string, AnimationClip> _bodyAnimationDictionary;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Dictionary<string, AnimationClip> _faceAnimationDictionary;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Transform _leftHandBone;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Transform _rightHandBone;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Transform _leftFootBone;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Transform _rightFootBone;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float _leftHandIKWeight;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float _rightHandIKWeight;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float _leftFootIKWeight;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float _rightFootIKWeight;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private SoundService _soundService;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2491C", Offset = "0xB2491C")]
		private float <FacialAnimationLength>k__BackingField;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2492C", Offset = "0xB2492C")]
		private float <BodyAnimationLength>k__BackingField;

		[Token(Token = "0x170001CF")]
		public float FacialAnimationLength
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xEBE91C", Offset = "0xEBE91C", VA = "0xEBE91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D10", Offset = "0xB30D10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xEBE924", Offset = "0xEBE924", VA = "0xEBE924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D20", Offset = "0xB30D20")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public float BodyAnimationLength
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0xEBE92C", Offset = "0xEBE92C", VA = "0xEBE92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D30", Offset = "0xB30D30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001621")]
			[Address(RVA = "0xEBE934", Offset = "0xEBE934", VA = "0xEBE934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D40", Offset = "0xB30D40")]
			private set
			{
			}
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xEBE93C", Offset = "0xEBE93C", VA = "0xEBE93C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xEBF8B8", Offset = "0xEBF8B8", VA = "0xEBF8B8")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xEBFC9C", Offset = "0xEBFC9C", VA = "0xEBFC9C")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xEBFFA4", Offset = "0xEBFFA4", VA = "0xEBFFA4")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xEC0384", Offset = "0xEC0384", VA = "0xEC0384")]
		public void SetBodyIdleAnimationSetActive(string[] clipNames, bool value)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xEC04B0", Offset = "0xEC04B0", VA = "0xEC04B0")]
		public void SetFacialIdleAnimationSetActive(string[] clipNames, bool value)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xEC04C4", Offset = "0xEC04C4", VA = "0xEC04C4")]
		public bool HasBodyAnimation(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xEC0528", Offset = "0xEC0528", VA = "0xEC0528")]
		public bool HasFacialAnimation(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xEC058C", Offset = "0xEC058C", VA = "0xEC058C")]
		public AnimationClip GetBodyAnimation(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xEC05E8", Offset = "0xEC05E8", VA = "0xEC05E8")]
		public AnimationClip GetFacialAnimation(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xEC0644", Offset = "0xEC0644", VA = "0xEC0644")]
		public void PlayBodyAnimation(string clipName, bool immediately = false)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xEC08AC", Offset = "0xEC08AC", VA = "0xEC08AC")]
		public void PlayFacialAnimation(string clipName, bool immediately = false)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xEC0A08", Offset = "0xEC0A08", VA = "0xEC0A08")]
		public void PlayFullBodyAnimation(string bodyClipName, string faceClipName, bool immediately = false)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xEC0B90", Offset = "0xEC0B90", VA = "0xEC0B90")]
		public void ForceReturnToIdle()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xEC0BB4", Offset = "0xEC0BB4", VA = "0xEC0BB4", Slot = "9")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xEC0BD4", Offset = "0xEC0BD4", VA = "0xEC0BD4", Slot = "10")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xEC0BF4", Offset = "0xEC0BF4", VA = "0xEC0BF4")]
		private string SetAnyState(string stateName, string currentStateClipName, AnimationClip newClip)
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xEBF8A0", Offset = "0xEBF8A0", VA = "0xEBF8A0")]
		private void SetBodyIdleState1(AnimationClip newClip)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xEBF8AC", Offset = "0xEBF8AC", VA = "0xEBF8AC")]
		private void SetBodyIdleState2(AnimationClip newClip)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xEC075C", Offset = "0xEC075C", VA = "0xEC075C")]
		private void SetBodyTriggeredState(AnimationClip newClip)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xEC0CD0", Offset = "0xEC0CD0", VA = "0xEC0CD0")]
		private void SetFaceIdleState1(AnimationClip newClip)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xEC0CDC", Offset = "0xEC0CDC", VA = "0xEC0CDC")]
		private void SetFaceIdleState2(AnimationClip newClip)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xEC09C4", Offset = "0xEC09C4", VA = "0xEC09C4")]
		private void SetFaceTriggeredState(AnimationClip newClip)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xEC0CE8", Offset = "0xEC0CE8", VA = "0xEC0CE8")]
		private void OnBodyIdleState1Entered(AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xEC0D18", Offset = "0xEC0D18", VA = "0xEC0D18")]
		private void OnBodyIdleState2Entered(AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xEC0D48", Offset = "0xEC0D48", VA = "0xEC0D48")]
		private void OnFaceIdleState1Entered(AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xEC0D78", Offset = "0xEC0D78", VA = "0xEC0D78")]
		private void OnFaceIdleState2Entered(AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xEBFDA8", Offset = "0xEBFDA8", VA = "0xEBFDA8")]
		private float UpdateIK(AvatarIKGoal ikGoal, Transform ikTarget, Transform basePosition, Transform bone, float snapDistance, float ikWeight)
		{
			return default(float);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xEC0DA8", Offset = "0xEC0DA8", VA = "0xEC0DA8")]
		private void FaceIdleWeight()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xEC0F98", Offset = "0xEC0F98", VA = "0xEC0F98")]
		private void BodyIdleWeight()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xEBF650", Offset = "0xEBF650", VA = "0xEBF650")]
		private AnimationClip GetRandomIdleAnimation(Dictionary<string, IdleAnimation> idleAnimations)
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xEC1188", Offset = "0xEC1188", VA = "0xEC1188")]
		private List<IdleAnimation> GetEnabledIdleAnimations(Dictionary<string, IdleAnimation> idleAnimations)
		{
			return null;
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xEC0398", Offset = "0xEC0398", VA = "0xEC0398")]
		private void SetIdleAnimationsActive(Dictionary<string, IdleAnimation> idleAnimationDictionary, string[] clipNames, bool value)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xEC07A0", Offset = "0xEC07A0", VA = "0xEC07A0")]
		private void PlayFoleySound(AnimationClip animationClip)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xEC1338", Offset = "0xEC1338", VA = "0xEC1338")]
		public RegisteredCharacterAnimationController()
		{
		}
	}
	[Token(Token = "0x200079C")]
	public class InteractableToggleReactionBase : MonoBehaviour
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string onInteraction;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool waitForOnAnimation;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string offInteraction;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool waitForOffAnimation;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool hideOnDisable;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool toggleInteractions;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onShow;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onHide;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RegisteredInteractable interactable;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Interaction interactionShow;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Interaction interactionHide;

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xEA73E4", Offset = "0xEA73E4", VA = "0xEA73E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xEA756C", Offset = "0xEA756C", VA = "0xEA756C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xEA76D8", Offset = "0xEA76D8", VA = "0xEA76D8")]
		private void Show()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xEA76A0", Offset = "0xEA76A0", VA = "0xEA76A0")]
		private void Hide()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xEA7710", Offset = "0xEA7710", VA = "0xEA7710")]
		public InteractableToggleReactionBase()
		{
		}
	}
	[Token(Token = "0x200079D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1B8F4", Offset = "0xB1B8F4")]
	public abstract class AbstractInteractableExtension : MonoBehaviour
	{
		[Token(Token = "0x200079E")]
		protected enum Playback
		{
			[Token(Token = "0x40014D9")]
			None,
			[Token(Token = "0x40014DA")]
			Play,
			[Token(Token = "0x40014DB")]
			PlaySync,
			[Token(Token = "0x40014DC")]
			PlayAsync,
			[Token(Token = "0x40014DD")]
			Stop,
			[Token(Token = "0x40014DE")]
			StopSync,
			[Token(Token = "0x40014DF")]
			StopAsync
		}

		[Serializable]
		[Token(Token = "0x200079F")]
		public class ExtensionAnimation
		{
			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Animation animation;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public AnimationClip animationClip;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public bool syncAnimationPlayback;

			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			[SerializeField]
			public bool syncAnimationFramePerfect;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public RegisteredSoundEmitter soundEmitter;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public bool syncSoundPlayback;

			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[EventRef]
			[SerializeField]
			public string loopedSoundEvent;

			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public string loopedSoundParam;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public bool updateGlobalParam;

			[NonSerialized]
			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ParamRef loopSoundParamRef;

			[Token(Token = "0x170001D2")]
			public StudioEventEmitter SoundEmitter
			{
				[Token(Token = "0x6001659")]
				[Address(RVA = "0x275BCCC", Offset = "0x275BCCC", VA = "0x275BCCC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600165A")]
			[Address(RVA = "0x275BCE8", Offset = "0x275BCE8", VA = "0x275BCE8")]
			public ExtensionAnimation()
			{
			}
		}

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2499C", Offset = "0xB2499C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2499C", Offset = "0xB2499C")]
		[SerializeField]
		private ExtensionAnimation[] _extensionAnimations;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundService _soundService;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24A0C", Offset = "0xB24A0C")]
		private RegisteredInteractable <Interactable>k__BackingField;

		[Token(Token = "0x170001D1")]
		public RegisteredInteractable Interactable
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0x102D6EC", Offset = "0x102D6EC", VA = "0x102D6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D50", Offset = "0xB30D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x102D6F4", Offset = "0x102D6F4", VA = "0x102D6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D60", Offset = "0xB30D60")]
			private set
			{
			}
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x102D6FC", Offset = "0x102D6FC", VA = "0x102D6FC")]
		public void Init(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x102DDC4", Offset = "0x102DDC4", VA = "0x102DDC4", Slot = "4")]
		protected virtual void InitState()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x102DDC8", Offset = "0x102DDC8", VA = "0x102DDC8", Slot = "5")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x102DDCC", Offset = "0x102DDCC", VA = "0x102DDCC", Slot = "6")]
		public virtual float GetAnimationProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x102DDD4", Offset = "0x102DDD4", VA = "0x102DDD4", Slot = "7")]
		public virtual void OnAnimationStart()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x102DDE4", Offset = "0x102DDE4", VA = "0x102DDE4", Slot = "8")]
		public virtual void OnAnimationStop()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x102DDF4", Offset = "0x102DDF4", VA = "0x102DDF4", Slot = "9")]
		public virtual void OnAnimationUpdate()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x102D900", Offset = "0x102D900", VA = "0x102D900")]
		protected void UpdateExtensionAnimations(Playback animationPlayback, Playback soundPlayback, Playback soundParamPlayback)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x102DE04", Offset = "0x102DE04", VA = "0x102DE04")]
		private bool CanTriggerPlayback(Playback playback, bool syncFlag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x102DE38", Offset = "0x102DE38", VA = "0x102DE38")]
		private bool CanStopPlayback(Playback playback, bool syncFlag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x102DE6C", Offset = "0x102DE6C", VA = "0x102DE6C")]
		private void TryUpdateGlobalParameter(ExtensionAnimation extensionAnimation)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x102DEA8", Offset = "0x102DEA8", VA = "0x102DEA8")]
		protected AbstractInteractableExtension()
		{
		}
	}
	[Token(Token = "0x20007A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1B954", Offset = "0xB1B954")]
	public class BackpackInteractable : MonoBehaviour
	{
		[Token(Token = "0x600165B")]
		[Address(RVA = "0x103B550", Offset = "0x103B550", VA = "0x103B550")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x103B61C", Offset = "0x103B61C", VA = "0x103B61C")]
		private void HandleOnClickedWithContext(InteractionContext obj)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x103B6CC", Offset = "0x103B6CC", VA = "0x103B6CC")]
		private bool HandleOnClickWithOXRContext(OXRInteractionContext oxrContext)
		{
			return default(bool);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x103B884", Offset = "0x103B884", VA = "0x103B884")]
		public BackpackInteractable()
		{
		}
	}
	[Token(Token = "0x20007A1")]
	public class Highlight : MonoBehaviour
	{
		[Token(Token = "0x20007A2")]
		private class RuntimeTransition
		{
			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24AD4", Offset = "0xB24AD4")]
			private float <time>k__BackingField;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24AE4", Offset = "0xB24AE4")]
			private HighlightTransition <highlightTransition>k__BackingField;

			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool _isFadingIn;

			[Token(Token = "0x170001D3")]
			public float time
			{
				[Token(Token = "0x6001664")]
				[Address(RVA = "0xF16200", Offset = "0xF16200", VA = "0xF16200")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D70", Offset = "0xB30D70")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001665")]
				[Address(RVA = "0xF16208", Offset = "0xF16208", VA = "0xF16208")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D80", Offset = "0xB30D80")]
				private set
				{
				}
			}

			[Token(Token = "0x170001D4")]
			public HighlightTransition highlightTransition
			{
				[Token(Token = "0x6001666")]
				[Address(RVA = "0xF16210", Offset = "0xF16210", VA = "0xF16210")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D90", Offset = "0xB30D90")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001667")]
				[Address(RVA = "0xF16218", Offset = "0xF16218", VA = "0xF16218")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DA0", Offset = "0xB30DA0")]
				private set
				{
				}
			}

			[Token(Token = "0x170001D5")]
			public bool isFadingIn
			{
				[Token(Token = "0x6001668")]
				[Address(RVA = "0xF16220", Offset = "0xF16220", VA = "0xF16220")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001669")]
				[Address(RVA = "0xF16228", Offset = "0xF16228", VA = "0xF16228")]
				set
				{
				}
			}

			[Token(Token = "0x600166A")]
			[Address(RVA = "0xF16298", Offset = "0xF16298", VA = "0xF16298")]
			public RuntimeTransition(HighlightTransition highlightTransition)
			{
			}

			[Token(Token = "0x600166B")]
			[Address(RVA = "0xF162DC", Offset = "0xF162DC", VA = "0xF162DC")]
			public void UpdateTransition()
			{
			}

			[Token(Token = "0x600166C")]
			[Address(RVA = "0xF163F0", Offset = "0xF163F0", VA = "0xF163F0")]
			public void Finish()
			{
			}

			[Token(Token = "0x600166D")]
			[Address(RVA = "0xF16270", Offset = "0xF16270", VA = "0xF16270")]
			public float GetDuration()
			{
				return default(float);
			}
		}

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightAsset highlightAsset;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObjectOverride;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RuntimeTransition currentTransition;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x25F82C4", Offset = "0x25F82C4", VA = "0x25F82C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x25F8418", Offset = "0x25F8418", VA = "0x25F8418")]
		public void StartHighlight()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x25F8438", Offset = "0x25F8438", VA = "0x25F8438")]
		public void EndHighlight()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x25F8458", Offset = "0x25F8458", VA = "0x25F8458")]
		private void Update()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x25F846C", Offset = "0x25F846C", VA = "0x25F846C")]
		public Highlight()
		{
		}
	}
	[Token(Token = "0x20007A3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1B9B4", Offset = "0xB1B9B4")]
	public class HighlightAsset : ScriptableObject
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24AF4", Offset = "0xB24AF4")]
		public float duration;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24B2C", Offset = "0xB24B2C")]
		public Material material;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shaderPropertyName;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float startValue;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float endValue;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24B64", Offset = "0xB24B64")]
		public bool canUpscale;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float scaleMultiplier;

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x25F83A8", Offset = "0x25F83A8", VA = "0x25F83A8")]
		public HighlightTransition GetHighlightTransition(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x25F8474", Offset = "0x25F8474", VA = "0x25F8474")]
		public HighlightAsset()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class HighlightTransition
	{
		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B9F8", Offset = "0xB1B9F8")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x600167C")]
			[Address(RVA = "0xF165D4", Offset = "0xF165D4", VA = "0xF165D4")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600167D")]
			[Address(RVA = "0xF165DC", Offset = "0xF165DC", VA = "0xF165DC")]
			internal bool <RemoveMaterial>b__0(Material x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24B9C", Offset = "0xB24B9C")]
		private GameObject <gameObject>k__BackingField;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24BAC", Offset = "0xB24BAC")]
		private HighlightAsset <highlightAsset>k__BackingField;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24BBC", Offset = "0xB24BBC")]
		private Material <material>k__BackingField;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startScale;

		[Token(Token = "0x170001D6")]
		public GameObject gameObject
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x1269364", Offset = "0x1269364", VA = "0x1269364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DB0", Offset = "0xB30DB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x126936C", Offset = "0x126936C", VA = "0x126936C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DC0", Offset = "0xB30DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public HighlightAsset highlightAsset
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x1269374", Offset = "0x1269374", VA = "0x1269374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DD0", Offset = "0xB30DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x126937C", Offset = "0x126937C", VA = "0x126937C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DE0", Offset = "0xB30DE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public Material material
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x1269384", Offset = "0x1269384", VA = "0x1269384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DF0", Offset = "0xB30DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x126938C", Offset = "0x126938C", VA = "0x126938C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E00", Offset = "0xB30E00")]
			private set
			{
			}
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1269394", Offset = "0x1269394", VA = "0x1269394")]
		public HighlightTransition(GameObject go, HighlightAsset highlightAsset)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x1269470", Offset = "0x1269470", VA = "0x1269470")]
		public void OnStartHighlight()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1269624", Offset = "0x1269624", VA = "0x1269624")]
		public void OnEndHighlight()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1269524", Offset = "0x1269524", VA = "0x1269524")]
		private static void AddMaterial(Renderer renderer, Material material)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x12696D8", Offset = "0x12696D8", VA = "0x12696D8")]
		private static void RemoveMaterial(Renderer renderer, Material material)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1269868", Offset = "0x1269868", VA = "0x1269868")]
		public void Update(float normalizedTime)
		{
		}
	}
	[Token(Token = "0x20007A6")]
	public class InteractableExtensionState : AbstractInteractableExtension
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24BCC", Offset = "0xB24BCC")]
		[SerializeField]
		private string _activateInteractionName;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _deactivateInteractionName;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24C28", Offset = "0xB24C28")]
		[SerializeField]
		public UnityEvent onToggle;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24C74", Offset = "0xB24C74")]
		private Interaction <ActivateInteraction>k__BackingField;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24C84", Offset = "0xB24C84")]
		private Interaction <DeactivateInteraction>k__BackingField;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24C94", Offset = "0xB24C94")]
		private bool <State>k__BackingField;

		[Token(Token = "0x170001D9")]
		public string ActivateInteractionName
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xEA542C", Offset = "0xEA542C", VA = "0xEA542C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public string DeactivateInteractionName
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xEA5434", Offset = "0xEA5434", VA = "0xEA5434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public Interaction ActivateInteraction
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0xEA543C", Offset = "0xEA543C", VA = "0xEA543C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E10", Offset = "0xB30E10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xEA5444", Offset = "0xEA5444", VA = "0xEA5444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E20", Offset = "0xB30E20")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public Interaction DeactivateInteraction
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xEA544C", Offset = "0xEA544C", VA = "0xEA544C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E30", Offset = "0xB30E30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xEA5454", Offset = "0xEA5454", VA = "0xEA5454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E40", Offset = "0xB30E40")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public bool State
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xEA545C", Offset = "0xEA545C", VA = "0xEA545C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E50", Offset = "0xB30E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xEA5464", Offset = "0xEA5464", VA = "0xEA5464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E60", Offset = "0xB30E60")]
			private set
			{
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xEA5470", Offset = "0xEA5470", VA = "0xEA5470", Slot = "4")]
		protected override void InitState()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xEA5690", Offset = "0xEA5690", VA = "0xEA5690", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xEA597C", Offset = "0xEA597C", VA = "0xEA597C", Slot = "6")]
		public override float GetAnimationProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xEA59E0", Offset = "0xEA59E0", VA = "0xEA59E0")]
		private void OnStateChanged()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xEA5694", Offset = "0xEA5694", VA = "0xEA5694")]
		private bool ApplyStateFromInteractable()
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xEA5A60", Offset = "0xEA5A60", VA = "0xEA5A60")]
		public InteractableExtensionState()
		{
		}
	}
	[Token(Token = "0x20007A7")]
	public class InteractableExtensionValue : AbstractInteractableExtension
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24CA4", Offset = "0xB24CA4")]
		private string _increaseInteractionName;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _decreaseInteractionName;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24D00", Offset = "0xB24D00")]
		[SerializeField]
		private float _startValue;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _minValue;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _step;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24D7C", Offset = "0xB24D7C")]
		[SerializeField]
		public UnityEvent onValueChange;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24DC8", Offset = "0xB24DC8")]
		private Interaction <IncreaseInteraction>k__BackingField;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24DD8", Offset = "0xB24DD8")]
		private Interaction <DecreaseInteraction>k__BackingField;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB24DE8", Offset = "0xB24DE8")]
		private float <Value>k__BackingField;

		[Token(Token = "0x170001DE")]
		public string IncreaseInteractionName
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xEA5AE0", Offset = "0xEA5AE0", VA = "0xEA5AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public string DecreaseInteractionName
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xEA5AE8", Offset = "0xEA5AE8", VA = "0xEA5AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public Interaction IncreaseInteraction
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xEA5AF0", Offset = "0xEA5AF0", VA = "0xEA5AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E70", Offset = "0xB30E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xEA5AF8", Offset = "0xEA5AF8", VA = "0xEA5AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E80", Offset = "0xB30E80")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public Interaction DecreaseInteraction
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xEA5B00", Offset = "0xEA5B00", VA = "0xEA5B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E90", Offset = "0xB30E90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xEA5B08", Offset = "0xEA5B08", VA = "0xEA5B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EA0", Offset = "0xB30EA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public float Value
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0xEA5B10", Offset = "0xEA5B10", VA = "0xEA5B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EB0", Offset = "0xB30EB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001693")]
			[Address(RVA = "0xEA5B18", Offset = "0xEA5B18", VA = "0xEA5B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EC0", Offset = "0xB30EC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public float MinValue
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0xEA5B20", Offset = "0xEA5B20", VA = "0xEA5B20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E4")]
		public float MaxValue
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0xEA5B28", Offset = "0xEA5B28", VA = "0xEA5B28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E5")]
		public float Step
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xEA5B30", Offset = "0xEA5B30", VA = "0xEA5B30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xEA5B38", Offset = "0xEA5B38", VA = "0xEA5B38", Slot = "4")]
		protected override void InitState()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xEA5DB0", Offset = "0xEA5DB0", VA = "0xEA5DB0", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xEA5DBC", Offset = "0xEA5DBC", VA = "0xEA5DBC", Slot = "6")]
		public override float GetAnimationProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xEA5DD0", Offset = "0xEA5DD0", VA = "0xEA5DD0")]
		public void SetValue(float newValue)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xEA5E0C", Offset = "0xEA5E0C", VA = "0xEA5E0C")]
		private void OnIncrease()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xEA5E1C", Offset = "0xEA5E1C", VA = "0xEA5E1C")]
		private void OnDecrease()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xEA5E2C", Offset = "0xEA5E2C", VA = "0xEA5E2C")]
		public InteractableExtensionValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A8")]
	public class Interaction
	{
		[Token(Token = "0x20007A9")]
		public enum SoundSyncMode
		{
			[Token(Token = "0x400151A")]
			NoSync,
			[Token(Token = "0x400151B")]
			SyncWithAnimation,
			[Token(Token = "0x400151C")]
			SyncWithState
		}

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24DF8", Offset = "0xB24DF8")]
		[SerializeField]
		public string name;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24E44", Offset = "0xB24E44")]
		[SerializeField]
		private bool _enabled;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24E90", Offset = "0xB24E90")]
		[SerializeField]
		public bool unskipable;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24EDC", Offset = "0xB24EDC")]
		[SerializeField]
		public bool onlyInLookAt;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24F28", Offset = "0xB24F28")]
		[SerializeField]
		public AnimationClip animationClip;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24F74", Offset = "0xB24F74")]
		[SerializeField]
		public SoundSyncMode soundSync;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[EventRef]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24FC0", Offset = "0xB24FC0")]
		[SerializeField]
		public string soundEvent;

		[NonSerialized]
		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onInteracted;

		[NonSerialized]
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onAnimationEnded;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2501C", Offset = "0xB2501C")]
		private string <LocalizationKey>k__BackingField;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2502C", Offset = "0xB2502C")]
		private RegisteredInteractable <Interactable>k__BackingField;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2503C", Offset = "0xB2503C")]
		private bool <Enabled>k__BackingField;

		[Token(Token = "0x170001E6")]
		public bool hasValidSoundEvent
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xEA9E54", Offset = "0xEA9E54", VA = "0xEA9E54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public string LocalizationKey
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xEA9E78", Offset = "0xEA9E78", VA = "0xEA9E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30ED0", Offset = "0xB30ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xEA9E80", Offset = "0xEA9E80", VA = "0xEA9E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EE0", Offset = "0xB30EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public RegisteredInteractable Interactable
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xEA9E88", Offset = "0xEA9E88", VA = "0xEA9E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EF0", Offset = "0xB30EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xEA9E90", Offset = "0xEA9E90", VA = "0xEA9E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F00", Offset = "0xB30F00")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public LocaKey locaKey
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xEA9E98", Offset = "0xEA9E98", VA = "0xEA9E98")]
			get
			{
				return default(LocaKey);
			}
		}

		[Token(Token = "0x170001EA")]
		public bool Enabled
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xEA9F04", Offset = "0xEA9F04", VA = "0xEA9F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F10", Offset = "0xB30F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xEA9F0C", Offset = "0xEA9F0C", VA = "0xEA9F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F20", Offset = "0xB30F20")]
			set
			{
			}
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xEA9F18", Offset = "0xEA9F18", VA = "0xEA9F18")]
		public void Init(string localizationKey, RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xEA9F58", Offset = "0xEA9F58", VA = "0xEA9F58")]
		public void Reset()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xEA9F64", Offset = "0xEA9F64", VA = "0xEA9F64")]
		public void OnInteraction()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xEAA0A0", Offset = "0xEAA0A0", VA = "0xEAA0A0")]
		public static bool AnyRequiresLookat(List<Interaction> interactions)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xEAA144", Offset = "0xEAA144", VA = "0xEAA144")]
		public Interaction()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	public class InteractionContext
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RegisteredInteractable interactable;

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xEAA1EC", Offset = "0xEAA1EC", VA = "0xEAA1EC")]
		public InteractionContext()
		{
		}
	}
	[Token(Token = "0x20007AB")]
	public class OXRInteractionContext : InteractionContext
	{
		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HVRUIPointer uiPointer;

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x2768C3C", Offset = "0x2768C3C", VA = "0x2768C3C")]
		public OXRInteractionContext()
		{
		}
	}
	[Token(Token = "0x20007AC")]
	public class RegisteredInteractable : RegisteredAssetBase<RegisteredInteractable>
	{
		[Token(Token = "0x20007AD")]
		public enum LookAtMode
		{
			[Token(Token = "0x4001548")]
			Auto,
			[Token(Token = "0x4001549")]
			Always,
			[Token(Token = "0x400154A")]
			Never
		}

		[Token(Token = "0x20007AE")]
		public enum AnimationMode
		{
			[Token(Token = "0x400154C")]
			WaitUntilFinished,
			[Token(Token = "0x400154D")]
			PlayFromStart,
			[Token(Token = "0x400154E")]
			PlayMirrored
		}

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA08", Offset = "0xB1BA08")]
		private sealed class <>c__DisplayClass101_0
		{
			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabledState;

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xD9F118", Offset = "0xD9F118", VA = "0xD9F118")]
			public <>c__DisplayClass101_0()
			{
			}

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xD9F120", Offset = "0xD9F120", VA = "0xD9F120")]
			internal bool <FilterInteractions>b__0(Interaction interaction)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA18", Offset = "0xB1BA18")]
		private sealed class <>c
		{
			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InteractionContext> <>9__121_0;

			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xD9F10C", Offset = "0xD9F10C", VA = "0xD9F10C")]
			public <>c()
			{
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xD9F114", Offset = "0xD9F114", VA = "0xD9F114")]
			internal void <.ctor>b__121_0(InteractionContext <p0>)
			{
			}
		}

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2504C", Offset = "0xB2504C")]
		[SerializeField]
		public InventoryItem _inventoryItem;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _inventoryInteractionName;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RegisteredActivateable inventoryActivateable;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB250B8", Offset = "0xB250B8")]
		public bool _localIsInteractable;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		public bool currentlyHiddenThroughDistance;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		public bool wasAddedToInventory;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25124", Offset = "0xB25124")]
		public bool showInteractableMarker;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public bool showInteractableText;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		public bool disableIfFarAway;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public float sqrDistanceToPlayer;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float sqrDistanceAtWhichToHide;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float selectionDistance;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB251C0", Offset = "0xB251C0")]
		[SerializeField]
		public LookAtMode _lookAtMode;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _lookAtModel;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[EventRef]
		[SerializeField]
		private string _enterLookAtSoundEvent;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[EventRef]
		private string _exitLookAtSoundEvent;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2528C", Offset = "0xB2528C")]
		[SerializeField]
		private Animation _animation;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RegisteredSoundEmitter _soundEmitter;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _startInteraction;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationMode _animationMode;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25308", Offset = "0xB25308")]
		private List<Interaction> _interactions;

		[NonSerialized]
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onClicked;

		[NonSerialized]
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onHover;

		[NonSerialized]
		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onStoppedHovering;

		[NonSerialized]
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onStateChanged;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action onStartHover;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action onStopHover;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action onInteracted;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SoundService _soundService;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private UpdateManager _updateManager;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AbstractInteractableExtension[] _extensions;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _duringInventoryPickup;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Interaction _inventoryInteraction;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25364", Offset = "0xB25364")]
		private string <LocalizationKey>k__BackingField;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25374", Offset = "0xB25374")]
		private Interaction <Interaction>k__BackingField;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25384", Offset = "0xB25384")]
		private bool <DuringAnimation>k__BackingField;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action<bool> onLocalIsInteractableChanged;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25394", Offset = "0xB25394")]
		private string <overrideDisplayName>k__BackingField;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB253A4", Offset = "0xB253A4")]
		private Highlight <highlight>k__BackingField;

		[Token(Token = "0x170001EB")]
		public List<Interaction> interactions
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xEC2698", Offset = "0xEC2698", VA = "0xEC2698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public GameObject LookAtModel
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xEC27E0", Offset = "0xEC27E0", VA = "0xEC27E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public string LocalizationKey
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xEC27E8", Offset = "0xEC27E8", VA = "0xEC27E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F50", Offset = "0xB30F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xEC27F0", Offset = "0xEC27F0", VA = "0xEC27F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F60", Offset = "0xB30F60")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public LocaKey locaKey
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xEC27F8", Offset = "0xEC27F8", VA = "0xEC27F8")]
			get
			{
				return default(LocaKey);
			}
		}

		[Token(Token = "0x170001EF")]
		public Interaction Interaction
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xEC2804", Offset = "0xEC2804", VA = "0xEC2804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F70", Offset = "0xB30F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xEC280C", Offset = "0xEC280C", VA = "0xEC280C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F80", Offset = "0xB30F80")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public Animation Animation
		{
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0xEC281C", Offset = "0xEC281C", VA = "0xEC281C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public AnimationClip AnimationClip
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0xEC2824", Offset = "0xEC2824", VA = "0xEC2824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public AnimationState AnimationState
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xEC283C", Offset = "0xEC283C", VA = "0xEC283C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public bool DuringAnimation
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xEC2888", Offset = "0xEC2888", VA = "0xEC2888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F90", Offset = "0xB30F90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0xEC2890", Offset = "0xEC2890", VA = "0xEC2890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30FA0", Offset = "0xB30FA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		private bool HasAnimationState
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0xEC289C", Offset = "0xEC289C", VA = "0xEC289C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		public float AnimationProgress
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xEC2974", Offset = "0xEC2974", VA = "0xEC2974")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F6")]
		public bool NeedsCanvas
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xEC29D0", Offset = "0xEC29D0", VA = "0xEC29D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F7")]
		public bool IsInteractable
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xEC2A3C", Offset = "0xEC2A3C", VA = "0xEC2A3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xEC2AE4", Offset = "0xEC2AE4", VA = "0xEC2AE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public bool IsVisible
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xEC2B58", Offset = "0xEC2B58", VA = "0xEC2B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		private bool HasSoundEmitter
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xEC2C44", Offset = "0xEC2C44", VA = "0xEC2C44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		private StudioEventEmitter SoundEmitter
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xEC2D08", Offset = "0xEC2D08", VA = "0xEC2D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private bool HasInventoryInteraction
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xEC2D24", Offset = "0xEC2D24", VA = "0xEC2D24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public string overrideDisplayName
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xEC2D48", Offset = "0xEC2D48", VA = "0xEC2D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30FB0", Offset = "0xB30FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xEC2D50", Offset = "0xEC2D50", VA = "0xEC2D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30FC0", Offset = "0xB30FC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public Highlight highlight
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xEC2D60", Offset = "0xEC2D60", VA = "0xEC2D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30FD0", Offset = "0xB30FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xEC2D68", Offset = "0xEC2D68", VA = "0xEC2D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30FE0", Offset = "0xB30FE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public bool isInventoryOpener
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xEC34BC", Offset = "0xEC34BC", VA = "0xEC34BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		public bool canOpenInventory
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xEC5010", Offset = "0xEC5010", VA = "0xEC5010")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<InteractionContext> onClickedWithContext
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xEC26A0", Offset = "0xEC26A0", VA = "0xEC26A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F30", Offset = "0xB30F30")]
			add
			{
			}
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xEC2740", Offset = "0xEC2740", VA = "0xEC2740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30F40", Offset = "0xB30F40")]
			remove
			{
			}
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xEC2D78", Offset = "0xEC2D78", VA = "0xEC2D78")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xEC36EC", Offset = "0xEC36EC", VA = "0xEC36EC")]
		public void StartHighlight()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xEC38EC", Offset = "0xEC38EC", VA = "0xEC38EC")]
		public void EndHighlight()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xEC3B58", Offset = "0xEC3B58", VA = "0xEC3B58")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xEC3CF8", Offset = "0xEC3CF8", VA = "0xEC3CF8")]
		public void OnAddedToInventory()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xEC3D6C", Offset = "0xEC3D6C", VA = "0xEC3D6C")]
		public void RemoveAfterInventoryPickup()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xEC3ED0", Offset = "0xEC3ED0", VA = "0xEC3ED0")]
		public void SetInteractionEnabled(string name, bool value)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xEC4010", Offset = "0xEC4010", VA = "0xEC4010")]
		public void DisableInteraction(string name)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xEC4018", Offset = "0xEC4018", VA = "0xEC4018")]
		public void EnableInteraction(string name)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xEC4020", Offset = "0xEC4020", VA = "0xEC4020")]
		public void SetInteractionUnskippable(string name, bool value)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xEC4160", Offset = "0xEC4160", VA = "0xEC4160")]
		public void SetAllInteractionsEnabled(bool value)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xEC33B0", Offset = "0xEC33B0", VA = "0xEC33B0")]
		public bool TryGetInteraction(string name, out Interaction interaction)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xEC4204", Offset = "0xEC4204", VA = "0xEC4204")]
		public bool HasInteraction(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xEC422C", Offset = "0xEC422C", VA = "0xEC422C")]
		public List<Interaction> FilterInteractions(bool enabledState)
		{
			return null;
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xEC35D0", Offset = "0xEC35D0", VA = "0xEC35D0")]
		public void ResetState(bool resetState = true, bool resetExtensions = true)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xEC4398", Offset = "0xEC4398", VA = "0xEC4398")]
		public bool SetStateFromSavegame(string interactionName, float animatorProgress, [Optional] List<string> enabledInteractions)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xEC4494", Offset = "0xEC4494", VA = "0xEC4494")]
		public bool SetStateFromGameplay(string interactionName, float animatorProgress)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xEC44A4", Offset = "0xEC44A4", VA = "0xEC44A4")]
		public bool InvokeInteraction(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xEC45B0", Offset = "0xEC45B0", VA = "0xEC45B0")]
		public void OnInteraction(Interaction interaction)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xEC4630", Offset = "0xEC4630", VA = "0xEC4630")]
		public void TriggerLookAtSound(LookAtEvent lookAtEvent, [Optional] Interaction triggeredInteraction)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xEC46C0", Offset = "0xEC46C0", VA = "0xEC46C0")]
		public void HandleClick()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xEC46C8", Offset = "0xEC46C8", VA = "0xEC46C8")]
		public void HandleClick(InteractionContext context)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xEC4320", Offset = "0xEC4320", VA = "0xEC4320")]
		private bool SetState(string interactionName, float animatorProgress, bool triggerSoundEvents, bool triggerStateEvent, bool trackAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xEC478C", Offset = "0xEC478C", VA = "0xEC478C")]
		private bool SetState(Interaction interaction, float animatorProgress, bool triggerSoundEvents, bool triggerStateEvent, bool trackAnimation)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xEC4A80", Offset = "0xEC4A80", VA = "0xEC4A80")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xEC4DD4", Offset = "0xEC4DD4", VA = "0xEC4DD4")]
		public void SetSqrDistanceToPlayer(float newDistance)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xEC4DFC", Offset = "0xEC4DFC", VA = "0xEC4DFC")]
		public LocaKey GetCurrentInteractableKey()
		{
			return default(LocaKey);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xEC4E08", Offset = "0xEC4E08", VA = "0xEC4E08")]
		public LocaKey GetCurrentInteractionKey()
		{
			return default(LocaKey);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xEC4EC8", Offset = "0xEC4EC8", VA = "0xEC4EC8")]
		private void OnClicked()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xEC507C", Offset = "0xEC507C", VA = "0xEC507C")]
		public RegisteredInteractable()
		{
		}
	}
	[Token(Token = "0x20007B1")]
	public interface IRegisteredObject
	{
		[Token(Token = "0x17000200")]
		string RegisteredObjectName
		{
			[Token(Token = "0x60016ED")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x20007B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1BA28", Offset = "0xB1BA28")]
	public class PerCameraRenderSettings : ScriptableObject
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material ambientLightSkybox;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SphericalHarmonicsAsset ambientProbe;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ambientIntensity;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool enableFog;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool isApplied;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SphericalHarmonicsL2 sceneL2;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material sceneSkybox;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float sceneIntensity;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool sceneFog;

		[Token(Token = "0x17000201")]
		private bool canStoreHarmonics
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x277EA74", Offset = "0x277EA74", VA = "0x277EA74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x277EAFC", Offset = "0x277EAFC", VA = "0x277EAFC")]
		public void ApplyToRecalculate()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x277EBE8", Offset = "0x277EBE8", VA = "0x277EBE8")]
		public void RestoreSceneLightSettings()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x277EC54", Offset = "0x277EC54", VA = "0x277EC54")]
		public void StoreHarmonics()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x277EC70", Offset = "0x277EC70", VA = "0x277EC70")]
		public void Enable()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x277ECC0", Offset = "0x277ECC0", VA = "0x277ECC0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x277EB14", Offset = "0x277EB14", VA = "0x277EB14")]
		private void BackupSceneSettingsAndOverride()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x277EBEC", Offset = "0x277EBEC", VA = "0x277EBEC")]
		private void RestoreSceneSettings()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x277ECC4", Offset = "0x277ECC4", VA = "0x277ECC4")]
		public PerCameraRenderSettings()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public interface RegisteredActivatableExtraBools
	{
		[Token(Token = "0x17000202")]
		bool isDeactivateAfterRegistrationSet
		{
			[Token(Token = "0x60016F7")]
			get;
		}
	}
	[Token(Token = "0x20007B4")]
	public class RegisteredActivateable : RegisteredAssetBase<RegisteredActivateable>, RegisteredActivatableExtraBools
	{
		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB253B4", Offset = "0xB253B4")]
		private bool deactivateAfterRegistration;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform activationTarget;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onActivate;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDeactivate;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool defaultActiveState;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool currentState;

		[Token(Token = "0x17000203")]
		public bool isDeactivateAfterRegistrationSet
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xEBCC8C", Offset = "0xEBCC8C", VA = "0xEBCC8C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000204")]
		private Transform target
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xEBCC94", Offset = "0xEBCC94", VA = "0xEBCC94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		public bool requiresSerialization
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xEBCD20", Offset = "0xEBCD20", VA = "0xEBCD20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xEBCD6C", Offset = "0xEBCD6C", VA = "0xEBCD6C")]
		public void OnAfterRegistrationFinished()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xEBCD78", Offset = "0xEBCD78", VA = "0xEBCD78", Slot = "8")]
		protected override void OnRegister()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xEBCE0C", Offset = "0xEBCE0C", VA = "0xEBCE0C")]
		public void SetActiveState(bool targetState)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xEBCE88", Offset = "0xEBCE88", VA = "0xEBCE88", Slot = "7")]
		protected override void SetInactive()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xEBCF14", Offset = "0xEBCF14", VA = "0xEBCF14")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xEBCF60", Offset = "0xEBCF60", VA = "0xEBCF60")]
		public void ToggleActiveState()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xEBCFA8", Offset = "0xEBCFA8", VA = "0xEBCFA8")]
		public RegisteredActivateable()
		{
		}
	}
	[Token(Token = "0x20007B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1BA90", Offset = "0xB1BA90")]
	public class RegisteredAnimateable : RegisteredAssetBase<RegisteredAnimateable>, IPausable
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool enableOnlyForState;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator myAnimator;

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xEBCFFC", Offset = "0xEBCFFC", VA = "0xEBCFFC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xEBD0A8", Offset = "0xEBD0A8", VA = "0xEBD0A8")]
		public void PlayAnimationState(string stateToPlay)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xEBD100", Offset = "0xEBD100", VA = "0xEBD100")]
		public void SetAnimatorSpeed(float targetSpeed)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xEBD11C", Offset = "0xEBD11C", VA = "0xEBD11C")]
		public void SetBoolParameter(string parameterToSet, bool targetValue)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xEBD13C", Offset = "0xEBD13C", VA = "0xEBD13C")]
		public void SetFloatParameter(string parameterToSet, float targetValue)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xEBD158", Offset = "0xEBD158", VA = "0xEBD158")]
		public void SetIntParameter(string parameterToSet, int targetValue)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xEBD174", Offset = "0xEBD174", VA = "0xEBD174")]
		public void SetTriggerParameter(string parameterToSet)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xEBD190", Offset = "0xEBD190", VA = "0xEBD190", Slot = "9")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xEBD1B0", Offset = "0xEBD1B0", VA = "0xEBD1B0", Slot = "10")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xEBD1D0", Offset = "0xEBD1D0", VA = "0xEBD1D0")]
		public RegisteredAnimateable()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public interface IIntegrityCheckableRegisteredAsset
	{
		[Token(Token = "0x17000206")]
		bool isSetInactiveAfterRegistrationSet
		{
			[Token(Token = "0x600170D")]
			get;
		}

		[Token(Token = "0x17000207")]
		RegisterScope scope
		{
			[Token(Token = "0x600170E")]
			get;
		}

		[Token(Token = "0x600170C")]
		void RegisterWith(AssetRegistrationAccess registry);
	}
	[Token(Token = "0x20007B7")]
	public enum RegisterScope
	{
		[Token(Token = "0x4001564")]
		AWAKE_DESTROY,
		[Token(Token = "0x4001565")]
		START_DESTROY,
		[Token(Token = "0x4001566")]
		ENABLE_DISABLE
	}
	[Token(Token = "0x20007B8")]
	public class RegisteredAssetBase<T> : MonoBehaviour, IIntegrityCheckableRegisteredAsset where T : RegisteredAssetBase<T>
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected RegisterScope registrationLifetime;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB25420", Offset = "0xB25420")]
		private bool setInactiveAfterRegistration;

		[Token(Token = "0x17000208")]
		public bool isSetInactiveAfterRegistrationSet
		{
			[Token(Token = "0x600170F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000209")]
		public RegisterScope scope
		{
			[Token(Token = "0x6001710")]
			get
			{
				return default(RegisterScope);
			}
		}

		[Token(Token = "0x6001711")]
		protected void Register()
		{
		}

		[Token(Token = "0x6001712")]
		protected virtual void SetInactive()
		{
		}

		[Token(Token = "0x6001713")]
		protected void Deregister()
		{
		}

		[Token(Token = "0x6001714")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001715")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001716")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001717")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001718")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001719")]
		private void HitchHiker.IIntegrityCheckableRegisteredAsset.RegisterWith(AssetRegistrationAccess registry)
		{
		}

		[Token(Token = "0x600171A")]
		protected virtual void OnRegister()
		{
		}

		[Token(Token = "0x600171B")]
		public RegisteredAssetBase()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1BAF0", Offset = "0xB1BAF0")]
	public class RegisteredCamera : RegisteredAssetBase<RegisteredCamera>
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public int debugCameraIndex;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool showsCrosshair;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onActivated;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDisabled;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2547C", Offset = "0xB2547C")]
		public PostProcessLayer postFXLayer;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Camera> subCams;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB254B4", Offset = "0xB254B4")]
		[EventRef]
		private string _snapshotSoundEvent;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25510", Offset = "0xB25510")]
		private Camera <self>k__BackingField;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SettingsService _settingsService;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PlayerCameraController playerCameraController;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool overrideRenderSettings;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PerCameraRenderSettings overrideSettings;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Skybox skybox;

		[Token(Token = "0x1700020A")]
		public Camera self
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xEBD224", Offset = "0xEBD224", VA = "0xEBD224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30FF0", Offset = "0xB30FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xEBD22C", Offset = "0xEBD22C", VA = "0xEBD22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31000", Offset = "0xB31000")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool IsCameraActive
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xEBD234", Offset = "0xEBD234", VA = "0xEBD234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		public string SnapshotSoundEvent
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0xEBD27C", Offset = "0xEBD27C", VA = "0xEBD27C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public bool isPlayerCamera
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xEBD284", Offset = "0xEBD284", VA = "0xEBD284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020E")]
		private bool hasOverrideAsset
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xEBD2F8", Offset = "0xEBD2F8", VA = "0xEBD2F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xEBD2F0", Offset = "0xEBD2F0", VA = "0xEBD2F0")]
		public void SetOverrideAsset(PerCameraRenderSettings overrideAsset)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xEBD364", Offset = "0xEBD364", VA = "0xEBD364")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xEBD600", Offset = "0xEBD600", VA = "0xEBD600")]
		private IEnumerable<Camera> GetSubCamsWithoutSelf()
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xEBD7D8", Offset = "0xEBD7D8", VA = "0xEBD7D8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xEBD800", Offset = "0xEBD800", VA = "0xEBD800")]
		private void Update()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xEBD804", Offset = "0xEBD804", VA = "0xEBD804")]
		private void CheckAndChangeSkybox()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xEBDA14", Offset = "0xEBDA14", VA = "0xEBDA14")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xEBDA3C", Offset = "0xEBDA3C", VA = "0xEBDA3C")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xEBD6DC", Offset = "0xEBD6DC", VA = "0xEBD6DC")]
		private void OnQualitySettingsChanged()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xEBDB40", Offset = "0xEBDB40", VA = "0xEBDB40")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xEBDBA8", Offset = "0xEBDBA8", VA = "0xEBDBA8")]
		public void Activate()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xEBDD34", Offset = "0xEBDD34", VA = "0xEBDD34")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xEBDE80", Offset = "0xEBDE80", VA = "0xEBDE80")]
		public void AddSubCam(Camera cam)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xEBDF3C", Offset = "0xEBDF3C", VA = "0xEBDF3C")]
		public Camera GetSubCam()
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xEBDFAC", Offset = "0xEBDFAC", VA = "0xEBDFAC")]
		public RegisteredCamera()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xEBE04C", Offset = "0xEBE04C", VA = "0xEBE04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31010", Offset = "0xB31010")]
		private bool <GetSubCamsWithoutSelf>b__25_0(Camera cam)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1BB50", Offset = "0xB1BB50")]
	public class RegisteredNPCCarController : MonoBehaviour, IPausable
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplineController myController;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool wasEnabled;

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xEC526C", Offset = "0xEC526C", VA = "0xEC526C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xEC534C", Offset = "0xEC534C", VA = "0xEC534C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xEC53F0", Offset = "0xEC53F0", VA = "0xEC53F0", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xEC5440", Offset = "0xEC5440", VA = "0xEC5440", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xEC5480", Offset = "0xEC5480", VA = "0xEC5480")]
		public RegisteredNPCCarController()
		{
		}
	}
	[Token(Token = "0x20007BB")]
	public class RegisteredParticleEmitter : RegisteredAssetBase<RegisteredParticleEmitter>, IPausable
	{
		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particleSys;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xEC5488", Offset = "0xEC5488", VA = "0xEC5488")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xEC5504", Offset = "0xEC5504", VA = "0xEC5504")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xEC5540", Offset = "0xEC5540", VA = "0xEC5540")]
		public void SetEmittingState(bool targetState)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xEC5568", Offset = "0xEC5568", VA = "0xEC5568", Slot = "9")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xEC5584", Offset = "0xEC5584", VA = "0xEC5584", Slot = "10")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xEC55A0", Offset = "0xEC55A0", VA = "0xEC55A0")]
		public RegisteredParticleEmitter()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	public class RegisteredSoundEmitter : RegisteredAssetBase<RegisteredSoundEmitter>
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25520", Offset = "0xB25520")]
		private StudioEventEmitter _studioSoundEmitter;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2556C", Offset = "0xB2556C")]
		private bool _autoPlayWhileEnabled;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SoundService _soundService;

		[Token(Token = "0x1700020F")]
		public StudioEventEmitter SoundEmitter
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0xEC5AE8", Offset = "0xEC5AE8", VA = "0xEC5AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xEC5AF0", Offset = "0xEC5AF0", VA = "0xEC5AF0")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xEC5CA4", Offset = "0xEC5CA4", VA = "0xEC5CA4")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xEC5D7C", Offset = "0xEC5D7C", VA = "0xEC5D7C")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xEC5E4C", Offset = "0xEC5E4C", VA = "0xEC5E4C")]
		public RegisteredSoundEmitter()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class RegisteredTransform : RegisteredAssetBase<RegisteredTransform>
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _transform;

		[Token(Token = "0x17000210")]
		public Transform self
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xEC6164", Offset = "0xEC6164", VA = "0xEC6164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xEC6204", Offset = "0xEC6204", VA = "0xEC6204")]
		public RegisteredTransform()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class RegisteredTweenable : RegisteredAssetBase<RegisteredTweenable>
	{
		[Token(Token = "0x6001744")]
		[Address(RVA = "0xEC646C", Offset = "0xEC646C", VA = "0xEC646C")]
		public RegisteredTweenable()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	public class ParameterAnimationRelay : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C0")]
		public class UnityFloatEvent : UnityEvent<float>
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xD9E7C4", Offset = "0xD9E7C4", VA = "0xD9E7C4")]
			public UnityFloatEvent()
			{
			}
		}

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityFloatEvent eventFloat;

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x15CC760", Offset = "0x15CC760", VA = "0x15CC760")]
		public void Apply(float controlValue)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x15CC7C4", Offset = "0x15CC7C4", VA = "0x15CC7C4")]
		public ParameterAnimationRelay()
		{
		}
	}
	[Token(Token = "0x20007C1")]
	public class ParameterAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C2")]
		public class AnimateableParameter
		{
			[Token(Token = "0x20007C3")]
			public enum ParameterType
			{
				[Token(Token = "0x4001594")]
				ParameterAnimator = 2,
				[Token(Token = "0x4001595")]
				ParameterRelay = 8,
				[Token(Token = "0x4001596")]
				MaterialPropertyFloat = 0,
				[Token(Token = "0x4001597")]
				MaterialPropertyColor = 9,
				[Token(Token = "0x4001598")]
				LightIntensity = 1,
				[Token(Token = "0x4001599")]
				FogColor = 5,
				[Token(Token = "0x400159A")]
				Skybox = 6,
				[Token(Token = "0x400159B")]
				EnvironmentIntensity = 7,
				[Token(Token = "0x400159C")]
				PsysDirection = 3,
				[Token(Token = "0x400159D")]
				PsysMoveSpeed = 4,
				[Token(Token = "0x400159E")]
				PsysEmissionRate = 10,
				[Token(Token = "0x400159F")]
				SphericalHarmonics = 11,
				[Token(Token = "0x40015A0")]
				OverrideAmbientIntensity = 12
			}

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParameterType type;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimateableParameter_LightIntensity lightIntensityConfig;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimateableParameter_ParameterAnimator paramAnimatorConfig;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimateableParameter_MaterialPropertyFloat materialConfig;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimateableParameter_MaterialPropertyColor materialColorConfig;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimateableParameter_PsysDirection psysDirConfig;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimateableParameter_PsysSpeed psysSpeedConfig;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AnimateableParameter_FogColor fogColorConfig;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public AnimateableParameter_Skybox skyboxConfig;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public AnimateableParameter_EnvironmentIntensity envIntensityConfig;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AnimateableParameter_ParameterAnimationRelay relayConfig;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public AnimateableParameter_PsysEmissionRate psysRateConfig;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public AnimateableParameter_SphericalHarmonics harmonicsConfig;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public AnimateableParameter_OverrideAmbientIntensity overrideAmbientIntensityConfig;

			[Token(Token = "0x600174C")]
			[Address(RVA = "0xD9E810", Offset = "0xD9E810", VA = "0xD9E810")]
			private IAnimateableParameterConfig GetConfig(ParameterType paramType)
			{
				return null;
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0xD9E8A0", Offset = "0xD9E8A0", VA = "0xD9E8A0")]
			public void Apply(float t)
			{
			}

			[Token(Token = "0x600174E")]
			[Address(RVA = "0xD9E974", Offset = "0xD9E974", VA = "0xD9E974")]
			public AnimateableParameter()
			{
			}
		}

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AnimateableParameter> parameters;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB255B8", Offset = "0xB255B8")]
		public float controlValue;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isAnimating;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float animationDirection;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float animationDuration;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animationProgress;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isCurrentlyUpdating;

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x15CC834", Offset = "0x15CC834", VA = "0x15CC834")]
		private bool ValidateControlValue(float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x15CC97C", Offset = "0x15CC97C", VA = "0x15CC97C")]
		public void UpdateControlValue(float newValue)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x15CC84C", Offset = "0x15CC84C", VA = "0x15CC84C")]
		public void UpdateControlValue()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x15CC9B4", Offset = "0x15CC9B4", VA = "0x15CC9B4")]
		public ParameterAnimator()
		{
		}
	}
	[Token(Token = "0x20007C4")]
	public interface IAnimateableParameterConfig
	{
		[Token(Token = "0x600174F")]
		void Apply(float controlValue);
	}
	[Serializable]
	[Token(Token = "0x20007C5")]
	public abstract class AnimateableTypeParameterConversion<Tin, Tout> : IAnimateableParameterConfig
	{
		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Tin start;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Tin end;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useCurve;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve curve;

		[Token(Token = "0x6001750")]
		public void Apply(float controlValue)
		{
		}

		[Token(Token = "0x6001751")]
		protected abstract Tout Blend(Tin start, Tin end, float controlValue);

		[Token(Token = "0x6001752")]
		protected abstract void ApplyParam(Tout paramValue);

		[Token(Token = "0x6001753")]
		protected AnimateableTypeParameterConversion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007C6")]
	public abstract class AnimateableTypeParameter<T> : AnimateableTypeParameterConversion<T, T>
	{
		[Token(Token = "0x6001754")]
		protected AnimateableTypeParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007C7")]
	public abstract class AnimateableFloatParameter : AnimateableTypeParameter<float>
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1030D5C", Offset = "0x1030D5C", VA = "0x1030D5C", Slot = "5")]
		protected override float Blend(float start, float end, float controlValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x1030D64", Offset = "0x1030D64", VA = "0x1030D64")]
		protected AnimateableFloatParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007C8")]
	public abstract class AnimateableColorParameter : AnimateableTypeParameter<Color>
	{
		[Token(Token = "0x6001757")]
		[Address(RVA = "0x1030D00", Offset = "0x1030D00", VA = "0x1030D00", Slot = "5")]
		protected override Color Blend(Color start, Color end, float controlValue)
		{
			return default(Color);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1030D10", Offset = "0x1030D10", VA = "0x1030D10")]
		protected AnimateableColorParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007C9")]
	public class AnimateableParameter_LightIntensity : AnimateableFloatParameter
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light light;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool onOffByIntensity;

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1030DC8", Offset = "0x1030DC8", VA = "0x1030DC8", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1030E8C", Offset = "0x1030E8C", VA = "0x1030E8C")]
		public AnimateableParameter_LightIntensity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007CA")]
	public class AnimateableParameter_ParameterAnimator : AnimateableFloatParameter
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParameterAnimator animator;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1031168", Offset = "0x1031168", VA = "0x1031168", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x103120C", Offset = "0x103120C", VA = "0x103120C")]
		public AnimateableParameter_ParameterAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007CB")]
	public class AnimateableParameter_PsysDirection : AnimateableFloatParameter
	{
		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1031210", Offset = "0x1031210", VA = "0x1031210", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x10313BC", Offset = "0x10313BC", VA = "0x10313BC")]
		public AnimateableParameter_PsysDirection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007CC")]
	public class AnimateableParameter_PsysSpeed : AnimateableFloatParameter
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1031490", Offset = "0x1031490", VA = "0x1031490", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x103155C", Offset = "0x103155C", VA = "0x103155C")]
		public AnimateableParameter_PsysSpeed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007CD")]
	public class AnimateableParameter_PsysEmissionRate : AnimateableFloatParameter
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x10313C0", Offset = "0x10313C0", VA = "0x10313C0", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x103148C", Offset = "0x103148C", VA = "0x103148C")]
		public AnimateableParameter_PsysEmissionRate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007CE")]
	public class AnimateableParameter_MaterialPropertyFloat : AnimateableFloatParameter
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string materialParameter;

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1030F70", Offset = "0x1030F70", VA = "0x1030F70", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1031028", Offset = "0x1031028", VA = "0x1031028")]
		public AnimateableParameter_MaterialPropertyFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007CF")]
	public class AnimateableParameter_MaterialPropertyColor : AnimateableColorParameter
	{
		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string materialParameter;

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1030E90", Offset = "0x1030E90", VA = "0x1030E90", Slot = "6")]
		protected override void ApplyParam(Color paramValue)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1030F6C", Offset = "0x1030F6C", VA = "0x1030F6C")]
		public AnimateableParameter_MaterialPropertyColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007D0")]
	public class AnimateableParameter_FogColor : AnimateableColorParameter
	{
		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1030DBC", Offset = "0x1030DBC", VA = "0x1030DBC", Slot = "6")]
		protected override void ApplyParam(Color paramValue)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1030DC4", Offset = "0x1030DC4", VA = "0x1030DC4")]
		public AnimateableParameter_FogColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007D1")]
	public class AnimateableParameter_Skybox : IAnimateableParameterConfig
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material skyboxTarget;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material start;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material end;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool updateGI;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1031560", Offset = "0x1031560", VA = "0x1031560", Slot = "4")]
		public void Apply(float controlValue)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x10316B4", Offset = "0x10316B4", VA = "0x10316B4")]
		private void FadeColor(string name, float controlValue)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1031778", Offset = "0x1031778", VA = "0x1031778")]
		private void FadeValue(string name, float controlValue)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1031800", Offset = "0x1031800", VA = "0x1031800")]
		public AnimateableParameter_Skybox()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007D2")]
	public class AnimateableParameter_EnvironmentIntensity : AnimateableFloatParameter
	{
		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1030DB0", Offset = "0x1030DB0", VA = "0x1030DB0", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x1030DB8", Offset = "0x1030DB8", VA = "0x1030DB8")]
		public AnimateableParameter_EnvironmentIntensity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007D3")]
	public class AnimateableParameter_ParameterAnimationRelay : AnimateableFloatParameter
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParameterAnimationRelay relay;

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10310C0", Offset = "0x10310C0", VA = "0x10310C0", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1031164", Offset = "0x1031164", VA = "0x1031164")]
		public AnimateableParameter_ParameterAnimationRelay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007D4")]
	public class AnimateableParameter_SphericalHarmonics : AnimateableTypeParameterConversion<SphericalHarmonicsAsset, SphericalHarmonicsL2>
	{
		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SphericalHarmonicsAsset asset;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool doApply;

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1031808", Offset = "0x1031808", VA = "0x1031808", Slot = "6")]
		protected override void ApplyParam(SphericalHarmonicsL2 paramValue)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x10318E0", Offset = "0x10318E0", VA = "0x10318E0", Slot = "5")]
		protected override SphericalHarmonicsL2 Blend(SphericalHarmonicsAsset start, SphericalHarmonicsAsset end, float controlValue)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1031A84", Offset = "0x1031A84", VA = "0x1031A84")]
		public AnimateableParameter_SphericalHarmonics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007D5")]
	public class AnimateableParameter_OverrideAmbientIntensity : AnimateableFloatParameter
	{
		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PerCameraRenderSettings overrideSettings;

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x103102C", Offset = "0x103102C", VA = "0x103102C", Slot = "6")]
		protected override void ApplyParam(float paramValue)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x10310BC", Offset = "0x10310BC", VA = "0x10310BC")]
		public AnimateableParameter_OverrideAmbientIntensity()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1BBB0", Offset = "0xB1BBB0")]
	public class PlayerCameraConfig : ScriptableObject
	{
		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float cameraSpeedMouse;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float cameraSpeedTouch;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float cameraSpeedGamepad;

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x278124C", Offset = "0x278124C", VA = "0x278124C")]
		public PlayerCameraConfig()
		{
		}
	}
	[Token(Token = "0x20007D7")]
	public class PlayerCameraController : MonoBehaviour
	{
		[Token(Token = "0x20007D8")]
		public enum TurnDirection
		{
			[Token(Token = "0x40015E0")]
			Auto,
			[Token(Token = "0x40015E1")]
			Left_Turn,
			[Token(Token = "0x40015E2")]
			Right_Turn
		}

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25600", Offset = "0xB25600")]
		private RegisteredCamera registeredPlayerCamera;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2564C", Offset = "0xB2564C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2564C", Offset = "0xB2564C")]
		private float deadZoneX;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB256B0", Offset = "0xB256B0")]
		[SerializeField]
		private float deadZoneY;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB256F0", Offset = "0xB256F0")]
		private float sensitivityX;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB25734", Offset = "0xB25734")]
		[SerializeField]
		private float sensitivityY;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB25778", Offset = "0xB25778")]
		[SerializeField]
		private float smoothnessX;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB257B8", Offset = "0xB257B8")]
		private float smoothnessY;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB257F8", Offset = "0xB257F8")]
		private float clampRight;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float clampLeft;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float clampUp;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float clampDown;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25874", Offset = "0xB25874")]
		public bool checkMouseLock;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputService _inputService;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SettingsService _settingsService;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _cameraTransform;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _smoothedCursorPosition;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 _cursorPosition;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _onHold;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Action _onFinishedForcingCallback;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _forcingRotation;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _forcedRotationTime;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _forcedRotationTimer;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion _fromRotation;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion _midRotation;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _toRotation;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _forcingMovement;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _forcedMovementTime;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _forcedMovementTimer;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform _fromLocalTransform;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform _toLocalTransform;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 _fromPosition;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 _toPosition;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 _originalLocalPosition;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion _originalLocalRotation;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public UnityEvent onStoppedForcingRotation;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public UnityEvent onStoppedForcingMovement;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB258E0", Offset = "0xB258E0")]
		private Vector2 <CurrentRotation>k__BackingField;

		[Token(Token = "0x17000211")]
		public Vector2 CurrentRotation
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x2781264", Offset = "0x2781264", VA = "0x2781264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31020", Offset = "0xB31020")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x2781270", Offset = "0x2781270", VA = "0x2781270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31030", Offset = "0xB31030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000212")]
		private float RotationTimeProgress
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x278127C", Offset = "0x278127C", VA = "0x278127C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000213")]
		private float MovementTimeProgress
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x278129C", Offset = "0x278129C", VA = "0x278129C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000214")]
		private float CameraSpeed
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x27812BC", Offset = "0x27812BC", VA = "0x27812BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x2781344", Offset = "0x2781344", VA = "0x2781344")]
		private void Awake()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x27815D4", Offset = "0x27815D4", VA = "0x27815D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x2781648", Offset = "0x2781648", VA = "0x2781648")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x27817D0", Offset = "0x27817D0", VA = "0x27817D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x2781958", Offset = "0x2781958", VA = "0x2781958")]
		public Vector2 GetSmoothedInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x2781C28", Offset = "0x2781C28", VA = "0x2781C28")]
		public void StartForcedRotation(Transform objectTransformToLookAt, float rotationTime, Action onFinishedCallback, TurnDirection direction)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x2782094", Offset = "0x2782094", VA = "0x2782094")]
		public void StartForcedTransformation(Transform targetTransform, float transformationTime, Action onFinishedCallback, TurnDirection direction)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x2782240", Offset = "0x2782240", VA = "0x2782240")]
		public void StartReturningToOriginalPosition(float transformationTime, Action onFinishedCallback, TurnDirection direction)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x27822F0", Offset = "0x27822F0", VA = "0x27822F0")]
		public void OnFinishedRotation()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x278246C", Offset = "0x278246C", VA = "0x278246C")]
		public void OnFinishedMovement()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x278244C", Offset = "0x278244C", VA = "0x278244C")]
		public void SetPlayerControl(bool value)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x2782524", Offset = "0x2782524", VA = "0x2782524")]
		public void SetClampValues(Vector2 xAxis, Vector2 yAxis)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x2782530", Offset = "0x2782530", VA = "0x2782530")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x27827C0", Offset = "0x27827C0", VA = "0x27827C0")]
		private Quaternion GetAngleAxisRotation(Vector2 rotationAngles)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x2782338", Offset = "0x2782338", VA = "0x2782338")]
		private void StopForcedRotation()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x27824B4", Offset = "0x27824B4", VA = "0x27824B4")]
		private void StopForcedTransformation()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x2782904", Offset = "0x2782904", VA = "0x2782904")]
		private Vector2 ConvertTo180Spectrum(Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x2782978", Offset = "0x2782978", VA = "0x2782978")]
		private float ConvertTo180Spectrum(float value)
		{
			return default(float);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x27829B8", Offset = "0x27829B8", VA = "0x27829B8")]
		private void SetClamping(float clampRight = 90f, float clampLeft = -90f, float clampUp = 60f, float clampDown = -70f)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x27829C4", Offset = "0x27829C4", VA = "0x27829C4")]
		private void ResetClamping()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x278245C", Offset = "0x278245C", VA = "0x278245C")]
		private void CallandClearCallback()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x2781D4C", Offset = "0x2781D4C", VA = "0x2781D4C")]
		private Quaternion GetTargetRotation(Transform objectTransformToLookAt)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x27829D4", Offset = "0x27829D4", VA = "0x27829D4")]
		private bool MustNotBeNull(RegisteredCamera registeredCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x2781E90", Offset = "0x2781E90", VA = "0x2781E90")]
		private void CalculateMidRotation(TurnDirection direction = TurnDirection.Auto)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x278286C", Offset = "0x278286C", VA = "0x278286C")]
		private void UpdateRotationSlerp(float slerpTime)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x2782A3C", Offset = "0x2782A3C", VA = "0x2782A3C")]
		public PlayerCameraController()
		{
		}
	}
	[Token(Token = "0x20007D9")]
	public class AssembleMagicCameraPuzzleSystem3D : RegisteredPuzzleSystem
	{
		[Token(Token = "0x20007DA")]
		public enum CubeSide
		{
			[Token(Token = "0x40015F7")]
			front,
			[Token(Token = "0x40015F8")]
			top,
			[Token(Token = "0x40015F9")]
			back,
			[Token(Token = "0x40015FA")]
			left,
			[Token(Token = "0x40015FB")]
			bottom,
			[Token(Token = "0x40015FC")]
			right
		}

		[Token(Token = "0x20007DB")]
		public enum PuzzleType
		{
			[Token(Token = "0x40015FE")]
			onlyCorrectPlace,
			[Token(Token = "0x40015FF")]
			allObjectsInAllPlaces
		}

		[Token(Token = "0x20007DC")]
		public enum SelectionType
		{
			[Token(Token = "0x4001601")]
			Direct,
			[Token(Token = "0x4001602")]
			GhostObjects
		}

		[Serializable]
		[Token(Token = "0x20007DD")]
		public class Side
		{
			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CubeSide side;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isTaken;

			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x275BD98", Offset = "0x275BD98", VA = "0x275BD98")]
			public Side(CubeSide side, bool taken)
			{
			}
		}

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB258F0", Offset = "0xB258F0")]
		public MagicCamera magicCamera;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public ObjectMovementSettings movementSettings;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public PuzzleType puzzleType;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2595C", Offset = "0xB2595C")]
		[SerializeField]
		[EventRef]
		public string cameraShakeSoundEvent;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[EventRef]
		public string puzzleSolvedSoundEvent;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[EventRef]
		[SerializeField]
		public string cameraRotateSoundEvent;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[EventRef]
		public string PipeAttachedSoundEvent;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[EventRef]
		[SerializeField]
		public string TapeAttachedSoundEvent;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[EventRef]
		[SerializeField]
		public string KaleidoscopAttachedSoundEvent;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[EventRef]
		public string KeyAttachedSoundEvent;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public string _soundEmitter;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25B18", Offset = "0xB25B18")]
		public GameObject carRig;

		[NonSerialized]
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SelectionType selectionType;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _originalCarPosition;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion _originalCarRotation;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SoundService _soundService;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InputService _inputService;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MagicCameraPart[] _cameraParts;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Side> _sides;

		[Token(Token = "0x17000215")]
		public Side ActiveSide
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x1032794", Offset = "0x1032794", VA = "0x1032794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public Animator CameraShakeAnimator
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x1032808", Offset = "0x1032808", VA = "0x1032808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1032824", Offset = "0x1032824", VA = "0x1032824", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1032C3C", Offset = "0x1032C3C", VA = "0x1032C3C", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1032C40", Offset = "0x1032C40", VA = "0x1032C40")]
		public Side GetSide(CubeSide? cubeSide)
		{
			return null;
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1032DA0", Offset = "0x1032DA0", VA = "0x1032DA0")]
		public bool PuzzleSolved()
		{
			return default(bool);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1032E50", Offset = "0x1032E50", VA = "0x1032E50")]
		public void SetAllObjectsInteractable(bool value = true)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1032F1C", Offset = "0x1032F1C", VA = "0x1032F1C")]
		public void SelGloveBoxInteractables([Optional] MagicCameraPart currentPart)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x10330E8", Offset = "0x10330E8", VA = "0x10330E8")]
		private void OnSolved()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1032B90", Offset = "0x1032B90", VA = "0x1032B90")]
		private void TeleportCar(Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x10332B4", Offset = "0x10332B4", VA = "0x10332B4")]
		public AssembleMagicCameraPuzzleSystem3D()
		{
		}
	}
	[Token(Token = "0x20007DE")]
	public class HoloObject : MagicCameraObject
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public MagicCameraPart boundCameraPart;

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x127579C", Offset = "0x127579C", VA = "0x127579C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x127583C", Offset = "0x127583C", VA = "0x127583C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1275880", Offset = "0x1275880", VA = "0x1275880")]
		private void OnHoloObjectClicked()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x12758CC", Offset = "0x12758CC", VA = "0x12758CC")]
		public HoloObject()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x12758D4", Offset = "0x12758D4", VA = "0x12758D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31040", Offset = "0xB31040")]
		private void <Awake>b__1_0()
		{
		}
	}
	[Token(Token = "0x20007DF")]
	public class MagicCamera : MagicCameraObject
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Animator rotationAnimator;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public Animator globalAnimator;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AssembleMagicCameraPuzzleSystem3D.CubeSide _currentPosition;

		[Token(Token = "0x17000217")]
		public AssembleMagicCameraPuzzleSystem3D.CubeSide currentPosition
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x157D0B4", Offset = "0x157D0B4", VA = "0x157D0B4")]
			get
			{
				return default(AssembleMagicCameraPuzzleSystem3D.CubeSide);
			}
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x157D0BC", Offset = "0x157D0BC", VA = "0x157D0BC")]
			set
			{
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x157D0CC", Offset = "0x157D0CC", VA = "0x157D0CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x157D420", Offset = "0x157D420", VA = "0x157D420")]
		public void FloatInFrontOfFace()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x157D518", Offset = "0x157D518", VA = "0x157D518")]
		private void RotateCamera()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x157D6C0", Offset = "0x157D6C0", VA = "0x157D6C0")]
		private void SetAllObjectsInteractable()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x157D6E0", Offset = "0x157D6E0", VA = "0x157D6E0")]
		public MagicCamera()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x157D6F0", Offset = "0x157D6F0", VA = "0x157D6F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31050", Offset = "0xB31050")]
		private void <Awake>b__6_0()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x157D6F4", Offset = "0x157D6F4", VA = "0x157D6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31060", Offset = "0xB31060")]
		private void <FloatInFrontOfFace>b__7_0()
		{
		}
	}
	[Token(Token = "0x20007E0")]
	public class MagicCameraObject : KALASelectable, IKALAHighlightable
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public AssembleMagicCameraPuzzleSystem3D puzzleSystem;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public HighlightEffect outlineHighlight;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public ObjectMovementHandler objectMovementHandler;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected SoundService _soundService;

		[Token(Token = "0x17000218")]
		public HighlightEffect OutlineHighlight
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x157D754", Offset = "0x157D754", VA = "0x157D754", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x157D168", Offset = "0x157D168", VA = "0x157D168")]
		protected void Initialize()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x157D75C", Offset = "0x157D75C", VA = "0x157D75C")]
		private void OnSelected()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x157D7C8", Offset = "0x157D7C8", VA = "0x157D7C8")]
		private void OnDeselected()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x157D6E8", Offset = "0x157D6E8", VA = "0x157D6E8")]
		public MagicCameraObject()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x157D834", Offset = "0x157D834", VA = "0x157D834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31070", Offset = "0xB31070")]
		private void <Initialize>b__6_0()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x157D838", Offset = "0x157D838", VA = "0x157D838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31080", Offset = "0xB31080")]
		private void <Initialize>b__6_1()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x157D83C", Offset = "0x157D83C", VA = "0x157D83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31090", Offset = "0xB31090")]
		private void <Initialize>b__6_2()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x157D840", Offset = "0x157D840", VA = "0x157D840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB310A0", Offset = "0xB310A0")]
		private void <Initialize>b__6_3()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public class MagicCameraPart : MagicCameraObject
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string objectName;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public HoloObject holoObject;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public bool isOnGloveBox;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public RegisteredActivateable activateable;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[EventRef]
		[SerializeField]
		public string onAttachedSoundEvent;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[EventRef]
		public string onDetachedSoundEvent;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AssembleMagicCameraPuzzleSystem3D.CubeSide? currentSide;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AssembleMagicCameraPuzzleSystem3D.CubeSide correctSide;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private MeshRenderer activeStickyTape;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform originalParent;

		[Token(Token = "0x17000219")]
		private ObjectMovementSettings movementSettings
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x157D844", Offset = "0x157D844", VA = "0x157D844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x157D860", Offset = "0x157D860", VA = "0x157D860")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x157D980", Offset = "0x157D980", VA = "0x157D980")]
		public void MoveObject(bool isDetaching = false)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x157DC24", Offset = "0x157DC24", VA = "0x157DC24")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x157DDD4", Offset = "0x157DDD4", VA = "0x157DDD4")]
		private void ShakeCamera()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x157DB58", Offset = "0x157DB58", VA = "0x157DB58")]
		private Transform GetTargetTransform()
		{
			return null;
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x157DEC0", Offset = "0x157DEC0", VA = "0x157DEC0")]
		private void OnMovementEnded()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x157E130", Offset = "0x157E130", VA = "0x157E130")]
		private void InstaPlaceInTheRightSpot()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x157E250", Offset = "0x157E250", VA = "0x157E250")]
		private void SetAllObjectsInteractable()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x157E270", Offset = "0x157E270", VA = "0x157E270")]
		public MagicCameraPart()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x157E278", Offset = "0x157E278", VA = "0x157E278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB310B0", Offset = "0xB310B0")]
		private void <Awake>b__12_0()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x157E27C", Offset = "0x157E27C", VA = "0x157E27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB310C0", Offset = "0xB310C0")]
		private void <Awake>b__12_1()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x157E280", Offset = "0x157E280", VA = "0x157E280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB310D0", Offset = "0xB310D0")]
		private void <MoveObject>b__13_0()
		{
		}
	}
	[Token(Token = "0x20007E2")]
	public class CutscenePuzzleController : RegisteredPuzzleSystem, IPausable
	{
		[Serializable]
		[Token(Token = "0x20007E3")]
		public class FMODEventHandler
		{
			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventName;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string emitter;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundService.EventMode mode;

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x275FBDC", Offset = "0x275FBDC", VA = "0x275FBDC")]
			public void Execute(SoundService service)
			{
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x275FCA8", Offset = "0x275FCA8", VA = "0x275FCA8")]
			public FMODEventHandler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007E4")]
		public class CutscenePart
		{
			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string cutsceneName;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TimelineAsset timeline;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float additionalDelay;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sprite finalStillImage;

			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RectTransform additionalStillImageElements;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB25C64", Offset = "0xB25C64")]
			public bool autoStartNextPart;

			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject firstSelected;

			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<FMODEventHandler> fmodHandlers;

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x275FBD4", Offset = "0x275FBD4", VA = "0x275FBD4")]
			public CutscenePart()
			{
			}
		}

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<CutscenePart> cutsceneParts;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool autoPlayFirstPart;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool lastCutsceneSolvesPuzzle;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RectTransform overlay;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image stillImage;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RegisteredSoundEmitter voEmitter;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RegisteredSoundEmitter soundEmitter;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VideoController controller;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentIndex;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CutscenePart currentPart;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool currentlyStartingNextCutscene;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CutscenePart lastPart;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VideoService _videoService;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RegisteredDirector director;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isPuzzleRunning;

		[Token(Token = "0x1700021A")]
		private bool CanPauseResume
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x1123AC0", Offset = "0x1123AC0", VA = "0x1123AC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x11238BC", Offset = "0x11238BC", VA = "0x11238BC", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1123C14", Offset = "0x1123C14", VA = "0x1123C14", Slot = "14")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1123CB4", Offset = "0x1123CB4", VA = "0x1123CB4", Slot = "15")]
		public void OnResume()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1123D54", Offset = "0x1123D54", VA = "0x1123D54", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1123D58", Offset = "0x1123D58", VA = "0x1123D58", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1123AA0", Offset = "0x1123AA0", VA = "0x1123AA0")]
		public void NextCutscene()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1123DDC", Offset = "0x1123DDC", VA = "0x1123DDC")]
		public void StartCutscene(int numCutscene)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x11243A4", Offset = "0x11243A4", VA = "0x11243A4")]
		private void CleanupPart()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1124340", Offset = "0x1124340", VA = "0x1124340")]
		private void OnFinishedVideo()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x11244B0", Offset = "0x11244B0", VA = "0x11244B0")]
		private void ShowPartEnd()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x11247D8", Offset = "0x11247D8", VA = "0x11247D8")]
		public CutscenePuzzleController()
		{
		}
	}
	[Token(Token = "0x20007E5")]
	public class CutscenePuzzlePartController : MonoBehaviour
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string triggerName;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitForAnim;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CutscenePuzzleController controller;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timePassed;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x11247E8", Offset = "0x11247E8", VA = "0x11247E8")]
		public void Trigger()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1124918", Offset = "0x1124918", VA = "0x1124918")]
		private void WaitForAnimToFinish()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1124A98", Offset = "0x1124A98", VA = "0x1124A98")]
		public CutscenePuzzlePartController()
		{
		}
	}
	[Token(Token = "0x20007E6")]
	public class FadeLeahDiner : MonoBehaviour
	{
		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Material> LeahMaterials;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xFC5F1C", Offset = "0xFC5F1C", VA = "0xFC5F1C")]
		public void SetVisibilityState(int state)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xFC6114", Offset = "0xFC6114", VA = "0xFC6114")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xFC627C", Offset = "0xFC627C", VA = "0xFC627C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xFC63F0", Offset = "0xFC63F0", VA = "0xFC63F0")]
		public FadeLeahDiner()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	public class FindAsperStreetPuzzleController : RegisteredPuzzleSystem
	{
		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossRoadsSqrRadius;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> asperAnagrams;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> otherStreetNames;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float slowDownDistance;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int phase;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<AnimationCurve> movementInPhases;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool decisionTaken;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25C9C", Offset = "0xB25C9C")]
		[SerializeField]
		private string guessSoundEmitter;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[EventRef]
		private string guessSoundEvent;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<List<RegisteredInteractable>> streetSignSets;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RegisteredCarController carController;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SoundService soundService;

		[Token(Token = "0x1700021B")]
		private UIInteractableController interactableController
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xFC6B50", Offset = "0xFC6B50", VA = "0xFC6B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xFC6BD8", Offset = "0xFC6BD8", VA = "0xFC6BD8", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xFC6EDC", Offset = "0xFC6EDC", VA = "0xFC6EDC", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xFC6BDC", Offset = "0xFC6BDC", VA = "0xFC6BDC")]
		private void Init()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xFC6EE0", Offset = "0xFC6EE0", VA = "0xFC6EE0")]
		private void DivideSignsIntoSets()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xFC7234", Offset = "0xFC7234", VA = "0xFC7234")]
		private void SetUpStreetSigns()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xFC763C", Offset = "0xFC763C", VA = "0xFC763C")]
		private void OnMarkerReached(string obj)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xFC77FC", Offset = "0xFC77FC", VA = "0xFC77FC")]
		private void CheckIfPlayerChose()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xFC78C0", Offset = "0xFC78C0", VA = "0xFC78C0")]
		public FindAsperStreetPuzzleController()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xFC7994", Offset = "0xFC7994", VA = "0xFC7994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB310E0", Offset = "0xB310E0")]
		private void <Init>b__16_0()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xFC7998", Offset = "0xFC7998", VA = "0xFC7998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB310F0", Offset = "0xB310F0")]
		private void <Init>b__16_1()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xFC7ACC", Offset = "0xFC7ACC", VA = "0xFC7ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31100", Offset = "0xB31100")]
		private void <SetUpStreetSigns>b__18_0()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xFC7B2C", Offset = "0xFC7B2C", VA = "0xFC7B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31110", Offset = "0xB31110")]
		private void <SetUpStreetSigns>b__18_1()
		{
		}
	}
	[Token(Token = "0x20007E8")]
	public class AnimationEventCaller : MonoBehaviour
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UnityEvent animationEvent1;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public UnityEvent animationEvent2;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UnityEvent animationEvent3;

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1031AD8", Offset = "0x1031AD8", VA = "0x1031AD8")]
		public void CallAnimationevent1()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1031AF4", Offset = "0x1031AF4", VA = "0x1031AF4")]
		public void CallAnimationevent2()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1031B10", Offset = "0x1031B10", VA = "0x1031B10")]
		public void CallAnimationevent3()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1031B2C", Offset = "0x1031B2C", VA = "0x1031B2C")]
		public AnimationEventCaller()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	public class FireFlyParticle
	{
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xFC8A60", Offset = "0xFC8A60", VA = "0xFC8A60")]
		public Vector3 MoveToTarget(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xFC8A64", Offset = "0xFC8A64", VA = "0xFC8A64")]
		public FireFlyParticle()
		{
		}
	}
	[Token(Token = "0x20007EA")]
	public class FireFlyPuzzleSystem : RegisteredPuzzleSystem
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onFirefliesArrived;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FireFlySystem fireflySystem;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string targetInteractable;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string targetInteraction;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string carJumpNode;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpeedValue carSpeed;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool dynamicSpeedAdjustment;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FireFlySystem followfireflySystem;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float followDistance;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform followTransform;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RegisteredInteractable interactable;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject magicCameraObject;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animator magicCameraAnimator;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AnimationEventCaller camEventCaller;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject photoInCamera;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject photoInGlovebox;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public RegisteredActivateable photoActivateable;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string sendWhenPhotoTakenFinished;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string sendEventOnPhotoToDashboard;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[EventRef]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25D50", Offset = "0xB25D50")]
		private string _fireflySoundEvent;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private RegisteredSoundEmitter _fireflySoundEmitter;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[EventRef]
		[SerializeField]
		private string _cameraZoomInSoundEvent;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[EventRef]
		[SerializeField]
		private string _cameraTakePhotoSoundEvent;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private RegisteredSoundEmitter _cameraSoundEmitter;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private SoundService _soundService;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RegisteredCarController carController;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool isFinished;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float dotCar;

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xFC8A6C", Offset = "0xFC8A6C", VA = "0xFC8A6C", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xFC91BC", Offset = "0xFC91BC", VA = "0xFC91BC")]
		private void OnSpeedChangeOverTimeEnd()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xFC91C0", Offset = "0xFC91C0", VA = "0xFC91C0", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xFC9424", Offset = "0xFC9424", VA = "0xFC9424")]
		private void OnFirefliesArrived(string obj)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xFC9684", Offset = "0xFC9684", VA = "0xFC9684")]
		public void StartFollow(GameObject obj)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xFC98A0", Offset = "0xFC98A0", VA = "0xFC98A0")]
		private void OnContinue(string obj)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xFC99C8", Offset = "0xFC99C8", VA = "0xFC99C8")]
		private void OnPhotoTaken(string obj)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xFC90DC", Offset = "0xFC90DC", VA = "0xFC90DC")]
		private void StartCamera()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xFC97E0", Offset = "0xFC97E0", VA = "0xFC97E0")]
		private void StopCamera()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xFC9564", Offset = "0xFC9564", VA = "0xFC9564")]
		private void SetInteractableInteraction(bool enabled)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xFC9B84", Offset = "0xFC9B84", VA = "0xFC9B84")]
		private void StartCameraAnimation()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xFC9C70", Offset = "0xFC9C70", VA = "0xFC9C70")]
		private void StopCameraAnimation()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xFC9E14", Offset = "0xFC9E14", VA = "0xFC9E14", Slot = "13")]
		protected override void FastForwardPuzzle()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xFC9ED4", Offset = "0xFC9ED4", VA = "0xFC9ED4")]
		public FireFlyPuzzleSystem()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	public class FireFlySystem : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007EC")]
		public class Target
		{
			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineController controller;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float rotSpeed;

			[Token(Token = "0x6001808")]
			[Address(RVA = "0xF14F3C", Offset = "0xF14F3C", VA = "0xF14F3C")]
			public Target()
			{
			}
		}

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem psys;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25E3C", Offset = "0xB25E3C")]
		public float targetSpeed;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Target> targetList;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float neededLookAtPrecision;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] offsets;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] speeds;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxNumParticles;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float radius;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotateSpeed;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float minSpeed;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxSpeed;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform averagePositionTransform;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float spread;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float spreadTimer;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isRunning;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 averagePosition;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool allTargetsArrivedAtEnd;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xFC9FA4", Offset = "0xFC9FA4", VA = "0xFC9FA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xFCA210", Offset = "0xFCA210", VA = "0xFCA210")]
		public void TakeOver(FireFlySystem other)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xFC9014", Offset = "0xFC9014", VA = "0xFC9014")]
		public void StartSystem()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xFC9B5C", Offset = "0xFC9B5C", VA = "0xFC9B5C")]
		public void StopSystem()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xFC93CC", Offset = "0xFC93CC", VA = "0xFC93CC")]
		public void UpdateSystem(bool dynamicSpeed, float dotCar)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xFCABD4", Offset = "0xFCABD4", VA = "0xFCABD4")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xFCA5FC", Offset = "0xFCA5FC", VA = "0xFCA5FC")]
		private void UpdateParticles(bool dynamicSpeed, float dotCar)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xFCA2B0", Offset = "0xFCA2B0", VA = "0xFCA2B0")]
		private void UpdateSpreadTimer()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xFCA3A4", Offset = "0xFCA3A4", VA = "0xFCA3A4")]
		private void RotateTargets()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xFCA494", Offset = "0xFCA494", VA = "0xFCA494")]
		private void CheckIfAllArrivedAtEnd()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xFCABE0", Offset = "0xFCABE0", VA = "0xFCABE0")]
		public FireFlySystem()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	public class DistanceScaler : MonoBehaviour
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetObject;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxScale;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScale;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxScaleDistance;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 baseScale;

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x1126914", Offset = "0x1126914", VA = "0x1126914")]
		private void Start()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1126950", Offset = "0x1126950", VA = "0x1126950")]
		private void Update()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1126A20", Offset = "0x1126A20", VA = "0x1126A20")]
		public DistanceScaler()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	public class GliderMovement : MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float GlidingSpeed;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 MaximumMovement;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SplineController objectSpawner;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LookatContainer;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float returnTimer;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve accelerationCurve;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationValue;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 xAxisLookClampVector;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 yAxisLookClampVector;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody gliderRigidbody;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float timer;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool allowMovement;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SplineController splineFollower;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InputService inputService;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 cursorPosition;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion lastRotation;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform localtransform;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private HangglidingPuzzle puzzleController;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 lastFramePosition;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public PlayerCameraController cameraController;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SettingsService _settingsService;

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xFD33DC", Offset = "0xFD33DC", VA = "0xFD33DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xFD3614", Offset = "0xFD3614", VA = "0xFD3614")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xFD3778", Offset = "0xFD3778", VA = "0xFD3778")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xFD38DC", Offset = "0xFD38DC", VA = "0xFD38DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xFD3CB8", Offset = "0xFD3CB8", VA = "0xFD3CB8")]
		public void InitGliding()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xFD3DB8", Offset = "0xFD3DB8", VA = "0xFD3DB8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xFD4208", Offset = "0xFD4208", VA = "0xFD4208")]
		public GliderMovement()
		{
		}
	}
	[Token(Token = "0x20007EF")]
	public class HangglidingPuzzle : RegisteredPuzzleSystem
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25E74", Offset = "0xB25E74")]
		[SerializeField]
		public List<GameObject> memoryObjects;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public List<float> waittimeBetweenStages;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float SpawnObjectTimeout;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Transform ObjectSpawner;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[EventRef]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25EF0", Offset = "0xB25EF0")]
		public string _spawnObjectSoundEvent;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[EventRef]
		[SerializeField]
		public string _collectObjectSoundEvent;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SoundService _soundService;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _stage;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _missTimer;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _narrativeTimer;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _playingState;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject _currentMemoryObject;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 _spawnRadius;

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xFDA3C8", Offset = "0xFDA3C8", VA = "0xFDA3C8", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xFDA794", Offset = "0xFDA794", VA = "0xFDA794", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xFDA888", Offset = "0xFDA888", VA = "0xFDA888", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xFDA4EC", Offset = "0xFDA4EC", VA = "0xFDA4EC")]
		public void SpawnObject()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xFD3ACC", Offset = "0xFD3ACC", VA = "0xFD3ACC")]
		public void AdvanceStage()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xFDA890", Offset = "0xFDA890", VA = "0xFDA890")]
		public HangglidingPuzzle()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	public class MoveTowards : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowMoveTowards;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float tvosSpeed;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float otherPlatformsSpeed;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float speed;

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1335E78", Offset = "0x1335E78", VA = "0x1335E78")]
		private void Start()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1335FD4", Offset = "0x1335FD4", VA = "0x1335FD4")]
		public void increaseDrag(float multiplicator = 2f)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x1335FE4", Offset = "0x1335FE4", VA = "0x1335FE4")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1336158", Offset = "0x1336158", VA = "0x1336158")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x13362BC", Offset = "0x13362BC", VA = "0x13362BC")]
		public MoveTowards()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	public class MustardBottle : MonoBehaviour
	{
		[Token(Token = "0x20007F2")]
		public enum MustardPlace
		{
			[Token(Token = "0x40016A9")]
			left,
			[Token(Token = "0x40016AA")]
			middle,
			[Token(Token = "0x40016AB")]
			right
		}

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MustardPlace startPlace;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public MustardPlace currentPlace;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public bool RightBottle;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public MustardMontePuzzle puzzleMaster;

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1829214", Offset = "0x1829214", VA = "0x1829214")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x18292CC", Offset = "0x18292CC", VA = "0x18292CC")]
		public void Init()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x182923C", Offset = "0x182923C", VA = "0x182923C")]
		public void SetHoloFloat(float value)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x18292D8", Offset = "0x18292D8", VA = "0x18292D8")]
		public MustardBottle()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	public class MustardMontePuzzle : RegisteredPuzzleSystem
	{
		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC10", Offset = "0xB1BC10")]
		private sealed class <IterateNextShuffle>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MustardMontePuzzle <>4__this;

			[Token(Token = "0x1700021C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001835")]
				[Address(RVA = "0xD96AD4", Offset = "0xD96AD4", VA = "0xD96AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001837")]
				[Address(RVA = "0xD96B1C", Offset = "0xD96B1C", VA = "0xD96B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0xD96600", Offset = "0xD96600", VA = "0xD96600")]
			[DebuggerHidden]
			public <IterateNextShuffle>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0xD9662C", Offset = "0xD9662C", VA = "0xD9662C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0xD96630", Offset = "0xD96630", VA = "0xD96630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0xD96ADC", Offset = "0xD96ADC", VA = "0xD96ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC20", Offset = "0xB1BC20")]
		private sealed class <ProceedWithoutSolveEnumerator>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MustardMontePuzzle <>4__this;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183B")]
				[Address(RVA = "0xD96C14", Offset = "0xD96C14", VA = "0xD96C14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183D")]
				[Address(RVA = "0xD96C5C", Offset = "0xD96C5C", VA = "0xD96C5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0xD96B24", Offset = "0xD96B24", VA = "0xD96B24")]
			[DebuggerHidden]
			public <ProceedWithoutSolveEnumerator>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001839")]
			[Address(RVA = "0xD96B50", Offset = "0xD96B50", VA = "0xD96B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0xD96B54", Offset = "0xD96B54", VA = "0xD96B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0xD96C1C", Offset = "0xD96C1C", VA = "0xD96C1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC30", Offset = "0xB1BC30")]
		private sealed class <StartWithDelay>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40016C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MustardMontePuzzle <>4__this;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001841")]
				[Address(RVA = "0xD96EA4", Offset = "0xD96EA4", VA = "0xD96EA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001843")]
				[Address(RVA = "0xD96EEC", Offset = "0xD96EEC", VA = "0xD96EEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0xD96DA4", Offset = "0xD96DA4", VA = "0xD96DA4")]
			[DebuggerHidden]
			public <StartWithDelay>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600183F")]
			[Address(RVA = "0xD96DD0", Offset = "0xD96DD0", VA = "0xD96DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001840")]
			[Address(RVA = "0xD96DD4", Offset = "0xD96DD4", VA = "0xD96DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0xD96EAC", Offset = "0xD96EAC", VA = "0xD96EAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC40", Offset = "0xB1BC40")]
		private sealed class <SolveWithDelay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MustardMontePuzzle <>4__this;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001847")]
				[Address(RVA = "0xD96D54", Offset = "0xD96D54", VA = "0xD96D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001849")]
				[Address(RVA = "0xD96D9C", Offset = "0xD96D9C", VA = "0xD96D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001844")]
			[Address(RVA = "0xD96C64", Offset = "0xD96C64", VA = "0xD96C64")]
			[DebuggerHidden]
			public <SolveWithDelay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001845")]
			[Address(RVA = "0xD96C90", Offset = "0xD96C90", VA = "0xD96C90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001846")]
			[Address(RVA = "0xD96C94", Offset = "0xD96C94", VA = "0xD96C94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001848")]
			[Address(RVA = "0xD96D5C", Offset = "0xD96D5C", VA = "0xD96D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25FC4", Offset = "0xB25FC4")]
		[SerializeField]
		public List<MustardBottle> bottles;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public List<Transform> startTransforms;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public int puzzleIterations;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Animation SetupAnimatedObject;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public float speed;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26050", Offset = "0xB26050")]
		[SerializeField]
		public StudioEventEmitter _fadeSoundEmitter;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public StudioEventEmitter _moveSoundEmitter;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[EventRef]
		public string _fadeToHoloSoundEvent;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[EventRef]
		public string _moveSoundEventFast;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[EventRef]
		public string _moveSoundEventMedium;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[EventRef]
		[SerializeField]
		public string _moveSoundEventSlow;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SoundService _soundService;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int wrongGuesses;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RegisteredInteractable LeftCoaster;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RegisteredInteractable MiddleCoaster;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RegisteredInteractable RightCoaster;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentIteration;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool FadeFromHolo;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool FadeToHolo;

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x18292E0", Offset = "0x18292E0", VA = "0x18292E0", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x1829670", Offset = "0x1829670", VA = "0x1829670", Slot = "9")]
		public override void ProceedWithoutSolve()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1829678", Offset = "0x1829678", VA = "0x1829678", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1829B08", Offset = "0x1829B08", VA = "0x1829B08", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1829B9C", Offset = "0x1829B9C", VA = "0x1829B9C")]
		public void SwitchBottles()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x182A01C", Offset = "0x182A01C", VA = "0x182A01C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31120", Offset = "0xB31120")]
		private IEnumerator IterateNextShuffle()
		{
			return null;
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1829B34", Offset = "0x1829B34", VA = "0x1829B34")]
		private void SetCoasterState(bool state)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x18298E4", Offset = "0x18298E4", VA = "0x18298E4")]
		private void FromHoloAnimation(float time)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x18296CC", Offset = "0x18296CC", VA = "0x18296CC")]
		private void ToHoloAnimation(float time)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x182A094", Offset = "0x182A094", VA = "0x182A094")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31180", Offset = "0xB31180")]
		private IEnumerator ProceedWithoutSolveEnumerator(float time)
		{
			return null;
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x18295E8", Offset = "0x18295E8", VA = "0x18295E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB311E0", Offset = "0xB311E0")]
		private IEnumerator StartWithDelay(float time)
		{
			return null;
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x182A11C", Offset = "0x182A11C", VA = "0x182A11C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31240", Offset = "0xB31240")]
		private IEnumerator SolveWithDelay(float time)
		{
			return null;
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x182A1A4", Offset = "0x182A1A4", VA = "0x182A1A4")]
		private void WrongAnswer()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x182A370", Offset = "0x182A370", VA = "0x182A370")]
		private void RightAnswer()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1829490", Offset = "0x1829490", VA = "0x1829490")]
		private void ResetPuzzle()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x182A3D4", Offset = "0x182A3D4", VA = "0x182A3D4")]
		public MustardMontePuzzle()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	internal class OutsideInteractionPuzzle : RegisteredPuzzleSystem
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RegisteredCamera outsideCam;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SplineController splineController;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> interactables;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string finishInteraction;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Light lightOnAlongSpline;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimelineAsset timelineBeforeSolve;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject driverContainer;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lightOriginalIntensity;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool atSplinesEnd;

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x15B770C", Offset = "0x15B770C", VA = "0x15B770C", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x15B78E8", Offset = "0x15B78E8", VA = "0x15B78E8")]
		private void OnFinishInteraction(string obj)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x15B7B64", Offset = "0x15B7B64", VA = "0x15B7B64")]
		private void EndPuzzle()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x15B7B70", Offset = "0x15B7B70", VA = "0x15B7B70", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x15B7E08", Offset = "0x15B7E08", VA = "0x15B7E08")]
		public OutsideInteractionPuzzle()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	public class PlaceholderPuzzleSystem : RegisteredPuzzleSystem
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2619C", Offset = "0xB2619C")]
		public string title;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB261D4", Offset = "0xB261D4")]
		public string description;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool autoSolve;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float secondsToSolve;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PuzzlePlaceholderUI _ui;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float timer;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputService inputService;

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x277F034", Offset = "0x277F034", VA = "0x277F034")]
		public void SetUIReference(PuzzlePlaceholderUI uiRef)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x277F03C", Offset = "0x277F03C", VA = "0x277F03C", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x277F35C", Offset = "0x277F35C", VA = "0x277F35C")]
		private void Solve()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x277F3B8", Offset = "0x277F3B8", VA = "0x277F3B8", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x277F558", Offset = "0x277F558", VA = "0x277F558")]
		public PlaceholderPuzzleSystem()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	public class PuzzlePlaceholderUI : MenuOverlayBase
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB261E4", Offset = "0xB261E4")]
		[SerializeField]
		public GameObject content;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public Text txtTitle;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public Text txtDescription;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Text txtTime;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public Button btnSolve;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Action _onSolve;

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x277F2BC", Offset = "0x277F2BC", VA = "0x277F2BC")]
		public void ShowPuzzleUI([Optional] Action onSolve)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x277F394", Offset = "0x277F394", VA = "0x277F394")]
		public void HidePuzzleUI()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x2788A9C", Offset = "0x2788A9C", VA = "0x2788A9C")]
		public void Solve()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x2788AB0", Offset = "0x2788AB0", VA = "0x2788AB0")]
		public PuzzlePlaceholderUI()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	public class PuzzleSystemController : SingletonMono<PuzzleSystemController>
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuzzlePlaceholderUI placeholderUI;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<bool> _puzzleFinishedCallback;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RegisteredPuzzleSystem _puzzle;

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x2788D94", Offset = "0x2788D94", VA = "0x2788D94")]
		public TryOp TryStartPuzzle(string puzzleName, Action<bool> puzzleFinishedCallback)
		{
			return default(TryOp);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x2789034", Offset = "0x2789034", VA = "0x2789034")]
		public void OnPuzzleSolved()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x2789114", Offset = "0x2789114", VA = "0x2789114")]
		public PuzzleSystemController()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	public class Bar : LockedBoxElement, IPhysicsInteractable
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int setNumber;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public GameObject selectionPivotBeforeSlide;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public GameObject selectionPivotAfterSlide;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool puzzleStarted;

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x103B88C", Offset = "0x103B88C", VA = "0x103B88C", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x103B928", Offset = "0x103B928", VA = "0x103B928", Slot = "6")]
		public void OnInteract()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x103B990", Offset = "0x103B990", VA = "0x103B990", Slot = "7")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x103B9C8", Offset = "0x103B9C8", VA = "0x103B9C8", Slot = "8")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x103B9D8", Offset = "0x103B9D8", VA = "0x103B9D8")]
		public Bar()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x103B9E0", Offset = "0x103B9E0", VA = "0x103B9E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB313E0", Offset = "0xB313E0")]
		private void <Initialize>b__5_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FD")]
	public class Drum : LockedBoxElement, IPhysicsInteractable
	{
		[Token(Token = "0x20007FE")]
		public enum Icon
		{
			[Token(Token = "0x4001703")]
			Hangglider,
			[Token(Token = "0x4001704")]
			Restaurant,
			[Token(Token = "0x4001705")]
			Airplane,
			[Token(Token = "0x4001706")]
			LockedBox,
			[Token(Token = "0x4001707")]
			Silo,
			[Token(Token = "0x4001708")]
			Ambulance,
			[Token(Token = "0x4001709")]
			SmashedCar,
			[Token(Token = "0x400170A")]
			Letter
		}

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string objectName;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Icon currentIcon;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Icon correctIcon;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _current;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public int correct;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int rotationDirection;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float rotationAngle;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion fromRotation;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion toRotation;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float rotationTime;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float rotationTimer;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isRotating;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform parent;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int clicksInaRow;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float completedRotation;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float targetManyEyesRotation;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int timesRotated;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private List<GameObject> normalSymbols;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private List<GameObject> bluredSybmols;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private List<GameObject> normalEyes;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private List<GameObject> bluredEyes;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool puzzleStarted;

		[Token(Token = "0x17000224")]
		[HideInInspector]
		public int current
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0x1128F80", Offset = "0x1128F80", VA = "0x1128F80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001862")]
			[Address(RVA = "0x1128F88", Offset = "0x1128F88", VA = "0x1128F88")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		private float rotationProgress
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x1128FC0", Offset = "0x1128FC0", VA = "0x1128FC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1128FCC", Offset = "0x1128FCC", VA = "0x1128FCC", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x11293C0", Offset = "0x11293C0", VA = "0x11293C0")]
		public void StartRotation()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1129540", Offset = "0x1129540", VA = "0x1129540")]
		public void UpdateRotation()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x112966C", Offset = "0x112966C", VA = "0x112966C")]
		public void OnStopRotation()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1129700", Offset = "0x1129700", VA = "0x1129700")]
		public void OnDrumClicked()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x11297C4", Offset = "0x11297C4", VA = "0x11297C4")]
		private void HighlightAndPlaySound()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1129828", Offset = "0x1129828", VA = "0x1129828")]
		private void OnDrumAudioFinished(string obj)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1129838", Offset = "0x1129838", VA = "0x1129838")]
		public void StartTheManyEyesRotation()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1129914", Offset = "0x1129914", VA = "0x1129914")]
		private void ManyEyesRotation()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1129BFC", Offset = "0x1129BFC", VA = "0x1129BFC", Slot = "6")]
		public void OnInteract()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1129C28", Offset = "0x1129C28", VA = "0x1129C28", Slot = "7")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1129C60", Offset = "0x1129C60", VA = "0x1129C60", Slot = "8")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1129C70", Offset = "0x1129C70", VA = "0x1129C70")]
		public Drum()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1129C80", Offset = "0x1129C80", VA = "0x1129C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB313F0", Offset = "0xB313F0")]
		private void <Initialize>b__28_0()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1129ECC", Offset = "0x1129ECC", VA = "0x1129ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31400", Offset = "0xB31400")]
		private void <Initialize>b__28_1()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1129ED0", Offset = "0x1129ED0", VA = "0x1129ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31410", Offset = "0xB31410")]
		private void <StartTheManyEyesRotation>b__35_0()
		{
		}
	}
	[Token(Token = "0x20007FF")]
	public abstract class LockedBoxElement : KALASelectable, IKALAHighlightable
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HighlightEffect outlineHighlight;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HighlightEffect glowHighlight;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected OpenBoxPuzzleSystemV2 puzzleSystem;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public StudioEventEmitter soundEmitter;

		[Token(Token = "0x17000226")]
		public HighlightEffect OutlineHighlight
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0xEB6A50", Offset = "0xEB6A50", VA = "0xEB6A50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001875")]
		public abstract void Initialize();

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xEB6A58", Offset = "0xEB6A58", VA = "0xEB6A58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xEB6C94", Offset = "0xEB6C94", VA = "0xEB6C94")]
		private void OnSelected()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xEB6D00", Offset = "0xEB6D00", VA = "0xEB6D00")]
		private void OnDeselected()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xEB6D6C", Offset = "0xEB6D6C", VA = "0xEB6D6C")]
		protected LockedBoxElement()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xEB6D70", Offset = "0xEB6D70", VA = "0xEB6D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31420", Offset = "0xB31420")]
		private void <Awake>b__7_0()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xEB6D74", Offset = "0xEB6D74", VA = "0xEB6D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31430", Offset = "0xB31430")]
		private void <Awake>b__7_1()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xEB6D78", Offset = "0xEB6D78", VA = "0xEB6D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31440", Offset = "0xB31440")]
		private void <Awake>b__7_2()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xEB6D7C", Offset = "0xEB6D7C", VA = "0xEB6D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31450", Offset = "0xB31450")]
		private void <Awake>b__7_3()
		{
		}
	}
	[Token(Token = "0x2000800")]
	public class OpenBoxPuzzleSystemV2 : RegisteredPuzzleSystem
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26300", Offset = "0xB26300")]
		private List<DrumPair> drumPairs;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sidesProDrum;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float rotationTime;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float rotationAngle;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public UnityEvent onUpdatePuzzle;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject carRig;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public LockedBoxElement lasClickedElement;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2638C", Offset = "0xB2638C")]
		public int numberOfTurns;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float speedMultiplier;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int turnsBeforeBlured;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int turnsBeforeBluredEyes;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int turnsBeforeEyes;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB263C4", Offset = "0xB263C4")]
		public AnimationCurve manyEyeanimationCurve;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB263FC", Offset = "0xB263FC")]
		[SerializeField]
		[EventRef]
		private string _rotateDrumEvent;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[EventRef]
		private string _barSlideOut;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[EventRef]
		[SerializeField]
		private string _barSlideFail;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[EventRef]
		[SerializeField]
		private string _barBlocked;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[EventRef]
		[SerializeField]
		private string _buttonClick;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SoundService _soundService;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputService _inputService;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _lastUnlockedPairIndex;

		[Token(Token = "0x17000227")]
		public string RotateDrumEvent
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0x2778EC4", Offset = "0x2778EC4", VA = "0x2778EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public string BarSlideOut
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x2778ECC", Offset = "0x2778ECC", VA = "0x2778ECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public string BarSlideFail
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x2778ED4", Offset = "0x2778ED4", VA = "0x2778ED4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public string BarBlocked
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x2778EDC", Offset = "0x2778EDC", VA = "0x2778EDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public string ButtonClick
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x2778EE4", Offset = "0x2778EE4", VA = "0x2778EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x2778EEC", Offset = "0x2778EEC", VA = "0x2778EEC", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x27798C4", Offset = "0x27798C4", VA = "0x27798C4", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x2779974", Offset = "0x2779974", VA = "0x2779974", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x2779408", Offset = "0x2779408", VA = "0x2779408")]
		private void Init()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x2779B40", Offset = "0x2779B40", VA = "0x2779B40")]
		private void UnhighlightSet1(string obj)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x2779C14", Offset = "0x2779C14", VA = "0x2779C14")]
		private void UnhighlightSet2(string obj)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x2779C1C", Offset = "0x2779C1C", VA = "0x2779C1C")]
		private void UnhighlightSet3(string obj)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x2779C24", Offset = "0x2779C24", VA = "0x2779C24")]
		private void UnhighlightSet4(string obj)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x2779B48", Offset = "0x2779B48", VA = "0x2779B48")]
		private void UnhighlightSet(int setNumber)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x2779C2C", Offset = "0x2779C2C", VA = "0x2779C2C")]
		public void CheckForSolution()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x2779E50", Offset = "0x2779E50", VA = "0x2779E50")]
		private void OnFirstSlide(int pairIndex)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x277A1F4", Offset = "0x277A1F4", VA = "0x277A1F4")]
		public void TrySlideBar(int pairIndex, Animator animator)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x277AAC8", Offset = "0x277AAC8", VA = "0x277AAC8")]
		private void DisableSelectionAndHideCursor()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x277AB54", Offset = "0x277AB54", VA = "0x277AB54")]
		private void EnableSelectionAndShowCursor()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x277A0F8", Offset = "0x277A0F8", VA = "0x277A0F8")]
		private void DisableSelection()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x277AC3C", Offset = "0x277AC3C", VA = "0x277AC3C")]
		private void EnableSelection(string obj)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x277AD44", Offset = "0x277AD44", VA = "0x277AD44")]
		private void OnZoomOut(string obj)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x277AD48", Offset = "0x277AD48", VA = "0x277AD48")]
		private void OnZoomIn(string obj)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x277AE78", Offset = "0x277AE78", VA = "0x277AE78")]
		private void TeleportCar(Vector3 newPosition, Vector3 newRotation)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x277AF14", Offset = "0x277AF14", VA = "0x277AF14")]
		private void OnEndPuzzle(string obj)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x277A150", Offset = "0x277A150", VA = "0x277A150")]
		public void ResetDrumGlows()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x277AAB0", Offset = "0x277AAB0", VA = "0x277AAB0")]
		public void PlaySound(StudioEventEmitter soundEmitter, string soundEvent)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x277AF20", Offset = "0x277AF20", VA = "0x277AF20")]
		public void SendPuzzleEvent(string eventName)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x277AFB8", Offset = "0x277AFB8", VA = "0x277AFB8")]
		public OpenBoxPuzzleSystemV2()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x277B030", Offset = "0x277B030", VA = "0x277B030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31460", Offset = "0xB31460")]
		private void <Init>b__34_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000801")]
	public class DrumPair
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Drum drum1;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Drum drum2;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bar bar;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool solved;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool unblocked;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool slidOut;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool hasSlidOutBefore;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float timeSinceSolve;

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1129ED4", Offset = "0x1129ED4", VA = "0x1129ED4")]
		public void SetInteractable(bool value)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1129F3C", Offset = "0x1129F3C", VA = "0x1129F3C")]
		public void SetDrumHighlights(bool value)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1129F8C", Offset = "0x1129F8C", VA = "0x1129F8C")]
		public DrumPair()
		{
		}
	}
	[Token(Token = "0x2000802")]
	public interface IKALAHighlightable
	{
		[Token(Token = "0x1700022C")]
		HighlightEffect OutlineHighlight
		{
			[Token(Token = "0x600189F")]
			get;
		}
	}
	[Token(Token = "0x2000803")]
	public class KALAInputManager : MonoBehaviour
	{
		[Token(Token = "0x2000804")]
		public class Vector2FloatEvent : UnityEvent<Vector2, float>
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xF1D864", Offset = "0xF1D864", VA = "0xF1D864")]
			public Vector2FloatEvent()
			{
			}
		}

		[Token(Token = "0x2000805")]
		public enum InputType
		{
			[Token(Token = "0x400173C")]
			mouse,
			[Token(Token = "0x400173D")]
			touch,
			[Token(Token = "0x400173E")]
			gamepad
		}

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector2FloatEvent onNavigationMove;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Camera selectionCamera;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool selectionActive;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float CoolDownTime;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float selectionCone;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputService _inputService;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 lastTouchPosition;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float minimalSqrSwipeDistance;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool currentSwipeRegistered;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 swipeDirection;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float cooldownTimer;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InputType inputType;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static KALAInputManager Instance;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public UnityEvent onSubmit;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public UnityEvent onCancel;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xEAEEF8", Offset = "0xEAEEF8", VA = "0xEAEEF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xEAF01C", Offset = "0xEAF01C", VA = "0xEAF01C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xEAEFD4", Offset = "0xEAEFD4", VA = "0xEAEFD4")]
		private void UpdateInputType()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xEAF544", Offset = "0xEAF544", VA = "0xEAF544")]
		public KALAInputManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000806")]
	public class KALASelectable : MonoBehaviour
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _interactable;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB265C8", Offset = "0xB265C8")]
		public GameObject selectionPivot;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB26614", Offset = "0xB26614")]
		public Vector2 selectionPivotPosition;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Vector2 viewPortPivot;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public UnityEvent onClicked;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public UnityEvent onHoverEnter;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public UnityEvent onHoverExit;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public UnityEvent onSelectionEnter;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public UnityEvent onSelectionExit;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		protected UnityEvent onInteractableEnabled;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		protected UnityEvent onInteractableDisabled;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266CC", Offset = "0xB266CC")]
		private bool <inViewPort>k__BackingField;

		[Token(Token = "0x1700022D")]
		public bool interactable
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xEAF630", Offset = "0xEAF630", VA = "0xEAF630")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xEAF638", Offset = "0xEAF638", VA = "0xEAF638")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public bool inViewPort
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xEAF680", Offset = "0xEAF680", VA = "0xEAF680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31470", Offset = "0xB31470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xEAF688", Offset = "0xEAF688", VA = "0xEAF688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31480", Offset = "0xB31480")]
			private set
			{
			}
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xEAF694", Offset = "0xEAF694", VA = "0xEAF694")]
		public void Init()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xEAF73C", Offset = "0xEAF73C", VA = "0xEAF73C")]
		public void CalculateViewPortPivot(Camera camera)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xEAF7F8", Offset = "0xEAF7F8", VA = "0xEAF7F8")]
		public void SetInteractable(bool value)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xEAF800", Offset = "0xEAF800", VA = "0xEAF800")]
		public KALASelectable()
		{
		}
	}
	[Token(Token = "0x2000807")]
	public class KALASelectablesController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000808")]
		public class SelectableTuple
		{
			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KALASelectable selectable;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float relativeAngle;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float angleFactor;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float distance;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float distanceFactor;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float relativeScore;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector2 viewportPivot;

			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 pivot;

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xF1D934", Offset = "0xF1D934", VA = "0xF1D934")]
			public void CalculateRelativeScore()
			{
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xF1D954", Offset = "0xF1D954", VA = "0xF1D954")]
			public SelectableTuple()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000809")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC50", Offset = "0xB1BC50")]
		private sealed class <>c
		{
			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SelectableTuple, float> <>9__24_0;

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xF1D914", Offset = "0xF1D914", VA = "0xF1D914")]
			public <>c()
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xF1D91C", Offset = "0xF1D91C", VA = "0xF1D91C")]
			internal float <ChooseNextSelectable>b__24_0(SelectableTuple item)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB266DC", Offset = "0xB266DC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB266DC", Offset = "0xB266DC")]
		private float distanceFactor;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2674C", Offset = "0xB2674C")]
		private float angleFactor;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26798", Offset = "0xB26798")]
		public KALASelectable[] allSelectables;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public KALASelectable[] selectablesInCurrentGroup;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public KALASelectable currentSelection;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public KALASelectable previousSelection;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26814", Offset = "0xB26814")]
		public float rayDistance;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public string layerMaskName;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public List<SelectableTuple> selectables;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit _oldHit;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private RaycastHit _currentHit;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int _layerMask;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private KALAInputManager.InputType _lastInputType;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26880", Offset = "0xB26880")]
		private static KALASelectablesController <Instance>k__BackingField;

		[Token(Token = "0x1700022F")]
		[HideInInspector]
		public static KALASelectablesController Instance
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xEAF950", Offset = "0xEAF950", VA = "0xEAF950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31490", Offset = "0xB31490")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xEAF99C", Offset = "0xEAF99C", VA = "0xEAF99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB314A0", Offset = "0xB314A0")]
			private set
			{
			}
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xEAF9F0", Offset = "0xEAF9F0", VA = "0xEAF9F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xEAFAC0", Offset = "0xEAFAC0", VA = "0xEAFAC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xEAFB10", Offset = "0xEAFB10", VA = "0xEAFB10")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xEAFD80", Offset = "0xEAFD80", VA = "0xEAFD80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xEB020C", Offset = "0xEB020C", VA = "0xEB020C")]
		public void ChangeSelectionForCurrentInputType(KALASelectable newSelectable, bool resetPreviousSelection = false)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xEAFF0C", Offset = "0xEAFF0C", VA = "0xEAFF0C")]
		public void SelectFirstInteractableForCurrentInputType()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xEB0354", Offset = "0xEB0354", VA = "0xEB0354")]
		public void ChooseNextSelectable(Vector2 twoAxisInput, float selectionCone)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xEB02E8", Offset = "0xEB02E8", VA = "0xEB02E8")]
		public void ChangeSelection(KALASelectable newSelection, bool resetPreviousSelection = false)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xEAFFD0", Offset = "0xEAFFD0", VA = "0xEAFFD0")]
		private void CheckHoveredObject()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xEB0998", Offset = "0xEB0998", VA = "0xEB0998")]
		private KALASelectable GetRaycastedSelectable(Vector2 pointerPosition)
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xEAFCD4", Offset = "0xEAFCD4", VA = "0xEAFCD4")]
		private void RefreshPivots()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xEB0C38", Offset = "0xEB0C38", VA = "0xEB0C38")]
		private void InvokeOnClick()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xEB08A4", Offset = "0xEB08A4", VA = "0xEB08A4")]
		private void CallSelectionEvents()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xEB0D68", Offset = "0xEB0D68", VA = "0xEB0D68")]
		private void DeselectAll()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xEB0164", Offset = "0xEB0164", VA = "0xEB0164")]
		private void SelectFirstInteractable()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xEB0DDC", Offset = "0xEB0DDC", VA = "0xEB0DDC")]
		public KALASelectablesController()
		{
		}
	}
	[Token(Token = "0x200080A")]
	public abstract class RegisteredPuzzleSystem : RegisteredAssetBase<RegisteredPuzzleSystem>
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onPuzzleStarted;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onPuzzleSolved;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isPuzzleSolved;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int frameCount;

		[Token(Token = "0x17000230")]
		public bool IsPuzzleSolved
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xEC55EC", Offset = "0xEC55EC", VA = "0xEC55EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xEC55F4", Offset = "0xEC55F4", VA = "0xEC55F4")]
		public void StartPuzzleSystem()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xEC577C", Offset = "0xEC577C", VA = "0xEC577C", Slot = "9")]
		public virtual void ProceedWithoutSolve()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xEC58E0", Offset = "0xEC58E0", VA = "0xEC58E0", Slot = "10")]
		public virtual void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xEC5A5C", Offset = "0xEC5A5C", VA = "0xEC5A5C")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x60018C9")]
		protected abstract void StartPuzzle();

		[Token(Token = "0x60018CA")]
		protected abstract void UpdatePuzzle();

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xEC5A90", Offset = "0xEC5A90", VA = "0xEC5A90", Slot = "13")]
		protected virtual void FastForwardPuzzle()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xEC5A9C", Offset = "0xEC5A9C", VA = "0xEC5A9C")]
		protected RegisteredPuzzleSystem()
		{
		}
	}
	[Token(Token = "0x200080B")]
	public class RobotDoublesPuzzle : RegisteredPuzzleSystem
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputActionReference nextSlideAction;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UIViewMasterImageContainer viewMasterUI;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ObjectMovementEventListener moveToCamera;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ObjectMovementEventListener moveToRest;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int interruptAfterImage;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB268D0", Offset = "0xB268D0")]
		[EventRef]
		[SerializeField]
		private string _putOnSoundEvent;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[EventRef]
		[SerializeField]
		private string _takeOffSoundEvent;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[EventRef]
		[SerializeField]
		private string _nextSlideSoundEvent;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _viewMasterSoundEmitter;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private InputService _inputService;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SoundService _soundService;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _waitingForGraph;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _waitingForSwap;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool _fastForwardNextSlide;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool nextSlideButtonPressed;

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xECA554", Offset = "0xECA554", VA = "0xECA554")]
		public void NextSlideByButton()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xECA560", Offset = "0xECA560", VA = "0xECA560")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xECA66C", Offset = "0xECA66C", VA = "0xECA66C", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xECA884", Offset = "0xECA884", VA = "0xECA884")]
		private void OnNextSlidePerformed(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xECA890", Offset = "0xECA890", VA = "0xECA890", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xECAE00", Offset = "0xECAE00", VA = "0xECAE00", Slot = "13")]
		protected override void FastForwardPuzzle()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xECAC90", Offset = "0xECAC90", VA = "0xECAC90")]
		private void OnContinue(string obj)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xECAEF8", Offset = "0xECAEF8", VA = "0xECAEF8")]
		private void FinishPuzzle()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xECB038", Offset = "0xECB038", VA = "0xECB038")]
		private void StartViewMaster()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xECAE0C", Offset = "0xECAE0C", VA = "0xECAE0C")]
		private void StopViewMaster()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xECB15C", Offset = "0xECB15C", VA = "0xECB15C")]
		public RobotDoublesPuzzle()
		{
		}
	}
	[Token(Token = "0x200080C")]
	public class UIViewMasterImageContainer : MonoBehaviour
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float angle;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB269CC", Offset = "0xB269CC")]
		[SerializeField]
		private float currentImage;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float angleFix;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rootTransform;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> elements;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve imageSwapAnim;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.CanvasGroup[] highlightAlphas;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.CanvasGroup targetHighlight;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool fadeToggle;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isHighlighting;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float timeProgress;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float fadeSeconds;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isSwapping;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int swapPrevImage;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int swapNextImage;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float swapTime;

		[Token(Token = "0x17000231")]
		public int currentSlide
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xF35B24", Offset = "0xF35B24", VA = "0xF35B24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000232")]
		public int nextSlide
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xF35B30", Offset = "0xF35B30", VA = "0xF35B30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000233")]
		public int lastSlide
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xF35B50", Offset = "0xF35B50", VA = "0xF35B50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000234")]
		public bool isLastSlide
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xF35BA0", Offset = "0xF35BA0", VA = "0xF35BA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xF35C00", Offset = "0xF35C00", VA = "0xF35C00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xF35D68", Offset = "0xF35D68", VA = "0xF35D68")]
		private bool Validate(float input = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xF360AC", Offset = "0xF360AC", VA = "0xF360AC")]
		private void ValidateCurrent()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xF360F0", Offset = "0xF360F0", VA = "0xF360F0")]
		public void FastForwardToSlide(int slide)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xF36188", Offset = "0xF36188", VA = "0xF36188")]
		public bool UpdateSwapping()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xF36244", Offset = "0xF36244", VA = "0xF36244")]
		public void StartSwapToNext()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xF361DC", Offset = "0xF361DC", VA = "0xF361DC")]
		private void UpdateSwapAnim(float time)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xF36280", Offset = "0xF36280", VA = "0xF36280")]
		public void StartHighlightingNextSlide()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xF36454", Offset = "0xF36454", VA = "0xF36454")]
		public void StopHighlightingNextSlide()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xF3645C", Offset = "0xF3645C", VA = "0xF3645C")]
		private void HighlightEffect()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xF366B8", Offset = "0xF366B8", VA = "0xF366B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xF366BC", Offset = "0xF366BC", VA = "0xF366BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xF36820", Offset = "0xF36820", VA = "0xF36820")]
		public UIViewMasterImageContainer()
		{
		}
	}
	[Token(Token = "0x200080D")]
	public class Scarecrow : MonoBehaviour
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int index;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int danSpin;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter _leanSoundEventEmitter;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter _spinSoundEventEmitter;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float solveAngle;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minSpeed;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ScarecrowPuzzleController _controller;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animation animator;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float slowdownRotation;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool firstInteraction;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float lastFrameAngle;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion startRotation;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float accumulatedRotationOffest;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isLocked;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool Won;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool isTipped;

		[Token(Token = "0x17000235")]
		public StudioEventEmitter SpinSoundEventEmitter
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xECD6C4", Offset = "0xECD6C4", VA = "0xECD6C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xECD6CC", Offset = "0xECD6CC", VA = "0xECD6CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xECD86C", Offset = "0xECD86C", VA = "0xECD86C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xECD9C8", Offset = "0xECD9C8", VA = "0xECD9C8")]
		public void Init(ScarecrowPuzzleController controller)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xECD754", Offset = "0xECD754", VA = "0xECD754")]
		public bool Lockposition()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xECDA3C", Offset = "0xECDA3C", VA = "0xECDA3C")]
		private void ForceLocked()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xECDAA4", Offset = "0xECDAA4", VA = "0xECDAA4")]
		public bool IsInLockPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xECDC9C", Offset = "0xECDC9C", VA = "0xECDC9C")]
		public void RotateByAngle(float radientsPerFrame)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xECDF30", Offset = "0xECDF30", VA = "0xECDF30")]
		public Scarecrow()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xECDF4C", Offset = "0xECDF4C", VA = "0xECDF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB314B0", Offset = "0xB314B0")]
		private void <Start>b__19_0(string a)
		{
		}
	}
	[Token(Token = "0x200080E")]
	public class ScarecrowPuzzleCamera : MonoBehaviour
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Camera camera;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public PlayerCameraController controller;

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xECDF98", Offset = "0xECDF98", VA = "0xECDF98")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xECDFE8", Offset = "0xECDFE8", VA = "0xECDFE8")]
		public void DisableCameraController()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xECE008", Offset = "0xECE008", VA = "0xECE008")]
		public ScarecrowPuzzleCamera()
		{
		}
	}
	[Token(Token = "0x200080F")]
	public enum SplitViewRenderMethod
	{
		[Token(Token = "0x400179A")]
		ViewportAdjustment,
		[Token(Token = "0x400179B")]
		RenderTextures
	}
	[Token(Token = "0x2000810")]
	public class ScarecrowPuzzleController : RegisteredPuzzleSystem
	{
		[Serializable]
		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC60", Offset = "0xB1BC60")]
		private sealed class <>c
		{
			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Scarecrow, Scarecrow, int> <>9__33_0;

			[Token(Token = "0x6001907")]
			[Address(RVA = "0xD9F428", Offset = "0xD9F428", VA = "0xD9F428")]
			public <>c()
			{
			}

			[Token(Token = "0x6001908")]
			[Address(RVA = "0xD9F430", Offset = "0xD9F430", VA = "0xD9F430")]
			internal int <Initialize>b__33_0(Scarecrow lhs, Scarecrow rhs)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000812")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC70", Offset = "0xB1BC70")]
		private sealed class <EndPuzzle>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000236")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600190C")]
				[Address(RVA = "0xD9F524", Offset = "0xD9F524", VA = "0xD9F524", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000237")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600190E")]
				[Address(RVA = "0xD9F56C", Offset = "0xD9F56C", VA = "0xD9F56C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001909")]
			[Address(RVA = "0xD9F458", Offset = "0xD9F458", VA = "0xD9F458")]
			[DebuggerHidden]
			public <EndPuzzle>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x600190A")]
			[Address(RVA = "0xD9F484", Offset = "0xD9F484", VA = "0xD9F484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600190B")]
			[Address(RVA = "0xD9F488", Offset = "0xD9F488", VA = "0xD9F488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600190D")]
			[Address(RVA = "0xD9F52C", Offset = "0xD9F52C", VA = "0xD9F52C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26A7C", Offset = "0xB26A7C")]
		public Camera windmillCameraRT;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Camera windmillCameraVP;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject CarPlaceholder;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Transform CarModel;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public GameObject Windmill;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public float speed;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public GameObject CarParticles;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public Transform newCrowTransform;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public RenderTexture playerCameraRenderTexture;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Animation endingAnim;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26B58", Offset = "0xB26B58")]
		[SerializeField]
		private string _crowCrySoundEmitter;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[EventRef]
		private string _crowCrySoundEvent;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[EventRef]
		private string _scarecrowSpinSoundEvent;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[EventRef]
		private string _scarecrowDownSoundEvent;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[EventRef]
		private string _scarecrowUpSoundEvent;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SoundService _soundservice;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform crowSystem;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Animation CrankAnimation;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool active;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SceneManagementService sceneManagement;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Scarecrow[] scareCrows;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RegisteredCamera playerCamera;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RegisteredCamera playerCameraRT;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RegisteredCamera EndingCamera;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Camera environmentCamera;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RegisteredInteractable windowCrank;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int numScarecrowsLocked;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool isSpinning;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int stupidtyCounter;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float stupidityTimer;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool skipPuzzle;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private SplitViewRenderMethod activatedRenderMethod;

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xECE010", Offset = "0xECE010", VA = "0xECE010", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xECE3D0", Offset = "0xECE3D0", VA = "0xECE3D0", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xECE014", Offset = "0xECE014", VA = "0xECE014")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xECED18", Offset = "0xECED18", VA = "0xECED18")]
		public void ShowScareCrowPuzzle(SplitViewRenderMethod renderMethod)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xECEF6C", Offset = "0xECEF6C", VA = "0xECEF6C")]
		public void HideScareCrowPuzzle()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xECDC74", Offset = "0xECDC74", VA = "0xECDC74")]
		public void PlayScarecrowLeanSound(StudioEventEmitter eventEmitter, bool isUp)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xECF1C4", Offset = "0xECF1C4", VA = "0xECF1C4")]
		public void PlayScarecrowSpinSound(StudioEventEmitter eventEmitter, bool isRotating)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xECE884", Offset = "0xECE884", VA = "0xECE884")]
		private float AngleDir(Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xECE894", Offset = "0xECE894", VA = "0xECE894")]
		private void GetCameras()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xECE9D0", Offset = "0xECE9D0", VA = "0xECE9D0")]
		private void GetInteractables()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xECF1F0", Offset = "0xECF1F0", VA = "0xECF1F0")]
		private void WindowCrankSpin()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xECF51C", Offset = "0xECF51C", VA = "0xECF51C")]
		private void CheckForSolve()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xECF760", Offset = "0xECF760", VA = "0xECF760", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xECF704", Offset = "0xECF704", VA = "0xECF704")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB314C0", Offset = "0xB314C0")]
		private IEnumerator EndPuzzle()
		{
			return null;
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xECF834", Offset = "0xECF834", VA = "0xECF834")]
		private void StopParticleEmissionDelayed()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xECF9F4", Offset = "0xECF9F4", VA = "0xECF9F4")]
		public ScarecrowPuzzleController()
		{
		}
	}
	[Token(Token = "0x2000813")]
	public class SelectScarecrowPuzzleLogic : MonoBehaviour
	{
		[Token(Token = "0x2000814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC80", Offset = "0xB1BC80")]
		private sealed class <WaitForCutscene>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectScarecrowPuzzleLogic <>4__this;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001915")]
				[Address(RVA = "0xDA1000", Offset = "0xDA1000", VA = "0xDA1000", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001917")]
				[Address(RVA = "0xDA1048", Offset = "0xDA1048", VA = "0xDA1048", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001912")]
			[Address(RVA = "0xDA0EDC", Offset = "0xDA0EDC", VA = "0xDA0EDC")]
			[DebuggerHidden]
			public <WaitForCutscene>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xDA0F08", Offset = "0xDA0F08", VA = "0xDA0F08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0xDA0F0C", Offset = "0xDA0F0C", VA = "0xDA0F0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001916")]
			[Address(RVA = "0xDA1008", Offset = "0xDA1008", VA = "0xDA1008", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RegisteredPuzzleSystem> puzzles;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1106C9C", Offset = "0x1106C9C", VA = "0x1106C9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1106CC8", Offset = "0x1106CC8", VA = "0x1106CC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31570", Offset = "0xB31570")]
		private IEnumerator WaitForCutscene()
		{
			return null;
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x1106D40", Offset = "0x1106D40", VA = "0x1106D40")]
		public SelectScarecrowPuzzleLogic()
		{
		}
	}
	[Token(Token = "0x2000815")]
	public class ShowScarecroPuzzleBinoculars : MonoBehaviour
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26C84", Offset = "0xB26C84")]
		public SplitViewRenderMethod renderMethod;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RegisteredActivateable puzzle;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Canvas binocRTCanvas;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SettingsService settings;

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x1112664", Offset = "0x1112664", VA = "0x1112664")]
		public void ShowScareCrowPuzzle()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1112918", Offset = "0x1112918", VA = "0x1112918")]
		public void HideScareCrowPuzzle()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1112B08", Offset = "0x1112B08", VA = "0x1112B08")]
		public ShowScarecroPuzzleBinoculars()
		{
		}
	}
	[Token(Token = "0x2000816")]
	public class Shootable : MonoBehaviour
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int basePointValue;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool wasShot;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int timesAppeared;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public ShootingGalleryPuzzleSystem puzzleSystem;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public RegisteredInteractable interactable;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 initialPosition;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform trans;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator animator;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StudioEventEmitter _soundEmitter;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Crosshair crosshairPrefab;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Crosshair crosshairInstance;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1111644", Offset = "0x1111644", VA = "0x1111644")]
		private void Awake()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x11118F8", Offset = "0x11118F8", VA = "0x11118F8")]
		private void InitializeCrosshair()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1111C74", Offset = "0x1111C74", VA = "0x1111C74")]
		public void OnStartMoving()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1111D5C", Offset = "0x1111D5C", VA = "0x1111D5C")]
		public void OnDisappear()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1111E1C", Offset = "0x1111E1C", VA = "0x1111E1C")]
		public void OnShot()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1111DAC", Offset = "0x1111DAC", VA = "0x1111DAC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x11121F8", Offset = "0x11121F8", VA = "0x11121F8")]
		public Shootable()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1112200", Offset = "0x1112200", VA = "0x1112200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31620", Offset = "0xB31620")]
		private void <Awake>b__11_0()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x111223C", Offset = "0x111223C", VA = "0x111223C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31630", Offset = "0xB31630")]
		private void <Awake>b__11_1()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1112268", Offset = "0x1112268", VA = "0x1112268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31640", Offset = "0xB31640")]
		private void <Awake>b__11_2()
		{
		}
	}
	[Token(Token = "0x2000817")]
	public class ShootingGalleryPuzzleSystem : RegisteredPuzzleSystem
	{
		[Token(Token = "0x2000818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC90", Offset = "0xB1BC90")]
		private sealed class <SpawnObjectsCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryPuzzleSystem <>4__this;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <j>5__3;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001934")]
				[Address(RVA = "0xDA2880", Offset = "0xDA2880", VA = "0xDA2880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001936")]
				[Address(RVA = "0xDA28C8", Offset = "0xDA28C8", VA = "0xDA28C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001931")]
			[Address(RVA = "0xDA26F8", Offset = "0xDA26F8", VA = "0xDA26F8")]
			[DebuggerHidden]
			public <SpawnObjectsCoroutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0xDA2724", Offset = "0xDA2724", VA = "0xDA2724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001933")]
			[Address(RVA = "0xDA2728", Offset = "0xDA2728", VA = "0xDA2728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001935")]
			[Address(RVA = "0xDA2888", Offset = "0xDA2888", VA = "0xDA2888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Shootable> movableObjectsInOrder;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26D2C", Offset = "0xB26D2C")]
		[SerializeField]
		private int iterations;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float intervalBetweenObjectSpawn;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26D88", Offset = "0xB26D88")]
		[SerializeField]
		private Text scoreSumText;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text objectScore;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform puzzleCanvas;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform scoreContainer;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Animation scoreAnimation;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public GameObject shootingCroshair;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Highscore3D_Popup popupPrefab;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[EventRef]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26E24", Offset = "0xB26E24")]
		private string _spawnSoundEvent;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[EventRef]
		private string _shootSoundEvent;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SoundService _soundService;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine spawnCoroutine;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shootable currentShootable;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float currentScore;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool firstObjectShot;

		[Token(Token = "0x1700023A")]
		private Camera mainCamera
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x1112294", Offset = "0x1112294", VA = "0x1112294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public string SpawnSoundEvent
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x111231C", Offset = "0x111231C", VA = "0x111231C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public string ShootSoundEvent
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x1112324", Offset = "0x1112324", VA = "0x1112324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x111232C", Offset = "0x111232C", VA = "0x111232C", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x11124DC", Offset = "0x11124DC", VA = "0x11124DC", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1112330", Offset = "0x1112330", VA = "0x1112330")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1112558", Offset = "0x1112558", VA = "0x1112558")]
		public void SetObjectInMotion(int index)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1111E84", Offset = "0x1111E84", VA = "0x1111E84")]
		public void Addpoints(Shootable shootable)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1111D44", Offset = "0x1111D44", VA = "0x1111D44")]
		public void PlayShootableSound(StudioEventEmitter soundEmitter, string soundEvent)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x11124E0", Offset = "0x11124E0", VA = "0x11124E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31650", Offset = "0xB31650")]
		private IEnumerator SpawnObjectsCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x111263C", Offset = "0x111263C", VA = "0x111263C")]
		public ShootingGalleryPuzzleSystem()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1112644", Offset = "0x1112644", VA = "0x1112644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB316B0", Offset = "0xB316B0")]
		private void <Initialize>b__25_0()
		{
		}
	}
	[Token(Token = "0x2000819")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject followObject;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float smoothTime;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UpdateManager updateManager;

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1112FB4", Offset = "0x1112FB4", VA = "0x1112FB4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1112FB8", Offset = "0x1112FB8", VA = "0x1112FB8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x11131BC", Offset = "0x11131BC", VA = "0x11131BC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x11132F4", Offset = "0x11132F4", VA = "0x11132F4")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1113438", Offset = "0x1113438", VA = "0x1113438")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x200081A")]
	public class CableEnd : CableNode
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DesiredCableData desiredCableData;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xE2DFCC", Offset = "0xE2DFCC", VA = "0xE2DFCC", Slot = "4")]
		public override bool CanConnectTo(CableNode cableNode)
		{
			return default(bool);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xE2E048", Offset = "0xE2E048", VA = "0xE2E048")]
		public bool IsInputSatisfied()
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xE2E0EC", Offset = "0xE2E0EC", VA = "0xE2E0EC")]
		public CableEnd()
		{
		}
	}
	[Token(Token = "0x200081B")]
	public abstract class CableNode : MonoBehaviour
	{
		[Token(Token = "0x200081C")]
		public delegate void OnConnectedNodeChangedDelegate(CableNode sender);

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26EB8", Offset = "0xB26EB8")]
		private CableNode <connectedNode>k__BackingField;

		[Token(Token = "0x1700023F")]
		public CableNode connectedNode
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xE2E32C", Offset = "0xE2E32C", VA = "0xE2E32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31710", Offset = "0xB31710")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xE2E334", Offset = "0xE2E334", VA = "0xE2E334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31720", Offset = "0xB31720")]
			private set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event OnConnectedNodeChangedDelegate onConnectedNodeChanged
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xE2E33C", Offset = "0xE2E33C", VA = "0xE2E33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31730", Offset = "0xB31730")]
			add
			{
			}
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xE2E3DC", Offset = "0xE2E3DC", VA = "0xE2E3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31740", Offset = "0xB31740")]
			remove
			{
			}
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xE2E47C", Offset = "0xE2E47C", VA = "0xE2E47C")]
		public static bool Connect(CableNode nodeA, CableNode nodeB)
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		public abstract bool CanConnectTo(CableNode cableNode);

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xE2E5DC", Offset = "0xE2E5DC", VA = "0xE2E5DC")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xE2E6D4", Offset = "0xE2E6D4", VA = "0xE2E6D4")]
		public void ConnectTo(CableNode node)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xE2E6BC", Offset = "0xE2E6BC", VA = "0xE2E6BC")]
		private void RaiseChangedEvent()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xE2E0F4", Offset = "0xE2E0F4", VA = "0xE2E0F4")]
		protected CableNode()
		{
		}
	}
	[Token(Token = "0x200081D")]
	public class CableStart : CableNode
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public CableData cableData;

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xE2E6D8", Offset = "0xE2E6D8", VA = "0xE2E6D8", Slot = "4")]
		public override bool CanConnectTo(CableNode cableNode)
		{
			return default(bool);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xE2E754", Offset = "0xE2E754", VA = "0xE2E754")]
		public CableStart()
		{
		}
	}
	[Token(Token = "0x200081E")]
	public enum SymbolType
	{
		[Token(Token = "0x40017F2")]
		None,
		[Token(Token = "0x40017F3")]
		Cross,
		[Token(Token = "0x40017F4")]
		Line,
		[Token(Token = "0x40017F5")]
		Circle
	}
	[Token(Token = "0x200081F")]
	public enum ColorType
	{
		[Token(Token = "0x40017F7")]
		None,
		[Token(Token = "0x40017F8")]
		Pink,
		[Token(Token = "0x40017F9")]
		Green,
		[Token(Token = "0x40017FA")]
		Blue
	}
	[Serializable]
	[Token(Token = "0x2000820")]
	public class CableData : ICableData
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColorType colorType;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SymbolType symbolType;

		[Token(Token = "0x17000240")]
		public SymbolType SymbolType
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0xE2DFB4", Offset = "0xE2DFB4", VA = "0xE2DFB4", Slot = "4")]
			get
			{
				return default(SymbolType);
			}
		}

		[Token(Token = "0x17000241")]
		public ColorType ColorType
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0xE2DFBC", Offset = "0xE2DFBC", VA = "0xE2DFBC", Slot = "5")]
			get
			{
				return default(ColorType);
			}
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xE2DFC4", Offset = "0xE2DFC4", VA = "0xE2DFC4")]
		public CableData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000821")]
	public class DesiredCableData
	{
		[Token(Token = "0x2000822")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BCA0", Offset = "0xB1BCA0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SymbolType symbolType;

			[Token(Token = "0x6001956")]
			[Address(RVA = "0x275FF60", Offset = "0x275FF60", VA = "0x275FF60")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001957")]
			[Address(RVA = "0x275FF68", Offset = "0x275FF68", VA = "0x275FF68")]
			internal bool <CanAcceptSymbol>b__0(SymbolType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000823")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BCB0", Offset = "0xB1BCB0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorType colorType;

			[Token(Token = "0x6001958")]
			[Address(RVA = "0x275FF78", Offset = "0x275FF78", VA = "0x275FF78")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001959")]
			[Address(RVA = "0x275FF80", Offset = "0x275FF80", VA = "0x275FF80")]
			internal bool <CanAcceptColor>b__0(ColorType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isUndesired;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SymbolType[] symbolTypes;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorType[] colorTypes;

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1125A48", Offset = "0x1125A48", VA = "0x1125A48")]
		public bool CanAccept(ICableData cableData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1125B90", Offset = "0x1125B90", VA = "0x1125B90")]
		public bool CanAcceptSymbol(SymbolType symbolType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1125CAC", Offset = "0x1125CAC", VA = "0x1125CAC")]
		public bool CanAcceptColor(ColorType colorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1125DC8", Offset = "0x1125DC8", VA = "0x1125DC8")]
		public DesiredCableData()
		{
		}
	}
	[Token(Token = "0x2000824")]
	public interface ICableData
	{
		[Token(Token = "0x17000242")]
		SymbolType SymbolType
		{
			[Token(Token = "0x600195A")]
			get;
		}

		[Token(Token = "0x17000243")]
		ColorType ColorType
		{
			[Token(Token = "0x600195B")]
			get;
		}
	}
	[Token(Token = "0x2000825")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1BCC0", Offset = "0xB1BCC0")]
	public class ColorTypeDataTable : SerializedScriptableObject
	{
		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Dictionary<ColorType, Material> _colorTypeData;

		[Token(Token = "0x17000244")]
		public IReadOnlyDictionary<ColorType, Material> colorTypeData
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0xE3E6F4", Offset = "0xE3E6F4", VA = "0xE3E6F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xE3E6FC", Offset = "0xE3E6FC", VA = "0xE3E6FC")]
		public ColorTypeDataTable()
		{
		}
	}
	[Token(Token = "0x2000826")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1BD04", Offset = "0xB1BD04")]
	public class SymbolTypeDataTable : SerializedScriptableObject
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Dictionary<SymbolType, Sprite> _symbolTypeData;

		[Token(Token = "0x17000245")]
		public IReadOnlyDictionary<SymbolType, Sprite> symbolTypeData
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xDB1094", Offset = "0xDB1094", VA = "0xDB1094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xDB109C", Offset = "0xDB109C", VA = "0xDB109C")]
		public Sprite GetSpriteFor(SymbolType symbolType)
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xDB1450", Offset = "0xDB1450", VA = "0xDB1450")]
		public SymbolTypeDataTable()
		{
		}
	}
	[Token(Token = "0x2000827")]
	public class TrunkEscapePuzzle : RegisteredPuzzleSystem
	{
		[Serializable]
		[Token(Token = "0x2000828")]
		public class CableStartViewModel
		{
			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CableStart cable;

			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CableStartView cableView;

			[Token(Token = "0x6001976")]
			[Address(RVA = "0xDA5848", Offset = "0xDA5848", VA = "0xDA5848")]
			public CableStartViewModel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000829")]
		public class CableEndViewModel
		{
			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CableEnd cable;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CableEndView cableView;

			[Token(Token = "0x6001977")]
			[Address(RVA = "0xDA5840", Offset = "0xDA5840", VA = "0xDA5840")]
			public CableEndViewModel()
			{
			}
		}

		[Token(Token = "0x200082A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BD48", Offset = "0xB1BD48")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CableStartViewModel mv;

			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrunkEscapePuzzle <>4__this;

			[Token(Token = "0x6001978")]
			[Address(RVA = "0xDA5634", Offset = "0xDA5634", VA = "0xDA5634")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0xDA563C", Offset = "0xDA563C", VA = "0xDA563C")]
			internal void <Start>b__0()
			{
			}
		}

		[Token(Token = "0x200082B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BD58", Offset = "0xB1BD58")]
		private sealed class <>c__DisplayClass17_1
		{
			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CableEndViewModel mv;

			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrunkEscapePuzzle <>4__this;

			[Token(Token = "0x600197A")]
			[Address(RVA = "0xDA5668", Offset = "0xDA5668", VA = "0xDA5668")]
			public <>c__DisplayClass17_1()
			{
			}

			[Token(Token = "0x600197B")]
			[Address(RVA = "0xDA5670", Offset = "0xDA5670", VA = "0xDA5670")]
			internal void <Start>b__1()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200082C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BD68", Offset = "0xB1BD68")]
		private sealed class <>c
		{
			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CableEndViewModel, bool> <>9__22_0;

			[Token(Token = "0x600197D")]
			[Address(RVA = "0xDA5608", Offset = "0xDA5608", VA = "0xDA5608")]
			public <>c()
			{
			}

			[Token(Token = "0x600197E")]
			[Address(RVA = "0xDA5610", Offset = "0xDA5610", VA = "0xDA5610")]
			internal bool <CheckForSolve>b__22_0(CableEndViewModel x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BD78", Offset = "0xB1BD78")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CableStart cableStart;

			[Token(Token = "0x600197F")]
			[Address(RVA = "0xDA569C", Offset = "0xDA569C", VA = "0xDA569C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001980")]
			[Address(RVA = "0xDA56A4", Offset = "0xDA56A4", VA = "0xDA56A4")]
			internal bool <HandleCableStartConnectionChanged>b__0(CableStartViewModel x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001981")]
			[Address(RVA = "0xDA5728", Offset = "0xDA5728", VA = "0xDA5728")]
			internal bool <HandleCableStartConnectionChanged>b__1(CableEndViewModel x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BD88", Offset = "0xB1BD88")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CableEnd cableEnd;

			[Token(Token = "0x6001982")]
			[Address(RVA = "0xDA57B4", Offset = "0xDA57B4", VA = "0xDA57B4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001983")]
			[Address(RVA = "0xDA57BC", Offset = "0xDA57BC", VA = "0xDA57BC")]
			internal bool <HandleCableEndConnectionChanged>b__0(CableEndViewModel x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<CableStartViewModel> startModelViews;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<CableEndViewModel> endModelViews;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<CableView> cableViews;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Camera uiCamera;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MenuOverlayBase cableBoxUI;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[EventRef]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB26F58", Offset = "0xB26F58")]
		[SerializeField]
		private string _attachCorrectWireSoundEvent;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[EventRef]
		private string _attachWrongWireSoundEvent;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[EventRef]
		private string _grabWireSoundEvent;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[EventRef]
		private string _returnWireSoundEvent;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[EventRef]
		private string _solvedSoundEvent;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private InputService _inputService;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SoundService _soundService;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CableStartView currentStartView;

		[Token(Token = "0x17000246")]
		private UIManager UIManager
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xDB62E0", Offset = "0xDB62E0", VA = "0xDB62E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xDB6360", Offset = "0xDB6360", VA = "0xDB6360")]
		protected new void Start()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xDB6B08", Offset = "0xDB6B08", VA = "0xDB6B08")]
		private void AutoFillModelViewReferences()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xDB6E08", Offset = "0xDB6E08", VA = "0xDB6E08", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xDB71CC", Offset = "0xDB71CC", VA = "0xDB71CC")]
		private void DisplayWirePuzzleDuringFade()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xDB72B4", Offset = "0xDB72B4", VA = "0xDB72B4", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xDB7440", Offset = "0xDB7440", VA = "0xDB7440")]
		public void CheckForSolve()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xDB75B0", Offset = "0xDB75B0", VA = "0xDB75B0")]
		public void OnNoMouseOrTouchPlatform()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xDB7654", Offset = "0xDB7654", VA = "0xDB7654")]
		private void SelectNextFreeCableEnd()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xDB789C", Offset = "0xDB789C", VA = "0xDB789C")]
		public void OnCableStartPress(CableStartView cableStartView)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xDB7990", Offset = "0xDB7990", VA = "0xDB7990")]
		public void OnCableEndPress(CableEndView cableEndView)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xDB7AF4", Offset = "0xDB7AF4", VA = "0xDB7AF4")]
		private void Cable_onConnectedNodeChanged(CableNode sender)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xDB7BD8", Offset = "0xDB7BD8", VA = "0xDB7BD8")]
		private void HandleCableStartConnectionChanged(CableStart cableStart)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xDB7EB0", Offset = "0xDB7EB0", VA = "0xDB7EB0")]
		private void HandleCableEndConnectionChanged(CableEnd cableEnd)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xDB7968", Offset = "0xDB7968", VA = "0xDB7968")]
		public void PlayGrabWireSoundEvent()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xDB7FC0", Offset = "0xDB7FC0", VA = "0xDB7FC0")]
		public void PlayReturnWireSoundEvent()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xDB7ABC", Offset = "0xDB7ABC", VA = "0xDB7ABC")]
		public void PlayAttachWireSoundEvent(bool success)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xDB7FE8", Offset = "0xDB7FE8", VA = "0xDB7FE8", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xDB715C", Offset = "0xDB715C", VA = "0xDB715C")]
		private void OnLastInputSourceChanged(InputSource inputSource)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xDB7FEC", Offset = "0xDB7FEC", VA = "0xDB7FEC")]
		private static void SetButtonVisuals(Button[] buttons, bool hasHighlight)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xDB80E8", Offset = "0xDB80E8", VA = "0xDB80E8")]
		public TrunkEscapePuzzle()
		{
		}
	}
	[Token(Token = "0x200082F")]
	public class LanguagePuzzle : RegisteredPuzzleSystem
	{
		[Token(Token = "0x2000830")]
		private enum RadioState
		{
			[Token(Token = "0x4001837")]
			off,
			[Token(Token = "0x4001838")]
			increasing,
			[Token(Token = "0x4001839")]
			decreasing
		}

		[Serializable]
		[Token(Token = "0x2000831")]
		public class Slider3D
		{
			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Pin;

			[Token(Token = "0x400183B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform LeftEnd;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform RightEnd;

			[Token(Token = "0x600198E")]
			[Address(RVA = "0xF1D95C", Offset = "0xF1D95C", VA = "0xF1D95C")]
			public void Lerp(float t)
			{
			}

			[Token(Token = "0x600198F")]
			[Address(RVA = "0xF1DA18", Offset = "0xF1DA18", VA = "0xF1DA18")]
			public Slider3D()
			{
			}
		}

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27094", Offset = "0xB27094")]
		public AnimationCurve ChannelCurve;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve VolumeCurve;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float AccuracyThreshhold;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB270CC", Offset = "0xB270CC")]
		public RadioSlider channelSlider;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RadioSlider volumeSlider;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Slider3D> volumePins;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Slider3D> channelPins;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color fadeColor;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27104", Offset = "0xB27104")]
		public string RadioSoundEventEmitter;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ParamRef[] RadioParanRefs;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject radioUIObject;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject placeholderModel;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RadioState lastVolumeState;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RadioState lastChannelState;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RadioState VolumeState;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private RadioState ChannelState;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RegisteredInteractable radio;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RegisteredInteractable volumeButton;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RegisteredInteractable channelButton;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentVolume;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float currentChannel;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SoundService soundService;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float animationTimeOut;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float animationTimer;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private StudioEventEmitter _actualRadioSoundEmitter;

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xEB17DC", Offset = "0xEB17DC", VA = "0xEB17DC", Slot = "8")]
		protected override void OnRegister()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xEB184C", Offset = "0xEB184C", VA = "0xEB184C", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xEB1C48", Offset = "0xEB1C48", VA = "0xEB1C48")]
		private void ShowRadioUI(bool show)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xEB1C68", Offset = "0xEB1C68", VA = "0xEB1C68")]
		private Tuple<RadioState, float> UpdateValueAndState(RadioState state, float changeingValue)
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xEB1D54", Offset = "0xEB1D54", VA = "0xEB1D54")]
		private void ToggleChannelButton()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xEB1E10", Offset = "0xEB1E10", VA = "0xEB1E10")]
		private void ToggleVolumeButton()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xEB1E3C", Offset = "0xEB1E3C", VA = "0xEB1E3C", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xEB1D80", Offset = "0xEB1D80", VA = "0xEB1D80")]
		private void CheckForSolve()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xEB2260", Offset = "0xEB2260", VA = "0xEB2260", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xEB24E4", Offset = "0xEB24E4", VA = "0xEB24E4")]
		public LanguagePuzzle()
		{
		}
	}
	[Token(Token = "0x2000832")]
	public class TwisterPuzzle : RegisteredPuzzleSystem
	{
		[Token(Token = "0x2000833")]
		private enum RadioState
		{
			[Token(Token = "0x4001861")]
			off,
			[Token(Token = "0x4001862")]
			increasing,
			[Token(Token = "0x4001863")]
			decreasing
		}

		[Serializable]
		[Token(Token = "0x2000834")]
		public class TwisterLevels
		{
			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve ChannelCurve;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve VolumeCurve;

			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParameterAnimator solveAnimator;

			[Token(Token = "0x600199E")]
			[Address(RVA = "0xDA5850", Offset = "0xDA5850", VA = "0xDA5850")]
			public TwisterLevels()
			{
			}
		}

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27190", Offset = "0xB27190")]
		public TwisterLevels[] StormLevels;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float AccuracyThreshhold;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float hintTimeout;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider VolumeSlider;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider ChannelSlider;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<LanguagePuzzle.Slider3D> volumePins;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguagePuzzle.Slider3D> channelPins;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ParticleSystemRenderer Clouds;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public GameObject puzzleModel;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB271D8", Offset = "0xB271D8")]
		public ParameterAnimator volumeAnimator;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB27210", Offset = "0xB27210")]
		public ParameterAnimator channelAnimator;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27248", Offset = "0xB27248")]
		[SerializeField]
		private StudioEventEmitter _twisterSoundEmitter;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[EventRef]
		private string _twisterSoundEvent;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _twisterSoundParam;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB272DC", Offset = "0xB272DC")]
		[SerializeField]
		private string _radioSoundEmitter;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[EventRef]
		[SerializeField]
		private string _radioSoundEvent;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ParamRef[] _radioParamRefs;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SoundService _soundService;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ParamRef[] _twisterParamRefs;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private StudioEventEmitter _actualRadioSoundEmitter;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RadioState VolumeState;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private RadioState ChannelState;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RadioState lastVolumeState;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private RadioState lastChannelState;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RegisteredInteractable radio;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RegisteredInteractable volumeButton;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RegisteredInteractable channelButton;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int currentStageIndex;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB27370", Offset = "0xB27370")]
		[SerializeField]
		private float currentChannel;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB273B0", Offset = "0xB273B0")]
		[SerializeField]
		private float currentVolume;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool updateMaterials;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float stupidityTimer;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool firstVolumeInteraction;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		private bool firstChannelInteraction;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject radioUI;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xDB97A4", Offset = "0xDB97A4", VA = "0xDB97A4", Slot = "11")]
		protected override void StartPuzzle()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xDB9EF0", Offset = "0xDB9EF0", VA = "0xDB9EF0", Slot = "10")]
		public override void SolvePuzzleSystem()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xDBA11C", Offset = "0xDBA11C", VA = "0xDBA11C")]
		public void ToggleMaterialsWithAnimation()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xDBA12C", Offset = "0xDBA12C", VA = "0xDBA12C", Slot = "12")]
		protected override void UpdatePuzzle()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xDB9CCC", Offset = "0xDB9CCC", VA = "0xDB9CCC")]
		private void UpdateChannel()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xDB9AC4", Offset = "0xDB9AC4", VA = "0xDB9AC4")]
		private void UpdateVolume()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xDBA544", Offset = "0xDBA544", VA = "0xDBA544")]
		private void AdvanceStage()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xDBA820", Offset = "0xDBA820", VA = "0xDBA820")]
		private void enablePuzzle()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xDBA458", Offset = "0xDBA458", VA = "0xDBA458")]
		private Tuple<RadioState, float> UpdateValueAndState(RadioState state, float changeingValue)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xDBAB4C", Offset = "0xDBAB4C", VA = "0xDBAB4C")]
		private void ToggleChannelButton()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xDBAE08", Offset = "0xDBAE08", VA = "0xDBAE08")]
		private void ToggleVolumeButton()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xDBAC44", Offset = "0xDBAC44", VA = "0xDBAC44")]
		private void CheckForSolve()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xDBAF00", Offset = "0xDBAF00", VA = "0xDBAF00")]
		private void ToggleTwisterPuzzle()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xDBAF60", Offset = "0xDBAF60", VA = "0xDBAF60")]
		public TwisterPuzzle()
		{
		}
	}
	[Token(Token = "0x2000835")]
	public class RadioSlider : MonoBehaviour
	{
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform handle;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minPositionX;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxPositionX;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB273F0", Offset = "0xB273F0")]
		public float debugPosition;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x27922FC", Offset = "0x27922FC", VA = "0x27922FC")]
		private bool OnValidateInput(float value)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x2792314", Offset = "0x2792314", VA = "0x2792314")]
		public void UpdateHandlePosition(float normalizedPosition)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x27923E0", Offset = "0x27923E0", VA = "0x27923E0")]
		public RadioSlider()
		{
		}
	}
	[Token(Token = "0x2000836")]
	public class RandomScaleRotate : MonoBehaviour
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 minScaleFactor;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 maxScaleFactor;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationAxis;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool absoluteOverwrite;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool targetChildrenInstead;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27408", Offset = "0xB27408")]
		public bool uniform;

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xEBA33C", Offset = "0xEBA33C", VA = "0xEBA33C")]
		public RandomScaleRotate()
		{
		}
	}
	[Token(Token = "0x2000837")]
	public class ReplaceChildrenWithPrefabs : MonoBehaviour
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject replacementPrefab;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xEC8858", Offset = "0xEC8858", VA = "0xEC8858")]
		public ReplaceChildrenWithPrefabs()
		{
		}
	}
	[Token(Token = "0x2000838")]
	public class ReplayRideLock : MonoBehaviour
	{
		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rideNum;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image targetImage;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color lockedColor;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onUnlock;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onLock;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayerService _playerService;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isLocked;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isInited;

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xEC8860", Offset = "0xEC8860", VA = "0xEC8860")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xEC890C", Offset = "0xEC890C", VA = "0xEC890C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xEC89A4", Offset = "0xEC89A4", VA = "0xEC89A4")]
		private void ToggleImageColor()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xEC89FC", Offset = "0xEC89FC", VA = "0xEC89FC")]
		public ReplayRideLock()
		{
		}
	}
	[Token(Token = "0x2000839")]
	public class ResetCars : MonoBehaviour
	{
		[Token(Token = "0x200083A")]
		public enum ListMode
		{
			[Token(Token = "0x4001882")]
			manual,
			[Token(Token = "0x4001883")]
			getFromChildren
		}

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ListMode listMode;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SplineController> splineControllers;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startPositionMaxJitter;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<float> startPositions;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<bool> startState;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ActivateOnVisible> activationScripts;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<bool> activationScriptsStartState;

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xEC8CF0", Offset = "0xEC8CF0", VA = "0xEC8CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xEC91F8", Offset = "0xEC91F8", VA = "0xEC91F8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xEC941C", Offset = "0xEC941C", VA = "0xEC941C")]
		public ResetCars()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200083B")]
	public class PositionCacheResourceAsset : ResourceAsset<PositionCacheTiles>
	{
		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x2787E28", Offset = "0x2787E28", VA = "0x2787E28")]
		public PositionCacheResourceAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200083C")]
	public class ResourceAsset<T> where T : UnityEngine.Object
	{
		[Token(Token = "0x200083D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BD98", Offset = "0xB1BD98")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400188A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ResourceRequest request;

			[Token(Token = "0x400188B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onCompleted;

			[Token(Token = "0x60019B4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60019B5")]
			internal void <LoadAsResourceAsync>b__0(AsyncOperation AsyncOperation)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T obj;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string path;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string guid;

		[Token(Token = "0x4001887")]
		private const string resourceRoot = "Resources/";

		[Token(Token = "0x4001888")]
		private const int resourceRootOffset = 10;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T runtimeObj;

		[Token(Token = "0x60019AC")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AD")]
		private bool LoadAsResource(out T loadObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AE")]
		private string GetPath()
		{
			return null;
		}

		[Token(Token = "0x60019AF")]
		private void LoadAsResourceAsync(Action<T> onCompleted)
		{
		}

		[Token(Token = "0x60019B0")]
		public T Load()
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		public void LoadAsync(Action<T> onLoaded)
		{
		}

		[Token(Token = "0x60019B2")]
		public void Unload()
		{
		}

		[Token(Token = "0x60019B3")]
		public ResourceAsset()
		{
		}
	}
	[Token(Token = "0x200083E")]
	public class RideProfiler : MonoBehaviour
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27460", Offset = "0xB27460")]
		public CarSplineController carSplineController;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27498", Offset = "0xB27498")]
		public bool printSummary;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool writeDeltaTimes;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool writeFpsIn2ndCol;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool writeSummary;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filepath;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fileName;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float frameDropThreshhold;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int bufferSize;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxSecondsPerLoop;

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xECA220", Offset = "0xECA220", VA = "0xECA220")]
		public RideProfiler()
		{
		}
	}
	[Token(Token = "0x200083F")]
	public class RotateCurve : MonoBehaviour
	{
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve rotationCurveX;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve rotationCurveZ;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve rotationCurveY;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cycleTime;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float offSetTime;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 additionalRandomOffset;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxRotationSpeed;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float startTime;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform targetTrans;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float curTime;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float timeFac;

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xECC338", Offset = "0xECC338", VA = "0xECC338")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xECC4B0", Offset = "0xECC4B0", VA = "0xECC4B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xECC628", Offset = "0xECC628", VA = "0xECC628")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xECC670", Offset = "0xECC670", VA = "0xECC670")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xECC72C", Offset = "0xECC72C", VA = "0xECC72C")]
		public RotateCurve()
		{
		}
	}
	[Token(Token = "0x2000840")]
	public class SaveIndicatorController : MonoBehaviour
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform rotatingIcon;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animatedIcon;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string animatedIconState;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minRotationTime;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationSpeed;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool AutoPlay;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float rotationTime;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool visible;

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xECCF4C", Offset = "0xECCF4C", VA = "0xECCF4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xECCFD8", Offset = "0xECCFD8", VA = "0xECCFD8")]
		public void TriggerIndicator()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xECD064", Offset = "0xECD064", VA = "0xECD064")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xECD13C", Offset = "0xECD13C", VA = "0xECD13C")]
		public SaveIndicatorController()
		{
		}
	}
	[Token(Token = "0x2000841")]
	public class AchievementService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB274D0", Offset = "0xB274D0")]
		private bool _dumpLoadedAchievements;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2751C", Offset = "0xB2751C")]
		private IAchievementPlatformSupport <CurrentPlatform>k__BackingField;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isAuthenticated;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2752C", Offset = "0xB2752C")]
		private AchievementObject <LastReportedAchievement>k__BackingField;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2753C", Offset = "0xB2753C")]
		private AchievementObject <LastResetAchievement>k__BackingField;

		[Token(Token = "0x17000247")]
		public IAchievementPlatformSupport CurrentPlatform
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x102E2F4", Offset = "0x102E2F4", VA = "0x102E2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31750", Offset = "0xB31750")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x102E2FC", Offset = "0x102E2FC", VA = "0x102E2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31760", Offset = "0xB31760")]
			private set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool IsAuthenticated
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x102E3F8", Offset = "0x102E3F8", VA = "0x102E3F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x102E400", Offset = "0x102E400", VA = "0x102E400")]
			private set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public AchievementObject LastReportedAchievement
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x102E500", Offset = "0x102E500", VA = "0x102E500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31770", Offset = "0xB31770")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x102E508", Offset = "0x102E508", VA = "0x102E508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31780", Offset = "0xB31780")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public AchievementObject LastResetAchievement
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x102E510", Offset = "0x102E510", VA = "0x102E510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31790", Offset = "0xB31790")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x102E518", Offset = "0x102E518", VA = "0x102E518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB317A0", Offset = "0xB317A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public override string Name
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x102E520", Offset = "0x102E520", VA = "0x102E520", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x102E304", Offset = "0x102E304", VA = "0x102E304")]
		public void CreatePlatform(bool gogIsAvailable)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x102E564", Offset = "0x102E564", VA = "0x102E564", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x102E568", Offset = "0x102E568", VA = "0x102E568", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x102E5C4", Offset = "0x102E5C4", VA = "0x102E5C4")]
		public void OnAuthenticationResult(bool success)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x102E694", Offset = "0x102E694", VA = "0x102E694")]
		public bool ReportAchievement(AchievementObject achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x102EAC4", Offset = "0x102EAC4", VA = "0x102EAC4")]
		public bool ResetAchievement(AchievementObject achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x102EDBC", Offset = "0x102EDBC", VA = "0x102EDBC")]
		public bool ResetAllAchievements()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x102EFC0", Offset = "0x102EFC0", VA = "0x102EFC0")]
		public void LoadAchievements()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x102E7B4", Offset = "0x102E7B4", VA = "0x102E7B4")]
		private bool IsBusyOrNotAuthenticated(string actionToTestFor)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x102F1C0", Offset = "0x102F1C0", VA = "0x102F1C0")]
		private void LogError(string message, [Optional] string errorMessage)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x102F024", Offset = "0x102F024", VA = "0x102F024")]
		private bool InternalLoadAchievements()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x102E904", Offset = "0x102E904", VA = "0x102E904")]
		private bool InternalReportAchievement(AchievementObject achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x102EBFC", Offset = "0x102EBFC", VA = "0x102EBFC")]
		private bool InternalResetAchievement(AchievementObject achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x102EE24", Offset = "0x102EE24", VA = "0x102EE24")]
		private bool InternalResetAllAchievements()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x102F270", Offset = "0x102F270", VA = "0x102F270")]
		public AchievementService()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x102F278", Offset = "0x102F278", VA = "0x102F278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB317B0", Offset = "0xB317B0")]
		private void <InternalLoadAchievements>b__29_0(bool result, string errorMessage)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x102F390", Offset = "0x102F390", VA = "0x102F390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB317C0", Offset = "0xB317C0")]
		private void <InternalReportAchievement>b__30_0(bool result, string errorMessage)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x102F444", Offset = "0x102F444", VA = "0x102F444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB317D0", Offset = "0xB317D0")]
		private void <InternalResetAchievement>b__31_0(bool result, string errorMessage)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x102F4F8", Offset = "0x102F4F8", VA = "0x102F4F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB317E0", Offset = "0xB317E0")]
		private void <InternalResetAllAchievements>b__32_0(bool result, string errorMessage)
		{
		}
	}
	[Token(Token = "0x2000842")]
	public enum AchievementPlatformType
	{
		[Token(Token = "0x40018AF")]
		Default,
		[Token(Token = "0x40018B0")]
		Gamecenter,
		[Token(Token = "0x40018B1")]
		Steam,
		[Token(Token = "0x40018B2")]
		Playstation,
		[Token(Token = "0x40018B3")]
		Xbox,
		[Token(Token = "0x40018B4")]
		GOG,
		[Token(Token = "0x40018B5")]
		EGS
	}
	[Token(Token = "0x2000843")]
	public interface IAchievementPlatformSupport
	{
		[Token(Token = "0x1700024C")]
		bool supportsAuthentication
		{
			[Token(Token = "0x60019DC")]
			get;
		}

		[Token(Token = "0x1700024D")]
		bool supportsReportingAchievements
		{
			[Token(Token = "0x60019DD")]
			get;
		}

		[Token(Token = "0x1700024E")]
		bool supportsResettingAchievements
		{
			[Token(Token = "0x60019DE")]
			get;
		}

		[Token(Token = "0x1700024F")]
		bool supportsLoadingAchievements
		{
			[Token(Token = "0x60019DF")]
			get;
		}

		[Token(Token = "0x17000250")]
		AchievementPlatformType type
		{
			[Token(Token = "0x60019E0")]
			get;
		}

		[Token(Token = "0x60019E1")]
		void Init();

		[Token(Token = "0x60019E2")]
		void LogAllAchievements();

		[Token(Token = "0x60019E3")]
		void ReportAchievement(AchievementObject achievement, Action<bool, string> ResultHandlerCallback);

		[Token(Token = "0x60019E4")]
		void ResetAchievement(AchievementObject achievement, Action<bool, string> ResultHandlerCallback);

		[Token(Token = "0x60019E5")]
		void ResetAllAchievements(Action<bool, string> ResultHandlerCallback);

		[Token(Token = "0x60019E6")]
		void LoadAchievements(Action<bool, string> ResultHandlerCallback);
	}
	[Token(Token = "0x2000844")]
	public abstract class AchievementPlatformSupportBase : IAchievementPlatformSupport
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2754C", Offset = "0xB2754C")]
		private bool <supportsAuthentication>k__BackingField;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2755C", Offset = "0xB2755C")]
		private bool <supportsReportingAchievements>k__BackingField;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2756C", Offset = "0xB2756C")]
		private bool <supportsResettingAchievements>k__BackingField;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2757C", Offset = "0xB2757C")]
		private bool <supportsLoadingAchievements>k__BackingField;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2758C", Offset = "0xB2758C")]
		private AchievementPlatformType <type>k__BackingField;

		[Token(Token = "0x17000251")]
		public bool supportsAuthentication
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x102DF88", Offset = "0x102DF88", VA = "0x102DF88", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB317F0", Offset = "0xB317F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x102DF90", Offset = "0x102DF90", VA = "0x102DF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31800", Offset = "0xB31800")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public bool supportsReportingAchievements
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x102DF9C", Offset = "0x102DF9C", VA = "0x102DF9C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31810", Offset = "0xB31810")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x102DFA4", Offset = "0x102DFA4", VA = "0x102DFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31820", Offset = "0xB31820")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public bool supportsResettingAchievements
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x102DFB0", Offset = "0x102DFB0", VA = "0x102DFB0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31830", Offset = "0xB31830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x102DFB8", Offset = "0x102DFB8", VA = "0x102DFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31840", Offset = "0xB31840")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public bool supportsLoadingAchievements
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x102DFC4", Offset = "0x102DFC4", VA = "0x102DFC4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31850", Offset = "0xB31850")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x102DFCC", Offset = "0x102DFCC", VA = "0x102DFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31860", Offset = "0xB31860")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public AchievementPlatformType type
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x102DFD8", Offset = "0x102DFD8", VA = "0x102DFD8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31870", Offset = "0xB31870")]
			get
			{
				return default(AchievementPlatformType);
			}
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x102DFE0", Offset = "0x102DFE0", VA = "0x102DFE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31880", Offset = "0xB31880")]
			protected set
			{
			}
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x102DFE8", Offset = "0x102DFE8", VA = "0x102DFE8", Slot = "15")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x102DFEC", Offset = "0x102DFEC", VA = "0x102DFEC", Slot = "16")]
		public virtual void ReportAchievement(AchievementObject achievement, Action<bool, string> ResultHandlerCallback)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x102E064", Offset = "0x102E064", VA = "0x102E064", Slot = "17")]
		public virtual void ResetAchievement(AchievementObject achievement, Action<bool, string> ResultHandlerCallback)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x102E0DC", Offset = "0x102E0DC", VA = "0x102E0DC", Slot = "18")]
		public virtual void ResetAllAchievements(Action<bool, string> ResultHandlerCallback)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x102E154", Offset = "0x102E154", VA = "0x102E154", Slot = "19")]
		public virtual void LoadAchievements(Action<bool, string> ResultHandlerCallback)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x102E1CC", Offset = "0x102E1CC", VA = "0x102E1CC", Slot = "20")]
		public virtual void LogAllAchievements()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x102E1D0", Offset = "0x102E1D0", VA = "0x102E1D0")]
		protected AchievementPlatformSupportBase()
		{
		}
	}
	[Token(Token = "0x2000845")]
	public class AchievementPlatformSupport_Default : AchievementPlatformSupportBase
	{
		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x102E1D8", Offset = "0x102E1D8", VA = "0x102E1D8")]
		public AchievementPlatformSupport_Default()
		{
		}
	}
	[Token(Token = "0x2000846")]
	public class AchievementPlatformSupport_EGS : AchievementPlatformSupportBase
	{
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x102E200", Offset = "0x102E200", VA = "0x102E200")]
		public AchievementPlatformSupport_EGS()
		{
		}
	}
	[Token(Token = "0x2000847")]
	public class AchievementPlatformSupport_Gamecenter : AchievementPlatformSupportBase
	{
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x102E234", Offset = "0x102E234", VA = "0x102E234")]
		public AchievementPlatformSupport_Gamecenter()
		{
		}
	}
	[Token(Token = "0x2000848")]
	public class AchievementPlatformSupport_Playstation : AchievementPlatformSupportBase
	{
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x102E264", Offset = "0x102E264", VA = "0x102E264")]
		public AchievementPlatformSupport_Playstation()
		{
		}
	}
	[Token(Token = "0x2000849")]
	public class AchievementPlatformSupport_Steam : AchievementPlatformSupportBase
	{
		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x102E294", Offset = "0x102E294", VA = "0x102E294")]
		public AchievementPlatformSupport_Steam()
		{
		}
	}
	[Token(Token = "0x200084A")]
	public class AchievementPlatformSupport_Xbox : AchievementPlatformSupportBase
	{
		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x102E2C4", Offset = "0x102E2C4", VA = "0x102E2C4")]
		public AchievementPlatformSupport_Xbox()
		{
		}
	}
	[Token(Token = "0x200084B")]
	public class AuthenticationService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2759C", Offset = "0xB2759C")]
		private bool <IsAuthenticated>k__BackingField;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB275AC", Offset = "0xB275AC")]
		private bool <IsOffline>k__BackingField;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool autoAuthenticate;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<bool> onAuthenticationFinished;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IAuthenticationHandler authenticationHandler;

		[Token(Token = "0x17000256")]
		public override string Name
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x103996C", Offset = "0x103996C", VA = "0x103996C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public bool IsAuthenticated
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x10399B0", Offset = "0x10399B0", VA = "0x10399B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31890", Offset = "0xB31890")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0x10399B8", Offset = "0x10399B8", VA = "0x10399B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB318A0", Offset = "0xB318A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public bool IsOffline
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x10399C4", Offset = "0x10399C4", VA = "0x10399C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB318B0", Offset = "0xB318B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x10399CC", Offset = "0x10399CC", VA = "0x10399CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB318C0", Offset = "0xB318C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public string userID
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x10399D8", Offset = "0x10399D8", VA = "0x10399D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1039A38", Offset = "0x1039A38", VA = "0x1039A38")]
		public void CreateHandler(bool gogIsAvailable)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1039A9C", Offset = "0x1039A9C", VA = "0x1039A9C")]
		public void AddOnAuthenticatedListener(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1039B68", Offset = "0x1039B68", VA = "0x1039B68", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x1039B6C", Offset = "0x1039B6C", VA = "0x1039B6C", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x1039BC8", Offset = "0x1039BC8", VA = "0x1039BC8", Slot = "14")]
		public override void AfterAllInitialized()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x1039C04", Offset = "0x1039C04", VA = "0x1039C04")]
		public void Authenticate()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x1039D7C", Offset = "0x1039D7C", VA = "0x1039D7C")]
		private void HandleAuthenticateResult(bool result)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x1039E90", Offset = "0x1039E90", VA = "0x1039E90")]
		public AuthenticationService()
		{
		}
	}
	[Token(Token = "0x200084C")]
	public class DefaultAuthenticationHandler : IAuthenticationHandler
	{
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1125594", Offset = "0x1125594", VA = "0x1125594", Slot = "4")]
		public void Authenticate(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x11255F4", Offset = "0x11255F4", VA = "0x11255F4", Slot = "5")]
		public void LogUser()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x11255F8", Offset = "0x11255F8", VA = "0x11255F8")]
		public DefaultAuthenticationHandler()
		{
		}
	}
	[Token(Token = "0x200084D")]
	public class EGSAuthenticationHandler : IAuthenticationHandler
	{
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x112B43C", Offset = "0x112B43C", VA = "0x112B43C", Slot = "4")]
		public void Authenticate(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x112B49C", Offset = "0x112B49C", VA = "0x112B49C", Slot = "5")]
		public void LogUser()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x112B4A0", Offset = "0x112B4A0", VA = "0x112B4A0")]
		public EGSAuthenticationHandler()
		{
		}
	}
	[Token(Token = "0x200084E")]
	public class GamecenterAuthenticationHandler : IAuthenticationHandler
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<bool> onAuthenticatedCallback;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xFD1130", Offset = "0xFD1130", VA = "0xFD1130", Slot = "4")]
		public void Authenticate(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xFD11DC", Offset = "0xFD11DC", VA = "0xFD11DC", Slot = "5")]
		public void LogUser()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xFD11E0", Offset = "0xFD11E0", VA = "0xFD11E0")]
		private void HandleResultWithError(bool result, string errorMessage)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xFD12B8", Offset = "0xFD12B8", VA = "0xFD12B8")]
		public GamecenterAuthenticationHandler()
		{
		}
	}
	[Token(Token = "0x200084F")]
	public interface IAuthenticationHandler
	{
		[Token(Token = "0x6001A16")]
		void Authenticate(Action<bool> callback);

		[Token(Token = "0x6001A17")]
		void LogUser();
	}
	[Token(Token = "0x2000850")]
	public class OculusAuthenticationHandler : IAuthenticationHandler
	{
		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<bool> onAuthenticatedCallback;

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x2775BD0", Offset = "0x2775BD0", VA = "0x2775BD0", Slot = "4")]
		public void Authenticate(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x2775CBC", Offset = "0x2775CBC", VA = "0x2775CBC", Slot = "5")]
		public void LogUser()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x2775CC0", Offset = "0x2775CC0", VA = "0x2775CC0")]
		private void HandleIsUserEntitledCompleted(Message message)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x2775E04", Offset = "0x2775E04", VA = "0x2775E04")]
		public OculusAuthenticationHandler()
		{
		}
	}
	[Token(Token = "0x2000851")]
	public enum CloudSaveCheckDiffAnswer
	{
		[Token(Token = "0x40018C3")]
		NO_ANSWER,
		[Token(Token = "0x40018C4")]
		KEEP_LOCAL,
		[Token(Token = "0x40018C5")]
		KEEP_CLOUD
	}
	[Token(Token = "0x2000852")]
	public class CloudSaveService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x2000853")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDA8", Offset = "0xB1BDA8")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CloudSaveService <>4__this;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<CloudSaveCheckDiffAnswer> onFinishedCallback;

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x275E4F4", Offset = "0x275E4F4", VA = "0x275E4F4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x275E4FC", Offset = "0x275E4FC", VA = "0x275E4FC")]
			internal void <CheckForDiff>b__0(CloudSaveCheckDiffAnswer answer)
			{
			}
		}

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CloudSavePromptController promptController;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _authenticationSuccess;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB275BC", Offset = "0xB275BC")]
		private bool <IsOffline>k__BackingField;

		[Token(Token = "0x1700025A")]
		public override string Name
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xE3E410", Offset = "0xE3E410", VA = "0xE3E410", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public bool IsOffline
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xE3E454", Offset = "0xE3E454", VA = "0xE3E454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB318D0", Offset = "0xB318D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xE3E45C", Offset = "0xE3E45C", VA = "0xE3E45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB318E0", Offset = "0xB318E0")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xE3E468", Offset = "0xE3E468", VA = "0xE3E468", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xE3E46C", Offset = "0xE3E46C", VA = "0xE3E46C", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xE3E4D0", Offset = "0xE3E4D0", VA = "0xE3E4D0")]
		public void OnAuthenticationFinished(bool success)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xE3E4D4", Offset = "0xE3E4D4", VA = "0xE3E4D4")]
		public bool CheckOnlineOffline()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xE3E4DC", Offset = "0xE3E4DC", VA = "0xE3E4DC")]
		public static void DeleteAllCloudData(bool onlyGameCenterMatches = true, bool skipSettings = true)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xE3E4E0", Offset = "0xE3E4E0", VA = "0xE3E4E0")]
		private void OnKeyValueStoreChanged(List<object> obj)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xE3E4E4", Offset = "0xE3E4E4", VA = "0xE3E4E4")]
		internal void CheckForDiff(SaveGameData local, SaveGameData cloud, Action<CloudSaveCheckDiffAnswer> onFinishedCallback)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xE3E634", Offset = "0xE3E634", VA = "0xE3E634")]
		public CloudSaveService()
		{
		}
	}
	[Token(Token = "0x2000854")]
	public class GOGService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB275CC", Offset = "0xB275CC")]
		[SerializeField]
		private string gogClientID;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string gogClientSecret;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27628", Offset = "0xB27628")]
		private bool <IsGOGInitialized>k__BackingField;

		[Token(Token = "0x1700025C")]
		public override string Name
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xFCF010", Offset = "0xFCF010", VA = "0xFCF010", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public bool IsGOGInitialized
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xFCF054", Offset = "0xFCF054", VA = "0xFCF054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB318F0", Offset = "0xB318F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xFCF05C", Offset = "0xFCF05C", VA = "0xFCF05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31900", Offset = "0xB31900")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool IsGOGUserSignedIn
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xFCF068", Offset = "0xFCF068", VA = "0xFCF068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xFCF078", Offset = "0xFCF078", VA = "0xFCF078", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xFCF07C", Offset = "0xFCF07C", VA = "0xFCF07C", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xFCF070", Offset = "0xFCF070", VA = "0xFCF070")]
		private bool InternalIsGOGUserSignedIn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xFCF080", Offset = "0xFCF080", VA = "0xFCF080")]
		public GOGService()
		{
		}
	}
	[Token(Token = "0x2000855")]
	public enum GameInputMode
	{
		[Token(Token = "0x40018CF")]
		Menu,
		[Token(Token = "0x40018D0")]
		LookAt,
		[Token(Token = "0x40018D1")]
		Gameplay,
		[Token(Token = "0x40018D2")]
		None
	}
	[Token(Token = "0x2000856")]
	public enum GameInputPlatform
	{
		[Token(Token = "0x40018D4")]
		Auto,
		[Token(Token = "0x40018D5")]
		MouseKeyboardGamepad,
		[Token(Token = "0x40018D6")]
		Gamepad,
		[Token(Token = "0x40018D7")]
		GamepadKeyboard,
		[Token(Token = "0x40018D8")]
		Touch,
		[Token(Token = "0x40018D9")]
		TouchGamepad,
		[Token(Token = "0x40018DA")]
		AppleTV,
		[Token(Token = "0x40018DB")]
		Oculus
	}
	[Token(Token = "0x2000857")]
	public static class GameInputPlatformExtensions
	{
		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xFD0264", Offset = "0xFD0264", VA = "0xFD0264")]
		public static GameInputPlatform DetermineCurrentPlatform(this GameInputPlatform gameInputPlatform)
		{
			return default(GameInputPlatform);
		}
	}
	[Token(Token = "0x2000858")]
	public class GameInputPlatformSupport
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27638", Offset = "0xB27638")]
		private GameInputPlatform <GameInputPlatform>k__BackingField;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27648", Offset = "0xB27648")]
		private bool <PlatformSupportsTouch>k__BackingField;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27658", Offset = "0xB27658")]
		private bool <PlatformSupportsMouse>k__BackingField;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27668", Offset = "0xB27668")]
		private bool <PlatformSupportsGamepad>k__BackingField;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27678", Offset = "0xB27678")]
		private bool <PlatformSupportsKeyboard>k__BackingField;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27688", Offset = "0xB27688")]
		private bool <PlatformSupportsSiriRemote>k__BackingField;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27698", Offset = "0xB27698")]
		private bool <PlatformSupportsXRController>k__BackingField;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB276A8", Offset = "0xB276A8")]
		private bool <PlatformRequiresNavigation>k__BackingField;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB276B8", Offset = "0xB276B8")]
		private bool <PlatformRequiresCombinedCancelPauseButton>k__BackingField;

		[Token(Token = "0x1700025F")]
		public GameInputPlatform GameInputPlatform
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xFD02D0", Offset = "0xFD02D0", VA = "0xFD02D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31920", Offset = "0xB31920")]
			get
			{
				return default(GameInputPlatform);
			}
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xFD02D8", Offset = "0xFD02D8", VA = "0xFD02D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31930", Offset = "0xB31930")]
			private set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public bool PlatformSupportsTouch
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xFD02E0", Offset = "0xFD02E0", VA = "0xFD02E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31940", Offset = "0xB31940")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xFD02E8", Offset = "0xFD02E8", VA = "0xFD02E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31950", Offset = "0xB31950")]
			private set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public bool PlatformSupportsMouse
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xFD02F4", Offset = "0xFD02F4", VA = "0xFD02F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31960", Offset = "0xB31960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xFD02FC", Offset = "0xFD02FC", VA = "0xFD02FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31970", Offset = "0xB31970")]
			private set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public bool PlatformSupportsGamepad
		{
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xFD0308", Offset = "0xFD0308", VA = "0xFD0308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31980", Offset = "0xB31980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xFD0310", Offset = "0xFD0310", VA = "0xFD0310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31990", Offset = "0xB31990")]
			private set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public bool PlatformSupportsKeyboard
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xFD031C", Offset = "0xFD031C", VA = "0xFD031C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319A0", Offset = "0xB319A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xFD0324", Offset = "0xFD0324", VA = "0xFD0324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319B0", Offset = "0xB319B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool PlatformSupportsSiriRemote
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xFD0330", Offset = "0xFD0330", VA = "0xFD0330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319C0", Offset = "0xB319C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xFD0338", Offset = "0xFD0338", VA = "0xFD0338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319D0", Offset = "0xB319D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public bool PlatformSupportsXRController
		{
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xFD0344", Offset = "0xFD0344", VA = "0xFD0344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319E0", Offset = "0xB319E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xFD034C", Offset = "0xFD034C", VA = "0xFD034C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319F0", Offset = "0xB319F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public bool PlatformRequiresNavigation
		{
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xFD0358", Offset = "0xFD0358", VA = "0xFD0358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A00", Offset = "0xB31A00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xFD0360", Offset = "0xFD0360", VA = "0xFD0360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A10", Offset = "0xB31A10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public bool PlatformRequiresCombinedCancelPauseButton
		{
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xFD036C", Offset = "0xFD036C", VA = "0xFD036C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A20", Offset = "0xB31A20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xFD0374", Offset = "0xFD0374", VA = "0xFD0374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A30", Offset = "0xB31A30")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xFD0380", Offset = "0xFD0380", VA = "0xFD0380")]
		public void Init(GameInputPlatform gameInputPlatform)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xFD0420", Offset = "0xFD0420", VA = "0xFD0420")]
		public void ForceNavigationRequiredSupported()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xFD042C", Offset = "0xFD042C", VA = "0xFD042C")]
		public void DbgLog()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xFD0430", Offset = "0xFD0430", VA = "0xFD0430")]
		public GameInputPlatformSupport()
		{
		}
	}
	[Token(Token = "0x2000859")]
	public class InputService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x200085A")]
		public enum NavigationType
		{
			[Token(Token = "0x40018FC")]
			None,
			[Token(Token = "0x40018FD")]
			Gamepad,
			[Token(Token = "0x40018FE")]
			Pointer
		}

		[Token(Token = "0x200085B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDC8", Offset = "0xB1BDC8")]
		private sealed class <Start>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6C")]
				[Address(RVA = "0xF1BF64", Offset = "0xF1BF64", VA = "0xF1BF64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A6E")]
				[Address(RVA = "0xF1BFAC", Offset = "0xF1BFAC", VA = "0xF1BFAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xF1BEB4", Offset = "0xF1BEB4", VA = "0xF1BEB4")]
			[DebuggerHidden]
			public <Start>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xF1BEE0", Offset = "0xF1BEE0", VA = "0xF1BEE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xF1BEE4", Offset = "0xF1BEE4", VA = "0xF1BEE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xF1BF6C", Offset = "0xF1BF6C", VA = "0xF1BF6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200085C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDD8", Offset = "0xB1BDD8")]
		private sealed class <InitServiceCoroutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputService <>4__this;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A72")]
				[Address(RVA = "0xF1BE64", Offset = "0xF1BE64", VA = "0xF1BE64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A74")]
				[Address(RVA = "0xF1BEAC", Offset = "0xF1BEAC", VA = "0xF1BEAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0xF1B9DC", Offset = "0xF1B9DC", VA = "0xF1B9DC")]
			[DebuggerHidden]
			public <InitServiceCoroutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xF1BA08", Offset = "0xF1BA08", VA = "0xF1BA08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xF1BA0C", Offset = "0xF1BA0C", VA = "0xF1BA0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xF1BE6C", Offset = "0xF1BE6C", VA = "0xF1BE6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200085D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDE8", Offset = "0xB1BDE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__67_0;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__67_1;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__67_2;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__67_3;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__67_4;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__67_5;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action <>9__67_6;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action <>9__67_7;

			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xF1B9B4", Offset = "0xF1B9B4", VA = "0xF1B9B4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xF1B9BC", Offset = "0xF1B9BC", VA = "0xF1B9BC")]
			internal void <.ctor>b__67_0()
			{
			}

			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xF1B9C0", Offset = "0xF1B9C0", VA = "0xF1B9C0")]
			internal void <.ctor>b__67_1()
			{
			}

			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xF1B9C4", Offset = "0xF1B9C4", VA = "0xF1B9C4")]
			internal void <.ctor>b__67_2()
			{
			}

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xF1B9C8", Offset = "0xF1B9C8", VA = "0xF1B9C8")]
			internal void <.ctor>b__67_3()
			{
			}

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xF1B9CC", Offset = "0xF1B9CC", VA = "0xF1B9CC")]
			internal void <.ctor>b__67_4()
			{
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xF1B9D0", Offset = "0xF1B9D0", VA = "0xF1B9D0")]
			internal void <.ctor>b__67_5()
			{
			}

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xF1B9D4", Offset = "0xF1B9D4", VA = "0xF1B9D4")]
			internal void <.ctor>b__67_6()
			{
			}

			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xF1B9D8", Offset = "0xF1B9D8", VA = "0xF1B9D8")]
			internal void <.ctor>b__67_7()
			{
			}
		}

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB276C8", Offset = "0xB276C8")]
		public InputMiddleware inputMiddlewarePrefab;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public HitchhikerPlayerActions playerActionsPrefab;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27724", Offset = "0xB27724")]
		[SerializeField]
		private GameInputPlatform _gameInputPlatform;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool forceOnlyOneEventSystem;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27780", Offset = "0xB27780")]
		[SerializeField]
		private bool _forceNavigationFocusInEditor;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameInputPlatformSupport platformSupport;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB277CC", Offset = "0xB277CC")]
		private NavigationType <LastNavigationType>k__BackingField;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NavigationRequestHandler navigationRequestHandler;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB277DC", Offset = "0xB277DC")]
		private InputMiddleware <InputMiddleware>k__BackingField;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB277EC", Offset = "0xB277EC")]
		private HitchhikerPlayerActions <PlayerActions>k__BackingField;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB277FC", Offset = "0xB277FC")]
		private GameInputMode <GameInputMode>k__BackingField;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2780C", Offset = "0xB2780C")]
		[SerializeField]
		private PlayerCameraConfig _playerCameraConfig;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27858", Offset = "0xB27858")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isAwoken;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action onSwitchedToPointerNavigation;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action onSwitchedToGamepadNavigation;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action onNavigationMovePressed;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action onNavigationMoveReleased;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action onNavigationSubmitPressed;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action onNavigationSubmitReleased;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action onNavigationCancelPressed;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action onNavigationCancelReleased;

		[Token(Token = "0x17000268")]
		public NavigationType LastNavigationType
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x1279F9C", Offset = "0x1279F9C", VA = "0x1279F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A40", Offset = "0xB31A40")]
			get
			{
				return default(NavigationType);
			}
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x1279FA4", Offset = "0x1279FA4", VA = "0x1279FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A50", Offset = "0xB31A50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public InputMiddleware InputMiddleware
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x1279FAC", Offset = "0x1279FAC", VA = "0x1279FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A60", Offset = "0xB31A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x1279FB4", Offset = "0x1279FB4", VA = "0x1279FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A70", Offset = "0xB31A70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public HitchhikerPlayerActions PlayerActions
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x1279FBC", Offset = "0x1279FBC", VA = "0x1279FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A80", Offset = "0xB31A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x1279FC4", Offset = "0x1279FC4", VA = "0x1279FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A90", Offset = "0xB31A90")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public GameInputMode GameInputMode
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x1279FCC", Offset = "0x1279FCC", VA = "0x1279FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31AA0", Offset = "0xB31AA0")]
			get
			{
				return default(GameInputMode);
			}
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x1279FD4", Offset = "0x1279FD4", VA = "0x1279FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31AB0", Offset = "0xB31AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public GameInputPlatform GameInputPlatform
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x1279FDC", Offset = "0x1279FDC", VA = "0x1279FDC")]
			get
			{
				return default(GameInputPlatform);
			}
		}

		[Token(Token = "0x1700026D")]
		public GameInputPlatformSupport GameInputPlatformSupport
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x1279FE4", Offset = "0x1279FE4", VA = "0x1279FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public bool PlatformSupportsMouse
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x1279FEC", Offset = "0x1279FEC", VA = "0x1279FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026F")]
		public bool PlatformRequiresNavigation
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x127A008", Offset = "0x127A008", VA = "0x127A008")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		public bool PlatformRequiresCombinedCancelPauseButton
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x127A024", Offset = "0x127A024", VA = "0x127A024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		public InputSource LastInputType
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x126B234", Offset = "0x126B234", VA = "0x126B234")]
			get
			{
				return default(InputSource);
			}
		}

		[Token(Token = "0x17000272")]
		public PlayerCameraConfig PlayerCameraConfig
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x127A040", Offset = "0x127A040", VA = "0x127A040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x127A048", Offset = "0x127A048", VA = "0x127A048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31AC0", Offset = "0xB31AC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x127A050", Offset = "0x127A050", VA = "0x127A050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31AD0", Offset = "0xB31AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public override string Name
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x127A05C", Offset = "0x127A05C", VA = "0x127A05C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x127A0A0", Offset = "0x127A0A0", VA = "0x127A0A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31AE0", Offset = "0xB31AE0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x127A0FC", Offset = "0x127A0FC", VA = "0x127A0FC", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x127A130", Offset = "0x127A130", VA = "0x127A130", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31B40", Offset = "0xB31B40")]
		public override IEnumerator InitServiceCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x127A1A8", Offset = "0x127A1A8", VA = "0x127A1A8", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x127A32C", Offset = "0x127A32C", VA = "0x127A32C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x127A81C", Offset = "0x127A81C", VA = "0x127A81C")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x127A844", Offset = "0x127A844", VA = "0x127A844")]
		public void SetGameInputMode(GameInputMode gameInputMode)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x127A85C", Offset = "0x127A85C", VA = "0x127A85C")]
		private void OnLastInputSourceChanged(InputSource lastInputSource)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x127A374", Offset = "0x127A374", VA = "0x127A374")]
		private void UpdateNavigation()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x127AA90", Offset = "0x127AA90", VA = "0x127AA90")]
		public void PushNavigationRequest(Selectable selectable, int frameDelay = 0)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x127AAAC", Offset = "0x127AAAC", VA = "0x127AAAC")]
		public void EnterSelectableGroup(SelectableGroup selectableGroup, SelectableGroup.EnterFlags extraFlags = SelectableGroup.EnterFlags.None, int frameDelay = 0)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x127A890", Offset = "0x127A890", VA = "0x127A890")]
		private void SetLastNavigationType(NavigationType lastNavigationType)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x127ABC0", Offset = "0x127ABC0", VA = "0x127ABC0")]
		public void ForceMiddlewareEventSystemActive()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x127AC00", Offset = "0x127AC00", VA = "0x127AC00")]
		public InputService()
		{
		}
	}
	[Token(Token = "0x200085E")]
	public class NavigationRequestHandler
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27868", Offset = "0xB27868")]
		private bool <HasPendingNavigationRequest>k__BackingField;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27878", Offset = "0xB27878")]
		private Selectable <PendingNavigationRequest>k__BackingField;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27888", Offset = "0xB27888")]
		private int <PendingNavigationRequestPriority>k__BackingField;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27898", Offset = "0xB27898")]
		private int <PendingNavigationRequestTargetFrame>k__BackingField;

		[Token(Token = "0x17000279")]
		public bool HasPendingNavigationRequest
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x182DA60", Offset = "0x182DA60", VA = "0x182DA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31C40", Offset = "0xB31C40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x182DA68", Offset = "0x182DA68", VA = "0x182DA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31C50", Offset = "0xB31C50")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public Selectable PendingNavigationRequest
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x182DA74", Offset = "0x182DA74", VA = "0x182DA74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31C60", Offset = "0xB31C60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x182DA7C", Offset = "0x182DA7C", VA = "0x182DA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31C70", Offset = "0xB31C70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public int PendingNavigationRequestPriority
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x182DA84", Offset = "0x182DA84", VA = "0x182DA84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31C80", Offset = "0xB31C80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x182DA8C", Offset = "0x182DA8C", VA = "0x182DA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31C90", Offset = "0xB31C90")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public int PendingNavigationRequestTargetFrame
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x182DA94", Offset = "0x182DA94", VA = "0x182DA94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31CA0", Offset = "0xB31CA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x182DA9C", Offset = "0x182DA9C", VA = "0x182DA9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31CB0", Offset = "0xB31CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x182DAA4", Offset = "0x182DAA4", VA = "0x182DAA4")]
		public void PushNavigationRequest(int requestPrio, Selectable selectable, int frameDelay = 0)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x182DB08", Offset = "0x182DB08", VA = "0x182DB08")]
		public void PushNavigationRequest(Selectable selectable, int frameDelay = 0)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x182DB1C", Offset = "0x182DB1C", VA = "0x182DB1C")]
		public void ApplyNavigationRequest()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x182DDC8", Offset = "0x182DDC8", VA = "0x182DDC8")]
		public void ClearNavigationRequest()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x182DE00", Offset = "0x182DE00", VA = "0x182DE00")]
		public NavigationRequestHandler()
		{
		}
	}
	[Token(Token = "0x200085F")]
	public class AxisBasedButtonPress
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool curPressed;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool oldPressed;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float pressedThreshold;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool trackNegativeAxis;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB278A8", Offset = "0xB278A8")]
		private bool <WasPressed>k__BackingField;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB278B8", Offset = "0xB278B8")]
		private bool <WasReleased>k__BackingField;

		[Token(Token = "0x1700027D")]
		public bool WasPressed
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x103B47C", Offset = "0x103B47C", VA = "0x103B47C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31CC0", Offset = "0xB31CC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x103B484", Offset = "0x103B484", VA = "0x103B484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31CD0", Offset = "0xB31CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public bool WasReleased
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x103B490", Offset = "0x103B490", VA = "0x103B490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31CE0", Offset = "0xB31CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x103B498", Offset = "0x103B498", VA = "0x103B498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31CF0", Offset = "0xB31CF0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x103B4A4", Offset = "0x103B4A4", VA = "0x103B4A4")]
		public AxisBasedButtonPress(float pressedThreshold, bool trackNegativeAxis = false)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x103B4E4", Offset = "0x103B4E4", VA = "0x103B4E4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x103B4F0", Offset = "0x103B4F0", VA = "0x103B4F0")]
		public void Update(float newState)
		{
		}
	}
	[Token(Token = "0x2000860")]
	public abstract class HitchhikerPlayerActions : MonoBehaviour
	{
		[Token(Token = "0x2000861")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDF8", Offset = "0xB1BDF8")]
		private sealed class <EnumerateAnySkipInput>d__86 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x17000282")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001AB8")]
				[Address(RVA = "0xF17C0C", Offset = "0xF17C0C", VA = "0xF17C0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000283")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ABA")]
				[Address(RVA = "0xF17C54", Offset = "0xF17C54", VA = "0xF17C54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xF17A78", Offset = "0xF17A78", VA = "0xF17A78")]
			[DebuggerHidden]
			public <EnumerateAnySkipInput>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xF17AA4", Offset = "0xF17AA4", VA = "0xF17AA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xF17AA8", Offset = "0xF17AA8", VA = "0xF17AA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xF17C14", Offset = "0xF17C14", VA = "0xF17C14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000862")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE08", Offset = "0xB1BE08")]
		private sealed class <EnumerateLookAroundActions>d__87 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x17000284")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001ABE")]
				[Address(RVA = "0xF18344", Offset = "0xF18344", VA = "0xF18344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC0")]
				[Address(RVA = "0xF1838C", Offset = "0xF1838C", VA = "0xF1838C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xF181D8", Offset = "0xF181D8", VA = "0xF181D8")]
			[DebuggerHidden]
			public <EnumerateLookAroundActions>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xF18204", Offset = "0xF18204", VA = "0xF18204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xF18208", Offset = "0xF18208", VA = "0xF18208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xF1834C", Offset = "0xF1834C", VA = "0xF1834C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000863")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE18", Offset = "0xB1BE18")]
		private sealed class <EnumeratePlayerChoiceActions>d__88 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x17000286")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001AC4")]
				[Address(RVA = "0xF188F0", Offset = "0xF188F0", VA = "0xF188F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000287")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC6")]
				[Address(RVA = "0xF18938", Offset = "0xF18938", VA = "0xF18938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0xF187FC", Offset = "0xF187FC", VA = "0xF187FC")]
			[DebuggerHidden]
			public <EnumeratePlayerChoiceActions>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xF18828", Offset = "0xF18828", VA = "0xF18828", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xF1882C", Offset = "0xF1882C", VA = "0xF1882C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xF188F8", Offset = "0xF188F8", VA = "0xF188F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE28", Offset = "0xB1BE28")]
		private sealed class <EnumerateMenuActions>d__89 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x17000288")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001ACA")]
				[Address(RVA = "0xF185F0", Offset = "0xF185F0", VA = "0xF185F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ACC")]
				[Address(RVA = "0xF18638", Offset = "0xF18638", VA = "0xF18638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xF18528", Offset = "0xF18528", VA = "0xF18528")]
			[DebuggerHidden]
			public <EnumerateMenuActions>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xF18554", Offset = "0xF18554", VA = "0xF18554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xF18558", Offset = "0xF18558", VA = "0xF18558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xF185F8", Offset = "0xF185F8", VA = "0xF185F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000865")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE38", Offset = "0xB1BE38")]
		private sealed class <EnumerateNavigationActions>d__90 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x1700028A")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001AD0")]
				[Address(RVA = "0xF187AC", Offset = "0xF187AC", VA = "0xF187AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AD2")]
				[Address(RVA = "0xF187F4", Offset = "0xF187F4", VA = "0xF187F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xF18640", Offset = "0xF18640", VA = "0xF18640")]
			[DebuggerHidden]
			public <EnumerateNavigationActions>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xF1866C", Offset = "0xF1866C", VA = "0xF1866C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xF18670", Offset = "0xF18670", VA = "0xF18670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xF187B4", Offset = "0xF187B4", VA = "0xF187B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000866")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE48", Offset = "0xB1BE48")]
		private sealed class <EnumerateLookAtActions>d__91 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x1700028C")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001AD6")]
				[Address(RVA = "0xF184D8", Offset = "0xF184D8", VA = "0xF184D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AD8")]
				[Address(RVA = "0xF18520", Offset = "0xF18520", VA = "0xF18520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xF18394", Offset = "0xF18394", VA = "0xF18394")]
			[DebuggerHidden]
			public <EnumerateLookAtActions>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xF183C0", Offset = "0xF183C0", VA = "0xF183C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xF183C4", Offset = "0xF183C4", VA = "0xF183C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xF184E0", Offset = "0xF184E0", VA = "0xF184E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000867")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE58", Offset = "0xB1BE58")]
		private sealed class <EnumerateCheatActions>d__92 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x1700028E")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001ADC")]
				[Address(RVA = "0xF17FF4", Offset = "0xF17FF4", VA = "0xF17FF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ADE")]
				[Address(RVA = "0xF1803C", Offset = "0xF1803C", VA = "0xF1803C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xF17C5C", Offset = "0xF17C5C", VA = "0xF17C5C")]
			[DebuggerHidden]
			public <EnumerateCheatActions>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xF17C88", Offset = "0xF17C88", VA = "0xF17C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xF17C8C", Offset = "0xF17C8C", VA = "0xF17C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xF17FFC", Offset = "0xF17FFC", VA = "0xF17FFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE68", Offset = "0xB1BE68")]
		private sealed class <EnumerateCheatPointerActions>d__93 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x17000290")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001AE2")]
				[Address(RVA = "0xF18188", Offset = "0xF18188", VA = "0xF18188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000291")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AE4")]
				[Address(RVA = "0xF181D0", Offset = "0xF181D0", VA = "0xF181D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xF18044", Offset = "0xF18044", VA = "0xF18044")]
			[DebuggerHidden]
			public <EnumerateCheatPointerActions>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xF18070", Offset = "0xF18070", VA = "0xF18070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xF18074", Offset = "0xF18074", VA = "0xF18074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xF18190", Offset = "0xF18190", VA = "0xF18190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000869")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE78", Offset = "0xB1BE78")]
		private sealed class <EnumerateActions>d__94 : IEnumerator<IPlayerAction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IPlayerAction <>2__current;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool lookAround;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HitchhikerPlayerActions <>4__this;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool playerChoice;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool menu;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool navigation;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
			public bool lookAt;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<IPlayerAction> <enumerator>5__2;

			[Token(Token = "0x17000292")]
			private IPlayerAction System.Collections.Generic.IEnumerator<HitchHiker.IPlayerAction>.Current
			{
				[Token(Token = "0x6001AE8")]
				[Address(RVA = "0xF17A28", Offset = "0xF17A28", VA = "0xF17A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000293")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AEA")]
				[Address(RVA = "0xF17A70", Offset = "0xF17A70", VA = "0xF17A70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xF17300", Offset = "0xF17300", VA = "0xF17300")]
			[DebuggerHidden]
			public <EnumerateActions>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xF1732C", Offset = "0xF1732C", VA = "0xF1732C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xF17330", Offset = "0xF17330", VA = "0xF17330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xF17A30", Offset = "0xF17A30", VA = "0xF17A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected InputService inputService;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IPlayerActionSet masterActionSet;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IPlayerAction genericSkipAction;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IPlayerActionTwoAxis cameraLook;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IPlayerAction cameraLookRight;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IPlayerAction cameraLookLeft;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IPlayerAction cameraLookUp;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IPlayerAction cameraLookDown;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IPlayerAction switchCursorLock;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IPlayerAction playerChoiceUp;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IPlayerAction playerChoiceDown;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IPlayerActionTwoAxis playerChoiceSelect;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IPlayerAction interaction;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IPlayerAction cancel;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IPlayerAction pause;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IPlayerAction xboxLogin;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IPlayerAction xboxCheatAchievement;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IPlayerActionTwoAxis navigationMove;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IPlayerAction navigationMoveLeft;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public IPlayerAction navigationMoveRight;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public IPlayerAction navigationMoveUp;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public IPlayerAction navigationMoveDown;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IPlayerAction navigationSubmit;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public IPlayerAction navigationCancel;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public IPlayerActionTwoAxis lookAtRotate;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public IPlayerAction lookAtRotateLeft;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public IPlayerAction lookAtRotateRight;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public IPlayerAction lookAtRotateUp;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public IPlayerAction lookAtRotateDown;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public IPlayerAction lookAtEnableRotation;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public IPlayerAction cheatsToggleCheatMenu;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public IPlayerAction cheatsToggleUI;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public IPlayerAction cheatsJumpToNextCheckpoint;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public IPlayerAction cheatsSkipNode;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public IPlayerAction cheatsFastForwardDriving;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public IPlayerAction cheatsCycleQualitySettings;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public IPlayerAction cheatsCycleFontScaling;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public IPlayerAction cheatsSwitchCamera1;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public IPlayerAction cheatsSwitchCamera2;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public IPlayerAction cheatsSwitchToNextCamera;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public IPlayerAction cheatsSwitchToPrevCamera;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public IPlayerAction cheatsPauseEditor;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public IPlayerAction cheatsIndex0;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public IPlayerAction cheatsIndex1;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public IPlayerAction cheatsIndex2;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public IPlayerAction cheatsIndex3;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public IPlayerAction cheatsIndex4;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public IPlayerAction cheatsIndex5;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public IPlayerAction cheatsIndex6;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public IPlayerAction cheatsIndex7;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public IPlayerAction cheatsIndex8;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public IPlayerAction cheatsIndex9;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public IPlayerActionTwoAxis cheatsPointer;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public IPlayerAction cheatsPointerLeft;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public IPlayerAction cheatsPointerRight;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public IPlayerAction cheatsPointerUp;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public IPlayerAction cheatsPointerDown;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public IPlayerAction cheatsPointerClick;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public IPlayerAction cheatsPointerScroll;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public IPlayerActionTwoAxis dummyNavigationMove;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public IPlayerAction dummyNavigationMoveLeft;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public IPlayerAction dummyNavigationMoveRight;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public IPlayerAction dummyNavigationMoveUp;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public IPlayerAction dummyNavigationMoveDown;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public IPlayerAction dummyNavigationSubmit;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public IPlayerAction dummyNavigationCancel;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public IPlayerAction deviceTypeChangeAction;

		[Token(Token = "0x1700027F")]
		protected InputMiddleware inputMiddleware
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x126C9A8", Offset = "0x126C9A8", VA = "0x126C9A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		protected GameInputPlatform gameInputPlatform
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x126C9C4", Offset = "0x126C9C4", VA = "0x126C9C4")]
			get
			{
				return default(GameInputPlatform);
			}
		}

		[Token(Token = "0x17000281")]
		protected GameInputPlatformSupport platformSupport
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x126C9E0", Offset = "0x126C9E0", VA = "0x126C9E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A96")]
		public abstract void CreateActions();

		[Token(Token = "0x6001A97")]
		public abstract void AddSkipBindings();

		[Token(Token = "0x6001A98")]
		public abstract void AddMouseBindings();

		[Token(Token = "0x6001A99")]
		public abstract void AddKeyboardBindings();

		[Token(Token = "0x6001A9A")]
		public abstract void AddGamepadBindings();

		[Token(Token = "0x6001A9B")]
		public abstract void AddTouchBindings();

		[Token(Token = "0x6001A9C")]
		public abstract void AddSiriRemoteBindings();

		[Token(Token = "0x6001A9D")]
		public abstract void AddXRControllerBindings();

		[Token(Token = "0x6001A9E")]
		protected abstract void FinalizeBindings();

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x126C9FC", Offset = "0x126C9FC", VA = "0x126C9FC", Slot = "13")]
		public virtual void Init(InputService inputService)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x126CAC8", Offset = "0x126CAC8", VA = "0x126CAC8")]
		public void Deinit()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x126CBF4", Offset = "0x126CBF4", VA = "0x126CBF4")]
		public void SetupBindings()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x126CD54", Offset = "0x126CD54", VA = "0x126CD54")]
		public void SetGameInputMode(GameInputMode gameInputMode)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x126DD78", Offset = "0x126DD78", VA = "0x126DD78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31D00", Offset = "0xB31D00")]
		public IEnumerator<IPlayerAction> EnumerateAnySkipInput()
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x126D764", Offset = "0x126D764", VA = "0x126D764")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31D60", Offset = "0xB31D60")]
		public IEnumerator<IPlayerAction> EnumerateLookAroundActions()
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x126D9FC", Offset = "0x126D9FC", VA = "0x126D9FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31DC0", Offset = "0xB31DC0")]
		public IEnumerator<IPlayerAction> EnumeratePlayerChoiceActions()
		{
			return null;
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x126DA74", Offset = "0x126DA74", VA = "0x126DA74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31E20", Offset = "0xB31E20")]
		public IEnumerator<IPlayerAction> EnumerateMenuActions()
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x126DAEC", Offset = "0x126DAEC", VA = "0x126DAEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31E80", Offset = "0xB31E80")]
		public IEnumerator<IPlayerAction> EnumerateNavigationActions()
		{
			return null;
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x126DB64", Offset = "0x126DB64", VA = "0x126DB64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31EE0", Offset = "0xB31EE0")]
		public IEnumerator<IPlayerAction> EnumerateLookAtActions()
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x126DBDC", Offset = "0x126DBDC", VA = "0x126DBDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31F40", Offset = "0xB31F40")]
		public IEnumerator<IPlayerAction> EnumerateCheatActions()
		{
			return null;
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x126DDF0", Offset = "0x126DDF0", VA = "0x126DDF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB31FA0", Offset = "0xB31FA0")]
		public IEnumerator<IPlayerAction> EnumerateCheatPointerActions()
		{
			return null;
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x126DE68", Offset = "0x126DE68", VA = "0x126DE68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32000", Offset = "0xB32000")]
		public IEnumerator<IPlayerAction> EnumerateActions(bool lookAround = true, bool playerChoice = true, bool menu = true, bool navigation = true, bool lookAt = true, bool cheats = true, bool cheatsPointer = true)
		{
			return null;
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x126D7DC", Offset = "0x126D7DC", VA = "0x126D7DC")]
		public void EnableActions(bool state, params IEnumerator<IPlayerAction>[] enumerators)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x126DC54", Offset = "0x126DC54", VA = "0x126DC54")]
		public void EnableActions(bool state, params IPlayerAction[] actions)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x126DF34", Offset = "0x126DF34", VA = "0x126DF34")]
		public bool IsAnyInputPresent(params IEnumerator<IPlayerAction>[] enumerators)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x126E144", Offset = "0x126E144", VA = "0x126E144")]
		public bool WasAnyInputPressed(params IEnumerator<IPlayerAction>[] enumerators)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x126E350", Offset = "0x126E350", VA = "0x126E350")]
		public bool IsAnyInputPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x126E428", Offset = "0x126E428", VA = "0x126E428")]
		public bool WasAnyNavigationInputPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x126E4DC", Offset = "0x126E4DC", VA = "0x126E4DC")]
		public bool WasSkipInputPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x126E5A4", Offset = "0x126E5A4", VA = "0x126E5A4")]
		public bool WasSkipInputPressedOnValidDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x126E66C", Offset = "0x126E66C", VA = "0x126E66C")]
		protected HitchhikerPlayerActions()
		{
		}
	}
	[Token(Token = "0x200086A")]
	public class HitchhikerPlayerActions_Dummy : HitchhikerPlayerActions
	{
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x126E674", Offset = "0x126E674", VA = "0x126E674")]
		public HitchhikerPlayerActions_Dummy()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x126E6E4", Offset = "0x126E6E4", VA = "0x126E6E4", Slot = "12")]
		protected override void FinalizeBindings()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x126E6E8", Offset = "0x126E6E8", VA = "0x126E6E8", Slot = "4")]
		public override void CreateActions()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x126F16C", Offset = "0x126F16C", VA = "0x126F16C", Slot = "5")]
		public override void AddSkipBindings()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x126F170", Offset = "0x126F170", VA = "0x126F170", Slot = "6")]
		public override void AddMouseBindings()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x126F174", Offset = "0x126F174", VA = "0x126F174", Slot = "7")]
		public override void AddKeyboardBindings()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x126F178", Offset = "0x126F178", VA = "0x126F178", Slot = "8")]
		public override void AddGamepadBindings()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x126F17C", Offset = "0x126F17C", VA = "0x126F17C", Slot = "9")]
		public override void AddTouchBindings()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x126F180", Offset = "0x126F180", VA = "0x126F180", Slot = "10")]
		public override void AddSiriRemoteBindings()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x126F184", Offset = "0x126F184", VA = "0x126F184", Slot = "11")]
		public override void AddXRControllerBindings()
		{
		}
	}
	[Token(Token = "0x200086B")]
	public class HitchhikerPlayerActions_InControl : HitchhikerPlayerActions
	{
		[Token(Token = "0x400197B")]
		private const InputControlType TVOS_BUTTON_PLAY_PAUSE = InputControlType.Pause;

		[Token(Token = "0x400197C")]
		private const InputControlType TVOS_BUTTON_TOUCH = InputControlType.Action1;

		[Token(Token = "0x400197D")]
		private const InputControlType TVOS_BUTTON_MENU = InputControlType.Action3;

		[Token(Token = "0x400197E")]
		private const InputControlType TVOS_AXIS_LEFT = InputControlType.LeftStickLeft;

		[Token(Token = "0x400197F")]
		private const InputControlType TVOS_AXIS_RIGHT = InputControlType.LeftStickRight;

		[Token(Token = "0x4001980")]
		private const InputControlType TVOS_AXIS_UP = InputControlType.LeftStickUp;

		[Token(Token = "0x4001981")]
		private const InputControlType TVOS_AXIS_DOWN = InputControlType.LeftStickDown;

		[Token(Token = "0x17000294")]
		private PlayerActionSet_InControl inControlActionSet
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x126F188", Offset = "0x126F188", VA = "0x126F188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		public InputMiddleware_InControl inControlInputMiddleware
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x126F208", Offset = "0x126F208", VA = "0x126F208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x126F294", Offset = "0x126F294", VA = "0x126F294")]
		public HitchhikerPlayerActions_InControl()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x126F304", Offset = "0x126F304", VA = "0x126F304", Slot = "12")]
		protected override void FinalizeBindings()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x126F470", Offset = "0x126F470", VA = "0x126F470", Slot = "4")]
		public override void CreateActions()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x12708E8", Offset = "0x12708E8", VA = "0x12708E8", Slot = "5")]
		public override void AddSkipBindings()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x1271158", Offset = "0x1271158", VA = "0x1271158", Slot = "6")]
		public override void AddMouseBindings()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x127169C", Offset = "0x127169C", VA = "0x127169C", Slot = "7")]
		public override void AddKeyboardBindings()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1272540", Offset = "0x1272540", VA = "0x1272540", Slot = "8")]
		public override void AddGamepadBindings()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1272F7C", Offset = "0x1272F7C", VA = "0x1272F7C", Slot = "9")]
		public override void AddTouchBindings()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x12732CC", Offset = "0x12732CC", VA = "0x12732CC", Slot = "10")]
		public override void AddSiriRemoteBindings()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x12739F8", Offset = "0x12739F8", VA = "0x12739F8", Slot = "11")]
		public override void AddXRControllerBindings()
		{
		}
	}
	[Token(Token = "0x200086C")]
	public class HitchhikerPlayerActions_Unity : HitchhikerPlayerActions
	{
		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		public InputActionAsset unityActionAsset;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private string mouseBindingsScheme;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private string keyboardBindingsScheme;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private string gamepadBindingsScheme;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private string touchBindingsScheme;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private string siriRemoteBindingsScheme;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private string xrControllerBindingsScheme;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private List<string> supportedSchemes;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public IPlayerActionSet deviceChangeActionSet;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public IPlayerActionSet noisyActionSet;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public IPlayerActionSet xrLeftHandActionSet;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public IPlayerActionSet xrRightHandActionSet;

		[Token(Token = "0x17000296")]
		public InputMiddleware_Unity unityInputMiddleware
		{
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x12739FC", Offset = "0x12739FC", VA = "0x12739FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1273A88", Offset = "0x1273A88", VA = "0x1273A88", Slot = "13")]
		public override void Init(InputService inputService)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1273CCC", Offset = "0x1273CCC", VA = "0x1273CCC", Slot = "12")]
		protected override void FinalizeBindings()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1273D90", Offset = "0x1273D90", VA = "0x1273D90")]
		private void AddNonSensorSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1273E40", Offset = "0x1273E40", VA = "0x1273E40")]
		private void AddSensorSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x12740A4", Offset = "0x12740A4", VA = "0x12740A4", Slot = "4")]
		public override void CreateActions()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x1274F94", Offset = "0x1274F94", VA = "0x1274F94")]
		private PlayerActionSet_Unity FindMap(InputActionAsset actionAsset, string mapName)
		{
			return null;
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x127506C", Offset = "0x127506C", VA = "0x127506C")]
		private InputAction InternalFindAction(PlayerActionSet_Unity actionSet, string actionName)
		{
			return null;
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1274E04", Offset = "0x1274E04", VA = "0x1274E04")]
		private IPlayerAction FindAction(IPlayerActionSet actionSet, string actionName)
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1275364", Offset = "0x1275364", VA = "0x1275364")]
		private IPlayerActionOneAxis FindActionOneAxis(IPlayerActionSet actionSet, string actionName)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x1274ECC", Offset = "0x1274ECC", VA = "0x1274ECC")]
		private IPlayerActionTwoAxis FindActionTwoAxis(IPlayerActionSet actionSet, string actionName)
		{
			return null;
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x127542C", Offset = "0x127542C", VA = "0x127542C", Slot = "5")]
		public override void AddSkipBindings()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x1275430", Offset = "0x1275430", VA = "0x1275430", Slot = "6")]
		public override void AddMouseBindings()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x1275488", Offset = "0x1275488", VA = "0x1275488", Slot = "7")]
		public override void AddKeyboardBindings()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x12754E0", Offset = "0x12754E0", VA = "0x12754E0", Slot = "8")]
		public override void AddGamepadBindings()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1275538", Offset = "0x1275538", VA = "0x1275538", Slot = "9")]
		public override void AddTouchBindings()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1275590", Offset = "0x1275590", VA = "0x1275590", Slot = "10")]
		public override void AddSiriRemoteBindings()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x12755E8", Offset = "0x12755E8", VA = "0x12755E8", Slot = "11")]
		public override void AddXRControllerBindings()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x1275640", Offset = "0x1275640", VA = "0x1275640")]
		public HitchhikerPlayerActions_Unity()
		{
		}
	}
	[Token(Token = "0x200086D")]
	public interface IPlayerAction
	{
		[Token(Token = "0x17000297")]
		bool WasPressed
		{
			[Token(Token = "0x6001B14")]
			get;
		}

		[Token(Token = "0x17000298")]
		bool IsPressed
		{
			[Token(Token = "0x6001B15")]
			get;
		}

		[Token(Token = "0x17000299")]
		bool WasReleased
		{
			[Token(Token = "0x6001B16")]
			get;
		}

		[Token(Token = "0x1700029A")]
		bool IsEnabled
		{
			[Token(Token = "0x6001B17")]
			get;
		}

		[Token(Token = "0x1700029B")]
		bool HasBindings
		{
			[Token(Token = "0x6001B18")]
			get;
		}
	}
	[Token(Token = "0x200086E")]
	public interface IPlayerActionOneAxis : IPlayerAction
	{
		[Token(Token = "0x1700029C")]
		float Value
		{
			[Token(Token = "0x6001B19")]
			get;
		}
	}
	[Token(Token = "0x200086F")]
	public interface IPlayerActionTwoAxis : IPlayerAction
	{
		[Token(Token = "0x1700029D")]
		Vector2 Value
		{
			[Token(Token = "0x6001B1A")]
			get;
		}
	}
	[Token(Token = "0x2000870")]
	public interface IPlayerActionOverTime : IPlayerAction
	{
		[Token(Token = "0x1700029E")]
		bool WasStarted
		{
			[Token(Token = "0x6001B1B")]
			get;
		}

		[Token(Token = "0x1700029F")]
		bool IsPerforming
		{
			[Token(Token = "0x6001B1C")]
			get;
		}

		[Token(Token = "0x170002A0")]
		bool WasPerformed
		{
			[Token(Token = "0x6001B1D")]
			get;
		}

		[Token(Token = "0x170002A1")]
		bool WasCanceled
		{
			[Token(Token = "0x6001B1E")]
			get;
		}
	}
	[Token(Token = "0x2000871")]
	public interface IPlayerActionSet
	{
		[Token(Token = "0x170002A2")]
		bool IsEnabled
		{
			[Token(Token = "0x6001B1F")]
			get;
		}

		[Token(Token = "0x170002A3")]
		InputDeviceClass LastDeviceClass
		{
			[Token(Token = "0x6001B20")]
			get;
		}

		[Token(Token = "0x170002A4")]
		InputDeviceStyle LastDeviceStyle
		{
			[Token(Token = "0x6001B21")]
			get;
		}

		[Token(Token = "0x6001B22")]
		void Init();

		[Token(Token = "0x6001B23")]
		void Deinit();

		[Token(Token = "0x6001B24")]
		void EnablePlayerAction(IPlayerAction playerAction, bool state);

		[Token(Token = "0x6001B25")]
		void ClearInputState(IPlayerAction playerAction);

		[Token(Token = "0x6001B26")]
		void ClearAllInputState();
	}
	[Token(Token = "0x2000872")]
	public enum InputSource
	{
		[Token(Token = "0x400198F")]
		Unknown,
		[Token(Token = "0x4001990")]
		Keyboard,
		[Token(Token = "0x4001991")]
		Gamepad,
		[Token(Token = "0x4001992")]
		Mouse,
		[Token(Token = "0x4001993")]
		Touch,
		[Token(Token = "0x4001994")]
		XRController
	}
	[Token(Token = "0x2000873")]
	public enum InputDeviceClass
	{
		[Token(Token = "0x4001996")]
		Unknown,
		[Token(Token = "0x4001997")]
		Keyboard,
		[Token(Token = "0x4001998")]
		Mouse,
		[Token(Token = "0x4001999")]
		Controller,
		[Token(Token = "0x400199A")]
		Remote,
		[Token(Token = "0x400199B")]
		FlightStick,
		[Token(Token = "0x400199C")]
		TouchScreen,
		[Token(Token = "0x400199D")]
		XRController
	}
	[Token(Token = "0x2000874")]
	public enum InputDeviceStyle
	{
		[Token(Token = "0x400199F")]
		Unknown,
		[Token(Token = "0x40019A0")]
		Xbox360,
		[Token(Token = "0x40019A1")]
		XboxOne,
		[Token(Token = "0x40019A2")]
		PlayStation2,
		[Token(Token = "0x40019A3")]
		PlayStation3,
		[Token(Token = "0x40019A4")]
		PlayStation4,
		[Token(Token = "0x40019A5")]
		PlayStationVita,
		[Token(Token = "0x40019A6")]
		PlayStationMove,
		[Token(Token = "0x40019A7")]
		Ouya,
		[Token(Token = "0x40019A8")]
		Steam,
		[Token(Token = "0x40019A9")]
		AppleMFi,
		[Token(Token = "0x40019AA")]
		AmazonFireTV,
		[Token(Token = "0x40019AB")]
		NVIDIAShield,
		[Token(Token = "0x40019AC")]
		NintendoNES,
		[Token(Token = "0x40019AD")]
		NintendoSNES,
		[Token(Token = "0x40019AE")]
		Nintendo64,
		[Token(Token = "0x40019AF")]
		NintendoGameCube,
		[Token(Token = "0x40019B0")]
		NintendoWii,
		[Token(Token = "0x40019B1")]
		NintendoWiiU,
		[Token(Token = "0x40019B2")]
		NintendoSwitch,
		[Token(Token = "0x40019B3")]
		GoogleStadia,
		[Token(Token = "0x40019B4")]
		Vive,
		[Token(Token = "0x40019B5")]
		Oculus
	}
	[Token(Token = "0x2000875")]
	public abstract class InputMiddleware : MonoBehaviour
	{
		[Token(Token = "0x2000876")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE88", Offset = "0xB1BE88")]
		private sealed class <Init>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B47")]
				[Address(RVA = "0xF1A194", Offset = "0xF1A194", VA = "0xF1A194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B49")]
				[Address(RVA = "0xF1A1DC", Offset = "0xF1A1DC", VA = "0xF1A1DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xF1A14C", Offset = "0xF1A14C", VA = "0xF1A14C")]
			[DebuggerHidden]
			public <Init>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xF1A178", Offset = "0xF1A178", VA = "0xF1A178", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xF1A17C", Offset = "0xF1A17C", VA = "0xF1A17C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xF1A19C", Offset = "0xF1A19C", VA = "0xF1A19C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000877")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BE98", Offset = "0xB1BE98")]
		private sealed class <Deinit>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B4D")]
				[Address(RVA = "0xF1A0FC", Offset = "0xF1A0FC", VA = "0xF1A0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B4F")]
				[Address(RVA = "0xF1A144", Offset = "0xF1A144", VA = "0xF1A144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xF1A0B4", Offset = "0xF1A0B4", VA = "0xF1A0B4")]
			[DebuggerHidden]
			public <Deinit>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0xF1A0E0", Offset = "0xF1A0E0", VA = "0xF1A0E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xF1A0E4", Offset = "0xF1A0E4", VA = "0xF1A0E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xF1A104", Offset = "0xF1A104", VA = "0xF1A104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BEA8", Offset = "0xB1BEA8")]
		private sealed class <>c
		{
			[Token(Token = "0x40019C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InputSource> <>9__43_0;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<string> <>9__43_1;

			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xF1A0A4", Offset = "0xF1A0A4", VA = "0xF1A0A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xF1A0AC", Offset = "0xF1A0AC", VA = "0xF1A0AC")]
			internal void <.ctor>b__43_0(InputSource <p0>)
			{
			}

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xF1A0B0", Offset = "0xF1A0B0", VA = "0xF1A0B0")]
			internal void <.ctor>b__43_1(string <p0>)
			{
			}
		}

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27938", Offset = "0xB27938")]
		private InputSource <LastInputSource>k__BackingField;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27948", Offset = "0xB27948")]
		private Action<InputSource> <OnLastInputSourceChanged>k__BackingField;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27958", Offset = "0xB27958")]
		private bool <IsMouseEnabled>k__BackingField;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27968", Offset = "0xB27968")]
		private bool <IsTouchEnabled>k__BackingField;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27978", Offset = "0xB27978")]
		private bool <IsNavigationEnabled>k__BackingField;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27988", Offset = "0xB27988")]
		private List<string> <ExcludedDevices>k__BackingField;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> OnDeviceAttached;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27998", Offset = "0xB27998")]
		private bool <IsPausedDuringFocusLoss>k__BackingField;

		[Token(Token = "0x170002A5")]
		public InputSource LastInputSource
		{
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x127691C", Offset = "0x127691C", VA = "0x127691C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB323F0", Offset = "0xB323F0")]
			get
			{
				return default(InputSource);
			}
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x1276924", Offset = "0x1276924", VA = "0x1276924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32400", Offset = "0xB32400")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public Action<InputSource> OnLastInputSourceChanged
		{
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x127692C", Offset = "0x127692C", VA = "0x127692C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32410", Offset = "0xB32410")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x1276934", Offset = "0x1276934", VA = "0x1276934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32420", Offset = "0xB32420")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public virtual bool IsMouseEnabled
		{
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0x127693C", Offset = "0x127693C", VA = "0x127693C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32430", Offset = "0xB32430")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x1276944", Offset = "0x1276944", VA = "0x1276944", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32440", Offset = "0xB32440")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public virtual bool IsTouchEnabled
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x1276950", Offset = "0x1276950", VA = "0x1276950", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32450", Offset = "0xB32450")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x1276958", Offset = "0x1276958", VA = "0x1276958", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32460", Offset = "0xB32460")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public virtual bool IsNavigationEnabled
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0x1276964", Offset = "0x1276964", VA = "0x1276964", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32470", Offset = "0xB32470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0x127696C", Offset = "0x127696C", VA = "0x127696C", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32480", Offset = "0xB32480")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public virtual List<string> ExcludedDevices
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x1276978", Offset = "0x1276978", VA = "0x1276978", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32490", Offset = "0xB32490")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x1276980", Offset = "0x1276980", VA = "0x1276980", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB324A0", Offset = "0xB324A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public virtual bool IsPausedDuringFocusLoss
		{
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0x1276988", Offset = "0x1276988", VA = "0x1276988", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB324B0", Offset = "0xB324B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x1276990", Offset = "0x1276990", VA = "0x1276990", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB324C0", Offset = "0xB324C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1276860", Offset = "0x1276860", VA = "0x1276860", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32330", Offset = "0xB32330")]
		public virtual IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x12768BC", Offset = "0x12768BC", VA = "0x12768BC", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32390", Offset = "0xB32390")]
		public virtual IEnumerator Deinit()
		{
			return null;
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1276918", Offset = "0x1276918", VA = "0x1276918", Slot = "6")]
		public virtual void UpdateState()
		{
		}

		[Token(Token = "0x6001B2E")]
		public abstract void AddPlayerActionSet(IPlayerActionSet playerActionSet);

		[Token(Token = "0x6001B2F")]
		public abstract void RemovePlayerActionSet(IPlayerActionSet playerActionSet);

		[Token(Token = "0x6001B30")]
		public abstract void EnablePlayerActionSet(IPlayerActionSet playerActionSet, bool state);

		[Token(Token = "0x6001B31")]
		public abstract void EnableMouse(bool state);

		[Token(Token = "0x6001B34")]
		public abstract void EnableTouch(bool state);

		[Token(Token = "0x6001B37")]
		public abstract void EnableNavigation(bool state);

		[Token(Token = "0x6001B3A")]
		public abstract void SetNavigationActions(IPlayerActionTwoAxis moveAction, IPlayerAction submitAction, IPlayerAction cancelAction);

		[Token(Token = "0x6001B3B")]
		public abstract void EnableInputModules(bool state);

		[Token(Token = "0x6001B3E")]
		public abstract bool IsDeviceAttached(string containsName, bool skipExcludedDevices);

		[Token(Token = "0x6001B3F")]
		public abstract IEnumerator<string> EnumerateAllAttachedDevices();

		[Token(Token = "0x6001B40")]
		public abstract void EnablePauseDuringFocusLoss(bool state);

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x127699C", Offset = "0x127699C", VA = "0x127699C")]
		protected InputMiddleware()
		{
		}
	}
	[Token(Token = "0x2000879")]
	public class InputMiddleware_Dummy : InputMiddleware
	{
		[Token(Token = "0x200087A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BEB8", Offset = "0xB1BEB8")]
		private sealed class <Init>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B66")]
				[Address(RVA = "0xF1A35C", Offset = "0xF1A35C", VA = "0xF1A35C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B68")]
				[Address(RVA = "0xF1A3A4", Offset = "0xF1A3A4", VA = "0xF1A3A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xF1A314", Offset = "0xF1A314", VA = "0xF1A314")]
			[DebuggerHidden]
			public <Init>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xF1A340", Offset = "0xF1A340", VA = "0xF1A340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xF1A344", Offset = "0xF1A344", VA = "0xF1A344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xF1A364", Offset = "0xF1A364", VA = "0xF1A364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BEC8", Offset = "0xB1BEC8")]
		private sealed class <Deinit>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B6C")]
				[Address(RVA = "0xF1A22C", Offset = "0xF1A22C", VA = "0xF1A22C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B6E")]
				[Address(RVA = "0xF1A274", Offset = "0xF1A274", VA = "0xF1A274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xF1A1E4", Offset = "0xF1A1E4", VA = "0xF1A1E4")]
			[DebuggerHidden]
			public <Deinit>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xF1A210", Offset = "0xF1A210", VA = "0xF1A210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xF1A214", Offset = "0xF1A214", VA = "0xF1A214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xF1A234", Offset = "0xF1A234", VA = "0xF1A234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200087C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BED8", Offset = "0xB1BED8")]
		private sealed class <EnumerateAllAttachedDevices>d__12 : IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x170002B4")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6001B72")]
				[Address(RVA = "0xF1A2C4", Offset = "0xF1A2C4", VA = "0xF1A2C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B74")]
				[Address(RVA = "0xF1A30C", Offset = "0xF1A30C", VA = "0xF1A30C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xF1A27C", Offset = "0xF1A27C", VA = "0xF1A27C")]
			[DebuggerHidden]
			public <EnumerateAllAttachedDevices>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xF1A2A8", Offset = "0xF1A2A8", VA = "0xF1A2A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xF1A2AC", Offset = "0xF1A2AC", VA = "0xF1A2AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xF1A2CC", Offset = "0xF1A2CC", VA = "0xF1A2CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1276BD0", Offset = "0x1276BD0", VA = "0x1276BD0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32570", Offset = "0xB32570")]
		public override IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1276C2C", Offset = "0x1276C2C", VA = "0x1276C2C", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB325D0", Offset = "0xB325D0")]
		public override IEnumerator Deinit()
		{
			return null;
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x1276C88", Offset = "0x1276C88", VA = "0x1276C88", Slot = "6")]
		public override void UpdateState()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1276C8C", Offset = "0x1276C8C", VA = "0x1276C8C", Slot = "7")]
		public override void AddPlayerActionSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1276C90", Offset = "0x1276C90", VA = "0x1276C90", Slot = "8")]
		public override void RemovePlayerActionSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x1276C94", Offset = "0x1276C94", VA = "0x1276C94", Slot = "9")]
		public override void EnablePlayerActionSet(IPlayerActionSet playerActionSet, bool state)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1276C98", Offset = "0x1276C98", VA = "0x1276C98", Slot = "16")]
		public override void EnableNavigation(bool state)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1276C9C", Offset = "0x1276C9C", VA = "0x1276C9C", Slot = "10")]
		public override void EnableMouse(bool state)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1276CA0", Offset = "0x1276CA0", VA = "0x1276CA0", Slot = "13")]
		public override void EnableTouch(bool state)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1276CA4", Offset = "0x1276CA4", VA = "0x1276CA4", Slot = "19")]
		public override void SetNavigationActions(IPlayerActionTwoAxis moveAction, IPlayerAction submitAction, IPlayerAction cancelAction)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x1276CA8", Offset = "0x1276CA8", VA = "0x1276CA8", Slot = "20")]
		public override void EnableInputModules(bool state)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1276CAC", Offset = "0x1276CAC", VA = "0x1276CAC", Slot = "23")]
		public override bool IsDeviceAttached(string containsName, bool skipExcludedDevices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1276CB4", Offset = "0x1276CB4", VA = "0x1276CB4", Slot = "24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32630", Offset = "0xB32630")]
		public override IEnumerator<string> EnumerateAllAttachedDevices()
		{
			return null;
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1276D10", Offset = "0x1276D10", VA = "0x1276D10", Slot = "25")]
		public override void EnablePauseDuringFocusLoss(bool state)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x1276D14", Offset = "0x1276D14", VA = "0x1276D14")]
		public InputMiddleware_Dummy()
		{
		}
	}
	[Token(Token = "0x200087D")]
	public class PlayerActionSet_Dummy : IPlayerActionSet
	{
		[Token(Token = "0x170002B6")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x277FEF0", Offset = "0x277FEF0", VA = "0x277FEF0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B7")]
		public InputDeviceClass LastDeviceClass
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x277FEF8", Offset = "0x277FEF8", VA = "0x277FEF8", Slot = "5")]
			get
			{
				return default(InputDeviceClass);
			}
		}

		[Token(Token = "0x170002B8")]
		public InputDeviceStyle LastDeviceStyle
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x277FF00", Offset = "0x277FF00", VA = "0x277FF00", Slot = "6")]
			get
			{
				return default(InputDeviceStyle);
			}
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x277FF08", Offset = "0x277FF08", VA = "0x277FF08", Slot = "7")]
		public void Init()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x277FF0C", Offset = "0x277FF0C", VA = "0x277FF0C", Slot = "8")]
		public void Deinit()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x277FF10", Offset = "0x277FF10", VA = "0x277FF10", Slot = "9")]
		public void EnablePlayerAction(IPlayerAction playerAction, bool state)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x277FFCC", Offset = "0x277FFCC", VA = "0x277FFCC", Slot = "10")]
		public void ClearInputState(IPlayerAction playerAction)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x277FFD0", Offset = "0x277FFD0", VA = "0x277FFD0", Slot = "11")]
		public void ClearAllInputState()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x277FFD4", Offset = "0x277FFD4", VA = "0x277FFD4")]
		public PlayerActionSet_Dummy()
		{
		}
	}
	[Token(Token = "0x200087E")]
	public class PlayerAction_Dummy : IPlayerAction
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode cheatKeyCode;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB279A8", Offset = "0xB279A8")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x170002B9")]
		public bool WasPressed
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x2780F94", Offset = "0x2780F94", VA = "0x2780F94", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		public bool IsPressed
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x2780FB4", Offset = "0x2780FB4", VA = "0x2780FB4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BB")]
		public bool WasReleased
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x2780FD4", Offset = "0x2780FD4", VA = "0x2780FD4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BC")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x2780FF4", Offset = "0x2780FF4", VA = "0x2780FF4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32780", Offset = "0xB32780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x2780FFC", Offset = "0x2780FFC", VA = "0x2780FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32790", Offset = "0xB32790")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public bool HasBindings
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x2781008", Offset = "0x2781008", VA = "0x2781008", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x2780F68", Offset = "0x2780F68", VA = "0x2780F68")]
		public PlayerAction_Dummy(KeyCode cheatKeyCode = KeyCode.None)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x2781010", Offset = "0x2781010", VA = "0x2781010")]
		public void ClearInputState()
		{
		}
	}
	[Token(Token = "0x200087F")]
	public class PlayerActionOneAxis_Dummy : IPlayerActionOneAxis, IPlayerAction
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode cheatKeyCode;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB279B8", Offset = "0xB279B8")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x170002BE")]
		public bool WasPressed
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x277FC4C", Offset = "0x277FC4C", VA = "0x277FC4C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BF")]
		public bool IsPressed
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x277FC6C", Offset = "0x277FC6C", VA = "0x277FC6C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C0")]
		public bool WasReleased
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x277FC8C", Offset = "0x277FC8C", VA = "0x277FC8C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C1")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x277FCAC", Offset = "0x277FCAC", VA = "0x277FCAC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB327A0", Offset = "0xB327A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x277FCB4", Offset = "0x277FCB4", VA = "0x277FCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB327B0", Offset = "0xB327B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool HasBindings
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x277FCC0", Offset = "0x277FCC0", VA = "0x277FCC0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C3")]
		public float Value
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x277FCCC", Offset = "0x277FCCC", VA = "0x277FCCC", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x277FC20", Offset = "0x277FC20", VA = "0x277FC20")]
		public PlayerActionOneAxis_Dummy(KeyCode cheatKeyCode = KeyCode.None)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x277FCC8", Offset = "0x277FCC8", VA = "0x277FCC8")]
		public void ClearInputState()
		{
		}
	}
	[Token(Token = "0x2000880")]
	public class PlayerActionTwoAxis_Dummy : IPlayerActionTwoAxis, IPlayerAction
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode cheatKeyCode;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB279C8", Offset = "0xB279C8")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x170002C4")]
		public bool WasPressed
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x2780D84", Offset = "0x2780D84", VA = "0x2780D84", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public bool IsPressed
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x2780DA4", Offset = "0x2780DA4", VA = "0x2780DA4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C6")]
		public bool WasReleased
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x2780DC4", Offset = "0x2780DC4", VA = "0x2780DC4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C7")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x2780DE4", Offset = "0x2780DE4", VA = "0x2780DE4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB327C0", Offset = "0xB327C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x2780DEC", Offset = "0x2780DEC", VA = "0x2780DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB327D0", Offset = "0xB327D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public bool HasBindings
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x2780DF8", Offset = "0x2780DF8", VA = "0x2780DF8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C9")]
		public Vector2 Value
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x2780E04", Offset = "0x2780E04", VA = "0x2780E04", Slot = "4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x2780D58", Offset = "0x2780D58", VA = "0x2780D58")]
		public PlayerActionTwoAxis_Dummy(KeyCode cheatKeyCode = KeyCode.None)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x2780E00", Offset = "0x2780E00", VA = "0x2780E00")]
		public void ClearInputState()
		{
		}
	}
	[Token(Token = "0x2000881")]
	public class InputMiddleware_InControl : InputMiddleware
	{
		[Token(Token = "0x2000882")]
		public enum InputDeviceType
		{
			[Token(Token = "0x40019EE")]
			None,
			[Token(Token = "0x40019EF")]
			Touch,
			[Token(Token = "0x40019F0")]
			Other
		}

		[Token(Token = "0x2000883")]
		public delegate bool IsNonTouchInputPresentDelegate();

		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BEE8", Offset = "0xB1BEE8")]
		private sealed class <Init>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputMiddleware_InControl <>4__this;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BB4")]
				[Address(RVA = "0xF1ADF4", Offset = "0xF1ADF4", VA = "0xF1ADF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BB6")]
				[Address(RVA = "0xF1AE3C", Offset = "0xF1AE3C", VA = "0xF1AE3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0xF1A7D4", Offset = "0xF1A7D4", VA = "0xF1A7D4")]
			[DebuggerHidden]
			public <Init>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xF1A800", Offset = "0xF1A800", VA = "0xF1A800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0xF1A804", Offset = "0xF1A804", VA = "0xF1A804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xF1ADFC", Offset = "0xF1ADFC", VA = "0xF1ADFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000885")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BEF8", Offset = "0xB1BEF8")]
		private sealed class <Deinit>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputMiddleware_InControl <>4__this;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BBA")]
				[Address(RVA = "0xF1A514", Offset = "0xF1A514", VA = "0xF1A514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BBC")]
				[Address(RVA = "0xF1A55C", Offset = "0xF1A55C", VA = "0xF1A55C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xF1A420", Offset = "0xF1A420", VA = "0xF1A420")]
			[DebuggerHidden]
			public <Deinit>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xF1A44C", Offset = "0xF1A44C", VA = "0xF1A44C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xF1A450", Offset = "0xF1A450", VA = "0xF1A450", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xF1A51C", Offset = "0xF1A51C", VA = "0xF1A51C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF08", Offset = "0xB1BF08")]
		private sealed class <EnumerateAllAttachedDevices>d__49 : IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<InControl.InputDevice> <enumerator>5__2;

			[Token(Token = "0x170002CE")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6001BC0")]
				[Address(RVA = "0xF1A784", Offset = "0xF1A784", VA = "0xF1A784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BC2")]
				[Address(RVA = "0xF1A7CC", Offset = "0xF1A7CC", VA = "0xF1A7CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xF1A564", Offset = "0xF1A564", VA = "0xF1A564")]
			[DebuggerHidden]
			public <EnumerateAllAttachedDevices>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xF1A590", Offset = "0xF1A590", VA = "0xF1A590", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xF1A594", Offset = "0xF1A594", VA = "0xF1A594", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xF1A78C", Offset = "0xF1A78C", VA = "0xF1A78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000887")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF18", Offset = "0xB1BF18")]
		private sealed class <>c
		{
			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static IsNonTouchInputPresentDelegate <>9__50_0;

			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xF1A410", Offset = "0xF1A410", VA = "0xF1A410")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0xF1A418", Offset = "0xF1A418", VA = "0xF1A418")]
			internal bool <.ctor>b__50_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB279D8", Offset = "0xB279D8")]
		private EnforceDisabledComponents disabledComponents;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27A24", Offset = "0xB27A24")]
		[SerializeField]
		private int touchCooldownFrames;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InControlManager inControlManager;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TouchManager touchManager;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InControlInputModule inputModule;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TouchTrackControl touchTrackControl;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<IPlayerActionSet> playerActionSets;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int framesSinceLastTouch;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool oldIsUsingVirtualGamepad;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool oldIsUsingRealGamepad;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BindingSourceType lastBindingSource;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private InputDeviceType lastDeviceInputType;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isUsingTouchDeviceInput;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isUsingOtherDeviceInput;

		[NonSerialized]
		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public TouchControl.AnalogTarget touchDragTarget;

		[NonSerialized]
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TouchControl.ButtonTarget touchTapTarget;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PlayerActionSet_InControl navigationActionSet;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlayerActionTwoAxis_InControl navigationMove;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PlayerAction_InControl navigationSubmit;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PlayerAction_InControl navigationCancel;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PlayerAction_InControl dummyNavigationMoveLeft;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private PlayerAction_InControl dummyNavigationMoveRight;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlayerAction_InControl dummyNavigationMoveUp;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PlayerAction_InControl dummyNavigationMoveDown;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private PlayerActionTwoAxis_InControl dummyNavigationMove;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayerAction_InControl dummyNavigationSubmit;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private PlayerAction_InControl dummyNavigationCancel;

		[NonSerialized]
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public IsNonTouchInputPresentDelegate IsNonTouchInputPresent;

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x1276D18", Offset = "0x1276D18", VA = "0x1276D18", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB327E0", Offset = "0xB327E0")]
		public override IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1276D90", Offset = "0x1276D90", VA = "0x1276D90", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32840", Offset = "0xB32840")]
		public override IEnumerator Deinit()
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1276E08", Offset = "0x1276E08", VA = "0x1276E08", Slot = "6")]
		public override void UpdateState()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1276FF4", Offset = "0x1276FF4", VA = "0x1276FF4", Slot = "7")]
		public override void AddPlayerActionSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x127717C", Offset = "0x127717C", VA = "0x127717C", Slot = "8")]
		public override void RemovePlayerActionSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1277304", Offset = "0x1277304", VA = "0x1277304", Slot = "9")]
		public override void EnablePlayerActionSet(IPlayerActionSet playerActionSet, bool state)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x12773CC", Offset = "0x12773CC", VA = "0x12773CC")]
		private void EnableTouchProcessing(bool state)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1277550", Offset = "0x1277550", VA = "0x1277550")]
		private void EnableTouchTap(bool state)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1277520", Offset = "0x1277520", VA = "0x1277520")]
		private void EnableTouchDrag(bool state)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1277580", Offset = "0x1277580", VA = "0x1277580", Slot = "16")]
		public override void EnableNavigation(bool state)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x127763C", Offset = "0x127763C", VA = "0x127763C", Slot = "10")]
		public override void EnableMouse(bool state)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1277664", Offset = "0x1277664", VA = "0x1277664", Slot = "13")]
		public override void EnableTouch(bool state)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1277690", Offset = "0x1277690", VA = "0x1277690", Slot = "19")]
		public override void SetNavigationActions(IPlayerActionTwoAxis moveAction, IPlayerAction submitAction, IPlayerAction cancelAction)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1277848", Offset = "0x1277848", VA = "0x1277848", Slot = "20")]
		public override void EnableInputModules(bool state)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1277868", Offset = "0x1277868", VA = "0x1277868")]
		private void OnBindingSourceTypeChanged(BindingSourceType bindingSource)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1276F24", Offset = "0x1276F24", VA = "0x1276F24")]
		private void ChangeLastInputSource(InputSource inputSource)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x12778AC", Offset = "0x12778AC", VA = "0x12778AC", Slot = "25")]
		public override void EnablePauseDuringFocusLoss(bool state)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x127796C", Offset = "0x127796C", VA = "0x127796C", Slot = "23")]
		public override bool IsDeviceAttached(string containsName, bool skipExcludedDevices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x1277AE8", Offset = "0x1277AE8", VA = "0x1277AE8")]
		private void OnInControlDeviceAttached(InControl.InputDevice device)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x1277B50", Offset = "0x1277B50", VA = "0x1277B50", Slot = "24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB328A0", Offset = "0xB328A0")]
		public override IEnumerator<string> EnumerateAllAttachedDevices()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x1277BAC", Offset = "0x1277BAC", VA = "0x1277BAC")]
		public InputMiddleware_InControl()
		{
		}
	}
	[Token(Token = "0x2000888")]
	public class PlayerActionSet_InControl : IPlayerActionSet
	{
		[Token(Token = "0x2000889")]
		public class WrappedPlayerActionSet : PlayerActionSet
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xD9EA4C", Offset = "0xD9EA4C", VA = "0xD9EA4C")]
			public new PlayerAction_InControl CreatePlayerAction(string name)
			{
				return null;
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xD9EADC", Offset = "0xD9EADC", VA = "0xD9EADC")]
			public PlayerActionTwoAxis_InControl CreatePlayerActionTwoAxis(PlayerAction_InControl negativeXAction, PlayerAction_InControl positiveXAction, PlayerAction_InControl negativeYAction, PlayerAction_InControl positiveYAction)
			{
				return null;
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xD9EB9C", Offset = "0xD9EB9C", VA = "0xD9EB9C")]
			public WrappedPlayerActionSet()
			{
			}
		}

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WrappedPlayerActionSet wrappedPlayerActionSet;

		[Token(Token = "0x170002D0")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x277FFDC", Offset = "0x277FFDC", VA = "0x277FFDC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D1")]
		public InputDeviceClass LastDeviceClass
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x277FFF8", Offset = "0x277FFF8", VA = "0x277FFF8", Slot = "5")]
			get
			{
				return default(InputDeviceClass);
			}
		}

		[Token(Token = "0x170002D2")]
		public InputDeviceStyle LastDeviceStyle
		{
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x2780024", Offset = "0x2780024", VA = "0x2780024", Slot = "6")]
			get
			{
				return default(InputDeviceStyle);
			}
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x2780050", Offset = "0x2780050", VA = "0x2780050", Slot = "7")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x27800B4", Offset = "0x27800B4", VA = "0x27800B4", Slot = "8")]
		public void Deinit()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x27800D0", Offset = "0x27800D0", VA = "0x27800D0", Slot = "9")]
		public void EnablePlayerAction(IPlayerAction playerAction, bool state)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x2780260", Offset = "0x2780260", VA = "0x2780260", Slot = "10")]
		public void ClearInputState(IPlayerAction playerAction)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x2780318", Offset = "0x2780318", VA = "0x2780318", Slot = "11")]
		public void ClearAllInputState()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x2780334", Offset = "0x2780334", VA = "0x2780334")]
		public PlayerAction_InControl CreatePlayerAction(string name)
		{
			return null;
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x2780350", Offset = "0x2780350", VA = "0x2780350")]
		public PlayerActionTwoAxis_InControl CreatePlayerActionTwoAxis(PlayerAction_InControl negativeXAction, PlayerAction_InControl positiveXAction, PlayerAction_InControl negativeYAction, PlayerAction_InControl positiveYAction)
		{
			return null;
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x278036C", Offset = "0x278036C", VA = "0x278036C")]
		public void AddBindings(IPlayerAction playerAction, params InControl.Key[] bindings)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x278048C", Offset = "0x278048C", VA = "0x278048C")]
		public void AddBindings(IPlayerAction playerAction, params KeyCombo[] bindings)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x2780588", Offset = "0x2780588", VA = "0x2780588")]
		public void AddBindings(IPlayerAction playerAction, params InControl.Mouse[] bindings)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x2780668", Offset = "0x2780668", VA = "0x2780668")]
		public void AddBindings(IPlayerAction playerAction, params InputControlType[] bindings)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x277FFFC", Offset = "0x277FFFC", VA = "0x277FFFC")]
		private InputDeviceClass GetLastDeviceClass()
		{
			return default(InputDeviceClass);
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x2780028", Offset = "0x2780028", VA = "0x2780028")]
		private InputDeviceStyle GetLastDeviceStyle()
		{
			return default(InputDeviceStyle);
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x2780748", Offset = "0x2780748", VA = "0x2780748")]
		public PlayerActionSet_InControl()
		{
		}
	}
	[Token(Token = "0x200088A")]
	public class PlayerAction_InControl : IPlayerAction
	{
		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerAction wrappedPlayerAction;

		[Token(Token = "0x170002D3")]
		public bool WasPressed
		{
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0x2781014", Offset = "0x2781014", VA = "0x2781014", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D4")]
		public bool IsPressed
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0x2781030", Offset = "0x2781030", VA = "0x2781030", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D5")]
		public bool WasReleased
		{
			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0x278104C", Offset = "0x278104C", VA = "0x278104C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x2781068", Offset = "0x2781068", VA = "0x2781068", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D7")]
		public bool HasBindings
		{
			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x2781084", Offset = "0x2781084", VA = "0x2781084", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x27810EC", Offset = "0x27810EC", VA = "0x27810EC")]
		public void ClearInputState()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x2781108", Offset = "0x2781108", VA = "0x2781108")]
		public PlayerAction_InControl()
		{
		}
	}
	[Token(Token = "0x200088B")]
	public class PlayerActionOneAxis_InControl : IPlayerActionOneAxis, IPlayerAction
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerOneAxisAction wrappedPlayerActionOneAxis;

		[Token(Token = "0x170002D8")]
		public bool WasPressed
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x277FCD4", Offset = "0x277FCD4", VA = "0x277FCD4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D9")]
		public bool IsPressed
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x277FCF0", Offset = "0x277FCF0", VA = "0x277FCF0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DA")]
		public bool WasReleased
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x277FD0C", Offset = "0x277FD0C", VA = "0x277FD0C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DB")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x277FD28", Offset = "0x277FD28", VA = "0x277FD28", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DC")]
		public bool HasBindings
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0x277FD44", Offset = "0x277FD44", VA = "0x277FD44", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DD")]
		public float Value
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x277FD68", Offset = "0x277FD68", VA = "0x277FD68", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x277FD4C", Offset = "0x277FD4C", VA = "0x277FD4C")]
		public void ClearInputState()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x277FD84", Offset = "0x277FD84", VA = "0x277FD84")]
		public PlayerActionOneAxis_InControl()
		{
		}
	}
	[Token(Token = "0x200088C")]
	public class PlayerActionTwoAxis_InControl : IPlayerActionTwoAxis, IPlayerAction
	{
		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerTwoAxisAction wrappedPlayerActionTwoAxis;

		[Token(Token = "0x170002DE")]
		public bool WasPressed
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x2780E0C", Offset = "0x2780E0C", VA = "0x2780E0C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DF")]
		public bool IsPressed
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x2780E28", Offset = "0x2780E28", VA = "0x2780E28", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E0")]
		public bool WasReleased
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x2780E44", Offset = "0x2780E44", VA = "0x2780E44", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E1")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x2780E60", Offset = "0x2780E60", VA = "0x2780E60", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E2")]
		public bool HasBindings
		{
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x2780EC8", Offset = "0x2780EC8", VA = "0x2780EC8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E3")]
		public Vector2 Value
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x2780EEC", Offset = "0x2780EEC", VA = "0x2780EEC", Slot = "4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x2780ED0", Offset = "0x2780ED0", VA = "0x2780ED0")]
		public void ClearInputState()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x2780F08", Offset = "0x2780F08", VA = "0x2780F08")]
		public PlayerActionTwoAxis_InControl()
		{
		}
	}
	[Token(Token = "0x200088D")]
	public class InputMiddleware_Unity : InputMiddleware
	{
		[Token(Token = "0x200088E")]
		public struct DeviceMetaData
		{
			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputDeviceClass deviceClass;

			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public InputDeviceStyle deviceStyle;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isNoisy;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool requiresXrInputModule;
		}

		[Token(Token = "0x200088F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF28", Offset = "0xB1BF28")]
		private sealed class <Init>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputMiddleware_Unity <>4__this;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C12")]
				[Address(RVA = "0xF1B900", Offset = "0xF1B900", VA = "0xF1B900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C14")]
				[Address(RVA = "0xF1B948", Offset = "0xF1B948", VA = "0xF1B948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0xF1B4A8", Offset = "0xF1B4A8", VA = "0xF1B4A8")]
			[DebuggerHidden]
			public <Init>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xF1B4D4", Offset = "0xF1B4D4", VA = "0xF1B4D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xF1B4D8", Offset = "0xF1B4D8", VA = "0xF1B4D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xF1B908", Offset = "0xF1B908", VA = "0xF1B908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF38", Offset = "0xB1BF38")]
		private sealed class <Deinit>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputMiddleware_Unity <>4__this;

			[Token(Token = "0x170002E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C18")]
				[Address(RVA = "0xF1B1D0", Offset = "0xF1B1D0", VA = "0xF1B1D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1A")]
				[Address(RVA = "0xF1B218", Offset = "0xF1B218", VA = "0xF1B218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xF1B0C8", Offset = "0xF1B0C8", VA = "0xF1B0C8")]
			[DebuggerHidden]
			public <Deinit>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xF1B0F4", Offset = "0xF1B0F4", VA = "0xF1B0F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xF1B0F8", Offset = "0xF1B0F8", VA = "0xF1B0F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xF1B1D8", Offset = "0xF1B1D8", VA = "0xF1B1D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF48", Offset = "0xB1BF48")]
		private sealed class <EnumerateAllAttachedDevices>d__30 : IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<UnityEngine.InputSystem.InputDevice> <enumerator>5__2;

			[Token(Token = "0x170002EA")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6001C1E")]
				[Address(RVA = "0xF1B458", Offset = "0xF1B458", VA = "0xF1B458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C20")]
				[Address(RVA = "0xF1B4A0", Offset = "0xF1B4A0", VA = "0xF1B4A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xF1B220", Offset = "0xF1B220", VA = "0xF1B220")]
			[DebuggerHidden]
			public <EnumerateAllAttachedDevices>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xF1B24C", Offset = "0xF1B24C", VA = "0xF1B24C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xF1B250", Offset = "0xF1B250", VA = "0xF1B250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xF1B460", Offset = "0xF1B460", VA = "0xF1B460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private InputSource xrInputSourceOverride;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InputDeviceClass xrDeviceClassOverride;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private InputDeviceStyle xrDeviceStyleOverride;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool filterNoisyControls;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool filterNoisyDevices;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputSystemUIInputModule inputModule;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private XRUIInputModule xrInputModule;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<IPlayerActionSet> playerActionSets;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<IPlayerActionSet> pausedActionSetsDuringFocusLoss;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<UnityEngine.InputSystem.InputDevice, DeviceMetaData> deviceMetaData;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27AC0", Offset = "0xB27AC0")]
		private static InputMiddleware_Unity <Instance>k__BackingField;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27AD0", Offset = "0xB27AD0")]
		private UnityEngine.InputSystem.InputDevice <LastActiveDevice>k__BackingField;

		[Token(Token = "0x170002E4")]
		public static InputMiddleware_Unity Instance
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x1277D00", Offset = "0x1277D00", VA = "0x1277D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB329F0", Offset = "0xB329F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x1277D4C", Offset = "0x1277D4C", VA = "0x1277D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A00", Offset = "0xB32A00")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public UnityEngine.InputSystem.InputDevice LastActiveDevice
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x1277DA0", Offset = "0x1277DA0", VA = "0x1277DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A10", Offset = "0xB32A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x1277DA8", Offset = "0x1277DA8", VA = "0x1277DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A20", Offset = "0xB32A20")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1277DB0", Offset = "0x1277DB0", VA = "0x1277DB0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32A30", Offset = "0xB32A30")]
		public override IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1277E28", Offset = "0x1277E28", VA = "0x1277E28", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32A90", Offset = "0xB32A90")]
		public override IEnumerator Deinit()
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1277EA0", Offset = "0x1277EA0", VA = "0x1277EA0", Slot = "7")]
		public override void AddPlayerActionSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x127809C", Offset = "0x127809C", VA = "0x127809C", Slot = "8")]
		public override void RemovePlayerActionSet(IPlayerActionSet playerActionSet)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x127828C", Offset = "0x127828C", VA = "0x127828C", Slot = "9")]
		public override void EnablePlayerActionSet(IPlayerActionSet playerActionSet, bool state)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1278364", Offset = "0x1278364", VA = "0x1278364", Slot = "16")]
		public override void EnableNavigation(bool state)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x12783F4", Offset = "0x12783F4", VA = "0x12783F4", Slot = "10")]
		public override void EnableMouse(bool state)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x1278498", Offset = "0x1278498", VA = "0x1278498", Slot = "13")]
		public override void EnableTouch(bool state)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x1278540", Offset = "0x1278540", VA = "0x1278540", Slot = "19")]
		public override void SetNavigationActions(IPlayerActionTwoAxis moveAction, IPlayerAction submitAction, IPlayerAction cancelAction)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x1278660", Offset = "0x1278660", VA = "0x1278660", Slot = "20")]
		public override void EnableInputModules(bool state)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x1278748", Offset = "0x1278748", VA = "0x1278748", Slot = "23")]
		public override bool IsDeviceAttached(string containsName, bool skipExcludedDevices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x12789D8", Offset = "0x12789D8", VA = "0x12789D8", Slot = "24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32AF0", Offset = "0xB32AF0")]
		public override IEnumerator<string> EnumerateAllAttachedDevices()
		{
			return null;
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x1278A34", Offset = "0x1278A34", VA = "0x1278A34", Slot = "25")]
		public override void EnablePauseDuringFocusLoss(bool state)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x1278A48", Offset = "0x1278A48", VA = "0x1278A48")]
		private void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x1278B90", Offset = "0x1278B90", VA = "0x1278B90")]
		private void OnUnityDeviceChanged(UnityEngine.InputSystem.InputDevice device, InputDeviceChange change)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x12798AC", Offset = "0x12798AC", VA = "0x12798AC")]
		private void OnUnityActionTriggered(InputAction.CallbackContext callbackContext)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x1278C74", Offset = "0x1278C74", VA = "0x1278C74")]
		private void TryUpdateDeviceMetaData(UnityEngine.InputSystem.InputDevice device)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1279B0C", Offset = "0x1279B0C", VA = "0x1279B0C")]
		public static bool MatchDevicePath(UnityEngine.InputSystem.InputDevice device, params string[] allowedMatches)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x1279A94", Offset = "0x1279A94", VA = "0x1279A94")]
		private InputSource GetXRInputSource()
		{
			return default(InputSource);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1279BA4", Offset = "0x1279BA4", VA = "0x1279BA4")]
		private InputDeviceClass GetXRDeviceClass(InputDeviceClass deviceClass)
		{
			return default(InputDeviceClass);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1279BB4", Offset = "0x1279BB4", VA = "0x1279BB4")]
		private InputDeviceStyle GetXRDeviceStyle(InputDeviceStyle deviceStyle)
		{
			return default(InputDeviceStyle);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x12799EC", Offset = "0x12799EC", VA = "0x12799EC")]
		public DeviceMetaData GetDeviceMetaData(UnityEngine.InputSystem.InputDevice device)
		{
			return default(DeviceMetaData);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1273EF4", Offset = "0x1273EF4", VA = "0x1273EF4")]
		public void ApplySupportedSchemes(string[] supportedSchemes)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1279AA8", Offset = "0x1279AA8", VA = "0x1279AA8")]
		private void UpdateInputModulesFromLastActiveDevice()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x1279BC4", Offset = "0x1279BC4", VA = "0x1279BC4")]
		private void EnableInputModules(bool inputModuleState, bool xrInputModuleState)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1279CE8", Offset = "0x1279CE8", VA = "0x1279CE8")]
		public InputMiddleware_Unity()
		{
		}
	}
	[Token(Token = "0x2000892")]
	public class PlayerActionSet_Unity : IPlayerActionSet
	{
		[Serializable]
		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF58", Offset = "0xB1BF58")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InputSource> <>9__13_0;

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xD9EC08", Offset = "0xD9EC08", VA = "0xD9EC08")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xD9EC10", Offset = "0xD9EC10", VA = "0xD9EC10")]
			internal void <.ctor>b__13_0(InputSource <p0>)
			{
			}
		}

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputActionMap wrappedActionMap;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool wasEnabledDuringFocusLoss;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27AE0", Offset = "0xB27AE0")]
		private InputDeviceClass <LastDeviceClass>k__BackingField;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27AF0", Offset = "0xB27AF0")]
		private InputDeviceStyle <LastDeviceStyle>k__BackingField;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<InputSource> OnLastInputSourceChanged;

		[Token(Token = "0x170002EC")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x2780750", Offset = "0x2780750", VA = "0x2780750", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002ED")]
		public InputDeviceClass LastDeviceClass
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x278076C", Offset = "0x278076C", VA = "0x278076C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C40", Offset = "0xB32C40")]
			get
			{
				return default(InputDeviceClass);
			}
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x2780774", Offset = "0x2780774", VA = "0x2780774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C50", Offset = "0xB32C50")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public InputDeviceStyle LastDeviceStyle
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x278077C", Offset = "0x278077C", VA = "0x278077C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C60", Offset = "0xB32C60")]
			get
			{
				return default(InputDeviceStyle);
			}
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x2780784", Offset = "0x2780784", VA = "0x2780784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C70", Offset = "0xB32C70")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x278078C", Offset = "0x278078C", VA = "0x278078C")]
		public PlayerActionSet_Unity(InputActionMap actionMap)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x27808C8", Offset = "0x27808C8", VA = "0x27808C8", Slot = "7")]
		public void Init()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x2780970", Offset = "0x2780970", VA = "0x2780970", Slot = "8")]
		public void Deinit()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x2780A18", Offset = "0x2780A18", VA = "0x2780A18", Slot = "9")]
		public void EnablePlayerAction(IPlayerAction playerAction, bool state)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x2780AF0", Offset = "0x2780AF0", VA = "0x2780AF0", Slot = "10")]
		public void ClearInputState(IPlayerAction playerAction)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x2780AF4", Offset = "0x2780AF4", VA = "0x2780AF4", Slot = "11")]
		public void ClearAllInputState()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x2780AF8", Offset = "0x2780AF8", VA = "0x2780AF8")]
		private void OnUnityActionTriggered(InputAction.CallbackContext callbackContext)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x2780BC4", Offset = "0x2780BC4", VA = "0x2780BC4")]
		public void EnableAllPlayerActions(bool state)
		{
		}
	}
	[Token(Token = "0x2000894")]
	public class PlayerAction_Unity : IPlayerAction
	{
		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputAction wrappedInputAction;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int frameCountWasPressed;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int frameCountWasReleased;

		[Token(Token = "0x170002EF")]
		public bool WasPressed
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x2781110", Offset = "0x2781110", VA = "0x2781110", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F0")]
		public bool IsPressed
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x2781140", Offset = "0x2781140", VA = "0x2781140", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F1")]
		public bool WasReleased
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x2781150", Offset = "0x2781150", VA = "0x2781150", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F2")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x2781180", Offset = "0x2781180", VA = "0x2781180", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F3")]
		public bool HasBindings
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x278119C", Offset = "0x278119C", VA = "0x278119C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x27811F8", Offset = "0x27811F8", VA = "0x27811F8")]
		public void ClearInputState()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x277FDE4", Offset = "0x277FDE4", VA = "0x277FDE4")]
		public PlayerAction_Unity(InputAction wrappedInputAction)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x27811FC", Offset = "0x27811FC", VA = "0x27811FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C80", Offset = "0xB32C80")]
		private void <.ctor>b__14_0(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x2781224", Offset = "0x2781224", VA = "0x2781224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C90", Offset = "0xB32C90")]
		private void <.ctor>b__14_1(InputAction.CallbackContext context)
		{
		}
	}
	[Token(Token = "0x2000895")]
	public class PlayerActionOneAxis_Unity : PlayerAction_Unity, IPlayerActionOneAxis, IPlayerAction
	{
		[Token(Token = "0x170002F4")]
		public float Value
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x277FD8C", Offset = "0x277FD8C", VA = "0x277FD8C", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x277FDE0", Offset = "0x277FDE0", VA = "0x277FDE0")]
		public PlayerActionOneAxis_Unity(InputAction a)
		{
		}
	}
	[Token(Token = "0x2000896")]
	public class PlayerActionTwoAxis_Unity : PlayerAction_Unity, IPlayerActionTwoAxis, IPlayerAction
	{
		[Token(Token = "0x170002F5")]
		public Vector2 Value
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x2780F10", Offset = "0x2780F10", VA = "0x2780F10", Slot = "9")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x2780F64", Offset = "0x2780F64", VA = "0x2780F64")]
		public PlayerActionTwoAxis_Unity(InputAction a)
		{
		}
	}
	[Token(Token = "0x2000897")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1BF68", Offset = "0xB1BF68")]
	public class CultureCodeProvider : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000898")]
		public struct LanguageCulture
		{
			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string languageCode;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string cultureCode;
		}

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<LanguageCulture> _languageToCulture;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _defaultToSystemCode;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _defaultCultureCode;

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x15900D0", Offset = "0x15900D0", VA = "0x15900D0")]
		public string FindCultureByLanguageCode(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x15902D8", Offset = "0x15902D8", VA = "0x15902D8")]
		public CultureCodeProvider()
		{
		}
	}
	[Token(Token = "0x2000899")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1BFD0", Offset = "0xB1BFD0")]
	public class SceneInit : MonoBehaviour
	{
		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneSet sceneSetToLoad;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneSet xboxSceneSetToLoad;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AutoDetectGraphicalQuality autoDetectGraphicalQuality;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _loadNextSceneOnAwake;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool waitForSceneActivation;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float timeoutInSec;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timer;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CloudSaveService cloudService;

		[Token(Token = "0x170002F6")]
		private SceneSet _sceneSetToLoad
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xECFAF0", Offset = "0xECFAF0", VA = "0xECFAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xECFAF8", Offset = "0xECFAF8", VA = "0xECFAF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xECFBC0", Offset = "0xECFBC0", VA = "0xECFBC0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xECFD20", Offset = "0xECFD20", VA = "0xECFD20")]
		public void LoadNextSceneDeferred()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xECFC8C", Offset = "0xECFC8C", VA = "0xECFC8C")]
		public void LoadNextSceneCheckAutoDetect()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xECFB10", Offset = "0xECFB10", VA = "0xECFB10")]
		public void LoadNextScene()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xECFDD8", Offset = "0xECFDD8", VA = "0xECFDD8")]
		public SceneInit()
		{
		}
	}
	[Token(Token = "0x200089A")]
	public class AutoDetectGraphicalQuality : MonoBehaviour
	{
		[Token(Token = "0x200089B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C008", Offset = "0xB1C008")]
		private sealed class <DetectCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoDetectGraphicalQuality <>4__this;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C52")]
				[Address(RVA = "0x275C198", Offset = "0x275C198", VA = "0x275C198", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C54")]
				[Address(RVA = "0x275C1E0", Offset = "0x275C1E0", VA = "0x275C1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x275C03C", Offset = "0x275C03C", VA = "0x275C03C")]
			[DebuggerHidden]
			public <DetectCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x275C068", Offset = "0x275C068", VA = "0x275C068", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x275C06C", Offset = "0x275C06C", VA = "0x275C06C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x275C1A0", Offset = "0x275C1A0", VA = "0x275C1A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C018", Offset = "0xB1C018")]
		private sealed class <LoadScene>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoDetectGraphicalQuality <>4__this;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <op>5__3;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C58")]
				[Address(RVA = "0x275C3A0", Offset = "0x275C3A0", VA = "0x275C3A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C5A")]
				[Address(RVA = "0x275C3E8", Offset = "0x275C3E8", VA = "0x275C3E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x275C1E8", Offset = "0x275C1E8", VA = "0x275C1E8")]
			[DebuggerHidden]
			public <LoadScene>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x275C214", Offset = "0x275C214", VA = "0x275C214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x275C218", Offset = "0x275C218", VA = "0x275C218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x275C3A8", Offset = "0x275C3A8", VA = "0x275C3A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C028", Offset = "0xB1C028")]
		private sealed class <UnloadScene>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoDetectGraphicalQuality <>4__this;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <op>5__3;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C5E")]
				[Address(RVA = "0x275CBA4", Offset = "0x275CBA4", VA = "0x275CBA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C60")]
				[Address(RVA = "0x275CBEC", Offset = "0x275CBEC", VA = "0x275CBEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x275C9F8", Offset = "0x275C9F8", VA = "0x275C9F8")]
			[DebuggerHidden]
			public <UnloadScene>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x275CA24", Offset = "0x275CA24", VA = "0x275CA24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x275CA28", Offset = "0x275CA28", VA = "0x275CA28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x275CBAC", Offset = "0x275CBAC", VA = "0x275CBAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200089E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C038", Offset = "0xB1C038")]
		private sealed class <ProcessTestCase>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoDetectGraphicalQuality <>4__this;

			[Token(Token = "0x4001A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<AutoDetectTestCase> <testCases>5__2;

			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <minIdx>5__3;

			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <maxIdx>5__4;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__5;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <done>5__6;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <fpsTargetCurrent>5__7;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C64")]
				[Address(RVA = "0x275C9A8", Offset = "0x275C9A8", VA = "0x275C9A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C66")]
				[Address(RVA = "0x275C9F0", Offset = "0x275C9F0", VA = "0x275C9F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x275C3F0", Offset = "0x275C3F0", VA = "0x275C3F0")]
			[DebuggerHidden]
			public <ProcessTestCase>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x275C41C", Offset = "0x275C41C", VA = "0x275C41C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0x275C420", Offset = "0x275C420", VA = "0x275C420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0x275C9B0", Offset = "0x275C9B0", VA = "0x275C9B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneReference[] scenes;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject screenGO;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fpsTarget;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int fpsTargetVR;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27BE0", Offset = "0xB27BE0")]
		public bool forceAutoDetect;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool skipAutoDetect;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool forceWarningMsg;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool showRendering;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SettingsService settingsService;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action onFinished;

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1039EA0", Offset = "0x1039EA0", VA = "0x1039EA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1039EC0", Offset = "0x1039EC0", VA = "0x1039EC0")]
		public void StartDetect(Action onFinished)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x103A0F0", Offset = "0x103A0F0", VA = "0x103A0F0")]
		public void EndDetect()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x103A078", Offset = "0x103A078", VA = "0x103A078")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32CA0", Offset = "0xB32CA0")]
		private IEnumerator DetectCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x103A230", Offset = "0x103A230", VA = "0x103A230")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32D00", Offset = "0xB32D00")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x103A2A8", Offset = "0x103A2A8", VA = "0x103A2A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32D60", Offset = "0xB32D60")]
		private IEnumerator UnloadScene()
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x103A320", Offset = "0x103A320", VA = "0x103A320")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32DC0", Offset = "0xB32DC0")]
		private IEnumerator ProcessTestCase()
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x103A398", Offset = "0x103A398", VA = "0x103A398")]
		public AutoDetectGraphicalQuality()
		{
		}
	}
	[Token(Token = "0x200089F")]
	public class AutoDetectTestCase
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingsDataQuality.QualityLevelSettings quality;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SettingsDataResolution.RenderResolutionIndex resolutionIdx;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fps;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x103A3AC", Offset = "0x103A3AC", VA = "0x103A3AC")]
		public AutoDetectTestCase(SettingsDataQuality.QualityLevelSettings quality, SettingsDataResolution.RenderResolutionIndex resolutionIdx)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x103A3E4", Offset = "0x103A3E4", VA = "0x103A3E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x103A4D4", Offset = "0x103A4D4", VA = "0x103A4D4")]
		public static List<AutoDetectTestCase> GenerateTestCases()
		{
			return null;
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x103AC30", Offset = "0x103AC30", VA = "0x103AC30")]
		public void Apply()
		{
		}
	}
	[Token(Token = "0x20008A0")]
	public static class FMODUtils
	{
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xFC5418", Offset = "0xFC5418", VA = "0xFC5418")]
		public static bool GetEventLength(string eventName, out float eventLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xFC5554", Offset = "0xFC5554", VA = "0xFC5554")]
		public static bool CheckEventName(string eventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xFC5638", Offset = "0xFC5638", VA = "0xFC5638")]
		public static bool HasGlobalParameter(string parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xFC56E8", Offset = "0xFC56E8", VA = "0xFC56E8")]
		public static bool SetGlobalParameter(string parameter, float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xFC5794", Offset = "0xFC5794", VA = "0xFC5794")]
		public static float GetVolume(VCA vca)
		{
			return default(float);
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xFC57D4", Offset = "0xFC57D4", VA = "0xFC57D4")]
		public static bool GetVCA(string vcaName, out VCA vca)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xFC592C", Offset = "0xFC592C", VA = "0xFC592C")]
		public static bool GetBus(string busName, out Bus bus)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20008A1")]
	public class UISoundController : MonoBehaviour
	{
		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xF3509C", Offset = "0xF3509C", VA = "0xF3509C")]
		public UISoundController()
		{
		}
	}
	[Token(Token = "0x20008A2")]
	public class SoundService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x20008A3")]
		public enum EventMode
		{
			[Token(Token = "0x4001A6B")]
			None,
			[Token(Token = "0x4001A6C")]
			Play,
			[Token(Token = "0x4001A6D")]
			Stop,
			[Token(Token = "0x4001A6E")]
			Toggle,
			[Token(Token = "0x4001A6F")]
			PlayIfStopped
		}

		[Token(Token = "0x20008A4")]
		public enum ParameterMode
		{
			[Token(Token = "0x4001A71")]
			Combine,
			[Token(Token = "0x4001A72")]
			Overwrite
		}

		[Token(Token = "0x20008A5")]
		public enum GlobalEmitter
		{
			[Token(Token = "0x4001A74")]
			Music,
			[Token(Token = "0x4001A75")]
			Ambience,
			[Token(Token = "0x4001A76")]
			UI,
			[Token(Token = "0x4001A77")]
			Cutscene,
			[Token(Token = "0x4001A78")]
			Narrative,
			[Token(Token = "0x4001A79")]
			Debug,
			[Token(Token = "0x4001A7A")]
			PauseSnapshot,
			[Token(Token = "0x4001A7B")]
			CameraSnapshot
		}

		[Token(Token = "0x20008A6")]
		public enum PreloadedEvent
		{
			[Token(Token = "0x4001A7D")]
			None,
			[Token(Token = "0x4001A7E")]
			UIConfirm,
			[Token(Token = "0x4001A7F")]
			UICancel,
			[Token(Token = "0x4001A80")]
			UIHover,
			[Token(Token = "0x4001A81")]
			PlayerChoice,
			[Token(Token = "0x4001A82")]
			NewTask
		}

		[Token(Token = "0x20008A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C048", Offset = "0xB1C048")]
		private sealed class <InitServiceCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundService <>4__this;

			[Token(Token = "0x1700030F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA0")]
				[Address(RVA = "0xDA3930", Offset = "0xDA3930", VA = "0xDA3930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000310")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA2")]
				[Address(RVA = "0xDA3978", Offset = "0xDA3978", VA = "0xDA3978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xDA34AC", Offset = "0xDA34AC", VA = "0xDA34AC")]
			[DebuggerHidden]
			public <InitServiceCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xDA34D8", Offset = "0xDA34D8", VA = "0xDA34D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xDA34DC", Offset = "0xDA34DC", VA = "0xDA34DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xDA3938", Offset = "0xDA3938", VA = "0xDA3938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27C18", Offset = "0xB27C18")]
		[SerializeField]
		public SoundServiceSoftPauser softPauser;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public SoundServiceHardPauser hardPauser;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[BankRef]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27C74", Offset = "0xB27C74")]
		[SerializeField]
		private List<string> _preloadedBanks;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27CD0", Offset = "0xB27CD0")]
		[SerializeField]
		private bool _disableBankLoading;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool _dumpAllTriggerEventCalls;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool _dumpAllPausedBusses;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public SoundService_EmitterConfig _emitterConfig;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public SoundService_EventConfig _eventConfig;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SettingsService _settingsService;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Bus _masterBus;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HashSet<string> _unpausableBusNameLookup;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27D5C", Offset = "0xB27D5C")]
		private SoundService_BankLoader <Banks>k__BackingField;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27D6C", Offset = "0xB27D6C")]
		private SoundService_Volume <Volume>k__BackingField;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27D7C", Offset = "0xB27D7C")]
		private StudioEventEmitter <Music>k__BackingField;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27D8C", Offset = "0xB27D8C")]
		private StudioEventEmitter <Ambience>k__BackingField;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27D9C", Offset = "0xB27D9C")]
		private StudioEventEmitter <UI>k__BackingField;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27DAC", Offset = "0xB27DAC")]
		private StudioEventEmitter <Cutscene>k__BackingField;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27DBC", Offset = "0xB27DBC")]
		private StudioEventEmitter <Narrative>k__BackingField;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27DCC", Offset = "0xB27DCC")]
		private StudioEventEmitter <PauseSnapshot>k__BackingField;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27DDC", Offset = "0xB27DDC")]
		private StudioEventEmitter <CameraSnapshot>k__BackingField;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27DEC", Offset = "0xB27DEC")]
		private StudioEventEmitter <Driver>k__BackingField;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27DFC", Offset = "0xB27DFC")]
		private StudioEventEmitter <Radio>k__BackingField;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27E0C", Offset = "0xB27E0C")]
		private StudioEventEmitter <Waitress>k__BackingField;

		[Token(Token = "0x170002FF")]
		public bool DumpAllTriggerEventCalls
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x1118A64", Offset = "0x1118A64", VA = "0x1118A64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000300")]
		public SoundService_BankLoader Banks
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x1118A6C", Offset = "0x1118A6C", VA = "0x1118A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32F60", Offset = "0xB32F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x1118A74", Offset = "0x1118A74", VA = "0x1118A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32F70", Offset = "0xB32F70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public SoundService_Volume Volume
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x1118A7C", Offset = "0x1118A7C", VA = "0x1118A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32F80", Offset = "0xB32F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x1118A84", Offset = "0x1118A84", VA = "0x1118A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32F90", Offset = "0xB32F90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public SoundService_EmitterConfig Emitters
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x1118A8C", Offset = "0x1118A8C", VA = "0x1118A8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public SoundService_EventConfig Events
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x1118A94", Offset = "0x1118A94", VA = "0x1118A94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public StudioEventEmitter Music
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x1118A9C", Offset = "0x1118A9C", VA = "0x1118A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32FA0", Offset = "0xB32FA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x1118AA4", Offset = "0x1118AA4", VA = "0x1118AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32FB0", Offset = "0xB32FB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public StudioEventEmitter Ambience
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x1118AAC", Offset = "0x1118AAC", VA = "0x1118AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32FC0", Offset = "0xB32FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x1118AB4", Offset = "0x1118AB4", VA = "0x1118AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32FD0", Offset = "0xB32FD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public StudioEventEmitter UI
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x1118ABC", Offset = "0x1118ABC", VA = "0x1118ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32FE0", Offset = "0xB32FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x1118AC4", Offset = "0x1118AC4", VA = "0x1118AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32FF0", Offset = "0xB32FF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public StudioEventEmitter Cutscene
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x1118ACC", Offset = "0x1118ACC", VA = "0x1118ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33000", Offset = "0xB33000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1118AD4", Offset = "0x1118AD4", VA = "0x1118AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33010", Offset = "0xB33010")]
			private set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public StudioEventEmitter Narrative
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1118ADC", Offset = "0x1118ADC", VA = "0x1118ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33020", Offset = "0xB33020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1118AE4", Offset = "0x1118AE4", VA = "0x1118AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33030", Offset = "0xB33030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public StudioEventEmitter PauseSnapshot
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1118AEC", Offset = "0x1118AEC", VA = "0x1118AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33040", Offset = "0xB33040")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x1118AF4", Offset = "0x1118AF4", VA = "0x1118AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33050", Offset = "0xB33050")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public StudioEventEmitter CameraSnapshot
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x1118AFC", Offset = "0x1118AFC", VA = "0x1118AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33060", Offset = "0xB33060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x1118B04", Offset = "0x1118B04", VA = "0x1118B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33070", Offset = "0xB33070")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public StudioEventEmitter Driver
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x1118B0C", Offset = "0x1118B0C", VA = "0x1118B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33080", Offset = "0xB33080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x1118B14", Offset = "0x1118B14", VA = "0x1118B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33090", Offset = "0xB33090")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public StudioEventEmitter Radio
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x1118B1C", Offset = "0x1118B1C", VA = "0x1118B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB330A0", Offset = "0xB330A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x1118B24", Offset = "0x1118B24", VA = "0x1118B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB330B0", Offset = "0xB330B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public StudioEventEmitter Waitress
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x1118B2C", Offset = "0x1118B2C", VA = "0x1118B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB330C0", Offset = "0xB330C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1118B34", Offset = "0x1118B34", VA = "0x1118B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB330D0", Offset = "0xB330D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public override string Name
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x1118B3C", Offset = "0x1118B3C", VA = "0x1118B3C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1118B80", Offset = "0x1118B80", VA = "0x1118B80", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1118BB4", Offset = "0x1118BB4", VA = "0x1118BB4", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB330E0", Offset = "0xB330E0")]
		public override IEnumerator InitServiceCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1118C2C", Offset = "0x1118C2C", VA = "0x1118C2C", Slot = "14")]
		public override void AfterAllInitialized()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1118D68", Offset = "0x1118D68", VA = "0x1118D68", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1118E38", Offset = "0x1118E38", VA = "0x1118E38")]
		public void OnSceneSetAction(SceneSet sceneSet)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x111904C", Offset = "0x111904C", VA = "0x111904C")]
		private void OnSceneSetUnloading(SceneSet sceneSet)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x11190BC", Offset = "0x11190BC", VA = "0x11190BC")]
		private void OnSceneSetLoading(SceneSet sceneSet)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x111914C", Offset = "0x111914C", VA = "0x111914C")]
		private void OnApplyVolumeSettings()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1119218", Offset = "0x1119218", VA = "0x1119218")]
		public void StopAllSound(bool allowFadeOut = false)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x111922C", Offset = "0x111922C", VA = "0x111922C")]
		public void PauseAllSound(bool state)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x111923C", Offset = "0x111923C", VA = "0x111923C")]
		public void PauseIngameSound(bool state)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1119728", Offset = "0x1119728", VA = "0x1119728")]
		public void IntegrityCheckTriggerEvent(Action<string> errorFunc, string logPrefix, string emitterName, EventMode eventMode, [Optional] string eventName, [Optional] ParamRef[] parameters)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1119F30", Offset = "0x1119F30", VA = "0x1119F30")]
		public bool IntegrityCheckGlobalParameter(string parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1119FC0", Offset = "0x1119FC0", VA = "0x1119FC0")]
		public SoundService()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008A8")]
	public class SoundServiceHardPauser : IPausable
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[EventRef]
		[SerializeField]
		private string _hardPauseSnapshotEvent;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SoundService soundService;

		[Token(Token = "0x17000311")]
		private bool HasHardPauseSoundEvent
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xDA8260", Offset = "0xDA8260", VA = "0xDA8260")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xDA8284", Offset = "0xDA8284", VA = "0xDA8284")]
		public void Init(SoundService soundService)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xDA828C", Offset = "0xDA828C", VA = "0xDA828C", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xDA83F8", Offset = "0xDA83F8", VA = "0xDA83F8", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xDA8550", Offset = "0xDA8550", VA = "0xDA8550")]
		public SoundServiceHardPauser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008A9")]
	public class SoundServiceSoftPauser : IPausable
	{
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[EventRef]
		[SerializeField]
		private string _softPauseSnapshotEvent;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _lastDriverSpeechPosition;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DriverSpeechNarrativeNode _lastDriverSpeechNode;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SoundService soundService;

		[Token(Token = "0x17000312")]
		private bool HasSoftPauseSoundEvent
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xDA85AC", Offset = "0xDA85AC", VA = "0xDA85AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		private StudioEventEmitter LastDriverSpeechEmitter
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xDA85D0", Offset = "0xDA85D0", VA = "0xDA85D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xDA85FC", Offset = "0xDA85FC", VA = "0xDA85FC")]
		public void Init(SoundService soundService)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xDA8604", Offset = "0xDA8604", VA = "0xDA8604", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xDA8764", Offset = "0xDA8764", VA = "0xDA8764", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xDA8888", Offset = "0xDA8888", VA = "0xDA8888")]
		public SoundServiceSoftPauser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008AA")]
	public class SoundService_BankLoader
	{
		[Token(Token = "0x20008AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C058", Offset = "0xB1C058")]
		private sealed class <InitCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundService_BankLoader <>4__this;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool disableBankLoading;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<string> preloadedBanks;

			[Token(Token = "0x17000315")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CBB")]
				[Address(RVA = "0xDA3AA4", Offset = "0xDA3AA4", VA = "0xDA3AA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBD")]
				[Address(RVA = "0xDA3AEC", Offset = "0xDA3AEC", VA = "0xDA3AEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xDA3980", Offset = "0xDA3980", VA = "0xDA3980")]
			[DebuggerHidden]
			public <InitCoroutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xDA39AC", Offset = "0xDA39AC", VA = "0xDA39AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xDA39B0", Offset = "0xDA39B0", VA = "0xDA39B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xDA3AAC", Offset = "0xDA3AAC", VA = "0xDA3AAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C068", Offset = "0xB1C068")]
		private sealed class <LoadBanksCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerable<string> bankNames;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundService_BankLoader <>4__this;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool loadSamples;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool <success>5__2;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<string> <enumerator>5__3;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC1")]
				[Address(RVA = "0xDA3D6C", Offset = "0xDA3D6C", VA = "0xDA3D6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC3")]
				[Address(RVA = "0xDA3DB4", Offset = "0xDA3DB4", VA = "0xDA3DB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xDA3AF4", Offset = "0xDA3AF4", VA = "0xDA3AF4")]
			[DebuggerHidden]
			public <LoadBanksCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xDA3B20", Offset = "0xDA3B20", VA = "0xDA3B20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xDA3B24", Offset = "0xDA3B24", VA = "0xDA3B24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xDA3D74", Offset = "0xDA3D74", VA = "0xDA3D74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _disableBankLoading;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> _loadedBanks;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<string> _preloadedBanks;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allowUnloadingPreloadedBanks;

		[Token(Token = "0x4001A90")]
		private const string bankToResourcePrefix = "FMODAssets/";

		[Token(Token = "0x17000314")]
		public IReadOnlyCollection<string> LoadedBanks
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xDA88EC", Offset = "0xDA88EC", VA = "0xDA88EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xDA88F4", Offset = "0xDA88F4", VA = "0xDA88F4")]
		public void Init(List<string> preloadedBanks, bool disableBankLoading)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xDA8B74", Offset = "0xDA8B74", VA = "0xDA8B74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33190", Offset = "0xB33190")]
		public IEnumerator InitCoroutine(List<string> preloadedBanks, bool disableBankLoading)
		{
			return null;
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xDA8C14", Offset = "0xDA8C14", VA = "0xDA8C14")]
		public bool LoadBank(string bankName, bool loadSamples = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xDA90EC", Offset = "0xDA90EC", VA = "0xDA90EC")]
		public bool UnloadBank(string bankName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xDA8998", Offset = "0xDA8998", VA = "0xDA8998")]
		public bool LoadBanks(IEnumerable<string> bankNames, bool loadSamples = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xDA9440", Offset = "0xDA9440", VA = "0xDA9440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB331F0", Offset = "0xB331F0")]
		public IEnumerator LoadBanksCoroutine(IEnumerable<string> bankNames, bool loadSamples = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xDA94E0", Offset = "0xDA94E0", VA = "0xDA94E0")]
		public bool UnloadBanks(IEnumerable<string> bankNames)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xDA96B0", Offset = "0xDA96B0", VA = "0xDA96B0")]
		public bool UnloadAllBanks()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xDA9854", Offset = "0xDA9854", VA = "0xDA9854")]
		public SoundService_BankLoader()
		{
		}
	}
	[Token(Token = "0x20008AD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1C078", Offset = "0xB1C078")]
	public class SoundService_EmitterConfig : ScriptableObject
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27E8C", Offset = "0xB27E8C")]
		public string musicEmitterName;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string ambienceEmitterName;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public string uiEmitterName;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string cutsceneEmitterName;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string narrativeEmitterName;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public string pauseSnapshotEmitterName;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public string cameraSnapshotEmitterName;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string driverEmitterName;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public string radioEmitterName;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public string waitressEmitterName;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, StudioEventEmitter> _hierarchyEmitters;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xDA98D8", Offset = "0xDA98D8", VA = "0xDA98D8")]
		public void AddEmittersFromHierarchy(Transform parentTransform)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xDA9A0C", Offset = "0xDA9A0C", VA = "0xDA9A0C")]
		public StudioEventEmitter GetHierarchyEmitter(string emitterName)
		{
			return null;
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xDA9AC0", Offset = "0xDA9AC0", VA = "0xDA9AC0")]
		public StudioEventEmitter GetRegisteredEmitter(string emitterName)
		{
			return null;
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xDA9B88", Offset = "0xDA9B88", VA = "0xDA9B88")]
		public StudioEventEmitter GetEmitter(string emitterName, bool checkHierarchyEmitters = true)
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xDA9C38", Offset = "0xDA9C38", VA = "0xDA9C38")]
		public SoundService_EmitterConfig()
		{
		}
	}
	[Token(Token = "0x20008AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1C0D8", Offset = "0xB1C0D8")]
	public class SoundService_EventConfig : ScriptableObject
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27F68", Offset = "0xB27F68")]
		[SerializeField]
		private string _driverSpeechEventPrefix;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _addRideBeforeDriverSpeechEvent;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27FC4", Offset = "0xB27FC4")]
		[SerializeField]
		public string masterBusName;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<string> unpausableBusNames;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string masterVCAName;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public string musicVCAName;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public string soundVCAName;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string voiceVCAName;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[EventRef]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28060", Offset = "0xB28060")]
		public string uiConfirmSound;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[EventRef]
		public string uiCancelSound;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[EventRef]
		[SerializeField]
		public string uiHoverSound;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[EventRef]
		[SerializeField]
		public string uiPlayerChoiceSound;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[EventRef]
		public string uiNewTaskSound;

		[Token(Token = "0x4001AB5")]
		private const string MALFORMED_LOCA_KEY = "MALFORMED_LOCA_KEY";

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xDA9E24", Offset = "0xDA9E24", VA = "0xDA9E24")]
		public string GetDriverSpeechEvent(string locaKey)
		{
			return null;
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xDAA0D4", Offset = "0xDAA0D4", VA = "0xDAA0D4")]
		public string GetUIEvent(SoundService.PreloadedEvent preloadedEvent)
		{
			return null;
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xDAA170", Offset = "0xDAA170", VA = "0xDAA170")]
		public SoundService_EventConfig()
		{
		}
	}
	[Token(Token = "0x20008AF")]
	public class SoundService_Volume
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SoundService_EventConfig _events;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VCA _masterVCA;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VCA _musicVCA;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VCA _soundVCA;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VCA _voiceVCA;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _premuteMasterVolume;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _muted;

		[Token(Token = "0x17000319")]
		public float MasterVolume
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xDAA3DC", Offset = "0xDAA3DC", VA = "0xDAA3DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xDAA3E8", Offset = "0xDAA3E8", VA = "0xDAA3E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public float MusicVolume
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xDAA3F4", Offset = "0xDAA3F4", VA = "0xDAA3F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xDAA400", Offset = "0xDAA400", VA = "0xDAA400")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public float SoundVolume
		{
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xDAA40C", Offset = "0xDAA40C", VA = "0xDAA40C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xDAA418", Offset = "0xDAA418", VA = "0xDAA418")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public float VoiceVolume
		{
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xDAA424", Offset = "0xDAA424", VA = "0xDAA424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xDAA430", Offset = "0xDAA430", VA = "0xDAA430")]
			set
			{
			}
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xDAA43C", Offset = "0xDAA43C", VA = "0xDAA43C")]
		public void Init(SoundService_EventConfig events)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xDAA4C8", Offset = "0xDAA4C8", VA = "0xDAA4C8")]
		public void MuteAudio()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xDAA518", Offset = "0xDAA518", VA = "0xDAA518")]
		public void UnmuteAudio()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xDAA550", Offset = "0xDAA550", VA = "0xDAA550")]
		public SoundService_Volume()
		{
		}
	}
	[Token(Token = "0x20008B0")]
	public static class StudioEventEmitterExtensions
	{
		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xDA82F0", Offset = "0xDA82F0", VA = "0xDA82F0")]
		public static void PlayEvent(this StudioEventEmitter emitter, string eventName, bool enableLog = true)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xDA8458", Offset = "0xDA8458", VA = "0xDA8458")]
		public static void StopEvent(this StudioEventEmitter emitter, bool enableLog = true)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xDAEFF0", Offset = "0xDAEFF0", VA = "0xDAEFF0")]
		public static void MoveToAndPlayUIEvent(this StudioEventEmitter emitter, Transform targetTransform, string eventName, bool enableLog = true)
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xDAECB4", Offset = "0xDAECB4", VA = "0xDAECB4")]
		public static bool TriggerEvent(this StudioEventEmitter emitter, bool enableLog, SoundService.EventMode eventMode, string eventName = "", SoundService.ParameterMode parameterMode = SoundService.ParameterMode.Combine, params ParamRef[] parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xDAF374", Offset = "0xDAF374", VA = "0xDAF374")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB33330", Offset = "0xB33330")]
		public static void InternalLogTriggerEvent(StudioEventEmitter emitter, bool enableLog, SoundService.EventMode eventMode, string eventName = "", SoundService.ParameterMode parameterMode = SoundService.ParameterMode.Combine, params ParamRef[] parameters)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xDAF088", Offset = "0xDAF088", VA = "0xDAF088")]
		private static void InternalPlayEmitter(StudioEventEmitter emitter)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xDAF210", Offset = "0xDAF210", VA = "0xDAF210")]
		private static void InternalStopEmitter(StudioEventEmitter emitter)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008B1")]
	public class UISoundTrigger : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UISoundTriggerConfig config;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform soundTransform;

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xF350A4", Offset = "0xF350A4", VA = "0xF350A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xF352D8", Offset = "0xF352D8", VA = "0xF352D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xF354F0", Offset = "0xF354F0", VA = "0xF354F0")]
		private SoundService GetSoundService()
		{
			return null;
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xF35588", Offset = "0xF35588", VA = "0xF35588", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xF355D8", Offset = "0xF355D8", VA = "0xF355D8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xF35628", Offset = "0xF35628", VA = "0xF35628")]
		public void OnButtonTriggered()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xF35678", Offset = "0xF35678", VA = "0xF35678")]
		public void OnSliderTriggered(float value)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xF356C8", Offset = "0xF356C8", VA = "0xF356C8")]
		public void OnToggleTriggered(bool value)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xF35718", Offset = "0xF35718", VA = "0xF35718")]
		public UISoundTrigger()
		{
		}
	}
	[Token(Token = "0x20008B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1C148", Offset = "0xB1C148")]
	public class UISoundTriggerConfig : ScriptableObject
	{
		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventRef]
		[SerializeField]
		public string defaultEvent;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[EventRef]
		[SerializeField]
		public string hoverEnterEvent;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[EventRef]
		[SerializeField]
		public string hoverExitEvent;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xF35720", Offset = "0xF35720", VA = "0xF35720")]
		public UISoundTriggerConfig()
		{
		}
	}
	[Token(Token = "0x20008B3")]
	public class SteamService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public uint appID;

		[Token(Token = "0x1700031D")]
		public override string Name
		{
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0xDAEC54", Offset = "0xDAEC54", VA = "0xDAEC54", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xDAEC98", Offset = "0xDAEC98", VA = "0xDAEC98", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xDAEC9C", Offset = "0xDAEC9C", VA = "0xDAEC9C", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xDAECA0", Offset = "0xDAECA0", VA = "0xDAECA0")]
		public SteamService()
		{
		}
	}
	[Token(Token = "0x20008B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C1A8", Offset = "0xB1C1A8")]
	public class VideoController : MonoBehaviour, IPausable
	{
		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public VideoPlayerSettings videoPlayerSettings;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Action onFinished;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool keepRendererAlive;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action state;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool abortPlaying;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool replay;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VideoPlayerBase videoPlayer;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string playFilepath;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool wasPlaying;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action onStartPlayingCallback;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action onAbortedPlaybackCallback;

		[Token(Token = "0x1700031E")]
		public float ProgressValue
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x273F5BC", Offset = "0x273F5BC", VA = "0x273F5BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x273F61C", Offset = "0x273F61C", VA = "0x273F61C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x273F8DC", Offset = "0x273F8DC", VA = "0x273F8DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x273F21C", Offset = "0x273F21C", VA = "0x273F21C")]
		public void SetBackground([Optional] Texture2D image)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x273EFF8", Offset = "0x273EFF8", VA = "0x273EFF8")]
		public void StartPlay(string filepath, [Optional] Action onStartPlaying)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x273F994", Offset = "0x273F994", VA = "0x273F994", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x273FAB4", Offset = "0x273FAB4", VA = "0x273FAB4", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x273EDD8", Offset = "0x273EDD8", VA = "0x273EDD8")]
		public void AbortPlaying([Optional] Action onAbortedPlayback)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x273FB18", Offset = "0x273FB18", VA = "0x273FB18")]
		public void DisableEverything()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x273F8F0", Offset = "0x273F8F0", VA = "0x273F8F0")]
		private void OnStartPlayCalled()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x273FBD8", Offset = "0x273FBD8", VA = "0x273FBD8")]
		private void StateIdle()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x273FBE8", Offset = "0x273FBE8", VA = "0x273FBE8")]
		private void StatePrepare()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x273FD04", Offset = "0x273FD04", VA = "0x273FD04")]
		private void StateWaitTillPrepared()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x273FA14", Offset = "0x273FA14", VA = "0x273FA14")]
		private void ShowRenderer(bool active)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x273F880", Offset = "0x273F880", VA = "0x273F880")]
		private void ShowVideo(bool active)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x273FDAC", Offset = "0x273FDAC", VA = "0x273FDAC")]
		private void StatePlay()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x273FE50", Offset = "0x273FE50", VA = "0x273FE50")]
		private void StatePlaying()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x273FF90", Offset = "0x273FF90", VA = "0x273FF90")]
		private void StateStop()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x27400F4", Offset = "0x27400F4", VA = "0x27400F4")]
		public VideoController()
		{
		}
	}
	[Token(Token = "0x20008B5")]
	public abstract class VideoPlayerBase
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string moviePath;

		[Token(Token = "0x1700031F")]
		public string path
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x2740348", Offset = "0x2740348", VA = "0x2740348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public abstract float Progress
		{
			[Token(Token = "0x6001D01")]
			get;
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x273FB54", Offset = "0x273FB54", VA = "0x273FB54")]
		public void CreatePath(string assetFileName)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x27400E8", Offset = "0x27400E8", VA = "0x27400E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D04")]
		public abstract bool IsPrepared();

		[Token(Token = "0x6001D05")]
		public abstract bool IsVideoPlaying();

		[Token(Token = "0x6001D06")]
		public abstract void PlayVideo();

		[Token(Token = "0x6001D07")]
		public abstract void PauseVideo();

		[Token(Token = "0x6001D08")]
		public abstract void ResumeVideo();

		[Token(Token = "0x6001D09")]
		public abstract void StopVideo();

		[Token(Token = "0x6001D0A")]
		public abstract void PrepareVideo(Material material);

		[Token(Token = "0x6001D0B")]
		public abstract void UpdateWhilePlaying();

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x2740350", Offset = "0x2740350", VA = "0x2740350")]
		protected VideoPlayerBase()
		{
		}
	}
	[Token(Token = "0x20008B6")]
	public class VideoPlayerSettings : MonoBehaviour
	{
		[Token(Token = "0x20008B7")]
		public enum VideoRenderMethod
		{
			[Token(Token = "0x4001AD8")]
			CameraQuad,
			[Token(Token = "0x4001AD9")]
			UI
		}

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoRenderMethod renderMethod;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28294", Offset = "0xB28294")]
		public GameObject quadMethodRoot;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer cutsceneQuad;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB282CC", Offset = "0xB282CC")]
		public GameObject imageMethodRoot;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RawImage cutsceneImage;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RawImage background;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28304", Offset = "0xB28304")]
		[SerializeField]
		private Material cutsceneMaterial;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material cutsceneNintendoFMVMaterial;

		[Token(Token = "0x17000321")]
		public Material CutsceneMaterial
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x2740358", Offset = "0x2740358", VA = "0x2740358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x2740360", Offset = "0x2740360", VA = "0x2740360")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x274044C", Offset = "0x274044C", VA = "0x274044C")]
		public VideoPlayerSettings()
		{
		}
	}
	[Token(Token = "0x20008B8")]
	public class VideoPlayer_Unity : VideoPlayerBase
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VideoPlayer unityVideo;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool videoStarted;

		[Token(Token = "0x17000322")]
		public override float Progress
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x27408FC", Offset = "0x27408FC", VA = "0x27408FC", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x273F7CC", Offset = "0x273F7CC", VA = "0x273F7CC")]
		public void SetPlayerComponent(VideoPlayer player)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x2740954", Offset = "0x2740954", VA = "0x2740954", Slot = "5")]
		public override bool IsPrepared()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x2740970", Offset = "0x2740970", VA = "0x2740970", Slot = "6")]
		public override bool IsVideoPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x274099C", Offset = "0x274099C", VA = "0x274099C", Slot = "7")]
		public override void PlayVideo()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x27409B8", Offset = "0x27409B8", VA = "0x27409B8", Slot = "11")]
		public override void PrepareVideo(Material material)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x2740BC8", Offset = "0x2740BC8", VA = "0x2740BC8", Slot = "10")]
		public override void StopVideo()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x2740C10", Offset = "0x2740C10", VA = "0x2740C10", Slot = "12")]
		public override void UpdateWhilePlaying()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x2740C14", Offset = "0x2740C14", VA = "0x2740C14", Slot = "8")]
		public override void PauseVideo()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x2740C30", Offset = "0x2740C30", VA = "0x2740C30", Slot = "9")]
		public override void ResumeVideo()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x2740164", Offset = "0x2740164", VA = "0x2740164")]
		public VideoPlayer_Unity()
		{
		}
	}
	[Token(Token = "0x20008B9")]
	public class VideoService : AbstractNeedInitService, INeedInitService, IService
	{
		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public VideoController fullscreenVideoController;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _cutsceneUICameraName;

		[Token(Token = "0x17000323")]
		public CameraManager CameraManager
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x2740C4C", Offset = "0x2740C4C", VA = "0x2740C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		public override string Name
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x2740CCC", Offset = "0x2740CCC", VA = "0x2740CCC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x2740D10", Offset = "0x2740D10", VA = "0x2740D10", Slot = "11")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x2740D14", Offset = "0x2740D14", VA = "0x2740D14", Slot = "10")]
		public override void InitService()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x2740D70", Offset = "0x2740D70", VA = "0x2740D70")]
		public void ActivateCutsceneCamera()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x2740DA0", Offset = "0x2740DA0", VA = "0x2740DA0")]
		public void DeactivateCutsceneCamera()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x2740DC0", Offset = "0x2740DC0", VA = "0x2740DC0")]
		public VideoService()
		{
		}
	}
	[Token(Token = "0x20008BA")]
	public class SetParentOnAwake : MonoBehaviour
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform parentTransform;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool resetPosRotAfterReparenting;

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x110BDDC", Offset = "0x110BDDC", VA = "0x110BDDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x110BE74", Offset = "0x110BE74", VA = "0x110BE74")]
		public SetParentOnAwake()
		{
		}
	}
	[Token(Token = "0x20008BB")]
	public class SlerpToPoint : MonoBehaviour
	{
		[Token(Token = "0x20008BC")]
		public enum RotationFollowMode
		{
			[Token(Token = "0x4001AEA")]
			noFollow,
			[Token(Token = "0x4001AEB")]
			slerp,
			[Token(Token = "0x4001AEC")]
			hardFollow
		}

		[Token(Token = "0x20008BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C208", Offset = "0xB1C208")]
		private sealed class <MoveFromTo>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SlerpToPoint <>4__this;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 startPos;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform targetPoint;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timer>5__2;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <currentProgress>5__3;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2B")]
				[Address(RVA = "0xDA2E5C", Offset = "0xDA2E5C", VA = "0xDA2E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2D")]
				[Address(RVA = "0xDA2EA4", Offset = "0xDA2EA4", VA = "0xDA2EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xDA29D8", Offset = "0xDA29D8", VA = "0xDA29D8")]
			[DebuggerHidden]
			public <MoveFromTo>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xDA2A04", Offset = "0xDA2A04", VA = "0xDA2A04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xDA2A08", Offset = "0xDA2A08", VA = "0xDA2A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0xDA2E64", Offset = "0xDA2E64", VA = "0xDA2E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetPoint;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 startOffset;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float transitionTime;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RotationFollowMode rotationFollowMode;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool startOnEnable;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MonoBehaviour> activateOnEnd;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startPosition;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion startRotation;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform myTrans;

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1112D58", Offset = "0x1112D58", VA = "0x1112D58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1112D88", Offset = "0x1112D88", VA = "0x1112D88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1112EF4", Offset = "0x1112EF4", VA = "0x1112EF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33368", Offset = "0xB33368")]
		private IEnumerator MoveFromTo(Vector3 startPos, Transform targetPoint)
		{
			return null;
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1112FAC", Offset = "0x1112FAC", VA = "0x1112FAC")]
		public SlerpToPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008BE")]
	public class PasteObject
	{
		[Token(Token = "0x20008BF")]
		public enum SpawnSide
		{
			[Token(Token = "0x4001AFA")]
			left,
			[Token(Token = "0x4001AFB")]
			right,
			[Token(Token = "0x4001AFC")]
			both
		}

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject original;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnSide sideToSpawn;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28390", Offset = "0xB28390")]
		public Vector3 offSet;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool randomYRotation;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool deleteTargetObjectAfter;

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x277D374", Offset = "0x277D374", VA = "0x277D374")]
		public PasteObject()
		{
		}
	}
	[Token(Token = "0x20008C0")]
	public class SpawnNextTo : MonoBehaviour
	{
		[Token(Token = "0x20008C1")]
		public enum SpawnRange
		{
			[Token(Token = "0x4001B05")]
			all,
			[Token(Token = "0x4001B06")]
			percentage,
			[Token(Token = "0x4001B07")]
			absolute
		}

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spawnScanRangeParent;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject targetObjectRep;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool targetAllInRange;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float noSpawnRange;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpawnRange targetRange;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float targetRangeValue;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PasteObject[] pasteObjects;

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xDAA558", Offset = "0xDAA558", VA = "0xDAA558")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xDAB00C", Offset = "0xDAB00C", VA = "0xDAB00C")]
		public SpawnNextTo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008C2")]
	public class SerializableSphericalHarmonics
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] coefficients;

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x110A1FC", Offset = "0x110A1FC", VA = "0x110A1FC")]
		public void SetHarmonics(SphericalHarmonicsL2 sh)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x110A2A4", Offset = "0x110A2A4", VA = "0x110A2A4")]
		public void GetHarmonics(ref SphericalHarmonicsL2 sh)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x110A344", Offset = "0x110A344", VA = "0x110A344")]
		public SerializableSphericalHarmonics()
		{
		}
	}
	[Token(Token = "0x20008C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1C218", Offset = "0xB1C218")]
	public class SphericalHarmonicsAsset : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableSphericalHarmonics harmonics;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SphericalHarmonicsL2 harmonicsL2;

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xDAB294", Offset = "0xDAB294", VA = "0xDAB294")]
		public void SaveCurrentLighting()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xDAB360", Offset = "0xDAB360", VA = "0xDAB360")]
		public void RestoreCurrentLighting()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xDAB3C8", Offset = "0xDAB3C8", VA = "0xDAB3C8")]
		public SphericalHarmonicsL2 GetHarmonics()
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xDAB3D8", Offset = "0xDAB3D8", VA = "0xDAB3D8")]
		public void SetHarmonics(SphericalHarmonicsL2 sh)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xDAB3F4", Offset = "0xDAB3F4", VA = "0xDAB3F4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xDAB450", Offset = "0xDAB450", VA = "0xDAB450", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xDAB320", Offset = "0xDAB320", VA = "0xDAB320")]
		public static SphericalHarmonicsL2 GetHarmonicsFromLightSettings()
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xDAB394", Offset = "0xDAB394", VA = "0xDAB394")]
		public static void RestoreLighting(SphericalHarmonicsL2 sh)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xDAB474", Offset = "0xDAB474", VA = "0xDAB474")]
		public static SphericalHarmonicsL2 Interpolate(SphericalHarmonicsL2 a, SphericalHarmonicsL2 b, float t)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xDAB54C", Offset = "0xDAB54C", VA = "0xDAB54C")]
		public SphericalHarmonicsAsset()
		{
		}
	}
	[Token(Token = "0x20008C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C280", Offset = "0xB1C280")]
	public class TerrainQuality : MonoBehaviour
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Terrain terrain;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SettingsService settingsService;

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xDB1DE0", Offset = "0xDB1DE0", VA = "0xDB1DE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xDB1F88", Offset = "0xDB1F88", VA = "0xDB1F88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xDB1F8C", Offset = "0xDB1F8C", VA = "0xDB1F8C")]
		private void UpdateTerrainQuality()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xDB2108", Offset = "0xDB2108", VA = "0xDB2108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xDB2200", Offset = "0xDB2200", VA = "0xDB2200")]
		public TerrainQuality()
		{
		}
	}
	[Token(Token = "0x20008C5")]
	public class Spin3D : MonoBehaviour
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 dir;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xDAB5BC", Offset = "0xDAB5BC", VA = "0xDAB5BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xDAB628", Offset = "0xDAB628", VA = "0xDAB628")]
		public Spin3D()
		{
		}
	}
	[Token(Token = "0x20008C6")]
	public class StateEnterCallback : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C2E0", Offset = "0xB1C2E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<AnimatorStateInfo, int> <>9__3_0;

			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xDA4A68", Offset = "0xDA4A68", VA = "0xDA4A68")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xDA4A70", Offset = "0xDA4A70", VA = "0xDA4A70")]
			internal void <.ctor>b__3_0(AnimatorStateInfo <p0>, int <p1>)
			{
			}
		}

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<AnimatorStateInfo, int> OnStateEntered;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stateName;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xDAE2E0", Offset = "0xDAE2E0", VA = "0xDAE2E0", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xDAE378", Offset = "0xDAE378", VA = "0xDAE378")]
		public StateEnterCallback()
		{
		}
	}
	[Token(Token = "0x20008C8")]
	public class TestCameraRendering : MonoBehaviour
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Camera> cameras;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RawImage> images;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isRendertextureUsed;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isOcclusionUsed;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool isBloomUsed;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool isPPUsed;

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xDB2208", Offset = "0xDB2208", VA = "0xDB2208")]
		public void UseDiffered()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xDB2324", Offset = "0xDB2324", VA = "0xDB2324")]
		public void UseForward()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xDB2440", Offset = "0xDB2440", VA = "0xDB2440")]
		public void toggleRenderTexture()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xDB260C", Offset = "0xDB260C", VA = "0xDB260C")]
		public void togglePostProcessing()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xDB26DC", Offset = "0xDB26DC", VA = "0xDB26DC")]
		public TestCameraRendering()
		{
		}
	}
	[Token(Token = "0x20008C9")]
	public class TestFadeInFadeOut : MonoBehaviour
	{
		[Token(Token = "0x20008CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C2F0", Offset = "0xB1C2F0")]
		private sealed class <FadeCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestFadeInFadeOut <>4__this;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D55")]
				[Address(RVA = "0xDA53F0", Offset = "0xDA53F0", VA = "0xDA53F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D57")]
				[Address(RVA = "0xDA5438", Offset = "0xDA5438", VA = "0xDA5438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xDA4ED4", Offset = "0xDA4ED4", VA = "0xDA4ED4")]
			[DebuggerHidden]
			public <FadeCoroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xDA4F00", Offset = "0xDA4F00", VA = "0xDA4F00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xDA4F04", Offset = "0xDA4F04", VA = "0xDA4F04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xDA53F8", Offset = "0xDA53F8", VA = "0xDA53F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C300", Offset = "0xB1C300")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__12_0;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__12_1;

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xDA4EC4", Offset = "0xDA4EC4", VA = "0xDA4EC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xDA4ECC", Offset = "0xDA4ECC", VA = "0xDA4ECC")]
			internal void <.ctor>b__12_0()
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xDA4ED0", Offset = "0xDA4ED0", VA = "0xDA4ED0")]
			internal void <.ctor>b__12_1()
			{
			}
		}

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float fadePreDelay;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image fadeFromImage;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image fadeToImage;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] fadeFromImages;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image[] fadeToImages;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Button> fadeInButtons;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] deactivateAfterFade;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onBegin;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action onEnd;

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xDB2A18", Offset = "0xDB2A18", VA = "0xDB2A18")]
		public void BeginFading()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xDB2A44", Offset = "0xDB2A44", VA = "0xDB2A44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33418", Offset = "0xB33418")]
		private IEnumerator FadeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xDB2ABC", Offset = "0xDB2ABC", VA = "0xDB2ABC")]
		public TestFadeInFadeOut()
		{
		}
	}
	[Token(Token = "0x20008CC")]
	public class TestFlowCanvasScript : MonoBehaviour
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode toggleKey;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlowScriptController myFlowScriptController;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Graph myGraph;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphOwner myGraphOwner;

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xDB2D34", Offset = "0xDB2D34", VA = "0xDB2D34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xDB2DCC", Offset = "0xDB2DCC", VA = "0xDB2DCC")]
		public void TogglePause()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xDB2E0C", Offset = "0xDB2E0C", VA = "0xDB2E0C")]
		public void TogglePause(FlowScriptController fsc)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xDB2EA0", Offset = "0xDB2EA0", VA = "0xDB2EA0")]
		public TestFlowCanvasScript()
		{
		}
	}
	[Token(Token = "0x20008CD")]
	public class TestFlowCanvasScript_noMonoBehaviour
	{
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xDB2EB0", Offset = "0xDB2EB0", VA = "0xDB2EB0")]
		public void TogglePause(FlowScriptController fsc)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xDB2F44", Offset = "0xDB2F44", VA = "0xDB2F44")]
		public TestFlowCanvasScript_noMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20008CE")]
	public class TestSettingsCallback : MonoBehaviour
	{
		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SettingsData settingsData;

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xDB30C4", Offset = "0xDB30C4", VA = "0xDB30C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xDB33B8", Offset = "0xDB33B8", VA = "0xDB33B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xDB3594", Offset = "0xDB3594", VA = "0xDB3594")]
		public void LogOnQualitySettingsApplied()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xDB3598", Offset = "0xDB3598", VA = "0xDB3598")]
		public void LogOnResolutionSettingsApplied()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xDB359C", Offset = "0xDB359C", VA = "0xDB359C")]
		public void LogOnVolumeSettingsApplied()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xDB35A0", Offset = "0xDB35A0", VA = "0xDB35A0")]
		public void LogOnLanguageSettingsApplied()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xDB35A4", Offset = "0xDB35A4", VA = "0xDB35A4")]
		public void LogOnGameplaySettingsApplied()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xDB35A8", Offset = "0xDB35A8", VA = "0xDB35A8")]
		public void LogOnFontSettingsApplied(float dummy)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xDB35AC", Offset = "0xDB35AC", VA = "0xDB35AC")]
		public TestSettingsCallback()
		{
		}
	}
	[Token(Token = "0x20008CF")]
	public class TestWorldParameters : MonoBehaviour
	{
		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool trigger;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28448", Offset = "0xB28448")]
		private float <world_importantFloat>k__BackingField;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28458", Offset = "0xB28458")]
		private int <world_importantInt>k__BackingField;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28468", Offset = "0xB28468")]
		private string <world_slightlyImportantString>k__BackingField;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28478", Offset = "0xB28478")]
		private bool <world_someBool>k__BackingField;

		[Token(Token = "0x17000329")]
		public float world_importantFloat
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xDB35B4", Offset = "0xDB35B4", VA = "0xDB35B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB334C8", Offset = "0xB334C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xDB35BC", Offset = "0xDB35BC", VA = "0xDB35BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB334D8", Offset = "0xB334D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public int world_importantInt
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xDB35C4", Offset = "0xDB35C4", VA = "0xDB35C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB334E8", Offset = "0xB334E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xDB35CC", Offset = "0xDB35CC", VA = "0xDB35CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB334F8", Offset = "0xB334F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public string world_slightlyImportantString
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xDB35D4", Offset = "0xDB35D4", VA = "0xDB35D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33508", Offset = "0xB33508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xDB35DC", Offset = "0xDB35DC", VA = "0xDB35DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33518", Offset = "0xB33518")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public bool world_someBool
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xDB35E4", Offset = "0xDB35E4", VA = "0xDB35E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33528", Offset = "0xB33528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xDB35EC", Offset = "0xDB35EC", VA = "0xDB35EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33538", Offset = "0xB33538")]
			set
			{
			}
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xDB35F8", Offset = "0xDB35F8", VA = "0xDB35F8")]
		public static void LogSomething(object o)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xDB35FC", Offset = "0xDB35FC", VA = "0xDB35FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xDB3734", Offset = "0xDB3734", VA = "0xDB3734")]
		public TestWorldParameters()
		{
		}
	}
	[Token(Token = "0x20008D0")]
	public class RegisteredDirector : RegisteredAssetBase<RegisteredDirector>, IPausable
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector director;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TimelineAsset> playables;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action onFinishedPlayingCallback;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isPlaying;

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xEC1674", Offset = "0xEC1674", VA = "0xEC1674")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xEC1730", Offset = "0xEC1730", VA = "0xEC1730")]
		public void Play(TimelineAsset asset)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xEC1758", Offset = "0xEC1758", VA = "0xEC1758")]
		public void PlayCutscene(TimelineAsset asset, [Optional] Action onFinishedPlaying)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xEC1874", Offset = "0xEC1874", VA = "0xEC1874")]
		private void OnStopped(PlayableDirector obj)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xEC197C", Offset = "0xEC197C", VA = "0xEC197C")]
		private void OnFullyStopped()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xEC1994", Offset = "0xEC1994", VA = "0xEC1994", Slot = "9")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xEC1AF8", Offset = "0xEC1AF8", VA = "0xEC1AF8", Slot = "10")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xEC1C5C", Offset = "0xEC1C5C", VA = "0xEC1C5C")]
		internal void Abort()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xEC1CF0", Offset = "0xEC1CF0", VA = "0xEC1CF0")]
		public RegisteredDirector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008D1")]
	public class SubtitleBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string SubtitleKey;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _key;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _text;

		[Token(Token = "0x1700032D")]
		public string text
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xDAF610", Offset = "0xDAF610", VA = "0xDAF610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xDAF740", Offset = "0xDAF740", VA = "0xDAF740", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xDAF744", Offset = "0xDAF744", VA = "0xDAF744")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xDAF664", Offset = "0xDAF664", VA = "0xDAF664")]
		private void GetText()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xDAF748", Offset = "0xDAF748", VA = "0xDAF748")]
		public SubtitleBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008D2")]
	public class SubtitleClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubtitleBehaviour template;

		[Token(Token = "0x1700032E")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xDAF750", Offset = "0xDAF750", VA = "0xDAF750", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xDAF758", Offset = "0xDAF758", VA = "0xDAF758", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xDAF848", Offset = "0xDAF848", VA = "0xDAF848")]
		public SubtitleClip()
		{
		}
	}
	[Token(Token = "0x20008D3")]
	public class SubtitleMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SubtitleBehaviour currentBehaviour;

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xDAF8B8", Offset = "0xDAF8B8", VA = "0xDAF8B8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xDAFB4C", Offset = "0xDAFB4C", VA = "0xDAFB4C")]
		public SubtitleMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20008D4")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB1C310", Offset = "0xB1C310")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB1C310", Offset = "0xB1C310")]
	public class SubtitleTrack : TrackAsset
	{
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xDAFB54", Offset = "0xDAFB54", VA = "0xDAFB54")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xDAFD48", Offset = "0xDAFD48", VA = "0xDAFD48", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xDAFB58", Offset = "0xDAFB58", VA = "0xDAFB58")]
		private void RefreshClipNames()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xDAFE08", Offset = "0xDAFE08", VA = "0xDAFE08")]
		public SubtitleTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008D5")]
	public class VideoBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Video.VideoClip clipAsset;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string videoPath;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double videoLength;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isResourcePath;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D backgroundImage;

		[Token(Token = "0x4001B41")]
		private const string resourcePath = "Resources/Videos/";

		[Token(Token = "0x4001B42")]
		private const string resourcePathPrefix = "Videos/";

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int resourcePathLength;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VideoController _controller;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isVideoStarted;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isVideoStopped;

		[Token(Token = "0x1700032F")]
		private VideoController controller
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x273EC2C", Offset = "0x273EC2C", VA = "0x273EC2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x273ED0C", Offset = "0x273ED0C", VA = "0x273ED0C", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x273EDAC", Offset = "0x273EDAC", VA = "0x273EDAC")]
		internal void PrepareForNext(Action onPrepared)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x273EF54", Offset = "0x273EF54", VA = "0x273EF54")]
		internal void StartVideo()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x273F124", Offset = "0x273F124", VA = "0x273F124")]
		private void OnStartVideo()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x273ED10", Offset = "0x273ED10", VA = "0x273ED10")]
		internal void StopVideo()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x273F2EC", Offset = "0x273F2EC", VA = "0x273F2EC")]
		private void OnStopVideo()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x273F38C", Offset = "0x273F38C", VA = "0x273F38C")]
		public VideoBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008D6")]
	public class VideoClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoBehaviour template;

		[Token(Token = "0x17000330")]
		public override double duration
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x273F3F4", Offset = "0x273F3F4", VA = "0x273F3F4", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000331")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x273F40C", Offset = "0x273F40C", VA = "0x273F40C", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x273F414", Offset = "0x273F414", VA = "0x273F414", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x273F504", Offset = "0x273F504", VA = "0x273F504")]
		public VideoClip()
		{
		}
	}
	[Token(Token = "0x20008D7")]
	public class VideoMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VideoBehaviour currentBehaviour;

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x274016C", Offset = "0x274016C", VA = "0x274016C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x2740340", Offset = "0x2740340", VA = "0x2740340")]
		public VideoMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20008D8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB1C394", Offset = "0xB1C394")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xB1C394", Offset = "0xB1C394")]
	public class VideoTrack : TrackAsset
	{
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x2740E1C", Offset = "0x2740E1C", VA = "0x2740E1C", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x2740EC8", Offset = "0x2740EC8", VA = "0x2740EC8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x2740ECC", Offset = "0x2740ECC", VA = "0x2740ECC")]
		private void RefreshClipNames()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x2741064", Offset = "0x2741064", VA = "0x2741064")]
		public VideoTrack()
		{
		}
	}
	[Token(Token = "0x20008D9")]
	public class TmpImageScaler : MonoBehaviour
	{
		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform rect;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scaleMultiplier;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 origScale;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool scaledUp;

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xDB4614", Offset = "0xDB4614", VA = "0xDB4614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xDB46FC", Offset = "0xDB46FC", VA = "0xDB46FC")]
		public void ScaleUp()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xDB47A0", Offset = "0xDB47A0", VA = "0xDB47A0")]
		public void ScaleBack()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xDB4830", Offset = "0xDB4830", VA = "0xDB4830")]
		public TmpImageScaler()
		{
		}
	}
	[Token(Token = "0x20008DA")]
	public class ToggleGameObjects : MonoBehaviour
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] gameObjectsToToggle;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugSelectByPhysicalScreenSize[] getGameObjectsToToggleFrom;

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xDB4988", Offset = "0xDB4988", VA = "0xDB4988")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xDB4AEC", Offset = "0xDB4AEC", VA = "0xDB4AEC")]
		public ToggleGameObjects()
		{
		}
	}
	[Token(Token = "0x20008DB")]
	public class TornadoController : MonoBehaviour
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform tornadoTransform;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB28488", Offset = "0xB28488")]
		public float distance;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB284A0", Offset = "0xB284A0")]
		public float sideways;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB284B8", Offset = "0xB284B8")]
		public float distanceVariationLimit;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float offsetY;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 distanceLimits;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 sidewaysLimitsFar;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 sidewaysLimitsNear;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool enableGizmo;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 visualizedPositionLS;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 visualizedPositionWS;

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xDB4AF4", Offset = "0xDB4AF4", VA = "0xDB4AF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xDB4C58", Offset = "0xDB4C58", VA = "0xDB4C58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xDB4DBC", Offset = "0xDB4DBC", VA = "0xDB4DBC")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xDB4FC8", Offset = "0xDB4FC8", VA = "0xDB4FC8")]
		public void SetDistance(float d)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xDB4FD0", Offset = "0xDB4FD0", VA = "0xDB4FD0")]
		public void SetSideways(float s)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xDB4FD8", Offset = "0xDB4FD8", VA = "0xDB4FD8")]
		public void SetDistanceVariationLimit(float l)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xDB4F10", Offset = "0xDB4F10", VA = "0xDB4F10")]
		private Vector3 NormalizedPositionToLocalPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xDB4FE0", Offset = "0xDB4FE0", VA = "0xDB4FE0")]
		private bool ValidatePosition(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xDB50BC", Offset = "0xDB50BC", VA = "0xDB50BC")]
		public TornadoController()
		{
		}
	}
	[Token(Token = "0x20008DC")]
	public class Tumbleweed : MonoBehaviour
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator eyeAnimator;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secondsToOpen;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minSecondsToOpen;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxSecondsToOpen;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minSecondsToBlink;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxSecondsToBlink;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minSecondsToSearch;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxSecondsToSearch;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isOpen;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float secondsToBlink;

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xDB8204", Offset = "0xDB8204", VA = "0xDB8204")]
		private void GetNewRandomSecondsToBlink()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xDB8230", Offset = "0xDB8230", VA = "0xDB8230")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xDB82C0", Offset = "0xDB82C0", VA = "0xDB82C0")]
		public void OpenEye()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xDB8334", Offset = "0xDB8334", VA = "0xDB8334")]
		public Tumbleweed()
		{
		}
	}
	[Token(Token = "0x20008DD")]
	public class TumbleweedWiggle : MonoBehaviour
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB284D0", Offset = "0xB284D0")]
		public float wiggleIntensity;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookAtConstraint target;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotAxisStrength;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 wiggleAxisStrengthX;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 wiggleAxisStrengthY;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 wiggleAxisStrengthZ;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB284E8", Offset = "0xB284E8")]
		public float strengthModifier;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float minWiggleTime;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float maxWiggleTime;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private new Transform transform;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float secondsToChangeWiggleDirection;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 rotOffset;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 targetSelfRotation;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 originalPosition;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 posOffset;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion origRotation;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion rot;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xDB8708", Offset = "0xDB8708", VA = "0xDB8708")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xDB8770", Offset = "0xDB8770", VA = "0xDB8770")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xDB8AC0", Offset = "0xDB8AC0", VA = "0xDB8AC0")]
		public TumbleweedWiggle()
		{
		}
	}
	[Token(Token = "0x20008DE")]
	public class BinocularsFitter : MonoBehaviour
	{
		[Token(Token = "0x4001B75")]
		private const float binocularsAspectRatio = 1.7647059f;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform binocularsRect;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform parentCanvasRect;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform additionalStripe1Rect;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform additionalStripe2Rect;

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x103C148", Offset = "0x103C148", VA = "0x103C148")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x103C14C", Offset = "0x103C14C", VA = "0x103C14C")]
		public void UpdateBinoculars()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x103C260", Offset = "0x103C260", VA = "0x103C260")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x103C264", Offset = "0x103C264", VA = "0x103C264")]
		public BinocularsFitter()
		{
		}
	}
	[Token(Token = "0x20008DF")]
	public class CanvasGroupFaderUtil
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool fadeIn;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool fadeOut;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float fadeSeconds;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.CanvasGroup group;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action onFadeInDone;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action onFadeOutDone;

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xE3336C", Offset = "0xE3336C", VA = "0xE3336C")]
		public CanvasGroupFaderUtil(UnityEngine.CanvasGroup _group, float _fadeSeconds)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xE333B4", Offset = "0xE333B4", VA = "0xE333B4")]
		public void FadeIn([Optional] Action onFadeInDoneCallback)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xE333E4", Offset = "0xE333E4", VA = "0xE333E4")]
		public void FadeOut([Optional] Action onFadeOutDoneCallback)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xE33414", Offset = "0xE33414", VA = "0xE33414")]
		public void ForceSetAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xE33430", Offset = "0xE33430", VA = "0xE33430")]
		public void OnUpdate(float deltaTime)
		{
		}
	}
	[Token(Token = "0x20008E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C41C", Offset = "0xB1C41C")]
	public sealed class CheatCodes : MonoBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button[] cheatButtons;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent toggleCheat;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MainScreenController mainScreenController;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HitchhikerPlayerActions input;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlayerAction[] inputSequence;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerService playerService;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] buttonSequence;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly float inputSequenceResetTime;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float inputSequenceTime;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isEnteringInputSequence;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int inputSequenceIndex;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int buttonSequenceIndex;

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xE3C104", Offset = "0xE3C104", VA = "0xE3C104")]
		public CheatCodes()
		{
		}
	}
	[Token(Token = "0x20008E1")]
	public class CheatMenuScreen : MenuOverlayBase
	{
		[Serializable]
		[Token(Token = "0x20008E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C47C", Offset = "0xB1C47C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__4_1;

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x275E3C4", Offset = "0x275E3C4", VA = "0x275E3C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x275E3CC", Offset = "0x275E3CC", VA = "0x275E3CC")]
			internal void <.ctor>b__4_0()
			{
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x275E3D0", Offset = "0x275E3D0", VA = "0x275E3D0")]
			internal void <.ctor>b__4_1()
			{
			}
		}

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action onPush;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action onPop;

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xE3C198", Offset = "0xE3C198", VA = "0xE3C198", Slot = "18")]
		public override void OnPush()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xE3C1CC", Offset = "0xE3C1CC", VA = "0xE3C1CC", Slot = "19")]
		public override void OnPop()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xE3C200", Offset = "0xE3C200", VA = "0xE3C200")]
		public CheatMenuScreen()
		{
		}
	}
	[Token(Token = "0x20008E3")]
	public class GameplayCheatsController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C48C", Offset = "0xB1C48C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RegisteredCamera, RegisteredCamera, int> <>9__74_0;

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0xF155C0", Offset = "0xF155C0", VA = "0xF155C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xF155C8", Offset = "0xF155C8", VA = "0xF155C8")]
			internal int <FetchDebugCameras>b__74_0(RegisteredCamera a, RegisteredCamera b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28514", Offset = "0xB28514")]
		[SerializeField]
		private CheatMenuScreen _cheatMenuOverlayScreen;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CheatMenuScreen _cheatMenuScreen;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CheatMenuScreen _runtimeHierarchyAndInspectorScreen;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button _openCheatMenuScreenButton;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _openCheatMenuScreenButtonPauseMenu;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _closeCheatMenuScreenButton;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button _openRuntimeHierarchyAndInspectorScreenButton;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _closeRuntimeHierarchyAndInspectorScreenButton;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _fastForwardButton;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB285E0", Offset = "0xB285E0")]
		[SerializeField]
		private DebugToggleGraphyState _debugToggleGraphyState;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB28618", Offset = "0xB28618")]
		[SerializeField]
		private RectTransform _runtimeHierarchyPanel;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RectTransform _runtimeInspectorPanel;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ScrollRectNaviHelper _runtimeHierarchyScrollHelper;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ScrollRectNaviHelper _runtimeInspectorScrollHelper;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB28680", Offset = "0xB28680")]
		private Canvas _canvas;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GraphicRaycaster _graphicRaycaster;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RectTransform _virtualPointerTransform;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB286D8", Offset = "0xB286D8")]
		[SerializeField]
		private GameObject _gameUIRoot;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28724", Offset = "0xB28724")]
		private float _virtualPointerSpeed;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float _virtualPointerPageScrollSpeed;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _useEventSystemInGamepadMode;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SceneManagementService _sceneService;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SettingsService _settingsService;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InputService _inputService;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SoundService _soundService;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AchievementService _achievementService;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private PlayerService _playerService;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DebugSetUpDebugConsole _debugConsoleSetup;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _inFastForwardMode;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<RegisteredCamera> _sortedDebugCameras;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Dictionary<int, int> _cameraIndexToSortedIndex;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int _currentSortedDebugCameraIndex;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector2 _virtualPointerPosition;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool _virtualPointerActive;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<UnityEngine.EventSystems.RaycastResult> _raycastResults;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Canvas[] _uiCanvases;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _storedAllowMouseInput;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AchievementObject secretTestAchievement;

		[Token(Token = "0x17000332")]
		private SettingsData Settings
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xFD12C0", Offset = "0xFD12C0", VA = "0xFD12C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		private UIManager UIManager
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xFD12DC", Offset = "0xFD12DC", VA = "0xFD12DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private HitchhikerPlayerActions PlayerActions
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xFD135C", Offset = "0xFD135C", VA = "0xFD135C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		private RegisteredCarController CarController
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xFD1378", Offset = "0xFD1378", VA = "0xFD1378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public CheatMenuScreen CheatMenuOverlayScreen
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xFD1408", Offset = "0xFD1408", VA = "0xFD1408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xFD1410", Offset = "0xFD1410", VA = "0xFD1410")]
		public void RestartRide(bool formStart)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xFD1484", Offset = "0xFD1484", VA = "0xFD1484")]
		public void ToggleRuntimeHierarchy()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xFD14EC", Offset = "0xFD14EC", VA = "0xFD14EC")]
		public void ToggleRuntimeInspector()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xFD1554", Offset = "0xFD1554", VA = "0xFD1554")]
		public void ToggleGameUI()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xFD15E0", Offset = "0xFD15E0", VA = "0xFD15E0")]
		public void StartFastForwardNarrativeGraph()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xFD15E4", Offset = "0xFD15E4", VA = "0xFD15E4")]
		public void StartSkipNextNode()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xFD15E8", Offset = "0xFD15E8", VA = "0xFD15E8")]
		public void ToggleGraphyStats()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xFD1604", Offset = "0xFD1604", VA = "0xFD1604")]
		public void SwitchToCameraIndex(int offset)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xFD1D34", Offset = "0xFD1D34", VA = "0xFD1D34")]
		public void SwitchToNextCamera()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xFD1DE8", Offset = "0xFD1DE8", VA = "0xFD1DE8")]
		public void SwitchToPrevCamera()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xFD1DF0", Offset = "0xFD1DF0", VA = "0xFD1DF0")]
		public void ToggleGraphyDevice()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xFD1E0C", Offset = "0xFD1E0C", VA = "0xFD1E0C")]
		public void ToggleDebugConsole()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xFD1E28", Offset = "0xFD1E28", VA = "0xFD1E28")]
		public void CycleQualitySettings()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xFD1E98", Offset = "0xFD1E98", VA = "0xFD1E98")]
		public void CycleFontScaling()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xFD1E9C", Offset = "0xFD1E9C", VA = "0xFD1E9C")]
		public void ToggleAudioProcessing()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xFD1EA0", Offset = "0xFD1EA0", VA = "0xFD1EA0")]
		public void KillFMOD()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xFD1EA4", Offset = "0xFD1EA4", VA = "0xFD1EA4")]
		public void ResetAllAchievements()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xFD1EC0", Offset = "0xFD1EC0", VA = "0xFD1EC0")]
		public void ReportSecretAchievement()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xFD1EE4", Offset = "0xFD1EE4", VA = "0xFD1EE4")]
		public void ResetSecretAchievement()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xFD1F08", Offset = "0xFD1F08", VA = "0xFD1F08")]
		private void ToggleVirtualPointer(bool state)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xFD2164", Offset = "0xFD2164", VA = "0xFD2164")]
		private PointerEventData CreateVirtualPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xFD223C", Offset = "0xFD223C", VA = "0xFD223C")]
		private UnityEngine.EventSystems.RaycastResult RaycastFromVirtualPointer(PointerEventData eventData)
		{
			return default(UnityEngine.EventSystems.RaycastResult);
		}

		[Token(Token = "0x6001DE1")]
		private void SendVirtualPointerEvent<TEventHandler>(PointerEventData eventData, ExecuteEvents.EventFunction<TEventHandler> eventHandler, bool useEventSystem) where TEventHandler : IEventSystemHandler
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xFD2340", Offset = "0xFD2340", VA = "0xFD2340")]
		private void ScrollRuntimeHierarchy(float amount)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xFD2480", Offset = "0xFD2480", VA = "0xFD2480")]
		private void EnterHierarchyWindow()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xFD2570", Offset = "0xFD2570", VA = "0xFD2570")]
		private void ExitHierarchyWindow()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xFD25C8", Offset = "0xFD25C8", VA = "0xFD25C8")]
		private void FetchDebugCameras()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xFD1C44", Offset = "0xFD1C44", VA = "0xFD1C44")]
		private void SwitchToSortedCamera(int sortedIndex)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xFD1D3C", Offset = "0xFD1D3C", VA = "0xFD1D3C")]
		private void SwitchToNextSortedCameraIndex(int indexStep)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xFD2B58", Offset = "0xFD2B58", VA = "0xFD2B58")]
		public GameplayCheatsController()
		{
		}
	}
	[Token(Token = "0x20008E5")]
	public class IngameScreenshotTaker : MonoBehaviour
	{
		[Token(Token = "0x20008E6")]
		private class ScreenshotCameras
		{
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xF1A038", Offset = "0xF1A038", VA = "0xF1A038")]
			public ScreenshotCameras()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008E7")]
		private class Device
		{
			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string deviceName;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SettingsDataResolution resolution;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int dpi;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float screenSize;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SettingsDataQuality.QualityLevelSettings qualityLevel;

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xF19FBC", Offset = "0xF19FBC", VA = "0xF19FBC")]
			public Device(string _deviceName, SettingsDataResolution _resolution, int _dpi, SettingsDataQuality.QualityLevelSettings _qualityLevel, float _screenSize)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C49C", Offset = "0xB1C49C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Camera> <>9__22_0;

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xF189A4", Offset = "0xF189A4", VA = "0xF189A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xF189AC", Offset = "0xF189AC", VA = "0xF189AC")]
			internal int <TakeScreenshot>b__22_0(Camera x, Camera y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20008E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C4AC", Offset = "0xB1C4AC")]
		private sealed class <TakeScreenshot>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IngameScreenshotTaker <>4__this;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool displayUI;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SettingsData.DeviceScreenSettings <deviceScreenSettings>5__2;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Device[] <>7__wrap2;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap3;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Device <device>5__5;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__6;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Camera <currentCamera>5__7;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private RenderTexture <rt>5__8;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Texture2D <screenShot>5__9;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private List<Camera> <childCameras>5__10;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <j>5__11;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private bool <wasactive>5__12;

			[Token(Token = "0x17000337")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFC")]
				[Address(RVA = "0xF19F6C", Offset = "0xF19F6C", VA = "0xF19F6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0xF19FB4", Offset = "0xF19FB4", VA = "0xF19FB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xF18A00", Offset = "0xF18A00", VA = "0xF18A00")]
			[DebuggerHidden]
			public <TakeScreenshot>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xF18A2C", Offset = "0xF18A2C", VA = "0xF18A2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xF18A30", Offset = "0xF18A30", VA = "0xF18A30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xF19F74", Offset = "0xF19F74", VA = "0xF19F74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool captureOnlyExtraCameras;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> extraCameras;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool captureUI;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Device[] devices;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Device baseconfig;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SettingsService settingsSerivce;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayerService _playerService;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CameraManager cameraManager;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SettingsData data;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private DateTime currentTime;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RegisteredCamera> screenshotCameras;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RegisteredCamera playerCamera;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RegisteredCamera uiCamera;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ViewDistanceQuality distanceQuality;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly float[] FONT_SCALE_MAP;

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1275AE8", Offset = "0x1275AE8", VA = "0x1275AE8")]
		public bool Init()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x12763A8", Offset = "0x12763A8", VA = "0x12763A8")]
		private void ApplyFontScale(float dpi, SettingsData.DeviceScreenSettings deviceScreenSettings)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x12764AC", Offset = "0x12764AC", VA = "0x12764AC")]
		private void ApplyFontScale(float ScreenSize)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x127658C", Offset = "0x127658C", VA = "0x127658C")]
		public void OnScreenshotButtonPress(bool displayUI)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x1276674", Offset = "0x1276674", VA = "0x1276674")]
		private void EmulateDeviceProperties(Device device, SettingsData.DeviceScreenSettings deviceScreenSettings)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x12765E8", Offset = "0x12765E8", VA = "0x12765E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33548", Offset = "0xB33548")]
		private IEnumerator TakeScreenshot(bool displayUI)
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1276370", Offset = "0x1276370", VA = "0x1276370")]
		public static int GetDeviceScreenDiagonal(float dpi, Vector2 screenSize)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x127673C", Offset = "0x127673C", VA = "0x127673C")]
		public IngameScreenshotTaker()
		{
		}
	}
	[Token(Token = "0x20008EA")]
	public class CloudSavePromptController : MonoBehaviour
	{
		[Token(Token = "0x20008EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C4BC", Offset = "0xB1C4BC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<CloudSaveCheckDiffAnswer> chosenDataset;

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x275E43C", Offset = "0x275E43C", VA = "0x275E43C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x275E444", Offset = "0x275E444", VA = "0x275E444")]
			internal void <Display>b__0()
			{
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x275E49C", Offset = "0x275E49C", VA = "0x275E49C")]
			internal void <Display>b__1()
			{
			}
		}

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveVersionPanel panelA;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveVersionPanel panelB;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image panelAhighlight;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image panelBhighlight;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TMP_Text headerText;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text playerIDLabel;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text playerIDText;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultLineSpacing;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float arabicLineSpacing;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SelectableGroup selectableGroup;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SelectableGroup prevGroup;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isShowing;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private InputService _inputService;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool hasHighlight;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool highlightedPanel;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LocalizationService localizationService;

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xE3D3F0", Offset = "0xE3D3F0", VA = "0xE3D3F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xE3D4F0", Offset = "0xE3D4F0", VA = "0xE3D4F0")]
		public void Display(SaveGameData local, SaveGameData cloud, Action<CloudSaveCheckDiffAnswer> chosenDataset)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xE3D8B0", Offset = "0xE3D8B0", VA = "0xE3D8B0")]
		private void SetupDisplay()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xE3DBD4", Offset = "0xE3DBD4", VA = "0xE3DBD4")]
		private void HandleFakingInGameMenuEnter()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xE3DCE4", Offset = "0xE3DCE4", VA = "0xE3DCE4")]
		private void HandleFakingInGameMenuExit()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xE3DAFC", Offset = "0xE3DAFC", VA = "0xE3DAFC")]
		private string GetRideString(SaveGameData save)
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xE3DDF0", Offset = "0xE3DDF0", VA = "0xE3DDF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xE3E334", Offset = "0xE3E334", VA = "0xE3E334")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xE3E400", Offset = "0xE3E400", VA = "0xE3E400")]
		public CloudSavePromptController()
		{
		}
	}
	[Token(Token = "0x20008EC")]
	public class CursorUtil
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _isCursorVisibleAndUnlocked;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _isCursorSupported;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private static bool _cursorState_Cheat;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private static bool _cursorState_UIManager;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool _cursorState_Service;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static bool _cursorState_KALA;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private static bool _cursorState_CloudSavePrompt;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		private static bool _cursorState_MainMenu;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _cursorState_OutdatedCutsceneController;

		[Token(Token = "0x17000339")]
		public static bool IsLocked
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x1590380", Offset = "0x1590380", VA = "0x1590380")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x15903EC", Offset = "0x15903EC", VA = "0x15903EC")]
		public static void SetCursorVisible_CheatCursor(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x15904E8", Offset = "0x15904E8", VA = "0x15904E8")]
		public static void SetCursorVisible_KALA(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1590554", Offset = "0x1590554", VA = "0x1590554")]
		public static void SetCursorVisible_OutdatedCutsceneController(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x15905C0", Offset = "0x15905C0", VA = "0x15905C0")]
		public static void SetCursorVisible_UIManager(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x159062C", Offset = "0x159062C", VA = "0x159062C")]
		public static void SetCursorVisible_CloudSavePrompt(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1590698", Offset = "0x1590698", VA = "0x1590698")]
		public static void SetCursorVisible_MainMenu(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x1590704", Offset = "0x1590704", VA = "0x1590704")]
		public static void SetCursorVisible_InputService(bool showAndUnlock)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x15909B8", Offset = "0x15909B8", VA = "0x15909B8")]
		public static void SetCursorSupport(bool isCursorSupported)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x1590A58", Offset = "0x1590A58", VA = "0x1590A58")]
		public static void LockAndHide_MethodForScriptsThatShouldnt(string whyShouldntIt = "Because")
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x1590A5C", Offset = "0x1590A5C", VA = "0x1590A5C")]
		public static void UnlockAndShow_MethodForScriptsThatShouldnt(string whyShouldntIt = "Because")
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x1590888", Offset = "0x1590888", VA = "0x1590888")]
		private static bool IsCursorSupported(bool visibleState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x1590458", Offset = "0x1590458", VA = "0x1590458")]
		private static void ApplyCursorState(bool visibleState)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x1590A60", Offset = "0x1590A60", VA = "0x1590A60")]
		private static void ApplyCursorStateCheckService(bool visibleState)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x15908EC", Offset = "0x15908EC", VA = "0x15908EC")]
		private static void ForceApply(bool shouldBecomeVisible)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x1590AF0", Offset = "0x1590AF0", VA = "0x1590AF0")]
		public CursorUtil()
		{
		}
	}
	[Token(Token = "0x20008ED")]
	public class DebugSetUpDebugConsole : MonoBehaviour
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugLogPopup popUp;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugLogManager logManager;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoOpenConsoleOnError;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isOn;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x1124F54", Offset = "0x1124F54", VA = "0x1124F54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x1124FF8", Offset = "0x1124FF8", VA = "0x1124FF8")]
		private void CheckLogMessage(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x1125098", Offset = "0x1125098", VA = "0x1125098")]
		public void ToggleDebugConsole()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x112503C", Offset = "0x112503C", VA = "0x112503C")]
		private void SetDebugConsole(bool makeVisible)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x11250A8", Offset = "0x11250A8", VA = "0x11250A8")]
		public DebugSetUpDebugConsole()
		{
		}
	}
	[Token(Token = "0x20008EE")]
	public class DebugToggleGraphyState : MonoBehaviour
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GraphyManager mGraphyManager;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB287B0", Offset = "0xB287B0")]
		public DebugSelectByPhysicalScreenSize getGraphyManagerFrom;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int targetState;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool showingStats;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool showingDevice;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private bool alreadyWaitedOneFrame;

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x11250B0", Offset = "0x11250B0", VA = "0x11250B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x11252A8", Offset = "0x11252A8", VA = "0x11252A8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x1125404", Offset = "0x1125404", VA = "0x1125404")]
		public void ToggleStats()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x112547C", Offset = "0x112547C", VA = "0x112547C")]
		public void ToggleDevice()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x11254F4", Offset = "0x11254F4", VA = "0x11254F4")]
		public void ToggleGraphyState()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x112558C", Offset = "0x112558C", VA = "0x112558C")]
		public DebugToggleGraphyState()
		{
		}
	}
	[Token(Token = "0x20008EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C4CC", Offset = "0xB1C4CC")]
	public sealed class FadeAlphaCanvasGroup : MonoBehaviour
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool disableOnAwake;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent fadeInEvent;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent fadeOutEvent;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287F8", Offset = "0xB287F8")]
		private bool <Finished>k__BackingField;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool fadeIn;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float elapsedTimeInSeconds;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float fadeTimeInSeconds;

		[Token(Token = "0x1700033A")]
		public bool Finished
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xFC5A84", Offset = "0xFC5A84", VA = "0xFC5A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB335F8", Offset = "0xB335F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xFC5A8C", Offset = "0xFC5A8C", VA = "0xFC5A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33608", Offset = "0xB33608")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xFC5A98", Offset = "0xFC5A98", VA = "0xFC5A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xFC5B28", Offset = "0xFC5B28", VA = "0xFC5B28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xFC5C90", Offset = "0xFC5C90", VA = "0xFC5C90")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xFC5D8C", Offset = "0xFC5D8C", VA = "0xFC5D8C")]
		public void FadeIn(float fadeSeconds)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xFC5F04", Offset = "0xFC5F04", VA = "0xFC5F04")]
		public void FadeOut(float fadeSeconds)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xFC5DA0", Offset = "0xFC5DA0", VA = "0xFC5DA0")]
		private void AttachFromSplashScreenUpdater()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xFC5B2C", Offset = "0xFC5B2C", VA = "0xFC5B2C")]
		private void DetachFromSplashScreenUpdater()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xFC5F14", Offset = "0xFC5F14", VA = "0xFC5F14")]
		public FadeAlphaCanvasGroup()
		{
		}
	}
	[Token(Token = "0x20008F0")]
	public class FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _frameRateText;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _dumpFramerateToLog;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _framerateDumpCooldown;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float frameRate;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lastFrameRate;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastFrameRateInt;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _lastFrameRateDumpTime;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _framerateHasChanged;

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xFCDEC0", Offset = "0xFCDEC0", VA = "0xFCDEC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xFCDF30", Offset = "0xFCDF30", VA = "0xFCDF30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xFCE094", Offset = "0xFCE094", VA = "0xFCE094")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xFCE1F8", Offset = "0xFCE1F8", VA = "0xFCE1F8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xFCE2FC", Offset = "0xFCE2FC", VA = "0xFCE2FC")]
		public FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20008F1")]
	public class FrameRateDisplay : MonoBehaviour
	{
		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xFCE30C", Offset = "0xFCE30C", VA = "0xFCE30C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xFCE3D4", Offset = "0xFCE3D4", VA = "0xFCE3D4")]
		public FrameRateDisplay()
		{
		}
	}
	[Token(Token = "0x20008F2")]
	public class GraphicsFader : MonoBehaviour
	{
		[Token(Token = "0x20008F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C52C", Offset = "0xB1C52C")]
		private sealed class <FadeCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GraphicsFader <>4__this;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeOutAlphaValue;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeInAlphaValue;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E43")]
				[Address(RVA = "0xF15A60", Offset = "0xF15A60", VA = "0xF15A60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E45")]
				[Address(RVA = "0xF15AA8", Offset = "0xF15AA8", VA = "0xF15AA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xF155F4", Offset = "0xF155F4", VA = "0xF155F4")]
			[DebuggerHidden]
			public <FadeCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xF15620", Offset = "0xF15620", VA = "0xF15620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xF15624", Offset = "0xF15624", VA = "0xF15624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xF15A68", Offset = "0xF15A68", VA = "0xF15A68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28838", Offset = "0xB28838")]
		private float fadeInTime;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float fadeInAlphaValue;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeOutAlphaValue;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB288A4", Offset = "0xB288A4")]
		private bool autoDetectFadeInGraphics;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool autoDetectFadeOutGraphics;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[SerializeField]
		private bool autoDetectFadeInSelectables;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[SerializeField]
		private bool autoDetectFadeOutSelectables;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28920", Offset = "0xB28920")]
		private Graphic[] fadeInGraphics;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Graphic[] fadeOutGraphics;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Selectable[] fadeInSelectables;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Selectable[] fadeOutSelectables;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public UnityEvent onBegin;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public UnityEvent onEnd;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SimpleSignal skipSignal;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB289BC", Offset = "0xB289BC")]
		private bool <IsFading>k__BackingField;

		[Token(Token = "0x1700033B")]
		public bool IsFading
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xFD54D8", Offset = "0xFD54D8", VA = "0xFD54D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33618", Offset = "0xB33618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xFD54E0", Offset = "0xFD54E0", VA = "0xFD54E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33628", Offset = "0xB33628")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xFD54EC", Offset = "0xFD54EC", VA = "0xFD54EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xFD5640", Offset = "0xFD5640", VA = "0xFD5640")]
		public void BeginFade(bool reverse = false, [Optional] SimpleSignal skipSignal)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xFD569C", Offset = "0xFD569C", VA = "0xFD569C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33638", Offset = "0xB33638")]
		private IEnumerator FadeCoroutine(float fadeInAlphaValue, float fadeOutAlphaValue)
		{
			return null;
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xFD5728", Offset = "0xFD5728", VA = "0xFD5728")]
		private void CrossFadeAlpha(Graphic graphic, float alpha, float duration)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xFD5798", Offset = "0xFD5798", VA = "0xFD5798")]
		private void CrossFadeAlpha(Selectable selectable, float alpha, float duration)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xFD580C", Offset = "0xFD580C", VA = "0xFD580C")]
		public GraphicsFader()
		{
		}
	}
	[Token(Token = "0x20008F4")]
	public class InteractableControllerUtil
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected UIInteractableMarkerConfig markerConfig;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected UIInteractable _closest;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected UIInteractable _previousClosest;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB289CC", Offset = "0xB289CC")]
		private bool <SelectionLocked>k__BackingField;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB289DC", Offset = "0xB289DC")]
		private UIInteractable <SelectedInteractable>k__BackingField;

		[Token(Token = "0x1700033E")]
		public bool SelectionLocked
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xEA4ADC", Offset = "0xEA4ADC", VA = "0xEA4ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB336E8", Offset = "0xB336E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xEA4AE4", Offset = "0xEA4AE4", VA = "0xEA4AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB336F8", Offset = "0xB336F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public UIInteractable SelectedInteractable
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xEA4AF8", Offset = "0xEA4AF8", VA = "0xEA4AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33718", Offset = "0xB33718")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xEA4AF0", Offset = "0xEA4AF0", VA = "0xEA4AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33708", Offset = "0xB33708")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000340")]
		private Camera mainCamera
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xEA4B00", Offset = "0xEA4B00", VA = "0xEA4B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xEA4B88", Offset = "0xEA4B88", VA = "0xEA4B88", Slot = "4")]
		public virtual void Init(UIInteractableMarkerConfig markerConfig)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xEA4B90", Offset = "0xEA4B90", VA = "0xEA4B90")]
		public void SetClosestInteractable(UIInteractable newClosest)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xEA4C84", Offset = "0xEA4C84", VA = "0xEA4C84", Slot = "5")]
		public virtual void DisplayMarkers(List<UIInteractable> uiInteractables)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xEA4F90", Offset = "0xEA4F90", VA = "0xEA4F90")]
		public void HandleUpdateInteractable(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xEA511C", Offset = "0xEA511C", VA = "0xEA511C")]
		public void HandleSelection(List<UIInteractable> uiInteractables)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xEA52E0", Offset = "0xEA52E0", VA = "0xEA52E0")]
		private void ClearNonSelectedInteractables(List<UIInteractable> uiInteractables)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xEA51EC", Offset = "0xEA51EC", VA = "0xEA51EC")]
		private void SelectInteractable(UIInteractable closest)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xEA5044", Offset = "0xEA5044", VA = "0xEA5044")]
		private void DeselectInteractable(UIInteractable uiInteractable)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xEA5424", Offset = "0xEA5424", VA = "0xEA5424")]
		public InteractableControllerUtil()
		{
		}
	}
	[Token(Token = "0x20008F5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1C53C", Offset = "0xB1C53C")]
	public class InteractionIconList : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20008F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C59C", Offset = "0xB1C59C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<LookAtIcon> <>9__1_0;

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xF1C67C", Offset = "0xF1C67C", VA = "0xF1C67C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xF1C684", Offset = "0xF1C684", VA = "0xF1C684")]
			internal bool <FindIconSprite>b__1_0(LookAtIcon x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LookAtIcon> interactions;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xEAA1F4", Offset = "0xEAA1F4", VA = "0xEAA1F4")]
		public Sprite FindIconSprite(LocaKey locaKey)
		{
			return null;
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xEAA448", Offset = "0xEAA448", VA = "0xEAA448")]
		public InteractionIconList()
		{
		}
	}
	[Token(Token = "0x20008F7")]
	public class DebugInventoryContent : MonoBehaviour
	{
		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> items;

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x1124D84", Offset = "0x1124D84", VA = "0x1124D84")]
		public DebugInventoryContent()
		{
		}
	}
	[Token(Token = "0x20008F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1C5AC", Offset = "0xB1C5AC")]
	public class InventoryItemCollection : ScriptableObject
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<InventoryItem> items;

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xEAC1C0", Offset = "0xEAC1C0", VA = "0xEAC1C0")]
		public InventoryItemCollection()
		{
		}
	}
	[Token(Token = "0x20008F9")]
	public class InventoryUIController : MenuOverlayBase
	{
		[Token(Token = "0x20008FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C614", Offset = "0xB1C614")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InventoryItem item;

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xF1D63C", Offset = "0xF1D63C", VA = "0xF1D63C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xF1D644", Offset = "0xF1D644", VA = "0xF1D644")]
			internal void <ConfigureItemSlot>b__0()
			{
			}
		}

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int itemsPerPage;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB289EC", Offset = "0xB289EC")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB289EC", Offset = "0xB289EC")]
		public int currentPage;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public bool onlyHideUnusedSlots;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28A60", Offset = "0xB28A60")]
		public InventoryItemCollection availableItems;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28AAC", Offset = "0xB28AAC")]
		[SerializeField]
		public List<UIInventoryItem> itemSlots;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public List<UIInventoryPageDot> pageDots;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public GameObject knobLeft;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public GameObject knobRight;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[EventRef]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28B28", Offset = "0xB28B28")]
		private string _enterSoundEvent;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[EventRef]
		[SerializeField]
		private string _exitSoundEvent;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28BBC", Offset = "0xB28BBC")]
		public InventoryItemCollection debugContent;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlayerService _playerService;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private LocalizationService _localizationService;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SoundService _soundService;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> currentContent;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<string, InventoryItem> items;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isInitialized;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int currentNumPages;

		[Token(Token = "0x4001C43")]
		private const float ASPECTRATIO_THRESHOLD_FOR_REDUCED_ITEMS = 1.65f;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private UILookAtItemDisplay_LightingController lightingController;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB28BF4", Offset = "0xB28BF4")]
		public bool isMobile;

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xEAD404", Offset = "0xEAD404", VA = "0xEAD404", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xEAD40C", Offset = "0xEAD40C", VA = "0xEAD40C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xEAD454", Offset = "0xEAD454", VA = "0xEAD454")]
		private void SetNumItemSlots(int numItemSlots)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xEAD7C8", Offset = "0xEAD7C8", VA = "0xEAD7C8", Slot = "14")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xEAD9C8", Offset = "0xEAD9C8", VA = "0xEAD9C8", Slot = "15")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xEAD9D0", Offset = "0xEAD9D0", VA = "0xEAD9D0", Slot = "18")]
		public override void OnPush()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xEADA10", Offset = "0xEADA10", VA = "0xEADA10", Slot = "19")]
		public override void OnPop()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xEADA50", Offset = "0xEADA50", VA = "0xEADA50")]
		public void OpenInventory()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xEADB24", Offset = "0xEADB24", VA = "0xEADB24")]
		public void CloseInventory()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xEADB48", Offset = "0xEADB48", VA = "0xEADB48")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xEADB98", Offset = "0xEADB98", VA = "0xEADB98")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xEAD588", Offset = "0xEAD588", VA = "0xEAD588")]
		private List<string> GetPlayerInventory()
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xEAD6D8", Offset = "0xEAD6D8", VA = "0xEAD6D8")]
		private void UpdateInventory()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xEADCB4", Offset = "0xEADCB4", VA = "0xEADCB4")]
		private void SetupInventoryContent(List<InventoryItem> items)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xEADBE8", Offset = "0xEADBE8", VA = "0xEADBE8")]
		private void SetupInventoryContent(List<string> items)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xEADDCC", Offset = "0xEADDCC", VA = "0xEADDCC")]
		private int CalcNumPages(int numItems)
		{
			return default(int);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xEAE0F4", Offset = "0xEAE0F4", VA = "0xEAE0F4")]
		private void ConfigureAllItemSlots(List<string> items)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xEAE234", Offset = "0xEAE234", VA = "0xEAE234")]
		private void ConfigureItemSlot(UIInventoryItem itemSlot, string itemName)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xEADDE4", Offset = "0xEADDE4", VA = "0xEADDE4")]
		private void SetupNumPages(int numPages)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xEADE9C", Offset = "0xEADE9C", VA = "0xEADE9C")]
		private void SetupCurrentPage(int curPage)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xEAE544", Offset = "0xEAE544", VA = "0xEAE544")]
		public InventoryUIController()
		{
		}
	}
	[Token(Token = "0x20008FB")]
	public class UIInventoryItem : MonoBehaviour
	{
		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28C04", Offset = "0xB28C04")]
		public Text title;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image image;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.CanvasGroup group;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xF27DD8", Offset = "0xF27DD8", VA = "0xF27DD8")]
		public void SetTitle(string t)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xF27F54", Offset = "0xF27F54", VA = "0xF27F54")]
		public void SetImage(Sprite tex, Color col)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xF28048", Offset = "0xF28048", VA = "0xF28048")]
		public void Set3DObject(InventoryItem item)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xF281DC", Offset = "0xF281DC", VA = "0xF281DC")]
		private void RemoveOldInventoryItem()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xF28494", Offset = "0xF28494", VA = "0xF28494")]
		private void SetImageAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xF282A8", Offset = "0xF282A8", VA = "0xF282A8")]
		private void SetLayerAllChildren(Transform root, int layer)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xF28370", Offset = "0xF28370", VA = "0xF28370")]
		private void OrientateObject(Transform objectTransform, Vector3 position, Vector3 rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xF284F0", Offset = "0xF284F0", VA = "0xF284F0")]
		public void SetVisibility(bool isVisible, bool onlyHide)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xF28674", Offset = "0xF28674", VA = "0xF28674")]
		public UIInventoryItem()
		{
		}
	}
	[Token(Token = "0x20008FC")]
	public class UIInventoryPageDot : MonoBehaviour
	{
		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image image;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color normal;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color active;

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xF2867C", Offset = "0xF2867C", VA = "0xF2867C")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xF28760", Offset = "0xF28760", VA = "0xF28760")]
		public UIInventoryPageDot()
		{
		}
	}
	[Token(Token = "0x20008FD")]
	public class LoadTextResource : MonoBehaviour
	{
		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28C3C", Offset = "0xB28C3C")]
		public TextAsset textAsset;

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xEB493C", Offset = "0xEB493C", VA = "0xEB493C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xEB4988", Offset = "0xEB4988", VA = "0xEB4988")]
		public LoadTextResource()
		{
		}
	}
	[Token(Token = "0x20008FE")]
	public class LoadTextResourceOnDemand : MonoBehaviour
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool disableOnEmptyText;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SettingsService settingsService;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int defaultSize;

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xEB4990", Offset = "0xEB4990", VA = "0xEB4990")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xEB4994", Offset = "0xEB4994", VA = "0xEB4994")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xEB4A84", Offset = "0xEB4A84", VA = "0xEB4A84")]
		public void UpdateFontSize(float dummy = 0f)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xEB4B50", Offset = "0xEB4B50", VA = "0xEB4B50")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xEB4BC4", Offset = "0xEB4BC4", VA = "0xEB4BC4")]
		public LoadTextResourceOnDemand()
		{
		}
	}
	[Token(Token = "0x20008FF")]
	public class LoadingScreenController : MonoBehaviour
	{
		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator splashAnimator;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image driveLicenseImage;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite[] driverLicenses;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SceneManagementService sceneManagementService;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SoundService soundService;

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xEB4BCC", Offset = "0xEB4BCC", VA = "0xEB4BCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xEB4E50", Offset = "0xEB4E50", VA = "0xEB4E50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xEB4EE8", Offset = "0xEB4EE8", VA = "0xEB4EE8")]
		public LoadingScreenController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000900")]
	public class LookAtIcon
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string interactionName;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite icon;

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xEB74BC", Offset = "0xEB74BC", VA = "0xEB74BC")]
		public LookAtIcon()
		{
		}
	}
	[Token(Token = "0x2000901")]
	public class DisplayApplicationVersion : MonoBehaviour
	{
		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4001C5C")]
		private const string locaKey = "Settings.Extras.Version";

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x1126770", Offset = "0x1126770", VA = "0x1126770")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x1126774", Offset = "0x1126774", VA = "0x1126774")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x112690C", Offset = "0x112690C", VA = "0x112690C")]
		public DisplayApplicationVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000902")]
	public class IntroSequence
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public GraphicsFader inputRequirementsFaderDesktop;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GraphicsFader inputRequirementsFaderMobile;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string inputRequirementsFilter;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GraphicsFader inputOptionsFaderDesktop;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public GraphicsFader inputOptionsFaderMobile;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xEAB5E8", Offset = "0xEAB5E8", VA = "0xEAB5E8")]
		public IntroSequence()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000903")]
	public class IntroSequencePlatformInstance : PlatformInstance<IntroSequence>
	{
		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xEAB5F0", Offset = "0xEAB5F0", VA = "0xEAB5F0")]
		public IntroSequencePlatformInstance()
		{
		}
	}
	[Token(Token = "0x2000904")]
	public class IntroOverlayController : MonoBehaviour
	{
		[Token(Token = "0x2000905")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C624", Offset = "0xB1C624")]
		private sealed class <FadeCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroOverlayController <>4__this;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <fadingEnumerator>5__2;

			[Token(Token = "0x17000341")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9D")]
				[Address(RVA = "0xF1D32C", Offset = "0xF1D32C", VA = "0xF1D32C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0xF1D374", Offset = "0xF1D374", VA = "0xF1D374", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xF1CE54", Offset = "0xF1CE54", VA = "0xF1CE54")]
			[DebuggerHidden]
			public <FadeCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xF1CE80", Offset = "0xF1CE80", VA = "0xF1CE80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xF1CE84", Offset = "0xF1CE84", VA = "0xF1CE84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xF1D334", Offset = "0xF1D334", VA = "0xF1D334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000906")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C634", Offset = "0xB1C634")]
		private sealed class <EnumerateInputSequenceFading>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GraphicsFader inputOptionsFader;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IntroOverlayController <>4__this;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GraphicsFader inputRequirementsFader;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string inputRequirementsFilter;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA3")]
				[Address(RVA = "0xF1CB60", Offset = "0xF1CB60", VA = "0xF1CB60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA5")]
				[Address(RVA = "0xF1CBA8", Offset = "0xF1CBA8", VA = "0xF1CBA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xF1C750", Offset = "0xF1C750", VA = "0xF1C750")]
			[DebuggerHidden]
			public <EnumerateInputSequenceFading>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xF1C77C", Offset = "0xF1C77C", VA = "0xF1C77C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xF1C780", Offset = "0xF1C780", VA = "0xF1C780", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xF1CB68", Offset = "0xF1CB68", VA = "0xF1CB68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000907")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C644", Offset = "0xB1C644")]
		private sealed class <SkipSignalCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroOverlayController <>4__this;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA9")]
				[Address(RVA = "0xF1D478", Offset = "0xF1D478", VA = "0xF1D478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAB")]
				[Address(RVA = "0xF1D4C0", Offset = "0xF1D4C0", VA = "0xF1D4C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xF1D37C", Offset = "0xF1D37C", VA = "0xF1D37C")]
			[DebuggerHidden]
			public <SkipSignalCoroutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xF1D3A8", Offset = "0xF1D3A8", VA = "0xF1D3A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xF1D3AC", Offset = "0xF1D3AC", VA = "0xF1D3AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xF1D480", Offset = "0xF1D480", VA = "0xF1D480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C654", Offset = "0xB1C654")]
		private sealed class <EnumerateSkippableWaiting>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroOverlayController <>4__this;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float waitTime;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAF")]
				[Address(RVA = "0xF1CE04", Offset = "0xF1CE04", VA = "0xF1CE04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB1")]
				[Address(RVA = "0xF1CE4C", Offset = "0xF1CE4C", VA = "0xF1CE4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xF1CD2C", Offset = "0xF1CD2C", VA = "0xF1CD2C")]
			[DebuggerHidden]
			public <EnumerateSkippableWaiting>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xF1CD58", Offset = "0xF1CD58", VA = "0xF1CD58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xF1CD5C", Offset = "0xF1CD5C", VA = "0xF1CD5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xF1CE0C", Offset = "0xF1CE0C", VA = "0xF1CE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000909")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C664", Offset = "0xB1C664")]
		private sealed class <EnumerateSkippableFading>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroOverlayController <>4__this;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GraphicsFader graphicsFader;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool reverse;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB5")]
				[Address(RVA = "0xF1CCDC", Offset = "0xF1CCDC", VA = "0xF1CCDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0xF1CD24", Offset = "0xF1CD24", VA = "0xF1CD24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xF1CBB0", Offset = "0xF1CBB0", VA = "0xF1CBB0")]
			[DebuggerHidden]
			public <EnumerateSkippableFading>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xF1CBDC", Offset = "0xF1CBDC", VA = "0xF1CBDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xF1CBE0", Offset = "0xF1CBE0", VA = "0xF1CBE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xF1CCE4", Offset = "0xF1CCE4", VA = "0xF1CCE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200090A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C674", Offset = "0xB1C674")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__27_0;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__27_1;

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xF1C740", Offset = "0xF1C740", VA = "0xF1C740")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xF1C748", Offset = "0xF1C748", VA = "0xF1C748")]
			internal void <.ctor>b__27_0()
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xF1C74C", Offset = "0xF1C74C", VA = "0xF1C74C")]
			internal void <.ctor>b__27_1()
			{
			}
		}

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28D14", Offset = "0xB28D14")]
		private float preDelay;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float postOptionsDelay;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Platform overrideEditorPlatform;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool skipBackgroundFading;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28D90", Offset = "0xB28D90")]
		public ScreenLayoutSwitcher layoutSwitcher;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public TMP_Text[] textFieldsToLocalize;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28DEC", Offset = "0xB28DEC")]
		public GraphicsFader introBackgroundFader;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public IntroSequencePlatformInstance[] introSequences;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputService inputService;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool lastRequiredDevicePresent;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SimpleSignal skipSignal;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action onBeforeEndAnimation;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action onEnd;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isInitialized;

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xEAA7B4", Offset = "0xEAA7B4", VA = "0xEAA7B4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xEAAD74", Offset = "0xEAAD74", VA = "0xEAAD74")]
		public void StartIntro(Action onFinished)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xEAAEAC", Offset = "0xEAAEAC", VA = "0xEAAEAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33728", Offset = "0xB33728")]
		private IEnumerator FadeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xEAAF9C", Offset = "0xEAAF9C", VA = "0xEAAF9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33788", Offset = "0xB33788")]
		private IEnumerator EnumerateInputSequenceFading(GraphicsFader inputRequirementsFader, GraphicsFader inputOptionsFader, string inputRequirementsFilter)
		{
			return null;
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xEAAF24", Offset = "0xEAAF24", VA = "0xEAAF24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB337E8", Offset = "0xB337E8")]
		public IEnumerator SkipSignalCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xEAB060", Offset = "0xEAB060", VA = "0xEAB060")]
		private bool HasRequiredDeviceChanged(string inputRequirementsFilter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xEAB0C0", Offset = "0xEAB0C0", VA = "0xEAB0C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33848", Offset = "0xB33848")]
		private IEnumerator EnumerateSkippableWaiting(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xEAB148", Offset = "0xEAB148", VA = "0xEAB148")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB338A8", Offset = "0xB338A8")]
		private IEnumerator EnumerateSkippableFading(GraphicsFader graphicsFader, bool reverse = false)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xEAB1E8", Offset = "0xEAB1E8", VA = "0xEAB1E8")]
		private void Fade(GraphicsFader graphicsFader, bool reverse = false, [Optional] SimpleSignal skipSignal)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xEAB258", Offset = "0xEAB258", VA = "0xEAB258")]
		private IntroSequence FindIntroSequenceForCurrentPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xEAA91C", Offset = "0xEAA91C", VA = "0xEAA91C")]
		private List<GraphicsFader> GetIntroSequenceFaders()
		{
			return null;
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xEAAAB0", Offset = "0xEAAAB0", VA = "0xEAAAB0")]
		private void HideGraphicsFaders(List<GraphicsFader> graphicsFaders)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xEAB3A0", Offset = "0xEAB3A0", VA = "0xEAB3A0")]
		public IntroOverlayController()
		{
		}
	}
	[Token(Token = "0x200090B")]
	public class MainMenuCheatsController : MonoBehaviour
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28E48", Offset = "0xB28E48")]
		private SceneSet testRideSceneSet;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject fontTest;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToggleGameObjects GameObjectToggler;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DebugSetUpDebugConsole debugConsoleSetup;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SceneManagementService _sceneManagementService;

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x157ED20", Offset = "0x157ED20", VA = "0x157ED20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x157ED24", Offset = "0x157ED24", VA = "0x157ED24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x157EE88", Offset = "0x157EE88", VA = "0x157EE88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x157EFEC", Offset = "0x157EFEC", VA = "0x157EFEC")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x157EFF0", Offset = "0x157EFF0", VA = "0x157EFF0")]
		public void DeleteSaveGame()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x157EFF4", Offset = "0x157EFF4", VA = "0x157EFF4")]
		public void ToggleUnlockRides()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x157EFF8", Offset = "0x157EFF8", VA = "0x157EFF8")]
		public void ToggleFontTest()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x157EFFC", Offset = "0x157EFFC", VA = "0x157EFFC")]
		public void LoadTestRide()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x157F000", Offset = "0x157F000", VA = "0x157F000")]
		public void ToggleDebugConsole()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x157F004", Offset = "0x157F004", VA = "0x157F004")]
		public void ToggleNoCarMovement()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x157F008", Offset = "0x157F008", VA = "0x157F008")]
		public void DeleteAllCloudData()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x157F00C", Offset = "0x157F00C", VA = "0x157F00C")]
		public MainMenuCheatsController()
		{
		}
	}
	[Token(Token = "0x200090C")]
	public class MainMenuInitializer : MonoBehaviour
	{
		[Token(Token = "0x200090D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C684", Offset = "0xB1C684")]
		private sealed class <FadeInMainMenu>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainMenuInitializer <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED4")]
				[Address(RVA = "0xF22524", Offset = "0xF22524", VA = "0xF22524", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED6")]
				[Address(RVA = "0xF2256C", Offset = "0xF2256C", VA = "0xF2256C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xF22344", Offset = "0xF22344", VA = "0xF22344")]
			[DebuggerHidden]
			public <FadeInMainMenu>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xF22370", Offset = "0xF22370", VA = "0xF22370", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xF22374", Offset = "0xF22374", VA = "0xF22374", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xF2252C", Offset = "0xF2252C", VA = "0xF2252C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28EB4", Offset = "0xB28EB4")]
		[SerializeField]
		private MainMenuReferences _mainMenuReferences;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GameObject[] logoObjects;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SceneManagementService _sceneManagementService;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputService _inputService;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerService _playerService;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool firstMenuInit;

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x157F014", Offset = "0x157F014", VA = "0x157F014")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x157F2F0", Offset = "0x157F2F0", VA = "0x157F2F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33A98", Offset = "0xB33A98")]
		private IEnumerator FadeInMainMenu()
		{
			return null;
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x157F368", Offset = "0x157F368", VA = "0x157F368")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x157F3C8", Offset = "0x157F3C8", VA = "0x157F3C8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x1580214", Offset = "0x1580214", VA = "0x1580214")]
		private void OnIntroAnimationEnded()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x15805C8", Offset = "0x15805C8", VA = "0x15805C8")]
		private void OnEnterReplayMenu(SelectableGroup group)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x1580720", Offset = "0x1580720", VA = "0x1580720")]
		private void SetUpFadeDuringLoadVR()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x1580898", Offset = "0x1580898", VA = "0x1580898")]
		public MainMenuInitializer()
		{
		}
	}
	[Token(Token = "0x200090E")]
	public class MainMenuReferences : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200090F")]
		public class BaseScreen
		{
			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public MainMenuScreen screen;

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xF22574", Offset = "0xF22574", VA = "0xF22574")]
			public BaseScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000910")]
		public class SettingsTabSubScreen : BaseScreen
		{
			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29208", Offset = "0xB29208")]
			public UnityEngine.UI.Toggle tabToggle;

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xF22658", Offset = "0xF22658", VA = "0xF22658")]
			public SettingsTabSubScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000911")]
		public class SettingsDropdownListScreen : BaseScreen
		{
			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29240", Offset = "0xB29240")]
			[SerializeField]
			public ToggleGroup toggleGroup;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public GameObject togglePrefab;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public List<SettingsDropdownListEntry> entries;

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xF22670", Offset = "0xF22670", VA = "0xF22670")]
			public SettingsDropdownListScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000912")]
		public class MainScreen : BaseScreen
		{
			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29298", Offset = "0xB29298")]
			[SerializeField]
			public GameObject spacer;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Button continueButton;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Button replayButton;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Button newGameButton;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Button settingsButton;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public Button gameCenterButton;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public Button exitButton;

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xF2257C", Offset = "0xF2257C", VA = "0xF2257C")]
			public MainScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000913")]
		public class ReplayScreen : BaseScreen
		{
			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29330", Offset = "0xB29330")]
			[SerializeField]
			public Button[] rideButtons;

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xF22584", Offset = "0xF22584", VA = "0xF22584")]
			public void FadeScreen()
			{
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xF225E8", Offset = "0xF225E8", VA = "0xF225E8")]
			public ReplayScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000914")]
		public class SettingsScreen : BaseScreen
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29368", Offset = "0xB29368")]
			[SerializeField]
			public GameObject videoScreenTabButtonThing;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public GameObject SpacerOfVideoScreenTabButtonThing;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB293B0", Offset = "0xB293B0")]
			[SerializeField]
			public ToggleGroup tabToggleGroup;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB293E8", Offset = "0xB293E8")]
			[SerializeField]
			public Button achievementsButton;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public RectTransform achievementsButtonSpacer;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public Button creditsButton;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public Button supportButton;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			public Button privacyButton;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29460", Offset = "0xB29460")]
			public Button websiteButton;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			public Button facebookButton;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			public Button twitterButton;

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xF226A0", Offset = "0xF226A0", VA = "0xF226A0")]
			public SettingsScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000915")]
		public class SettingsGeneralScreen : SettingsTabSubScreen
		{
			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB294B8", Offset = "0xB294B8")]
			public Button lanquageSelectionButton;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Localize lanquageSelectionLocalize;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public UnityEngine.UI.Toggle subtitlesToggle;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Slider fontScaleSlider;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public Text fontSizeText;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public Button deleteSavegameButton;

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xF22678", Offset = "0xF22678", VA = "0xF22678")]
			public SettingsGeneralScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000916")]
		public class SettingsVideoScreen : SettingsTabSubScreen
		{
			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29540", Offset = "0xB29540")]
			[SerializeField]
			public Button qualityLevelButton;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Localize qualityLevelLocalize;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Button displayButton;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Text displayText;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public Button resolutionButton;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public Text resolutionText;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			public Button renderResolutionButton;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			public Localize renderResolutionLocalize;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			public GameObject fullscreenModeGroup;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			public UnityEngine.UI.Toggle fullscreenModeToggle;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			public Slider gammaSlider;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			public GameObject showFramerateGroup;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			public UnityEngine.UI.Toggle showFramerateToggle;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			public Button autoDetectButton;

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xF226A8", Offset = "0xF226A8", VA = "0xF226A8")]
			public SettingsVideoScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000917")]
		public class SettingsAudioScreen : SettingsTabSubScreen
		{
			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29648", Offset = "0xB29648")]
			public Slider masterVolumeSlider;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Slider musicVolumeSlider;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Slider soundVolumeSlider;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Slider voiceVolumeSlider;

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xF22650", Offset = "0xF22650", VA = "0xF22650")]
			public SettingsAudioScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000918")]
		public class SettingsControlsScreen : SettingsTabSubScreen
		{
			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB296B0", Offset = "0xB296B0")]
			[SerializeField]
			public GameObject inputSensitivityGroup;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Slider inputSensitivitySlider;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Text inputSensitivityText;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public GameObject invertVerticalGroup;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public UnityEngine.UI.Toggle invertVerticalToggle;

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xF22660", Offset = "0xF22660", VA = "0xF22660")]
			public SettingsControlsScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000919")]
		public class SettingsQualityScreen : SettingsDropdownListScreen
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xF22688", Offset = "0xF22688", VA = "0xF22688")]
			public SettingsQualityScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200091A")]
		public class SettingsLanguageScreen : SettingsDropdownListScreen
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xF22680", Offset = "0xF22680", VA = "0xF22680")]
			public SettingsLanguageScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200091B")]
		public class SettingsResolutionScreen : SettingsDropdownListScreen
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xF22698", Offset = "0xF22698", VA = "0xF22698")]
			public SettingsResolutionScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200091C")]
		public class SettingsRenderResolutionScreen : SettingsDropdownListScreen
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xF22690", Offset = "0xF22690", VA = "0xF22690")]
			public SettingsRenderResolutionScreen()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200091D")]
		public class SettingsDisplayScreen : SettingsDropdownListScreen
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xF22668", Offset = "0xF22668", VA = "0xF22668")]
			public SettingsDisplayScreen()
			{
			}
		}

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28F20", Offset = "0xB28F20")]
		[SerializeField]
		public MainScreenController mainScreenController;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public SettingsScreenController settingsScreenController;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public ScreenLayoutSwitcher mainScreenLayoutSwitcher;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public ModalWindowController modalWindowController;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public CreditsController creditsController;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public GameCenterAccessPointController gameCenterAccessPointController;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB28FBC", Offset = "0xB28FBC")]
		public GraphicsFader introOverlayGraphicsFader;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29008", Offset = "0xB29008")]
		public SelectableGroup gameCenterAccessPointSelectableGroup;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public SelectableGroup mainScreenMenuSelectableGroup;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Button gameCenterAccessPointButton;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public UnityEngine.CanvasGroup gameCenterAccessPointCanvasGroup;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29084", Offset = "0xB29084")]
		[SerializeField]
		public MainScreen mainScreen;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public MainScreen mainScreenMobile;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public ReplayScreen replayScreen;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB290F0", Offset = "0xB290F0")]
		[SerializeField]
		public SettingsScreen settingsScreen;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public SettingsGeneralScreen settingsGeneralScreen;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public SettingsVideoScreen settingsVideoScreen;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public SettingsAudioScreen settingsAudioScreen;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public SettingsControlsScreen settingsControlsScreen;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public SettingsQualityScreen settingsQualityScreen;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public SettingsLanguageScreen settingsLanguageScreen;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public SettingsResolutionScreen settingsResolutionScreen;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public SettingsRenderResolutionScreen settingsRenderResolutionScreen;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public SettingsDisplayScreen settingsDisplayScreen;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public BaseScreen creditsScreen;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB291C8", Offset = "0xB291C8")]
		private ScreenHistory<MainMenuScreen> <MainMenuHistory>k__BackingField;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB291D8", Offset = "0xB291D8")]
		private ScreenGroup<MainMenuScreen> <AllScreensGroup>k__BackingField;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB291E8", Offset = "0xB291E8")]
		private ScreenGroup<MainMenuScreen> <SettingsSubScreenGroup>k__BackingField;

		[Token(Token = "0x1700034D")]
		public ScreenHistory<MainMenuScreen> MainMenuHistory
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x1580950", Offset = "0x1580950", VA = "0x1580950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B48", Offset = "0xB33B48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x1580958", Offset = "0x1580958", VA = "0x1580958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B58", Offset = "0xB33B58")]
			private set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public ScreenGroup<MainMenuScreen> AllScreensGroup
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x1580960", Offset = "0x1580960", VA = "0x1580960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B68", Offset = "0xB33B68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x1580968", Offset = "0x1580968", VA = "0x1580968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B78", Offset = "0xB33B78")]
			private set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public ScreenGroup<MainMenuScreen> SettingsSubScreenGroup
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x1580970", Offset = "0x1580970", VA = "0x1580970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B88", Offset = "0xB33B88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x1580978", Offset = "0x1580978", VA = "0x1580978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B98", Offset = "0xB33B98")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1580980", Offset = "0x1580980", VA = "0x1580980")]
		public MainMenuReferences()
		{
		}
	}
	[Token(Token = "0x200091E")]
	public class MainMenuScreen : CanvasScreen
	{
		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29728", Offset = "0xB29728")]
		private SelectableGroup _selectableGroup;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public Button backButton;

		[Token(Token = "0x17000350")]
		public SelectableGroup SelectableGroup
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x1580A7C", Offset = "0x1580A7C", VA = "0x1580A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1580A84", Offset = "0x1580A84", VA = "0x1580A84", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1580B4C", Offset = "0x1580B4C", VA = "0x1580B4C")]
		public MainMenuScreen()
		{
		}
	}
	[Token(Token = "0x200091F")]
	public class MainScreenController : MonoBehaviour
	{
		[Token(Token = "0x2000920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C694", Offset = "0xB1C694")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int rideNumber;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MainScreenController <>4__this;

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xF22778", Offset = "0xF22778", VA = "0xF22778")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xF22780", Offset = "0xF22780", VA = "0xF22780")]
			internal void <Init>b__8()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000921")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C6A4", Offset = "0xB1C6A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__22_3;

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xF22714", Offset = "0xF22714", VA = "0xF22714")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xF2271C", Offset = "0xF2271C", VA = "0xF2271C")]
			internal void <Init>b__22_3()
			{
			}
		}

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29784", Offset = "0xB29784")]
		private MainMenuReferences _mainMenuReferences;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB297D0", Offset = "0xB297D0")]
		private bool _disableContinue;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _disableReplay;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _unlockAllRides;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneManagementService _sceneManagementService;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerService _playerService;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputService _inputService;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AchievementService _achievementService;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AchievementObject achievementID;

		[Token(Token = "0x17000351")]
		private MainMenuReferences.MainScreen MainScreen
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x1580BA0", Offset = "0x1580BA0", VA = "0x1580BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		private MainMenuReferences.MainScreen MainScreenMobile
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x1580BBC", Offset = "0x1580BBC", VA = "0x1580BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		private MainMenuReferences.ReplayScreen ReplayScreen
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x1580BD8", Offset = "0x1580BD8", VA = "0x1580BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		private ScreenHistory<MainMenuScreen> MainMenuHistory
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x1580BF4", Offset = "0x1580BF4", VA = "0x1580BF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public bool UnlockAllRides
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x1580C10", Offset = "0x1580C10", VA = "0x1580C10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x1580C18", Offset = "0x1580C18", VA = "0x1580C18")]
			set
			{
			}
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1580C24", Offset = "0x1580C24", VA = "0x1580C24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1580E30", Offset = "0x1580E30", VA = "0x1580E30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x157FB50", Offset = "0x157FB50", VA = "0x157FB50")]
		public void Init()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x15801A0", Offset = "0x15801A0", VA = "0x15801A0")]
		public void InitSelectableGroups()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x1580468", Offset = "0x1580468", VA = "0x1580468")]
		public void AutoDetectResult()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x158153C", Offset = "0x158153C", VA = "0x158153C")]
		private void OnNewGame()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x15800FC", Offset = "0x15800FC", VA = "0x15800FC")]
		public void PushScreen(MainMenuScreen screen, bool enterSelectableGroup = true)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1581558", Offset = "0x1581558", VA = "0x1581558")]
		public void PopScreen()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1581560", Offset = "0x1581560", VA = "0x1581560")]
		public void PopScreen(bool enterSelectableGroup)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x1580320", Offset = "0x1580320", VA = "0x1580320")]
		public void ReenterSelectableGroup()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1581428", Offset = "0x1581428", VA = "0x1581428")]
		public void OpenDialogMessageBox(string headerTextKey, string yesButtonTextKey, string noButtonTextKey, UnityAction YesAction)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1581634", Offset = "0x1581634", VA = "0x1581634")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x158163C", Offset = "0x158163C", VA = "0x158163C")]
		public void OnNavigationCancel()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1581340", Offset = "0x1581340", VA = "0x1581340")]
		public void ConfigureAlternateToMatchRegular(Button alternate, Button regular)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1581744", Offset = "0x1581744", VA = "0x1581744")]
		public void ToggleCheat()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1581854", Offset = "0x1581854", VA = "0x1581854")]
		private void LoadRide(int rideNumber)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1580F00", Offset = "0x1580F00", VA = "0x1580F00")]
		public void UpdateButtonInteractability()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1581870", Offset = "0x1581870", VA = "0x1581870")]
		public MainScreenController()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1581878", Offset = "0x1581878", VA = "0x1581878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33BA8", Offset = "0xB33BA8")]
		private void <Init>b__22_0()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x15818E0", Offset = "0x15818E0", VA = "0x15818E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33BB8", Offset = "0xB33BB8")]
		private void <Init>b__22_1()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x15819D0", Offset = "0x15819D0", VA = "0x15819D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33BC8", Offset = "0xB33BC8")]
		private void <Init>b__22_7()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x1581A08", Offset = "0x1581A08", VA = "0x1581A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33BD8", Offset = "0xB33BD8")]
		private void <Init>b__22_2()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x1581A5C", Offset = "0x1581A5C", VA = "0x1581A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33BE8", Offset = "0xB33BE8")]
		private void <Init>b__22_4()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1581B20", Offset = "0x1581B20", VA = "0x1581B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33BF8", Offset = "0xB33BF8")]
		private void <Init>b__22_5()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1581B28", Offset = "0x1581B28", VA = "0x1581B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C08", Offset = "0xB33C08")]
		private void <Init>b__22_6()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x1581B30", Offset = "0x1581B30", VA = "0x1581B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C18", Offset = "0xB33C18")]
		private void <AutoDetectResult>b__24_0()
		{
		}
	}
	[Token(Token = "0x2000922")]
	public class SaveVersionPanel : MonoBehaviour
	{
		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text deviceLabel;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text lastSaveDateLabel;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text rideLabel;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text deviceText;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text lastSaveDateText;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text rideText;

		[Token(Token = "0x4001CFF")]
		private const string deviceLocaKey = "SaveGame.Apple.Device";

		[Token(Token = "0x4001D00")]
		private const string lastSaveDateLocaKey = "SaveGame.LastSave";

		[Token(Token = "0x4001D01")]
		private const string rideLocaKey = "SaveGame.Level";

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button keepButton;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action onKeepCallback;

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xECD1AC", Offset = "0xECD1AC", VA = "0xECD1AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xECD314", Offset = "0xECD314", VA = "0xECD314")]
		public void SetTexts(string device, DateTime lastSave, string ride, Action onKeepButtonPressed)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xECD5CC", Offset = "0xECD5CC", VA = "0xECD5CC")]
		public void SetLineSpacing(float lineSpacing)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xECD668", Offset = "0xECD668", VA = "0xECD668")]
		public void SelectButton()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xECD68C", Offset = "0xECD68C", VA = "0xECD68C")]
		public void InvokeOnKeep()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xECD6A4", Offset = "0xECD6A4", VA = "0xECD6A4")]
		public void OnKeepButton()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xECD6BC", Offset = "0xECD6BC", VA = "0xECD6BC")]
		public SaveVersionPanel()
		{
		}
	}
	[Token(Token = "0x2000923")]
	public class ChangeInputDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2989C", Offset = "0xB2989C")]
		public InputActionReference extraTutorialAction;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject MouseDisplay;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject XBoxDisplay;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject PlaystationDisplay;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject PlaystationDisplay_native;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject SwitchDisplay;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject AppleTVDisplay;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject GenericGamepadDisplay;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject TouchDisplay;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject OculusDisplay;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29964", Offset = "0xB29964")]
		[SerializeField]
		private bool _autoDisableOnIngameControlsUsed;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float _autoDisableMinDisplayTime;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RegisteredActivateable _autoDisableActivatable;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _autoDisableNarrativeEvent;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private InputService _inputService;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HitchhikerPlayerActions _playerActions;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private InputDeviceClass _lastDeviceClass;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _onEnableTime;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _ingameControlsUsed;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool WasExtraTurialActionPressed;

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xE3AD94", Offset = "0xE3AD94", VA = "0xE3AD94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xE3B29C", Offset = "0xE3B29C", VA = "0xE3B29C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xE3B40C", Offset = "0xE3B40C", VA = "0xE3B40C")]
		private void OnExtraTurialActionPressed(InputAction.CallbackContext ctx)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xE3B418", Offset = "0xE3B418", VA = "0xE3B418")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xE3B058", Offset = "0xE3B058", VA = "0xE3B058")]
		private void OnLastInputSourceChanged(InputSource inputSource)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xE3B748", Offset = "0xE3B748", VA = "0xE3B748")]
		public ChangeInputDisplay()
		{
		}
	}
	[Token(Token = "0x2000924")]
	public class SettingsDropdownListEntry : MonoBehaviour
	{
		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEngine.UI.Toggle toggle;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Text text;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Localize localize;

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x110C16C", Offset = "0x110C16C", VA = "0x110C16C")]
		public SettingsDropdownListEntry()
		{
		}
	}
	[Token(Token = "0x2000925")]
	public class SettingsScreenController : MonoBehaviour
	{
		[Token(Token = "0x2000926")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C6B4", Offset = "0xB1C6B4")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundButtonIndex;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xDA2154", Offset = "0xDA2154", VA = "0xDA2154")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xDA215C", Offset = "0xDA215C", VA = "0xDA215C")]
			internal void <Init>b__33()
			{
			}
		}

		[Token(Token = "0x2000927")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C6C4", Offset = "0xB1C6C4")]
		private sealed class <>c__DisplayClass44_1
		{
			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundButtonIndex;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xDA225C", Offset = "0xDA225C", VA = "0xDA225C")]
			public <>c__DisplayClass44_1()
			{
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xDA2264", Offset = "0xDA2264", VA = "0xDA2264")]
			internal void <Init>b__34()
			{
			}
		}

		[Token(Token = "0x2000928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C6D4", Offset = "0xB1C6D4")]
		private sealed class <>c__DisplayClass44_2
		{
			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundButtonIndex;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xDA22F8", Offset = "0xDA22F8", VA = "0xDA22F8")]
			public <>c__DisplayClass44_2()
			{
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xDA2300", Offset = "0xDA2300", VA = "0xDA2300")]
			internal void <Init>b__35()
			{
			}
		}

		[Token(Token = "0x2000929")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C6E4", Offset = "0xB1C6E4")]
		private sealed class <>c__DisplayClass44_3
		{
			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundButtonIndex;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xDA23DC", Offset = "0xDA23DC", VA = "0xDA23DC")]
			public <>c__DisplayClass44_3()
			{
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xDA23E4", Offset = "0xDA23E4", VA = "0xDA23E4")]
			internal void <Init>b__36()
			{
			}
		}

		[Token(Token = "0x200092A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C6F4", Offset = "0xB1C6F4")]
		private sealed class <>c__DisplayClass44_4
		{
			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundButtonIndex;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xDA2454", Offset = "0xDA2454", VA = "0xDA2454")]
			public <>c__DisplayClass44_4()
			{
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xDA245C", Offset = "0xDA245C", VA = "0xDA245C")]
			internal void <Init>b__37()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200092B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C704", Offset = "0xB1C704")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__44_1;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction<float> <>9__44_16;

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0xDA20FC", Offset = "0xDA20FC", VA = "0xDA20FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0xDA2104", Offset = "0xDA2104", VA = "0xDA2104")]
			internal void <Init>b__44_1()
			{
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xDA2108", Offset = "0xDA2108", VA = "0xDA2108")]
			internal void <Init>b__44_16(float value)
			{
			}
		}

		[Token(Token = "0x200092C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C714", Offset = "0xB1C714")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction unityAction;

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xDA255C", Offset = "0xDA255C", VA = "0xDA255C")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xDA2564", Offset = "0xDA2564", VA = "0xDA2564")]
			internal void <WrapAction>b__0()
			{
			}
		}

		[Token(Token = "0x200092D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C724", Offset = "0xB1C724")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction<bool> unityAction;

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xDA259C", Offset = "0xDA259C", VA = "0xDA259C")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xDA25A4", Offset = "0xDA25A4", VA = "0xDA25A4")]
			internal void <WrapToggleAction>b__0(bool state)
			{
			}
		}

		[Token(Token = "0x200092E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C734", Offset = "0xB1C734")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction unityAction;

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xDA2628", Offset = "0xDA2628", VA = "0xDA2628")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xDA2630", Offset = "0xDA2630", VA = "0xDA2630")]
			internal void <WrapToggleOnAction>b__0(bool state)
			{
			}
		}

		[Token(Token = "0x200092F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C744", Offset = "0xB1C744")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SettingsScreenController <>4__this;

			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction<float> unityAction;

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xDA266C", Offset = "0xDA266C", VA = "0xDA266C")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xDA2674", Offset = "0xDA2674", VA = "0xDA2674")]
			internal void <WrapSliderAction>b__0(float value)
			{
			}
		}

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29A10", Offset = "0xB29A10")]
		private MainMenuReferences _mainMenuReferences;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29A5C", Offset = "0xB29A5C")]
		private SettingsService _settingsService;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LocalizationService _localizationService;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerService _playerService;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> _languageCodes;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> _qualityLocaKeys;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resolution[] _resolutions;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<string> _renderResolutionLocaKeys;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Display[] _displays;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _duringUpdateFromSettings;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _lastCheckedLanguageCodeInDropdownList;

		[Token(Token = "0x17000356")]
		private MainMenuReferences.SettingsScreen SettingsScreen
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x110C174", Offset = "0x110C174", VA = "0x110C174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		private MainMenuReferences.SettingsGeneralScreen SettingsGeneralScreen
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x110C190", Offset = "0x110C190", VA = "0x110C190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		private MainMenuReferences.SettingsVideoScreen SettingsVideoScreen
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x110C1AC", Offset = "0x110C1AC", VA = "0x110C1AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		private MainMenuReferences.SettingsAudioScreen SettingsAudioScreen
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x110C1C8", Offset = "0x110C1C8", VA = "0x110C1C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		private MainMenuReferences.SettingsControlsScreen SettingsControlsScreen
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x110C1E4", Offset = "0x110C1E4", VA = "0x110C1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		private MainMenuReferences.SettingsLanguageScreen SettingsLanguageScreen
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x110C200", Offset = "0x110C200", VA = "0x110C200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		private MainMenuReferences.SettingsResolutionScreen SettingsResolutionScreen
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x110C21C", Offset = "0x110C21C", VA = "0x110C21C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		private MainMenuReferences.SettingsRenderResolutionScreen SettingsRenderResolutionScreen
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x110C238", Offset = "0x110C238", VA = "0x110C238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		private MainMenuReferences.SettingsQualityScreen SettingsQualityScreen
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x110C254", Offset = "0x110C254", VA = "0x110C254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		private MainMenuReferences.SettingsDisplayScreen SettingsDisplayScreen
		{
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x110C270", Offset = "0x110C270", VA = "0x110C270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		private MainMenuReferences.BaseScreen CreditsScreen
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x110C28C", Offset = "0x110C28C", VA = "0x110C28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		private MainMenuReferences.MainScreen MainScreen
		{
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x110C2A8", Offset = "0x110C2A8", VA = "0x110C2A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		private ScreenHistory<MainMenuScreen> MainMenuHistory
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x110C2C4", Offset = "0x110C2C4", VA = "0x110C2C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		private ScreenGroup<MainMenuScreen> SubScreenGroup
		{
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x110C2E0", Offset = "0x110C2E0", VA = "0x110C2E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		private MainScreenController MainScreenController
		{
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x110C2FC", Offset = "0x110C2FC", VA = "0x110C2FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		private SettingsData Settings
		{
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x110C318", Offset = "0x110C318", VA = "0x110C318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x110C334", Offset = "0x110C334", VA = "0x110C334")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x110CA58", Offset = "0x110CA58", VA = "0x110CA58")]
		public void Init()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x110EF8C", Offset = "0x110EF8C", VA = "0x110EF8C")]
		public void OnSettingsEntered()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x110EF90", Offset = "0x110EF90", VA = "0x110EF90")]
		public void ToggleCheat()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x110EF94", Offset = "0x110EF94", VA = "0x110EF94")]
		private void ChangeSelectedTab(MainMenuReferences.SettingsTabSubScreen targetSubScreen)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x110F030", Offset = "0x110F030", VA = "0x110F030")]
		private void SaveSettings()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x110F104", Offset = "0x110F104", VA = "0x110F104")]
		private void SetToggleGroupInteractability(ToggleGroup toggleGroup, bool state)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x110F1C0", Offset = "0x110F1C0", VA = "0x110F1C0")]
		private void SetToggleGroupInteractability(UnityEngine.UI.Toggle toggle, bool state)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x110F1DC", Offset = "0x110F1DC", VA = "0x110F1DC")]
		private UnityAction WrapAction(UnityAction unityAction)
		{
			return null;
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x110EEA4", Offset = "0x110EEA4", VA = "0x110EEA4")]
		private UnityAction<bool> WrapToggleAction(UnityAction<bool> unityAction)
		{
			return null;
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x110ECD4", Offset = "0x110ECD4", VA = "0x110ECD4")]
		private UnityAction<bool> WrapToggleOnAction(UnityAction unityAction)
		{
			return null;
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x110EDBC", Offset = "0x110EDBC", VA = "0x110EDBC")]
		private UnityAction<float> WrapSliderAction(UnityAction<float> unityAction)
		{
			return null;
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x110F2B0", Offset = "0x110F2B0", VA = "0x110F2B0")]
		private string BuildResolutionString(Resolution resolution, bool showAspect)
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x110F45C", Offset = "0x110F45C", VA = "0x110F45C")]
		private string BuildDisplayString(Display display, int displayNumber)
		{
			return null;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x110F54C", Offset = "0x110F54C", VA = "0x110F54C")]
		private SettingsDropdownListEntry InstantiateToggle(MainMenuReferences.SettingsDropdownListScreen dropdownListScreen)
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x110F664", Offset = "0x110F664", VA = "0x110F664")]
		private SettingsDropdownListEntry InstantiateLocalizedToggle(MainMenuReferences.SettingsDropdownListScreen dropdownListScreen, string locaKey)
		{
			return null;
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x110F748", Offset = "0x110F748", VA = "0x110F748")]
		public SettingsDropdownListEntry InstantiateQualityToggle(MainMenuReferences.SettingsDropdownListScreen dropdownListScreen, SettingsDataQuality.QualityLevelSettings qualityLevel, string locaName)
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x110F7E8", Offset = "0x110F7E8", VA = "0x110F7E8")]
		public SettingsDropdownListEntry InstantiateRenderResolutionToggle(MainMenuReferences.SettingsDropdownListScreen dropdownListScreen, SettingsDataResolution.RenderResolutionIndex renderResolutionFactor, string locaName)
		{
			return null;
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x110C480", Offset = "0x110C480", VA = "0x110C480")]
		private void PopulateLanguageDropdownList()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x110C590", Offset = "0x110C590", VA = "0x110C590")]
		private void PopulateQualityDropdownList()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x110C720", Offset = "0x110C720", VA = "0x110C720")]
		private void PopulateResolutionDropdownList()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x110C818", Offset = "0x110C818", VA = "0x110C818")]
		private void PopulateRenderResolutionDropdownList()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x110C940", Offset = "0x110C940", VA = "0x110C940")]
		private void PopulateDisplayDropdownList()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x110F888", Offset = "0x110F888", VA = "0x110F888")]
		private void RestoreLanguageDropdownListFormatting()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x110FB3C", Offset = "0x110FB3C", VA = "0x110FB3C")]
		private void UpdateAfterDropdownListSelection()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x110E064", Offset = "0x110E064", VA = "0x110E064")]
		private void UpdateFromSettings()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x110FE04", Offset = "0x110FE04", VA = "0x110FE04")]
		private int FindCurrentDisplayIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x110E858", Offset = "0x110E858", VA = "0x110E858")]
		private void DisableUnsupportedFeatures()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x110FEC4", Offset = "0x110FEC4", VA = "0x110FEC4")]
		private void DisableVideoMenuTabButton()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x110FF34", Offset = "0x110FF34", VA = "0x110FF34")]
		private void DisableAchievementButton()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x110FFBC", Offset = "0x110FFBC", VA = "0x110FFBC")]
		public SettingsScreenController()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x110FFC4", Offset = "0x110FFC4", VA = "0x110FFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C28", Offset = "0xB33C28")]
		private void <Init>b__44_0()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1110014", Offset = "0x1110014", VA = "0x1110014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C38", Offset = "0xB33C38")]
		private void <Init>b__44_2()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x111004C", Offset = "0x111004C", VA = "0x111004C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C48", Offset = "0xB33C48")]
		private void <Init>b__44_3()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1110068", Offset = "0x1110068", VA = "0x1110068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C58", Offset = "0xB33C58")]
		private void <Init>b__44_4()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1110084", Offset = "0x1110084", VA = "0x1110084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C68", Offset = "0xB33C68")]
		private void <Init>b__44_5()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x11100A0", Offset = "0x11100A0", VA = "0x11100A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C78", Offset = "0xB33C78")]
		private void <Init>b__44_6()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x11100BC", Offset = "0x11100BC", VA = "0x11100BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C88", Offset = "0xB33C88")]
		private void <Init>b__44_7()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1110134", Offset = "0x1110134", VA = "0x1110134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33C98", Offset = "0xB33C98")]
		private void <Init>b__44_8(float value)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1110264", Offset = "0x1110264", VA = "0x1110264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CA8", Offset = "0xB33CA8")]
		private void <Init>b__44_9(bool state)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1110298", Offset = "0x1110298", VA = "0x1110298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CB8", Offset = "0xB33CB8")]
		private void <Init>b__44_10()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x111037C", Offset = "0x111037C", VA = "0x111037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CC8", Offset = "0xB33CC8")]
		private void <Init>b__44_30()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x11103C4", Offset = "0x11103C4", VA = "0x11103C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CD8", Offset = "0xB33CD8")]
		private void <Init>b__44_11()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x11103FC", Offset = "0x11103FC", VA = "0x11103FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CE8", Offset = "0xB33CE8")]
		private void <Init>b__44_12()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1110434", Offset = "0x1110434", VA = "0x1110434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CF8", Offset = "0xB33CF8")]
		private void <Init>b__44_13()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x111046C", Offset = "0x111046C", VA = "0x111046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D08", Offset = "0xB33D08")]
		private void <Init>b__44_14()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x11104A4", Offset = "0x11104A4", VA = "0x11104A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D18", Offset = "0xB33D18")]
		private void <Init>b__44_15(bool value)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x11104D8", Offset = "0x11104D8", VA = "0x11104D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D28", Offset = "0xB33D28")]
		private void <Init>b__44_17(bool value)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x1110504", Offset = "0x1110504", VA = "0x1110504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D38", Offset = "0xB33D38")]
		private void <Init>b__44_18()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x11105E8", Offset = "0x11105E8", VA = "0x11105E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D48", Offset = "0xB33D48")]
		private void <Init>b__44_31()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1110784", Offset = "0x1110784", VA = "0x1110784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D58", Offset = "0xB33D58")]
		private void <Init>b__44_32()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x11107AC", Offset = "0x11107AC", VA = "0x11107AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D68", Offset = "0xB33D68")]
		private void <Init>b__44_19(float value)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x111088C", Offset = "0x111088C", VA = "0x111088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D78", Offset = "0xB33D78")]
		private void <Init>b__44_20(float value)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x111096C", Offset = "0x111096C", VA = "0x111096C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D88", Offset = "0xB33D88")]
		private void <Init>b__44_21(float value)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1110A4C", Offset = "0x1110A4C", VA = "0x1110A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33D98", Offset = "0xB33D98")]
		private void <Init>b__44_22(float value)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x1110B2C", Offset = "0x1110B2C", VA = "0x1110B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DA8", Offset = "0xB33DA8")]
		private void <Init>b__44_23(float value)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x1110C44", Offset = "0x1110C44", VA = "0x1110C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DB8", Offset = "0xB33DB8")]
		private void <Init>b__44_24(bool state)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x1110C78", Offset = "0x1110C78", VA = "0x1110C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DC8", Offset = "0xB33DC8")]
		private void <Init>b__44_25()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x1110CA0", Offset = "0x1110CA0", VA = "0x1110CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DD8", Offset = "0xB33DD8")]
		private void <Init>b__44_26()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1110CC8", Offset = "0x1110CC8", VA = "0x1110CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DE8", Offset = "0xB33DE8")]
		private void <Init>b__44_27()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1110CF0", Offset = "0x1110CF0", VA = "0x1110CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DF8", Offset = "0xB33DF8")]
		private void <Init>b__44_28()
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1110D18", Offset = "0x1110D18", VA = "0x1110D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E08", Offset = "0xB33E08")]
		private void <Init>b__44_29()
		{
		}
	}
	[Token(Token = "0x2000930")]
	public class MenuOverlayBase : CanvasScreen
	{
		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29A94", Offset = "0xB29A94")]
		[SerializeField]
		private GameInputMode _gameInputMode;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectableGroup _selectableGroup;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PauseManager.PauseMode _pauseMode;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private MenuOverlayPointerMode _pointerMode;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _disablePlayerCamera;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		protected bool _disableCancel;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		protected bool _allowPause;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[SerializeField]
		protected bool _allowPlayerChoices;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		protected bool _resetInputOnPop;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[SerializeField]
		public bool showGameCenterAccessPoint;

		[Token(Token = "0x17000366")]
		protected UIManager UIManager
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x1324AA8", Offset = "0x1324AA8", VA = "0x1324AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		protected InputService InputService
		{
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x1324B68", Offset = "0x1324B68", VA = "0x1324B68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		protected SoundService SoundService
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x1324B84", Offset = "0x1324B84", VA = "0x1324B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		protected VideoService VideoService
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x1324BA0", Offset = "0x1324BA0", VA = "0x1324BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		public GameInputMode GameInputMode
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x1324BBC", Offset = "0x1324BBC", VA = "0x1324BBC")]
			get
			{
				return default(GameInputMode);
			}
		}

		[Token(Token = "0x1700036B")]
		public SelectableGroup SelectableGroup
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x1324BC4", Offset = "0x1324BC4", VA = "0x1324BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public PauseManager.PauseMode PauseMode
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x1324BCC", Offset = "0x1324BCC", VA = "0x1324BCC")]
			get
			{
				return default(PauseManager.PauseMode);
			}
		}

		[Token(Token = "0x1700036D")]
		public MenuOverlayPointerMode PointerMode
		{
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x1324BD4", Offset = "0x1324BD4", VA = "0x1324BD4")]
			get
			{
				return default(MenuOverlayPointerMode);
			}
		}

		[Token(Token = "0x1700036E")]
		public bool DisablePlayerCamera
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x1324BDC", Offset = "0x1324BDC", VA = "0x1324BDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036F")]
		public bool isDisablingCancel
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x1324BE4", Offset = "0x1324BE4", VA = "0x1324BE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000370")]
		public bool AllowPause
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x1324BEC", Offset = "0x1324BEC", VA = "0x1324BEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000371")]
		public bool AllowPlayerChoices
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x1324BF4", Offset = "0x1324BF4", VA = "0x1324BF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000372")]
		public bool ResetInputOnPop
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x1324BFC", Offset = "0x1324BFC", VA = "0x1324BFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x1324C04", Offset = "0x1324C04", VA = "0x1324C04", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x1324CCC", Offset = "0x1324CCC", VA = "0x1324CCC", Slot = "17")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1324CD0", Offset = "0x1324CD0", VA = "0x1324CD0", Slot = "18")]
		public virtual void OnPush()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x1324CD4", Offset = "0x1324CD4", VA = "0x1324CD4", Slot = "19")]
		public virtual void OnPop()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x1324E80", Offset = "0x1324E80", VA = "0x1324E80")]
		public void PushMenu()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1324EB4", Offset = "0x1324EB4", VA = "0x1324EB4")]
		public void PopMenu()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1324ED4", Offset = "0x1324ED4", VA = "0x1324ED4")]
		public void SetCancelEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1324EE4", Offset = "0x1324EE4", VA = "0x1324EE4")]
		public MenuOverlayBase()
		{
		}
	}
	[Token(Token = "0x2000931")]
	public enum MenuOverlayPointerMode
	{
		[Token(Token = "0x4001D47")]
		None,
		[Token(Token = "0x4001D48")]
		Crosshair,
		[Token(Token = "0x4001D49")]
		Cursor
	}
	[Token(Token = "0x2000932")]
	public class ModalWindowController : MonoBehaviour
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text headerText;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text yesButtonText;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text noButtonText;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button YesButton;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button NoButton;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button BackButton;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEvent YesEvent;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEvent NoEvent;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityEvent BackEvent;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29BD0", Offset = "0xB29BD0")]
		private MenuOverlayBase <menuScreen>k__BackingField;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29BE0", Offset = "0xB29BE0")]
		private MainMenuScreen <mainMenuScreen>k__BackingField;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LocalizationService localizationService;

		[Token(Token = "0x17000373")]
		public MenuOverlayBase menuScreen
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x132FA54", Offset = "0x132FA54", VA = "0x132FA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E18", Offset = "0xB33E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x132FA5C", Offset = "0x132FA5C", VA = "0x132FA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E28", Offset = "0xB33E28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public MainMenuScreen mainMenuScreen
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x132FA64", Offset = "0x132FA64", VA = "0x132FA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E38", Offset = "0xB33E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x132FA6C", Offset = "0x132FA6C", VA = "0x132FA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E48", Offset = "0xB33E48")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x132FA74", Offset = "0x132FA74", VA = "0x132FA74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x132FC8C", Offset = "0x132FC8C", VA = "0x132FC8C")]
		public void InstantiateModalWindow(string headerTextLocalizationKey, string yesButtonKey, string noButtonKey, UnityAction YesAction, UnityAction NoAction, UnityAction BackAction)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x132FD40", Offset = "0x132FD40", VA = "0x132FD40")]
		private void InitButton(Button button, Text buttonText, UnityEvent buttonEvent, string buttonKey, UnityAction action)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x132FE84", Offset = "0x132FE84", VA = "0x132FE84")]
		public ModalWindowController()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x132FF44", Offset = "0x132FF44", VA = "0x132FF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E58", Offset = "0xB33E58")]
		private void <Awake>b__18_0()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x132FF60", Offset = "0x132FF60", VA = "0x132FF60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E68", Offset = "0xB33E68")]
		private void <Awake>b__18_1()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x132FF7C", Offset = "0x132FF7C", VA = "0x132FF7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E78", Offset = "0xB33E78")]
		private void <Awake>b__18_2()
		{
		}
	}
	[Token(Token = "0x2000933")]
	public class MouseOverDetector : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[NonSerialized]
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onPointerEnter;

		[NonSerialized]
		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onPointerExit;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool MouseOver;

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x13353F8", Offset = "0x13353F8", VA = "0x13353F8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1335420", Offset = "0x1335420", VA = "0x1335420", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1335460", Offset = "0x1335460", VA = "0x1335460")]
		public MouseOverDetector()
		{
		}
	}
	[Token(Token = "0x2000934")]
	public class SelectableGroup : Selectable
	{
		[Token(Token = "0x2000935")]
		public enum InitMode
		{
			[Token(Token = "0x4001D7E")]
			None,
			[Token(Token = "0x4001D7F")]
			Awake,
			[Token(Token = "0x4001D80")]
			Start
		}

		[Token(Token = "0x2000936")]
		public enum AutoNavigationMode
		{
			[Token(Token = "0x4001D82")]
			Manual = 0,
			[Token(Token = "0x4001D83")]
			VerticalInGroup = 1,
			[Token(Token = "0x4001D84")]
			HorizontalInGroup = 2,
			[Token(Token = "0x4001D85")]
			SeperateInGroup = 3,
			[Token(Token = "0x4001D86")]
			AutomaticInGroup = 4,
			[Token(Token = "0x4001D87")]
			OverwriteWithNone = 100,
			[Token(Token = "0x4001D88")]
			OverwriteWithHorizontal = 101,
			[Token(Token = "0x4001D89")]
			OverwriteWithVertical = 102,
			[Token(Token = "0x4001D8A")]
			OverwriteWithAutomatic = 103,
			[Token(Token = "0x4001D8B")]
			OverwriteWithExplicit = 104
		}

		[Token(Token = "0x2000937")]
		[Flags]
		public enum EnterFlags
		{
			[Token(Token = "0x4001D8D")]
			None = 0,
			[Token(Token = "0x4001D8E")]
			IncludeLastSelected = 1,
			[Token(Token = "0x4001D8F")]
			IncludeLastDeselected = 2,
			[Token(Token = "0x4001D90")]
			IncludeFavoredSelectables = 4,
			[Token(Token = "0x4001D91")]
			IncludeDisfavoredSelectables = 8,
			[Token(Token = "0x4001D92")]
			IncludeSelectables = 0x10,
			[Token(Token = "0x4001D93")]
			AllowNull = 0x20,
			[Token(Token = "0x4001D94")]
			AllowDisabled = 0x40,
			[Token(Token = "0x4001D95")]
			AllowNonInteractable = 0x80,
			[Token(Token = "0x4001D96")]
			AllowDisfavored = 0x100,
			[Token(Token = "0x4001D97")]
			ForceRediscover = 0x200,
			[Token(Token = "0x4001D98")]
			ForceSelect = 0x400,
			[Token(Token = "0x4001D99")]
			PreventSelect = 0x800
		}

		[Token(Token = "0x2000938")]
		public struct TimeStampedSelectable
		{
			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Selectable selectable;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float time;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool valid;

			[Token(Token = "0x1700037E")]
			public static TimeStampedSelectable Invalid
			{
				[Token(Token = "0x6001FD8")]
				[Address(RVA = "0xDA2060", Offset = "0xDA2060", VA = "0xDA2060")]
				get
				{
					return default(TimeStampedSelectable);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000939")]
		public class SortedSelectable
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Selectable selectable;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rect worldRect;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int xSortIndex;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int ySortIndex;

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xDA1DB4", Offset = "0xDA1DB4", VA = "0xDA1DB4")]
			public SortedSelectable(Selectable selectable)
			{
			}
		}

		[Token(Token = "0x200093A")]
		public class SortedSelectableXComparer : IComparer<SortedSelectable>
		{
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0xDA1F40", Offset = "0xDA1F40", VA = "0xDA1F40", Slot = "4")]
			public int Compare(SortedSelectable a, SortedSelectable b)
			{
				return default(int);
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xDA1FC8", Offset = "0xDA1FC8", VA = "0xDA1FC8")]
			public SortedSelectableXComparer()
			{
			}
		}

		[Token(Token = "0x200093B")]
		public class SortedSelectableYComparer : IComparer<SortedSelectable>
		{
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xDA1FD0", Offset = "0xDA1FD0", VA = "0xDA1FD0", Slot = "4")]
			public int Compare(SortedSelectable a, SortedSelectable b)
			{
				return default(int);
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xDA2058", Offset = "0xDA2058", VA = "0xDA2058")]
			public SortedSelectableYComparer()
			{
			}
		}

		[Token(Token = "0x200093C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C764", Offset = "0xB1C764")]
		private sealed class <EnumerateChildSelectables>d__80 : IEnumerator<Selectable>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Selectable <>2__current;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform rootTransform;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectableGroup <>4__this;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <childTransform>5__3;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<Selectable> <enumerator>5__4;

			[Token(Token = "0x1700037F")]
			private Selectable System.Collections.Generic.IEnumerator<UnityEngine.UI.Selectable>.Current
			{
				[Token(Token = "0x6001FE1")]
				[Address(RVA = "0xDA1484", Offset = "0xDA1484", VA = "0xDA1484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE3")]
				[Address(RVA = "0xDA14CC", Offset = "0xDA14CC", VA = "0xDA14CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xDA10CC", Offset = "0xDA10CC", VA = "0xDA10CC")]
			[DebuggerHidden]
			public <EnumerateChildSelectables>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xDA10F8", Offset = "0xDA10F8", VA = "0xDA10F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xDA10FC", Offset = "0xDA10FC", VA = "0xDA10FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xDA148C", Offset = "0xDA148C", VA = "0xDA148C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200093D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C774", Offset = "0xB1C774")]
		private sealed class <EnumerateSelectables>d__86 : IEnumerator<Selectable>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Selectable <>2__current;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Selectable> selectables;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectableGroup <>4__this;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public EnterFlags flags;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__2;

			[Token(Token = "0x17000381")]
			private Selectable System.Collections.Generic.IEnumerator<UnityEngine.UI.Selectable>.Current
			{
				[Token(Token = "0x6001FE7")]
				[Address(RVA = "0xDA1614", Offset = "0xDA1614", VA = "0xDA1614", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE9")]
				[Address(RVA = "0xDA165C", Offset = "0xDA165C", VA = "0xDA165C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xDA14D4", Offset = "0xDA14D4", VA = "0xDA14D4")]
			[DebuggerHidden]
			public <EnumerateSelectables>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0xDA1500", Offset = "0xDA1500", VA = "0xDA1500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xDA1504", Offset = "0xDA1504", VA = "0xDA1504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xDA161C", Offset = "0xDA161C", VA = "0xDA161C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200093E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C784", Offset = "0xB1C784")]
		private sealed class <EnumerateSelectables>d__87 : IEnumerator<Selectable>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Selectable <>2__current;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SortedSelectable> selectables;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectableGroup <>4__this;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public EnterFlags flags;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__2;

			[Token(Token = "0x17000383")]
			private Selectable System.Collections.Generic.IEnumerator<UnityEngine.UI.Selectable>.Current
			{
				[Token(Token = "0x6001FED")]
				[Address(RVA = "0xDA17AC", Offset = "0xDA17AC", VA = "0xDA17AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FEF")]
				[Address(RVA = "0xDA17F4", Offset = "0xDA17F4", VA = "0xDA17F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xDA1664", Offset = "0xDA1664", VA = "0xDA1664")]
			[DebuggerHidden]
			public <EnumerateSelectables>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xDA1690", Offset = "0xDA1690", VA = "0xDA1690", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xDA1694", Offset = "0xDA1694", VA = "0xDA1694", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xDA17B4", Offset = "0xDA17B4", VA = "0xDA17B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200093F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C794", Offset = "0xB1C794")]
		private sealed class <EnumerateSelectables>d__88 : IEnumerator<Selectable>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Selectable <>2__current;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnterFlags flags;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectableGroup <>4__this;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Selectable> <enumerator>5__2;

			[Token(Token = "0x17000385")]
			private Selectable System.Collections.Generic.IEnumerator<UnityEngine.UI.Selectable>.Current
			{
				[Token(Token = "0x6001FF3")]
				[Address(RVA = "0xDA1D64", Offset = "0xDA1D64", VA = "0xDA1D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF5")]
				[Address(RVA = "0xDA1DAC", Offset = "0xDA1DAC", VA = "0xDA1DAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xDA17FC", Offset = "0xDA17FC", VA = "0xDA17FC")]
			[DebuggerHidden]
			public <EnumerateSelectables>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xDA1828", Offset = "0xDA1828", VA = "0xDA1828", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xDA182C", Offset = "0xDA182C", VA = "0xDA182C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xDA1D6C", Offset = "0xDA1D6C", VA = "0xDA1D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C7A4", Offset = "0xB1C7A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xDA10B4", Offset = "0xDA10B4", VA = "0xDA10B4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xDA10BC", Offset = "0xDA10BC", VA = "0xDA10BC")]
			internal void <.cctor>b__96_0(SelectableGroup <p0>)
			{
			}

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xDA10C0", Offset = "0xDA10C0", VA = "0xDA10C0")]
			internal void <.cctor>b__96_1(SelectableGroup <p0>)
			{
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xDA10C4", Offset = "0xDA10C4", VA = "0xDA10C4")]
			internal void <.cctor>b__96_2(SelectableGroup <p0>, Selectable <p1>)
			{
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xDA10C8", Offset = "0xDA10C8", VA = "0xDA10C8")]
			internal void <.cctor>b__96_3(SelectableGroup <p0>, Selectable <p1>)
			{
			}
		}

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29BF0", Offset = "0xB29BF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29BF0", Offset = "0xB29BF0")]
		[SerializeField]
		private InitMode _initMode;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29C60", Offset = "0xB29C60")]
		private bool _ignoreNonInteractables;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29CAC", Offset = "0xB29CAC")]
		private bool _ignoreInactiveSelectables;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29CF8", Offset = "0xB29CF8")]
		private bool _initSubGroups;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29D44", Offset = "0xB29D44")]
		private bool _enterOnInit;

		[NonSerialized]
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EnterFlags _defaultEnterFlags;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29D90", Offset = "0xB29D90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29D90", Offset = "0xB29D90")]
		[SerializeField]
		private bool _autoDiscoverSelectables;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29E00", Offset = "0xB29E00")]
		private bool _autoDiscoverSubGroups;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29E4C", Offset = "0xB29E4C")]
		private GameObject _autoDiscoveryRoot;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29E98", Offset = "0xB29E98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29E98", Offset = "0xB29E98")]
		private AutoNavigationMode _autoNavigationMode;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29F08", Offset = "0xB29F08")]
		private bool _expandChildNavigation;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29F54", Offset = "0xB29F54")]
		[SerializeField]
		private bool _expandToLoopNavigation;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29FA0", Offset = "0xB29FA0")]
		[SerializeField]
		private bool _limitGlobalNavigation;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29FEC", Offset = "0xB29FEC")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29FEC", Offset = "0xB29FEC")]
		private List<Selectable> _favoredSelectables;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A05C", Offset = "0xB2A05C")]
		private List<Selectable> _disfavoredSelectables;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A0A8", Offset = "0xB2A0A8")]
		private List<Selectable> _blacklistedSelectables;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A0F4", Offset = "0xB2A0F4")]
		private List<Selectable> _selectables;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private InputService _inputService;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private HashSet<Selectable> _uniqueSelectables;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<SortedSelectable> _discoveredSelectables;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<SortedSelectable> _xSortedSelectables;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<SortedSelectable> _ySortedSelectables;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Transform _autoDiscoveryTransform;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TimeStampedSelectable _lastSelected;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TimeStampedSelectable _lastDeselected;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool _hasNonInteractables;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool _hasSubGroups;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A140", Offset = "0xB2A140")]
		private static SelectableGroup <SelectedGroup>k__BackingField;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A150", Offset = "0xB2A150")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A160", Offset = "0xB2A160")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A170", Offset = "0xB2A170")]
		private float <LastSelectionTime>k__BackingField;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A180", Offset = "0xB2A180")]
		private float <LastDeselectionTime>k__BackingField;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SelectableGroup> onSelectableGroupEnter;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<SelectableGroup> onSelectableGroupExit;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<SelectableGroup, Selectable> onLastSelectedChanged;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<SelectableGroup, Selectable> onLastDeselectedChanged;

		[Token(Token = "0x17000375")]
		public static SelectableGroup SelectedGroup
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x1106DC4", Offset = "0x1106DC4", VA = "0x1106DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E88", Offset = "0xB33E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x1106E28", Offset = "0x1106E28", VA = "0x1106E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E98", Offset = "0xB33E98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x1106E94", Offset = "0x1106E94", VA = "0x1106E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EA8", Offset = "0xB33EA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x1106E9C", Offset = "0x1106E9C", VA = "0x1106E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EB8", Offset = "0xB33EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public EnterFlags DefaultFlags
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x1106EA8", Offset = "0x1106EA8", VA = "0x1106EA8")]
			get
			{
				return default(EnterFlags);
			}
		}

		[Token(Token = "0x17000378")]
		public TimeStampedSelectable LastSelected
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1106EB0", Offset = "0x1106EB0", VA = "0x1106EB0")]
			get
			{
				return default(TimeStampedSelectable);
			}
		}

		[Token(Token = "0x17000379")]
		public TimeStampedSelectable LastDeselected
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1106EBC", Offset = "0x1106EBC", VA = "0x1106EBC")]
			get
			{
				return default(TimeStampedSelectable);
			}
		}

		[Token(Token = "0x1700037A")]
		public bool IsSelected
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x1106EC8", Offset = "0x1106EC8", VA = "0x1106EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EC8", Offset = "0xB33EC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x1106ED0", Offset = "0x1106ED0", VA = "0x1106ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33ED8", Offset = "0xB33ED8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public float LastSelectionTime
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x1106EDC", Offset = "0x1106EDC", VA = "0x1106EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EE8", Offset = "0xB33EE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x1106EE4", Offset = "0x1106EE4", VA = "0x1106EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EF8", Offset = "0xB33EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public float LastDeselectionTime
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x1106EEC", Offset = "0x1106EEC", VA = "0x1106EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F08", Offset = "0xB33F08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x1106EF4", Offset = "0x1106EF4", VA = "0x1106EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F18", Offset = "0xB33F18")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public List<SortedSelectable> DiscoveredSelectables
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x1106EFC", Offset = "0x1106EFC", VA = "0x1106EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x1106F04", Offset = "0x1106F04", VA = "0x1106F04", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x110715C", Offset = "0x110715C", VA = "0x110715C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x11071A0", Offset = "0x11071A0", VA = "0x11071A0", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x11072DC", Offset = "0x11072DC", VA = "0x11072DC", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x11072E4", Offset = "0x11072E4", VA = "0x11072E4", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1106F48", Offset = "0x1106F48", VA = "0x1106F48")]
		public void Init(bool expandSelectables = true)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1107314", Offset = "0x1107314", VA = "0x1107314")]
		public void Enter(EnterFlags flags = EnterFlags.None, int frameDelay = 0)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1107AD8", Offset = "0x1107AD8", VA = "0x1107AD8")]
		public void DefaultEnter(EnterFlags extraFlags, int frameDelay = 0)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x11071C8", Offset = "0x11071C8", VA = "0x11071C8")]
		public void Exit()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1107778", Offset = "0x1107778", VA = "0x1107778")]
		public void Rediscover(bool expandSelectables = true, bool forceAllowNonInteractablesAndInactiveSelectables = false)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1108C84", Offset = "0x1108C84", VA = "0x1108C84")]
		public static void ExitSelectedGroup()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x1108E28", Offset = "0x1108E28", VA = "0x1108E28")]
		public void OnSelectableGroupCallbackSelect(SelectableGroupCallback callback)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x1108EFC", Offset = "0x1108EFC", VA = "0x1108EFC")]
		public void OnSelectableGroupCallbackDeselect(SelectableGroupCallback callback)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x110791C", Offset = "0x110791C", VA = "0x110791C")]
		public void SelectSelectable(Selectable selectable, bool state, int frameDelay)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1108FC0", Offset = "0x1108FC0", VA = "0x1108FC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33F28", Offset = "0xB33F28")]
		private IEnumerator<Selectable> EnumerateChildSelectables(Transform rootTransform)
		{
			return null;
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1109054", Offset = "0x1109054", VA = "0x1109054")]
		private void AddSortedSelectablesFromEnumerator(IEnumerator<Selectable> newSelectablesEnumerator, [Optional] HashSet<Selectable> dupeCheckSet)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1107AE4", Offset = "0x1107AE4", VA = "0x1107AE4")]
		private void DiscoverSelectables()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1108030", Offset = "0x1108030", VA = "0x1108030")]
		private void ExpandSelectables()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x1109490", Offset = "0x1109490", VA = "0x1109490")]
		private Navigation ExpandChildNavigation(Navigation.Mode modeOverwrite, Navigation sourceNavigation)
		{
			return default(Navigation);
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1109554", Offset = "0x1109554", VA = "0x1109554")]
		private bool IsValidSelectable(Selectable selectable, EnterFlags flags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1109658", Offset = "0x1109658", VA = "0x1109658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33F88", Offset = "0xB33F88")]
		private IEnumerator<Selectable> EnumerateSelectables(List<Selectable> selectables, EnterFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x11096F4", Offset = "0x11096F4", VA = "0x11096F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB33FE8", Offset = "0xB33FE8")]
		private IEnumerator<Selectable> EnumerateSelectables(List<SortedSelectable> selectables, EnterFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1109790", Offset = "0x1109790", VA = "0x1109790")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34048", Offset = "0xB34048")]
		private IEnumerator<Selectable> EnumerateSelectables(EnterFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x11077CC", Offset = "0x11077CC", VA = "0x11077CC")]
		private Selectable FindFirstMatchingSelectable(EnterFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x1109818", Offset = "0x1109818", VA = "0x1109818")]
		private TimeStampedSelectable FindLastUsedSelectableAcrossSubGroups(bool useDeselected, EnterFlags flags)
		{
			return default(TimeStampedSelectable);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x110930C", Offset = "0x110930C", VA = "0x110930C")]
		private SortedSelectable GetNeighbouringSortedSelectable(List<SortedSelectable> list, int index, int offset)
		{
			return null;
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1109A04", Offset = "0x1109A04", VA = "0x1109A04")]
		private float GetNeighbourNaviRatingX(Vector2 fromNeighbour, Vector2 toNeighbour)
		{
			return default(float);
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x1109A14", Offset = "0x1109A14", VA = "0x1109A14")]
		private float GetNeighbourNaviRatingY(Vector2 fromNeighbour, Vector2 toNeighbour)
		{
			return default(float);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x11093A4", Offset = "0x11093A4", VA = "0x11093A4")]
		private SortedSelectable FindBestNaviRatedNeighbour(SortedSelectable fromSortedSelectable, int offset, bool preferYRating)
		{
			return null;
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x1109A24", Offset = "0x1109A24", VA = "0x1109A24")]
		public SelectableGroup()
		{
		}
	}
	[Token(Token = "0x2000941")]
	public class SelectableGroupCallback : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onSelected;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onDeselected;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A190", Offset = "0xB2A190")]
		private SelectableGroup <SelectableGroup>k__BackingField;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1A0", Offset = "0xB2A1A0")]
		private Selectable <Selectable>k__BackingField;

		[Token(Token = "0x17000387")]
		public SelectableGroup SelectableGroup
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x1109DA8", Offset = "0x1109DA8", VA = "0x1109DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341E8", Offset = "0xB341E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x1109DB0", Offset = "0x1109DB0", VA = "0x1109DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341F8", Offset = "0xB341F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public Selectable Selectable
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x1109DB8", Offset = "0x1109DB8", VA = "0x1109DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34208", Offset = "0xB34208")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x1109DC0", Offset = "0x1109DC0", VA = "0x1109DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34218", Offset = "0xB34218")]
			private set
			{
			}
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1109DC8", Offset = "0x1109DC8", VA = "0x1109DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1109304", Offset = "0x1109304", VA = "0x1109304")]
		public void Init(SelectableGroup selectableGroup)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x11092F8", Offset = "0x11092F8", VA = "0x11092F8")]
		public void Deinit()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1109E24", Offset = "0x1109E24", VA = "0x1109E24", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1109EC4", Offset = "0x1109EC4", VA = "0x1109EC4", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1109F64", Offset = "0x1109F64", VA = "0x1109F64")]
		public SelectableGroupCallback()
		{
		}
	}
	[Token(Token = "0x2000942")]
	public class NonVRScreenTextController : RectTransformBehaviour, IScreenTextController
	{
		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI textMesh;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UIScalableTextLayoutGroup layoutGroup;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Canvas parentCanvas;

		[Token(Token = "0x17000389")]
		public TMP_Text tmpText
		{
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x182E0C0", Offset = "0x182E0C0", VA = "0x182E0C0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038A")]
		private UIScalableTextLayoutGroup HitchHiker.IScreenTextController.layoutGroup
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x182E0C8", Offset = "0x182E0C8", VA = "0x182E0C8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		public RectTransform rebuildLayoutTransform
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0x182E0D0", Offset = "0x182E0D0", VA = "0x182E0D0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x182E0D8", Offset = "0x182E0D8", VA = "0x182E0D8", Slot = "4")]
		public void SetScreenTextAlpha(float alpha)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x182E134", Offset = "0x182E134", VA = "0x182E134", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x182E164", Offset = "0x182E164", VA = "0x182E164")]
		public NonVRScreenTextController()
		{
		}
	}
	[Token(Token = "0x2000943")]
	public class NormalizeWidthLayoutGroup : MonoBehaviour, ILayoutGroup, ILayoutController
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform[] childTransforms;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float maxLength;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float childLength;

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x182E16C", Offset = "0x182E16C", VA = "0x182E16C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x182E2EC", Offset = "0x182E2EC", VA = "0x182E2EC", Slot = "4")]
		public void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x182E3E8", Offset = "0x182E3E8", VA = "0x182E3E8", Slot = "5")]
		public void SetLayoutVertical()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x182E3EC", Offset = "0x182E3EC", VA = "0x182E3EC")]
		public NormalizeWidthLayoutGroup()
		{
		}
	}
	[Token(Token = "0x2000944")]
	public class OptionalVisualToggle : MonoBehaviour
	{
		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image ToggleOffImage;

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x15B76E0", Offset = "0x15B76E0", VA = "0x15B76E0")]
		public void OnToggleChanged(bool enabled)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x15B7704", Offset = "0x15B7704", VA = "0x15B7704")]
		public OptionalVisualToggle()
		{
		}
	}
	[Token(Token = "0x2000945")]
	public class PauseMenuController : MenuOverlayBase
	{
		[Serializable]
		[Token(Token = "0x2000946")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C7B4", Offset = "0xB1C7B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__11_0;

			[Token(Token = "0x6002020")]
			[Address(RVA = "0xD9E9E8", Offset = "0xD9E9E8", VA = "0xD9E9E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002021")]
			[Address(RVA = "0xD9E9F0", Offset = "0xD9E9F0", VA = "0xD9E9F0")]
			internal void <Init>b__11_0()
			{
			}
		}

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A200", Offset = "0xB2A200")]
		[SerializeField]
		public SceneSet mainMenuSceneSet;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A24C", Offset = "0xB2A24C")]
		public GameCenterAccessPointController gameCenterAccessPointController;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public UnityEngine.CanvasGroup gameCenterAccessPointCanvasGroup;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public SelectableGroup gameCenterAccessPointSelectableGroup;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public SelectableGroup menuEntriesSelectableGroup;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A2C8", Offset = "0xB2A2C8")]
		public Button resumeButton;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Button mainmenuButton;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Button gameCenterButton;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Button quitButton;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Button cheatsButton;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x277E0A4", Offset = "0x277E0A4", VA = "0x277E0A4")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x277E0AC", Offset = "0x277E0AC", VA = "0x277E0AC", Slot = "14")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x277E36C", Offset = "0x277E36C", VA = "0x277E36C", Slot = "18")]
		public override void OnPush()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x277E3DC", Offset = "0x277E3DC", VA = "0x277E3DC")]
		public void BackToMainMenu()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x277E45C", Offset = "0x277E45C", VA = "0x277E45C")]
		private void OnResume()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x277E480", Offset = "0x277E480", VA = "0x277E480")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x277E500", Offset = "0x277E500", VA = "0x277E500")]
		public void ShowQuitGameDialog()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x277E5EC", Offset = "0x277E5EC", VA = "0x277E5EC")]
		public void ShowBackToMainMenuGameDialog()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x277E6D8", Offset = "0x277E6D8", VA = "0x277E6D8")]
		public void Restart()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x277E884", Offset = "0x277E884", VA = "0x277E884", Slot = "15")]
		public override void Show()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x277EA18", Offset = "0x277EA18", VA = "0x277EA18", Slot = "16")]
		public override void Hide()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x277E8D8", Offset = "0x277E8D8", VA = "0x277E8D8")]
		private void SendNarrativeGraphEvent(string eventName)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x277EA6C", Offset = "0x277EA6C", VA = "0x277EA6C")]
		public PauseMenuController()
		{
		}
	}
	[Token(Token = "0x2000947")]
	public abstract class RectTransformBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform _self;

		[Token(Token = "0x1700038C")]
		protected RectTransform rectTransform
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0xEBCBD0", Offset = "0xEBCBD0", VA = "0xEBCBD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xEBCC84", Offset = "0xEBCC84", VA = "0xEBCC84")]
		protected RectTransformBehaviour()
		{
		}
	}
	[Token(Token = "0x2000948")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1C7C4", Offset = "0xB1C7C4")]
	public class FontSizeScaler : RectTransformBehaviour
	{
		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A300", Offset = "0xB2A300")]
		public float scaleSmallScreen;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float scaleMediumScreen;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float scaleNormal;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float scaleLargeScreen;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A37C", Offset = "0xB2A37C")]
		[SerializeField]
		public bool autoFindAllOnAwake;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<Text> textComponents;

		[Token(Token = "0x4001DD9")]
		public const float MAXSIZE_SMALL = 10f;

		[Token(Token = "0x4001DDA")]
		public const float MAXSIZE_MEDIUM = 18f;

		[Token(Token = "0x4001DDB")]
		public const float MINSIZE_LARGE = 29f;

		[Token(Token = "0x4001DDC")]
		public const int DPI_SMALL = 300;

		[Token(Token = "0x4001DDD")]
		public const int DPI_MEDIUM = 150;

		[Token(Token = "0x4001DDE")]
		public const int DPI_NORMAL = 96;

		[Token(Token = "0x4001DDF")]
		public const int DPI_LARGE = 30;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<Text, int> originalFontSizes;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float appliedScale;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameEventService gameEventService;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SettingsService settingsService;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int defaultDPI;

		[Token(Token = "0x1700038D")]
		private int ScreenSize
		{
			[Token(Token = "0x6002024")]
			[Address(RVA = "0xFCC38C", Offset = "0xFCC38C", VA = "0xFCC38C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xFCC45C", Offset = "0xFCC45C", VA = "0xFCC45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xFCC9E8", Offset = "0xFCC9E8", VA = "0xFCC9E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xFCCB9C", Offset = "0xFCCB9C", VA = "0xFCCB9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xFCCD50", Offset = "0xFCCD50", VA = "0xFCCD50")]
		private void ScaleFontSizes(float scale)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xFCC72C", Offset = "0xFCC72C", VA = "0xFCC72C")]
		private void ScaleFontSizes()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xFCCD54", Offset = "0xFCCD54", VA = "0xFCCD54")]
		public FontSizeScaler()
		{
		}
	}
	[Token(Token = "0x2000949")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C7FC", Offset = "0xB1C7FC")]
	public sealed class TextController : MonoBehaviour
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enforceMaxFontSize;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int enforcedMaxFontSize;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int maxMaxFontSize;

		[Token(Token = "0x4001DE8")]
		private const float maxAcceptableFontScale = 2f;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SettingsService settingsService;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text textComponent;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int defaultSize;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fontScaleAdjustment;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xDB373C", Offset = "0xDB373C", VA = "0xDB373C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xDB3930", Offset = "0xDB3930", VA = "0xDB3930")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xDB3A04", Offset = "0xDB3A04", VA = "0xDB3A04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xDB3AD0", Offset = "0xDB3AD0", VA = "0xDB3AD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xDB3B9C", Offset = "0xDB3B9C", VA = "0xDB3B9C")]
		private void ResetText()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xDB3C30", Offset = "0xDB3C30", VA = "0xDB3C30")]
		private void ModifyFontSizeBy(float fontSizeScaleFactor)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xDB38FC", Offset = "0xDB38FC", VA = "0xDB38FC")]
		private void UpdateFontSizeFromSettings()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xDB3D94", Offset = "0xDB3D94", VA = "0xDB3D94")]
		public TextController()
		{
		}
	}
	[Token(Token = "0x200094A")]
	public class UIScalableTextLayoutGroup : RectTransformBehaviour, ILayoutGroup, ILayoutController
	{
		[Token(Token = "0x200094B")]
		public struct TextComponent
		{
			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Text text;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TMP_Text textMesh;

			[Token(Token = "0x1700038E")]
			public bool HasText
			{
				[Token(Token = "0x6002044")]
				[Address(RVA = "0xDA6254", Offset = "0xDA6254", VA = "0xDA6254")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700038F")]
			public bool HasTextMesh
			{
				[Token(Token = "0x6002045")]
				[Address(RVA = "0xDA62C0", Offset = "0xDA62C0", VA = "0xDA62C0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000390")]
			public int FontSize
			{
				[Token(Token = "0x6002046")]
				[Address(RVA = "0xDA632C", Offset = "0xDA632C", VA = "0xDA632C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002047")]
				[Address(RVA = "0xDA63A8", Offset = "0xDA63A8", VA = "0xDA63A8")]
				set
				{
				}
			}

			[Token(Token = "0x6002048")]
			public TComponent GetComponent<TComponent>() where TComponent : class
			{
				return null;
			}
		}

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A3D8", Offset = "0xB2A3D8")]
		[SerializeField]
		public bool recalcTextRectSize;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		public bool recalcPaddingRectSize;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		public bool makeAllUniformWidth;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		public bool useMaxWidth;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public bool useMaxWidthFromRect;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float maxTextWidth;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float padding;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Text[] textComponentsOverride;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public TMP_Text[] textMeshComponentsOverride;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] originalTextSizes;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public bool applyUniformFontSize;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public int uniformFontSize;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LocalizationService _localizationService;

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xF336A0", Offset = "0xF336A0", VA = "0xF336A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xF3405C", Offset = "0xF3405C", VA = "0xF3405C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xF341D8", Offset = "0xF341D8", VA = "0xF341D8")]
		private void OnFontScaleChanged(float newScale)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xF34330", Offset = "0xF34330", VA = "0xF34330", Slot = "4")]
		private void UnityEngine.UI.ILayoutController.SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xF34334", Offset = "0xF34334", VA = "0xF34334", Slot = "5")]
		private void UnityEngine.UI.ILayoutController.SetLayoutVertical()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xF33BBC", Offset = "0xF33BBC", VA = "0xF33BBC")]
		public void UpdateAllFontSizes(int newSize)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xF34338", Offset = "0xF34338", VA = "0xF34338")]
		public int GetLocaScaledFontSize(int newSize)
		{
			return default(int);
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xF343F8", Offset = "0xF343F8", VA = "0xF343F8")]
		public void UpdateFontSize(Text text, int newSize)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xF34430", Offset = "0xF34430", VA = "0xF34430")]
		public void UpdateFontSize(TMP_Text textMesh, int newSize)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xF33ED0", Offset = "0xF33ED0", VA = "0xF33ED0")]
		public void UpdateFontSize(TextComponent textComponent, int newSize)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xF33FB8", Offset = "0xF33FB8", VA = "0xF33FB8")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xF33CB4", Offset = "0xF33CB4", VA = "0xF33CB4")]
		private TextComponent[] GetTextComponents()
		{
			return null;
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xF34468", Offset = "0xF34468", VA = "0xF34468")]
		private void ResizeAllTextComponents(TextComponent[] textComponents)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xF345B0", Offset = "0xF345B0", VA = "0xF345B0")]
		private void ResizeAllPaddingElements(TextComponent[] textComponents)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xF34764", Offset = "0xF34764", VA = "0xF34764")]
		private float GetPreferredGroupWidth(TextComponent[] textComponents)
		{
			return default(float);
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xF3486C", Offset = "0xF3486C", VA = "0xF3486C")]
		public UIScalableTextLayoutGroup()
		{
		}
	}
	[Token(Token = "0x200094C")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1C85C", Offset = "0xB1C85C")]
	public class ScreenLayoutSwitcher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200094D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C870", Offset = "0xB1C870")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__14_0;

			[Token(Token = "0x6002051")]
			[Address(RVA = "0xDA0ED0", Offset = "0xDA0ED0", VA = "0xDA0ED0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002052")]
			[Address(RVA = "0xDA0ED8", Offset = "0xDA0ED8", VA = "0xDA0ED8")]
			internal void <.ctor>b__14_0()
			{
			}
		}

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _updateOnAwake;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minimumDesktopDiagonal;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _desktopLayoutObjects;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] _mobileLayoutObjects;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onLayoutChanged;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A504", Offset = "0xB2A504")]
		private bool <HasDesktopLayout>k__BackingField;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SettingsService _settingsService;

		[Token(Token = "0x17000391")]
		public bool HasDesktopLayout
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x1105D00", Offset = "0x1105D00", VA = "0x1105D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34228", Offset = "0xB34228")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600204A")]
			[Address(RVA = "0x1105D08", Offset = "0x1105D08", VA = "0x1105D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34238", Offset = "0xB34238")]
			private set
			{
			}
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1105D14", Offset = "0x1105D14", VA = "0x1105D14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1105FDC", Offset = "0x1105FDC", VA = "0x1105FDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x1106080", Offset = "0x1106080", VA = "0x1106080")]
		private void OnGraphicsSettingsChanged()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1105E4C", Offset = "0x1105E4C", VA = "0x1105E4C")]
		public void UpdateLayoutObjects(bool forceUpdate)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1106088", Offset = "0x1106088", VA = "0x1106088")]
		public ScreenLayoutSwitcher()
		{
		}
	}
	[Token(Token = "0x200094E")]
	public class ScrollRectNaviHelper : MonoBehaviour
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A514", Offset = "0xB2A514")]
		private UISkin _runtimeHierarchySkin;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScrollRect _scrollRect;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform _childContainer;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _updatePositionFromNavigation;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputService _inputService;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform _scrollRectTransform;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _lastSelection;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _forcePositionUpdate;

		[Token(Token = "0x17000392")]
		public int ChildCount
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x11061E8", Offset = "0x11061E8", VA = "0x11061E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x110627C", Offset = "0x110627C", VA = "0x110627C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1106388", Offset = "0x1106388", VA = "0x1106388")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1106394", Offset = "0x1106394", VA = "0x1106394")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1106654", Offset = "0x1106654", VA = "0x1106654")]
		public void ScrollTiles(Vector2 amount)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x11066A0", Offset = "0x11066A0", VA = "0x11066A0")]
		public void ScrollVerticalTiles(float amount)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x11066E8", Offset = "0x11066E8", VA = "0x11066E8")]
		public void ScrollHorizontalTiles(float amount)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1106730", Offset = "0x1106730", VA = "0x1106730")]
		public void ScrollRuntimeHierarchyTiles(float amount)
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x11067B8", Offset = "0x11067B8", VA = "0x11067B8")]
		public void ScrollRuntimeHierarchyPages(float amount)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1106488", Offset = "0x1106488", VA = "0x1106488")]
		private void UpdateScrollPosFromNavigation()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x110683C", Offset = "0x110683C", VA = "0x110683C")]
		public ScrollRectNaviHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200094F")]
	public class SplashScreenSequenceConfig
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FadeAlphaCanvasGroup[] canvasGroups;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool noFinalFadeOut;

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xDACB6C", Offset = "0xDACB6C", VA = "0xDACB6C")]
		public SplashScreenSequenceConfig()
		{
		}
	}
	[Token(Token = "0x2000950")]
	public sealed class SplashScreenController : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000951")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C880", Offset = "0xB1C880")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplashScreenController <>4__this;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> <>9__0;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> <>9__1;

			[Token(Token = "0x6002067")]
			[Address(RVA = "0xDA4438", Offset = "0xDA4438", VA = "0xDA4438")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0xDA4440", Offset = "0xDA4440", VA = "0xDA4440")]
			internal bool <Fade>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6002069")]
			[Address(RVA = "0xDA44BC", Offset = "0xDA44BC", VA = "0xDA44BC")]
			internal bool <Fade>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000952")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C890", Offset = "0xB1C890")]
		private sealed class <Fade>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplashScreenController <>4__this;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x17000393")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600206D")]
				[Address(RVA = "0xDA49B4", Offset = "0xDA49B4", VA = "0xDA49B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000394")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600206F")]
				[Address(RVA = "0xDA49FC", Offset = "0xDA49FC", VA = "0xDA49FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206A")]
			[Address(RVA = "0xDA4538", Offset = "0xDA4538", VA = "0xDA4538")]
			[DebuggerHidden]
			public <Fade>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600206B")]
			[Address(RVA = "0xDA4564", Offset = "0xDA4564", VA = "0xDA4564", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0xDA4568", Offset = "0xDA4568", VA = "0xDA4568", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0xDA49BC", Offset = "0xDA49BC", VA = "0xDA49BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000953")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C8A0", Offset = "0xB1C8A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<AsyncOperation> <>9__18_0;

			[Token(Token = "0x6002071")]
			[Address(RVA = "0xDA43BC", Offset = "0xDA43BC", VA = "0xDA43BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0xDA43C4", Offset = "0xDA43C4", VA = "0xDA43C4")]
			internal void <LoadNextScene>b__18_0(AsyncOperation op)
			{
			}
		}

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool startSequenceOnAwake;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float fadeTimeInSeconds;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float screenDisplayTimeInSeconds;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FadeAlphaCanvasGroup[] appleScreensToShow;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Dictionary<string, SplashScreenSequenceConfig> configsPerPlatform;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A5E0", Offset = "0xB2A5E0")]
		private bool showAppleArcadeScreen;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool surpressLoadNextScene;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaitForSeconds WaitForScreenDisplayTime;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<FadeAlphaCanvasGroup> finalScreensToShow;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Action _onSequenceFinishedCallback;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool noFinalFadeOut;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly float[] screenRatios;

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xDAC514", Offset = "0xDAC514", VA = "0xDAC514")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xDAC664", Offset = "0xDAC664", VA = "0xDAC664")]
		private void Start()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xDAC678", Offset = "0xDAC678", VA = "0xDAC678")]
		public void StartSequence([Optional] Action onSequenceFinished)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xDAC524", Offset = "0xDAC524", VA = "0xDAC524")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xDAC730", Offset = "0xDAC730", VA = "0xDAC730")]
		private void AddAppleArcadeScreen()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xDAC840", Offset = "0xDAC840", VA = "0xDAC840")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34248", Offset = "0xB34248")]
		public IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xDAC8B8", Offset = "0xDAC8B8", VA = "0xDAC8B8")]
		public void LoadNextScene()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xDACA38", Offset = "0xDACA38", VA = "0xDACA38")]
		public SplashScreenController()
		{
		}
	}
	[Token(Token = "0x2000954")]
	public class SystemInformation : MonoBehaviour
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text ScreenInformation;

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xDB1618", Offset = "0xDB1618", VA = "0xDB1618")]
		private void Start()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xDB161C", Offset = "0xDB161C", VA = "0xDB161C")]
		public void UpdateScreenDimensions()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xDB1A00", Offset = "0xDB1A00", VA = "0xDB1A00")]
		public SystemInformation()
		{
		}
	}
	[Token(Token = "0x2000955")]
	public class UICrosshairController : MonoBehaviour
	{
		[Token(Token = "0x2000956")]
		public enum CrosshairGraphic
		{
			[Token(Token = "0x4001E32")]
			Regular,
			[Token(Token = "0x4001E33")]
			PlayerChoice,
			[Token(Token = "0x4001E34")]
			Scarecrow,
			[Token(Token = "0x4001E35")]
			ShootingGallery
		}

		[Token(Token = "0x2000957")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C8B0", Offset = "0xB1C8B0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UICrosshairController <>4__this;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject nextCrosshair;

			[Token(Token = "0x6002083")]
			[Address(RVA = "0xDA5C08", Offset = "0xDA5C08", VA = "0xDA5C08")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002084")]
			[Address(RVA = "0xDA5C10", Offset = "0xDA5C10", VA = "0xDA5C10")]
			internal void <FadeToNextType>b__0()
			{
			}
		}

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A64C", Offset = "0xB2A64C")]
		[SerializeField]
		private GameObject regularCrosshair;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject playerChoiceCrosshair;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject scarecrowCroshair;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject shootingGalleryCrosshair;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A6C8", Offset = "0xB2A6C8")]
		private float fadeSeconds;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEngine.CanvasGroup hideCrosshairCanvasGroup;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEngine.CanvasGroup typeCrosshairCanvasGroup;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CanvasGroupFaderUtil hideGroupFader;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CanvasGroupFaderUtil typeGroupFader;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject currentCrosshair;

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xDBB0C0", Offset = "0xDBB0C0", VA = "0xDBB0C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xDBB188", Offset = "0xDBB188", VA = "0xDBB188")]
		private void Start()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xDBB270", Offset = "0xDBB270", VA = "0xDBB270")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xDBB3D4", Offset = "0xDBB3D4", VA = "0xDBB3D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xDBB538", Offset = "0xDBB538", VA = "0xDBB538")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xDBB58C", Offset = "0xDBB58C", VA = "0xDBB58C")]
		public void DisplayCrosshair()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xDBB5AC", Offset = "0xDBB5AC", VA = "0xDBB5AC")]
		public void HideCrosshair()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xDBB5CC", Offset = "0xDBB5CC", VA = "0xDBB5CC")]
		private void FadeToNextType(GameObject nextCrosshair)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xDBB710", Offset = "0xDBB710", VA = "0xDBB710")]
		private void FadeInNextCrossHair(GameObject nextCrosshair)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xDBB828", Offset = "0xDBB828", VA = "0xDBB828")]
		public void ChangeCrosshair(CrosshairGraphic crosshair)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xDBB874", Offset = "0xDBB874", VA = "0xDBB874")]
		public void ChangeToScarecrow()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xDBB87C", Offset = "0xDBB87C", VA = "0xDBB87C")]
		public void ChangeToRegular()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xDBB884", Offset = "0xDBB884", VA = "0xDBB884")]
		public UICrosshairController()
		{
		}
	}
	[Token(Token = "0x2000958")]
	public class UIHintTextController : MonoBehaviour
	{
		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text primaryHintText;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text secondaryHintText;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasgroup;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine currentHintTextCoroutine;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas canvasParent;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A764", Offset = "0xB2A764")]
		private List<GameObject> animations;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string translation;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float timer;

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xDBB894", Offset = "0xDBB894", VA = "0xDBB894")]
		public void Init()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xDBB9D8", Offset = "0xDBB9D8", VA = "0xDBB9D8")]
		public void DisplayHintText(string primaryKey, string secondaryKey)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xDBBA28", Offset = "0xDBBA28", VA = "0xDBBA28")]
		private void TranslateText(Text text, string key)
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xDBBAC0", Offset = "0xDBBAC0", VA = "0xDBBAC0")]
		public void DisplayHintText(string primaryKey, string secondaryKey, float displayTime = 0f)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xDBBB00", Offset = "0xDBBB00", VA = "0xDBBB00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xDBBC64", Offset = "0xDBBC64", VA = "0xDBBC64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xDBBDC8", Offset = "0xDBBDC8", VA = "0xDBBDC8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xDBB97C", Offset = "0xDBB97C", VA = "0xDBB97C")]
		private void SetHintTextAlpha(float alpha)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xDBBE28", Offset = "0xDBBE28", VA = "0xDBBE28")]
		public void ClearHintText()
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xDBBE30", Offset = "0xDBBE30", VA = "0xDBBE30")]
		public void SetAnimation(int index)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xDBBEE0", Offset = "0xDBBEE0", VA = "0xDBBEE0")]
		public UIHintTextController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000959")]
	public class UIInteractable
	{
		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject markerParent;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegisteredInteractable interactable;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform interactableTransform;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIInteractableMarkerController markerController;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float viewportCenterDistance;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isVisible;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool ForceVisible;

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xDBBF64", Offset = "0xDBBF64", VA = "0xDBBF64")]
		public UIInteractable(RegisteredInteractable registeredInteractable)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xDBBFDC", Offset = "0xDBBFDC", VA = "0xDBBFDC")]
		public void DisplayMarker(float alpha)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xDBC038", Offset = "0xDBC038", VA = "0xDBC038")]
		public void DisplayMarker(float alpha, Vector3 position)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xDBC188", Offset = "0xDBC188", VA = "0xDBC188")]
		public void HideMarker()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xDBC1E4", Offset = "0xDBC1E4", VA = "0xDBC1E4")]
		public void ShowPanel()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xDBC288", Offset = "0xDBC288", VA = "0xDBC288")]
		public void HidePanel(bool overrideForceWasSelected = false)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xDBC35C", Offset = "0xDBC35C", VA = "0xDBC35C")]
		public void ForcePanelVisible(bool visible)
		{
		}
	}
	[Token(Token = "0x200095A")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1C8C0", Offset = "0xB1C8C0")]
	public class UIInteractableController : MonoBehaviour
	{
		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIInteractableMarkerController markerPrefab;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public OXR_InteractableCanvas XRmarkerPrefab;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIInteractableMarkerConfig markerConfig;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A7D0", Offset = "0xB2A7D0")]
		private List<UIInteractable> uiInteractables;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIInteractable closestTuple;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InteractableControllerUtil controllerUtil;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SceneManagementService sceneManagementService;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputService inputService;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mainCameraTransform;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A808", Offset = "0xB2A808")]
		private UIInteractable <LastPressedInteractable>k__BackingField;

		[Token(Token = "0x17000395")]
		private Camera MainCamera
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0xDBC38C", Offset = "0xDBC38C", VA = "0xDBC38C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public UIInteractable LastPressedInteractable
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0xDBC414", Offset = "0xDBC414", VA = "0xDBC414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB342F8", Offset = "0xB342F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002099")]
			[Address(RVA = "0xDBC41C", Offset = "0xDBC41C", VA = "0xDBC41C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34308", Offset = "0xB34308")]
			set
			{
			}
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xDBC424", Offset = "0xDBC424", VA = "0xDBC424")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xDBC65C", Offset = "0xDBC65C", VA = "0xDBC65C")]
		private void OnInteractableRegistered(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xDBC6E8", Offset = "0xDBC6E8", VA = "0xDBC6E8")]
		private void OnInteractableRegistered(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xDBCB7C", Offset = "0xDBCB7C", VA = "0xDBCB7C")]
		private void OnInteractableDeregistered(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xDBCC08", Offset = "0xDBCC08", VA = "0xDBCC08")]
		private void OnInteractableDeregistered(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xDBCDE0", Offset = "0xDBCDE0", VA = "0xDBCDE0")]
		public void UpdateInteractable(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xDBCE28", Offset = "0xDBCE28", VA = "0xDBCE28")]
		public UIInteractable GetUIInteractableForInteractable(RegisteredInteractable interactable)
		{
			return null;
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xDBCF40", Offset = "0xDBCF40", VA = "0xDBCF40")]
		public void OverrideInteractableMarkerName(RegisteredInteractable currentSign, string overrideName)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xDBD070", Offset = "0xDBD070", VA = "0xDBD070")]
		private void DelayedInit()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xDBC780", Offset = "0xDBC780", VA = "0xDBC780")]
		private UIInteractable Create(RegisteredInteractable registeredInteractable, ref string dbgString)
		{
			return null;
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xDBDE78", Offset = "0xDBDE78", VA = "0xDBDE78")]
		private void Update()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xDBE494", Offset = "0xDBE494", VA = "0xDBE494")]
		public UIInteractableController()
		{
		}
	}
	[Token(Token = "0x200095B")]
	public class UIInteractableListUtils
	{
		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 centerViewport;

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xDBE49C", Offset = "0xDBE49C", VA = "0xDBE49C")]
		public static void CalcSqrDistances(List<UIInteractable> uiInteractables, Camera camera)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xDBE2A8", Offset = "0xDBE2A8", VA = "0xDBE2A8")]
		public static UIInteractable FindClosest(List<UIInteractable> uiInteractables, Camera camera)
		{
			return null;
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xDBE874", Offset = "0xDBE874", VA = "0xDBE874")]
		public static float GetViewportCenterDistance(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xDBE944", Offset = "0xDBE944", VA = "0xDBE944")]
		public UIInteractableListUtils()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200095C")]
	public class UIInteractableMarkerConfig
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool showInteractableMarkers;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A818", Offset = "0xB2A818")]
		private float markerBlinkingSpeed;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A85C", Offset = "0xB2A85C")]
		[SerializeField]
		private float markerMinOpacity;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A89C", Offset = "0xB2A89C")]
		[SerializeField]
		private float markerMaxOpacity;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool fadeIn;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float alpha;

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xDBE43C", Offset = "0xDBE43C", VA = "0xDBE43C")]
		public void CalculateMarkerAlpha(float deltaTime)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xDBE99C", Offset = "0xDBE99C", VA = "0xDBE99C")]
		public UIInteractableMarkerConfig()
		{
		}
	}
	[Token(Token = "0x200095D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C8D4", Offset = "0xB1C8D4")]
	public class UIInteractableMarkerController : MonoBehaviour
	{
		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite normalMarker;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite selectedMarker;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UIInteractableTextController textController;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Button oxrButton;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A93C", Offset = "0xB2A93C")]
		private bool <selected>k__BackingField;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform rectTransform;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RegisteredInteractable _interactable;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OXR_InteractableCanvas xrTransform;

		[Token(Token = "0x17000397")]
		public RegisteredInteractable interactable
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0xDBE9C4", Offset = "0xDBE9C4", VA = "0xDBE9C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public bool selected
		{
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0xDBE9CC", Offset = "0xDBE9CC", VA = "0xDBE9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34318", Offset = "0xB34318")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0xDBE9D4", Offset = "0xDBE9D4", VA = "0xDBE9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34328", Offset = "0xB34328")]
			private set
			{
			}
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xDBDBB8", Offset = "0xDBDBB8", VA = "0xDBDBB8")]
		public void Init(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xDBE9E0", Offset = "0xDBE9E0", VA = "0xDBE9E0")]
		public void Invoke()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xDBC084", Offset = "0xDBC084", VA = "0xDBC084")]
		public void DisplayMarker(float alpha, Vector3 position, bool fullAlphaifSelected = true)
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xDBC1A0", Offset = "0xDBC1A0", VA = "0xDBC1A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xDBC230", Offset = "0xDBC230", VA = "0xDBC230")]
		public void ShowPanel(bool displayTextPanel = true)
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xDBC2FC", Offset = "0xDBC2FC", VA = "0xDBC2FC")]
		public void HidePanel(bool switchMarker = true)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xDBEB64", Offset = "0xDBEB64", VA = "0xDBEB64")]
		public UIInteractableMarkerController()
		{
		}
	}
	[Token(Token = "0x200095E")]
	public class UIInteractableMarkerControllerHighlight : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIInteractableMarkerController markerController;

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xF273C0", Offset = "0xF273C0", VA = "0xF273C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xF27438", Offset = "0xF27438", VA = "0xF27438", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xF274D8", Offset = "0xF274D8", VA = "0xF274D8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xF27578", Offset = "0xF27578", VA = "0xF27578")]
		public UIInteractableMarkerControllerHighlight()
		{
		}
	}
	[Token(Token = "0x200095F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C934", Offset = "0xB1C934")]
	public class UIInteractableTextController : MonoBehaviour
	{
		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI nameText;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI interactionText;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float fadeSeconds;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string inspectKey;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button button;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RegisteredInteractable myInteractable;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool fadeIn;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool fadeOut;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LocalizationService localizationService;

		[Token(Token = "0x17000399")]
		private UIManager uiManager
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0xF27580", Offset = "0xF27580", VA = "0xF27580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xF27600", Offset = "0xF27600", VA = "0xF27600")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xF27628", Offset = "0xF27628", VA = "0xF27628")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xF2778C", Offset = "0xF2778C", VA = "0xF2778C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xF278F0", Offset = "0xF278F0", VA = "0xF278F0")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xF27A40", Offset = "0xF27A40", VA = "0xF27A40")]
		public void Init(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xF27C4C", Offset = "0xF27C4C", VA = "0xF27C4C")]
		public void Display(bool displayTextPanel = true)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xF27D14", Offset = "0xF27D14", VA = "0xF27D14")]
		public void Clear(bool immediate = false)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xF27D78", Offset = "0xF27D78", VA = "0xF27D78")]
		public void Log(string text)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xF27BC4", Offset = "0xF27BC4", VA = "0xF27BC4")]
		public void SetNameLabel([Optional] string overrideName)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xF27CE4", Offset = "0xF27CE4", VA = "0xF27CE4")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xF27D6C", Offset = "0xF27D6C", VA = "0xF27D6C")]
		private void FadeOut()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xF27D7C", Offset = "0xF27D7C", VA = "0xF27D7C")]
		public UIInteractableTextController()
		{
		}
	}
	[Token(Token = "0x2000960")]
	public class UILanguageSelection : MonoBehaviour
	{
		[Token(Token = "0x2000961")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C994", Offset = "0xB1C994")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UILanguageSelection <>4__this;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIToggleWidget currentToggle;

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0xDA5C34", Offset = "0xDA5C34", VA = "0xDA5C34")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0xDA5C3C", Offset = "0xDA5C3C", VA = "0xDA5C3C")]
			internal void <AddToggle>b__0(bool enabled)
			{
			}
		}

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A98C", Offset = "0xB2A98C")]
		private RectTransform rootRect;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform widgetRoot;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIToggleWidget firstWidget;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIToggleWidget lastActiveToggle;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A9E4", Offset = "0xB2A9E4")]
		[SerializeField]
		private List<string> selectableItems;

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xF28768", Offset = "0xF28768", VA = "0xF28768")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xF2881C", Offset = "0xF2881C", VA = "0xF2881C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xF28A98", Offset = "0xF28A98", VA = "0xF28A98")]
		private void AddToggle(bool isFirst, string code, string item)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xF28D48", Offset = "0xF28D48", VA = "0xF28D48")]
		public UILanguageSelection()
		{
		}
	}
	[Token(Token = "0x2000962")]
	public class LookAtModelInstantiator
	{
		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Func<GameObject, GameObject> instantiatorFunc;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int lookAtLayerID;

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xEB7A44", Offset = "0xEB7A44", VA = "0xEB7A44")]
		public LookAtModelInstantiator(Func<GameObject, GameObject> instantiatorFunc, Vector3 defaultPosition, int lookAtLayerID)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xEB7AB0", Offset = "0xEB7AB0", VA = "0xEB7AB0")]
		public GameObject InstantiateLookAtModel(GameObject lookAtModel)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xEB7C14", Offset = "0xEB7C14", VA = "0xEB7C14")]
		private void SetLayer(GameObject spawnedGameObject, int desiredLayer)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xEB7B94", Offset = "0xEB7B94", VA = "0xEB7B94")]
		private int GetDesiredLayer()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000963")]
	public class UILookAtItemDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UILookAtItemDisplay_Rotation rotationHandler;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AA40", Offset = "0xB2AA40")]
		[SerializeField]
		public RawImage rawImage;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Camera renderTextureCamera;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<UILookAtItemDisplay_RotatorInput> rotatorInputs;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AAAC", Offset = "0xB2AAAC")]
		[SerializeField]
		public Transform objectContainer;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public int lookAtLayerID;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public InventoryItemCollection availableInventoryItems;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputService _inputService;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LookAtModelObjectList lookAtModelObjectList;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UILookAtItemDisplay_LightingController lightingController;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UILookAtItemDisplay_RenderTexture renderTexture;

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xF291D8", Offset = "0xF291D8", VA = "0xF291D8")]
		public void Init()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xF294A4", Offset = "0xF294A4", VA = "0xF294A4")]
		public void InstantiateLookAtObjects_AfterAllScenesLoaded()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xF29B2C", Offset = "0xF29B2C", VA = "0xF29B2C")]
		public void Show()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xF29C90", Offset = "0xF29C90", VA = "0xF29C90")]
		public void Hide()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xF29D38", Offset = "0xF29D38", VA = "0xF29D38")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xF2A5B4", Offset = "0xF2A5B4", VA = "0xF2A5B4")]
		public void ShowHideItemContainer(bool show)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xF29ACC", Offset = "0xF29ACC", VA = "0xF29ACC")]
		public void EnableObjectWithName(string objectName)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xF2A898", Offset = "0xF2A898", VA = "0xF2A898")]
		public Transform GetRotatableTransform()
		{
			return null;
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xF2AA68", Offset = "0xF2AA68", VA = "0xF2AA68")]
		public static string LogHierarchy(Transform parent, int depth = 0, bool onlyActiveObjects = true)
		{
			return null;
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xF2AC28", Offset = "0xF2AC28", VA = "0xF2AC28")]
		public UILookAtItemDisplay()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xF2AD48", Offset = "0xF2AD48", VA = "0xF2AD48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34338", Offset = "0xB34338")]
		private GameObject <InstantiateLookAtObjects_AfterAllScenesLoaded>b__12_0(GameObject go)
		{
			return null;
		}
	}
	[Token(Token = "0x2000964")]
	public class UILookAtItemDisplay_Instantiator
	{
		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LookAtModelObjectList lookAtModelObjectList;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LookAtModelInstantiator lookAtModelInstantiator;

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xF2A0C8", Offset = "0xF2A0C8", VA = "0xF2A0C8")]
		public UILookAtItemDisplay_Instantiator(Func<GameObject, GameObject> instantiatorFunc, Vector3 defaultPosition, int lookAtLayerID)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xF2ADD4", Offset = "0xF2ADD4", VA = "0xF2ADD4")]
		private void InstantiateLookAtModelAndAddToList(string objectName, GameObject lookAtModel)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xF2A1B0", Offset = "0xF2A1B0", VA = "0xF2A1B0")]
		public LookAtModelObjectList InstantiateAllDisplayableObjects(InventoryItemCollection availableInventoryItems)
		{
			return null;
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xF2AEAC", Offset = "0xF2AEAC", VA = "0xF2AEAC")]
		private void InstantiateAllInteractableLookAtModels()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xF2B1A0", Offset = "0xF2B1A0", VA = "0xF2B1A0")]
		private void InstantiateAllInventoryItemLookAtModels(InventoryItemCollection availableInventoryItems)
		{
		}
	}
	[Token(Token = "0x2000965")]
	public class UILookAtItemDisplay_LightingController
	{
		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color originalAmbientColor;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color lookAtAmbientColor;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float originalAmbientIntensity;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lookaAtAmbientIntensity;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AmbientMode originalAmbientMode;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject light;

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xF2A1E4", Offset = "0xF2A1E4", VA = "0xF2A1E4")]
		public void SetupAmbientLight()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xF2A5F0", Offset = "0xF2A5F0", VA = "0xF2A5F0")]
		public void RevertAmbientLightBackToNormal()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xF2B378", Offset = "0xF2B378", VA = "0xF2B378")]
		public void ActivateMenuLightVR()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xF2ACCC", Offset = "0xF2ACCC", VA = "0xF2ACCC")]
		public UILookAtItemDisplay_LightingController()
		{
		}
	}
	[Token(Token = "0x2000966")]
	public class UILookAtItemDisplay_RenderTexture
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera renderTextureCamera;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RawImage rawImage;

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xF29EF0", Offset = "0xF29EF0", VA = "0xF29EF0")]
		public void Init(Camera renderTextureCamera, RawImage rawImage)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xF2A2A8", Offset = "0xF2A2A8", VA = "0xF2A2A8")]
		public void CreateAndSetupRenderTexture()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xF2A630", Offset = "0xF2A630", VA = "0xF2A630")]
		public void DestroyAndCleanupRenderTexture()
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xF2AD40", Offset = "0xF2AD40", VA = "0xF2AD40")]
		public UILookAtItemDisplay_RenderTexture()
		{
		}
	}
	[Token(Token = "0x2000967")]
	public abstract class UILookAtRotationInputHandler
	{
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xF2CB08", Offset = "0xF2CB08", VA = "0xF2CB08", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xF2C3FC", Offset = "0xF2C3FC", VA = "0xF2C3FC", Slot = "5")]
		public virtual void Setup()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xF2C63C", Offset = "0xF2C63C", VA = "0xF2C63C", Slot = "6")]
		public virtual void CleanUp()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xF2C874", Offset = "0xF2C874", VA = "0xF2C874", Slot = "7")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60020EE")]
		public abstract Vector3 GetRelativeRotationInput();

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xF2BF40", Offset = "0xF2BF40", VA = "0xF2BF40")]
		protected UILookAtRotationInputHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000968")]
	public class UILookAtItemDisplay_Rotation
	{
		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public LookAtRotationMovementConfig rotationMovementConfig;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UILookAtItemDisplay_RotationSmoother rotationSmoother;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<UILookAtRotationInputHandler> rotationInputHandlers;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform objectContainer;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion defaultContainerRotation;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool wasRotationStartedThisFrame;

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xF29F54", Offset = "0xF29F54", VA = "0xF29F54")]
		public void InitRotation(Transform objectContainer, List<UILookAtItemDisplay_RotatorInput> rotatorInputs)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xF2B620", Offset = "0xF2B620", VA = "0xF2B620")]
		private void CreateRotationInputHandlers(List<UILookAtItemDisplay_RotatorInput> rotatorInputs)
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xF2A3A4", Offset = "0xF2A3A4", VA = "0xF2A3A4")]
		public void SetupRotation()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xF2B8F0", Offset = "0xF2B8F0", VA = "0xF2B8F0")]
		private void OnRotationStarted()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xF2A77C", Offset = "0xF2A77C", VA = "0xF2A77C")]
		public void CleanupRotation()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xF2A928", Offset = "0xF2A928", VA = "0xF2A928")]
		public void OnUpdate(Transform targetTransform)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xF2B8FC", Offset = "0xF2B8FC", VA = "0xF2B8FC")]
		private Vector3 GetRelativeInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xF2BA54", Offset = "0xF2BA54", VA = "0xF2BA54")]
		private void RotateLookAtObject(Transform targetTransform, Vector3 inputRelative)
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xF2BB8C", Offset = "0xF2BB8C", VA = "0xF2BB8C")]
		private void Rotate(Transform targetTransform)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xF2BE7C", Offset = "0xF2BE7C", VA = "0xF2BE7C")]
		public UILookAtItemDisplay_Rotation()
		{
		}
	}
	[Token(Token = "0x2000969")]
	public class UILookAtItemDisplay_RotationInputNormal : UILookAtRotationInputHandler
	{
		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputService inputService;

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xF2B854", Offset = "0xF2B854", VA = "0xF2B854")]
		public UILookAtItemDisplay_RotationInputNormal(InputService inputService)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xF2BF48", Offset = "0xF2BF48", VA = "0xF2BF48", Slot = "8")]
		public override Vector3 GetRelativeRotationInput()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200096A")]
	public class UILookAtItemDisplay_RotationInputRestricted : UILookAtRotationInputHandler
	{
		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputService inputService;

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xF2B888", Offset = "0xF2B888", VA = "0xF2B888")]
		public UILookAtItemDisplay_RotationInputRestricted(InputService inputService)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xF2C1B0", Offset = "0xF2C1B0", VA = "0xF2C1B0", Slot = "8")]
		public override Vector3 GetRelativeRotationInput()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200096B")]
	public class UILookAtItemDisplay_RotationInputVR : UILookAtRotationInputHandler
	{
		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<UILookAtItemDisplay_RotatorInput> rotatorInputs;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 lastFramePos;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xF2B810", Offset = "0xF2B810", VA = "0xF2B810")]
		public UILookAtItemDisplay_RotationInputVR(List<UILookAtItemDisplay_RotatorInput> rotatorInputs)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xF2C278", Offset = "0xF2C278", VA = "0xF2C278", Slot = "1")]
		~UILookAtItemDisplay_RotationInputVR()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xF2C2E8", Offset = "0xF2C2E8", VA = "0xF2C2E8", Slot = "5")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xF2C528", Offset = "0xF2C528", VA = "0xF2C528", Slot = "6")]
		public override void CleanUp()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xF2C760", Offset = "0xF2C760", VA = "0xF2C760", Slot = "7")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xF2C8F4", Offset = "0xF2C8F4", VA = "0xF2C8F4", Slot = "8")]
		public override Vector3 GetRelativeRotationInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xF2CA38", Offset = "0xF2CA38", VA = "0xF2CA38")]
		private Vector3 GetRotationVectorFrom(UILookAtItemDisplay_RotatorInput rotator)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xF2BC14", Offset = "0xF2BC14", VA = "0xF2BC14")]
		public static void Rotate(Transform targetTransform, bool wasRotationStartedThisFrame)
		{
		}
	}
	[Token(Token = "0x200096C")]
	public class UILookAtItemDisplay_RotationSmoother
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 smoothedCursorPosition;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 cursorGoalPosition;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LookAtRotationMovementConfig rotationMovementConfig;

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xF2CA60", Offset = "0xF2CA60", VA = "0xF2CA60")]
		public void Init(LookAtRotationMovementConfig rotationMovementConfig)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xF2B8BC", Offset = "0xF2B8BC", VA = "0xF2B8BC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xF2BB9C", Offset = "0xF2BB9C", VA = "0xF2BB9C")]
		public Vector2 GetSmoothedPosition(Vector2 inputRelative)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xF2CA68", Offset = "0xF2CA68", VA = "0xF2CA68")]
		private Vector2 RelativeInputToGoalPosition(Vector2 inputRelative)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xF2BF38", Offset = "0xF2BF38", VA = "0xF2BF38")]
		public UILookAtItemDisplay_RotationSmoother()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200096D")]
	public class UILookAtItemDisplay_RotatorInput
	{
		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputActionReference triggerAction;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputActionReference rotationAction;

		[NonSerialized]
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isTriggerPressed;

		[NonSerialized]
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion lastFrameRotation;

		[NonSerialized]
		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion currentFrameRotation;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action onRotationStarted;

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xF2C400", Offset = "0xF2C400", VA = "0xF2C400")]
		public void Init()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xF2C640", Offset = "0xF2C640", VA = "0xF2C640")]
		public void Deinit()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xF2CA8C", Offset = "0xF2CA8C", VA = "0xF2CA8C")]
		private void OnTriggerPressed(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xF2C878", Offset = "0xF2C878", VA = "0xF2C878")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xF2CAF8", Offset = "0xF2CAF8", VA = "0xF2CAF8")]
		private void OnTriggerReleased(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xF2CB00", Offset = "0xF2CB00", VA = "0xF2CB00")]
		public UILookAtItemDisplay_RotatorInput()
		{
		}
	}
	[Token(Token = "0x200096E")]
	public class LookAtInteractionButton
	{
		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button button;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text buttonLabel;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image buttonIcon;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Interaction interaction;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<LookAtInteractionButton> callback;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LocalizationService localizationService;

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xEB74C4", Offset = "0xEB74C4", VA = "0xEB74C4")]
		public LookAtInteractionButton(Button button, Action<LookAtInteractionButton> callback, LocalizationService localizationService)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xEB7530", Offset = "0xEB7530", VA = "0xEB7530")]
		private void Init()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xEB7650", Offset = "0xEB7650", VA = "0xEB7650")]
		private void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xEB76B0", Offset = "0xEB76B0", VA = "0xEB76B0")]
		public void ConfigureWith(LocaKey locaKey, InteractionIconList interactionIconList, [Optional] Interaction interaction)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xEB7718", Offset = "0xEB7718", VA = "0xEB7718")]
		private void ConfigureIcon(LocaKey locaKey, InteractionIconList interactionIconList)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xEB77D8", Offset = "0xEB77D8", VA = "0xEB77D8")]
		private void ConfigureLabel(LocaKey locaKey)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xEB7848", Offset = "0xEB7848", VA = "0xEB7848")]
		private void ConfigureVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xEB7884", Offset = "0xEB7884", VA = "0xEB7884")]
		private static bool ShouldDisableButtonIcons()
		{
			return default(bool);
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xEB78F0", Offset = "0xEB78F0", VA = "0xEB78F0")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x200096F")]
	public enum LookAtMode
	{
		[Token(Token = "0x4001EA7")]
		Interactable,
		[Token(Token = "0x4001EA8")]
		InventoryItem
	}
	[Token(Token = "0x2000970")]
	public class LookAtModeConfig
	{
		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LookAtMode mode;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string itemName;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocaKey itemLocaKey;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RegisteredInteractable interactable;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InventoryItem inventoryItem;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Interaction triggeredInteraction;

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xEB7920", Offset = "0xEB7920", VA = "0xEB7920")]
		public LookAtModeConfig(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xEB799C", Offset = "0xEB799C", VA = "0xEB799C")]
		public LookAtModeConfig(InventoryItem inventoryItem)
		{
		}
	}
	[Token(Token = "0x2000971")]
	public class LookAtModelObjectList
	{
		[Token(Token = "0x2000972")]
		private struct NameObjectPair
		{
			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject lookAtObject;
		}

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<NameObjectPair> lookAtObjects;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject currentEnabledObject;

		[Token(Token = "0x1700039A")]
		public bool HasCurrentObject
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0xEB7CEC", Offset = "0xEB7CEC", VA = "0xEB7CEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xEB7D58", Offset = "0xEB7D58", VA = "0xEB7D58")]
		public LookAtModelObjectList()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xEB7DDC", Offset = "0xEB7DDC", VA = "0xEB7DDC")]
		public void Add(string objectName, GameObject spawnedGameObject)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xEB7E7C", Offset = "0xEB7E7C", VA = "0xEB7E7C")]
		public bool HasObjectWithGivenName(string objectName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xEB7F40", Offset = "0xEB7F40", VA = "0xEB7F40")]
		public void EnableFirstObjectWithGivenName(string objectName)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000973")]
	public class LookAtRotationMovementConfig
	{
		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AB28", Offset = "0xB2AB28")]
		public float smoothnessX;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AB40", Offset = "0xB2AB40")]
		public float smoothnessY;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AB58", Offset = "0xB2AB58")]
		public float sensitivityX;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AB74", Offset = "0xB2AB74")]
		public float sensitivityY;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yClamping;

		[Token(Token = "0x1700039B")]
		public Vector2 smoothness
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0xEB82F8", Offset = "0xEB82F8", VA = "0xEB82F8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xEB8300", Offset = "0xEB8300", VA = "0xEB8300")]
		public LookAtRotationMovementConfig()
		{
		}
	}
	[Token(Token = "0x2000974")]
	public class UILookAtController : MenuOverlayBase
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AB90", Offset = "0xB2AB90")]
		public UILookAtItemDisplay itemDisplayController;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UILookAt_Buttons buttons;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UILookAt_Visibility visibility;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UILookat_Cancel cancel;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UILookAt_Title title;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UILookAt_RotationHint rotationHint;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UILookAt_Sound soundController;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LocalizationService _localizationService;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SceneManagementService _sceneManagementService;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private LookAtModeConfig currentLookAtModeConfig;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool isInitialized;

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xF28DCC", Offset = "0xF28DCC", VA = "0xF28DCC", Slot = "14")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xF29370", Offset = "0xF29370", VA = "0xF29370")]
		private void Init_AfterAllScenesLoaded()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xF295D0", Offset = "0xF295D0", VA = "0xF295D0")]
		public void DisplayLookAt(RegisteredInteractable interactable)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xF29688", Offset = "0xF29688", VA = "0xF29688")]
		public void DisplayLookAt(InventoryItem inventoryItem)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xF29640", Offset = "0xF29640", VA = "0xF29640")]
		private void ConfigureScreenAndPushMenu(LookAtModeConfig lookAtModeConfig)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xF296F8", Offset = "0xF296F8", VA = "0xF296F8")]
		private void ConfigureScreen()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xF29AE8", Offset = "0xF29AE8", VA = "0xF29AE8", Slot = "15")]
		public override void Show()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xF29C4C", Offset = "0xF29C4C", VA = "0xF29C4C", Slot = "16")]
		public override void Hide()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xF29D20", Offset = "0xF29D20", VA = "0xF29D20", Slot = "17")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xF29D68", Offset = "0xF29D68", VA = "0xF29D68", Slot = "18")]
		public override void OnPush()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xF29E40", Offset = "0xF29E40", VA = "0xF29E40", Slot = "19")]
		public override void OnPop()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xF29E78", Offset = "0xF29E78", VA = "0xF29E78")]
		public UILookAtController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000975")]
	public class UILookAt_Buttons
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Button> interactionButtons;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractionIconList interactionIconList;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LookAtModeConfig currentConfig;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LookAtInteractionButton> buttonList;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IntentoryItemRequestHandler requestHandler;

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xF290A4", Offset = "0xF290A4", VA = "0xF290A4")]
		public void Init(LocalizationService localizationService)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xF2CB0C", Offset = "0xF2CB0C", VA = "0xF2CB0C")]
		private List<LookAtInteractionButton> CreateButtonListFrom(IEnumerable<Button> interactionButtons)
		{
			return null;
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xF2CED4", Offset = "0xF2CED4", VA = "0xF2CED4")]
		private void ConfigureInteractionButton(int index, LocaKey locaKey, [Optional] Interaction interaction)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xF2CF74", Offset = "0xF2CF74", VA = "0xF2CF74")]
		private void ClearInteractionButtons()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xF299B8", Offset = "0xF299B8", VA = "0xF299B8")]
		public void ConfigureInteractionButtons(LookAtModeConfig currentConfig)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xF2D08C", Offset = "0xF2D08C", VA = "0xF2D08C")]
		private void ConfigureInteractionButtons_ForLookAtModeConfig()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xF2D0E8", Offset = "0xF2D0E8", VA = "0xF2D0E8")]
		private void ConfigureInteractionButtons_ForInteractable()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xF2D244", Offset = "0xF2D244", VA = "0xF2D244")]
		private void ConfigureInteractionButtons_ForInventoryItem()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xF2D2A8", Offset = "0xF2D2A8", VA = "0xF2D2A8")]
		private void OnInteractionButton(LookAtInteractionButton button)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xF2D348", Offset = "0xF2D348", VA = "0xF2D348")]
		private void InvokeButtonAction(LookAtInteractionButton button)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xF2D4C4", Offset = "0xF2D4C4", VA = "0xF2D4C4")]
		private void InvokeInteraction(Interaction interaction)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xF299E8", Offset = "0xF299E8", VA = "0xF299E8")]
		public bool IsAnyInteractionUnskippable()
		{
			return default(bool);
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xF2D500", Offset = "0xF2D500", VA = "0xF2D500")]
		private bool IsAnyInteractableInteractionUnskippable()
		{
			return default(bool);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xF2D640", Offset = "0xF2D640", VA = "0xF2D640")]
		public UILookAt_Buttons()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000976")]
	public class UILookAt_RotationHint
	{
		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _rotationHintMouse;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _rotationHintNavigation;

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xF2D648", Offset = "0xF2D648", VA = "0xF2D648")]
		private static bool IsFontSizeScaledUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xF2D770", Offset = "0xF2D770", VA = "0xF2D770")]
		private static bool IsPlatformRequiringNavigation()
		{
			return default(bool);
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xF29170", Offset = "0xF29170", VA = "0xF29170")]
		public void ConfigureRotationHint()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xF2D814", Offset = "0xF2D814", VA = "0xF2D814")]
		public UILookAt_RotationHint()
		{
		}
	}
	[Token(Token = "0x2000977")]
	public enum LookAtEvent
	{
		[Token(Token = "0x4001ECC")]
		Enter,
		[Token(Token = "0x4001ECD")]
		Exit
	}
	[Token(Token = "0x2000978")]
	public class UILookAt_Sound
	{
		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SoundService _soundService;

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xF28FF8", Offset = "0xF28FF8", VA = "0xF28FF8")]
		public void InitSound()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xF29DA0", Offset = "0xF29DA0", VA = "0xF29DA0")]
		public void PlaySound(LookAtModeConfig modeConfig, LookAtEvent lookAtEvent)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xF29EE8", Offset = "0xF29EE8", VA = "0xF29EE8")]
		public UILookAt_Sound()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000979")]
	public class UILookAt_Title
	{
		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Text titleText;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LocalizationService localizationService;

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xF2D81C", Offset = "0xF2D81C", VA = "0xF2D81C")]
		public void Init(LocalizationService localizationService)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xF2D824", Offset = "0xF2D824", VA = "0xF2D824")]
		public void SetItemText(string objectName, LocaKey locaKey)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xF29AAC", Offset = "0xF29AAC", VA = "0xF29AAC")]
		public void SetItemText(LookAtModeConfig lookAtModeConfig)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xF2D880", Offset = "0xF2D880", VA = "0xF2D880")]
		public UILookAt_Title()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200097A")]
	public class UILookAt_Visibility
	{
		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xF2D888", Offset = "0xF2D888", VA = "0xF2D888")]
		public void MakeLookAtScreenVisible()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xF2D8EC", Offset = "0xF2D8EC", VA = "0xF2D8EC")]
		public void MakeLookAtScreenInvisible()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xF29BBC", Offset = "0xF29BBC", VA = "0xF29BBC")]
		public void ShowHide(LookAtModeConfig lookAtModeConfig, bool show)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xF2D91C", Offset = "0xF2D91C", VA = "0xF2D91C")]
		private static void ShowHideInteractable(LookAtModeConfig lookAtModeConfig, bool show)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xF2DA2C", Offset = "0xF2DA2C", VA = "0xF2DA2C")]
		public UILookAt_Visibility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200097B")]
	public class UILookat_Cancel
	{
		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Button backButton;

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xF29A38", Offset = "0xF29A38", VA = "0xF29A38")]
		public void ConfigureCancelButton(MenuOverlayBase baseMenu, bool disableLookAtCancel)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xF2DA34", Offset = "0xF2DA34", VA = "0xF2DA34")]
		private void ConfigureOnClickListener(MenuOverlayBase baseMenu, bool allowLookAtCancel)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xF2DB40", Offset = "0xF2DB40", VA = "0xF2DB40")]
		public UILookat_Cancel()
		{
		}
	}
	[Token(Token = "0x200097C")]
	public class UIPlayerChoiceCrossHair : MonoBehaviour
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform lefMarker;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform rightMarker;

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xF313E0", Offset = "0xF313E0", VA = "0xF313E0")]
		public void SetDistanceBetweenMarkers(float distance)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xF31450", Offset = "0xF31450", VA = "0xF31450")]
		public UIPlayerChoiceCrossHair()
		{
		}
	}
	[Token(Token = "0x200097D")]
	public class UIPlayerChoicesController : RectTransformBehaviour, IPausable
	{
		[Token(Token = "0x200097E")]
		public enum MovementType
		{
			[Token(Token = "0x4001F05")]
			oldTimeBasedMode,
			[Token(Token = "0x4001F06")]
			fakeWorldSpaceCanvas,
			[Token(Token = "0x4001F07")]
			followMouseMoveVertical,
			[Token(Token = "0x4001F08")]
			followMouseMoveHorizontalAndVertical
		}

		[Token(Token = "0x200097F")]
		public enum SelectedIndexSource
		{
			[Token(Token = "0x4001F0A")]
			AnalogInput,
			[Token(Token = "0x4001F0B")]
			DigitalInput,
			[Token(Token = "0x4001F0C")]
			Both
		}

		[Serializable]
		[Token(Token = "0x2000980")]
		public class PlayerChoiceTuple
		{
			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RectTransform rectTransform;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button button;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TMP_Text text;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UIPlayerChoicesPointerHandler pointerHandler;

			[Token(Token = "0x6002177")]
			[Address(RVA = "0xDA624C", Offset = "0xDA624C", VA = "0xDA624C")]
			public PlayerChoiceTuple()
			{
			}
		}

		[Token(Token = "0x2000981")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C9A4", Offset = "0xB1C9A4")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIPlayerChoicesController <>4__this;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityAction <>9__0;

			[Token(Token = "0x6002178")]
			[Address(RVA = "0xDA5E44", Offset = "0xDA5E44", VA = "0xDA5E44")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0xDA5E4C", Offset = "0xDA5E4C", VA = "0xDA5E4C")]
			internal void <Init>b__0()
			{
			}
		}

		[Token(Token = "0x2000982")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C9B4", Offset = "0xB1C9B4")]
		private sealed class <InvokeChoiceSelection>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPlayerChoicesController <>4__this;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700039F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600217D")]
				[Address(RVA = "0xDA61FC", Offset = "0xDA61FC", VA = "0xDA61FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600217F")]
				[Address(RVA = "0xDA6244", Offset = "0xDA6244", VA = "0xDA6244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600217A")]
			[Address(RVA = "0xDA5EA4", Offset = "0xDA5EA4", VA = "0xDA5EA4")]
			[DebuggerHidden]
			public <InvokeChoiceSelection>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x600217B")]
			[Address(RVA = "0xDA5ED0", Offset = "0xDA5ED0", VA = "0xDA5ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0xDA5ED4", Offset = "0xDA5ED4", VA = "0xDA5ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600217E")]
			[Address(RVA = "0xDA6204", Offset = "0xDA6204", VA = "0xDA6204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AC88", Offset = "0xB2AC88")]
		[SerializeField]
		public MovementType movementType;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color normalColor;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color highlightedColor;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float deadZoneX;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float deadZoneY;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float selectionTime;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float deathTime;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float minimalInputToChangeSelection;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AD44", Offset = "0xB2AD44")]
		[SerializeField]
		private float selectionDelay;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float cameraMoveMultiplier;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2ADA0", Offset = "0xB2ADA0")]
		[SerializeField]
		private GameObject[] choices;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerChoiceTuple[] playerChoices;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CanvasScaler playerChoiceCanvasScaler;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UIPlayerChoiceCrossHair playerchoiceCrosshair;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UIScalableTextLayoutGroup layoutGroup;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SoundService soundService;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LocalizationService localizationService;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InputService inputService;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string generatedKey;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float selectionTimer;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float sumOfInputInOneDirection;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float deathTimer;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float selectionDelayTimer;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool selectionIsEnabled;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int answerCount;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float inputMovement;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float lastInputMovement;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SelectedIndexSource _selectedIndexSource;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int _selectedAnalogIndex;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int _selectedDigitalIndex;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Action<int> currentChoiceCallback;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool choiceInvoked;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector2 canvasScaleFactor;

		[NonSerialized]
		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityEvent onPanelShown;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AxisBasedButtonPress playerChoiceSelectUp;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AxisBasedButtonPress playerChoiceSelectDown;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int firstSelectableChoice;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RectTransform choicePanelRect;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private PlayerCameraController camController;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float initialCameraYRot;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float cameraPosDelta;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int numFrameSinceDisplayCall;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float totalHeightOfTheChiocePanel;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Canvas parentCanvas;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE2C", Offset = "0xB2AE2C")]
		private int <LastSelectedIndex>k__BackingField;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool reactivateChoices;

		[Token(Token = "0x1700039C")]
		public int SelectedIndex
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0xF31458", Offset = "0xF31458", VA = "0xF31458")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700039D")]
		public UIManager UIManager
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xF31474", Offset = "0xF31474", VA = "0xF31474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039E")]
		public int LastSelectedIndex
		{
			[Token(Token = "0x6002154")]
			[Address(RVA = "0xF314F4", Offset = "0xF314F4", VA = "0xF314F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34348", Offset = "0xB34348")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xF314FC", Offset = "0xF314FC", VA = "0xF314FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34358", Offset = "0xB34358")]
			set
			{
			}
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xF2E510", Offset = "0xF2E510", VA = "0xF2E510")]
		public void Init()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xF2F708", Offset = "0xF2F708", VA = "0xF2F708")]
		public void DisplayPlayerChoices(PlayerChoiceKey key, Action<int> choiceCallback)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xF31678", Offset = "0xF31678", VA = "0xF31678")]
		public void ChangePlayerChoicesLayer(int newLayer)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xF316B4", Offset = "0xF316B4", VA = "0xF316B4")]
		public void RevertPlayerChoicesLayer()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xF3170C", Offset = "0xF3170C", VA = "0xF3170C")]
		private void FirstFrameDisplayInit()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xF2FB38", Offset = "0xF2FB38", VA = "0xF2FB38")]
		public void ForceClearPlayerChoices()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xF31748", Offset = "0xF31748", VA = "0xF31748")]
		private void HidePlayerChoices()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xF2FCDC", Offset = "0xF2FCDC", VA = "0xF2FCDC")]
		public void ForcePlayerChoice(int index)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xF3186C", Offset = "0xF3186C", VA = "0xF3186C")]
		public void OnPointerEnter(GameObject selectedObject)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xF31988", Offset = "0xF31988", VA = "0xF31988")]
		public void OnPointerExit(GameObject selectedObject)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xF31AC0", Offset = "0xF31AC0", VA = "0xF31AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34368", Offset = "0xB34368")]
		private IEnumerator InvokeChoiceSelection()
		{
			return null;
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xF3180C", Offset = "0xF3180C", VA = "0xF3180C")]
		private void InvokePlayerChoiceByButton(int index)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xF31B38", Offset = "0xF31B38", VA = "0xF31B38")]
		private void SetCanvasActive(bool active)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xF31C28", Offset = "0xF31C28", VA = "0xF31C28")]
		private void ManagedLateUpdate()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xF324D4", Offset = "0xF324D4", VA = "0xF324D4")]
		private void ProcessRelativeInputMovement()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xF32438", Offset = "0xF32438", VA = "0xF32438")]
		private int NextSelectableChoice()
		{
			return default(int);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xF32270", Offset = "0xF32270", VA = "0xF32270")]
		private int PrevSelectableChoice()
		{
			return default(int);
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xF315B4", Offset = "0xF315B4", VA = "0xF315B4")]
		private void SelectPlayerChoice(int newIndex, SelectedIndexSource source)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xF319F4", Offset = "0xF319F4", VA = "0xF319F4")]
		private void UpdatePlayerChoiceVisuals()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xF31504", Offset = "0xF31504", VA = "0xF31504")]
		private void SetPlayerChoicesAlpha(float alpha)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xF32F4C", Offset = "0xF32F4C", VA = "0xF32F4C")]
		private bool SameSign(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xF329F8", Offset = "0xF329F8", VA = "0xF329F8")]
		private void SetRectY(float offset, bool log = false)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xF32C38", Offset = "0xF32C38", VA = "0xF32C38")]
		private void OffsetRect(float XOffset, float YOffset, bool log = false)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xF32A84", Offset = "0xF32A84", VA = "0xF32A84")]
		private bool IsScreenPointWithinRect(Vector2 screenPoint, RectTransform rect, float pixelTolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xF32CA8", Offset = "0xF32CA8", VA = "0xF32CA8")]
		private Vector2 IsScreenPointWithinActiveChoices(Vector2 screenPoint)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xF3154C", Offset = "0xF3154C", VA = "0xF3154C")]
		private void RecalculateCanvasScaleFactor()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xF3173C", Offset = "0xF3173C", VA = "0xF3173C")]
		private void MovePanelToSelectFirstChoice()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xF3230C", Offset = "0xF3230C", VA = "0xF3230C")]
		private void MovePanelToSelectChoice(int choice, bool log = false)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xF315E4", Offset = "0xF315E4", VA = "0xF315E4")]
		private void SetDistanceBetweenMarkers()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xF32104", Offset = "0xF32104", VA = "0xF32104")]
		private void UpdateAxisBasedButtonPresses()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xF32F7C", Offset = "0xF32F7C", VA = "0xF32F7C", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xF32FB4", Offset = "0xF32FB4", VA = "0xF32FB4", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xF32FE4", Offset = "0xF32FE4", VA = "0xF32FE4")]
		public UIPlayerChoicesController()
		{
		}
	}
	[Token(Token = "0x2000983")]
	public class UIPlayerChoicesPointerHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UIPlayerChoicesController playerChoicesController;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xF330FC", Offset = "0xF330FC", VA = "0xF330FC")]
		public void Init(UIPlayerChoicesController controller)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xF33104", Offset = "0xF33104", VA = "0xF33104", Slot = "4")]
		public void OnPointerEnter(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xF33140", Offset = "0xF33140", VA = "0xF33140", Slot = "5")]
		public void OnPointerExit(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xF33178", Offset = "0xF33178", VA = "0xF33178")]
		public UIPlayerChoicesPointerHandler()
		{
		}
	}
	[Token(Token = "0x2000984")]
	public class UIRadiostyleSelection : MonoBehaviour
	{
		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AE3C", Offset = "0xB2AE3C")]
		[SerializeField]
		public UnityEvent OnItemSelected;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AE88", Offset = "0xB2AE88")]
		[SerializeField]
		public Transform widgetRoot;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public ToggleGroup group;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UIToggleWidget firstWidget;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AEF4", Offset = "0xB2AEF4")]
		[SerializeField]
		public List<string> selectableItems;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected RectTransform rootRect;

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xF332BC", Offset = "0xF332BC", VA = "0xF332BC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xF33370", Offset = "0xF33370", VA = "0xF33370", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xF33558", Offset = "0xF33558", VA = "0xF33558")]
		protected void AddToggle(bool isFirst, string item)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xF33618", Offset = "0xF33618", VA = "0xF33618", Slot = "6")]
		protected virtual void SetupToggle(UIToggleWidget currentToggle, string item, bool isFirst)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xF3361C", Offset = "0xF3361C", VA = "0xF3361C")]
		public UIRadiostyleSelection()
		{
		}
	}
	[Token(Token = "0x2000985")]
	public interface IScreenTextController
	{
		[Token(Token = "0x170003A1")]
		TMP_Text tmpText
		{
			[Token(Token = "0x600218B")]
			get;
		}

		[Token(Token = "0x170003A2")]
		UIScalableTextLayoutGroup layoutGroup
		{
			[Token(Token = "0x600218C")]
			get;
		}

		[Token(Token = "0x170003A3")]
		RectTransform rebuildLayoutTransform
		{
			[Token(Token = "0x600218D")]
			get;
		}

		[Token(Token = "0x6002189")]
		void SetScreenTextAlpha(float alpha);

		[Token(Token = "0x600218A")]
		void Disable();
	}
	[Token(Token = "0x2000986")]
	public class UIScreenTextController : MonoBehaviour
	{
		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NonVRScreenTextController screenTextController2D;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OXR_SubtitlesController screenTextControllerVR;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LocalizationService _localizationService;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SettingsService _settingsService;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IScreenTextController controller;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _translation;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _timer;

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xF2E358", Offset = "0xF2E358", VA = "0xF2E358")]
		public void Init()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xF34898", Offset = "0xF34898", VA = "0xF34898")]
		private IScreenTextController GetControllerForCurrentPlatform()
		{
			return null;
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xF3491C", Offset = "0xF3491C", VA = "0xF3491C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xF2F344", Offset = "0xF2F344", VA = "0xF2F344")]
		public void DisplayText(string key)
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xF2F5C8", Offset = "0xF2F5C8", VA = "0xF2F5C8")]
		public void DisplayText(string key, float displayTime)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xF2F630", Offset = "0xF2F630", VA = "0xF2F630")]
		public void ClearScreenText()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xF34BE8", Offset = "0xF34BE8", VA = "0xF34BE8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xF34A84", Offset = "0xF34A84", VA = "0xF34A84")]
		private void BeginUpdate()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xF34920", Offset = "0xF34920", VA = "0xF34920")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xF34C3C", Offset = "0xF34C3C", VA = "0xF34C3C")]
		public UIScreenTextController()
		{
		}
	}
	[Token(Token = "0x2000987")]
	public class UserInterfaceIdentifier : MonoBehaviour
	{
		[Token(Token = "0x2000988")]
		public enum SoundGroup
		{
			[Token(Token = "0x4001F2B")]
			Continue,
			[Token(Token = "0x4001F2C")]
			Back
		}

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action onActivated;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string customSound;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundGroup Group;

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xF36F3C", Offset = "0xF36F3C", VA = "0xF36F3C")]
		public UserInterfaceIdentifier()
		{
		}
	}
	[Token(Token = "0x2000989")]
	public class UIRadioGroupWidget : MonoBehaviour
	{
		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AF60", Offset = "0xB2AF60")]
		[SerializeField]
		public string title;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2AFAC", Offset = "0xB2AFAC")]
		public Text titleText;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public ToggleGroup group;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIToggleWidget> toggles;

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xF33180", Offset = "0xF33180", VA = "0xF33180")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xF33234", Offset = "0xF33234", VA = "0xF33234")]
		private void Awake()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xF33188", Offset = "0xF33188", VA = "0xF33188")]
		public void SetTitle(string p_title)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xF33238", Offset = "0xF33238", VA = "0xF33238")]
		public UIRadioGroupWidget()
		{
		}
	}
	[Token(Token = "0x200098A")]
	public class UISliderWidget : MonoBehaviour
	{
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B008", Offset = "0xB2B008")]
		public string labelText;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float minValue;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float maxValue;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool wholeNumbers;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B084", Offset = "0xB2B084")]
		[SerializeField]
		public bool valueAsPercentage;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B0D0", Offset = "0xB2B0D0")]
		public float percentageValue;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatEvent onSliderValueChanged;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B120", Offset = "0xB2B120")]
		[SerializeField]
		public Slider slider;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Text descriptiveLabel;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Text numericLabel;

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xF34C44", Offset = "0xF34C44", VA = "0xF34C44")]
		private void Awake()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xF34E48", Offset = "0xF34E48", VA = "0xF34E48")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xF34F80", Offset = "0xF34F80", VA = "0xF34F80")]
		public void UpdateNumericLabel(float newValue)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xF34DAC", Offset = "0xF34DAC", VA = "0xF34DAC")]
		public void OnValueChangeReceived(float newValue)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xF35030", Offset = "0xF35030", VA = "0xF35030")]
		public UISliderWidget()
		{
		}
	}
	[Token(Token = "0x200098B")]
	public class UIToggleWidget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200098C")]
		public class UnityBoolEvent : UnityEvent<bool>
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0xDA6410", Offset = "0xDA6410", VA = "0xDA6410")]
			public UnityBoolEvent()
			{
			}
		}

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isToggleOn;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B19C", Offset = "0xB2B19C")]
		public string labelText;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string onLabelText;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string offLabelText;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite onSprite;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite offSprite;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityBoolEvent onToggled;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B238", Offset = "0xB2B238")]
		private Text label;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text onLabel;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text offLabel;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button onButton;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button offButton;

		[Token(Token = "0x170003A4")]
		public bool IsToggleOn
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xF35728", Offset = "0xF35728", VA = "0xF35728")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xF35730", Offset = "0xF35730", VA = "0xF35730")]
			set
			{
			}
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xF35890", Offset = "0xF35890", VA = "0xF35890")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xF28C90", Offset = "0xF28C90", VA = "0xF28C90")]
		public void SetupToggle(bool isOn, string newLabelText, UnityAction<bool> onToggledAction)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xF358B4", Offset = "0xF358B4", VA = "0xF358B4")]
		private void UpdateLabels()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xF3573C", Offset = "0xF3573C", VA = "0xF3573C")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xF359F4", Offset = "0xF359F4", VA = "0xF359F4")]
		public void SetToggle(bool isOn)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xF35A68", Offset = "0xF35A68", VA = "0xF35A68")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xF35A78", Offset = "0xF35A78", VA = "0xF35A78")]
		public UIToggleWidget()
		{
		}
	}
	[Token(Token = "0x200098D")]
	public class UnityActionInitializer : MonoBehaviour
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnEnableEvent;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnDisableEvent;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent StartEvent;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent AwakeEvent;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnDestroyEvent;

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xF36838", Offset = "0xF36838", VA = "0xF36838")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xF3684C", Offset = "0xF3684C", VA = "0xF3684C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xF36860", Offset = "0xF36860", VA = "0xF36860")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xF36874", Offset = "0xF36874", VA = "0xF36874")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xF36888", Offset = "0xF36888", VA = "0xF36888")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xF3689C", Offset = "0xF3689C", VA = "0xF3689C")]
		public UnityActionInitializer()
		{
		}
	}
	[Token(Token = "0x200098E")]
	public class GameCenterAccessPointController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200098F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C9C4", Offset = "0xB1C9C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__17_1;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction <>9__17_2;

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0xF15040", Offset = "0xF15040", VA = "0xF15040")]
			public <>c()
			{
			}

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0xF15048", Offset = "0xF15048", VA = "0xF15048")]
			internal void <Init>b__17_1()
			{
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0xF150A8", Offset = "0xF150A8", VA = "0xF150A8")]
			internal void <Init>b__17_2()
			{
			}
		}

		[Token(Token = "0x2000990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C9D4", Offset = "0xB1C9D4")]
		private sealed class <DelayedGameCenterOpen>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameCenterAccessPointController <>4__this;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C3")]
				[Address(RVA = "0xF1550C", Offset = "0xF1550C", VA = "0xF1550C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C5")]
				[Address(RVA = "0xF15554", Offset = "0xF15554", VA = "0xF15554", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xF15360", Offset = "0xF15360", VA = "0xF15360")]
			[DebuggerHidden]
			public <DelayedGameCenterOpen>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xF1538C", Offset = "0xF1538C", VA = "0xF1538C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xF15390", Offset = "0xF15390", VA = "0xF15390", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0xF15514", Offset = "0xF15514", VA = "0xF15514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000991")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C9E4", Offset = "0xB1C9E4")]
		private sealed class <DelayedGameCenterClose>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameCenterAccessPointController <>4__this;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C9")]
				[Address(RVA = "0xF15310", Offset = "0xF15310", VA = "0xF15310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021CB")]
				[Address(RVA = "0xF15358", Offset = "0xF15358", VA = "0xF15358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0xF15108", Offset = "0xF15108", VA = "0xF15108")]
			[DebuggerHidden]
			public <DelayedGameCenterClose>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0xF15134", Offset = "0xF15134", VA = "0xF15134", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0xF15138", Offset = "0xF15138", VA = "0xF15138", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0xF15318", Offset = "0xF15318", VA = "0xF15318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject[] gameCenterMenuEntries;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Button accessPointButton;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool autoEnable;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		public bool autoDisable;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SelectableGroupCallback groupCallback;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool lastIsPresentingGameCenter;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isInitialized;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputService inputService;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _wip_isWaitingForDelay;

		[Token(Token = "0x4001F55")]
		private const int _wip_framesBeforeGameCenterOpen = 2;

		[Token(Token = "0x4001F56")]
		private const int _wip_framesAfterGameCenterClose = 2;

		[Token(Token = "0x4001F57")]
		private const bool _wip_clearInputBefore = false;

		[Token(Token = "0x4001F58")]
		private const bool _wip_clearInputAfter = false;

		[Token(Token = "0x4001F59")]
		private const bool _wip_disablePlayerActions = true;

		[Token(Token = "0x4001F5A")]
		private const bool _wip_suspendIncontrol = true;

		[Token(Token = "0x4001F5B")]
		private const bool _wip_disableInputModule = false;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isClosingGC;

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xFCF088", Offset = "0xFCF088", VA = "0xFCF088")]
		public void Awake()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xFCF134", Offset = "0xFCF134", VA = "0xFCF134")]
		public void Init()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xFCF480", Offset = "0xFCF480", VA = "0xFCF480")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xFCF81C", Offset = "0xFCF81C", VA = "0xFCF81C")]
		public void EnableAccessPoint(bool state)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xFCF8E8", Offset = "0xFCF8E8", VA = "0xFCF8E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xFCF8FC", Offset = "0xFCF8FC", VA = "0xFCF8FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xFCF910", Offset = "0xFCF910", VA = "0xFCF910")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34418", Offset = "0xB34418")]
		private IEnumerator DelayedGameCenterOpen()
		{
			return null;
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xFCF7A4", Offset = "0xFCF7A4", VA = "0xFCF7A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34478", Offset = "0xB34478")]
		private IEnumerator DelayedGameCenterClose()
		{
			return null;
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xFCF988", Offset = "0xFCF988", VA = "0xFCF988")]
		public GameCenterAccessPointController()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xFCF9F8", Offset = "0xFCF9F8", VA = "0xFCF9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB344D8", Offset = "0xB344D8")]
		private void <Init>b__17_0()
		{
		}
	}
	[Token(Token = "0x2000992")]
	public static class GameCenterUtility
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isGameCenterOpen;

		[Token(Token = "0x170003A9")]
		public static bool IsPresentingGameCenter
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0xFCF79C", Offset = "0xFCF79C", VA = "0xFCF79C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AA")]
		public static bool IsAccessPointFocused
		{
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0xFCFA30", Offset = "0xFCFA30", VA = "0xFCFA30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xFCF884", Offset = "0xFCF884", VA = "0xFCF884")]
		public static void EnableGameCenterAccessPoint(bool visibleIfAvailable, GameObject[] gameCenterMenuEntrys)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xFCFB60", Offset = "0xFCFB60", VA = "0xFCFB60")]
		public static void SetupGameCenterAccessPointEnvironment(GameCenterAccessPointController controller, UnityEngine.CanvasGroup canvasGroup, SelectableGroup selectableGroupForAccessPoint, SelectableGroup otherSelectableGroup, bool enableAccessPoint, bool enableAutoToggling)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xFCFC4C", Offset = "0xFCFC4C", VA = "0xFCFC4C")]
		public static void FocusGameCenterAccessPoint(bool focused)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xFCFCAC", Offset = "0xFCFCAC", VA = "0xFCFCAC")]
		public static void TriggerGameCenterAccessPoint()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xFCFD38", Offset = "0xFCFD38", VA = "0xFCFD38")]
		public static void ReportGameCenterClosed()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xFCFD9C", Offset = "0xFCFD9C", VA = "0xFCFD9C")]
		public static bool SupportsGameCenterAccessPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xFCFDB8", Offset = "0xFCFDB8", VA = "0xFCFDB8")]
		public static void OpenGameCenter()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xFCFDBC", Offset = "0xFCFDBC", VA = "0xFCFDBC")]
		public static void ShowAchievementsUI()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xFCFA38", Offset = "0xFCFA38", VA = "0xFCFA38")]
		private static void EnableGameObjects(bool state, GameObject[] gameObjects)
		{
		}
	}
	[Token(Token = "0x2000993")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1C9F4", Offset = "0xB1C9F4")]
	public class VegetationShaderHelper : MonoBehaviour
	{
		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x273EA8C", Offset = "0x273EA8C", VA = "0x273EA8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x273EC24", Offset = "0x273EC24", VA = "0x273EC24")]
		public VegetationShaderHelper()
		{
		}
	}
	[Token(Token = "0x2000994")]
	public class ViewDistanceQuality : MonoBehaviour
	{
		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Camera> cameraReferences;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B304", Offset = "0xB2B304")]
		public float farClipPlaneFactor;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SettingsService settingsService;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x27410C8", Offset = "0x27410C8", VA = "0x27410C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x2741240", Offset = "0x2741240", VA = "0x2741240")]
		private void Start()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x27412EC", Offset = "0x27412EC", VA = "0x27412EC")]
		private void ApplyCameraFarPlane(float farClipPlane)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x2741244", Offset = "0x2741244", VA = "0x2741244")]
		private void UpdateQuality()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x274140C", Offset = "0x274140C", VA = "0x274140C")]
		public ViewDistanceQuality()
		{
		}
	}
	[Token(Token = "0x2000995")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1CA54", Offset = "0xB1CA54")]
	public class CameraCopy : MonoBehaviour
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera reference;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool copyEnabled;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool copyAllowDynamicResolution;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool copyAllowHDR;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool copyAllowMSAA;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool copyClearStencilAfterLightingPass;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool copyForceIntoRenderTexture;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool copyLayerCullSpherical;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool copyOrthographic;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool copyUseJitteredProjectionMatrixForTransparentRendering;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool copyUseOcclusionCulling;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool copyAspect;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool copyDepth;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool copyFarClipPlane;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool copyFieldOfView;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool copyNearClipPlane;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool copyOrthographicSize;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool copyStereoConvergence;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool copyStereoSeparation;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool copyCullingMask;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool copyEventMask;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool copyTargetDisplay;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool copyClearFlags;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool copyCameraType;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool copyBackgroundColor;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera myCamera;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isEnabled;

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xE302B8", Offset = "0xE302B8", VA = "0xE302B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xE30334", Offset = "0xE30334", VA = "0xE30334")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xE30824", Offset = "0xE30824", VA = "0xE30824")]
		public void Update()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xE30908", Offset = "0xE30908", VA = "0xE30908")]
		public CameraCopy()
		{
		}
	}
	[Token(Token = "0x2000996")]
	public static class HighlightPlusHelper
	{
		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x12686F0", Offset = "0x12686F0", VA = "0x12686F0")]
		public static void SetHighlighted(HighlightEffect highlightEffect, bool state)
		{
		}
	}
	[Token(Token = "0x2000997")]
	public class WaitBeforeSceneActivation : MonoBehaviour
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitSeconds;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x2744548", Offset = "0x2744548", VA = "0x2744548")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x274459C", Offset = "0x274459C", VA = "0x274459C")]
		private void SendSceneActivation()
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x2744644", Offset = "0x2744644", VA = "0x2744644")]
		public WaitBeforeSceneActivation()
		{
		}
	}
	[Token(Token = "0x2000998")]
	public class SimpleSignal
	{
		[Token(Token = "0x2000999")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAB4", Offset = "0xB1CAB4")]
		private sealed class <WaitForSecondsSkippable>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleSignal <>4__this;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float secondsToWait;

			[Token(Token = "0x170003AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021EE")]
				[Address(RVA = "0xDA2988", Offset = "0xDA2988", VA = "0xDA2988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021F0")]
				[Address(RVA = "0xDA29D0", Offset = "0xDA29D0", VA = "0xDA29D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021EB")]
			[Address(RVA = "0xDA28D0", Offset = "0xDA28D0", VA = "0xDA28D0")]
			[DebuggerHidden]
			public <WaitForSecondsSkippable>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0xDA28FC", Offset = "0xDA28FC", VA = "0xDA28FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021ED")]
			[Address(RVA = "0xDA2900", Offset = "0xDA2900", VA = "0xDA2900", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021EF")]
			[Address(RVA = "0xDA2990", Offset = "0xDA2990", VA = "0xDA2990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool wasSignalReceived;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onSignalReceived;

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1112CA0", Offset = "0x1112CA0", VA = "0x1112CA0")]
		public void SendSignal()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1112CC0", Offset = "0x1112CC0", VA = "0x1112CC0")]
		public void ResetSignal()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1112CC8", Offset = "0x1112CC8", VA = "0x1112CC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34588", Offset = "0xB34588")]
		public IEnumerator WaitForSecondsSkippable(float secondsToWait)
		{
			return null;
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x1112D50", Offset = "0x1112D50", VA = "0x1112D50")]
		public SimpleSignal()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200099A")]
	public class SplashImageElement
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpriteResourceContainerBase spriteContainer;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image targetImage;

		[NonSerialized]
		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite loadedSprite;

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xDAB664", Offset = "0xDAB664", VA = "0xDAB664")]
		public SplashImageElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200099B")]
	public class SplashPrefabElement
	{
		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PrefabResource prefabResource;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parentTarget;

		[NonSerialized]
		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject loadedPrefab;

		[NonSerialized]
		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject instantiatedPrefab;

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xDAB66C", Offset = "0xDAB66C", VA = "0xDAB66C")]
		public SplashPrefabElement()
		{
		}
	}
	[Token(Token = "0x200099C")]
	public class SplashScreen : MonoBehaviour
	{
		[Token(Token = "0x200099D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAC4", Offset = "0xB1CAC4")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplashScreen <>4__this;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onLoaded;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BusyCounter busyCounter;

			[Token(Token = "0x6002203")]
			[Address(RVA = "0xDA3DBC", Offset = "0xDA3DBC", VA = "0xDA3DBC")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6002204")]
			[Address(RVA = "0xDA3DC4", Offset = "0xDA3DC4", VA = "0xDA3DC4")]
			internal void <Load>b__0()
			{
			}

			[Token(Token = "0x6002205")]
			[Address(RVA = "0xDA3E08", Offset = "0xDA3E08", VA = "0xDA3E08")]
			internal void <Load>b__1(UnityEngine.Video.VideoClip clip)
			{
			}
		}

		[Token(Token = "0x200099E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAD4", Offset = "0xB1CAD4")]
		private sealed class <>c__DisplayClass29_1
		{
			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplashImageElement element;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass29_0 CS$<>8__locals1;

			[Token(Token = "0x6002206")]
			[Address(RVA = "0xDA3E44", Offset = "0xDA3E44", VA = "0xDA3E44")]
			public <>c__DisplayClass29_1()
			{
			}

			[Token(Token = "0x6002207")]
			[Address(RVA = "0xDA3E4C", Offset = "0xDA3E4C", VA = "0xDA3E4C")]
			internal void <Load>b__2(Sprite sprite)
			{
			}
		}

		[Token(Token = "0x200099F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAE4", Offset = "0xB1CAE4")]
		private sealed class <>c__DisplayClass29_2
		{
			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplashPrefabElement element;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass29_0 CS$<>8__locals2;

			[Token(Token = "0x6002208")]
			[Address(RVA = "0xDA3E90", Offset = "0xDA3E90", VA = "0xDA3E90")]
			public <>c__DisplayClass29_2()
			{
			}

			[Token(Token = "0x6002209")]
			[Address(RVA = "0xDA3E98", Offset = "0xDA3E98", VA = "0xDA3E98")]
			internal void <Load>b__3(GameObject prefab)
			{
			}
		}

		[Token(Token = "0x20009A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAF4", Offset = "0xB1CAF4")]
		private sealed class <ShowSplashScreenAnimation>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplashScreen <>4__this;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SimpleSignal skipSignal;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onFinished;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CanvasGroupCurveFaderUtil <fader>5__2;

			[Token(Token = "0x170003B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600220D")]
				[Address(RVA = "0xDA41F8", Offset = "0xDA41F8", VA = "0xDA41F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600220F")]
				[Address(RVA = "0xDA4240", Offset = "0xDA4240", VA = "0xDA4240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600220A")]
			[Address(RVA = "0xDA3EDC", Offset = "0xDA3EDC", VA = "0xDA3EDC")]
			[DebuggerHidden]
			public <ShowSplashScreenAnimation>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x600220B")]
			[Address(RVA = "0xDA3F08", Offset = "0xDA3F08", VA = "0xDA3F08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600220C")]
			[Address(RVA = "0xDA3F0C", Offset = "0xDA3F0C", VA = "0xDA3F0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600220E")]
			[Address(RVA = "0xDA4200", Offset = "0xDA4200", VA = "0xDA4200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CB04", Offset = "0xB1CB04")]
		private sealed class <WaitForSecondsSkippable>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleSignal skipSignal;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float secondsToWait;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplashScreen <>4__this;

			[Token(Token = "0x170003B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002213")]
				[Address(RVA = "0xDA4308", Offset = "0xDA4308", VA = "0xDA4308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002215")]
				[Address(RVA = "0xDA4350", Offset = "0xDA4350", VA = "0xDA4350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002210")]
			[Address(RVA = "0xDA4248", Offset = "0xDA4248", VA = "0xDA4248")]
			[DebuggerHidden]
			public <WaitForSecondsSkippable>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002211")]
			[Address(RVA = "0xDA4274", Offset = "0xDA4274", VA = "0xDA4274", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002212")]
			[Address(RVA = "0xDA4278", Offset = "0xDA4278", VA = "0xDA4278", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002214")]
			[Address(RVA = "0xDA4310", Offset = "0xDA4310", VA = "0xDA4310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B33C", Offset = "0xB2B33C")]
		public UnityEngine.CanvasGroup fadeGroup;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashScreenAnimationConfig config;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SplashImageElement> imageElements;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SplashPrefabElement> prefabElements;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B374", Offset = "0xB2B374")]
		public AppleSplashResourceContainer videoContainer;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VideoPlayerWrapper videoPlayerWrapper;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject disableObjectOnVideoPlayback;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B3AC", Offset = "0xB2B3AC")]
		public bool noCleanUp;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B3E4", Offset = "0xB2B3E4")]
		public bool onlyShowFirstTime;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B41C", Offset = "0xB2B41C")]
		public bool requiresLocalization;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ResourceSprite spriteResource;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sprite loadedSprite;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VideoClipResource clipResource;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Video.VideoClip loadedClip;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B454", Offset = "0xB2B454")]
		private bool <isLoading>k__BackingField;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B464", Offset = "0xB2B464")]
		private bool <isLoaded>k__BackingField;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B474", Offset = "0xB2B474")]
		private bool <isVideoPlaying>k__BackingField;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool hasFocus;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool regainedFocusThisFrame;

		[Token(Token = "0x170003AD")]
		public bool isLoading
		{
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0xDAB674", Offset = "0xDAB674", VA = "0xDAB674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34638", Offset = "0xB34638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0xDAB67C", Offset = "0xDAB67C", VA = "0xDAB67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34648", Offset = "0xB34648")]
			private set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public bool isLoaded
		{
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xDAB688", Offset = "0xDAB688", VA = "0xDAB688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34658", Offset = "0xB34658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0xDAB690", Offset = "0xDAB690", VA = "0xDAB690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34668", Offset = "0xB34668")]
			private set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public bool hasVideo
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0xDAB69C", Offset = "0xDAB69C", VA = "0xDAB69C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B0")]
		public bool isVideoPlaying
		{
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0xDAB708", Offset = "0xDAB708", VA = "0xDAB708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34678", Offset = "0xB34678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0xDAB710", Offset = "0xDAB710", VA = "0xDAB710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34688", Offset = "0xB34688")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		private float deltaTime
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xDAC368", Offset = "0xDAC368", VA = "0xDAC368")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xDAB71C", Offset = "0xDAB71C", VA = "0xDAB71C")]
		public void Load([Optional] Action onLoaded)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xDABD9C", Offset = "0xDABD9C", VA = "0xDABD9C")]
		public void SetupLoadedSpritesAndPrefabs()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xDAC0B4", Offset = "0xDAC0B4", VA = "0xDAC0B4")]
		public void CleanUp(bool forceCleanUp = false)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xDAC388", Offset = "0xDAC388", VA = "0xDAC388")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xDAC390", Offset = "0xDAC390", VA = "0xDAC390")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xDAC3B0", Offset = "0xDAC3B0", VA = "0xDAC3B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34698", Offset = "0xB34698")]
		public IEnumerator ShowSplashScreenAnimation(SimpleSignal skipSignal, [Optional] Action onFinished)
		{
			return null;
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xDAC458", Offset = "0xDAC458", VA = "0xDAC458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB346F8", Offset = "0xB346F8")]
		public IEnumerator WaitForSecondsSkippable(float secondsToWait, SimpleSignal skipSignal)
		{
			return null;
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xDAC4FC", Offset = "0xDAC4FC", VA = "0xDAC4FC")]
		public SplashScreen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20009A2")]
	public class PlatformSplashScreenInstance : PlatformInstance<SplashScreen>
	{
		[Token(Token = "0x6002216")]
		[Address(RVA = "0x277FBD4", Offset = "0x277FBD4", VA = "0x277FBD4")]
		public PlatformSplashScreenInstance()
		{
		}
	}
	[Token(Token = "0x20009A3")]
	public class SplashSequence : MonoBehaviour
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PlatformSplashScreenInstance> screenInstances;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Platform overrideEditorPlatform;

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xDACBC0", Offset = "0xDACBC0", VA = "0xDACBC0")]
		public List<SplashScreen> GetList(bool isFirstRun)
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xDACDD0", Offset = "0xDACDD0", VA = "0xDACDD0")]
		public SplashSequence()
		{
		}
	}
	[Token(Token = "0x20009A4")]
	public abstract class SpriteResourceContainerBase : ScriptableObject
	{
		[Token(Token = "0x6002219")]
		public abstract ResourceSprite GetSpriteResource();

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xDAD2F4", Offset = "0xDAD2F4", VA = "0xDAD2F4")]
		protected SpriteResourceContainerBase()
		{
		}
	}
	[Token(Token = "0x20009A5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1CB14", Offset = "0xB1CB14")]
	public class SpriteResourceContainer : SpriteResourceContainerBase
	{
		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceSprite sprite;

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xDAD2E4", Offset = "0xDAD2E4", VA = "0xDAD2E4", Slot = "4")]
		public override ResourceSprite GetSpriteResource()
		{
			return null;
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xDAD2EC", Offset = "0xDAD2EC", VA = "0xDAD2EC")]
		public SpriteResourceContainer()
		{
		}
	}
	[Token(Token = "0x20009A6")]
	public class InteractionInvoker : MonoBehaviour
	{
		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegisteredInteractable interactable;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string interaction;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] _interactions;

		[Token(Token = "0x170003B6")]
		private string[] interactions
		{
			[Token(Token = "0x600221D")]
			[Address(RVA = "0xEAA450", Offset = "0xEAA450", VA = "0xEAA450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xEAA59C", Offset = "0xEAA59C", VA = "0xEAA59C")]
		private bool OnValidateInput(RegisteredInteractable input)
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xEAA680", Offset = "0xEAA680", VA = "0xEAA680")]
		public void InvokeInteraction()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xEAA6A4", Offset = "0xEAA6A4", VA = "0xEAA6A4")]
		public InteractionInvoker()
		{
		}
	}
	[Token(Token = "0x20009A7")]
	public class EffectVR : MonoBehaviour
	{
		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image grainEffectImage;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color grainEffectColor;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animation anim;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationClip animationClip;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string animationName;

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x112C884", Offset = "0x112C884", VA = "0x112C884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x112CB38", Offset = "0x112CB38", VA = "0x112CB38")]
		private void Start()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x112CC44", Offset = "0x112CC44", VA = "0x112CC44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x112CD0C", Offset = "0x112CD0C", VA = "0x112CD0C")]
		private void InitializeDrunkCanvas(out Image image, out Color color)
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x112CE28", Offset = "0x112CE28", VA = "0x112CE28")]
		public void Evaluate(float value)
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x112CE90", Offset = "0x112CE90", VA = "0x112CE90")]
		private void FadeGrainImage(float value)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x112CEE8", Offset = "0x112CEE8", VA = "0x112CEE8")]
		public void StartEffectVR()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x112CF20", Offset = "0x112CF20", VA = "0x112CF20")]
		public void StopEffectVR()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x112CF3C", Offset = "0x112CF3C", VA = "0x112CF3C")]
		public void FinishEffectVR()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x112CFE4", Offset = "0x112CFE4", VA = "0x112CFE4")]
		public EffectVR()
		{
		}
	}
	[Token(Token = "0x20009A8")]
	public class InventoryAlphaModifier : MonoBehaviour
	{
		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Image> bgImages;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image blackBGImage;

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xEABB00", Offset = "0xEABB00", VA = "0xEABB00")]
		private void Start()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xEABC7C", Offset = "0xEABC7C", VA = "0xEABC7C")]
		private void AdjustAlpha(Image image, float alpha)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xEABCD4", Offset = "0xEABCD4", VA = "0xEABCD4")]
		public InventoryAlphaModifier()
		{
		}
	}
	[Token(Token = "0x20009A9")]
	public class LockedBoxPuzzleEffect : EffectModule
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B4E4", Offset = "0xB2B4E4")]
		[SerializeField]
		private GameObject[] visibleGameObjects;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform puzzleTransform;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform targetPuzzleTransform;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform originalParentTransform;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startLocalPosition;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion startLocalRotation;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 startScale;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 parentedStartScale;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 targetScale;

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xEB6D80", Offset = "0xEB6D80", VA = "0xEB6D80", Slot = "8")]
		protected override void OnStartEffect()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xEB6F7C", Offset = "0xEB6F7C", VA = "0xEB6F7C", Slot = "6")]
		protected override void OnStopEffect()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xEB7024", Offset = "0xEB7024", VA = "0xEB7024", Slot = "5")]
		protected override void OnFinishedEffect()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xEB716C", Offset = "0xEB716C", VA = "0xEB716C", Slot = "4")]
		protected override void OnUpdateWithValue(float t)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xEB7344", Offset = "0xEB7344", VA = "0xEB7344")]
		public LockedBoxPuzzleEffect()
		{
		}
	}
	[Token(Token = "0x20009AA")]
	public class NarrativeEventInvoker : MonoBehaviour
	{
		[Token(Token = "0x6002233")]
		[Address(RVA = "0x182A554", Offset = "0x182A554", VA = "0x182A554")]
		public void SendNarrativeEvent(string evt)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x182A5EC", Offset = "0x182A5EC", VA = "0x182A5EC")]
		public NarrativeEventInvoker()
		{
		}
	}
	[Token(Token = "0x20009AB")]
	public class OXRSubtitles : OXRBehaviour, IPausable
	{
		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform offsetTransform;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cameraTransf;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform subtitlesTarget;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.CanvasGroup canvasGroup;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas subtitleCanvas;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B560", Offset = "0xB2B560")]
		[SerializeField]
		private float subtitlesRotationSpeed;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 angleOffset;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve speedVariationCurve;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float originalTextSize;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool shouldFollowSmoothly;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SettingsData setData;

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x276A5CC", Offset = "0x276A5CC", VA = "0x276A5CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x276A76C", Offset = "0x276A76C", VA = "0x276A76C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x276A88C", Offset = "0x276A88C", VA = "0x276A88C")]
		private void OnFontScaleChanged(float fontScaleAdjustment)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x276A934", Offset = "0x276A934", VA = "0x276A934")]
		private void Start()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x276AB24", Offset = "0x276AB24", VA = "0x276AB24")]
		private void AssignReferences()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x276ACE8", Offset = "0x276ACE8", VA = "0x276ACE8")]
		public void ActivateCanvas()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x276ADD8", Offset = "0x276ADD8", VA = "0x276ADD8")]
		public void DeactivateCanvas()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x276AEC8", Offset = "0x276AEC8", VA = "0x276AEC8")]
		private void DeactivateCanvas(Scene scene, LoadSceneMode sceneMode)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x276AECC", Offset = "0x276AECC", VA = "0x276AECC")]
		private void Update()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x276B008", Offset = "0x276B008", VA = "0x276B008")]
		private void FollowTargetTransform()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x276B1B4", Offset = "0x276B1B4", VA = "0x276B1B4")]
		private void FollowTargetPosition()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x276B0D0", Offset = "0x276B0D0", VA = "0x276B0D0")]
		private void FollowTargetRotation()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x276B2D8", Offset = "0x276B2D8", VA = "0x276B2D8", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x276B2DC", Offset = "0x276B2DC", VA = "0x276B2DC", Slot = "7")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x276B324", Offset = "0x276B324", VA = "0x276B324")]
		public OXRSubtitles()
		{
		}
	}
	[Token(Token = "0x20009AC")]
	public class OXR_SplineModifier : MonoBehaviour
	{
		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Transform> nonVRSplinePoints;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Vector3> vrSplinePosition;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvySpline spline;

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x277258C", Offset = "0x277258C", VA = "0x277258C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x27725F0", Offset = "0x27725F0", VA = "0x27725F0")]
		public void InitGliding()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x2772768", Offset = "0x2772768", VA = "0x2772768")]
		public OXR_SplineModifier()
		{
		}
	}
	[Token(Token = "0x20009AD")]
	public class VR_RotationSnapper : MonoBehaviour
	{
		[Token(Token = "0x20009AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CB7C", Offset = "0xB1CB7C")]
		private sealed class <CanRotateAfter>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_RotationSnapper <>4__this;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x170003BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002259")]
				[Address(RVA = "0xDA71B0", Offset = "0xDA71B0", VA = "0xDA71B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600225B")]
				[Address(RVA = "0xDA71F8", Offset = "0xDA71F8", VA = "0xDA71F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002256")]
			[Address(RVA = "0xDA70AC", Offset = "0xDA70AC", VA = "0xDA70AC")]
			[DebuggerHidden]
			public <CanRotateAfter>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0xDA70D8", Offset = "0xDA70D8", VA = "0xDA70D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0xDA70DC", Offset = "0xDA70DC", VA = "0xDA70DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600225A")]
			[Address(RVA = "0xDA71B8", Offset = "0xDA71B8", VA = "0xDA71B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CB8C", Offset = "0xB1CB8C")]
		private sealed class <RotateWithDelay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_RotationSnapper <>4__this;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 inputValue;

			[Token(Token = "0x170003BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600225F")]
				[Address(RVA = "0xDA72F4", Offset = "0xDA72F4", VA = "0xDA72F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002261")]
				[Address(RVA = "0xDA733C", Offset = "0xDA733C", VA = "0xDA733C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600225C")]
			[Address(RVA = "0xDA7200", Offset = "0xDA7200", VA = "0xDA7200")]
			[DebuggerHidden]
			public <RotateWithDelay>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600225D")]
			[Address(RVA = "0xDA722C", Offset = "0xDA722C", VA = "0xDA722C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0xDA7230", Offset = "0xDA7230", VA = "0xDA7230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002260")]
			[Address(RVA = "0xDA72FC", Offset = "0xDA72FC", VA = "0xDA72FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B60C", Offset = "0xB2B60C")]
		[SerializeField]
		private Transform transformToRotate;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B658", Offset = "0xB2B658")]
		private int rotationAngle;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B69C", Offset = "0xB2B69C")]
		private float rotationCooldown;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B6DC", Offset = "0xB2B6DC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B6DC", Offset = "0xB2B6DC")]
		private int maxRightTurnAngle;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B744", Offset = "0xB2B744")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B744", Offset = "0xB2B744")]
		private int maxLeftTurnAngle;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B7AC", Offset = "0xB2B7AC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B7AC", Offset = "0xB2B7AC")]
		private float snapFadeDelay;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B810", Offset = "0xB2B810")]
		public InputActionReference inputActionLeft;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputActionReference inputActionRight;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isRotating;

		[Token(Token = "0x170003B7")]
		public int RotationAngle
		{
			[Token(Token = "0x6002247")]
			[Address(RVA = "0xF3B98C", Offset = "0xF3B98C", VA = "0xF3B98C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002248")]
			[Address(RVA = "0xF3B994", Offset = "0xF3B994", VA = "0xF3B994")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public int MaxRightTurnAngle
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xF3B9CC", Offset = "0xF3B9CC", VA = "0xF3B9CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600224A")]
			[Address(RVA = "0xF3B9D4", Offset = "0xF3B9D4", VA = "0xF3B9D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public int MaxLeftTurnAngle
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xF3BA08", Offset = "0xF3BA08", VA = "0xF3BA08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600224C")]
			[Address(RVA = "0xF3BA18", Offset = "0xF3BA18", VA = "0xF3BA18")]
			set
			{
			}
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xF3BA4C", Offset = "0xF3BA4C", VA = "0xF3BA4C")]
		private void Start()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xF3BBD0", Offset = "0xF3BBD0", VA = "0xF3BBD0")]
		private void OnActionPerformed(InputAction.CallbackContext input)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xF3BC34", Offset = "0xF3BC34", VA = "0xF3BC34")]
		private void RotatePlayer(Vector2 inputDir)
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xF3BCB4", Offset = "0xF3BCB4", VA = "0xF3BCB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB347F8", Offset = "0xB347F8")]
		private IEnumerator CanRotateAfter(float time)
		{
			return null;
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xF3BD3C", Offset = "0xF3BD3C", VA = "0xF3BD3C")]
		public void SnapRotatePlayer(Vector2 inputValue)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xF3BE68", Offset = "0xF3BE68", VA = "0xF3BE68")]
		private float CalculateAngleToRotate(OXR_CameraOffsetTransform camOffset, int direction)
		{
			return default(float);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xF3BE50", Offset = "0xF3BE50", VA = "0xF3BE50")]
		private int GetDirectionToRotate(Vector2 inputValue)
		{
			return default(int);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xF3BF1C", Offset = "0xF3BF1C", VA = "0xF3BF1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34858", Offset = "0xB34858")]
		private IEnumerator RotateWithDelay(Vector2 inputValue)
		{
			return null;
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xF3BFA8", Offset = "0xF3BFA8", VA = "0xF3BFA8")]
		public VR_RotationSnapper()
		{
		}
	}
	[Token(Token = "0x20009B0")]
	public class OXR_SceneSetup_Boot : OXR_SceneSetup
	{
		[Serializable]
		[Token(Token = "0x20009B1")]
		public class HierarchyReferenceInputService : HierarchyReferenceBase<InputService>
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xD9B110", Offset = "0xD9B110", VA = "0xD9B110")]
			public HierarchyReferenceInputService()
			{
			}
		}

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B848", Offset = "0xB2B848")]
		[SerializeField]
		private HierarchyReferenceInputService inputService;

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x2772054", Offset = "0x2772054", VA = "0x2772054", Slot = "6")]
		protected override void FindReferences()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x2772130", Offset = "0x2772130", VA = "0x2772130")]
		public OXR_SceneSetup_Boot()
		{
		}
	}
	[Token(Token = "0x20009B2")]
	public class VR_BackpackInventory : VR_BaseBackpack
	{
		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GameObject> handsHoveringInventory;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VR_TossedItemCollector itemCollector;

		[Token(Token = "0x170003BE")]
		public VR_TossedItemCollector ItemCollector
		{
			[Token(Token = "0x6002265")]
			[Address(RVA = "0xF36F44", Offset = "0xF36F44", VA = "0xF36F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xF36F4C", Offset = "0xF36F4C", VA = "0xF36F4C")]
		private new void Start()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xF370E8", Offset = "0xF370E8", VA = "0xF370E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xF37148", Offset = "0xF37148", VA = "0xF37148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xF371A4", Offset = "0xF371A4", VA = "0xF371A4")]
		private new void Update()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xF37368", Offset = "0xF37368", VA = "0xF37368")]
		private void AddToBackpack(HVRGrabberBase grabberBase, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xF37420", Offset = "0xF37420", VA = "0xF37420")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xF37580", Offset = "0xF37580", VA = "0xF37580")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xF37780", Offset = "0xF37780", VA = "0xF37780")]
		public VR_BackpackInventory()
		{
		}
	}
	[Token(Token = "0x20009B3")]
	public class VR_BackpackInventoryVariant : VR_BaseBackpack
	{
		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject openBackpackIndicator;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float triggerPressForce;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float flickForce;

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xF378A8", Offset = "0xF378A8", VA = "0xF378A8")]
		private new void Start()
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xF378AC", Offset = "0xF378AC", VA = "0xF378AC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xF378B0", Offset = "0xF378B0", VA = "0xF378B0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xF378B4", Offset = "0xF378B4", VA = "0xF378B4")]
		private void ToogleBackpackActivation()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xF378B8", Offset = "0xF378B8", VA = "0xF378B8")]
		public VR_BackpackInventoryVariant()
		{
		}
	}
	[Token(Token = "0x20009B4")]
	public class VR_BackpackSlot : MonoBehaviour
	{
		[Token(Token = "0x20009B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CB9C", Offset = "0xB1CB9C")]
		private sealed class <ExpandSlotUI>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_BackpackSlot <>4__this;

			[Token(Token = "0x170003BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227F")]
				[Address(RVA = "0xDA6518", Offset = "0xDA6518", VA = "0xDA6518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002281")]
				[Address(RVA = "0xDA6560", Offset = "0xDA6560", VA = "0xDA6560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0xDA645C", Offset = "0xDA645C", VA = "0xDA645C")]
			[DebuggerHidden]
			public <ExpandSlotUI>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0xDA6488", Offset = "0xDA6488", VA = "0xDA6488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0xDA648C", Offset = "0xDA648C", VA = "0xDA648C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002280")]
			[Address(RVA = "0xDA6520", Offset = "0xDA6520", VA = "0xDA6520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CBAC", Offset = "0xB1CBAC")]
		private sealed class <RetractSlotUI>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_BackpackSlot <>4__this;

			[Token(Token = "0x170003C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002285")]
				[Address(RVA = "0xDA6634", Offset = "0xDA6634", VA = "0xDA6634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002287")]
				[Address(RVA = "0xDA667C", Offset = "0xDA667C", VA = "0xDA667C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0xDA6568", Offset = "0xDA6568", VA = "0xDA6568")]
			[DebuggerHidden]
			public <RetractSlotUI>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0xDA6594", Offset = "0xDA6594", VA = "0xDA6594", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0xDA6598", Offset = "0xDA6598", VA = "0xDA6598", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0xDA663C", Offset = "0xDA663C", VA = "0xDA663C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer uIDisplay;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VR_InventorySlotActivator> handsHoveringSlot;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color initialColor;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public RegisteredInteractable item;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve uIAnimationCurve;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timer;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Keyframe curvesLastKeyframe;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GameObject snapPointModuleR;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject snapPointModuleL;

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xF378C8", Offset = "0xF378C8", VA = "0xF378C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xF37998", Offset = "0xF37998", VA = "0xF37998")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xF37CA8", Offset = "0xF37CA8", VA = "0xF37CA8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xF37AD4", Offset = "0xF37AD4", VA = "0xF37AD4")]
		private void HandleRingColorAndScale(VR_InventorySlotActivator interactingHand, VR_BackpackSlot backpackSlot)
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xF3806C", Offset = "0xF3806C", VA = "0xF3806C")]
		private void AdjustScale()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xF37ED0", Offset = "0xF37ED0", VA = "0xF37ED0")]
		public void ActivateColor(Color color)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xF37FF4", Offset = "0xF37FF4", VA = "0xF37FF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34958", Offset = "0xB34958")]
		public IEnumerator ExpandSlotUI()
		{
			return null;
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xF37F7C", Offset = "0xF37F7C", VA = "0xF37F7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB349B8", Offset = "0xB349B8")]
		public IEnumerator RetractSlotUI()
		{
			return null;
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xF380CC", Offset = "0xF380CC", VA = "0xF380CC")]
		public VR_BackpackSlot()
		{
		}
	}
	[Token(Token = "0x20009B7")]
	public class VR_BaseBackpack : MonoBehaviour
	{
		[Token(Token = "0x20009B8")]
		public enum InventoryState
		{
			[Token(Token = "0x4002014")]
			Opening,
			[Token(Token = "0x4002015")]
			Closing,
			[Token(Token = "0x4002016")]
			Closed,
			[Token(Token = "0x4002017")]
			Opened
		}

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<HVRSocket> itemSlots;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B914", Offset = "0xB2B914")]
		[SerializeField]
		protected HVRSocket bigSlot;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float bigSlotScaleTimer;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public InventoryState bigSlotState;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float bigSlotCounter;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initialBigSlotlScale;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2B970", Offset = "0xB2B970")]
		[SerializeField]
		protected GameObject inventoryScaler;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float inventoryScaleTimer;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float inventoryCounter;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialInventoryScale;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public InventoryState inventoryState;

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xF37018", Offset = "0xF37018", VA = "0xF37018")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xF38150", Offset = "0xF38150", VA = "0xF38150")]
		private void FillSlotList()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xF371A8", Offset = "0xF371A8", VA = "0xF371A8")]
		protected void Update()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xF38254", Offset = "0xF38254", VA = "0xF38254")]
		public void ToogleInventory()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xF3754C", Offset = "0xF3754C", VA = "0xF3754C")]
		protected void OpenInventory(VR_HandInventoryHover hoveringHand)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xF38288", Offset = "0xF38288", VA = "0xF38288")]
		public void OpenInventory()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xF38298", Offset = "0xF38298", VA = "0xF38298")]
		public void DisplayBigSlot()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xF37418", Offset = "0xF37418", VA = "0xF37418")]
		protected void DisplayStoredItems()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xF376A8", Offset = "0xF376A8", VA = "0xF376A8")]
		protected void CloseInventory([Optional] HVRGrabbable grabbedItem)
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xF3740C", Offset = "0xF3740C", VA = "0xF3740C")]
		public void ConcealBigSlot()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xF382EC", Offset = "0xF382EC", VA = "0xF382EC")]
		protected void ConcealStoredItems()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xF37800", Offset = "0xF37800", VA = "0xF37800")]
		public VR_BaseBackpack()
		{
		}
	}
	[Token(Token = "0x20009B9")]
	public class VR_HandInventoryHover : MonoBehaviour
	{
		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HVRHandGrabber handGrabber;

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xF38C2C", Offset = "0xF38C2C", VA = "0xF38C2C")]
		public VR_HandInventoryHover()
		{
		}
	}
	[Token(Token = "0x20009BA")]
	public class VR_InventorySlotActivator : MonoBehaviour
	{
		[Token(Token = "0x20009BB")]
		public enum GrabbedItemType
		{
			[Token(Token = "0x400201E")]
			None,
			[Token(Token = "0x400201F")]
			InventoryItem,
			[Token(Token = "0x4002020")]
			NonInventoryItem
		}

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<VR_BackpackSlot> backpackSlotBeingHovered;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbedItemType grabbedItemType;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RegisteredInteractable grabbedItem;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 itemInitialScale;

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xF38CF0", Offset = "0xF38CF0", VA = "0xF38CF0")]
		private void AttachItemToInventorySlot()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xF39060", Offset = "0xF39060", VA = "0xF39060")]
		private void DetachItemToInventorySlot()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xF392AC", Offset = "0xF392AC", VA = "0xF392AC")]
		public void GrabItem()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xF392B0", Offset = "0xF392B0", VA = "0xF392B0")]
		public void UngrabItem()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xF39384", Offset = "0xF39384", VA = "0xF39384")]
		public void DetachItem()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xF39444", Offset = "0xF39444", VA = "0xF39444")]
		public VR_InventorySlotActivator()
		{
		}
	}
	[Token(Token = "0x20009BC")]
	public class VR_ItemPositionReseter : MonoBehaviour
	{
		[Token(Token = "0x20009BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CBBC", Offset = "0xB1CBBC")]
		private sealed class <ResetAfterTime>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_ItemPositionReseter <>4__this;

			[Token(Token = "0x170003C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A7")]
				[Address(RVA = "0xDA6930", Offset = "0xDA6930", VA = "0xDA6930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A9")]
				[Address(RVA = "0xDA6978", Offset = "0xDA6978", VA = "0xDA6978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xDA6684", Offset = "0xDA6684", VA = "0xDA6684")]
			[DebuggerHidden]
			public <ResetAfterTime>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xDA66B0", Offset = "0xDA66B0", VA = "0xDA66B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xDA66B4", Offset = "0xDA66B4", VA = "0xDA66B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xDA6938", Offset = "0xDA6938", VA = "0xDA6938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float delayToReposition;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VR_TossedItemCollector backpackCollector;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HVRGrabbable grabbableItem;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialRotation;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 initialScale;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine resetPositionCoroutine;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B9EC", Offset = "0xB2B9EC")]
		private bool <WasStored>k__BackingField;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ItemsSocketable itemsSocketable;

		[Token(Token = "0x170003C3")]
		public bool WasStored
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0xF394D8", Offset = "0xF394D8", VA = "0xF394D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AB8", Offset = "0xB34AB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xF394E0", Offset = "0xF394E0", VA = "0xF394E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34AC8", Offset = "0xB34AC8")]
			set
			{
			}
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xF394EC", Offset = "0xF394EC", VA = "0xF394EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xF3964C", Offset = "0xF3964C", VA = "0xF3964C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xF396A8", Offset = "0xF396A8", VA = "0xF396A8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xF39650", Offset = "0xF39650", VA = "0xF39650")]
		public void QueueResetPosition()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xF396C0", Offset = "0xF396C0", VA = "0xF396C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34AD8", Offset = "0xB34AD8")]
		private IEnumerator ResetAfterTime()
		{
			return null;
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xF396AC", Offset = "0xF396AC", VA = "0xF396AC")]
		public void CancelResetPosition()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xF39738", Offset = "0xF39738", VA = "0xF39738")]
		public VR_ItemPositionReseter()
		{
		}
	}
	[Token(Token = "0x20009BE")]
	public class VR_RaisinGrabber : MonoBehaviour
	{
		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> handsHoveringRaisinBox;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject raisinPrefab;

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xF3AB1C", Offset = "0xF3AB1C", VA = "0xF3AB1C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xF3AC08", Offset = "0xF3AC08", VA = "0xF3AC08")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xF3ACF4", Offset = "0xF3ACF4", VA = "0xF3ACF4")]
		public void OnRaisinGrab()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xF3AECC", Offset = "0xF3AECC", VA = "0xF3AECC")]
		private static void GrabRaisin(GameObject raisin, HVRHandGrabber handGrabber)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xF3AF50", Offset = "0xF3AF50", VA = "0xF3AF50")]
		public VR_RaisinGrabber()
		{
		}
	}
	[Token(Token = "0x20009BF")]
	public class VR_StoredItemUpdater : MonoBehaviour
	{
		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HVRSocket socket;

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x273D9BC", Offset = "0x273D9BC", VA = "0x273D9BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x273DA18", Offset = "0x273DA18", VA = "0x273DA18")]
		public void ItemWasStored()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x273DA84", Offset = "0x273DA84", VA = "0x273DA84")]
		public VR_StoredItemUpdater()
		{
		}
	}
	[Token(Token = "0x20009C0")]
	public class VR_TossedItemCollector : MonoBehaviour
	{
		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VR_BaseBackpack backpackInventory;

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x273DE3C", Offset = "0x273DE3C", VA = "0x273DE3C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x273DF10", Offset = "0x273DF10", VA = "0x273DF10")]
		public void StoreOnFirstEmptySlot(ItemsSocketable item)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x273E0F8", Offset = "0x273E0F8", VA = "0x273E0F8")]
		public VR_TossedItemCollector()
		{
		}
	}
	[Token(Token = "0x20009C1")]
	public class VR_WindowOpener : MonoBehaviour
	{
		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BA1C", Offset = "0xB2BA1C")]
		[SerializeField]
		private Transform window;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform windowClosedTransform;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform windowOpenTransform;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float windowMoveSpeed;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float windowRotationSpeed;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 previousXRotation;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BAA8", Offset = "0xB2BAA8")]
		private bool <IsOpen>k__BackingField;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform desiredTransform;

		[Token(Token = "0x170003C6")]
		public bool IsOpen
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x273E100", Offset = "0x273E100", VA = "0x273E100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B88", Offset = "0xB34B88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x273E108", Offset = "0x273E108", VA = "0x273E108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34B98", Offset = "0xB34B98")]
			set
			{
			}
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x273E114", Offset = "0x273E114", VA = "0x273E114")]
		private void Start()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x273E2C8", Offset = "0x273E2C8", VA = "0x273E2C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x273E2EC", Offset = "0x273E2EC", VA = "0x273E2EC")]
		private void MoveWindowWhenGrabbed()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x273E78C", Offset = "0x273E78C", VA = "0x273E78C")]
		private void SetWindowOpenState()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x273E9BC", Offset = "0x273E9BC", VA = "0x273E9BC")]
		private void OpenWindow(string interaction)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x273E9D0", Offset = "0x273E9D0", VA = "0x273E9D0")]
		private void CloseWindow(string interaction)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x273E550", Offset = "0x273E550", VA = "0x273E550")]
		private void MoveWindowWhenClickedOn()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x273E9E4", Offset = "0x273E9E4", VA = "0x273E9E4")]
		public VR_WindowOpener()
		{
		}
	}
	[Token(Token = "0x20009C2")]
	public class LookAtCallTest : MonoBehaviour
	{
		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action onLookAt;

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xEB734C", Offset = "0xEB734C", VA = "0xEB734C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xEB7414", Offset = "0xEB7414", VA = "0xEB7414")]
		private void ActivateLookAtEvent()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xEB7418", Offset = "0xEB7418", VA = "0xEB7418")]
		private void PlayerLooked()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xEB748C", Offset = "0xEB748C", VA = "0xEB748C")]
		public LookAtCallTest()
		{
		}
	}
	[Token(Token = "0x20009C3")]
	public class OXR_SubtitlesController : MonoBehaviour, IScreenTextController
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEngine.CanvasGroup canvasGroupVR;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public TMP_Text textMeshVR;

		[Token(Token = "0x170003C7")]
		public UIScalableTextLayoutGroup layoutGroup
		{
			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x2772770", Offset = "0x2772770", VA = "0x2772770", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		public TMP_Text tmpText
		{
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x2772778", Offset = "0x2772778", VA = "0x2772778", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		public RectTransform rebuildLayoutTransform
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x2772780", Offset = "0x2772780", VA = "0x2772780", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x27727F0", Offset = "0x27727F0", VA = "0x27727F0", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x27727F4", Offset = "0x27727F4", VA = "0x27727F4", Slot = "4")]
		public void SetScreenTextAlpha(float alpha)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x27728E8", Offset = "0x27728E8", VA = "0x27728E8")]
		public OXR_SubtitlesController()
		{
		}
	}
	[Token(Token = "0x20009C4")]
	public class VR_LookAtEventIndicator : MonoBehaviour
	{
		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BAD8", Offset = "0xB2BAD8")]
		private Transform lookAtEventTarget;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lookAtTargetPosition;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BB10", Offset = "0xB2BB10")]
		[SerializeField]
		private float indicatorsMoveSpeed;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image imageComponent;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isOnTarget;

		[Token(Token = "0x170003CA")]
		public bool IsOnTarget
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xF39748", Offset = "0xF39748", VA = "0xF39748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xF39750", Offset = "0xF39750", VA = "0xF39750")]
			set
			{
			}
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xF3975C", Offset = "0xF3975C", VA = "0xF3975C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xF397B8", Offset = "0xF397B8", VA = "0xF397B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xF39868", Offset = "0xF39868", VA = "0xF39868")]
		private void MoveIndicator()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xF399AC", Offset = "0xF399AC", VA = "0xF399AC")]
		private void RotateIndicator()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xF39A94", Offset = "0xF39A94", VA = "0xF39A94")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xF39A9C", Offset = "0xF39A9C", VA = "0xF39A9C")]
		public Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xF39AA8", Offset = "0xF39AA8", VA = "0xF39AA8")]
		public void HideIndicator()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xF39B54", Offset = "0xF39B54", VA = "0xF39B54")]
		public void ShowIndicator()
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xF39C00", Offset = "0xF39C00", VA = "0xF39C00")]
		public void ResetIndicator()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xF39C08", Offset = "0xF39C08", VA = "0xF39C08")]
		public VR_LookAtEventIndicator()
		{
		}
	}
	[Token(Token = "0x20009C5")]
	public class VR_LookAtIndicatorActivator : MonoBehaviour
	{
		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VR_ItemPositionReseter itemPositioner;

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xF39C1C", Offset = "0xF39C1C", VA = "0xF39C1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xF39C78", Offset = "0xF39C78", VA = "0xF39C78")]
		public void ActivateIndicator(Transform target)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xF39DA0", Offset = "0xF39DA0", VA = "0xF39DA0")]
		public void DeactivateIndicator()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xF39F48", Offset = "0xF39F48", VA = "0xF39F48")]
		public VR_LookAtIndicatorActivator()
		{
		}
	}
	[Token(Token = "0x20009C6")]
	public class VR_LookDirectionFollower : MonoBehaviour
	{
		[Token(Token = "0x20009C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CBCC", Offset = "0xB1CBCC")]
		private sealed class <DeactivateIndicator>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VR_LookDirectionFollower <>4__this;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022ED")]
				[Address(RVA = "0xDA6C4C", Offset = "0xDA6C4C", VA = "0xDA6C4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022EF")]
				[Address(RVA = "0xDA6C94", Offset = "0xDA6C94", VA = "0xDA6C94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xDA6B60", Offset = "0xDA6B60", VA = "0xDA6B60")]
			[DebuggerHidden]
			public <DeactivateIndicator>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0xDA6B8C", Offset = "0xDA6B8C", VA = "0xDA6B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022EC")]
			[Address(RVA = "0xDA6B90", Offset = "0xDA6B90", VA = "0xDA6B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022EE")]
			[Address(RVA = "0xDA6C54", Offset = "0xDA6C54", VA = "0xDA6C54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CBDC", Offset = "0xB1CBDC")]
		private sealed class <ActivateAfterTime>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VR_LookDirectionFollower <>4__this;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform target;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022F3")]
				[Address(RVA = "0xDA6B10", Offset = "0xDA6B10", VA = "0xDA6B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022F5")]
				[Address(RVA = "0xDA6B58", Offset = "0xDA6B58", VA = "0xDA6B58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0xDA6980", Offset = "0xDA6980", VA = "0xDA6980")]
			[DebuggerHidden]
			public <ActivateAfterTime>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60022F1")]
			[Address(RVA = "0xDA69AC", Offset = "0xDA69AC", VA = "0xDA69AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xDA69B0", Offset = "0xDA69B0", VA = "0xDA69B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022F4")]
			[Address(RVA = "0xDA6B18", Offset = "0xDA6B18", VA = "0xDA6B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isActive;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isLookAtEvent;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cameraTarget;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cameraTransf;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform offsetTransf;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Camera mainCamera;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float cameraFollowSpeed;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float lookAtTargetDuration;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float hintDelay;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float scarecrowPhotoIndicatorDuration;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timer;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float bottomRightRange;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float topLeftRange;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VR_LookAtEventIndicator indicator;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VR_LookDirectionFollower staticInstance;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action onPlayerLookAt;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RegisteredInteractable interactable;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Image image;

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xF39F50", Offset = "0xF39F50", VA = "0xF39F50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xF39FA4", Offset = "0xF39FA4", VA = "0xF39FA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xF3A0C0", Offset = "0xF3A0C0", VA = "0xF3A0C0")]
		private void GetReferences()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xF3A310", Offset = "0xF3A310", VA = "0xF3A310")]
		private void Update()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xF3A340", Offset = "0xF3A340", VA = "0xF3A340")]
		private void FollowCameraTarget()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xF3A494", Offset = "0xF3A494", VA = "0xF3A494")]
		private void DetectTarget()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xF3A534", Offset = "0xF3A534", VA = "0xF3A534")]
		private bool IsLookingAtTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xF3A5AC", Offset = "0xF3A5AC", VA = "0xF3A5AC")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xF3A5B8", Offset = "0xF3A5B8", VA = "0xF3A5B8")]
		private void DeactivateIndicator(Scene scene, LoadSceneMode sceneMode)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xF39E58", Offset = "0xF39E58", VA = "0xF39E58")]
		public void DeactivateIndicator()
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xF3A5BC", Offset = "0xF3A5BC", VA = "0xF3A5BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34BA8", Offset = "0xB34BA8")]
		public IEnumerator DeactivateIndicator(float delay)
		{
			return null;
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xF3A644", Offset = "0xF3A644", VA = "0xF3A644")]
		public void ActivateIndicator(ref RegisteredInteractable myInteractable, Action onPlayerLook, string interactionObjectName, string interactionName)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xF3AAC0", Offset = "0xF3AAC0", VA = "0xF3AAC0")]
		public void ActivateIndicator(Transform target, bool isLookAtEvent)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xF39D44", Offset = "0xF39D44", VA = "0xF39D44")]
		public void ActivateIndicator(Transform target)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xF3A934", Offset = "0xF3A934", VA = "0xF3A934")]
		private bool IsIndicatorRequired(string objectName, string eventName)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xF3AA1C", Offset = "0xF3AA1C", VA = "0xF3AA1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34C08", Offset = "0xB34C08")]
		public IEnumerator ActivateAfterTime(float delay, Transform target)
		{
			return null;
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xF3AAEC", Offset = "0xF3AAEC", VA = "0xF3AAEC")]
		public VR_LookDirectionFollower()
		{
		}
	}
	[Token(Token = "0x20009C9")]
	public class VR_SpeechBubble : MonoBehaviour
	{
		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform targetTransform;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float diffDistanceLimit;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float subtitlesRotationSpeed;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve animCurve;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float maxPositionX;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float minPositionX;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float maxPositionY;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float minPositionY;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float maxPositionZ;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float minPositionZ;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform cameraTransform;

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xF3BFD4", Offset = "0xF3BFD4", VA = "0xF3BFD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xF3C078", Offset = "0xF3C078", VA = "0xF3C078")]
		private void Update()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xF3C320", Offset = "0xF3C320", VA = "0xF3C320")]
		public VR_SpeechBubble()
		{
		}
	}
	[Token(Token = "0x20009CA")]
	public class VR_SpeechBubblesIndicator : MonoBehaviour
	{
		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BC7C", Offset = "0xB2BC7C")]
		public Transform speakersIndicatorTarget;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float indicatorsMoveSpeed;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float indicatorsRotationSpeed;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float indicatorsOffset;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float panelRightBound;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float panelLeftBound;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float panelTopBound;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float panelBottomBound;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool isActive;

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xF3C334", Offset = "0xF3C334", VA = "0xF3C334")]
		private void Start()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xF3C5B0", Offset = "0xF3C5B0", VA = "0xF3C5B0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xF3C4C8", Offset = "0xF3C4C8", VA = "0xF3C4C8")]
		private void CalculateBounds(RectTransform parentsRectTransform)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xF3C5E0", Offset = "0xF3C5E0", VA = "0xF3C5E0")]
		private void MoveIndicator()
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xF3CA04", Offset = "0xF3CA04", VA = "0xF3CA04")]
		private void AdjustWhenOutsidePanel(ref float localPositionX, ref float localPositionY)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xF3C96C", Offset = "0xF3C96C", VA = "0xF3C96C")]
		private void AdjustWhenInsidePanel(ref float localPositionX, ref float localPositionY)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xF3C7B0", Offset = "0xF3C7B0", VA = "0xF3C7B0")]
		private void RotateIndicator()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xF3CA58", Offset = "0xF3CA58", VA = "0xF3CA58")]
		public VR_SpeechBubblesIndicator()
		{
		}
	}
	[Token(Token = "0x20009CB")]
	public class VR_SubtitlesReferenceHolder : MonoBehaviour
	{
		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera mainCamera;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform subtitlesTarget;

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x273DA8C", Offset = "0x273DA8C", VA = "0x273DA8C")]
		public VR_SubtitlesReferenceHolder()
		{
		}
	}
	[Token(Token = "0x20009CC")]
	public class VR_SubtitlesSpeaker : MonoBehaviour
	{
		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform indicatorsTarget;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OXRSubtitles subtitles;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VR_SpeechBubblesIndicator indicator;

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x273DA94", Offset = "0x273DA94", VA = "0x273DA94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x273DB28", Offset = "0x273DB28", VA = "0x273DB28")]
		private void FindIndicatorAndSubtitles()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x273DBD8", Offset = "0x273DBD8", VA = "0x273DBD8")]
		private void AssignSpeaker()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x273DC44", Offset = "0x273DC44", VA = "0x273DC44")]
		private void ActivateIndicator()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x273DD60", Offset = "0x273DD60", VA = "0x273DD60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x273DD64", Offset = "0x273DD64", VA = "0x273DD64")]
		private void UnassignSpeaker()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x273DD68", Offset = "0x273DD68", VA = "0x273DD68")]
		private void DeactivateIndicator()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x273DE34", Offset = "0x273DE34", VA = "0x273DE34")]
		public VR_SubtitlesSpeaker()
		{
		}
	}
	[Token(Token = "0x20009CD")]
	public class VR_ContactSoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xF382F8", Offset = "0xF382F8", VA = "0xF382F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xF38354", Offset = "0xF38354", VA = "0xF38354")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xF38370", Offset = "0xF38370", VA = "0xF38370")]
		public VR_ContactSoundEmitter()
		{
		}
	}
	[Token(Token = "0x20009CE")]
	public class VR_FinalIKReferenceHolder : MonoBehaviour
	{
		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftHandTarget;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftWristBender;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightWristBender;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform headTarget;

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xF38378", Offset = "0xF38378", VA = "0xF38378")]
		public VR_FinalIKReferenceHolder()
		{
		}
	}
	[Token(Token = "0x20009CF")]
	public class VR_FinalIKTarget : MonoBehaviour
	{
		[Token(Token = "0x20009D0")]
		public enum Type
		{
			[Token(Token = "0x400207F")]
			LeftFoot,
			[Token(Token = "0x4002080")]
			RightFoot,
			[Token(Token = "0x4002081")]
			Pelvis
		}

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xF38380", Offset = "0xF38380", VA = "0xF38380")]
		public VR_FinalIKTarget()
		{
		}
	}
	[Token(Token = "0x20009D1")]
	public class VR_HHRigReferenceAssigner : MonoBehaviour
	{
		[Token(Token = "0x600230F")]
		[Address(RVA = "0xF386D0", Offset = "0xF386D0", VA = "0xF386D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xF38828", Offset = "0xF38828", VA = "0xF38828")]
		public void AssignFinalIKReferences(VRIK finalIKRig, VR_FinalIKReferenceHolder referenceHolder)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xF38A64", Offset = "0xF38A64", VA = "0xF38A64")]
		private void AdjustFinalIKSettings(VRIK finalIKRig)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xF38C24", Offset = "0xF38C24", VA = "0xF38C24")]
		public VR_HHRigReferenceAssigner()
		{
		}
	}
	[Token(Token = "0x20009D2")]
	public class VR_RigCollisionChanger : MonoBehaviour
	{
		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int handLayer;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int grabbableLayer;

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xF3AFD4", Offset = "0xF3AFD4", VA = "0xF3AFD4")]
		private void ActivateCollision()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xF3B020", Offset = "0xF3B020", VA = "0xF3B020")]
		private void DeactivateCollision()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xF3B06C", Offset = "0xF3B06C", VA = "0xF3B06C")]
		public VR_RigCollisionChanger()
		{
		}
	}
	[Token(Token = "0x20009D3")]
	public class VR_RigPositionReseter : MonoBehaviour
	{
		[Token(Token = "0x20009D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CBEC", Offset = "0xB1CBEC")]
		private sealed class <ChargeAndReset>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_RigPositionReseter <>4__this;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLeft;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <chargeTimer>5__2;

			[Token(Token = "0x170003CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600232A")]
				[Address(RVA = "0xDA6DB0", Offset = "0xDA6DB0", VA = "0xDA6DB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600232C")]
				[Address(RVA = "0xDA6DF8", Offset = "0xDA6DF8", VA = "0xDA6DF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002327")]
			[Address(RVA = "0xDA6C9C", Offset = "0xDA6C9C", VA = "0xDA6C9C")]
			[DebuggerHidden]
			public <ChargeAndReset>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002328")]
			[Address(RVA = "0xDA6CC8", Offset = "0xDA6CC8", VA = "0xDA6CC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002329")]
			[Address(RVA = "0xDA6CCC", Offset = "0xDA6CCC", VA = "0xDA6CCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600232B")]
			[Address(RVA = "0xDA6DB8", Offset = "0xDA6DB8", VA = "0xDA6DB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20009D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CBFC", Offset = "0xB1CBFC")]
		private sealed class <FadeAndReset>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VR_RigPositionReseter <>4__this;

			[Token(Token = "0x170003D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0xDA705C", Offset = "0xDA705C", VA = "0xDA705C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002332")]
				[Address(RVA = "0xDA70A4", Offset = "0xDA70A4", VA = "0xDA70A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600232D")]
			[Address(RVA = "0xDA6E00", Offset = "0xDA6E00", VA = "0xDA6E00")]
			[DebuggerHidden]
			public <FadeAndReset>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600232E")]
			[Address(RVA = "0xDA6E2C", Offset = "0xDA6E2C", VA = "0xDA6E2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232F")]
			[Address(RVA = "0xDA6E30", Offset = "0xDA6E30", VA = "0xDA6E30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002331")]
			[Address(RVA = "0xDA7064", Offset = "0xDA7064", VA = "0xDA7064", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BCF4", Offset = "0xB2BCF4")]
		[SerializeField]
		private Transform rigOffsetTransform;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BD40", Offset = "0xB2BD40")]
		public bool shouldFade;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BD78", Offset = "0xB2BD78")]
		[SerializeField]
		private float fadeLenght;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldHoldButton;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BDB8", Offset = "0xB2BDB8")]
		private float buttonHoldLength;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool shouldControllerVibrate;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BDF8", Offset = "0xB2BDF8")]
		public float vibrationIntensity;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.XR.InputDevice leftController;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.XR.InputDevice rightController;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isReseting;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isInitialized;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BE10", Offset = "0xB2BE10")]
		public InputActionReference inputActionLeft;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InputActionReference inputActionRight;

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xF3B080", Offset = "0xF3B080", VA = "0xF3B080")]
		private void Init(SceneManagementService sceneManagementService)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xF3B15C", Offset = "0xF3B15C", VA = "0xF3B15C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xF3B2A0", Offset = "0xF3B2A0", VA = "0xF3B2A0")]
		private void AssignInputEvents()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xF3B464", Offset = "0xF3B464", VA = "0xF3B464")]
		private void OnLeftActionStarted(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xF3B4CC", Offset = "0xF3B4CC", VA = "0xF3B4CC")]
		private void OnRightActionStarted(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xF3B4D4", Offset = "0xF3B4D4", VA = "0xF3B4D4")]
		private void TryAssignVRControllers()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xF3B504", Offset = "0xF3B504", VA = "0xF3B504")]
		private void TryAssignController(ref UnityEngine.XR.InputDevice controller, InputDeviceCharacteristics controllerCharacteristics)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xF3B46C", Offset = "0xF3B46C", VA = "0xF3B46C")]
		public void StartRigReset(bool isLeftHand)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xF3B5C4", Offset = "0xF3B5C4", VA = "0xF3B5C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34D08", Offset = "0xB34D08")]
		private IEnumerator ChargeAndReset(bool isLeft)
		{
			return null;
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xF3B698", Offset = "0xF3B698", VA = "0xF3B698")]
		private void VibrateController(float chargeTimer, bool isLeft)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xF3B650", Offset = "0xF3B650", VA = "0xF3B650")]
		public void ResetRig()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xF3B71C", Offset = "0xF3B71C", VA = "0xF3B71C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB34D68", Offset = "0xB34D68")]
		private IEnumerator FadeAndReset()
		{
			return null;
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xF3B794", Offset = "0xF3B794", VA = "0xF3B794")]
		private void AdjustRigPositionAndRotation()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xF3B824", Offset = "0xF3B824", VA = "0xF3B824")]
		public void ResetPlayerCamera()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xF3B90C", Offset = "0xF3B90C", VA = "0xF3B90C")]
		private void OnActionCanceled(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xF3B934", Offset = "0xF3B934", VA = "0xF3B934")]
		private void CancelRigReset()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xF3B95C", Offset = "0xF3B95C", VA = "0xF3B95C")]
		public VR_RigPositionReseter()
		{
		}
	}
}
namespace HitchHiker.UI
{
	[Token(Token = "0x20009D6")]
	public class CableEndView : MonoBehaviour, IGenericView<CableEnd>
	{
		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material neutralMaterial;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material successMaterial;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material failureMaterial;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer lightBulb;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform attachTransform;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DesiredCableDataView desiredCableDataUI;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BE48", Offset = "0xB2BE48")]
		private CableEnd <model>k__BackingField;

		[Token(Token = "0x170003D3")]
		public CableEnd model
		{
			[Token(Token = "0x6002333")]
			[Address(RVA = "0xE2E0FC", Offset = "0xE2E0FC", VA = "0xE2E0FC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E68", Offset = "0xB34E68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002334")]
			[Address(RVA = "0xE2E104", Offset = "0xE2E104", VA = "0xE2E104", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E78", Offset = "0xB34E78")]
			set
			{
			}
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xE2E10C", Offset = "0xE2E10C", VA = "0xE2E10C", Slot = "6")]
		public void UpdateView()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xE2E170", Offset = "0xE2E170", VA = "0xE2E170")]
		public void UpdateSuccess()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xE2E234", Offset = "0xE2E234", VA = "0xE2E234")]
		private void AddNewBulbMaterialToFadingBox()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xE2E324", Offset = "0xE2E324", VA = "0xE2E324")]
		public CableEndView()
		{
		}
	}
	[Token(Token = "0x20009D7")]
	public class CableStartView : MonoBehaviour, IGenericView<CableStart>
	{
		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Button button;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Image selectionFrame;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<SymbolTypeElementView> symbolTypeViews;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<ColorTypeElementView> colorTypeViews;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BE98", Offset = "0xB2BE98")]
		private CableStart <model>k__BackingField;

		[Token(Token = "0x170003D4")]
		public CableStart model
		{
			[Token(Token = "0x6002339")]
			[Address(RVA = "0xE2E75C", Offset = "0xE2E75C", VA = "0xE2E75C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E88", Offset = "0xB34E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xE2E764", Offset = "0xE2E764", VA = "0xE2E764", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34E98", Offset = "0xB34E98")]
			set
			{
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xE2E76C", Offset = "0xE2E76C", VA = "0xE2E76C")]
		public void SetHighlighted(bool flag)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xE2E7C4", Offset = "0xE2E7C4", VA = "0xE2E7C4")]
		public void SetInteractable(bool flag)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xE2E7E4", Offset = "0xE2E7E4", VA = "0xE2E7E4", Slot = "6")]
		public void UpdateView()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xE2EA8C", Offset = "0xE2EA8C", VA = "0xE2EA8C")]
		public CableStartView()
		{
		}
	}
	[Token(Token = "0x20009D8")]
	public class CableView : MonoBehaviour
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cableCapTransform;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 originalCableCapLocalPosition;

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xE2EA94", Offset = "0xE2EA94", VA = "0xE2EA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xE2EB18", Offset = "0xE2EB18", VA = "0xE2EB18")]
		public void UpdateLineRenderer(Vector3 finalPosition)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xE2EBB4", Offset = "0xE2EBB4", VA = "0xE2EBB4")]
		public void UpdateLineRenderer(Vector3 startPosition, Vector3 finalPosition)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xE2EAD0", Offset = "0xE2EAD0", VA = "0xE2EAD0")]
		public void ResetLineRenderer()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xE2EE3C", Offset = "0xE2EE3C", VA = "0xE2EE3C")]
		public List<Vector3> DrawBezier(int count, Vector3 pt0, Vector3 pt1, Vector3 pt2, Vector3 pt3)
		{
			return null;
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xE2F018", Offset = "0xE2F018", VA = "0xE2F018")]
		private Vector3 XY(float t, Vector3 pt0, Vector3 pt1, Vector3 pt2, Vector3 pt3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xE2F0AC", Offset = "0xE2F0AC", VA = "0xE2F0AC")]
		public CableView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20009D9")]
	public class ColorTypeElementView : IGenericView<ColorType>
	{
		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColorTypeDataTable colorTable;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BEA8", Offset = "0xB2BEA8")]
		private ColorType <model>k__BackingField;

		[Token(Token = "0x170003D5")]
		public ColorType model
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0xE3E704", Offset = "0xE3E704", VA = "0xE3E704", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EA8", Offset = "0xB34EA8")]
			get
			{
				return default(ColorType);
			}
			[Token(Token = "0x6002347")]
			[Address(RVA = "0xE3E70C", Offset = "0xE3E70C", VA = "0xE3E70C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EB8", Offset = "0xB34EB8")]
			set
			{
			}
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xE3E714", Offset = "0xE3E714", VA = "0xE3E714", Slot = "6")]
		public void UpdateView()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xE3E8AC", Offset = "0xE3E8AC", VA = "0xE3E8AC")]
		private void UpdateMaterial(Material material)
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xE3E984", Offset = "0xE3E984", VA = "0xE3E984")]
		public ColorTypeElementView()
		{
		}
	}
	[Token(Token = "0x20009DA")]
	public class DesiredCableDataView : MonoBehaviour, IGenericView<DesiredCableData>
	{
		[Serializable]
		[Token(Token = "0x20009DB")]
		public class ElementReferences
		{
			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform container;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image mainImage;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image isUndesiredImage;

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x275FF90", Offset = "0x275FF90", VA = "0x275FF90")]
			public ElementReferences()
			{
			}
		}

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElementReferences[] colorReferences;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementReferences[] symbolReferences;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SymbolTypeDataTable symbolTable;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ColorTypeDataTable colorTable;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BEB8", Offset = "0xB2BEB8")]
		private DesiredCableData <model>k__BackingField;

		[Token(Token = "0x170003D6")]
		public DesiredCableData model
		{
			[Token(Token = "0x600234B")]
			[Address(RVA = "0x1125DD0", Offset = "0x1125DD0", VA = "0x1125DD0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EC8", Offset = "0xB34EC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600234C")]
			[Address(RVA = "0x1125DD8", Offset = "0x1125DD8", VA = "0x1125DD8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34ED8", Offset = "0xB34ED8")]
			set
			{
			}
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x1125DE0", Offset = "0x1125DE0", VA = "0x1125DE0", Slot = "6")]
		public void UpdateView()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x112618C", Offset = "0x112618C", VA = "0x112618C")]
		public DesiredCableDataView()
		{
		}
	}
	[Token(Token = "0x20009DC")]
	public interface IGenericView<TModel>
	{
		[Token(Token = "0x170003D7")]
		TModel model
		{
			[Token(Token = "0x6002350")]
			get;
			[Token(Token = "0x6002351")]
			set;
		}

		[Token(Token = "0x6002352")]
		void UpdateView();
	}
	[Token(Token = "0x20009DD")]
	public static class IGenericViewExtensions
	{
		[Token(Token = "0x6002353")]
		public static void SetAndUpdateView<T>(this IGenericView<T> genericView, T model)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20009DE")]
	public class SymbolTypeElementView : IGenericView<SymbolType>
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SymbolTypeDataTable symbolTable;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BEC8", Offset = "0xB2BEC8")]
		private SymbolType <model>k__BackingField;

		[Token(Token = "0x170003D8")]
		public SymbolType model
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0xDB1458", Offset = "0xDB1458", VA = "0xDB1458", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EF8", Offset = "0xB34EF8")]
			get
			{
				return default(SymbolType);
			}
			[Token(Token = "0x6002355")]
			[Address(RVA = "0xDB1460", Offset = "0xDB1460", VA = "0xDB1460", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F08", Offset = "0xB34F08")]
			set
			{
			}
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xDB1468", Offset = "0xDB1468", VA = "0xDB1468", Slot = "6")]
		public void UpdateView()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xDB1610", Offset = "0xDB1610", VA = "0xDB1610")]
		public SymbolTypeElementView()
		{
		}
	}
}
namespace HitchHiker.Car
{
	[Serializable]
	[Token(Token = "0x20009DF")]
	public class BranchSelectorConfig
	{
		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public bool frontSelectorSanityCheck;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		public bool rearSelectorSanityCheck;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int frontSelectorDecisionPrealloc;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int rearSelectorDecisionPrealloc;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int frontSelectorSmartRandomizerStatePrealloc;

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x103D0D0", Offset = "0x103D0D0", VA = "0x103D0D0")]
		public BranchSelectorConfig()
		{
		}
	}
	[Token(Token = "0x20009E0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1CC1C", Offset = "0xB1CC1C")]
	public class CarConfig : ScriptableObject
	{
		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BF28", Offset = "0xB2BF28")]
		[SerializeField]
		public float axleDistance;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public LookAtDirection lootAtDirection;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Vector3 steeringWheelRotationAxis;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Vector3 wheelRotationAxis;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float steeringWheelSensitivity;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BFB4", Offset = "0xB2BFB4")]
		public RoadSurface startSurface;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C000", Offset = "0xB2C000")]
		public AutoMode autoMode;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public DecisionMode decisionMode;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public CarSplineController.PlayState startPlayState;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public BranchSelectorConfig branchSelectionConfig;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C07C", Offset = "0xB2C07C")]
		public float baseSpeed;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		public float baseSpeedVR;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public SpeedValue startSpeedValue;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public float minCurrentSpeedOverDistance;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public AnimationCurve defaultSpeedOverDistanceCurve;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public float fastForwardSpeed;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C118", Offset = "0xB2C118")]
		public float distanceErrorThreshold;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public float maxBranchDivergenceAngle;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		public int maxSplineMarkerScanCount;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C184", Offset = "0xB2C184")]
		public string carEngineEmitterName;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public string carEngineSoundEvent;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public float carEngineSpeedThreshold;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[ParamRef]
		[SerializeField]
		public string globalCarSpeedSoundParam;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C228", Offset = "0xB2C228")]
		[SerializeField]
		public List<string> decisions;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public List<string> blacklistMarkers;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public List<string> preferredMarkers;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C294", Offset = "0xB2C294")]
		[SerializeField]
		public bool useDebugPreferredMarkers;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public List<string> debugPreferredMarkers;

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xE34244", Offset = "0xE34244", VA = "0xE34244")]
		public CarConfig()
		{
		}
	}
	[Token(Token = "0x20009E1")]
	public enum LookAtDirection
	{
		[Token(Token = "0x40020D9")]
		FrontToRear,
		[Token(Token = "0x40020DA")]
		RearToFront
	}
	[Token(Token = "0x20009E2")]
	public class CarModelController : SubController<CarConfig, RegisteredCarController>
	{
		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C2F0", Offset = "0xB2C2F0")]
		[SerializeField]
		public Transform _carModel;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _steeringWheel;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _leftFrontWheel;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _rightFrontWheel;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _leftRearWheel;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _rightRearWheel;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Animation carRigAnimationVR;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion _steeringWheelBaseRotation;

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xE35DF8", Offset = "0xE35DF8", VA = "0xE35DF8", Slot = "7")]
		protected override void InitSubController()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xE35E40", Offset = "0xE35E40", VA = "0xE35E40", Slot = "8")]
		public override void UpdateSubController(float deltaTime)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xE363BC", Offset = "0xE363BC", VA = "0xE363BC")]
		public CarModelController()
		{
		}
	}
	[Token(Token = "0x20009E3")]
	public enum SpeedValueType
	{
		[Token(Token = "0x40020E4")]
		Absolute,
		[Token(Token = "0x40020E5")]
		Relative,
		[Token(Token = "0x40020E6")]
		AbsoluteMultiplier,
		[Token(Token = "0x40020E7")]
		RelativeMultiplier
	}
	[Serializable]
	[Token(Token = "0x20009E4")]
	public class SpeedValue
	{
		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public SpeedValueType type;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public float speed;

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xDAB014", Offset = "0xDAB014", VA = "0xDAB014")]
		public SpeedValue()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xDAB028", Offset = "0xDAB028", VA = "0xDAB028")]
		public SpeedValue(SpeedValueType type, float speed)
		{
		}
	}
	[Token(Token = "0x20009E5")]
	public class CarSpeedController : SubController<CarConfig, RegisteredCarController>
	{
		[Token(Token = "0x20009E6")]
		public enum SpeedChangeMode
		{
			[Token(Token = "0x40020FD")]
			None,
			[Token(Token = "0x40020FE")]
			ChangeOverTime,
			[Token(Token = "0x40020FF")]
			ChangeOverDistanceToMarker,
			[Token(Token = "0x4002100")]
			ChangeOverDistanceValue
		}

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C3AC", Offset = "0xB2C3AC")]
		private SpeedChangeMode <Mode>k__BackingField;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C3BC", Offset = "0xB2C3BC")]
		private float <FromTime>k__BackingField;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C3CC", Offset = "0xB2C3CC")]
		private float <ToTime>k__BackingField;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C3DC", Offset = "0xB2C3DC")]
		private float <FromDistance>k__BackingField;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C3EC", Offset = "0xB2C3EC")]
		private float <ToDistance>k__BackingField;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C3FC", Offset = "0xB2C3FC")]
		private float <FromSpeed>k__BackingField;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C40C", Offset = "0xB2C40C")]
		private float <ToSpeed>k__BackingField;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C41C", Offset = "0xB2C41C")]
		private string <FromMarker>k__BackingField;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C42C", Offset = "0xB2C42C")]
		private string <ToMarker>k__BackingField;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C43C", Offset = "0xB2C43C")]
		private CurvySplineSegment <FromSegment>k__BackingField;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C44C", Offset = "0xB2C44C")]
		private CurvySplineSegment <ToSegment>k__BackingField;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C45C", Offset = "0xB2C45C")]
		private float <CurrentSpeed>k__BackingField;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C46C", Offset = "0xB2C46C")]
		private AnimationCurve <SpeedOverDistanceCurve>k__BackingField;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C47C", Offset = "0xB2C47C")]
		private UnityEvent <OnSpeedChangeOverTimeEnd>k__BackingField;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C48C", Offset = "0xB2C48C")]
		private UnityEvent <OnSpeedChangeOverDistanceToMarkerEnd>k__BackingField;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C49C", Offset = "0xB2C49C")]
		private UnityEvent <OnSpeedChangeOverDistanceValueEnd>k__BackingField;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C4AC", Offset = "0xB2C4AC")]
		private bool <FastForwardNextFrame>k__BackingField;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float configBaseSpeed;

		[Token(Token = "0x170003D9")]
		public SpeedChangeMode Mode
		{
			[Token(Token = "0x600235F")]
			[Address(RVA = "0xE367F0", Offset = "0xE367F0", VA = "0xE367F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F18", Offset = "0xB34F18")]
			get
			{
				return default(SpeedChangeMode);
			}
			[Token(Token = "0x6002360")]
			[Address(RVA = "0xE367F8", Offset = "0xE367F8", VA = "0xE367F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F28", Offset = "0xB34F28")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public float FromTime
		{
			[Token(Token = "0x6002361")]
			[Address(RVA = "0xE36800", Offset = "0xE36800", VA = "0xE36800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F38", Offset = "0xB34F38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002362")]
			[Address(RVA = "0xE36808", Offset = "0xE36808", VA = "0xE36808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F48", Offset = "0xB34F48")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public float ToTime
		{
			[Token(Token = "0x6002363")]
			[Address(RVA = "0xE36810", Offset = "0xE36810", VA = "0xE36810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F58", Offset = "0xB34F58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002364")]
			[Address(RVA = "0xE36818", Offset = "0xE36818", VA = "0xE36818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F68", Offset = "0xB34F68")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public float TimeDiff
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0xE36820", Offset = "0xE36820", VA = "0xE36820")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DD")]
		public float TimeProgress
		{
			[Token(Token = "0x6002366")]
			[Address(RVA = "0xE3682C", Offset = "0xE3682C", VA = "0xE3682C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DE")]
		public float FromDistance
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0xE36878", Offset = "0xE36878", VA = "0xE36878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F78", Offset = "0xB34F78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002368")]
			[Address(RVA = "0xE36880", Offset = "0xE36880", VA = "0xE36880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F88", Offset = "0xB34F88")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		public float ToDistance
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0xE36888", Offset = "0xE36888", VA = "0xE36888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34F98", Offset = "0xB34F98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600236A")]
			[Address(RVA = "0xE36890", Offset = "0xE36890", VA = "0xE36890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FA8", Offset = "0xB34FA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public float DistanceDiff
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xE36898", Offset = "0xE36898", VA = "0xE36898")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E1")]
		public float DistanceProgress
		{
			[Token(Token = "0x600236C")]
			[Address(RVA = "0xE368A4", Offset = "0xE368A4", VA = "0xE368A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E2")]
		public float FromSpeed
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0xE36948", Offset = "0xE36948", VA = "0xE36948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FB8", Offset = "0xB34FB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600236E")]
			[Address(RVA = "0xE36950", Offset = "0xE36950", VA = "0xE36950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FC8", Offset = "0xB34FC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E3")]
		public float ToSpeed
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xE36958", Offset = "0xE36958", VA = "0xE36958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FD8", Offset = "0xB34FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xE36960", Offset = "0xE36960", VA = "0xE36960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FE8", Offset = "0xB34FE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public float SpeedDiff
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xE36968", Offset = "0xE36968", VA = "0xE36968")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E5")]
		public string FromMarker
		{
			[Token(Token = "0x6002372")]
			[Address(RVA = "0xE36974", Offset = "0xE36974", VA = "0xE36974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34FF8", Offset = "0xB34FF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xE3697C", Offset = "0xE3697C", VA = "0xE3697C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35008", Offset = "0xB35008")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public string ToMarker
		{
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xE36984", Offset = "0xE36984", VA = "0xE36984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35018", Offset = "0xB35018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002375")]
			[Address(RVA = "0xE3698C", Offset = "0xE3698C", VA = "0xE3698C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35028", Offset = "0xB35028")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public CurvySplineSegment FromSegment
		{
			[Token(Token = "0x6002376")]
			[Address(RVA = "0xE36994", Offset = "0xE36994", VA = "0xE36994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35038", Offset = "0xB35038")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002377")]
			[Address(RVA = "0xE3699C", Offset = "0xE3699C", VA = "0xE3699C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35048", Offset = "0xB35048")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public CurvySplineSegment ToSegment
		{
			[Token(Token = "0x6002378")]
			[Address(RVA = "0xE369A4", Offset = "0xE369A4", VA = "0xE369A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35058", Offset = "0xB35058")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002379")]
			[Address(RVA = "0xE369AC", Offset = "0xE369AC", VA = "0xE369AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35068", Offset = "0xB35068")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E9")]
		public float CurrentSpeed
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0xE369B4", Offset = "0xE369B4", VA = "0xE369B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35078", Offset = "0xB35078")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600237B")]
			[Address(RVA = "0xE369BC", Offset = "0xE369BC", VA = "0xE369BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35088", Offset = "0xB35088")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public AnimationCurve SpeedOverDistanceCurve
		{
			[Token(Token = "0x600237C")]
			[Address(RVA = "0xE369C4", Offset = "0xE369C4", VA = "0xE369C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35098", Offset = "0xB35098")]
			get
			{
				return null;
			}
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xE369CC", Offset = "0xE369CC", VA = "0xE369CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350A8", Offset = "0xB350A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public UnityEvent OnSpeedChangeOverTimeEnd
		{
			[Token(Token = "0x600237E")]
			[Address(RVA = "0xE369D4", Offset = "0xE369D4", VA = "0xE369D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350B8", Offset = "0xB350B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xE369DC", Offset = "0xE369DC", VA = "0xE369DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350C8", Offset = "0xB350C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public UnityEvent OnSpeedChangeOverDistanceToMarkerEnd
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xE369E4", Offset = "0xE369E4", VA = "0xE369E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350D8", Offset = "0xB350D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xE369EC", Offset = "0xE369EC", VA = "0xE369EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350E8", Offset = "0xB350E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public UnityEvent OnSpeedChangeOverDistanceValueEnd
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xE369F4", Offset = "0xE369F4", VA = "0xE369F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB350F8", Offset = "0xB350F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xE369FC", Offset = "0xE369FC", VA = "0xE369FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35108", Offset = "0xB35108")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public bool FastForwardNextFrame
		{
			[Token(Token = "0x6002384")]
			[Address(RVA = "0xE36A04", Offset = "0xE36A04", VA = "0xE36A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35118", Offset = "0xB35118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xE36A0C", Offset = "0xE36A0C", VA = "0xE36A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35128", Offset = "0xB35128")]
			set
			{
			}
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xE36A18", Offset = "0xE36A18", VA = "0xE36A18", Slot = "7")]
		protected override void InitSubController()
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xE36D24", Offset = "0xE36D24", VA = "0xE36D24", Slot = "8")]
		public override void UpdateSubController(float deltaTime)
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xE37068", Offset = "0xE37068", VA = "0xE37068")]
		public void ChangeSpeed(SpeedValue targetValue)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xE370A4", Offset = "0xE370A4", VA = "0xE370A4")]
		public void BeginSpeedChangeOverTime(SpeedValue targetValue, float duration)
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xE3710C", Offset = "0xE3710C", VA = "0xE3710C")]
		public bool BeginSpeedChangeOverDistanceToMarker(SpeedValue targetValue, string targetMarker, [Optional] AnimationCurve curveOverwrite)
		{
			return default(bool);
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xE373EC", Offset = "0xE373EC", VA = "0xE373EC")]
		public void BeginSpeedChangeOverDistanceValue(float distance, [Optional] SpeedValue targetValue, [Optional] AnimationCurve curveOverwrite)
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xE355A0", Offset = "0xE355A0", VA = "0xE355A0")]
		public void EndSpeedChange(bool applyTargetSpeed = false)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xE36CBC", Offset = "0xE36CBC", VA = "0xE36CBC")]
		private float GetSpeedValue(SpeedValue value, bool noCurrentSpeed = false)
		{
			return default(float);
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xE374E4", Offset = "0xE374E4", VA = "0xE374E4")]
		private void OnFrontSegmentUpdated(CurvySplineMoveEventArgs moveEventArgs)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xE37594", Offset = "0xE37594", VA = "0xE37594")]
		private void OnFrontSurfaceUpdated()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xE37598", Offset = "0xE37598", VA = "0xE37598")]
		public CarSpeedController()
		{
		}
	}
	[Token(Token = "0x20009E7")]
	public enum AutoMode
	{
		[Token(Token = "0x4002102")]
		None,
		[Token(Token = "0x4002103")]
		RandomizeBranches,
		[Token(Token = "0x4002104")]
		SmartRandomizeBranches
	}
	[Token(Token = "0x20009E8")]
	public enum DecisionMode
	{
		[Token(Token = "0x4002106")]
		None,
		[Token(Token = "0x4002107")]
		PopPendingDecision,
		[Token(Token = "0x4002108")]
		LoopPendingDecision
	}
	[Token(Token = "0x20009E9")]
	public class CarSplineController : SubController<CarConfig, RegisteredCarController>
	{
		[Token(Token = "0x20009EA")]
		public enum PlayState
		{
			[Token(Token = "0x400212A")]
			Playing,
			[Token(Token = "0x400212B")]
			Paused,
			[Token(Token = "0x400212C")]
			Stopped
		}

		[Token(Token = "0x20009EB")]
		public class MarkerUpdateEvent : UnityEvent<RegisteredSplineMarker>
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x275DB24", Offset = "0x275DB24", VA = "0x275DB24")]
			public MarkerUpdateEvent()
			{
			}
		}

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C4BC", Offset = "0xB2C4BC")]
		[SerializeField]
		private SplineController _frontController;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SplineController _rearController;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FrontBranchSelector _frontBranchSelector;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RearBranchSelector _rearBranchSelector;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C538", Offset = "0xB2C538")]
		[SerializeField]
		private RegisteredSplineMarker _startSplineMarker;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RegisteredSplineMarker _loopBeginMarker;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RegisteredSplineMarker _loopEndMarker;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RegisteredCarController _carController;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _frontTransform;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _rearTransform;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HashSet<string> _blacklist;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HashSet<string> _preferredMarkers;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<string> _debugPreferredMarkers;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvySplineSegment _pendingJumpTarget;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _reactToControlPointEvents;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5A4", Offset = "0xB2C5A4")]
		private CurvySplineSegment <FrontSegment>k__BackingField;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5B4", Offset = "0xB2C5B4")]
		private CurvySplineSegment <RearSegment>k__BackingField;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5C4", Offset = "0xB2C5C4")]
		private RegisteredSplineMarker <FrontMarker>k__BackingField;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5D4", Offset = "0xB2C5D4")]
		private RegisteredSplineMarker <RearMarker>k__BackingField;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5E4", Offset = "0xB2C5E4")]
		private RoadSurface <FrontSurface>k__BackingField;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5F4", Offset = "0xB2C5F4")]
		private RoadSurface <RearSurface>k__BackingField;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C604", Offset = "0xB2C604")]
		private PlayState <CurrentPlayState>k__BackingField;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C614", Offset = "0xB2C614")]
		private AutoMode <AutoMode>k__BackingField;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C624", Offset = "0xB2C624")]
		private DecisionMode <DecisionMode>k__BackingField;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C634", Offset = "0xB2C634")]
		private CurvySplineMoveEvent <OnFrontSegmentUpdated>k__BackingField;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C644", Offset = "0xB2C644")]
		private CurvySplineMoveEvent <OnRearSegmentUpdated>k__BackingField;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C654", Offset = "0xB2C654")]
		private MarkerUpdateEvent <OnFrontMarkerReached>k__BackingField;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C664", Offset = "0xB2C664")]
		private MarkerUpdateEvent <OnRearMarkerReached>k__BackingField;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C674", Offset = "0xB2C674")]
		private UnityEvent <OnFrontSurfaceUpdated>k__BackingField;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C684", Offset = "0xB2C684")]
		private UnityEvent <OnRearSurfaceUpdated>k__BackingField;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C694", Offset = "0xB2C694")]
		private UnityEvent <OnAnySurfaceUpdated>k__BackingField;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C6A4", Offset = "0xB2C6A4")]
		private UnityEvent <OnLoopEnd>k__BackingField;

		[Token(Token = "0x170003EF")]
		public Vector3 FrontPosition
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xE3634C", Offset = "0xE3634C", VA = "0xE3634C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003F0")]
		public Vector3 RearPosition
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xE36368", Offset = "0xE36368", VA = "0xE36368")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003F1")]
		public CurvySpline FrontSpline
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xE373C8", Offset = "0xE373C8", VA = "0xE373C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public CurvySpline RearSpline
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xE38414", Offset = "0xE38414", VA = "0xE38414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		public CurvySplineSegment FrontSegment
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0xE38438", Offset = "0xE38438", VA = "0xE38438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35138", Offset = "0xB35138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002396")]
			[Address(RVA = "0xE38440", Offset = "0xE38440", VA = "0xE38440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35148", Offset = "0xB35148")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public CurvySplineSegment RearSegment
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0xE38448", Offset = "0xE38448", VA = "0xE38448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35158", Offset = "0xB35158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002398")]
			[Address(RVA = "0xE38450", Offset = "0xE38450", VA = "0xE38450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35168", Offset = "0xB35168")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public RegisteredSplineMarker FrontMarker
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0xE38458", Offset = "0xE38458", VA = "0xE38458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35178", Offset = "0xB35178")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239A")]
			[Address(RVA = "0xE38460", Offset = "0xE38460", VA = "0xE38460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35188", Offset = "0xB35188")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public RegisteredSplineMarker RearMarker
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0xE38468", Offset = "0xE38468", VA = "0xE38468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35198", Offset = "0xB35198")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239C")]
			[Address(RVA = "0xE38470", Offset = "0xE38470", VA = "0xE38470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351A8", Offset = "0xB351A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public RoadSurface FrontSurface
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0xE38478", Offset = "0xE38478", VA = "0xE38478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351B8", Offset = "0xB351B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239E")]
			[Address(RVA = "0xE38480", Offset = "0xE38480", VA = "0xE38480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351C8", Offset = "0xB351C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public RoadSurface RearSurface
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0xE38488", Offset = "0xE38488", VA = "0xE38488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351D8", Offset = "0xB351D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xE38490", Offset = "0xE38490", VA = "0xE38490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351E8", Offset = "0xB351E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public float FrontDistance
		{
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xE3692C", Offset = "0xE3692C", VA = "0xE3692C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FA")]
		public float RearDistance
		{
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xE38498", Offset = "0xE38498", VA = "0xE38498")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FB")]
		public MovementDirection FrontDirection
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xE384B4", Offset = "0xE384B4", VA = "0xE384B4")]
			get
			{
				return default(MovementDirection);
			}
		}

		[Token(Token = "0x170003FC")]
		public MovementDirection RearDirection
		{
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0xE384D0", Offset = "0xE384D0", VA = "0xE384D0")]
			get
			{
				return default(MovementDirection);
			}
		}

		[Token(Token = "0x170003FD")]
		public Vector3 FrontForward
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xE363A0", Offset = "0xE363A0", VA = "0xE363A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003FE")]
		public Vector3 RearForward
		{
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0xE36384", Offset = "0xE36384", VA = "0xE36384")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003FF")]
		public PlayState CurrentPlayState
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xE384EC", Offset = "0xE384EC", VA = "0xE384EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB351F8", Offset = "0xB351F8")]
			get
			{
				return default(PlayState);
			}
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xE384F4", Offset = "0xE384F4", VA = "0xE384F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35208", Offset = "0xB35208")]
			private set
			{
			}
		}

		[Token(Token = "0x17000400")]
		public float Speed
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0xE384FC", Offset = "0xE384FC", VA = "0xE384FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xE3701C", Offset = "0xE3701C", VA = "0xE3701C")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public AutoMode AutoMode
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0xE38518", Offset = "0xE38518", VA = "0xE38518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35218", Offset = "0xB35218")]
			get
			{
				return default(AutoMode);
			}
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xE38520", Offset = "0xE38520", VA = "0xE38520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35228", Offset = "0xB35228")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public DecisionMode DecisionMode
		{
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0xE38528", Offset = "0xE38528", VA = "0xE38528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35238", Offset = "0xB35238")]
			get
			{
				return default(DecisionMode);
			}
			[Token(Token = "0x60023AE")]
			[Address(RVA = "0xE38530", Offset = "0xE38530", VA = "0xE38530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35248", Offset = "0xB35248")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public List<string> Decisions
		{
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0xE33AD0", Offset = "0xE33AD0", VA = "0xE33AD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		public HashSet<string> Blacklist
		{
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0xE38538", Offset = "0xE38538", VA = "0xE38538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000405")]
		public HashSet<string> PreferredMarkers
		{
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xE38540", Offset = "0xE38540", VA = "0xE38540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		public HashSet<string> DebugPreferredMarkers
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xE38548", Offset = "0xE38548", VA = "0xE38548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		public CurvySplineMoveEvent OnFrontSegmentUpdated
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xE38550", Offset = "0xE38550", VA = "0xE38550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35258", Offset = "0xB35258")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xE38558", Offset = "0xE38558", VA = "0xE38558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35268", Offset = "0xB35268")]
			private set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public CurvySplineMoveEvent OnRearSegmentUpdated
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xE38560", Offset = "0xE38560", VA = "0xE38560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35278", Offset = "0xB35278")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xE38568", Offset = "0xE38568", VA = "0xE38568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35288", Offset = "0xB35288")]
			private set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public MarkerUpdateEvent OnFrontMarkerReached
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xE38570", Offset = "0xE38570", VA = "0xE38570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35298", Offset = "0xB35298")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xE38578", Offset = "0xE38578", VA = "0xE38578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352A8", Offset = "0xB352A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public MarkerUpdateEvent OnRearMarkerReached
		{
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0xE38580", Offset = "0xE38580", VA = "0xE38580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352B8", Offset = "0xB352B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xE38588", Offset = "0xE38588", VA = "0xE38588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352C8", Offset = "0xB352C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public UnityEvent OnFrontSurfaceUpdated
		{
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xE38590", Offset = "0xE38590", VA = "0xE38590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352D8", Offset = "0xB352D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xE38598", Offset = "0xE38598", VA = "0xE38598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352E8", Offset = "0xB352E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public UnityEvent OnRearSurfaceUpdated
		{
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xE385A0", Offset = "0xE385A0", VA = "0xE385A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB352F8", Offset = "0xB352F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xE385A8", Offset = "0xE385A8", VA = "0xE385A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35308", Offset = "0xB35308")]
			private set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public UnityEvent OnAnySurfaceUpdated
		{
			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xE385B8", Offset = "0xE385B8", VA = "0xE385B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35318", Offset = "0xB35318")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xE385C0", Offset = "0xE385C0", VA = "0xE385C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35328", Offset = "0xB35328")]
			private set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public UnityEvent OnLoopEnd
		{
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xE385D0", Offset = "0xE385D0", VA = "0xE385D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35338", Offset = "0xB35338")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xE385D8", Offset = "0xE385D8", VA = "0xE385D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35348", Offset = "0xB35348")]
			private set
			{
			}
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xE385E8", Offset = "0xE385E8", VA = "0xE385E8", Slot = "7")]
		protected override void InitSubController()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xE38BB8", Offset = "0xE38BB8", VA = "0xE38BB8", Slot = "6")]
		public override void Deinit()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xE38CD4", Offset = "0xE38CD4", VA = "0xE38CD4", Slot = "8")]
		public override void UpdateSubController(float deltaTime)
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xE35A74", Offset = "0xE35A74", VA = "0xE35A74")]
		public void Pause()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xE35D54", Offset = "0xE35D54", VA = "0xE35D54")]
		public void Play()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xE393B0", Offset = "0xE393B0", VA = "0xE393B0")]
		public void Stop()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xE35650", Offset = "0xE35650", VA = "0xE35650")]
		public void JumpTo(RegisteredSplineMarker splineMarker)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xE393BC", Offset = "0xE393BC", VA = "0xE393BC")]
		public void JumpTo(CurvySplineSegment segment)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xE393C4", Offset = "0xE393C4", VA = "0xE393C4")]
		public void FilterSegments(CurvySplineSegment currentControlPoint, MovementDirection currentDirection, ReadOnlyCollection<CurvySplineSegment> connectedControlPoints, List<CurvySplineSegment> filteredSegments, List<RegisteredSplineMarker> filteredSplineMarkers)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xE397A0", Offset = "0xE397A0", VA = "0xE397A0")]
		private void OnFrontSegmentReached(CurvySplineMoveEventArgs moveEventArgs)
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xE39B94", Offset = "0xE39B94", VA = "0xE39B94")]
		private void OnRearSegmentReached(CurvySplineMoveEventArgs moveEventArgs)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xE39078", Offset = "0xE39078", VA = "0xE39078")]
		private void TryFixDistanceError()
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xE39A1C", Offset = "0xE39A1C", VA = "0xE39A1C")]
		private RoadSurface TryInvokeSurfaceChangeEvent(RoadSurface oldSurface, RoadSurface newSurface, UnityEvent surfaceEvent)
		{
			return null;
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xE39AD4", Offset = "0xE39AD4", VA = "0xE39AD4")]
		private CurvySplineSegment TryInvokeSegmentChangeEvent(CurvySplineSegment oldSegment, CurvySplineSegment newSegment, CurvySplineMoveEvent segmentEvent, CurvySplineMoveEventArgs moveEventArgs)
		{
			return null;
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xE38FD4", Offset = "0xE38FD4", VA = "0xE38FD4")]
		private void BeginFollowerUpdate(bool handleEvents = true, bool handlePlaystate = true)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xE39310", Offset = "0xE39310", VA = "0xE39310")]
		private void EndFollowerUpdate(bool handleEvents = true, bool handlePlaystate = true)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xE39E8C", Offset = "0xE39E8C", VA = "0xE39E8C")]
		public CarSplineController()
		{
		}
	}
	[Token(Token = "0x20009EC")]
	public interface IController<TConfig>
	{
		[Token(Token = "0x1700040F")]
		TConfig Config
		{
			[Token(Token = "0x60023D5")]
			get;
		}
	}
	[Token(Token = "0x20009ED")]
	public interface ISubController<TConfig, TMasterController> : IController<TConfig>
	{
		[Token(Token = "0x17000410")]
		TMasterController MasterController
		{
			[Token(Token = "0x60023D6")]
			get;
		}
	}
	[Token(Token = "0x20009EE")]
	public class MasterController<TConfig> : MonoBehaviour, IController<TConfig>
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C6B4", Offset = "0xB2C6B4")]
		[SerializeField]
		protected TConfig _config;

		[Token(Token = "0x17000411")]
		public TConfig Config
		{
			[Token(Token = "0x60023D7")]
			get
			{
				return (TConfig)null;
			}
		}

		[Token(Token = "0x60023D8")]
		public MasterController()
		{
		}
	}
	[Token(Token = "0x20009EF")]
	public abstract class SubController<TConfig, TMasterController> : MonoBehaviour, ISubController<TConfig, TMasterController>, IController<TConfig> where TMasterController : IController<TConfig>
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C700", Offset = "0xB2C700")]
		private TMasterController <MasterController>k__BackingField;

		[Token(Token = "0x17000412")]
		public TMasterController MasterController
		{
			[Token(Token = "0x60023D9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35358", Offset = "0xB35358")]
			get
			{
				return (TMasterController)null;
			}
			[Token(Token = "0x60023DA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35368", Offset = "0xB35368")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public TConfig Config
		{
			[Token(Token = "0x60023DB")]
			get
			{
				return (TConfig)null;
			}
		}

		[Token(Token = "0x60023DC")]
		public void Init(TMasterController masterController)
		{
		}

		[Token(Token = "0x60023DD")]
		public virtual void Deinit()
		{
		}

		[Token(Token = "0x60023DE")]
		protected abstract void InitSubController();

		[Token(Token = "0x60023DF")]
		public virtual void UpdateSubController(float deltaTime)
		{
		}

		[Token(Token = "0x60023E0")]
		protected SubController()
		{
		}
	}
	[Token(Token = "0x20009F0")]
	public class FrontBranchSelector : ConnectedControlPointsSelector, ISubController<CarConfig, CarSplineController>, IController<CarConfig>
	{
		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RearBranchSelector _rearBranchSelector;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<CurvySplineSegment, List<CurvySplineSegment>> _smartRandomizerState;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<CurvySplineSegment> _filteredSegments;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<RegisteredSplineMarker> _filteredSplineMarkers;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C710", Offset = "0xB2C710")]
		private List<string> <Decisions>k__BackingField;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C720", Offset = "0xB2C720")]
		private RegisteredSplineMarker <LastDecision>k__BackingField;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C730", Offset = "0xB2C730")]
		private CarSplineController <MasterController>k__BackingField;

		[Token(Token = "0x17000414")]
		public List<string> Decisions
		{
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xFCE3DC", Offset = "0xFCE3DC", VA = "0xFCE3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35378", Offset = "0xB35378")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xFCE3E4", Offset = "0xFCE3E4", VA = "0xFCE3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35388", Offset = "0xB35388")]
			private set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public RegisteredSplineMarker LastDecision
		{
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xFCE3EC", Offset = "0xFCE3EC", VA = "0xFCE3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35398", Offset = "0xB35398")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xFCE3F4", Offset = "0xFCE3F4", VA = "0xFCE3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353A8", Offset = "0xB353A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		private HashSet<string> PreferredMarkers
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xFCE3FC", Offset = "0xFCE3FC", VA = "0xFCE3FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		public CarSplineController MasterController
		{
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xFCE498", Offset = "0xFCE498", VA = "0xFCE498", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353B8", Offset = "0xB353B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xFCE4A0", Offset = "0xFCE4A0", VA = "0xFCE4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353C8", Offset = "0xB353C8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public CarConfig Config
		{
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xFCE444", Offset = "0xFCE444", VA = "0xFCE444", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xFCE4A8", Offset = "0xFCE4A8", VA = "0xFCE4A8", Slot = "4")]
		public override CurvySplineSegment SelectConnectedControlPoint(SplineController caller, CurvyConnection connection, CurvySplineSegment currentControlPoint)
		{
			return null;
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xFCEA08", Offset = "0xFCEA08", VA = "0xFCEA08")]
		public void Init(CarSplineController masterController, RearBranchSelector rearBranchSelector)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xFCE534", Offset = "0xFCE534", VA = "0xFCE534")]
		private CurvySplineSegment InternalSelectConnectedControlPoint(SplineController caller, CurvyConnection connection, CurvySplineSegment currentControlPoint)
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xFCEB74", Offset = "0xFCEB74", VA = "0xFCEB74")]
		private CurvySplineSegment FindMarkerForDecision()
		{
			return null;
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xFCEDEC", Offset = "0xFCEDEC", VA = "0xFCEDEC")]
		private CurvySplineSegment FindPreferredMarker()
		{
			return null;
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xFCEF40", Offset = "0xFCEF40", VA = "0xFCEF40")]
		public FrontBranchSelector()
		{
		}
	}
	[Token(Token = "0x20009F1")]
	public class RearBranchSelector : ConnectedControlPointsSelector, ISubController<CarConfig, CarSplineController>, IController<CarConfig>
	{
		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C740", Offset = "0xB2C740")]
		private List<CurvySplineSegment> <Decisions>k__BackingField;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C750", Offset = "0xB2C750")]
		private CarSplineController <MasterController>k__BackingField;

		[Token(Token = "0x17000419")]
		public List<CurvySplineSegment> Decisions
		{
			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xEBC6D8", Offset = "0xEBC6D8", VA = "0xEBC6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353D8", Offset = "0xB353D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023F0")]
			[Address(RVA = "0xEBC6E0", Offset = "0xEBC6E0", VA = "0xEBC6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353E8", Offset = "0xB353E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public CarSplineController MasterController
		{
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xEBC6E8", Offset = "0xEBC6E8", VA = "0xEBC6E8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB353F8", Offset = "0xB353F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xEBC6F0", Offset = "0xEBC6F0", VA = "0xEBC6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35408", Offset = "0xB35408")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public CarConfig Config
		{
			[Token(Token = "0x60023F3")]
			[Address(RVA = "0xEBC6F8", Offset = "0xEBC6F8", VA = "0xEBC6F8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xEBC74C", Offset = "0xEBC74C", VA = "0xEBC74C", Slot = "4")]
		public override CurvySplineSegment SelectConnectedControlPoint(SplineController caller, CurvyConnection connection, CurvySplineSegment currentControlPoint)
		{
			return null;
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xEBC96C", Offset = "0xEBC96C", VA = "0xEBC96C")]
		public void Init(CarSplineController masterController)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xEBCA20", Offset = "0xEBCA20", VA = "0xEBCA20")]
		public RearBranchSelector()
		{
		}
	}
	[Token(Token = "0x20009F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1CC7C", Offset = "0xB1CC7C")]
	public class RoadSurface : ScriptableObject
	{
		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C760", Offset = "0xB2C760")]
		[SerializeField]
		public float speedMultiplier;

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xECA2B8", Offset = "0xECA2B8", VA = "0xECA2B8")]
		public RoadSurface()
		{
		}
	}
	[Token(Token = "0x20009F3")]
	public class RoadSurfaceMarker : MonoBehaviour
	{
		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoadSurface _roadSurface;

		[Token(Token = "0x1700041C")]
		public RoadSurface RoadSurface
		{
			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xECA2C0", Offset = "0xECA2C0", VA = "0xECA2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xECA2C8", Offset = "0xECA2C8", VA = "0xECA2C8")]
		public RoadSurfaceMarker()
		{
		}
	}
	[Token(Token = "0x20009F4")]
	public class CarManager : SingletonMono<CarManager>, IPausable
	{
		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _playerCarName;

		[Token(Token = "0x1700041D")]
		public string PlayerCarName
		{
			[Token(Token = "0x60023FA")]
			[Address(RVA = "0xE35674", Offset = "0xE35674", VA = "0xE35674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023FB")]
			[Address(RVA = "0xE3567C", Offset = "0xE3567C", VA = "0xE3567C")]
			set
			{
			}
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xE35684", Offset = "0xE35684", VA = "0xE35684")]
		public void Init()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xE35688", Offset = "0xE35688", VA = "0xE35688")]
		public RegisteredCarController GetCar([Optional] string carName, bool logError = true)
		{
			return null;
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xE35794", Offset = "0xE35794", VA = "0xE35794", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xE35A80", Offset = "0xE35A80", VA = "0xE35A80", Slot = "6")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xE35D5C", Offset = "0xE35D5C", VA = "0xE35D5C")]
		public CarManager()
		{
		}
	}
	[Token(Token = "0x20009F5")]
	public class RegisteredCarController : MasterController<CarConfig>
	{
		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C7CC", Offset = "0xB2C7CC")]
		[SerializeField]
		private CarSplineController _carSplineController;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CarSpeedController _carSpeedController;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CarModelController _carModelController;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CarSoundController _carSoundController;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C848", Offset = "0xB2C848")]
		[SerializeField]
		private bool _autoInit;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool _autoUpdate;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C8A4", Offset = "0xB2C8A4")]
		private SoundService <SoundService>k__BackingField;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<SubController<CarConfig, RegisteredCarController>> subControllers;

		[Token(Token = "0x1700041E")]
		public SoundService SoundService
		{
			[Token(Token = "0x6002401")]
			[Address(RVA = "0xEBE0C4", Offset = "0xEBE0C4", VA = "0xEBE0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35418", Offset = "0xB35418")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002402")]
			[Address(RVA = "0xEBE0CC", Offset = "0xEBE0CC", VA = "0xEBE0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35428", Offset = "0xB35428")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public CarSplineController SplineController
		{
			[Token(Token = "0x6002403")]
			[Address(RVA = "0xEBE0D4", Offset = "0xEBE0D4", VA = "0xEBE0D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		public CarSpeedController SpeedController
		{
			[Token(Token = "0x6002404")]
			[Address(RVA = "0xEBE0DC", Offset = "0xEBE0DC", VA = "0xEBE0DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		public CarModelController ModelController
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0xEBE0E4", Offset = "0xEBE0E4", VA = "0xEBE0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000422")]
		public CarSoundController SoundController
		{
			[Token(Token = "0x6002406")]
			[Address(RVA = "0xEBE0EC", Offset = "0xEBE0EC", VA = "0xEBE0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xEBE0F4", Offset = "0xEBE0F4", VA = "0xEBE0F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xEBE368", Offset = "0xEBE368", VA = "0xEBE368")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xEBE4CC", Offset = "0xEBE4CC", VA = "0xEBE4CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xEBE6FC", Offset = "0xEBE6FC", VA = "0xEBE6FC")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xEBE7E0", Offset = "0xEBE7E0", VA = "0xEBE7E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xEBE290", Offset = "0xEBE290", VA = "0xEBE290")]
		public void InitControllers()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xEBE640", Offset = "0xEBE640", VA = "0xEBE640")]
		public void DeinitControllers()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xEBE70C", Offset = "0xEBE70C", VA = "0xEBE70C")]
		public void UpdateControllers()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xEBE884", Offset = "0xEBE884", VA = "0xEBE884")]
		public RegisteredCarController()
		{
		}
	}
	[Token(Token = "0x20009F6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1CCDC", Offset = "0xB1CCDC")]
	public class RegisteredSplineMarker : RegisteredAssetBase<RegisteredSplineMarker>, ICurvyMetadata, IRegisteredObject
	{
		[Token(Token = "0x20009F7")]
		public class OnMarkerReachedEvent : UnityEvent<RegisteredCarController>
		{
			[Token(Token = "0x600241A")]
			[Address(RVA = "0xD9F150", Offset = "0xD9F150", VA = "0xD9F150")]
			public OnMarkerReachedEvent()
			{
			}
		}

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string _markerName;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvySplineSegment _splineSegment;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _splineSegmentInitialized;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C8C4", Offset = "0xB2C8C4")]
		private OnMarkerReachedEvent <OnFrontMarkerReached>k__BackingField;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C8D4", Offset = "0xB2C8D4")]
		private OnMarkerReachedEvent <OnRearMarkerReached>k__BackingField;

		[Token(Token = "0x17000423")]
		public CurvySplineSegment SplineSegment
		{
			[Token(Token = "0x6002410")]
			[Address(RVA = "0xEC5E98", Offset = "0xEC5E98", VA = "0xEC5E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000424")]
		public OnMarkerReachedEvent OnFrontMarkerReached
		{
			[Token(Token = "0x6002411")]
			[Address(RVA = "0xEC5EA0", Offset = "0xEC5EA0", VA = "0xEC5EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35438", Offset = "0xB35438")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002412")]
			[Address(RVA = "0xEC5EA8", Offset = "0xEC5EA8", VA = "0xEC5EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35448", Offset = "0xB35448")]
			private set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public OnMarkerReachedEvent OnRearMarkerReached
		{
			[Token(Token = "0x6002413")]
			[Address(RVA = "0xEC5EB0", Offset = "0xEC5EB0", VA = "0xEC5EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35458", Offset = "0xB35458")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002414")]
			[Address(RVA = "0xEC5EB8", Offset = "0xEC5EB8", VA = "0xEC5EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35468", Offset = "0xB35468")]
			private set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public string RegisteredObjectName
		{
			[Token(Token = "0x6002416")]
			[Address(RVA = "0xEC6060", Offset = "0xEC6060", VA = "0xEC6060", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xEC5EC0", Offset = "0xEC5EC0", VA = "0xEC5EC0")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xEC5F14", Offset = "0xEC5F14", VA = "0xEC5F14")]
		public void TryInit()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xEC6068", Offset = "0xEC6068", VA = "0xEC6068")]
		public static string GetMarkerName(CurvySplineSegment splineSegment)
		{
			return null;
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xEC6118", Offset = "0xEC6118", VA = "0xEC6118")]
		public RegisteredSplineMarker()
		{
		}
	}
	[Token(Token = "0x20009F8")]
	public class CarTestScript : MonoBehaviour
	{
		[Token(Token = "0x20009F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CD3C", Offset = "0xB1CD3C")]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CarTestScript <>4__this;

			[Token(Token = "0x17000427")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002420")]
				[Address(RVA = "0x275E300", Offset = "0x275E300", VA = "0x275E300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002422")]
				[Address(RVA = "0x275E348", Offset = "0x275E348", VA = "0x275E348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600241D")]
			[Address(RVA = "0x275DB70", Offset = "0x275DB70", VA = "0x275DB70")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x275DB9C", Offset = "0x275DB9C", VA = "0x275DB9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0x275DBA0", Offset = "0x275DBA0", VA = "0x275DBA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x275E308", Offset = "0x275E308", VA = "0x275E308", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C8E4", Offset = "0xB2C8E4")]
		private RegisteredCarController _carController;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RegisteredSplineMarker _jumpTarget1;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RegisteredSplineMarker _jumpTarget2;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C950", Offset = "0xB2C950")]
		[SerializeField]
		private bool _testSpeedChanges;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _testBranching;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool _testJumping;

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xE3A484", Offset = "0xE3A484", VA = "0xE3A484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB35478", Offset = "0xB35478")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xE3A4FC", Offset = "0xE3A4FC", VA = "0xE3A4FC")]
		public CarTestScript()
		{
		}
	}
}
namespace HitchHiker.VR
{
	[Token(Token = "0x20009FA")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1CD4C", Offset = "0xB1CD4C")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material normal;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material selected;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material active;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool selfUpdating;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform fingerTip;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float maxRayLength;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject prevSelected;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float fingerTipDistance;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<Renderer> renderers;

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1592F34", Offset = "0x1592F34", VA = "0x1592F34")]
		private void Update()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x159303C", Offset = "0x159303C", VA = "0x159303C")]
		public void UpdateVisuals(RaycastResult result, bool buttonState)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1593368", Offset = "0x1593368", VA = "0x1593368")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x20009FB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1CD60", Offset = "0xB1CD60")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1CD60", Offset = "0xB1CD60")]
	public class HVRInputModuleHelper : MonoBehaviour
	{
		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CA1C", Offset = "0xB2CA1C")]
		private HVRInputModule <inputModule>k__BackingField;

		[Token(Token = "0x17000429")]
		public HVRInputModule inputModule
		{
			[Token(Token = "0x6002426")]
			[Address(RVA = "0xFD7A68", Offset = "0xFD7A68", VA = "0xFD7A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35528", Offset = "0xB35528")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002427")]
			[Address(RVA = "0xFD7A70", Offset = "0xFD7A70", VA = "0xFD7A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35538", Offset = "0xB35538")]
			private set
			{
			}
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xFD7A78", Offset = "0xFD7A78", VA = "0xFD7A78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xFD7AD4", Offset = "0xFD7AD4", VA = "0xFD7AD4")]
		private void Update()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xFD7AD8", Offset = "0xFD7AD8", VA = "0xFD7AD8")]
		private void CleanupCanvases()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xFD7C04", Offset = "0xFD7C04", VA = "0xFD7C04")]
		public HVRInputModuleHelper()
		{
		}
	}
	[Token(Token = "0x20009FC")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1CDD4", Offset = "0xB1CDD4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1CDD4", Offset = "0xB1CDD4")]
	public class HVRUIPointer_MAP : MonoBehaviour
	{
		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color NoInteractionColor;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color InteractionColor;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxRayLength;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CA2C", Offset = "0xB2CA2C")]
		public Transform ContactTransform;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CA64", Offset = "0xB2CA64")]
		public float ContactReferenceScale;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HVRUIPointer _pointer;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _hadHoverInPreviousFrame;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject lastHoverObject;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int ColorHash;

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xFD7C0C", Offset = "0xFD7C0C", VA = "0xFD7C0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xFD7E7C", Offset = "0xFD7E7C", VA = "0xFD7E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xFD80BC", Offset = "0xFD80BC", VA = "0xFD80BC")]
		private void CheckHoverChanged()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xFD7D84", Offset = "0xFD7D84", VA = "0xFD7D84")]
		private void UpdateVisuals(bool isHovering)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xFD82F0", Offset = "0xFD82F0", VA = "0xFD82F0")]
		private Ray GetRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xFD83A4", Offset = "0xFD83A4", VA = "0xFD83A4")]
		public HVRUIPointer_MAP()
		{
		}
	}
	[Token(Token = "0x20009FD")]
	public class OXRKalaSelectableElement : XRBaseInteractable, IPhysicsInteractable
	{
		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected KALASelectable selectable;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private HighlightProfile highlightProfile;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private bool disableCollidersWhenNotInteractable;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CACC", Offset = "0xB2CACC")]
		private IKALAHighlightable <highlightable>k__BackingField;

		[Token(Token = "0x1700042A")]
		protected IKALAHighlightable highlightable
		{
			[Token(Token = "0x6002433")]
			[Address(RVA = "0x2768C44", Offset = "0x2768C44", VA = "0x2768C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35548", Offset = "0xB35548")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002434")]
			[Address(RVA = "0x2768C4C", Offset = "0x2768C4C", VA = "0x2768C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35558", Offset = "0xB35558")]
			private set
			{
			}
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x2768C5C", Offset = "0x2768C5C", VA = "0x2768C5C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x2768D04", Offset = "0x2768D04", VA = "0x2768D04")]
		private void Update()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x2768E38", Offset = "0x2768E38", VA = "0x2768E38", Slot = "42")]
		protected virtual bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x2768FF0", Offset = "0x2768FF0", VA = "0x2768FF0", Slot = "32")]
		protected override void OnSelectEntered(XRBaseInteractor interactor)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x2769038", Offset = "0x2769038", VA = "0x2769038", Slot = "28")]
		protected override void OnHoverEntered(XRBaseInteractor interactor)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x276910C", Offset = "0x276910C", VA = "0x276910C", Slot = "30")]
		protected override void OnHoverExited(XRBaseInteractor interactor)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x27691E0", Offset = "0x27691E0", VA = "0x27691E0", Slot = "10")]
		public override bool IsHoverableBy(XRBaseInteractor interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x276925C", Offset = "0x276925C", VA = "0x276925C", Slot = "11")]
		public override bool IsSelectableBy(XRBaseInteractor interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x27692D8", Offset = "0x27692D8", VA = "0x27692D8", Slot = "39")]
		public void OnInteract()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x2769308", Offset = "0x2769308", VA = "0x2769308", Slot = "40")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x27693DC", Offset = "0x27693DC", VA = "0x27693DC", Slot = "41")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x2769494", Offset = "0x2769494", VA = "0x2769494")]
		public OXRKalaSelectableElement()
		{
		}
	}
	[Token(Token = "0x20009FE")]
	public class OXR_Interactable : MonoBehaviour, IPhysicsInteractable
	{
		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegisteredInteractable Interactable;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider collider;

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x276ED40", Offset = "0x276ED40", VA = "0x276ED40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x276EE60", Offset = "0x276EE60", VA = "0x276EE60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x276EF44", Offset = "0x276EF44", VA = "0x276EF44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x276EE40", Offset = "0x276EE40", VA = "0x276EE40")]
		private void OnLocalIsInteractableChanged(bool newLocalIsInteractable)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x276F028", Offset = "0x276F028", VA = "0x276F028", Slot = "5")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x276F044", Offset = "0x276F044", VA = "0x276F044", Slot = "6")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x276F060", Offset = "0x276F060", VA = "0x276F060", Slot = "4")]
		public void OnInteract()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x276F0AC", Offset = "0x276F0AC", VA = "0x276F0AC")]
		public OXR_Interactable()
		{
		}
	}
	[Token(Token = "0x20009FF")]
	public class OXRLockedBoxElement : OXRKalaSelectableElement
	{
		[Token(Token = "0x6002449")]
		[Address(RVA = "0x276949C", Offset = "0x276949C", VA = "0x276949C")]
		public OXRLockedBoxElement()
		{
		}
	}
	[Token(Token = "0x2000A00")]
	public class CurvedUIRayInteractionHandler : RayInteractionHandlerBase
	{
		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1593978", Offset = "0x1593978", VA = "0x1593978", Slot = "6")]
		public override void SetRayAndButton(Ray ray, bool buttonActive)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1593A18", Offset = "0x1593A18", VA = "0x1593A18", Slot = "4")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1593A1C", Offset = "0x1593A1C", VA = "0x1593A1C", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x1593A20", Offset = "0x1593A20", VA = "0x1593A20")]
		public CurvedUIRayInteractionHandler()
		{
		}
	}
	[Token(Token = "0x2000A01")]
	public interface IPhysicsInteractable
	{
		[Token(Token = "0x600244E")]
		void OnInteract();

		[Token(Token = "0x600244F")]
		void OnHoverEnter();

		[Token(Token = "0x6002450")]
		void OnHoverExit();
	}
	[Token(Token = "0x2000A02")]
	public class InteractablesRayInteractionHandler : RayInteractionHandlerBase
	{
		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask physicsInteractablesLayerMask;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CADC", Offset = "0xB2CADC")]
		private IPhysicsInteractable <hoveringInteractable>k__BackingField;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Ray ray;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool buttonActive;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool buttonReleased;

		[Token(Token = "0x1700042B")]
		public IPhysicsInteractable hoveringInteractable
		{
			[Token(Token = "0x6002451")]
			[Address(RVA = "0xEA9984", Offset = "0xEA9984", VA = "0xEA9984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35568", Offset = "0xB35568")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002452")]
			[Address(RVA = "0xEA998C", Offset = "0xEA998C", VA = "0xEA998C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35578", Offset = "0xB35578")]
			private set
			{
			}
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xEA9994", Offset = "0xEA9994", VA = "0xEA9994", Slot = "6")]
		public override void SetRayAndButton(Ray ray, bool buttonActive)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xEA99D8", Offset = "0xEA99D8", VA = "0xEA99D8", Slot = "4")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xEA9AE0", Offset = "0xEA9AE0", VA = "0xEA9AE0")]
		private void UpdateHoveredInteractable()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xEA9CE0", Offset = "0xEA9CE0", VA = "0xEA9CE0")]
		private void SetInteractable(IPhysicsInteractable interactable)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xEA9E40", Offset = "0xEA9E40", VA = "0xEA9E40", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xEA9B94", Offset = "0xEA9B94", VA = "0xEA9B94")]
		private static IPhysicsInteractable RaycastInteractable(Ray ray, int layerMask)
		{
			return null;
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xEA9E4C", Offset = "0xEA9E4C", VA = "0xEA9E4C")]
		public InteractablesRayInteractionHandler()
		{
		}
	}
	[Token(Token = "0x2000A03")]
	public class LookAtDeactivator : MonoBehaviour
	{
		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RegisteredInteractable interactable;

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xEB7494", Offset = "0xEB7494", VA = "0xEB7494")]
		public void DisableLookAtCapabilities()
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xEB74B4", Offset = "0xEB74B4", VA = "0xEB74B4")]
		public LookAtDeactivator()
		{
		}
	}
	[Token(Token = "0x2000A04")]
	public class OXRBlackBackgroundBox : MonoBehaviour
	{
		[Token(Token = "0x2000A05")]
		private struct MaterialMapping
		{
			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material originalMaterial;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material newMaterial;

			[Token(Token = "0x600246D")]
			[Address(RVA = "0xD99F88", Offset = "0xD99F88", VA = "0xD99F88")]
			public MaterialMapping(Material originalMaterial, Material newMaterial)
			{
			}
		}

		[Token(Token = "0x2000A06")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CE48", Offset = "0xB1CE48")]
		private sealed class <Fade>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OXRBlackBackgroundBox <>4__this;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startAlpha;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float endAlpha;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002471")]
				[Address(RVA = "0xD99F38", Offset = "0xD99F38", VA = "0xD99F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002473")]
				[Address(RVA = "0xD99F80", Offset = "0xD99F80", VA = "0xD99F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0xD99DE4", Offset = "0xD99DE4", VA = "0xD99DE4")]
			[DebuggerHidden]
			public <Fade>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600246F")]
			[Address(RVA = "0xD99E10", Offset = "0xD99E10", VA = "0xD99E10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002470")]
			[Address(RVA = "0xD99E14", Offset = "0xD99E14", VA = "0xD99E14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002472")]
			[Address(RVA = "0xD99F40", Offset = "0xD99F40", VA = "0xD99F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Renderer;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CAFC", Offset = "0xB2CAFC")]
		private float <currentAlpha>k__BackingField;

		[Token(Token = "0x4002176")]
		public const float DefaultFadeDuration = 0.5f;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int renderQueue;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float fadeDuration;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color color;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform activeCamera;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<GameObject, List<MaterialMapping>> originalRenderQueues;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int lockCounter;

		[Token(Token = "0x1700042C")]
		public float currentAlpha
		{
			[Token(Token = "0x600245C")]
			[Address(RVA = "0x276779C", Offset = "0x276779C", VA = "0x276779C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35588", Offset = "0xB35588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600245D")]
			[Address(RVA = "0x27677A4", Offset = "0x27677A4", VA = "0x27677A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35598", Offset = "0xB35598")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public int LockCounter
		{
			[Token(Token = "0x600245E")]
			[Address(RVA = "0x27677AC", Offset = "0x27677AC", VA = "0x27677AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x27677B4", Offset = "0x27677B4", VA = "0x27677B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x2767AE4", Offset = "0x2767AE4", VA = "0x2767AE4")]
		public void Show(float duration = 0.5f)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x2767848", Offset = "0x2767848", VA = "0x2767848")]
		public void Show(Color color, float duration = 0.5f)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x2767D44", Offset = "0x2767D44", VA = "0x2767D44")]
		public void Hide(float duration = 0.5f)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x276809C", Offset = "0x276809C", VA = "0x276809C")]
		public void HideResetingLock(float duration = 0.5f)
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x27680A4", Offset = "0x27680A4", VA = "0x27680A4")]
		public void AddObject(GameObject go)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x27682E0", Offset = "0x27682E0", VA = "0x27682E0")]
		public void RemoveObjects()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x276844C", Offset = "0x276844C", VA = "0x276844C")]
		public void RemoveObject(GameObject go)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x2767CB8", Offset = "0x2767CB8", VA = "0x2767CB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB355A8", Offset = "0xB355A8")]
		private IEnumerator Fade(float startAlpha, float endAlpha)
		{
			return null;
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x27685F4", Offset = "0x27685F4", VA = "0x27685F4")]
		private void SetMaterialColor()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x2768620", Offset = "0x2768620", VA = "0x2768620")]
		public void SetCameraToFollow(Transform cam)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x2768628", Offset = "0x2768628", VA = "0x2768628")]
		private void Update()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x27686C0", Offset = "0x27686C0", VA = "0x27686C0")]
		private void RepositionBackgroundBoxToCamera(Vector3 newPosition)
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x27687C4", Offset = "0x27687C4", VA = "0x27687C4")]
		public OXRBlackBackgroundBox()
		{
		}
	}
	[Token(Token = "0x2000A07")]
	public class OXRHeadCollisionController : MonoBehaviour
	{
		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggerIntersector triggerIntersector;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeDuration;

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x2768848", Offset = "0x2768848", VA = "0x2768848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x2768A9C", Offset = "0x2768A9C", VA = "0x2768A9C")]
		private void HandleOnIsInTriggerChanged(bool isInTrigger)
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x2768C28", Offset = "0x2768C28", VA = "0x2768C28")]
		public OXRHeadCollisionController()
		{
		}
	}
	[Token(Token = "0x2000A08")]
	public class OXRRayInteractor : XRRayInteractor
	{
		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2CB1C", Offset = "0xB2CB1C")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public XRInteractorLineVisual lineVisual;

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x27694A4", Offset = "0x27694A4", VA = "0x27694A4", Slot = "10")]
		public override void GetValidTargets(List<XRBaseInteractable> validTargets)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x2769544", Offset = "0x2769544", VA = "0x2769544")]
		public OXRRayInteractor()
		{
		}
	}
	[Token(Token = "0x2000A09")]
	public class OXRScreenFader : MonoBehaviour
	{
		[Token(Token = "0x2000A0A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CE58", Offset = "0xB1CE58")]
		private sealed class <Fade>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startAlpha;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float endAlpha;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OXRScreenFader <>4__this;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002490")]
				[Address(RVA = "0xD9A28C", Offset = "0xD9A28C", VA = "0xD9A28C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002492")]
				[Address(RVA = "0xD9A2D4", Offset = "0xD9A2D4", VA = "0xD9A2D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600248D")]
			[Address(RVA = "0xD99FBC", Offset = "0xD99FBC", VA = "0xD99FBC")]
			[DebuggerHidden]
			public <Fade>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600248E")]
			[Address(RVA = "0xD99FE8", Offset = "0xD99FE8", VA = "0xD99FE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600248F")]
			[Address(RVA = "0xD99FEC", Offset = "0xD99FEC", VA = "0xD99FEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002491")]
			[Address(RVA = "0xD9A294", Offset = "0xD9A294", VA = "0xD9A294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CB54", Offset = "0xB2CB54")]
		private static OXRScreenFader <instance>k__BackingField;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool fadeOnStart;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly float DefaultFadeDuration;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Color DefaultFadeColor;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int renderQueue;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float explicitFadeAlpha;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float animatedFadeAlpha;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float uiFadeAlpha;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float fadeDuration;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color fadeColor;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer fadeRenderer;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter fadeMesh;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material fadeMaterial;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isFading;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<object> lockingObjects;

		[Token(Token = "0x17000430")]
		public static OXRScreenFader instance
		{
			[Token(Token = "0x6002479")]
			[Address(RVA = "0x27695A8", Offset = "0x27695A8", VA = "0x27695A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35658", Offset = "0xB35658")]
			get
			{
				return null;
			}
			[Token(Token = "0x600247A")]
			[Address(RVA = "0x276960C", Offset = "0x276960C", VA = "0x276960C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35668", Offset = "0xB35668")]
			private set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public float currentAlpha
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x2769678", Offset = "0x2769678", VA = "0x2769678")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x2769710", Offset = "0x2769710", VA = "0x2769710")]
		private void Start()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x2769BF0", Offset = "0x2769BF0", VA = "0x2769BF0")]
		public void ClearFade(float duration, [Optional] object lockingObject)
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x2769D4C", Offset = "0x2769D4C", VA = "0x2769D4C")]
		public void ClearFade([Optional] object lockingObject)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x2769DC8", Offset = "0x2769DC8", VA = "0x2769DC8")]
		public void ClearFadeIgnoringLocks(float duration)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x2769E58", Offset = "0x2769E58", VA = "0x2769E58")]
		public void FadeToColor(float duration, Color color, [Optional] object lockingObject)
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x2769F90", Offset = "0x2769F90", VA = "0x2769F90")]
		public void FadeToColor(float duration, [Optional] object lockingObject)
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x276A020", Offset = "0x276A020", VA = "0x276A020")]
		public void FadeToColor(Color color, [Optional] object lockingObject)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x276A0CC", Offset = "0x276A0CC", VA = "0x276A0CC")]
		public void FadeToColor([Optional] object lockingObject)
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x276A150", Offset = "0x276A150", VA = "0x276A150")]
		private void OnLevelFinishedLoading(int level)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x276A158", Offset = "0x276A158", VA = "0x276A158")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x276A170", Offset = "0x276A170", VA = "0x276A170")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x276A348", Offset = "0x276A348", VA = "0x276A348")]
		public void SetUIFade(float level)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x276A488", Offset = "0x276A488", VA = "0x276A488")]
		public void SetExplicitFade(float level)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x2769CC0", Offset = "0x2769CC0", VA = "0x2769CC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB35678", Offset = "0xB35678")]
		private IEnumerator Fade(float startAlpha, float endAlpha)
		{
			return null;
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x276A374", Offset = "0x276A374", VA = "0x276A374")]
		private void SetMaterialAlpha()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x276A490", Offset = "0x276A490", VA = "0x276A490")]
		public OXRScreenFader()
		{
		}
	}
	[Token(Token = "0x2000A0B")]
	public abstract class RayInteractionHandlerBase : MonoBehaviour
	{
		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool activeOnlyDuringRide;

		[Token(Token = "0x6002493")]
		public abstract void OnUpdate();

		[Token(Token = "0x6002494")]
		public abstract void Reset();

		[Token(Token = "0x6002495")]
		public abstract void SetRayAndButton(Ray ray, bool buttonActive);

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xEBA41C", Offset = "0xEBA41C", VA = "0xEBA41C")]
		protected RayInteractionHandlerBase()
		{
		}
	}
	[Token(Token = "0x2000A0C")]
	public struct RaycastResult
	{
		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool wasHit;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isSelection;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public RaycastHit hit;
	}
	[Token(Token = "0x2000A0D")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1CE68", Offset = "0xB1CE68")]
	public class OXR_CurvedUILaserPointer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000A0E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CE7C", Offset = "0xB1CE7C")]
		private sealed class <>c
		{
			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__26_0;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GameObject> <>9__38_0;

			[Token(Token = "0x60024AC")]
			[Address(RVA = "0xD9A340", Offset = "0xD9A340", VA = "0xD9A340")]
			public <>c()
			{
			}

			[Token(Token = "0x60024AD")]
			[Address(RVA = "0xD9A348", Offset = "0xD9A348", VA = "0xD9A348")]
			internal void <Awake>b__26_0()
			{
			}

			[Token(Token = "0x60024AE")]
			[Address(RVA = "0xD9A34C", Offset = "0xD9A34C", VA = "0xD9A34C")]
			internal bool <CastRay>b__38_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputActionReference activateAction;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputActionReference useVisualAidAction;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CurvedUILaserBeam laserVisuals;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<RayInteractionHandlerBase> interactionHandlers;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OXR_CurvedUILaserPointer otherPointer;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float maxRayLength;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private OXR_CurvedUILaserPointer_ImpulseConfig impulseConfig;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform impulseTransform;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isActivateButtonPressed;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isVisualAidButtonPressed;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isVisualAidActive;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastTimeActivateButtonPressed;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastTimeVisualAidButtonPressed;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lastTimeObjectSelected;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool lastResultIsSelection;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastImpulsePosition;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion lastImpulseRotation;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float positionImpulse;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotationImpulse;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float totalImpulse;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float impulseEcho;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isPointerPrioritized;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CB94", Offset = "0xB2CB94")]
		private static OXR_CurvedUILaserPointer <lastPrioritizedPointer>k__BackingField;

		[Token(Token = "0x17000434")]
		public static OXR_CurvedUILaserPointer lastPrioritizedPointer
		{
			[Token(Token = "0x6002497")]
			[Address(RVA = "0x276C430", Offset = "0x276C430", VA = "0x276C430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35728", Offset = "0xB35728")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002498")]
			[Address(RVA = "0x276C47C", Offset = "0x276C47C", VA = "0x276C47C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35738", Offset = "0xB35738")]
			private set
			{
			}
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x276C4D0", Offset = "0x276C4D0", VA = "0x276C4D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x276C6B0", Offset = "0x276C6B0", VA = "0x276C6B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x276CA2C", Offset = "0x276CA2C", VA = "0x276CA2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x276CC04", Offset = "0x276CC04", VA = "0x276CC04")]
		private void OnActivatePerformed(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x276CC34", Offset = "0x276CC34", VA = "0x276CC34")]
		private void OnActivateCanceled(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x276CC3C", Offset = "0x276CC3C", VA = "0x276CC3C")]
		private void OnVisualAidPerformed(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x276CC48", Offset = "0x276CC48", VA = "0x276CC48")]
		private void OnVisualAidCanceled(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x276CC50", Offset = "0x276CC50", VA = "0x276CC50")]
		private void SetVisualAidActive(bool setVisualActive)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x276C908", Offset = "0x276C908", VA = "0x276C908")]
		private void ResetImpulseTracking()
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x276CCA0", Offset = "0x276CCA0", VA = "0x276CCA0")]
		private void UpdatePositionImpulse()
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x276CD48", Offset = "0x276CD48", VA = "0x276CD48")]
		private void UpdateRotationImpulse()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x276CE30", Offset = "0x276CE30", VA = "0x276CE30")]
		private bool CheckIfHighestPriorityPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x276CF48", Offset = "0x276CF48", VA = "0x276CF48")]
		public static RaycastResult CastRay(Ray myRay, float length)
		{
			return default(RaycastResult);
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x276D1E8", Offset = "0x276D1E8", VA = "0x276D1E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x276D79C", Offset = "0x276D79C", VA = "0x276D79C")]
		private static void DrawColoredWireSphere(Color color, Vector3 position, float radius)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x276D7E8", Offset = "0x276D7E8", VA = "0x276D7E8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x276DABC", Offset = "0x276DABC", VA = "0x276DABC")]
		public OXR_CurvedUILaserPointer()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x276DB4C", Offset = "0x276DB4C", VA = "0x276DB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35748", Offset = "0xB35748")]
		private void <Awake>b__26_1()
		{
		}
	}
	[Token(Token = "0x2000A0F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1CE8C", Offset = "0xB1CE8C")]
	public class OXR_CurvedUILaserPointer_ImpulseConfig : ScriptableObject
	{
		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float impulseDecayPerSecond;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float impulseThreshold;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float positionImpulseLimit;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float rotationImpulseLimit;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float meterPerImpulse;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float degreePerImpulse;

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x276DC74", Offset = "0x276DC74", VA = "0x276DC74")]
		public OXR_CurvedUILaserPointer_ImpulseConfig()
		{
		}
	}
	[Token(Token = "0x2000A10")]
	public class OXR_GhostHand : MonoBehaviour
	{
		[Token(Token = "0x2000A11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CEEC", Offset = "0xB1CEEC")]
		private sealed class <FadeAlpha>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OXR_GhostHand <>4__this;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetAlpha;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startAlpha>5__2;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <time>5__3;

			[Token(Token = "0x17000435")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BA")]
				[Address(RVA = "0xD9A670", Offset = "0xD9A670", VA = "0xD9A670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000436")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BC")]
				[Address(RVA = "0xD9A6B8", Offset = "0xD9A6B8", VA = "0xD9A6B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xD9A420", Offset = "0xD9A420", VA = "0xD9A420")]
			[DebuggerHidden]
			public <FadeAlpha>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0xD9A44C", Offset = "0xD9A44C", VA = "0xD9A44C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xD9A450", Offset = "0xD9A450", VA = "0xD9A450", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xD9A678", Offset = "0xD9A678", VA = "0xD9A678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2CC14", Offset = "0xB2CC14")]
		[SerializeField]
		private float seconds;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2CC58", Offset = "0xB2CC58")]
		[SerializeField]
		private float ghostValue;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isVisible;

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x276DE48", Offset = "0x276DE48", VA = "0x276DE48")]
		public void SetGhost(float t)
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x276DEC0", Offset = "0x276DEC0", VA = "0x276DEC0")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x276DED0", Offset = "0x276DED0", VA = "0x276DED0")]
		public void FadeVisible(bool visible, float fadeDuration)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x276E024", Offset = "0x276E024", VA = "0x276E024")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x276DEDC", Offset = "0x276DEDC", VA = "0x276DEDC")]
		private void StartInterpolation(float fadeDuration)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x276E060", Offset = "0x276E060", VA = "0x276E060")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB35758", Offset = "0xB35758")]
		private IEnumerator FadeAlpha(float targetAlpha, float duration)
		{
			return null;
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x276E0EC", Offset = "0x276E0EC", VA = "0x276E0EC")]
		public OXR_GhostHand()
		{
		}
	}
	[Token(Token = "0x2000A12")]
	public class OXR_GhostHandTrigger : MonoBehaviour
	{
		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OXR_GhostHand ghostHand;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerIntersector triggerIntersector;

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x276E104", Offset = "0x276E104", VA = "0x276E104")]
		private void Update()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x276E12C", Offset = "0x276E12C", VA = "0x276E12C")]
		public OXR_GhostHandTrigger()
		{
		}
	}
	[Token(Token = "0x2000A13")]
	public class OXR_HandAnimation : MonoBehaviour
	{
		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2CCA8", Offset = "0xB2CCA8")]
		[SerializeField]
		private InputActionReference primaryButton;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference secondaryButton;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputActionReference stickButton;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputActionReference gripButton;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputActionReference triggerButton;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputActionReference triggerTouchButton;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Animator m_animator;

		[Token(Token = "0x40021D7")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40021D8")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40021D9")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40021DA")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float anim_frames;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float gripState;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float triggerState;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float triggerCapState;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float thumbCapState;

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x276E134", Offset = "0x276E134", VA = "0x276E134")]
		private void Start()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x276E20C", Offset = "0x276E20C", VA = "0x276E20C")]
		private void Update()
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x276E34C", Offset = "0x276E34C", VA = "0x276E34C")]
		private void ReadVRControllerInputs(out float gripInputValue, out float triggerInputValue, out float triggerCapInputValue, out float thumbCapInputValue)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x276E420", Offset = "0x276E420", VA = "0x276E420")]
		private void AnimateHand(float inputValue, ref float inputState)
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x276E494", Offset = "0x276E494", VA = "0x276E494")]
		private float GetThumbCapTouchValue()
		{
			return default(float);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x276E55C", Offset = "0x276E55C", VA = "0x276E55C")]
		public OXR_HandAnimation()
		{
		}
	}
	[Token(Token = "0x2000A14")]
	public abstract class OXR_MaterialState : ScriptableObject
	{
		[Token(Token = "0x60024C5")]
		public abstract void SetInterpolatedValues(OXR_MaterialState stateA, OXR_MaterialState stateB, Renderer meshRenderer, float t);

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x276E868", Offset = "0x276E868", VA = "0x276E868")]
		protected OXR_MaterialState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000A15")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1CEFC", Offset = "0xB1CEFC")]
	public class OXR_HandMaterialState : OXR_MaterialState
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDefaultState;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2CD44", Offset = "0xB2CD44")]
		public float rimPower;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color rimColor;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color innerColor;

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x276E574", Offset = "0x276E574", VA = "0x276E574")]
		public void SetInterpolatedValues(OXR_HandMaterialState stateA, OXR_HandMaterialState stateB, Renderer meshRenderer, float t)
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x276E788", Offset = "0x276E788", VA = "0x276E788", Slot = "4")]
		public override void SetInterpolatedValues(OXR_MaterialState stateA, OXR_MaterialState stateB, Renderer meshRenderer, float t)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x276E860", Offset = "0x276E860", VA = "0x276E860")]
		public OXR_HandMaterialState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000A16")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1CF64", Offset = "0xB1CF64")]
	public class OXR_VRHandMaterialState : OXR_MaterialState
	{
		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float alpha;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rimAmount;

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x27738E0", Offset = "0x27738E0", VA = "0x27738E0")]
		public void SetInterpolatedValues(OXR_VRHandMaterialState stateA, OXR_VRHandMaterialState stateB, Renderer meshRenderer, float t)
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x27739D4", Offset = "0x27739D4", VA = "0x27739D4", Slot = "4")]
		public override void SetInterpolatedValues(OXR_MaterialState stateA, OXR_MaterialState stateB, Renderer meshRenderer, float t)
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x2773AAC", Offset = "0x2773AAC", VA = "0x2773AAC")]
		public OXR_VRHandMaterialState()
		{
		}
	}
	[Token(Token = "0x2000A17")]
	public class TriggerIntersector : MonoBehaviour
	{
		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CD5C", Offset = "0xB2CD5C")]
		private bool <isInTrigger>k__BackingField;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CD6C", Offset = "0xB2CD6C")]
		private float <intersectionDistance>k__BackingField;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CD7C", Offset = "0xB2CD7C")]
		private float <normalizedIntersectionDistance>k__BackingField;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _maxIntersectionDepth;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> _colliders;

		[Token(Token = "0x17000437")]
		public bool isInTrigger
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xDB5B0C", Offset = "0xDB5B0C", VA = "0xDB5B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35808", Offset = "0xB35808")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xDB5B14", Offset = "0xDB5B14", VA = "0xDB5B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35818", Offset = "0xB35818")]
			private set
			{
			}
		}

		[Token(Token = "0x17000438")]
		public float intersectionDistance
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xDB5B20", Offset = "0xDB5B20", VA = "0xDB5B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35828", Offset = "0xB35828")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xDB5B28", Offset = "0xDB5B28", VA = "0xDB5B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35838", Offset = "0xB35838")]
			private set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public float normalizedIntersectionDistance
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0xDB5B30", Offset = "0xDB5B30", VA = "0xDB5B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35848", Offset = "0xB35848")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xDB5B38", Offset = "0xDB5B38", VA = "0xDB5B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35858", Offset = "0xB35858")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043A")]
		public float maxIntersectionDepth
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0xDB5B40", Offset = "0xDB5B40", VA = "0xDB5B40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0xDB5B48", Offset = "0xDB5B48", VA = "0xDB5B48")]
			set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<bool> OnIsInTriggerChanged
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xDB5B50", Offset = "0xDB5B50", VA = "0xDB5B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35868", Offset = "0xB35868")]
			add
			{
			}
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xDB5BF0", Offset = "0xDB5BF0", VA = "0xDB5BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35878", Offset = "0xB35878")]
			remove
			{
			}
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xDB5C90", Offset = "0xDB5C90", VA = "0xDB5C90")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xDB5CE4", Offset = "0xDB5CE4", VA = "0xDB5CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xDB5D78", Offset = "0xDB5D78", VA = "0xDB5D78")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xDB5E00", Offset = "0xDB5E00", VA = "0xDB5E00")]
		private void Update()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xDB5EE4", Offset = "0xDB5EE4", VA = "0xDB5EE4")]
		private bool CalculateDistance(out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xDB624C", Offset = "0xDB624C", VA = "0xDB624C")]
		public TriggerIntersector()
		{
		}
	}
	[Token(Token = "0x2000A18")]
	public class OXR_Setup_MainMenu : OXR_SceneSetup
	{
		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x27724D8", Offset = "0x27724D8", VA = "0x27724D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x2772584", Offset = "0x2772584", VA = "0x2772584")]
		public OXR_Setup_MainMenu()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000A19")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1590AFC", Offset = "0x1590AFC", VA = "0x1590AFC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x1590B5C", Offset = "0x1590B5C", VA = "0x1590B5C", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1590B68", Offset = "0x1590B68", VA = "0x1590B68")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x2000A1A")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1590BCC", Offset = "0x1590BCC", VA = "0x1590BCC")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1590BFC", Offset = "0x1590BFC", VA = "0x1590BFC")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1590C18", Offset = "0x1590C18", VA = "0x1590C18")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1590C48", Offset = "0x1590C48", VA = "0x1590C48")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x1590C68", Offset = "0x1590C68", VA = "0x1590C68")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x1590C40", Offset = "0x1590C40", VA = "0x1590C40")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1590C84", Offset = "0x1590C84", VA = "0x1590C84")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1590CA0", Offset = "0x1590CA0", VA = "0x1590CA0")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1590CA8", Offset = "0x1590CA8", VA = "0x1590CA8")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1590CB0", Offset = "0x1590CB0", VA = "0x1590CB0")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1590CB8", Offset = "0x1590CB8", VA = "0x1590CB8")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1590CC0", Offset = "0x1590CC0", VA = "0x1590CC0")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x1590CC8", Offset = "0x1590CC8", VA = "0x1590CC8")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1590CD0", Offset = "0x1590CD0", VA = "0x1590CD0")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x1590CD8", Offset = "0x1590CD8", VA = "0x1590CD8")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x1590CE0", Offset = "0x1590CE0", VA = "0x1590CE0")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1590CE8", Offset = "0x1590CE8", VA = "0x1590CE8")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1590CF0", Offset = "0x1590CF0", VA = "0x1590CF0")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x60024F4")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60024F5")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000A1B")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CDBC", Offset = "0xB2CDBC")]
		private bool autoSwitchHands;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CE08", Offset = "0xB2CE08")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2CE08", Offset = "0xB2CE08")]
		private Transform leftHandOverride;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CE78", Offset = "0xB2CE78")]
		[SerializeField]
		private Transform rightHandOverride;

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x1590D4C", Offset = "0x1590D4C", VA = "0x1590D4C")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x15912F0", Offset = "0x15912F0", VA = "0x15912F0")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000A1C")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000A1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CFDC", Offset = "0xB1CFDC")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x1700043E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600250A")]
				[Address(RVA = "0x275F7FC", Offset = "0x275F7FC", VA = "0x275F7FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250C")]
				[Address(RVA = "0x275F844", Offset = "0x275F844", VA = "0x275F844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x275F6AC", Offset = "0x275F6AC", VA = "0x275F6AC")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0x275F6D8", Offset = "0x275F6D8", VA = "0x275F6D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0x275F6DC", Offset = "0x275F6DC", VA = "0x275F6DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x275F804", Offset = "0x275F804", VA = "0x275F804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x1700043B")]
		public Color CaretColor
		{
			[Token(Token = "0x6002500")]
			[Address(RVA = "0x1591D04", Offset = "0x1591D04", VA = "0x1591D04")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002501")]
			[Address(RVA = "0x1591D10", Offset = "0x1591D10", VA = "0x1591D10")]
			set
			{
			}
		}

		[Token(Token = "0x1700043C")]
		public Color SelectionColor
		{
			[Token(Token = "0x6002502")]
			[Address(RVA = "0x1591D1C", Offset = "0x1591D1C", VA = "0x1591D1C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002503")]
			[Address(RVA = "0x1591D28", Offset = "0x1591D28", VA = "0x1591D28")]
			set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6002504")]
			[Address(RVA = "0x1591D34", Offset = "0x1591D34", VA = "0x1591D34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002505")]
			[Address(RVA = "0x1591D50", Offset = "0x1591D50", VA = "0x1591D50")]
			set
			{
			}
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1591300", Offset = "0x1591300", VA = "0x1591300")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x159135C", Offset = "0x159135C", VA = "0x159135C")]
		private void Update()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x1591634", Offset = "0x1591634", VA = "0x1591634", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x1591A8C", Offset = "0x1591A8C", VA = "0x1591A8C", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x1591A14", Offset = "0x1591A14", VA = "0x1591A14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB359C8", Offset = "0xB359C8")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x15916F0", Offset = "0x15916F0", VA = "0x15916F0")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x159136C", Offset = "0x159136C", VA = "0x159136C")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x1591AC4", Offset = "0x1591AC4", VA = "0x1591AC4")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x1591D6C", Offset = "0x1591D6C", VA = "0x1591D6C")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000A1E")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.EventSystems.RaycastResult result;

		[Token(Token = "0x17000440")]
		public int CompoundEventMask
		{
			[Token(Token = "0x600250F")]
			[Address(RVA = "0x159368C", Offset = "0x159368C", VA = "0x159368C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000441")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6002510")]
			[Address(RVA = "0x1593790", Offset = "0x1593790", VA = "0x1593790", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000442")]
		public virtual int Depth
		{
			[Token(Token = "0x6002511")]
			[Address(RVA = "0x1593860", Offset = "0x1593860", VA = "0x1593860", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000443")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6002512")]
			[Address(RVA = "0x1593934", Offset = "0x1593934", VA = "0x1593934", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x1593384", Offset = "0x1593384", VA = "0x1593384")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x1593394", Offset = "0x1593394", VA = "0x1593394", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<UnityEngine.EventSystems.RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x2000A1F")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000A20")]
		public enum ControllerType
		{
			[Token(Token = "0x4002206")]
			NONE = -1,
			[Token(Token = "0x4002207")]
			VIVE
		}

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject Controller;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x159393C", Offset = "0x159393C", VA = "0x159393C")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000A21")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000A22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CFEC", Offset = "0xB1CFEC")]
		private sealed class <>c
		{
			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x600253B")]
			[Address(RVA = "0x275F8B0", Offset = "0x275F8B0", VA = "0x275F8B0")]
			public <>c()
			{
			}

			[Token(Token = "0x600253C")]
			[Address(RVA = "0x275F8B8", Offset = "0x275F8B8", VA = "0x275F8B8")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600253D")]
			[Address(RVA = "0x275F984", Offset = "0x275F984", VA = "0x275F984")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x600253E")]
			[Address(RVA = "0x275F9DC", Offset = "0x275F9DC", VA = "0x275F9DC")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x17000444")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x1594928", Offset = "0x1594928", VA = "0x1594928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0x159ACA4", Offset = "0x159ACA4", VA = "0x159ACA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1593A28", Offset = "0x1593A28", VA = "0x1593A28", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x1593B40", Offset = "0x1593B40", VA = "0x1593B40", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x159435C", Offset = "0x159435C", VA = "0x159435C", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1594764", Offset = "0x1594764", VA = "0x1594764")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1594738", Offset = "0x1594738", VA = "0x1594738")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x1594F24", Offset = "0x1594F24", VA = "0x1594F24", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<UnityEngine.EventSystems.RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1596258", Offset = "0x1596258", VA = "0x1596258", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1596968", Offset = "0x1596968", VA = "0x1596968", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1596F70", Offset = "0x1596F70", VA = "0x1596F70", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x1597484", Offset = "0x1597484", VA = "0x1597484", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1595C94", Offset = "0x1595C94", VA = "0x1595C94")]
		private void FlatRaycast(PointerEventData eventData, List<UnityEngine.EventSystems.RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1597DE4", Offset = "0x1597DE4", VA = "0x1597DE4")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x1593DD4", Offset = "0x1593DD4", VA = "0x1593DD4")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x15998BC", Offset = "0x15998BC", VA = "0x15998BC")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x159833C", Offset = "0x159833C", VA = "0x159833C")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x1598F10", Offset = "0x1598F10", VA = "0x1598F10")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x1599974", Offset = "0x1599974", VA = "0x1599974")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x159A2C0", Offset = "0x159A2C0", VA = "0x159A2C0")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x159685C", Offset = "0x159685C", VA = "0x159685C")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x15968C4", Offset = "0x15968C4", VA = "0x15968C4")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x159A318", Offset = "0x159A318", VA = "0x159A318")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x159A368", Offset = "0x159A368", VA = "0x159A368", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x15956D4", Offset = "0x15956D4", VA = "0x15956D4")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x159A380", Offset = "0x159A380", VA = "0x159A380")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x159A9CC", Offset = "0x159A9CC", VA = "0x159A9CC")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x159AB70", Offset = "0x159AB70", VA = "0x159AB70")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x1593BCC", Offset = "0x1593BCC", VA = "0x1593BCC")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x159ACAC", Offset = "0x159ACAC", VA = "0x159ACAC")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x159ACEC", Offset = "0x159ACEC", VA = "0x159ACEC")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x159AD74", Offset = "0x159AD74", VA = "0x159AD74")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x159AE5C", Offset = "0x159AE5C", VA = "0x159AE5C")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x1594990", Offset = "0x1594990", VA = "0x1594990")]
		public void Click()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x1599F94", Offset = "0x1599F94", VA = "0x1599F94")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x159B350", Offset = "0x159B350", VA = "0x159B350")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x159B504", Offset = "0x159B504", VA = "0x159B504")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x2000A23")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB1CFFC", Offset = "0xB1CFFC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1CFFC", Offset = "0xB1CFFC")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000A24")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4002233")]
			CYLINDER,
			[Token(Token = "0x4002234")]
			RING,
			[Token(Token = "0x4002235")]
			SPHERE,
			[Token(Token = "0x4002236")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4002221")]
		public const string Version = "3.2";

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x17000446")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x111B140", Offset = "0x111B140", VA = "0x111B140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6002552")]
			[Address(RVA = "0x111CA84", Offset = "0x111CA84", VA = "0x111CA84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000448")]
		public int Angle
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0x111CA8C", Offset = "0x111CA8C", VA = "0x111CA8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002554")]
			[Address(RVA = "0x111CA94", Offset = "0x111CA94", VA = "0x111CA94")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public float Quality
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0x111CAA8", Offset = "0x111CAA8", VA = "0x111CAA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002556")]
			[Address(RVA = "0x111CAB0", Offset = "0x111CAB0", VA = "0x111CAB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0x111CACC", Offset = "0x111CACC", VA = "0x111CACC")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6002558")]
			[Address(RVA = "0x111CAD4", Offset = "0x111CAD4", VA = "0x111CAD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public int VerticalAngle
		{
			[Token(Token = "0x6002559")]
			[Address(RVA = "0x111CAF4", Offset = "0x111CAF4", VA = "0x111CAF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600255A")]
			[Address(RVA = "0x111CAFC", Offset = "0x111CAFC", VA = "0x111CAFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public float RingFill
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x111CB1C", Offset = "0x111CB1C", VA = "0x111CB1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600255C")]
			[Address(RVA = "0x111CB24", Offset = "0x111CB24", VA = "0x111CB24")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public float SavedRadius
		{
			[Token(Token = "0x600255D")]
			[Address(RVA = "0x111BCB0", Offset = "0x111BCB0", VA = "0x111BCB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700044E")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x600255E")]
			[Address(RVA = "0x111CB40", Offset = "0x111CB40", VA = "0x111CB40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600255F")]
			[Address(RVA = "0x111CB48", Offset = "0x111CB48", VA = "0x111CB48")]
			set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6002560")]
			[Address(RVA = "0x111CB68", Offset = "0x111CB68", VA = "0x111CB68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002561")]
			[Address(RVA = "0x111CB70", Offset = "0x111CB70", VA = "0x111CB70")]
			set
			{
			}
		}

		[Token(Token = "0x17000450")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6002562")]
			[Address(RVA = "0x111CB9C", Offset = "0x111CB9C", VA = "0x111CB9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002563")]
			[Address(RVA = "0x111CBA4", Offset = "0x111CBA4", VA = "0x111CBA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public bool Interactable
		{
			[Token(Token = "0x6002564")]
			[Address(RVA = "0x111CBD0", Offset = "0x111CBD0", VA = "0x111CBD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002565")]
			[Address(RVA = "0x111CBD8", Offset = "0x111CBD8", VA = "0x111CBD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6002566")]
			[Address(RVA = "0x111CBE4", Offset = "0x111CBE4", VA = "0x111CBE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002567")]
			[Address(RVA = "0x111CBEC", Offset = "0x111CBEC", VA = "0x111CBEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6002568")]
			[Address(RVA = "0x111CBF8", Offset = "0x111CBF8", VA = "0x111CBF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002569")]
			[Address(RVA = "0x111CC00", Offset = "0x111CC00", VA = "0x111CC00")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB35C40", Offset = "0xB35C40")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x600256A")]
			[Address(RVA = "0x111CCF4", Offset = "0x111CCF4", VA = "0x111CCF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600256B")]
			[Address(RVA = "0x111CCFC", Offset = "0x111CCFC", VA = "0x111CCFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x600256D")]
			[Address(RVA = "0x111CDB8", Offset = "0x111CDB8", VA = "0x111CDB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000456")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x600256F")]
			[Address(RVA = "0x111CF94", Offset = "0x111CF94", VA = "0x111CF94")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6002570")]
			[Address(RVA = "0x111CFF0", Offset = "0x111CFF0", VA = "0x111CFF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6002574")]
			[Address(RVA = "0x111D3FC", Offset = "0x111D3FC", VA = "0x111D3FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002575")]
			[Address(RVA = "0x111D468", Offset = "0x111D468", VA = "0x111D468")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6002576")]
			[Address(RVA = "0x111D4DC", Offset = "0x111D4DC", VA = "0x111D4DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002577")]
			[Address(RVA = "0x111D548", Offset = "0x111D548", VA = "0x111D548")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6002578")]
			[Address(RVA = "0x111D5C4", Offset = "0x111D5C4", VA = "0x111D5C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002579")]
			[Address(RVA = "0x111D630", Offset = "0x111D630", VA = "0x111D630")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x600257A")]
			[Address(RVA = "0x111D6AC", Offset = "0x111D6AC", VA = "0x111D6AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x111B0B4", Offset = "0x111B0B4", VA = "0x111B0B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x111B20C", Offset = "0x111B20C", VA = "0x111B20C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x111B700", Offset = "0x111B700", VA = "0x111B700")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x111B7AC", Offset = "0x111B7AC", VA = "0x111B7AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x111B858", Offset = "0x111B858", VA = "0x111B858")]
		private void Update()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x111B984", Offset = "0x111B984", VA = "0x111B984")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x111BBC8", Offset = "0x111BBC8", VA = "0x111BBC8")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x111BCE0", Offset = "0x111BCE0", VA = "0x111BCE0")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x111BDC8", Offset = "0x111BDC8", VA = "0x111BDC8")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x111BEB8", Offset = "0x111BEB8", VA = "0x111BEB8")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x111C054", Offset = "0x111C054", VA = "0x111C054")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x111C414", Offset = "0x111C414", VA = "0x111C414")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x111C44C", Offset = "0x111C44C", VA = "0x111C44C")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x111C50C", Offset = "0x111C50C", VA = "0x111C50C")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x111C6F0", Offset = "0x111C6F0", VA = "0x111C6F0")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x111B5C8", Offset = "0x111B5C8", VA = "0x111B5C8")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x111C878", Offset = "0x111C878", VA = "0x111C878")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x111C9E4", Offset = "0x111C9E4", VA = "0x111C9E4")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x111CD00", Offset = "0x111CD00", VA = "0x111CD00")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x111CECC", Offset = "0x111CECC", VA = "0x111CECC")]
		public void Click()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x111D054", Offset = "0x111D054", VA = "0x111D054")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x111D15C", Offset = "0x111D15C", VA = "0x111D15C")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x111D2C8", Offset = "0x111D2C8", VA = "0x111D2C8")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x111D718", Offset = "0x111D718", VA = "0x111D718")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000A25")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CF94", Offset = "0xB2CF94")]
		public bool DoNotTesselate;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float[] m_weights;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[HideInInspector]
		private Vector4 savedTextUV0;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector4 _uv0;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Vector4 _uv1;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Vector3 _pos;

		[Token(Token = "0x1700045B")]
		private bool tesselationRequired
		{
			[Token(Token = "0x600257C")]
			[Address(RVA = "0x111FF0C", Offset = "0x111FF0C", VA = "0x111FF0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600257D")]
			[Address(RVA = "0x111FF14", Offset = "0x111FF14", VA = "0x111FF14")]
			set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0x1122BE4", Offset = "0x1122BE4", VA = "0x1122BE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002591")]
			[Address(RVA = "0x1122BD8", Offset = "0x1122BD8", VA = "0x1122BD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6002592")]
			[Address(RVA = "0x1122BEC", Offset = "0x1122BEC", VA = "0x1122BEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002593")]
			[Address(RVA = "0x1122BF4", Offset = "0x1122BF4", VA = "0x1122BF4")]
			set
			{
			}
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x111FF20", Offset = "0x111FF20", VA = "0x111FF20", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x1120018", Offset = "0x1120018", VA = "0x1120018", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x1120328", Offset = "0x1120328", VA = "0x1120328", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x11209B4", Offset = "0x11209B4", VA = "0x11209B4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1120B6C", Offset = "0x1120B6C", VA = "0x1120B6C")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1120B78", Offset = "0x1120B78", VA = "0x1120B78")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x1120C18", Offset = "0x1120C18", VA = "0x1120C18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x1121178", Offset = "0x1121178", VA = "0x1121178", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x111E734", Offset = "0x111E734", VA = "0x111E734")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x1121890", Offset = "0x1121890", VA = "0x1121890")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x1121990", Offset = "0x1121990", VA = "0x1121990")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x11201F4", Offset = "0x11201F4", VA = "0x11201F4")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x1121E04", Offset = "0x1121E04", VA = "0x1121E04")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x1121C34", Offset = "0x1121C34", VA = "0x1121C34")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x11223C4", Offset = "0x11223C4", VA = "0x11223C4")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x112212C", Offset = "0x112212C", VA = "0x112212C")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x112289C", Offset = "0x112289C", VA = "0x112289C")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x111BBBC", Offset = "0x111BBBC", VA = "0x111BBBC")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1122C00", Offset = "0x1122C00", VA = "0x1122C00")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000A26")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1122D3C", Offset = "0x1122D3C", VA = "0x1122D3C")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000A27")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000A28")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000A29")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000A2A")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 savedSize;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 savedUp;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 savedPos;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool Dirty;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool curvingRequired;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool tesselationRequired;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool quitting;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] vertices;

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x111D75C", Offset = "0x111D75C", VA = "0x111D75C")]
		private void Start()
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x111D818", Offset = "0x111D818", VA = "0x111D818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x111DB5C", Offset = "0x111DB5C", VA = "0x111DB5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x111DCF8", Offset = "0x111DCF8", VA = "0x111DCF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x111DD04", Offset = "0x111DD04", VA = "0x111DD04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x111E4DC", Offset = "0x111E4DC", VA = "0x111E4DC")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x111F120", Offset = "0x111F120", VA = "0x111F120")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x111EA48", Offset = "0x111EA48", VA = "0x111EA48")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x111D9EC", Offset = "0x111D9EC", VA = "0x111D9EC")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x111EBBC", Offset = "0x111EBBC", VA = "0x111EBBC")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x111E208", Offset = "0x111E208", VA = "0x111E208")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x111F170", Offset = "0x111F170", VA = "0x111F170")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x111F18C", Offset = "0x111F18C", VA = "0x111F18C")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x111F198", Offset = "0x111F198", VA = "0x111F198")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000A2B")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D0A0", Offset = "0xB1D0A0")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x17000461")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025BF")]
				[Address(RVA = "0x275FB84", Offset = "0x275FB84", VA = "0x275FB84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000462")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025C1")]
				[Address(RVA = "0x275FBCC", Offset = "0x275FBCC", VA = "0x275FBCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x275FA34", Offset = "0x275FA34", VA = "0x275FA34")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x275FA60", Offset = "0x275FA60", VA = "0x275FA60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x275FA64", Offset = "0x275FA64", VA = "0x275FA64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x275FB8C", Offset = "0x275FB8C", VA = "0x275FB8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x1700045E")]
		public Color CaretColor
		{
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x111FE94", Offset = "0x111FE94", VA = "0x111FE94")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x111FEA0", Offset = "0x111FEA0", VA = "0x111FEA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public Color SelectionColor
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x111FEAC", Offset = "0x111FEAC", VA = "0x111FEAC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x111FEB8", Offset = "0x111FEB8", VA = "0x111FEB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x111FEC4", Offset = "0x111FEC4", VA = "0x111FEC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x111FEE0", Offset = "0x111FEE0", VA = "0x111FEE0")]
			set
			{
			}
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x111F268", Offset = "0x111F268", VA = "0x111F268")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x111F6AC", Offset = "0x111F6AC", VA = "0x111F6AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x111F964", Offset = "0x111F964", VA = "0x111F964", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x111FDDC", Offset = "0x111FDDC", VA = "0x111FDDC", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x111FD64", Offset = "0x111FD64", VA = "0x111FD64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB35A78", Offset = "0xB35A78")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x111FA20", Offset = "0x111FA20", VA = "0x111FA20")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x111F6BC", Offset = "0x111F6BC", VA = "0x111F6BC")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x111FE14", Offset = "0x111FE14", VA = "0x111FE14")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x111F318", Offset = "0x111F318", VA = "0x111F318")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x111FEFC", Offset = "0x111FEFC", VA = "0x111FEFC")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000A2D")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x111ECFC", Offset = "0x111ECFC", VA = "0x111ECFC")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x111FF04", Offset = "0x111FF04", VA = "0x111FF04")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x2000A2E")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB1D0C0", Offset = "0xB1D0C0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB1D0C0", Offset = "0xB1D0C0")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x15B7690", Offset = "0x15B7690", VA = "0x15B7690")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace FlyingWormConsole3
{
	[Token(Token = "0x2000A2F")]
	public class ConsoleProRemoteServer : MonoBehaviour
	{
		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useNATPunch;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int port;

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x158BEE8", Offset = "0x158BEE8", VA = "0x158BEE8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x158BF5C", Offset = "0x158BF5C", VA = "0x158BF5C")]
		public ConsoleProRemoteServer()
		{
		}
	}
}
